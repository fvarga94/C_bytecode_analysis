rest_is_empty	CALL,3:FOR,1:WHILE,1:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	82
0x4002637	              0x55	                                push rbp	       784	sequencer.c	FUNCTION_27
0x4002638	          0x4889e5	                            mov rbp, rsp	       784	sequencer.c	FUNCTION_27
0x400263b	        0x4883ec20	                           sub rsp, 0x20	       784	sequencer.c	FUNCTION_27
0x400263f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       784	sequencer.c	FUNCTION_27
0x4002643	          0x8975e4	             mov dword [rbp - 0x1c], esi	       784	sequencer.c	FUNCTION_27
0x4002646	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002649	          0x8945f0	             mov dword [rbp - 0x10], eax	       789	sequencer.c	FUNCTION_27	FOR_1
0x400264c	      0xe9d3000000	                           jmp 0x4002724	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002651	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002655	        0x488b5008	                mov rdx, qword [rax + 8]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002659	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x400265c	            0x4898	                                    cdqe	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x400265e	          0x4829c2	                            sub rdx, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002661	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002665	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002669	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x400266c	            0x4898	                                    cdqe	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x400266e	          0x4801c8	                            add rax, rcx	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002671	      0xbe0a000000	                            mov esi, 0xa	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002676	          0x4889c7	                            mov rdi, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002679	      0xe800000000	                          call 0x400267e	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x400267e	        0x488945f8	                mov qword [rbp - 8], rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4002682	      0x48837df800	                  cmp qword [rbp - 8], 0	       791	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4002687	            0x7417	                            je 0x40026a0	       791	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4002689	        0x488b55f8	                mov rdx, qword [rbp - 8]	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x400268d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4002691	        0x488b4010	            mov rax, qword [rax + 0x10] 	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4002695	          0x4829c2	                            sub rdx, rax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4002698	          0x4889d0	                            mov rax, rdx	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x400269b	          0x8945f4	              mov dword [rbp - 0xc], eax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x400269e	            0xeb0b	                           jmp 0x40026ab	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40026a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x40026a4	        0x488b4008	                mov rax, qword [rax + 8]	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x40026a8	          0x8945f4	              mov dword [rbp - 0xc], eax	       794	sequencer.c	FUNCTION_27	FOR_1	ELSE_1
0x40026ab	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026ae	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026b1	            0x4898	                                    cdqe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026b3	        0x4883f80e	                            cmp rax, 0xe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026b7	            0x765f	                           jbe 0x4002718	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026bd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026c1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026c4	            0x4898	                                    cdqe	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026c6	          0x4801d0	                            add rax, rdx	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026c9	      0xbe00000000	                              mov esi, 0	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026ce	          0x4889c7	                            mov rdi, rax	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026d1	      0xe800000000	                          call 0x40026d6	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x40026d6	            0x85c0	                           test eax, eax	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026d8	            0x743e	                            je 0x4002718	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40026da	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       798	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x40026dd	          0x8945f0	             mov dword [rbp - 0x10], eax	       798	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x40026e0	            0xeb3e	                           jmp 0x4002720	       799	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x40026e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026e6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026ea	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026ed	          0x8d5001	                      lea edx, [rax + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026f0	          0x8955f0	             mov dword [rbp - 0x10], edx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026f3	            0x4898	                                    cdqe	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026f5	          0x4801c8	                            add rax, rcx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026f8	           0xfb600	                   movzx eax, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026fb	           0xfb6c0	                           movzx eax, al	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40026fe	            0x4898	                                    cdqe	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4002700	     0xfb680000000	                   movzx eax, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4002707	           0xfb6c0	                           movzx eax, al	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400270a	          0x83e001	                              and eax, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400270d	            0x85c0	                           test eax, eax	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400270f	            0x7507	                           jne 0x4002718	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4002711	      0xb800000000	                              mov eax, 0	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4002716	            0xeb28	                           jmp 0x4002740	       803	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4002718	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x400271b	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x400271e	            0x7cc2	                            jl 0x40026e2	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4002720	        0x8345f001	               add dword [rbp - 0x10], 1	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002724	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002727	          0x4863d0	                         movsxd rdx, eax	       789	sequencer.c	FUNCTION_27	FOR_1
0x400272a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       789	sequencer.c	FUNCTION_27	FOR_1
0x400272e	        0x488b4008	                mov rax, qword [rax + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002732	          0x4839c2	                            cmp rdx, rax	       789	sequencer.c	FUNCTION_27	FOR_1
0x4002735	     0xf8216ffffff	                            jb 0x4002651	       789	sequencer.c	FUNCTION_27	FOR_1
0x400273b	      0xb801000000	                              mov eax, 1	       806	sequencer.c	FUNCTION_27
0x4002740	              0xc9	                                   leave	       807	sequencer.c	FUNCTION_27
0x4002741	              0xc3	                                     ret	       807	sequencer.c	FUNCTION_27
read_env_script	CALL,7:FOR,2:WHILE,0:ELSE,2:DO,0:IF,4:SWITCH,0:functions,0	105
0x40020b7	              0x55	                                push rbp	       647	sequencer.c	FUNCTION_24
0x40020b8	          0x4889e5	                            mov rbp, rsp	       647	sequencer.c	FUNCTION_24
0x40020bb	        0x4883ec50	                           sub rsp, 0x50	       647	sequencer.c	FUNCTION_24
0x40020bf	        0x48897db8	             mov qword [rbp - 0x48], rdi	       647	sequencer.c	FUNCTION_24
0x40020c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       647	sequencer.c	FUNCTION_24
0x40020cc	        0x488945f8	                mov qword [rbp - 8], rax	       647	sequencer.c	FUNCTION_24
0x40020d0	            0x31c0	                            xor eax, eax	       647	sequencer.c	FUNCTION_24
0x40020d2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       648	sequencer.c	FUNCTION_24
0x40020da	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       648	sequencer.c	FUNCTION_24
0x40020e2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       648	sequencer.c	FUNCTION_24
0x40020ea	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       649	sequencer.c	FUNCTION_24
0x40020f1	      0xe8f1e6ffff	      call sym.rebase_path_author_script	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40020f6	          0x4889c1	                            mov rcx, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40020f9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x40020fd	      0xba00010000	                          mov edx, 0x100	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002102	          0x4889ce	                            mov rsi, rcx	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002105	          0x4889c7	                            mov rdi, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002108	      0xe800000000	                          call 0x400210d	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x400210d	          0x4885c0	                           test rax, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002110	            0x7f0a	                            jg 0x400211c	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002112	      0xb8ffffffff	                     mov eax, 0xffffffff	       653	sequencer.c	FUNCTION_24	IF_1
0x4002117	      0xe91c010000	                           jmp 0x4002238	       653	sequencer.c	FUNCTION_24	IF_1
0x400211c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002120	        0x488945d8	             mov qword [rbp - 0x28], rax	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002124	      0xe9b7000000	                           jmp 0x40021e0	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002129	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x400212d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x4002131	      0xbe00000000	                              mov esi, 0	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x4002136	          0x4889c7	                            mov rdi, rax	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x4002139	      0xe80ddfffff	                    call sym.skip_prefix	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x400213e	            0x85c0	                           test eax, eax	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x4002140	            0x743e	                            je 0x4002180	       656	sequencer.c	FUNCTION_24	FOR_1	IF_2	CALL_3
0x4002142	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002146	          0x4889c2	                            mov rdx, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002149	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x400214d	          0x4829c2	                            sub rdx, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002150	          0x4889d0	                            mov rax, rdx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002153	          0x4889c7	                            mov rdi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002156	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x400215a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x400215e	          0x4829d0	                            sub rax, rdx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002161	          0x4889c6	                            mov rsi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002164	        0x488d45e0	                   lea rax, [rbp - 0x20]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002168	    0x41b801000000	                              mov r8d, 1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x400216e	      0xb900000000	                              mov ecx, 0	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002173	          0x4889fa	                            mov rdx, rdi	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002176	          0x4889c7	                            mov rdi, rax	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002179	      0xe800000000	                          call 0x400217e	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x400217e	            0xeb5b	                           jmp 0x40021db	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002180	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002184	           0xfb600	                   movzx eax, byte [rax]	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002187	            0x3c27	                            cmp al, 0x27	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002189	            0x753a	                           jne 0x40021c5	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400218b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400218f	        0x488d50ff	                      lea rdx, [rax - 1]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002193	        0x488955d8	             mov qword [rbp - 0x28], rdx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002197	          0x4889c2	                            mov rdx, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400219a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x400219e	          0x4829c2	                            sub rdx, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021a1	          0x4889d0	                            mov rax, rdx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021a4	          0x4889c6	                            mov rsi, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021ab	    0x41b800000000	                              mov r8d, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021b1	      0xb900000000	                              mov ecx, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021b6	      0xba01000000	                              mov edx, 1	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021bb	          0x4889c7	                            mov rdi, rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021be	      0xe800000000	                          call 0x40021c3	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021c3	            0xeb16	                           jmp 0x40021db	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x40021c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021c9	           0xfb600	                   movzx eax, byte [rax]	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021cc	            0x3c0a	                             cmp al, 0xa	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021ce	            0x750b	                           jne 0x40021db	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021d4	          0xc60000	                       mov byte [rax], 0	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021d7	        0x8345cc01	               add dword [rbp - 0x34], 1	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x40021db	      0x488345d801	               add qword [rbp - 0x28], 1	       655	sequencer.c	FUNCTION_24	FOR_1
0x40021e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       655	sequencer.c	FUNCTION_24	FOR_1
0x40021e4	           0xfb600	                   movzx eax, byte [rax]	       655	sequencer.c	FUNCTION_24	FOR_1
0x40021e7	            0x84c0	                             test al, al	       655	sequencer.c	FUNCTION_24	FOR_1
0x40021e9	     0xf853affffff	                           jne 0x4002129	       655	sequencer.c	FUNCTION_24	FOR_1
0x40021ef	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       665	sequencer.c	FUNCTION_24	FOR_2
0x40021f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       665	sequencer.c	FUNCTION_24	FOR_2
0x40021fa	        0x488945d8	             mov qword [rbp - 0x28], rax	       665	sequencer.c	FUNCTION_24	FOR_2
0x40021fe	            0xeb2b	                           jmp 0x400222b	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002200	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002204	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002208	          0x4889d6	                            mov rsi, rdx	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x400220b	          0x4889c7	                            mov rdi, rax	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x400220e	      0xe800000000	                          call 0x4002213	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002213	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002217	          0x4889c7	                            mov rdi, rax	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x400221a	      0xe800000000	                          call 0x400221f	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x400221f	        0x4883c001	                              add rax, 1	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002223	        0x480145d8	            add qword [rbp - 0x28], rax 	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002227	        0x8345c801	               add dword [rbp - 0x38], 1	       665	sequencer.c	FUNCTION_24	FOR_2
0x400222b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       665	sequencer.c	FUNCTION_24	FOR_2
0x400222e	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002231	            0x7ccd	                            jl 0x4002200	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002233	      0xb800000000	                              mov eax, 0	       670	sequencer.c	FUNCTION_24
0x4002238	        0x488b4df8	                mov rcx, qword [rbp - 8]	       671	sequencer.c	FUNCTION_24
0x400223c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       671	sequencer.c	FUNCTION_24
0x4002245	            0x7405	                            je 0x400224c	       671	sequencer.c	FUNCTION_24
0x4002247	      0xe800000000	                          call 0x400224c	       671	sequencer.c	FUNCTION_24
0x400224c	              0xc9	                                   leave	       671	sequencer.c	FUNCTION_24
0x400224d	              0xc3	                                     ret	       671	sequencer.c	FUNCTION_24
write_author_script	CALL,19:FOR,1:WHILE,3:ELSE,8:DO,0:IF,8:SWITCH,0:functions,0	205
0x4001de6	              0x55	                                push rbp	       597	sequencer.c	FUNCTION_23
0x4001de7	          0x4889e5	                            mov rbp, rsp	       597	sequencer.c	FUNCTION_23
0x4001dea	        0x4883ec40	                           sub rsp, 0x40	       597	sequencer.c	FUNCTION_23
0x4001dee	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       597	sequencer.c	FUNCTION_23
0x4001df2	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	sequencer.c	FUNCTION_23
0x4001dfb	        0x488945f8	                mov qword [rbp - 8], rax	       597	sequencer.c	FUNCTION_23
0x4001dff	            0x31c0	                            xor eax, eax	       597	sequencer.c	FUNCTION_23
0x4001e01	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       598	sequencer.c	FUNCTION_23
0x4001e09	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       598	sequencer.c	FUNCTION_23
0x4001e11	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       598	sequencer.c	FUNCTION_23
0x4001e19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e1d	           0xfb600	                   movzx eax, byte [rax]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e20	            0x84c0	                             test al, al	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e22	            0x7418	                            je 0x4001e3c	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e24	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e28	      0xbe00000000	                              mov esi, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e2d	          0x4889c7	                            mov rdi, rax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e30	      0xe800000000	                          call 0x4001e35	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e35	            0x85c0	                           test eax, eax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e37	            0x741a	                            je 0x4001e53	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e39	            0xeb01	                           jmp 0x4001e3c	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001e3b	              0x90	                                     nop	       613	sequencer.c	FUNCTION_23	ELSE_3
0x4001e3c	      0xe8a6e9ffff	      call sym.rebase_path_author_script	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001e41	          0x4889c7	                            mov rdi, rax	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001e44	      0xe800000000	                          call 0x4001e49	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4001e49	      0xb800000000	                              mov eax, 0	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001e4e	      0xe94e020000	                           jmp 0x40020a1	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x4001e53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e57	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e5b	      0xbe00000000	                              mov esi, 0	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e60	          0x4889c7	                            mov rdi, rax	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e63	      0xe8e3e1ffff	                    call sym.skip_prefix	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e68	            0x85c0	                           test eax, eax	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e6a	            0x752a	                           jne 0x4001e96	       608	sequencer.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4001e6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e70	      0xbe0a000000	                            mov esi, 0xa	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e75	          0x4889c7	                            mov rdi, rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e78	      0xe800000000	                          call 0x4001e7d	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e7d	        0x488945d8	             mov qword [rbp - 0x28], rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e81	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e86	            0x74b3	                            je 0x4001e3b	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3	CALL_5
0x4001e88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e8c	        0x4883c001	                              add rax, 1	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e90	        0x488945c8	             mov qword [rbp - 0x38], rax	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4001e94	            0xeb83	                           jmp 0x4001e19	       613	sequencer.c	FUNCTION_23	ELSE_3
0x4001e96	              0x90	                                     nop	       609	sequencer.c	FUNCTION_23	ELSE_1	IF_2
0x4001e97	        0x488d45e0	                   lea rax, [rbp - 0x20]	       615	sequencer.c	FUNCTION_23	CALL_6
0x4001e9b	      0xbe00000000	                              mov esi, 0	       615	sequencer.c	FUNCTION_23	CALL_6
0x4001ea0	          0x4889c7	                            mov rdi, rax	       615	sequencer.c	FUNCTION_23	CALL_6
0x4001ea3	      0xe8cde3ffff	                  call sym.strbuf_addstr	       615	sequencer.c	FUNCTION_23	CALL_6
0x4001ea8	            0xeb6e	                           jmp 0x4001f18	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001eaa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001eae	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001eb2	      0xbe00000000	                              mov esi, 0	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001eb7	          0x4889c7	                            mov rdi, rax	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001eba	      0xe88ce1ffff	                    call sym.skip_prefix	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001ebf	            0x85c0	                           test eax, eax	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001ec1	            0x757c	                           jne 0x4001f3f	       617	sequencer.c	FUNCTION_23	WHILE_1	IF_4	CALL_7
0x4001ec3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ec7	           0xfb600	                   movzx eax, byte [rax]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001eca	            0x3c27	                            cmp al, 0x27	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ecc	            0x7422	                            je 0x4001ef0	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ece	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ed2	        0x488d5001	                      lea rdx, [rax + 1]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ed6	        0x488955c8	             mov qword [rbp - 0x38], rdx	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001eda	           0xfb600	                   movzx eax, byte [rax]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001edd	           0xfbed0	                           movsx edx, al	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ee0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ee4	            0x89d6	                            mov esi, edx	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ee6	          0x4889c7	                            mov rdi, rax	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ee9	      0xe819e3ffff	                   call sym.strbuf_addch	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001eee	            0xeb28	                           jmp 0x4001f18	       620	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4001ef0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001ef4	        0x488d5001	                      lea rdx, [rax + 1]	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001ef8	        0x488955c8	             mov qword [rbp - 0x38], rdx	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001efc	           0xfb600	                   movzx eax, byte [rax]	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001eff	           0xfbed0	                           movsx edx, al	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f02	        0x488d45e0	                   lea rax, [rbp - 0x20]	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f06	      0xbe00000000	                              mov esi, 0	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f0b	          0x4889c7	                            mov rdi, rax	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f0e	      0xb800000000	                              mov eax, 0	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f13	      0xe800000000	                          call 0x4001f18	       622	sequencer.c	FUNCTION_23	CALL_9
0x4001f18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f1c	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f1f	            0x84c0	                             test al, al	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f21	            0x741d	                            je 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f27	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f2a	            0x3c0a	                             cmp al, 0xa	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f2c	            0x7412	                            je 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f32	           0xfb600	                   movzx eax, byte [rax]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f35	            0x3c0d	                             cmp al, 0xd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f37	     0xf856dffffff	                           jne 0x4001eaa	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f3d	            0xeb01	                           jmp 0x4001f40	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001f3f	              0x90	                                     nop	       618	sequencer.c	FUNCTION_23	WHILE_1	IF_4
0x4001f40	        0x488d45e0	                   lea rax, [rbp - 0x20]	       623	sequencer.c	FUNCTION_23	CALL_10
0x4001f44	      0xbe00000000	                              mov esi, 0	       623	sequencer.c	FUNCTION_23	CALL_10
0x4001f49	          0x4889c7	                            mov rdi, rax	       623	sequencer.c	FUNCTION_23	CALL_10
0x4001f4c	      0xe824e3ffff	                  call sym.strbuf_addstr	       623	sequencer.c	FUNCTION_23	CALL_10
0x4001f51	            0xeb6e	                           jmp 0x4001fc1	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001f53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f57	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f5b	      0xbe00000000	                              mov esi, 0	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f60	          0x4889c7	                            mov rdi, rax	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f63	      0xe8e3e0ffff	                    call sym.skip_prefix	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f68	            0x85c0	                           test eax, eax	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f6a	            0x757c	                           jne 0x4001fe8	       625	sequencer.c	FUNCTION_23	WHILE_2	IF_6	CALL_11
0x4001f6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f70	           0xfb600	                   movzx eax, byte [rax]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f73	            0x3c27	                            cmp al, 0x27	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f75	            0x7422	                            je 0x4001f99	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f7b	        0x488d5001	                      lea rdx, [rax + 1]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f7f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f83	           0xfb600	                   movzx eax, byte [rax]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f86	           0xfbed0	                           movsx edx, al	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f89	        0x488d45e0	                   lea rax, [rbp - 0x20]	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f8d	            0x89d6	                            mov esi, edx	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f8f	          0x4889c7	                            mov rdi, rax	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f92	      0xe870e2ffff	                   call sym.strbuf_addch	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f97	            0xeb28	                           jmp 0x4001fc1	       628	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x4001f99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001f9d	        0x488d5001	                      lea rdx, [rax + 1]	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fa1	        0x488955c8	             mov qword [rbp - 0x38], rdx	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fa5	           0xfb600	                   movzx eax, byte [rax]	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fa8	           0xfbed0	                           movsx edx, al	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fab	        0x488d45e0	                   lea rax, [rbp - 0x20]	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001faf	      0xbe00000000	                              mov esi, 0	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fb4	          0x4889c7	                            mov rdi, rax	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fb7	      0xb800000000	                              mov eax, 0	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fbc	      0xe800000000	                          call 0x4001fc1	       630	sequencer.c	FUNCTION_23	CALL_13
0x4001fc1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fc5	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fc8	            0x84c0	                             test al, al	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fca	            0x741d	                            je 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fcc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fd0	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fd3	            0x3c0a	                             cmp al, 0xa	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fd5	            0x7412	                            je 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fdb	           0xfb600	                   movzx eax, byte [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fde	            0x3c0d	                             cmp al, 0xd	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fe0	     0xf856dffffff	                           jne 0x4001f53	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fe6	            0xeb01	                           jmp 0x4001fe9	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4001fe8	              0x90	                                     nop	       626	sequencer.c	FUNCTION_23	WHILE_2	IF_6
0x4001fe9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       631	sequencer.c	FUNCTION_23	CALL_14
0x4001fed	      0xbe00000000	                              mov esi, 0	       631	sequencer.c	FUNCTION_23	CALL_14
0x4001ff2	          0x4889c7	                            mov rdi, rax	       631	sequencer.c	FUNCTION_23	CALL_14
0x4001ff5	      0xe87be2ffff	                  call sym.strbuf_addstr	       631	sequencer.c	FUNCTION_23	CALL_14
0x4001ffa	            0xeb55	                           jmp 0x4002051	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4001ffc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002000	           0xfb600	                   movzx eax, byte [rax]	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002003	            0x3c27	                            cmp al, 0x27	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002005	            0x7422	                            je 0x4002029	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002007	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x400200b	        0x488d5001	                      lea rdx, [rax + 1]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x400200f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002013	           0xfb600	                   movzx eax, byte [rax]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002016	           0xfbed0	                           movsx edx, al	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002019	        0x488d45e0	                   lea rax, [rbp - 0x20]	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x400201d	            0x89d6	                            mov esi, edx	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x400201f	          0x4889c7	                            mov rdi, rax	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002022	      0xe8e0e1ffff	                   call sym.strbuf_addch	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002027	            0xeb28	                           jmp 0x4002051	       634	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002029	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       636	sequencer.c	FUNCTION_23	CALL_16
0x400202d	        0x488d5001	                      lea rdx, [rax + 1]	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002031	        0x488955c8	             mov qword [rbp - 0x38], rdx	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002035	           0xfb600	                   movzx eax, byte [rax]	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002038	           0xfbed0	                           movsx edx, al	       636	sequencer.c	FUNCTION_23	CALL_16
0x400203b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       636	sequencer.c	FUNCTION_23	CALL_16
0x400203f	      0xbe00000000	                              mov esi, 0	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002044	          0x4889c7	                            mov rdi, rax	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002047	      0xb800000000	                              mov eax, 0	       636	sequencer.c	FUNCTION_23	CALL_16
0x400204c	      0xe800000000	                          call 0x4002051	       636	sequencer.c	FUNCTION_23	CALL_16
0x4002051	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002055	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002058	            0x84c0	                             test al, al	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400205a	            0x7416	                            je 0x4002072	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400205c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002060	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002063	            0x3c0a	                             cmp al, 0xa	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002065	            0x740b	                            je 0x4002072	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002067	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400206b	           0xfb600	                   movzx eax, byte [rax]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400206e	            0x3c0d	                             cmp al, 0xd	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002070	            0x758a	                           jne 0x4001ffc	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002072	      0xe870e7ffff	      call sym.rebase_path_author_script	       637	sequencer.c	FUNCTION_23	CALL_18
0x4002077	          0x4889c2	                            mov rdx, rax	       637	sequencer.c	FUNCTION_23	CALL_18
0x400207a	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       637	sequencer.c	FUNCTION_23	CALL_18
0x400207e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       637	sequencer.c	FUNCTION_23	CALL_18
0x4002082	      0xb901000000	                              mov ecx, 1	       637	sequencer.c	FUNCTION_23	CALL_18
0x4002087	          0x4889c7	                            mov rdi, rax	       637	sequencer.c	FUNCTION_23	CALL_18
0x400208a	      0xe856f2ffff	                  call sym.write_message	       637	sequencer.c	FUNCTION_23	CALL_18
0x400208f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       637	sequencer.c	FUNCTION_23	CALL_18
0x4002092	        0x488d45e0	                   lea rax, [rbp - 0x20]	       638	sequencer.c	FUNCTION_23	CALL_19
0x4002096	          0x4889c7	                            mov rdi, rax	       638	sequencer.c	FUNCTION_23	CALL_19
0x4002099	      0xe800000000	                          call 0x400209e	       638	sequencer.c	FUNCTION_23	CALL_19
0x400209e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       639	sequencer.c	FUNCTION_23
0x40020a1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       640	sequencer.c	FUNCTION_23
0x40020a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       640	sequencer.c	FUNCTION_23
0x40020ae	            0x7405	                            je 0x40020b5	       640	sequencer.c	FUNCTION_23
0x40020b0	      0xe800000000	                          call 0x40020b5	       640	sequencer.c	FUNCTION_23
0x40020b5	              0xc9	                                   leave	       640	sequencer.c	FUNCTION_23
0x40020b6	              0xc3	                                     ret	       640	sequencer.c	FUNCTION_23
error_with_patch	CALL,6:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:SWITCH,0:functions,0	54
0x400794c	              0x55	                                push rbp	      2464	sequencer.c	FUNCTION_76
0x400794d	          0x4889e5	                            mov rbp, rsp	      2464	sequencer.c	FUNCTION_76
0x4007950	        0x4883ec30	                           sub rsp, 0x30	      2464	sequencer.c	FUNCTION_76
0x4007954	        0x48897df8	                mov qword [rbp - 8], rdi	      2464	sequencer.c	FUNCTION_76
0x4007958	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2464	sequencer.c	FUNCTION_76
0x400795c	          0x8955ec	             mov dword [rbp - 0x14], edx	      2464	sequencer.c	FUNCTION_76
0x400795f	        0x48894de0	             mov qword [rbp - 0x20], rcx	      2464	sequencer.c	FUNCTION_76
0x4007963	        0x448945e8	             mov dword [rbp - 0x18], r8d	      2464	sequencer.c	FUNCTION_76
0x4007967	        0x44894ddc	             mov dword [rbp - 0x24], r9d	      2464	sequencer.c	FUNCTION_76
0x400796b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x400796f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x4007973	          0x4889d6	                            mov rsi, rdx	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x4007976	          0x4889c7	                            mov rdi, rax	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x4007979	      0xe8f6fbffff	                     call sym.make_patch	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x400797e	            0x85c0	                           test eax, eax	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x4007980	            0x740a	                            je 0x400798c	      2465	sequencer.c	FUNCTION_76	IF_1	CALL_1
0x4007982	      0xb8ffffffff	                     mov eax, 0xffffffff	      2466	sequencer.c	FUNCTION_76	IF_1
0x4007987	      0xe980000000	                           jmp 0x4007a0c	      2466	sequencer.c	FUNCTION_76	IF_1
0x400798c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2468	sequencer.c	FUNCTION_76	IF_2
0x4007990	            0x743a	                            je 0x40079cc	      2468	sequencer.c	FUNCTION_76	IF_2
0x4007992	      0xe814ffffff	                call sym.intend_to_amend	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x4007997	            0x85c0	                           test eax, eax	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x4007999	            0x7407	                            je 0x40079a2	      2469	sequencer.c	FUNCTION_76	IF_2	IF_3	CALL_2
0x400799b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	sequencer.c	FUNCTION_76	IF_2	IF_3
0x40079a0	            0xeb6a	                           jmp 0x4007a0c	      2470	sequencer.c	FUNCTION_76	IF_2	IF_3
0x40079a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079a6	          0x4889c7	                            mov rdi, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079a9	      0xe89c94ffff	            call sym.gpg_sign_opt_quoted	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079ae	          0x4889c2	                            mov rdx, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079b1	    0x488b05000000	            mov rax, qword [0x040079b8] 	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079b8	      0xbe00000000	                              mov esi, 0	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079bd	          0x4889c7	                            mov rdi, rax	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079c0	      0xb800000000	                              mov eax, 0	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079c5	      0xe800000000	                          call 0x40079ca	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079ca	            0xeb3d	                           jmp 0x4007a09	      2472	sequencer.c	FUNCTION_76	IF_2	CALL_3
0x40079cc	        0x837de800	               cmp dword [rbp - 0x18], 0	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x40079d0	            0x7437	                            je 0x4007a09	      2479	sequencer.c	FUNCTION_76	ELSE_1	IF_4
0x40079d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079d6	          0x4889c7	                            mov rdi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079d9	      0xe80097ffff	              call sym.short_commit_name	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079de	          0x4889c6	                            mov rsi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079e1	    0x488b05000000	            mov rax, qword [0x040079e8] 	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079e8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079ec	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079ef	          0x4989c8	                             mov r8, rcx	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079f2	            0x89d1	                            mov ecx, edx	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079f4	          0x4889f2	                            mov rdx, rsi	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079f7	      0xbe00000000	                              mov esi, 0	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079fc	          0x4889c7	                            mov rdi, rax	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x40079ff	      0xb800000000	                              mov eax, 0	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x4007a04	      0xe800000000	                          call 0x4007a09	      2480	sequencer.c	FUNCTION_76	ELSE_1	IF_4	CALL_5
0x4007a09	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2483	sequencer.c	FUNCTION_76
0x4007a0c	              0xc9	                                   leave	      2484	sequencer.c	FUNCTION_76
0x4007a0d	              0xc3	                                     ret	      2484	sequencer.c	FUNCTION_76
gpg_sign_opt_quoted	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	21
0x4000e4a	              0x55	                                push rbp	       246	sequencer.c	FUNCTION_7
0x4000e4b	          0x4889e5	                            mov rbp, rsp	       246	sequencer.c	FUNCTION_7
0x4000e4e	        0x4883ec10	                           sub rsp, 0x10	       246	sequencer.c	FUNCTION_7
0x4000e52	        0x48897df8	                mov qword [rbp - 8], rdi	       246	sequencer.c	FUNCTION_7
0x4000e56	      0xbe00000000	                              mov esi, 0	       249	sequencer.c	FUNCTION_7
0x4000e5b	      0xbf00000000	                              mov edi, 0	       249	sequencer.c	FUNCTION_7
0x4000e60	      0xe808f3ffff	                  call sym.strbuf_setlen	       249	sequencer.c	FUNCTION_7
0x4000e65	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	sequencer.c	FUNCTION_7	IF_1
0x4000e69	        0x488b4030	            mov rax, qword [rax + 0x30] 	       250	sequencer.c	FUNCTION_7	IF_1
0x4000e6d	          0x4885c0	                           test rax, rax	       250	sequencer.c	FUNCTION_7	IF_1
0x4000e70	            0x741f	                            je 0x4000e91	       250	sequencer.c	FUNCTION_7	IF_1
0x4000e72	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e76	        0x488b4030	            mov rax, qword [rax + 0x30] 	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e7a	          0x4889c2	                            mov rdx, rax	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e7d	      0xbe00000000	                              mov esi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e82	      0xbf00000000	                              mov edi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e87	      0xb800000000	                              mov eax, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e8c	      0xe800000000	                          call 0x4000e91	       251	sequencer.c	FUNCTION_7	CALL_1
0x4000e91	    0x488b05000000	            mov rax, qword [0x04000e98] 	       252	sequencer.c	FUNCTION_7
0x4000e98	              0xc9	                                   leave	       253	sequencer.c	FUNCTION_7
0x4000e99	              0xc3	                                     ret	       253	sequencer.c	FUNCTION_7
strbuf_avail	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	18
0x4000137	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_152
0x4000138	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_152
0x400013b	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_152
0x400013f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_152
0x4000143	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_152
0x4000146	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_152
0x4000149	            0x741b	                            je 0x4000166	       141	strbuf.h	FUNCTION_152
0x400014b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_152
0x400014f	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_152
0x4000152	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_152
0x4000156	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_152
0x400015a	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_152
0x400015d	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_152
0x4000160	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_152
0x4000164	            0xeb05	                           jmp 0x400016b	       141	strbuf.h	FUNCTION_152
0x4000166	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_152
0x400016b	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_152
0x400016c	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_152
sequencer_make_script	CALL,21:FOR,0:WHILE,1:ELSE,0:DO,0:IF,7:SWITCH,0:functions,0	198
0x400c89c	              0x55	                                push rbp	      3908	sequencer.c	FUNCTION_97
0x400c89d	          0x4889e5	                            mov rbp, rsp	      3908	sequencer.c	FUNCTION_97
0x400c8a0	    0x4881ecd00900	                          sub rsp, 0x9d0	      3908	sequencer.c	FUNCTION_97
0x400c8a7	    0x4889bd48f6ff	            mov qword [rbp - 0x9b8], rdi	      3908	sequencer.c	FUNCTION_97
0x400c8ae	    0x89b544f6ffff	            mov dword [rbp - 0x9bc], esi	      3908	sequencer.c	FUNCTION_97
0x400c8b4	    0x48899538f6ff	            mov qword [rbp - 0x9c8], rdx	      3908	sequencer.c	FUNCTION_97
0x400c8bb	    0x898d40f6ffff	            mov dword [rbp - 0x9c0], ecx	      3908	sequencer.c	FUNCTION_97
0x400c8c1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3908	sequencer.c	FUNCTION_97
0x400c8ca	        0x488945f8	                mov qword [rbp - 8], rax	      3908	sequencer.c	FUNCTION_97
0x400c8ce	            0x31c0	                            xor eax, eax	      3908	sequencer.c	FUNCTION_97
0x400c8d0	    0x48c78568f6ff	              mov qword [rbp - 0x998], 0	      3909	sequencer.c	FUNCTION_97
0x400c8db	    0x488d95a0f6ff	                  lea rdx, [rbp - 0x960]	      3910	sequencer.c	FUNCTION_97
0x400c8e2	      0xb800000000	                              mov eax, 0	      3910	sequencer.c	FUNCTION_97
0x400c8e7	      0xb914000000	                           mov ecx, 0x14	      3910	sequencer.c	FUNCTION_97
0x400c8ec	          0x4889d7	                            mov rdi, rdx	      3910	sequencer.c	FUNCTION_97
0x400c8ef	          0xf348ab	              rep stosq qword [rdi], rax	      3910	sequencer.c	FUNCTION_97
0x400c8f2	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      3911	sequencer.c	FUNCTION_97
0x400c8fd	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      3911	sequencer.c	FUNCTION_97
0x400c908	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      3911	sequencer.c	FUNCTION_97
0x400c913	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3914	sequencer.c	FUNCTION_97
0x400c919	          0x83e001	                              and eax, 1	      3914	sequencer.c	FUNCTION_97
0x400c91c	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      3914	sequencer.c	FUNCTION_97
0x400c922	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3915	sequencer.c	FUNCTION_97
0x400c928	          0x83e004	                              and eax, 4	      3915	sequencer.c	FUNCTION_97
0x400c92b	            0x85c0	                           test eax, eax	      3915	sequencer.c	FUNCTION_97
0x400c92d	            0x7407	                            je 0x400c936	      3915	sequencer.c	FUNCTION_97
0x400c92f	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0x400c934	            0xeb05	                           jmp 0x400c93b	      3915	sequencer.c	FUNCTION_97
0x400c936	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0x400c93b	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      3915	sequencer.c	FUNCTION_97
0x400c942	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3916	sequencer.c	FUNCTION_97
0x400c948	          0x83e008	                              and eax, 8	      3916	sequencer.c	FUNCTION_97
0x400c94b	    0x898560f6ffff	            mov dword [rbp - 0x9a0], eax	      3916	sequencer.c	FUNCTION_97
0x400c951	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400c958	      0xbe00000000	                              mov esi, 0	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400c95d	          0x4889c7	                            mov rdi, rax	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400c960	      0xe800000000	                          call 0x400c965	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400c965	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      3919	sequencer.c	FUNCTION_97
0x400c96c	          0x83c810	                            or eax, 0x10	      3919	sequencer.c	FUNCTION_97
0x400c96f	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      3919	sequencer.c	FUNCTION_97
0x400c975	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      3920	sequencer.c	FUNCTION_97	IF_1
0x400c97c	            0x750a	                           jne 0x400c988	      3920	sequencer.c	FUNCTION_97	IF_1
0x400c97e	    0xc78524fcffff	              mov dword [rbp - 0x3dc], 1	      3921	sequencer.c	FUNCTION_97	IF_1
0x400c988	     0xfb685b8f7ff	           movzx eax, byte [rbp - 0x848]	      3922	sequencer.c	FUNCTION_97
0x400c98f	          0x83c802	                               or eax, 2	      3922	sequencer.c	FUNCTION_97
0x400c992	    0x8885b8f7ffff	              mov byte [rbp - 0x848], al	      3922	sequencer.c	FUNCTION_97
0x400c998	     0xfb685b6f7ff	           movzx eax, byte [rbp - 0x84a]	      3923	sequencer.c	FUNCTION_97
0x400c99f	          0x83c804	                               or eax, 4	      3923	sequencer.c	FUNCTION_97
0x400c9a2	    0x8885b6f7ffff	              mov byte [rbp - 0x84a], al	      3923	sequencer.c	FUNCTION_97
0x400c9a8	     0xfb685b7f7ff	           movzx eax, byte [rbp - 0x849]	      3924	sequencer.c	FUNCTION_97
0x400c9af	          0x83c840	                            or eax, 0x40	      3924	sequencer.c	FUNCTION_97
0x400c9b2	    0x8885b7f7ffff	              mov byte [rbp - 0x849], al	      3924	sequencer.c	FUNCTION_97
0x400c9b8	     0xfb685b7f7ff	           movzx eax, byte [rbp - 0x849]	      3925	sequencer.c	FUNCTION_97
0x400c9bf	          0x83c802	                               or eax, 2	      3925	sequencer.c	FUNCTION_97
0x400c9c2	    0x8885b7f7ffff	              mov byte [rbp - 0x849], al	      3925	sequencer.c	FUNCTION_97
0x400c9c8	    0xc785acf7ffff	              mov dword [rbp - 0x854], 0	      3926	sequencer.c	FUNCTION_97
0x400c9d2	     0xfb685b5f7ff	           movzx eax, byte [rbp - 0x84b]	      3927	sequencer.c	FUNCTION_97
0x400c9d9	          0x83c801	                               or eax, 1	      3927	sequencer.c	FUNCTION_97
0x400c9dc	    0x8885b5f7ffff	              mov byte [rbp - 0x84b], al	      3927	sequencer.c	FUNCTION_97
0x400c9e2	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      3929	sequencer.c	FUNCTION_97
0x400c9e9	          0x83c880	                      or eax, 0xffffff80	      3929	sequencer.c	FUNCTION_97
0x400c9ec	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      3929	sequencer.c	FUNCTION_97
0x400c9f2	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400c9f9	          0x4889c6	                            mov rsi, rax	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400c9fc	      0xbf00000000	                              mov edi, 0	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400ca01	      0xe800000000	                          call 0x400ca06	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400ca06	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca0d	          0x4885c0	                           test rax, rax	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca10	            0x740e	                            je 0x400ca20	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca12	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca19	           0xfb600	                   movzx eax, byte [rax]	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca1c	            0x84c0	                             test al, al	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca1e	            0x7520	                           jne 0x400ca40	      3931	sequencer.c	FUNCTION_97	IF_2
0x400ca20	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x400ca27	          0x4889c7	                            mov rdi, rax	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x400ca2a	      0xe800000000	                          call 0x400ca2f	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x400ca2f	      0xbf00000000	                              mov edi, 0	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400ca34	      0xe800000000	                          call 0x400ca39	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400ca39	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400ca40	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400ca47	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400ca4e	          0x4889d6	                            mov rsi, rdx	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400ca51	          0x4889c7	                            mov rdi, rax	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400ca54	      0xe800000000	                          call 0x400ca59	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400ca59	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400ca60	          0x4889c7	                            mov rdi, rax	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400ca63	      0xe800000000	                          call 0x400ca68	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400ca68	    0x8b85e4f7ffff	            mov eax, dword [rbp - 0x81c]	      3937	sequencer.c	FUNCTION_97
0x400ca6e	    0x8985a0f6ffff	            mov dword [rbp - 0x960], eax	      3937	sequencer.c	FUNCTION_97
0x400ca74	      0xe800000000	                          call 0x400ca79	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400ca79	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400ca80	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400ca87	    0x488bb538f6ff	            mov rsi, qword [rbp - 0x9c8]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400ca8e	    0x8b8544f6ffff	            mov eax, dword [rbp - 0x9bc]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400ca94	      0xb900000000	                              mov ecx, 0	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400ca99	            0x89c7	                            mov edi, eax	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400ca9b	      0xe800000000	                          call 0x400caa0	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400caa0	          0x83f801	                              cmp eax, 1	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400caa3	            0x7e21	                           jle 0x400cac6	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400caa5	      0xbf00000000	                              mov edi, 0	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400caaa	      0xe8f838ffff	                               call sym.	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400caaf	          0x4889c7	                            mov rdi, rax	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400cab2	      0xb800000000	                              mov eax, 0	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400cab7	      0xe800000000	                          call 0x400cabc	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400cabc	      0xe87f35ffff	                    call sym.const_error	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400cac1	      0xe9aa010000	                           jmp 0x400cc70	      3941	sequencer.c	FUNCTION_97	CALL_9
0x400cac6	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400cacd	          0x4889c7	                            mov rdi, rax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400cad0	      0xe800000000	                          call 0x400cad5	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400cad5	            0x85c0	                           test eax, eax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400cad7	            0x7921	                           jns 0x400cafa	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400cad9	      0xbf00000000	                              mov edi, 0	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400cade	      0xe8c438ffff	                               call sym.	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400cae3	          0x4889c7	                            mov rdi, rax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400cae6	      0xb800000000	                              mov eax, 0	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400caeb	      0xe800000000	                          call 0x400caf0	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400caf0	      0xe84b35ffff	                    call sym.const_error	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400caf5	      0xe976010000	                           jmp 0x400cc70	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400cafa	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      3946	sequencer.c	FUNCTION_97	IF_5
0x400cb01	     0xf8431010000	                            je 0x400cc38	      3946	sequencer.c	FUNCTION_97	IF_5
0x400cb07	    0x8b8d40f6ffff	            mov ecx, dword [rbp - 0x9c0]	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb0d	    0x488b9548f6ff	            mov rdx, qword [rbp - 0x9b8]	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb14	    0x488db540f7ff	                  lea rsi, [rbp - 0x8c0]	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb1b	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb22	          0x4889c7	                            mov rdi, rax	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb25	      0xe846eeffff	        call sym.make_script_with_merges	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb2a	      0xe941010000	                           jmp 0x400cc70	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400cb2f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400cb36	          0x4889c7	                            mov rdi, rax	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400cb39	      0xe8446fffff	       call sym.is_original_commit_empty	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400cb3e	    0x898564f6ffff	            mov dword [rbp - 0x99c], eax	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400cb44	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 0	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb4b	            0x751f	                           jne 0x400cb6c	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb4d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb54	            0x8b00	                    mov eax, dword [rax]	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb56	          0xc1e804	                              shr eax, 4	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb59	      0x25ffffff07	                      and eax, 0x7ffffff	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb5e	      0x2500020000	                          and eax, 0x200	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb63	            0x85c0	                           test eax, eax	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb65	            0x7405	                            je 0x400cb6c	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb67	      0xe9cc000000	                           jmp 0x400cc38	      3953	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400cb6c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3954	sequencer.c	FUNCTION_97	WHILE_1
0x400cb73	      0xbe00000000	                              mov esi, 0	      3954	sequencer.c	FUNCTION_97	WHILE_1
0x400cb78	          0x4889c7	                            mov rdi, rax	      3954	sequencer.c	FUNCTION_97	WHILE_1
0x400cb7b	      0xe8ed35ffff	                  call sym.strbuf_setlen	      3954	sequencer.c	FUNCTION_97	WHILE_1
0x400cb80	    0x83bd5cf6ffff	              cmp dword [rbp - 0x9a4], 0	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400cb87	            0x752c	                           jne 0x400cbb5	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400cb89	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 0	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400cb90	            0x7423	                            je 0x400cbb5	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400cb92	     0xfb605000000	           movzx eax, byte [0x0400cb99] 	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cb99	           0xfbed0	                           movsx edx, al	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cb9c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cba3	      0xbe00000000	                              mov esi, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cba8	          0x4889c7	                            mov rdi, rax	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cbab	      0xb800000000	                              mov eax, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cbb0	      0xe800000000	                          call 0x400cbb5	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400cbb5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0x400cbbc	        0x4883c004	                              add rax, 4	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0x400cbc0	          0x4889c7	                            mov rdi, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbc3	      0xe800000000	                          call 0x400cbc8	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbc8	          0x4889c1	                            mov rcx, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbcb	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbd2	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbd9	      0xbe00000000	                              mov esi, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbde	          0x4889c7	                            mov rdi, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbe1	      0xb800000000	                              mov eax, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbe6	      0xe800000000	                          call 0x400cbeb	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400cbeb	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cbf2	    0x488b8d78f6ff	            mov rcx, qword [rbp - 0x988]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cbf9	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cc00	          0x4889ce	                            mov rsi, rcx	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cc03	          0x4889c7	                            mov rdi, rax	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cc06	      0xe800000000	                          call 0x400cc0b	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400cc0b	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0x400cc12	      0xbe0a000000	                            mov esi, 0xa	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0x400cc17	          0x4889c7	                            mov rdi, rax	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0x400cc1a	      0xe8e835ffff	                   call sym.strbuf_addch	      3960	sequencer.c	FUNCTION_97	WHILE_1	CALL_19
0x400cc1f	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400cc26	    0x488b9548f6ff	            mov rdx, qword [rbp - 0x9b8]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400cc2d	          0x4889d6	                            mov rsi, rdx	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400cc30	          0x4889c7	                            mov rdi, rax	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400cc33	      0xe800000000	                          call 0x400cc38	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400cc38	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc3f	          0x4889c7	                            mov rdi, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc42	      0xe800000000	                          call 0x400cc47	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc47	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc4e	    0x4883bd78f6ff	              cmp qword [rbp - 0x988], 0	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc56	     0xf85d3feffff	                           jne 0x400cb2f	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400cc5c	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400cc63	          0x4889c7	                            mov rdi, rax	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400cc66	      0xe800000000	                          call 0x400cc6b	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400cc6b	      0xb800000000	                              mov eax, 0	      3964	sequencer.c	FUNCTION_97
0x400cc70	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3965	sequencer.c	FUNCTION_97
0x400cc74	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3965	sequencer.c	FUNCTION_97
0x400cc7d	            0x7405	                            je 0x400cc84	      3965	sequencer.c	FUNCTION_97
0x400cc7f	      0xe800000000	                          call 0x400cc84	      3965	sequencer.c	FUNCTION_97
0x400cc84	              0xc9	                                   leave	      3965	sequencer.c	FUNCTION_97
0x400cc85	              0xc3	                                     ret	      3965	sequencer.c	FUNCTION_97
get_dir	CALL,3:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	14
0x4000ce1	              0x55	                                push rbp	       198	sequencer.c	FUNCTION_4
0x4000ce2	          0x4889e5	                            mov rbp, rsp	       198	sequencer.c	FUNCTION_4
0x4000ce5	        0x4883ec10	                           sub rsp, 0x10	       198	sequencer.c	FUNCTION_4
0x4000ce9	        0x48897df8	                mov qword [rbp - 8], rdi	       198	sequencer.c	FUNCTION_4
0x4000ced	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4000cf1	          0x4889c7	                            mov rdi, rax	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4000cf4	      0xe8cfffffff	                    call sym.is_rebase_i	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4000cf9	            0x85c0	                           test eax, eax	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4000cfb	            0x7407	                            je 0x4000d04	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4000cfd	      0xe83ef9ffff	                    call sym.rebase_path	       200	sequencer.c	FUNCTION_4	CALL_2
0x4000d02	            0xeb05	                           jmp 0x4000d09	       200	sequencer.c	FUNCTION_4	CALL_2
0x4000d04	      0xe800000000	                          call 0x4000d09	       201	sequencer.c	FUNCTION_4	CALL_3
0x4000d09	              0xc9	                                   leave	       202	sequencer.c	FUNCTION_4
0x4000d0a	              0xc3	                                     ret	       202	sequencer.c	FUNCTION_4
allow_empty	CALL,2:FOR,0:WHILE,0:ELSE,1:DO,0:IF,6:SWITCH,0:functions,0	42
0x4003b88	              0x55	                                push rbp	      1264	sequencer.c	FUNCTION_40
0x4003b89	          0x4889e5	                            mov rbp, rsp	      1264	sequencer.c	FUNCTION_40
0x4003b8c	        0x4883ec20	                           sub rsp, 0x20	      1264	sequencer.c	FUNCTION_40
0x4003b90	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1264	sequencer.c	FUNCTION_40
0x4003b94	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1264	sequencer.c	FUNCTION_40
0x4003b98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1277	sequencer.c	FUNCTION_40	IF_1
0x4003b9c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1277	sequencer.c	FUNCTION_40	IF_1
0x4003b9f	            0x85c0	                           test eax, eax	      1277	sequencer.c	FUNCTION_40	IF_1
0x4003ba1	            0x7507	                           jne 0x4003baa	      1277	sequencer.c	FUNCTION_40	IF_1
0x4003ba3	      0xb800000000	                              mov eax, 0	      1278	sequencer.c	FUNCTION_40	IF_1
0x4003ba8	            0xeb5e	                           jmp 0x4003c08	      1278	sequencer.c	FUNCTION_40	IF_1
0x4003baa	      0xe816e1ffff	             call sym.is_index_unchanged	      1280	sequencer.c	FUNCTION_40	CALL_1
0x4003baf	          0x8945f8	                mov dword [rbp - 8], eax	      1280	sequencer.c	FUNCTION_40	CALL_1
0x4003bb2	        0x837df800	                  cmp dword [rbp - 8], 0	      1281	sequencer.c	FUNCTION_40	IF_2
0x4003bb6	            0x7905	                           jns 0x4003bbd	      1281	sequencer.c	FUNCTION_40	IF_2
0x4003bb8	          0x8b45f8	                mov eax, dword [rbp - 8]	      1282	sequencer.c	FUNCTION_40	IF_2
0x4003bbb	            0xeb4b	                           jmp 0x4003c08	      1282	sequencer.c	FUNCTION_40	IF_2
0x4003bbd	        0x837df800	                  cmp dword [rbp - 8], 0	      1283	sequencer.c	FUNCTION_40	IF_3
0x4003bc1	            0x7507	                           jne 0x4003bca	      1283	sequencer.c	FUNCTION_40	IF_3
0x4003bc3	      0xb800000000	                              mov eax, 0	      1284	sequencer.c	FUNCTION_40	IF_3
0x4003bc8	            0xeb3e	                           jmp 0x4003c08	      1284	sequencer.c	FUNCTION_40	IF_3
0x4003bca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1286	sequencer.c	FUNCTION_40	IF_4
0x4003bce	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1286	sequencer.c	FUNCTION_40	IF_4
0x4003bd1	            0x85c0	                           test eax, eax	      1286	sequencer.c	FUNCTION_40	IF_4
0x4003bd3	            0x7407	                            je 0x4003bdc	      1286	sequencer.c	FUNCTION_40	IF_4
0x4003bd5	      0xb801000000	                              mov eax, 1	      1287	sequencer.c	FUNCTION_40	IF_4
0x4003bda	            0xeb2c	                           jmp 0x4003c08	      1287	sequencer.c	FUNCTION_40	IF_4
0x4003bdc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4003be0	          0x4889c7	                            mov rdi, rax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4003be3	      0xe89afeffff	       call sym.is_original_commit_empty	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4003be8	          0x8945fc	                mov dword [rbp - 4], eax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4003beb	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1290	sequencer.c	FUNCTION_40	IF_5
0x4003bef	            0x7905	                           jns 0x4003bf6	      1290	sequencer.c	FUNCTION_40	IF_5
0x4003bf1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1291	sequencer.c	FUNCTION_40	IF_5
0x4003bf4	            0xeb12	                           jmp 0x4003c08	      1291	sequencer.c	FUNCTION_40	IF_5
0x4003bf6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1292	sequencer.c	FUNCTION_40	IF_6
0x4003bfa	            0x7507	                           jne 0x4003c03	      1292	sequencer.c	FUNCTION_40	IF_6
0x4003bfc	      0xb800000000	                              mov eax, 0	      1293	sequencer.c	FUNCTION_40	IF_6
0x4003c01	            0xeb05	                           jmp 0x4003c08	      1293	sequencer.c	FUNCTION_40	IF_6
0x4003c03	      0xb801000000	                              mov eax, 1	      1295	sequencer.c	FUNCTION_40	ELSE_1
0x4003c08	              0xc9	                                   leave	      1296	sequencer.c	FUNCTION_40	ELSE_1
0x4003c09	              0xc3	                                     ret	      1296	sequencer.c	FUNCTION_40	ELSE_1
append_conflicts_hint	CALL,4:FOR,1:WHILE,1:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	64
0x40018c6	              0x55	                                push rbp	       490	sequencer.c	FUNCTION_20
0x40018c7	          0x4889e5	                            mov rbp, rsp	       490	sequencer.c	FUNCTION_20
0x40018ca	        0x4883ec20	                           sub rsp, 0x20	       490	sequencer.c	FUNCTION_20
0x40018ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       490	sequencer.c	FUNCTION_20
0x40018d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       493	sequencer.c	FUNCTION_20	CALL_1
0x40018d6	      0xbe0a000000	                            mov esi, 0xa	       493	sequencer.c	FUNCTION_20	CALL_1
0x40018db	          0x4889c7	                            mov rdi, rax	       493	sequencer.c	FUNCTION_20	CALL_1
0x40018de	      0xe824e9ffff	                   call sym.strbuf_addch	       493	sequencer.c	FUNCTION_20	CALL_1
0x40018e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	sequencer.c	FUNCTION_20	CALL_2
0x40018e7	      0xbe00000000	                              mov esi, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x40018ec	          0x4889c7	                            mov rdi, rax	       494	sequencer.c	FUNCTION_20	CALL_2
0x40018ef	      0xb800000000	                              mov eax, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x40018f4	      0xe800000000	                          call 0x40018f9	       494	sequencer.c	FUNCTION_20	CALL_2
0x40018f9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       495	sequencer.c	FUNCTION_20	FOR_1
0x4001900	      0xe996000000	                           jmp 0x400199b	       495	sequencer.c	FUNCTION_20	FOR_1
0x4001905	    0x488b0d000000	            mov rcx, qword [0x0400190c] 	       496	sequencer.c	FUNCTION_20	FOR_1
0x400190c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       496	sequencer.c	FUNCTION_20	FOR_1
0x400190f	          0x8d5001	                      lea edx, [rax + 1]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4001912	          0x8955f4	              mov dword [rbp - 0xc], edx	       496	sequencer.c	FUNCTION_20	FOR_1
0x4001915	            0x4898	                                    cdqe	       496	sequencer.c	FUNCTION_20	FOR_1
0x4001917	        0x48c1e003	                              shl rax, 3	       496	sequencer.c	FUNCTION_20	FOR_1
0x400191b	          0x4801c8	                            add rax, rcx	       496	sequencer.c	FUNCTION_20	FOR_1
0x400191e	          0x488b00	                    mov rax, qword [rax]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4001921	        0x488945f8	                mov qword [rbp - 8], rax	       496	sequencer.c	FUNCTION_20	FOR_1
0x4001925	        0x488b45f8	                mov rax, qword [rbp - 8]	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4001929	          0x8b4038	            mov eax, dword [rax + 0x38] 	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x400192c	      0x2500300000	                         and eax, 0x3000	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4001931	          0xc1e80c	                            shr eax, 0xc	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4001934	            0x85c0	                           test eax, eax	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4001936	            0x7463	                            je 0x400199b	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4001938	        0x488b45f8	                mov rax, qword [rbp - 8]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x400193c	        0x488d5058	                   lea rdx, [rax + 0x58]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4001940	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4001944	      0xbe00000000	                              mov esi, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4001949	          0x4889c7	                            mov rdi, rax	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x400194c	      0xb800000000	                              mov eax, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4001951	      0xe800000000	                          call 0x4001956	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4001956	            0xeb04	                           jmp 0x400195c	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001958	        0x8345f401	                add dword [rbp - 0xc], 1	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400195c	    0x8b1500000000	            mov edx, dword [0x04001962] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001962	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001965	            0x39c2	                            cmp edx, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001967	            0x7632	                           jbe 0x400199b	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001969	    0x488b05000000	            mov rax, qword [0x04001970] 	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4001970	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4001973	          0x4863d2	                         movsxd rdx, edx	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4001976	        0x48c1e203	                              shl rdx, 3	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400197a	          0x4801d0	                            add rax, rdx	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400197d	          0x488b00	                    mov rax, qword [rax]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4001980	        0x488d5058	                   lea rdx, [rax + 0x58]	       500	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4001984	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001988	        0x4883c058	                           add rax, 0x58	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x400198c	          0x4889d6	                            mov rsi, rdx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x400198f	          0x4889c7	                            mov rdi, rax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001992	      0xe800000000	                          call 0x4001997	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001997	            0x85c0	                           test eax, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x4001999	            0x74bd	                            je 0x4001958	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1	CALL_4
0x400199b	    0x8b1500000000	            mov edx, dword [0x040019a1] 	       495	sequencer.c	FUNCTION_20	FOR_1
0x40019a1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       495	sequencer.c	FUNCTION_20	FOR_1
0x40019a4	            0x39c2	                            cmp edx, eax	       495	sequencer.c	FUNCTION_20	FOR_1
0x40019a6	     0xf8759ffffff	                            ja 0x4001905	       495	sequencer.c	FUNCTION_20	FOR_1
0x40019ac	              0x90	                                     nop	       504	sequencer.c	FUNCTION_20
0x40019ad	              0xc9	                                   leave	       504	sequencer.c	FUNCTION_20
0x40019ae	              0xc3	                                     ret	       504	sequencer.c	FUNCTION_20
is_noop	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	8
0x4003c7f	              0x55	                                push rbp	      1357	sequencer.c	FUNCTION_43
0x4003c80	          0x4889e5	                            mov rbp, rsp	      1357	sequencer.c	FUNCTION_43
0x4003c83	          0x897dfc	                mov dword [rbp - 4], edi	      1357	sequencer.c	FUNCTION_43
0x4003c86	        0x837dfc09	                  cmp dword [rbp - 4], 9	      1358	sequencer.c	FUNCTION_43
0x4003c8a	           0xf97c0	                                 seta al	      1358	sequencer.c	FUNCTION_43
0x4003c8d	           0xfb6c0	                           movzx eax, al	      1358	sequencer.c	FUNCTION_43
0x4003c90	              0x5d	                                 pop rbp	      1359	sequencer.c	FUNCTION_43
0x4003c91	              0xc3	                                     ret	      1359	sequencer.c	FUNCTION_43
is_original_commit_empty	CALL,9:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	73
0x4003a82	              0x55	                                push rbp	      1241	sequencer.c	FUNCTION_39
0x4003a83	          0x4889e5	                            mov rbp, rsp	      1241	sequencer.c	FUNCTION_39
0x4003a86	              0x53	                                push rbx	      1241	sequencer.c	FUNCTION_39
0x4003a87	        0x4883ec28	                           sub rsp, 0x28	      1241	sequencer.c	FUNCTION_39
0x4003a8b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1241	sequencer.c	FUNCTION_39
0x4003a8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4003a93	          0x4889c7	                            mov rdi, rax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4003a96	      0xe86ccaffff	                   call sym.parse_commit	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4003a9b	            0x85c0	                           test eax, eax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4003a9d	            0x7437	                            je 0x4003ad6	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4003a9f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003aa3	        0x4883c004	                              add rax, 4	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003aa7	          0x4889c7	                            mov rdi, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003aaa	      0xe800000000	                          call 0x4003aaf	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003aaf	          0x4889c3	                            mov rbx, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ab2	      0xbf00000000	                              mov edi, 0	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ab7	      0xe8ebc8ffff	                               call sym.	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003abc	          0x4889de	                            mov rsi, rbx	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003abf	          0x4889c7	                            mov rdi, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ac2	      0xb800000000	                              mov eax, 0	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ac7	      0xe800000000	                          call 0x4003acc	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003acc	      0xe86fc5ffff	                    call sym.const_error	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ad1	      0xe9ab000000	                           jmp 0x4003b81	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4003ad6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1247	sequencer.c	FUNCTION_39	IF_2
0x4003ada	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1247	sequencer.c	FUNCTION_39	IF_2
0x4003ade	          0x4885c0	                           test rax, rax	      1247	sequencer.c	FUNCTION_39	IF_2
0x4003ae1	            0x7465	                            je 0x4003b48	      1247	sequencer.c	FUNCTION_39	IF_2
0x4003ae3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1248	sequencer.c	FUNCTION_39	IF_2
0x4003ae7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1248	sequencer.c	FUNCTION_39	IF_2
0x4003aeb	          0x488b00	                    mov rax, qword [rax]	      1248	sequencer.c	FUNCTION_39	IF_2
0x4003aee	        0x488945e8	             mov qword [rbp - 0x18], rax	      1248	sequencer.c	FUNCTION_39	IF_2
0x4003af2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4003af6	          0x4889c7	                            mov rdi, rax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4003af9	      0xe809caffff	                   call sym.parse_commit	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4003afe	            0x85c0	                           test eax, eax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4003b00	            0x7434	                            je 0x4003b36	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4003b02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b06	        0x4883c004	                              add rax, 4	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b0a	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b0d	      0xe800000000	                          call 0x4003b12	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b12	          0x4889c3	                            mov rbx, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b15	      0xbf00000000	                              mov edi, 0	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b1a	      0xe888c8ffff	                               call sym.	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b1f	          0x4889de	                            mov rsi, rbx	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b22	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b25	      0xb800000000	                              mov eax, 0	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b2a	      0xe800000000	                          call 0x4003b2f	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b2f	      0xe80cc5ffff	                    call sym.const_error	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b34	            0xeb4b	                           jmp 0x4003b81	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4003b36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4003b3a	          0x4889c7	                            mov rdi, rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4003b3d	      0xe800000000	                          call 0x4003b42	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4003b42	        0x488945e0	             mov qword [rbp - 0x20], rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4003b46	            0xeb13	                           jmp 0x4003b5b	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4003b48	    0x488b05000000	            mov rax, qword [0x04003b4f] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4003b4f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4003b53	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4003b57	        0x488945e0	             mov qword [rbp - 0x20], rax	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4003b5b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b5f	          0x4889c7	                            mov rdi, rax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b62	      0xe800000000	                          call 0x4003b67	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b67	          0x4889c2	                            mov rdx, rax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b6e	          0x4889d6	                            mov rsi, rdx	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b71	          0x4889c7	                            mov rdi, rax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b74	      0xe884c8ffff	                         call sym.oidcmp	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b79	            0x85c0	                           test eax, eax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b7b	           0xf94c0	                                 sete al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b7e	           0xfb6c0	                           movzx eax, al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4003b81	        0x4883c428	                           add rsp, 0x28	      1258	sequencer.c	FUNCTION_39
0x4003b85	              0x5b	                                 pop rbx	      1258	sequencer.c	FUNCTION_39
0x4003b86	              0x5d	                                 pop rbp	      1258	sequencer.c	FUNCTION_39
0x4003b87	              0xc3	                                     ret	      1258	sequencer.c	FUNCTION_39
do_commit	CALL,11:FOR,0:WHILE,0:ELSE,0:DO,0:IF,5:SWITCH,0:functions,0	94
0x4003915	              0x55	                                push rbp	      1210	sequencer.c	FUNCTION_38
0x4003916	          0x4889e5	                            mov rbp, rsp	      1210	sequencer.c	FUNCTION_38
0x4003919	        0x4883ec70	                           sub rsp, 0x70	      1210	sequencer.c	FUNCTION_38
0x400391d	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1210	sequencer.c	FUNCTION_38
0x4003921	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1210	sequencer.c	FUNCTION_38
0x4003925	        0x48895598	             mov qword [rbp - 0x68], rdx	      1210	sequencer.c	FUNCTION_38
0x4003929	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1210	sequencer.c	FUNCTION_38
0x400392c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1210	sequencer.c	FUNCTION_38
0x4003935	        0x488945f8	                mov qword [rbp - 8], rax	      1210	sequencer.c	FUNCTION_38
0x4003939	            0x31c0	                            xor eax, eax	      1210	sequencer.c	FUNCTION_38
0x400393b	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1211	sequencer.c	FUNCTION_38
0x4003942	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003945	          0x83e002	                              and eax, 2	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003948	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x400394a	     0xf85fb000000	                           jne 0x4003a4b	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003950	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003953	          0x83e010	                           and eax, 0x10	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003956	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x4003958	     0xf85ed000000	                           jne 0x4003a4b	      1213	sequencer.c	FUNCTION_38	IF_1
0x400395e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4003966	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x400396e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4003976	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400397b	            0x7448	                            je 0x40039c5	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400397d	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4003981	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4003985	      0xba00080000	                          mov edx, 0x800	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400398a	          0x4889ce	                            mov rsi, rcx	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400398d	          0x4889c7	                            mov rdi, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4003990	      0xe800000000	                          call 0x4003995	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4003995	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4003998	            0x792b	                           jns 0x40039c5	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x400399a	      0xbf00000000	                              mov edi, 0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400399f	      0xe803caffff	                               call sym.	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039a4	          0x4889c2	                            mov rdx, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039a7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039ab	          0x4889c6	                            mov rsi, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039ae	          0x4889d7	                            mov rdi, rdx	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039b1	      0xb800000000	                              mov eax, 0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039b6	      0xe800000000	                          call 0x40039bb	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039bb	      0xe880c6ffff	                    call sym.const_error	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039c0	      0xe9a7000000	                           jmp 0x4003a6c	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x40039c5	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039ca	            0x7406	                            je 0x40039d2	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039cc	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039d0	            0xeb05	                           jmp 0x40039d7	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039d2	      0xb800000000	                              mov eax, 0	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039d7	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039db	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039de	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039e2	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039e6	          0x4989f8	                             mov r8, rdi	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039e9	          0x4889c7	                            mov rdi, rax	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039ec	      0xe8eff9ffff	                  call sym.try_to_commit	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039f1	          0x8945bc	             mov dword [rbp - 0x44], eax	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x40039f4	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40039f8	          0x4889c7	                            mov rdi, rax	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40039fb	      0xe800000000	                          call 0x4003a00	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4003a00	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1225	sequencer.c	FUNCTION_38	IF_1	IF_3
0x4003a04	            0x7545	                           jne 0x4003a4b	      1225	sequencer.c	FUNCTION_38	IF_1	IF_3
0x4003a06	      0xe800000000	                          call 0x4003a0b	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4003a0b	          0x4889c7	                            mov rdi, rax	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4003a0e	      0xe800000000	                          call 0x4003a13	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4003a13	      0xe800000000	                          call 0x4003a18	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4003a18	          0x4889c7	                            mov rdi, rax	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4003a1b	      0xe800000000	                          call 0x4003a20	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4003a20	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4003a24	          0x4889c7	                            mov rdi, rax	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4003a27	      0xe89cd2ffff	                    call sym.is_rebase_i	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4003a2c	            0x85c0	                           test eax, eax	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4003a2e	            0x7516	                           jne 0x4003a46	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4003a30	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4003a34	      0xba02000000	                              mov edx, 2	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4003a39	          0x4889c6	                            mov rsi, rax	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4003a3c	      0xbf00000000	                              mov edi, 0	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4003a41	      0xe800000000	                          call 0x4003a46	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4003a46	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x4003a49	            0xeb21	                           jmp 0x4003a6c	      1231	sequencer.c	FUNCTION_38	IF_1	IF_3
0x4003a4b	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      1234	sequencer.c	FUNCTION_38	IF_5
0x4003a4f	            0x7518	                           jne 0x4003a69	      1234	sequencer.c	FUNCTION_38	IF_5
0x4003a51	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a54	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a5c	          0x4889ce	                            mov rsi, rcx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a5f	          0x4889c7	                            mov rdi, rax	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a62	      0xe852e8ffff	                 call sym.run_git_commit	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a67	            0xeb03	                           jmp 0x4003a6c	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4003a69	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1237	sequencer.c	FUNCTION_38
0x4003a6c	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1238	sequencer.c	FUNCTION_38
0x4003a70	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1238	sequencer.c	FUNCTION_38
0x4003a79	            0x7405	                            je 0x4003a80	      1238	sequencer.c	FUNCTION_38
0x4003a7b	      0xe800000000	                          call 0x4003a80	      1238	sequencer.c	FUNCTION_38
0x4003a80	              0xc9	                                   leave	      1238	sequencer.c	FUNCTION_38
0x4003a81	              0xc3	                                     ret	      1238	sequencer.c	FUNCTION_38
subject2item_cmp	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	25
0x400dbd8	              0x55	                                push rbp	      4275	sequencer.c	FUNCTION_104
0x400dbd9	          0x4889e5	                            mov rbp, rsp	      4275	sequencer.c	FUNCTION_104
0x400dbdc	        0x4883ec20	                           sub rsp, 0x20	      4275	sequencer.c	FUNCTION_104
0x400dbe0	        0x48897df8	                mov qword [rbp - 8], rdi	      4275	sequencer.c	FUNCTION_104
0x400dbe4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4275	sequencer.c	FUNCTION_104
0x400dbe8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4275	sequencer.c	FUNCTION_104
0x400dbec	        0x48894de0	             mov qword [rbp - 0x20], rcx	      4275	sequencer.c	FUNCTION_104
0x400dbf0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dbf5	            0x7419	                            je 0x400dc10	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dbf7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dbfb	        0x488d5014	                   lea rdx, [rax + 0x14]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dbff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc03	          0x4889c6	                            mov rsi, rax	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc06	          0x4889d7	                            mov rdi, rdx	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc09	      0xe800000000	                          call 0x400dc0e	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc0e	            0xeb1b	                           jmp 0x400dc2b	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc14	        0x488d5014	                   lea rdx, [rax + 0x14]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc18	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc1c	        0x4883c014	                           add rax, 0x14	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc20	          0x4889d6	                            mov rsi, rdx	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc23	          0x4889c7	                            mov rdi, rax	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc26	      0xe800000000	                          call 0x400dc2b	      4276	sequencer.c	FUNCTION_104	CALL_2
0x400dc2b	              0xc9	                                   leave	      4277	sequencer.c	FUNCTION_104
0x400dc2c	              0xc3	                                     ret	      4277	sequencer.c	FUNCTION_104
is_null_oid	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	13
0x4000422	              0x55	                                push rbp	       989	cache.h	FUNCTION_116
0x4000423	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_116
0x4000426	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_116
0x400042a	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_116
0x400042e	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_116	CALL_1
0x4000432	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_116	CALL_1
0x4000437	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_116	CALL_1
0x400043a	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_116	CALL_1
0x400043f	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_116	CALL_1
0x4000441	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_116	CALL_1
0x4000444	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_116	CALL_1
0x4000447	              0xc9	                                   leave	       991	cache.h	FUNCTION_116
0x4000448	              0xc3	                                     ret	       991	cache.h	FUNCTION_116
empty_tree	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	9
0x40015a8	              0x55	                                push rbp	       425	sequencer.c	FUNCTION_16
0x40015a9	          0x4889e5	                            mov rbp, rsp	       425	sequencer.c	FUNCTION_16
0x40015ac	    0x488b05000000	            mov rax, qword [0x040015b3] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x40015b3	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x40015b7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x40015bb	          0x4889c7	                            mov rdi, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x40015be	      0xe800000000	                          call 0x40015c3	       426	sequencer.c	FUNCTION_16	CALL_1
0x40015c3	              0x5d	                                 pop rbp	       427	sequencer.c	FUNCTION_16
0x40015c4	              0xc3	                                     ret	       427	sequencer.c	FUNCTION_16
get_item_line_length	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	24
0x4005ba4	              0x55	                                push rbp	      1947	sequencer.c	FUNCTION_58
0x4005ba5	          0x4889e5	                            mov rbp, rsp	      1947	sequencer.c	FUNCTION_58
0x4005ba8	              0x53	                                push rbx	      1947	sequencer.c	FUNCTION_58
0x4005ba9	        0x4883ec10	                           sub rsp, 0x10	      1947	sequencer.c	FUNCTION_58
0x4005bad	        0x48897df0	             mov qword [rbp - 0x10], rdi	      1947	sequencer.c	FUNCTION_58
0x4005bb1	          0x8975ec	             mov dword [rbp - 0x14], esi	      1947	sequencer.c	FUNCTION_58
0x4005bb4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bb7	          0x8d5001	                      lea edx, [rax + 1]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bbe	            0x89d6	                            mov esi, edx	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bc0	          0x4889c7	                            mov rdi, rax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bc3	      0xe862ffffff	           call sym.get_item_line_offset	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bc8	            0x89c3	                            mov ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bca	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4005bcd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4005bd1	            0x89d6	                            mov esi, edx	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4005bd3	          0x4889c7	                            mov rdi, rax	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4005bd6	      0xe84fffffff	           call sym.get_item_line_offset	      1949	sequencer.c	FUNCTION_58	CALL_2
0x4005bdb	            0x29c3	                            sub ebx, eax	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bdd	            0x89d8	                            mov eax, ebx	      1948	sequencer.c	FUNCTION_58	CALL_1
0x4005bdf	        0x4883c410	                           add rsp, 0x10	      1950	sequencer.c	FUNCTION_58
0x4005be3	              0x5b	                                 pop rbx	      1950	sequencer.c	FUNCTION_58
0x4005be4	              0x5d	                                 pop rbp	      1950	sequencer.c	FUNCTION_58
0x4005be5	              0xc3	                                     ret	      1950	sequencer.c	FUNCTION_58
append_signoff	CALL,13:FOR,0:WHILE,0:ELSE,3:DO,0:IF,8:SWITCH,0:functions,0	145
0x400b2cc	              0x55	                                push rbp	      3505	sequencer.c	FUNCTION_93
0x400b2cd	          0x4889e5	                            mov rbp, rsp	      3505	sequencer.c	FUNCTION_93
0x400b2d0	              0x53	                                push rbx	      3505	sequencer.c	FUNCTION_93
0x400b2d1	        0x4883ec58	                           sub rsp, 0x58	      3505	sequencer.c	FUNCTION_93
0x400b2d5	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3505	sequencer.c	FUNCTION_93
0x400b2d9	          0x8975a4	             mov dword [rbp - 0x5c], esi	      3505	sequencer.c	FUNCTION_93
0x400b2dc	          0x8955a0	             mov dword [rbp - 0x60], edx	      3505	sequencer.c	FUNCTION_93
0x400b2df	    0x64488b042528	                mov rax, qword fs:[0x28]	      3505	sequencer.c	FUNCTION_93
0x400b2e8	        0x488945e8	             mov qword [rbp - 0x18], rax	      3505	sequencer.c	FUNCTION_93
0x400b2ec	            0x31c0	                            xor eax, eax	      3505	sequencer.c	FUNCTION_93
0x400b2ee	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3506	sequencer.c	FUNCTION_93
0x400b2f1	          0x83e001	                              and eax, 1	      3506	sequencer.c	FUNCTION_93
0x400b2f4	          0x8945bc	             mov dword [rbp - 0x44], eax	      3506	sequencer.c	FUNCTION_93
0x400b2f7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      3507	sequencer.c	FUNCTION_93
0x400b2ff	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      3507	sequencer.c	FUNCTION_93
0x400b307	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3507	sequencer.c	FUNCTION_93
0x400b30f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3510	sequencer.c	FUNCTION_93	CALL_1
0x400b313	      0xbe00000000	                              mov esi, 0	      3510	sequencer.c	FUNCTION_93	CALL_1
0x400b318	          0x4889c7	                            mov rdi, rax	      3510	sequencer.c	FUNCTION_93	CALL_1
0x400b31b	      0xe8554fffff	                  call sym.strbuf_addstr	      3510	sequencer.c	FUNCTION_93	CALL_1
0x400b320	      0xbf00000000	                              mov edi, 0	      3512	sequencer.c	FUNCTION_93	CALL_5
0x400b325	      0xe800000000	                          call 0x400b32a	      3512	sequencer.c	FUNCTION_93	CALL_5
0x400b32a	          0x4889c3	                            mov rbx, rax	      3512	sequencer.c	FUNCTION_93	CALL_5
0x400b32d	      0xbf00000000	                              mov edi, 0	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b332	      0xe800000000	                          call 0x400b337	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b337	          0x4889de	                            mov rsi, rbx	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b33a	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b33d	      0xe800000000	                          call 0x400b342	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b342	          0x4889c2	                            mov rdx, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b345	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b349	          0x4889d6	                            mov rsi, rdx	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b34c	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b34f	      0xe8214fffff	                  call sym.strbuf_addstr	      3511	sequencer.c	FUNCTION_93	CALL_4
0x400b354	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3513	sequencer.c	FUNCTION_93	CALL_6
0x400b358	      0xbe0a000000	                            mov esi, 0xa	      3513	sequencer.c	FUNCTION_93	CALL_6
0x400b35d	          0x4889c7	                            mov rdi, rax	      3513	sequencer.c	FUNCTION_93	CALL_6
0x400b360	      0xe8a24effff	                   call sym.strbuf_addch	      3513	sequencer.c	FUNCTION_93	CALL_6
0x400b365	        0x837da400	               cmp dword [rbp - 0x5c], 0	      3515	sequencer.c	FUNCTION_93	IF_1
0x400b369	            0x750c	                           jne 0x400b377	      3515	sequencer.c	FUNCTION_93	IF_1
0x400b36b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3516	sequencer.c	FUNCTION_93	CALL_7
0x400b36f	          0x4889c7	                            mov rdi, rax	      3516	sequencer.c	FUNCTION_93	CALL_7
0x400b372	      0xe8854fffff	           call sym.strbuf_complete_line	      3516	sequencer.c	FUNCTION_93	CALL_7
0x400b377	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b37b	        0x488b5008	                mov rdx, qword [rax + 8]	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b37f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b382	            0x4898	                                    cdqe	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b384	          0x4829c2	                            sub rdx, rax	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b387	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b38b	          0x4839c2	                            cmp rdx, rax	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b38e	            0x7528	                           jne 0x400b3b8	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b390	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b394	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b398	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b39c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b3a0	          0x4889ce	                            mov rsi, rcx	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b3a3	          0x4889c7	                            mov rdi, rax	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b3a6	      0xe800000000	                          call 0x400b3ab	      3523	sequencer.c	FUNCTION_93	IF_2	CALL_8
0x400b3ab	            0x85c0	                           test eax, eax	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b3ad	            0x7509	                           jne 0x400b3b8	      3522	sequencer.c	FUNCTION_93	IF_2
0x400b3af	    0xc745b8030000	               mov dword [rbp - 0x48], 3	      3524	sequencer.c	FUNCTION_93	IF_2
0x400b3b6	            0xeb19	                           jmp 0x400b3d1	      3524	sequencer.c	FUNCTION_93	IF_2
0x400b3b8	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3bb	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3c3	          0x4889ce	                            mov rsi, rcx	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3c6	          0x4889c7	                            mov rdi, rax	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3c9	      0xe86759ffff	          call sym.has_conforming_footer	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3ce	          0x8945b8	             mov dword [rbp - 0x48], eax	      3526	sequencer.c	FUNCTION_93	CALL_9
0x400b3d1	        0x837db800	               cmp dword [rbp - 0x48], 0	      3528	sequencer.c	FUNCTION_93	IF_3
0x400b3d5	     0xf85a7000000	                           jne 0x400b482	      3528	sequencer.c	FUNCTION_93	IF_3
0x400b3db	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3529	sequencer.c	FUNCTION_93	IF_3
0x400b3e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3e7	        0x488b5008	                mov rdx, qword [rax + 8]	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3eb	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3ee	            0x4898	                                    cdqe	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3f0	          0x4829c2	                            sub rdx, rax	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3f3	          0x4889d0	                            mov rax, rdx	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3f6	        0x488945c8	             mov qword [rbp - 0x38], rax	      3530	sequencer.c	FUNCTION_93	IF_3
0x400b3fa	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x400b3ff	            0x750a	                           jne 0x400b40b	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x400b401	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x400b409	            0xeb33	                           jmp 0x400b43e	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x400b40b	      0x48837dc801	               cmp qword [rbp - 0x38], 1	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x400b410	            0x750a	                           jne 0x400b41c	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x400b412	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x400b41a	            0xeb22	                           jmp 0x400b43e	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x400b41c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b420	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b424	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b428	        0x4883ea02	                              sub rdx, 2	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b42c	          0x4801d0	                            add rax, rdx	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b42f	           0xfb600	                   movzx eax, byte [rax]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b432	            0x3c0a	                             cmp al, 0xa	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b434	            0x7408	                            je 0x400b43e	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b436	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3550	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x400b43e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3553	sequencer.c	FUNCTION_93	IF_3	IF_7
0x400b443	            0x743d	                            je 0x400b482	      3553	sequencer.c	FUNCTION_93	IF_3	IF_7
0x400b445	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b449	          0x4889c7	                            mov rdi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b44c	      0xe800000000	                          call 0x400b451	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b451	          0x4889c1	                            mov rcx, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b454	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b458	        0x488b5008	                mov rdx, qword [rax + 8]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b45c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b45f	            0x4898	                                    cdqe	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b461	          0x4889d6	                            mov rsi, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b464	          0x4829c6	                            sub rsi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b467	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b46b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b46f	          0x4989c8	                             mov r8, rcx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b472	          0x4889d1	                            mov rcx, rdx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b475	      0xba00000000	                              mov edx, 0	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b47a	          0x4889c7	                            mov rdi, rax	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b47d	      0xe800000000	                          call 0x400b482	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_10
0x400b482	        0x837db803	               cmp dword [rbp - 0x48], 3	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b486	            0x743b	                            je 0x400b4c3	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b488	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b48c	            0x7406	                            je 0x400b494	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b48e	        0x837db802	               cmp dword [rbp - 0x48], 2	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b492	            0x742f	                            je 0x400b4c3	      3558	sequencer.c	FUNCTION_93	IF_8
0x400b494	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b498	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3560	sequencer.c	FUNCTION_93	IF_8
0x400b49c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4a0	        0x488b7008	                mov rsi, qword [rax + 8]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4a4	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4a7	            0x4898	                                    cdqe	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4a9	          0x4829c6	                            sub rsi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4b0	          0x4989c8	                             mov r8, rcx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4b3	          0x4889d1	                            mov rcx, rdx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4b6	      0xba00000000	                              mov edx, 0	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4bb	          0x4889c7	                            mov rdi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4be	      0xe800000000	                          call 0x400b4c3	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_12
0x400b4c3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3562	sequencer.c	FUNCTION_93	CALL_13
0x400b4c7	          0x4889c7	                            mov rdi, rax	      3562	sequencer.c	FUNCTION_93	CALL_13
0x400b4ca	      0xe800000000	                          call 0x400b4cf	      3562	sequencer.c	FUNCTION_93	CALL_13
0x400b4cf	              0x90	                                     nop	      3563	sequencer.c	FUNCTION_93
0x400b4d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3563	sequencer.c	FUNCTION_93
0x400b4d4	    0x644833042528	                xor rax, qword fs:[0x28]	      3563	sequencer.c	FUNCTION_93
0x400b4dd	            0x7405	                            je 0x400b4e4	      3563	sequencer.c	FUNCTION_93
0x400b4df	      0xe800000000	                          call 0x400b4e4	      3563	sequencer.c	FUNCTION_93
0x400b4e4	        0x4883c458	                           add rsp, 0x58	      3563	sequencer.c	FUNCTION_93
0x400b4e8	              0x5b	                                 pop rbx	      3563	sequencer.c	FUNCTION_93
0x400b4e9	              0x5d	                                 pop rbp	      3563	sequencer.c	FUNCTION_93
0x400b4ea	              0xc3	                                     ret	      3563	sequencer.c	FUNCTION_93
hold_lock_file_for_update	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	14
0x40004bf	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_133
0x40004c0	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_133
0x40004c3	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_133
0x40004c7	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_133
0x40004cb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_133
0x40004cf	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_133
0x40004d2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004d5	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004dd	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004e2	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004e5	      0xe800000000	                          call 0x40004ea	       175	lockfile.h	FUNCTION_133	CALL_1
0x40004ea	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_133
0x40004eb	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_133
template_untouched	CALL,5:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	71
0x400277e	              0x55	                                push rbp	       827	sequencer.c	FUNCTION_29
0x400277f	          0x4889e5	                            mov rbp, rsp	       827	sequencer.c	FUNCTION_29
0x4002782	        0x4883ec50	                           sub rsp, 0x50	       827	sequencer.c	FUNCTION_29
0x4002786	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       827	sequencer.c	FUNCTION_29
0x400278a	        0x488975c0	             mov qword [rbp - 0x40], rsi	       827	sequencer.c	FUNCTION_29
0x400278e	          0x8955bc	             mov dword [rbp - 0x44], edx	       827	sequencer.c	FUNCTION_29
0x4002791	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	sequencer.c	FUNCTION_29
0x400279a	        0x488945f8	                mov qword [rbp - 8], rax	       827	sequencer.c	FUNCTION_29
0x400279e	            0x31c0	                            xor eax, eax	       827	sequencer.c	FUNCTION_29
0x40027a0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       828	sequencer.c	FUNCTION_29
0x40027a8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       828	sequencer.c	FUNCTION_29
0x40027b0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       828	sequencer.c	FUNCTION_29
0x40027b8	        0x837dbc01	               cmp dword [rbp - 0x44], 1	       831	sequencer.c	FUNCTION_29	IF_1
0x40027bc	            0x7517	                           jne 0x40027d5	       831	sequencer.c	FUNCTION_29	IF_1
0x40027be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       831	sequencer.c	FUNCTION_29	IF_1
0x40027c2	        0x488b4008	                mov rax, qword [rax + 8]	       831	sequencer.c	FUNCTION_29	IF_1
0x40027c6	          0x4885c0	                           test rax, rax	       831	sequencer.c	FUNCTION_29	IF_1
0x40027c9	            0x740a	                            je 0x40027d5	       831	sequencer.c	FUNCTION_29	IF_1
0x40027cb	      0xb800000000	                              mov eax, 0	       832	sequencer.c	FUNCTION_29	IF_1
0x40027d0	      0xe99f000000	                           jmp 0x4002874	       832	sequencer.c	FUNCTION_29	IF_1
0x40027d5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027da	            0x741d	                            je 0x40027f9	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027dc	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027e0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027e4	      0xba00000000	                              mov edx, 0	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027e9	          0x4889ce	                            mov rsi, rcx	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027ec	          0x4889c7	                            mov rdi, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027ef	      0xe800000000	                          call 0x40027f4	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027f4	          0x4885c0	                           test rax, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027f7	            0x7f07	                            jg 0x4002800	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x40027f9	      0xb800000000	                              mov eax, 0	       835	sequencer.c	FUNCTION_29	IF_2
0x40027fe	            0xeb74	                           jmp 0x4002874	       835	sequencer.c	FUNCTION_29	IF_2
0x4002800	        0x837dbc03	               cmp dword [rbp - 0x44], 3	       837	sequencer.c	FUNCTION_29	CALL_2
0x4002804	           0xf94c0	                                 sete al	       837	sequencer.c	FUNCTION_29	CALL_2
0x4002807	           0xfb6d0	                           movzx edx, al	       837	sequencer.c	FUNCTION_29	CALL_2
0x400280a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       837	sequencer.c	FUNCTION_29	CALL_2
0x400280e	            0x89d6	                            mov esi, edx	       837	sequencer.c	FUNCTION_29	CALL_2
0x4002810	          0x4889c7	                            mov rdi, rax	       837	sequencer.c	FUNCTION_29	CALL_2
0x4002813	      0xe800000000	                          call 0x4002818	       837	sequencer.c	FUNCTION_29	CALL_2
0x4002818	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x400281c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002820	        0x488b4010	            mov rax, qword [rax + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002824	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002828	          0x4889ce	                            mov rsi, rcx	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x400282b	          0x4889c7	                            mov rdi, rax	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x400282e	      0xe818d8ffff	                    call sym.skip_prefix	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002833	            0x85c0	                           test eax, eax	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002835	            0x750c	                           jne 0x4002843	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4002837	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       839	sequencer.c	FUNCTION_29	IF_3
0x400283b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       839	sequencer.c	FUNCTION_29	IF_3
0x400283f	        0x488945d8	             mov qword [rbp - 0x28], rax	       839	sequencer.c	FUNCTION_29	IF_3
0x4002843	        0x488d45e0	                   lea rax, [rbp - 0x20]	       840	sequencer.c	FUNCTION_29	CALL_4
0x4002847	          0x4889c7	                            mov rdi, rax	       840	sequencer.c	FUNCTION_29	CALL_4
0x400284a	      0xe800000000	                          call 0x400284f	       840	sequencer.c	FUNCTION_29	CALL_4
0x400284f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002853	          0x4889c2	                            mov rdx, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002856	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       841	sequencer.c	FUNCTION_29	CALL_5
0x400285a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       841	sequencer.c	FUNCTION_29	CALL_5
0x400285e	          0x4829c2	                            sub rdx, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002861	          0x4889d0	                            mov rax, rdx	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002864	            0x89c2	                            mov edx, eax	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002866	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       841	sequencer.c	FUNCTION_29	CALL_5
0x400286a	            0x89d6	                            mov esi, edx	       841	sequencer.c	FUNCTION_29	CALL_5
0x400286c	          0x4889c7	                            mov rdi, rax	       841	sequencer.c	FUNCTION_29	CALL_5
0x400286f	      0xe8c3fdffff	                  call sym.rest_is_empty	       841	sequencer.c	FUNCTION_29	CALL_5
0x4002874	        0x488b4df8	                mov rcx, qword [rbp - 8]	       842	sequencer.c	FUNCTION_29
0x4002878	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       842	sequencer.c	FUNCTION_29
0x4002881	            0x7405	                            je 0x4002888	       842	sequencer.c	FUNCTION_29
0x4002883	      0xe800000000	                          call 0x4002888	       842	sequencer.c	FUNCTION_29
0x4002888	              0xc9	                                   leave	       842	sequencer.c	FUNCTION_29
0x4002889	              0xc3	                                     ret	       842	sequencer.c	FUNCTION_29
free_message	CALL,4:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	26
0x40011f9	              0x55	                                push rbp	       333	sequencer.c	FUNCTION_12
0x40011fa	          0x4889e5	                            mov rbp, rsp	       333	sequencer.c	FUNCTION_12
0x40011fd	        0x4883ec10	                           sub rsp, 0x10	       333	sequencer.c	FUNCTION_12
0x4001201	        0x48897df8	                mov qword [rbp - 8], rdi	       333	sequencer.c	FUNCTION_12
0x4001205	        0x488975f0	             mov qword [rbp - 0x10], rsi	       333	sequencer.c	FUNCTION_12
0x4001209	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       334	sequencer.c	FUNCTION_12	CALL_1
0x400120d	          0x488b00	                    mov rax, qword [rax]	       334	sequencer.c	FUNCTION_12	CALL_1
0x4001210	          0x4889c7	                            mov rdi, rax	       334	sequencer.c	FUNCTION_12	CALL_1
0x4001213	      0xe800000000	                          call 0x4001218	       334	sequencer.c	FUNCTION_12	CALL_1
0x4001218	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       335	sequencer.c	FUNCTION_12	CALL_2
0x400121c	        0x488b4008	                mov rax, qword [rax + 8]	       335	sequencer.c	FUNCTION_12	CALL_2
0x4001220	          0x4889c7	                            mov rdi, rax	       335	sequencer.c	FUNCTION_12	CALL_2
0x4001223	      0xe800000000	                          call 0x4001228	       335	sequencer.c	FUNCTION_12	CALL_2
0x4001228	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	sequencer.c	FUNCTION_12	CALL_3
0x400122c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       336	sequencer.c	FUNCTION_12	CALL_3
0x4001230	          0x4889c7	                            mov rdi, rax	       336	sequencer.c	FUNCTION_12	CALL_3
0x4001233	      0xe800000000	                          call 0x4001238	       336	sequencer.c	FUNCTION_12	CALL_3
0x4001238	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       337	sequencer.c	FUNCTION_12	CALL_4
0x400123c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       337	sequencer.c	FUNCTION_12	CALL_4
0x4001240	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	sequencer.c	FUNCTION_12	CALL_4
0x4001244	          0x4889d6	                            mov rsi, rdx	       337	sequencer.c	FUNCTION_12	CALL_4
0x4001247	          0x4889c7	                            mov rdi, rax	       337	sequencer.c	FUNCTION_12	CALL_4
0x400124a	      0xe800000000	                          call 0x400124f	       337	sequencer.c	FUNCTION_12	CALL_4
0x400124f	              0x90	                                     nop	       338	sequencer.c	FUNCTION_12
0x4001250	              0xc9	                                   leave	       338	sequencer.c	FUNCTION_12
0x4001251	              0xc3	                                     ret	       338	sequencer.c	FUNCTION_12
short_commit_name	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	12
0x40010de	              0x55	                                push rbp	       311	sequencer.c	FUNCTION_10
0x40010df	          0x4889e5	                            mov rbp, rsp	       311	sequencer.c	FUNCTION_10
0x40010e2	        0x4883ec10	                           sub rsp, 0x10	       311	sequencer.c	FUNCTION_10
0x40010e6	        0x48897df8	                mov qword [rbp - 8], rdi	       311	sequencer.c	FUNCTION_10
0x40010ea	    0x8b0500000000	            mov eax, dword [0x040010f0] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40010f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       312	sequencer.c	FUNCTION_10	CALL_1
0x40010f4	        0x4883c204	                              add rdx, 4	       312	sequencer.c	FUNCTION_10	CALL_1
0x40010f8	            0x89c6	                            mov esi, eax	       312	sequencer.c	FUNCTION_10	CALL_1
0x40010fa	          0x4889d7	                            mov rdi, rdx	       312	sequencer.c	FUNCTION_10	CALL_1
0x40010fd	      0xe800000000	                          call 0x4001102	       312	sequencer.c	FUNCTION_10	CALL_1
0x4001102	              0xc9	                                   leave	       313	sequencer.c	FUNCTION_10
0x4001103	              0xc3	                                     ret	       313	sequencer.c	FUNCTION_10
update_abort_safety_file	CALL,8:FOR,0:WHILE,0:ELSE,1:DO,0:IF,2:SWITCH,0:functions,0	45
0x4001661	              0x55	                                push rbp	       443	sequencer.c	FUNCTION_18
0x4001662	          0x4889e5	                            mov rbp, rsp	       443	sequencer.c	FUNCTION_18
0x4001665	              0x53	                                push rbx	       443	sequencer.c	FUNCTION_18
0x4001666	        0x4883ec28	                           sub rsp, 0x28	       443	sequencer.c	FUNCTION_18
0x400166a	    0x64488b042528	                mov rax, qword fs:[0x28]	       443	sequencer.c	FUNCTION_18
0x4001673	        0x488945e8	             mov qword [rbp - 0x18], rax	       443	sequencer.c	FUNCTION_18
0x4001677	            0x31c0	                            xor eax, eax	       443	sequencer.c	FUNCTION_18
0x4001679	      0xe800000000	                          call 0x400167e	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x400167e	          0x4889c7	                            mov rdi, rax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4001681	      0xe800000000	                          call 0x4001686	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4001686	            0x85c0	                           test eax, eax	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x4001688	            0x745e	                            je 0x40016e8	       447	sequencer.c	FUNCTION_18	IF_1	CALL_2
0x400168a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400168e	          0x4889c6	                            mov rsi, rax	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x4001691	      0xbf00000000	                              mov edi, 0	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x4001696	      0xe800000000	                          call 0x400169b	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400169b	            0x85c0	                           test eax, eax	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400169d	            0x752b	                           jne 0x40016ca	       450	sequencer.c	FUNCTION_18	IF_2	CALL_3
0x400169f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016a3	          0x4889c7	                            mov rdi, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016a6	      0xe800000000	                          call 0x40016ab	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016ab	          0x4889c3	                            mov rbx, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016ae	      0xe85eefffff	     call sym.git_path_abort_safety_file	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016b3	          0x4889da	                            mov rdx, rbx	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016b6	      0xbe00000000	                              mov esi, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016bb	          0x4889c7	                            mov rdi, rax	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016be	      0xb800000000	                              mov eax, 0	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016c3	      0xe800000000	                          call 0x40016c8	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016c8	            0xeb1f	                           jmp 0x40016e9	       451	sequencer.c	FUNCTION_18	CALL_6
0x40016ca	      0xe842efffff	     call sym.git_path_abort_safety_file	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016cf	      0xba00000000	                              mov edx, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016d4	      0xbe00000000	                              mov esi, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016d9	          0x4889c7	                            mov rdi, rax	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016dc	      0xb800000000	                              mov eax, 0	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016e1	      0xe800000000	                          call 0x40016e6	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016e6	            0xeb01	                           jmp 0x40016e9	       453	sequencer.c	FUNCTION_18	CALL_8
0x40016e8	              0x90	                                     nop	       448	sequencer.c	FUNCTION_18	IF_1
0x40016e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	sequencer.c	FUNCTION_18
0x40016ed	    0x644833042528	                xor rax, qword fs:[0x28]	       454	sequencer.c	FUNCTION_18
0x40016f6	            0x7405	                            je 0x40016fd	       454	sequencer.c	FUNCTION_18
0x40016f8	      0xe800000000	                          call 0x40016fd	       454	sequencer.c	FUNCTION_18
0x40016fd	        0x4883c428	                           add rsp, 0x28	       454	sequencer.c	FUNCTION_18
0x4001701	              0x5b	                                 pop rbx	       454	sequencer.c	FUNCTION_18
0x4001702	              0x5d	                                 pop rbp	       454	sequencer.c	FUNCTION_18
0x4001703	              0xc3	                                     ret	       454	sequencer.c	FUNCTION_18
sequencer_remove_state	CALL,16:FOR,1:WHILE,1:ELSE,0:DO,0:IF,4:SWITCH,0:functions,0	123
0x4000e9a	              0x55	                                push rbp	       256	sequencer.c	FUNCTION_8
0x4000e9b	          0x4889e5	                            mov rbp, rsp	       256	sequencer.c	FUNCTION_8
0x4000e9e	        0x4883ec50	                           sub rsp, 0x50	       256	sequencer.c	FUNCTION_8
0x4000ea2	        0x48897db8	             mov qword [rbp - 0x48], rdi	       256	sequencer.c	FUNCTION_8
0x4000ea6	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	sequencer.c	FUNCTION_8
0x4000eaf	        0x488945f8	                mov qword [rbp - 8], rax	       256	sequencer.c	FUNCTION_8
0x4000eb3	            0x31c0	                            xor eax, eax	       256	sequencer.c	FUNCTION_8
0x4000eb5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       257	sequencer.c	FUNCTION_8
0x4000ebd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	sequencer.c	FUNCTION_8
0x4000ec5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       257	sequencer.c	FUNCTION_8
0x4000ecd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000ed1	          0x4889c7	                            mov rdi, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000ed4	      0xe8effdffff	                    call sym.is_rebase_i	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000ed9	            0x85c0	                           test eax, eax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000edb	     0xf84b7000000	                            je 0x4000f98	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000ee1	      0xe8ecf9ffff	     call sym.rebase_path_refs_to_delete	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000ee6	          0x4889c1	                            mov rcx, rax	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000ee9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000eed	      0xba00000000	                              mov edx, 0	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000ef2	          0x4889ce	                            mov rsi, rcx	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000ef5	          0x4889c7	                            mov rdi, rax	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000ef8	      0xe800000000	                          call 0x4000efd	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4000efd	          0x4885c0	                           test rax, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000f00	     0xf8e92000000	                           jle 0x4000f98	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4000f06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       262	sequencer.c	FUNCTION_8	IF_1
0x4000f0a	        0x488945d0	             mov qword [rbp - 0x30], rax	       262	sequencer.c	FUNCTION_8	IF_1
0x4000f0e	            0xeb76	                           jmp 0x4000f86	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0x4000f14	      0xbe0a000000	                            mov esi, 0xa	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0x4000f19	          0x4889c7	                            mov rdi, rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0x4000f1c	      0xe800000000	                          call 0x4000f21	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0x4000f21	        0x488945d8	             mov qword [rbp - 0x28], rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_4
0x4000f25	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4000f2a	            0x7407	                            je 0x4000f33	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4000f2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4000f30	          0xc60000	                       mov byte [rax], 0	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x4000f33	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f37	      0xb900000000	                              mov ecx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f3c	      0xba00000000	                              mov edx, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f41	          0x4889c6	                            mov rsi, rax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f44	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f49	      0xe800000000	                          call 0x4000f4e	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f4e	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f50	            0x7921	                           jns 0x4000f73	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_5
0x4000f52	      0xbf00000000	                              mov edi, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f57	      0xe84bf4ffff	                               call sym.	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f5c	          0x4889c2	                            mov rdx, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f63	          0x4889c6	                            mov rsi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f66	          0x4889d7	                            mov rdi, rdx	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f69	      0xb800000000	                              mov eax, 0	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f6e	      0xe800000000	                          call 0x4000f73	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_7
0x4000f73	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       269	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0x4000f78	            0x741d	                            je 0x4000f97	       269	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0x4000f7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f7e	        0x4883c001	                              add rax, 1	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f82	        0x488945d0	             mov qword [rbp - 0x30], rax	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f8a	           0xfb600	                   movzx eax, byte [rax]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f8d	            0x84c0	                             test al, al	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f8f	     0xf857bffffff	                           jne 0x4000f10	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f95	            0xeb01	                           jmp 0x4000f98	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4000f97	              0x90	                                     nop	       270	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_4
0x4000f98	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	sequencer.c	FUNCTION_8	CALL_8
0x4000f9c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       275	sequencer.c	FUNCTION_8	CALL_8
0x4000fa0	          0x4889c7	                            mov rdi, rax	       275	sequencer.c	FUNCTION_8	CALL_8
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       275	sequencer.c	FUNCTION_8	CALL_8
0x4000fa8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       276	sequencer.c	FUNCTION_8	CALL_9
0x4000fac	        0x488b4040	            mov rax, qword [rax + 0x40] 	       276	sequencer.c	FUNCTION_8	CALL_9
0x4000fb0	          0x4889c7	                            mov rdi, rax	       276	sequencer.c	FUNCTION_8	CALL_9
0x4000fb3	      0xe800000000	                          call 0x4000fb8	       276	sequencer.c	FUNCTION_8	CALL_9
0x4000fb8	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000fbf	            0xeb24	                           jmp 0x4000fe5	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000fc1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fc5	        0x488b4048	            mov rax, qword [rax + 0x48] 	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fc9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fcc	          0x4863d2	                         movsxd rdx, edx	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fcf	        0x48c1e203	                              shl rdx, 3	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fd3	          0x4801d0	                            add rax, rdx	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fd6	          0x488b00	                    mov rax, qword [rax]	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fd9	          0x4889c7	                            mov rdi, rax	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fdc	      0xe800000000	                          call 0x4000fe1	       278	sequencer.c	FUNCTION_8	CALL_10
0x4000fe1	        0x8345cc01	               add dword [rbp - 0x34], 1	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000fe5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000fe8	          0x4863d0	                         movsxd rdx, eax	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000feb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000fef	        0x488b4050	            mov rax, qword [rax + 0x50] 	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000ff3	          0x4839c2	                            cmp rdx, rax	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000ff6	            0x72c9	                            jb 0x4000fc1	       277	sequencer.c	FUNCTION_8	FOR_1
0x4000ff8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	sequencer.c	FUNCTION_8	CALL_11
0x4000ffc	        0x488b4048	            mov rax, qword [rax + 0x48] 	       279	sequencer.c	FUNCTION_8	CALL_11
0x4001000	          0x4889c7	                            mov rdi, rax	       279	sequencer.c	FUNCTION_8	CALL_11
0x4001003	      0xe800000000	                          call 0x4001008	       279	sequencer.c	FUNCTION_8	CALL_11
0x4001008	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       280	sequencer.c	FUNCTION_8	CALL_12
0x400100c	        0x4883c060	                           add rax, 0x60	       280	sequencer.c	FUNCTION_8	CALL_12
0x4001010	          0x4889c7	                            mov rdi, rax	       280	sequencer.c	FUNCTION_8	CALL_12
0x4001013	      0xe800000000	                          call 0x4001018	       280	sequencer.c	FUNCTION_8	CALL_12
0x4001018	        0x488d45e0	                   lea rax, [rbp - 0x20]	       282	sequencer.c	FUNCTION_8
0x400101c	      0xbe00000000	                              mov esi, 0	       282	sequencer.c	FUNCTION_8
0x4001021	          0x4889c7	                            mov rdi, rax	       282	sequencer.c	FUNCTION_8
0x4001024	      0xe844f1ffff	                  call sym.strbuf_setlen	       282	sequencer.c	FUNCTION_8
0x4001029	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       283	sequencer.c	FUNCTION_8	CALL_14
0x400102d	          0x4889c7	                            mov rdi, rax	       283	sequencer.c	FUNCTION_8	CALL_14
0x4001030	      0xe8acfcffff	                        call sym.get_dir	       283	sequencer.c	FUNCTION_8	CALL_14
0x4001035	          0x4889c2	                            mov rdx, rax	       283	sequencer.c	FUNCTION_8	CALL_14
0x4001038	        0x488d45e0	                   lea rax, [rbp - 0x20]	       283	sequencer.c	FUNCTION_8	CALL_14
0x400103c	          0x4889d6	                            mov rsi, rdx	       283	sequencer.c	FUNCTION_8	CALL_14
0x400103f	          0x4889c7	                            mov rdi, rax	       283	sequencer.c	FUNCTION_8	CALL_14
0x4001042	      0xe82ef2ffff	                  call sym.strbuf_addstr	       283	sequencer.c	FUNCTION_8	CALL_14
0x4001047	        0x488d45e0	                   lea rax, [rbp - 0x20]	       284	sequencer.c	FUNCTION_8	CALL_15
0x400104b	      0xbe00000000	                              mov esi, 0	       284	sequencer.c	FUNCTION_8	CALL_15
0x4001050	          0x4889c7	                            mov rdi, rax	       284	sequencer.c	FUNCTION_8	CALL_15
0x4001053	      0xe800000000	                          call 0x4001058	       284	sequencer.c	FUNCTION_8	CALL_15
0x4001058	        0x488d45e0	                   lea rax, [rbp - 0x20]	       285	sequencer.c	FUNCTION_8	CALL_16
0x400105c	          0x4889c7	                            mov rdi, rax	       285	sequencer.c	FUNCTION_8	CALL_16
0x400105f	      0xe800000000	                          call 0x4001064	       285	sequencer.c	FUNCTION_8	CALL_16
0x4001064	      0xb800000000	                              mov eax, 0	       287	sequencer.c	FUNCTION_8
0x4001069	        0x488b4df8	                mov rcx, qword [rbp - 8]	       288	sequencer.c	FUNCTION_8
0x400106d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       288	sequencer.c	FUNCTION_8
0x4001076	            0x7405	                            je 0x400107d	       288	sequencer.c	FUNCTION_8
0x4001078	      0xe800000000	                          call 0x400107d	       288	sequencer.c	FUNCTION_8
0x400107d	              0xc9	                                   leave	       288	sequencer.c	FUNCTION_8
0x400107e	              0xc3	                                     ret	       288	sequencer.c	FUNCTION_8
oidcmp	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	12
0x40003fd	              0x55	                                push rbp	       979	cache.h	FUNCTION_114
0x40003fe	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_114
0x4000401	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_114
0x4000405	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_114
0x4000409	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_114
0x400040d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_114	CALL_1
0x4000411	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_114	CALL_1
0x4000415	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_114	CALL_1
0x4000418	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_114	CALL_1
0x400041b	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_114	CALL_1
0x4000420	              0xc9	                                   leave	       981	cache.h	FUNCTION_114
0x4000421	              0xc3	                                     ret	       981	cache.h	FUNCTION_114
parse_insn_buffer	CALL,9:FOR,1:WHILE,0:ELSE,2:DO,0:IF,5:SWITCH,0:functions,0	117
0x4005934	              0x55	                                push rbp	      1891	sequencer.c	FUNCTION_54
0x4005935	          0x4889e5	                            mov rbp, rsp	      1891	sequencer.c	FUNCTION_54
0x4005938	              0x53	                                push rbx	      1891	sequencer.c	FUNCTION_54
0x4005939	        0x4883ec48	                           sub rsp, 0x48	      1891	sequencer.c	FUNCTION_54
0x400593d	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1891	sequencer.c	FUNCTION_54
0x4005941	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1891	sequencer.c	FUNCTION_54
0x4005945	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1893	sequencer.c	FUNCTION_54
0x4005949	        0x488945d0	             mov qword [rbp - 0x30], rax	      1893	sequencer.c	FUNCTION_54
0x400594d	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4005954	      0xe845adffff	               call sym.rebase_path_done	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4005959	          0x4889c7	                            mov rdi, rax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x400595c	      0xe800000000	                          call 0x4005961	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4005961	          0x8945cc	             mov dword [rbp - 0x34], eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4005964	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400596b	      0xe94b010000	                           jmp 0x4005abb	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005970	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4005974	      0xbe0a000000	                            mov esi, 0xa	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4005979	          0x4889c7	                            mov rdi, rax	      1897	sequencer.c	FUNCTION_54	FOR_1
0x400597c	      0xe800000000	                          call 0x4005981	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4005981	        0x488945d8	             mov qword [rbp - 0x28], rax	      1897	sequencer.c	FUNCTION_54	FOR_1
0x4005985	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4005989	           0xfb600	                   movzx eax, byte [rax]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x400598c	            0x84c0	                             test al, al	      1899	sequencer.c	FUNCTION_54	FOR_1
0x400598e	            0x740a	                            je 0x400599a	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4005990	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4005994	        0x4883c001	                              add rax, 1	      1899	sequencer.c	FUNCTION_54	FOR_1
0x4005998	            0xeb04	                           jmp 0x400599e	      1899	sequencer.c	FUNCTION_54	FOR_1
0x400599a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	sequencer.c	FUNCTION_54	FOR_1
0x400599e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1899	sequencer.c	FUNCTION_54	FOR_1
0x40059a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059a6	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059aa	            0x7414	                            je 0x40059c0	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059b0	        0x4883e801	                              sub rax, 1	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059b4	           0xfb600	                   movzx eax, byte [rax]	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059b7	            0x3c0d	                             cmp al, 0xd	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059b9	            0x7505	                           jne 0x40059c0	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059bb	      0x48836dd801	               sub qword [rbp - 0x28], 1	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40059c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x40059c4	          0x4889c7	                            mov rdi, rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x40059c7	      0xe836faffff	                call sym.append_new_todo	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x40059cc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	sequencer.c	FUNCTION_54	FOR_1	CALL_3
0x40059d0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059d4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059dc	          0x4829c2	                            sub rdx, rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059df	          0x4889d0	                            mov rax, rdx	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059e2	          0x4889c2	                            mov rdx, rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059e9	        0x48895028	             mov qword [rax + 0x28], rdx	      1905	sequencer.c	FUNCTION_54	FOR_1
0x40059ed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40059f1	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40059f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40059f9	          0x4889ce	                            mov rsi, rcx	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40059fc	          0x4889c7	                            mov rdi, rax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40059ff	      0xe8e6faffff	                call sym.parse_insn_line	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4005a04	            0x85c0	                           test eax, eax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4005a06	            0x7447	                            je 0x4005a4f	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x4005a08	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a10	          0x4829c2	                            sub rdx, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a13	          0x4889d0	                            mov rax, rdx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a16	            0x89c3	                            mov ebx, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a18	      0xbf00000000	                              mov edi, 0	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a1d	      0xe885a9ffff	                               call sym.	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a22	          0x4889c7	                            mov rdi, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a25	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a29	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a2c	          0x4889d1	                            mov rcx, rdx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a2f	            0x89da	                            mov edx, ebx	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a31	            0x89c6	                            mov esi, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a33	      0xb800000000	                              mov eax, 0	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a38	      0xe800000000	                          call 0x4005a3d	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a3d	      0xe8fea5ffff	                    call sym.const_error	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a42	          0x8945c8	             mov dword [rbp - 0x38], eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4005a45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x4005a49	    0xc7000a000000	                    mov dword [rax], 0xa	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x4005a4f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4005a53	            0x755a	                           jne 0x4005aaf	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x4005a55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a59	            0x8b00	                    mov eax, dword [rax]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a5b	            0x89c7	                            mov edi, eax	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a5d	      0xe830e2ffff	                       call sym.is_fixup	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a62	            0x85c0	                           test eax, eax	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a64	            0x7431	                            je 0x4005a97	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x4005a66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a6a	            0x8b00	                    mov eax, dword [rax]	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a6c	            0x89c7	                            mov edi, eax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a6e	      0xe897e1ffff	              call sym.command_to_string	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a73	          0x4889c3	                            mov rbx, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a76	      0xbf00000000	                              mov edi, 0	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a7b	      0xe827a9ffff	                               call sym.	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a80	          0x4889de	                            mov rsi, rbx	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a83	          0x4889c7	                            mov rdi, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a86	      0xb800000000	                              mov eax, 0	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a8b	      0xe800000000	                          call 0x4005a90	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a90	      0xe8aba5ffff	                    call sym.const_error	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a95	            0xeb36	                           jmp 0x4005acd	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4005a97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005a9b	            0x8b00	                    mov eax, dword [rax]	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005a9d	            0x89c7	                            mov edi, eax	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005a9f	      0xe8dbe1ffff	                        call sym.is_noop	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005aa4	            0x85c0	                           test eax, eax	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005aa6	            0x7507	                           jne 0x4005aaf	      1917	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5	CALL_9
0x4005aa8	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      1918	sequencer.c	FUNCTION_54	FOR_1	ELSE_2	IF_5
0x4005aaf	        0x8345c401	               add dword [rbp - 0x3c], 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005ab3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005ab7	        0x488945d0	             mov qword [rbp - 0x30], rax	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005abb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005abf	           0xfb600	                   movzx eax, byte [rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005ac2	            0x84c0	                             test al, al	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005ac4	     0xf85a6feffff	                           jne 0x4005970	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4005aca	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1921	sequencer.c	FUNCTION_54
0x4005acd	        0x4883c448	                           add rsp, 0x48	      1922	sequencer.c	FUNCTION_54
0x4005ad1	              0x5b	                                 pop rbx	      1922	sequencer.c	FUNCTION_54
0x4005ad2	              0x5d	                                 pop rbp	      1922	sequencer.c	FUNCTION_54
0x4005ad3	              0xc3	                                     ret	      1922	sequencer.c	FUNCTION_54
save_head	CALL,12:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	85
0x4006aab	              0x55	                                push rbp	      2205	sequencer.c	FUNCTION_67
0x4006aac	          0x4889e5	                            mov rbp, rsp	      2205	sequencer.c	FUNCTION_67
0x4006aaf	              0x53	                                push rbx	      2205	sequencer.c	FUNCTION_67
0x4006ab0	        0x4883ec58	                           sub rsp, 0x58	      2205	sequencer.c	FUNCTION_67
0x4006ab4	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2205	sequencer.c	FUNCTION_67
0x4006ab8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2205	sequencer.c	FUNCTION_67
0x4006ac1	        0x488945e8	             mov qword [rbp - 0x18], rax	      2205	sequencer.c	FUNCTION_67
0x4006ac5	            0x31c0	                            xor eax, eax	      2205	sequencer.c	FUNCTION_67
0x4006ac7	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2206	sequencer.c	FUNCTION_67
0x4006acf	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2207	sequencer.c	FUNCTION_67
0x4006ad7	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2207	sequencer.c	FUNCTION_67
0x4006adf	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2207	sequencer.c	FUNCTION_67
0x4006ae7	      0xe8f69affff	             call sym.git_path_head_file	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006aec	          0x4889c1	                            mov rcx, rax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006aef	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006af3	      0xba00000000	                              mov edx, 0	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006af8	          0x4889ce	                            mov rsi, rcx	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006afb	          0x4889c7	                            mov rdi, rax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006afe	      0xe8bc99ffff	      call sym.hold_lock_file_for_update	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006b03	          0x8945bc	             mov dword [rbp - 0x44], eax	      2211	sequencer.c	FUNCTION_67	CALL_2
0x4006b06	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2212	sequencer.c	FUNCTION_67	IF_1
0x4006b0a	            0x7921	                           jns 0x4006b2d	      2212	sequencer.c	FUNCTION_67	IF_1
0x4006b0c	      0xbf00000000	                              mov edi, 0	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b11	      0xe89198ffff	                               call sym.	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b16	          0x4889c7	                            mov rdi, rax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b19	      0xb800000000	                              mov eax, 0	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b1e	      0xe800000000	                          call 0x4006b23	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b23	      0xe81895ffff	                    call sym.const_error	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b28	      0xe9be000000	                           jmp 0x4006beb	      2213	sequencer.c	FUNCTION_67	CALL_3
0x4006b2d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b31	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b35	      0xbe00000000	                              mov esi, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b3a	          0x4889c7	                            mov rdi, rax	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b3d	      0xb800000000	                              mov eax, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b42	      0xe800000000	                          call 0x4006b47	      2214	sequencer.c	FUNCTION_67	CALL_4
0x4006b47	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b4b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b4f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b52	          0x4889ce	                            mov rsi, rcx	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b55	            0x89c7	                            mov edi, eax	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b57	      0xe800000000	                          call 0x4006b5c	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b5c	        0x488945c8	             mov qword [rbp - 0x38], rax	      2215	sequencer.c	FUNCTION_67	CALL_5
0x4006b60	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2216	sequencer.c	FUNCTION_67	CALL_6
0x4006b64	          0x4889c7	                            mov rdi, rax	      2216	sequencer.c	FUNCTION_67	CALL_6
0x4006b67	      0xe800000000	                          call 0x4006b6c	      2216	sequencer.c	FUNCTION_67	CALL_6
0x4006b6c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2217	sequencer.c	FUNCTION_67	IF_2
0x4006b71	            0x793a	                           jns 0x4006bad	      2217	sequencer.c	FUNCTION_67	IF_2
0x4006b73	      0xe86a9affff	             call sym.git_path_head_file	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b78	          0x4889c3	                            mov rbx, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b7b	      0xbf00000000	                              mov edi, 0	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b80	      0xe82298ffff	                               call sym.	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b85	          0x4889de	                            mov rsi, rbx	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b88	          0x4889c7	                            mov rdi, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b8b	      0xb800000000	                              mov eax, 0	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b90	      0xe800000000	                          call 0x4006b95	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b95	      0xe8a694ffff	                    call sym.const_error	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x4006b9a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_9
0x4006b9e	          0x4889c7	                            mov rdi, rax	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_9
0x4006ba1	      0xe84699ffff	             call sym.rollback_lock_file	      2219	sequencer.c	FUNCTION_67	IF_2	CALL_9
0x4006ba6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2220	sequencer.c	FUNCTION_67	IF_2
0x4006bab	            0xeb3e	                           jmp 0x4006beb	      2220	sequencer.c	FUNCTION_67	IF_2
0x4006bad	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4006bb1	          0x4889c7	                            mov rdi, rax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4006bb4	      0xe800000000	                          call 0x4006bb9	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4006bb9	            0x85c0	                           test eax, eax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4006bbb	            0x7929	                           jns 0x4006be6	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x4006bbd	      0xe8209affff	             call sym.git_path_head_file	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bc2	          0x4889c3	                            mov rbx, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bc5	      0xbf00000000	                              mov edi, 0	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bca	      0xe8d897ffff	                               call sym.	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bcf	          0x4889de	                            mov rsi, rbx	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bd2	          0x4889c7	                            mov rdi, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bd5	      0xb800000000	                              mov eax, 0	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bda	      0xe800000000	                          call 0x4006bdf	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006bdf	      0xe85c94ffff	                    call sym.const_error	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006be4	            0xeb05	                           jmp 0x4006beb	      2223	sequencer.c	FUNCTION_67	CALL_12
0x4006be6	      0xb800000000	                              mov eax, 0	      2224	sequencer.c	FUNCTION_67
0x4006beb	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2225	sequencer.c	FUNCTION_67
0x4006bef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2225	sequencer.c	FUNCTION_67
0x4006bf8	            0x7405	                            je 0x4006bff	      2225	sequencer.c	FUNCTION_67
0x4006bfa	      0xe800000000	                          call 0x4006bff	      2225	sequencer.c	FUNCTION_67
0x4006bff	        0x4883c458	                           add rsp, 0x58	      2225	sequencer.c	FUNCTION_67
0x4006c03	              0x5b	                                 pop rbx	      2225	sequencer.c	FUNCTION_67
0x4006c04	              0x5d	                                 pop rbp	      2225	sequencer.c	FUNCTION_67
0x4006c05	              0xc3	                                     ret	      2225	sequencer.c	FUNCTION_67
error_dirty_index	CALL,8:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	43
0x40015c5	              0x55	                                push rbp	       430	sequencer.c	FUNCTION_17
0x40015c6	          0x4889e5	                            mov rbp, rsp	       430	sequencer.c	FUNCTION_17
0x40015c9	              0x53	                                push rbx	       430	sequencer.c	FUNCTION_17
0x40015ca	        0x4883ec18	                           sub rsp, 0x18	       430	sequencer.c	FUNCTION_17
0x40015ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       430	sequencer.c	FUNCTION_17
0x40015d2	      0xbf00000000	                              mov edi, 0	       431	sequencer.c	FUNCTION_17	IF_1
0x40015d7	      0xe800000000	                          call 0x40015dc	       431	sequencer.c	FUNCTION_17	IF_1
0x40015dc	            0x85c0	                           test eax, eax	       431	sequencer.c	FUNCTION_17	IF_1
0x40015de	            0x741e	                            je 0x40015fe	       431	sequencer.c	FUNCTION_17	IF_1
0x40015e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015e4	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015e7	      0xe893faffff	                    call sym.action_name	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015ec	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015ef	      0xe8b3edffff	                               call sym.	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015f4	          0x4889c7	                            mov rdi, rax	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015f7	      0xe800000000	                          call 0x40015fc	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015fc	            0xeb5c	                           jmp 0x400165a	       432	sequencer.c	FUNCTION_17	CALL_3
0x40015fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001602	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001605	      0xe875faffff	                    call sym.action_name	       434	sequencer.c	FUNCTION_17	CALL_4
0x400160a	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_4
0x400160d	      0xe895edffff	                               call sym.	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001612	          0x4889c3	                            mov rbx, rax	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001615	      0xbf00000000	                              mov edi, 0	       434	sequencer.c	FUNCTION_17	CALL_4
0x400161a	      0xe888edffff	                               call sym.	       434	sequencer.c	FUNCTION_17	CALL_4
0x400161f	          0x4889de	                            mov rsi, rbx	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001622	          0x4889c7	                            mov rdi, rax	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001625	      0xb800000000	                              mov eax, 0	       434	sequencer.c	FUNCTION_17	CALL_4
0x400162a	      0xe800000000	                          call 0x400162f	       434	sequencer.c	FUNCTION_17	CALL_4
0x400162f	      0xe80ceaffff	                    call sym.const_error	       434	sequencer.c	FUNCTION_17	CALL_4
0x4001634	    0x8b0500000000	            mov eax, dword [0x0400163a] 	       437	sequencer.c	FUNCTION_17	IF_2
0x400163a	            0x85c0	                           test eax, eax	       437	sequencer.c	FUNCTION_17	IF_2
0x400163c	            0x7417	                            je 0x4001655	       437	sequencer.c	FUNCTION_17	IF_2
0x400163e	      0xbf00000000	                              mov edi, 0	       438	sequencer.c	FUNCTION_17	CALL_8
0x4001643	      0xe85fedffff	                               call sym.	       438	sequencer.c	FUNCTION_17	CALL_8
0x4001648	          0x4889c7	                            mov rdi, rax	       438	sequencer.c	FUNCTION_17	CALL_8
0x400164b	      0xb800000000	                              mov eax, 0	       438	sequencer.c	FUNCTION_17	CALL_8
0x4001650	      0xe800000000	                          call 0x4001655	       438	sequencer.c	FUNCTION_17	CALL_8
0x4001655	      0xb8ffffffff	                     mov eax, 0xffffffff	       439	sequencer.c	FUNCTION_17
0x400165a	        0x4883c418	                           add rsp, 0x18	       440	sequencer.c	FUNCTION_17
0x400165e	              0x5b	                                 pop rbx	       440	sequencer.c	FUNCTION_17
0x400165f	              0x5d	                                 pop rbp	       440	sequencer.c	FUNCTION_17
0x4001660	              0xc3	                                     ret	       440	sequencer.c	FUNCTION_17
git_sequencer_config	CALL,13:FOR,0:WHILE,0:ELSE,4:DO,0:IF,8:SWITCH,0:functions,0	121
0x4000ad7	              0x55	                                push rbp	       148	sequencer.c	FUNCTION_1
0x4000ad8	          0x4889e5	                            mov rbp, rsp	       148	sequencer.c	FUNCTION_1
0x4000adb	              0x53	                                push rbx	       148	sequencer.c	FUNCTION_1
0x4000adc	        0x4883ec48	                           sub rsp, 0x48	       148	sequencer.c	FUNCTION_1
0x4000ae0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       148	sequencer.c	FUNCTION_1
0x4000ae4	        0x488975c0	             mov qword [rbp - 0x40], rsi	       148	sequencer.c	FUNCTION_1
0x4000ae8	        0x488955b8	             mov qword [rbp - 0x48], rdx	       148	sequencer.c	FUNCTION_1
0x4000aec	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	sequencer.c	FUNCTION_1
0x4000af5	        0x488945e8	             mov qword [rbp - 0x18], rax	       148	sequencer.c	FUNCTION_1
0x4000af9	            0x31c0	                            xor eax, eax	       148	sequencer.c	FUNCTION_1
0x4000afb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       149	sequencer.c	FUNCTION_1
0x4000aff	        0x488945e0	             mov qword [rbp - 0x20], rax	       149	sequencer.c	FUNCTION_1
0x4000b03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b07	      0xbe00000000	                              mov esi, 0	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b0c	          0x4889c7	                            mov rdi, rax	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b0f	      0xe800000000	                          call 0x4000b14	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b14	            0x85c0	                           test eax, eax	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b16	     0xf85d9000000	                           jne 0x4000bf5	       152	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4000b1c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b20	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b24	        0x488d45d8	                   lea rax, [rbp - 0x28]	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b28	          0x4889ce	                            mov rsi, rcx	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b2b	          0x4889c7	                            mov rdi, rax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b2e	      0xe800000000	                          call 0x4000b33	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b33	          0x8945d4	             mov dword [rbp - 0x2c], eax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_2
0x4000b36	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000b3a	            0x7408	                            je 0x4000b44	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000b3c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       157	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000b3f	      0xe93e010000	                           jmp 0x4000c82	       157	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4000b44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b48	      0xbe00000000	                              mov esi, 0	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b4d	          0x4889c7	                            mov rdi, rax	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b50	      0xe800000000	                          call 0x4000b55	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b55	            0x85c0	                           test eax, eax	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b57	            0x7510	                           jne 0x4000b69	       159	sequencer.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x4000b59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000b5d	    0xc74038010000	               mov dword [rax + 0x38], 1	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000b64	      0xe984000000	                           jmp 0x4000bed	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4000b69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b6d	      0xbe00000000	                              mov esi, 0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b72	          0x4889c7	                            mov rdi, rax	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b75	      0xe800000000	                          call 0x4000b7a	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b7a	            0x85c0	                           test eax, eax	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b7c	            0x750d	                           jne 0x4000b8b	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4	CALL_4
0x4000b7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000b82	    0xc74038000000	               mov dword [rax + 0x38], 0	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000b89	            0xeb62	                           jmp 0x4000bed	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4000b8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000b8f	      0xbe00000000	                              mov esi, 0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000b94	          0x4889c7	                            mov rdi, rax	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000b97	      0xe800000000	                          call 0x4000b9c	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000b9c	            0x85c0	                           test eax, eax	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000b9e	            0x750d	                           jne 0x4000bad	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5	CALL_5
0x4000ba0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000ba4	    0xc74038030000	               mov dword [rax + 0x38], 3	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000bab	            0xeb40	                           jmp 0x4000bed	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4000bad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bb1	      0xbe00000000	                              mov esi, 0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bb6	          0x4889c7	                            mov rdi, rax	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bb9	      0xe800000000	                          call 0x4000bbe	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bbe	            0x85c0	                           test eax, eax	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bc0	            0x750d	                           jne 0x4000bcf	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6	CALL_6
0x4000bc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4000bc6	    0xc74038000000	               mov dword [rax + 0x38], 0	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4000bcd	            0xeb1e	                           jmp 0x4000bed	       166	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4000bcf	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000bd3	      0xbf00000000	                              mov edi, 0	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000bd8	      0xe8caf7ffff	                               call sym.	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000bdd	          0x4889de	                            mov rsi, rbx	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000be0	          0x4889c7	                            mov rdi, rax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000be3	      0xb800000000	                              mov eax, 0	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000be8	      0xe800000000	                          call 0x4000bed	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_8
0x4000bed	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       171	sequencer.c	FUNCTION_1	IF_1
0x4000bf0	      0xe98d000000	                           jmp 0x4000c82	       171	sequencer.c	FUNCTION_1	IF_1
0x4000bf5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000bf9	      0xbe00000000	                              mov esi, 0	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000bfe	          0x4889c7	                            mov rdi, rax	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000c01	      0xe800000000	                          call 0x4000c06	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000c06	            0x85c0	                           test eax, eax	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000c08	            0x753a	                           jne 0x4000c44	       174	sequencer.c	FUNCTION_1	IF_7	CALL_9
0x4000c0a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c0e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c12	          0x4889d6	                            mov rsi, rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c15	          0x4889c7	                            mov rdi, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c18	      0xe800000000	                          call 0x4000c1d	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c1d	            0x85c0	                           test eax, eax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c1f	            0x740f	                            je 0x4000c30	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c21	      0xbf00000000	                              mov edi, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c26	      0xe800000000	                          call 0x4000c2b	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c2b	          0x4889c2	                            mov rdx, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c2e	            0xeb05	                           jmp 0x4000c35	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c30	      0xba00000000	                              mov edx, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c39	        0x48895030	             mov qword [rax + 0x30], rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_11
0x4000c3d	      0xb800000000	                              mov eax, 0	       176	sequencer.c	FUNCTION_1	IF_7
0x4000c42	            0xeb3e	                           jmp 0x4000c82	       176	sequencer.c	FUNCTION_1	IF_7
0x4000c44	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c4c	      0xba00000000	                              mov edx, 0	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c51	          0x4889ce	                            mov rsi, rcx	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c54	          0x4889c7	                            mov rdi, rax	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c57	      0xe800000000	                          call 0x4000c5c	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c5c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       179	sequencer.c	FUNCTION_1	CALL_12
0x4000c5f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       180	sequencer.c	FUNCTION_1	IF_8
0x4000c63	            0x7405	                            je 0x4000c6a	       180	sequencer.c	FUNCTION_1	IF_8
0x4000c65	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       181	sequencer.c	FUNCTION_1	IF_8
0x4000c68	            0xeb18	                           jmp 0x4000c82	       181	sequencer.c	FUNCTION_1	IF_8
0x4000c6a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c72	      0xba00000000	                              mov edx, 0	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c77	          0x4889ce	                            mov rsi, rcx	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c7a	          0x4889c7	                            mov rdi, rax	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c7d	      0xe800000000	                          call 0x4000c82	       183	sequencer.c	FUNCTION_1	CALL_13
0x4000c82	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       184	sequencer.c	FUNCTION_1
0x4000c86	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       184	sequencer.c	FUNCTION_1
0x4000c8f	            0x7405	                            je 0x4000c96	       184	sequencer.c	FUNCTION_1
0x4000c91	      0xe800000000	                          call 0x4000c96	       184	sequencer.c	FUNCTION_1
0x4000c96	        0x4883c448	                           add rsp, 0x48	       184	sequencer.c	FUNCTION_1
0x4000c9a	              0x5b	                                 pop rbx	       184	sequencer.c	FUNCTION_1
0x4000c9b	              0x5d	                                 pop rbp	       184	sequencer.c	FUNCTION_1
0x4000c9c	              0xc3	                                     ret	       184	sequencer.c	FUNCTION_1
fast_forward_to	CALL,15:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	111
0x4001704	              0x55	                                push rbp	       458	sequencer.c	FUNCTION_19
0x4001705	          0x4889e5	                            mov rbp, rsp	       458	sequencer.c	FUNCTION_19
0x4001708	              0x53	                                push rbx	       458	sequencer.c	FUNCTION_19
0x4001709	        0x4883ec78	                           sub rsp, 0x78	       458	sequencer.c	FUNCTION_19
0x400170d	        0x48897d98	             mov qword [rbp - 0x68], rdi	       458	sequencer.c	FUNCTION_19
0x4001711	        0x48897590	             mov qword [rbp - 0x70], rsi	       458	sequencer.c	FUNCTION_19
0x4001715	          0x89558c	             mov dword [rbp - 0x74], edx	       458	sequencer.c	FUNCTION_19
0x4001718	        0x48894d80	             mov qword [rbp - 0x80], rcx	       458	sequencer.c	FUNCTION_19
0x400171c	    0x64488b042528	                mov rax, qword fs:[0x28]	       458	sequencer.c	FUNCTION_19
0x4001725	        0x488945e8	             mov qword [rbp - 0x18], rax	       458	sequencer.c	FUNCTION_19
0x4001729	            0x31c0	                            xor eax, eax	       458	sequencer.c	FUNCTION_19
0x400172b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       460	sequencer.c	FUNCTION_19
0x4001733	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       460	sequencer.c	FUNCTION_19
0x400173b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       460	sequencer.c	FUNCTION_19
0x4001743	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       461	sequencer.c	FUNCTION_19
0x400174b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       461	sequencer.c	FUNCTION_19
0x4001753	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       461	sequencer.c	FUNCTION_19
0x400175b	      0xbf00000000	                              mov edi, 0	       463	sequencer.c	FUNCTION_19
0x4001760	      0xe800000000	                          call 0x4001765	       463	sequencer.c	FUNCTION_19
0x4001765	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001769	        0x488b4590	             mov rax, qword [rbp - 0x70]	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400176d	      0xba01000000	                              mov edx, 1	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001772	          0x4889ce	                            mov rsi, rcx	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001775	          0x4889c7	                            mov rdi, rax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001778	      0xe800000000	                          call 0x400177d	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400177d	            0x85c0	                           test eax, eax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x400177f	            0x740a	                            je 0x400178b	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4001781	      0xb8ffffffff	                     mov eax, 0xffffffff	       465	sequencer.c	FUNCTION_19	IF_1
0x4001786	      0xe921010000	                           jmp 0x40018ac	       465	sequencer.c	FUNCTION_19	IF_1
0x400178b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       467	sequencer.c	FUNCTION_19	CALL_5
0x400178f	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001792	      0xe8e8f8ffff	                    call sym.action_name	       467	sequencer.c	FUNCTION_19	CALL_5
0x4001797	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x400179a	      0xe808ecffff	                               call sym.	       467	sequencer.c	FUNCTION_19	CALL_5
0x400179f	          0x4889c3	                            mov rbx, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017a2	      0xbf00000000	                              mov edi, 0	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017a7	      0xe8fbebffff	                               call sym.	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017ac	          0x4889c1	                            mov rcx, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017af	        0x488d45b0	                   lea rax, [rbp - 0x50]	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017b3	          0x4889da	                            mov rdx, rbx	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017b6	          0x4889ce	                            mov rsi, rcx	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017b9	          0x4889c7	                            mov rdi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017bc	      0xb800000000	                              mov eax, 0	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017c1	      0xe800000000	                          call 0x40017c6	       467	sequencer.c	FUNCTION_19	CALL_5
0x40017c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       469	sequencer.c	FUNCTION_19	CALL_6
0x40017ca	          0x4889c7	                            mov rdi, rax	       469	sequencer.c	FUNCTION_19	CALL_6
0x40017cd	      0xe800000000	                          call 0x40017d2	       469	sequencer.c	FUNCTION_19	CALL_6
0x40017d2	        0x488945a8	             mov qword [rbp - 0x58], rax	       469	sequencer.c	FUNCTION_19	CALL_6
0x40017d6	      0x48837da800	               cmp qword [rbp - 0x58], 0	       470	sequencer.c	FUNCTION_19	IF_2
0x40017db	            0x745b	                            je 0x4001838	       470	sequencer.c	FUNCTION_19	IF_2
0x40017dd	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       473	sequencer.c	FUNCTION_19	IF_2
0x40017e1	        0x837d8c00	               cmp dword [rbp - 0x74], 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017e5	            0x7506	                           jne 0x40017ed	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017e7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017eb	            0xeb05	                           jmp 0x40017f2	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017ed	      0xb800000000	                              mov eax, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017f2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017f6	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017fa	        0x4883ec08	                              sub rsp, 8	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x40017fe	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001802	              0x51	                                push rcx	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001803	          0x4989f1	                             mov r9, rsi	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001806	    0x41b800000000	                              mov r8d, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400180c	          0x4889c1	                            mov rcx, rax	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400180f	      0xbe00000000	                              mov esi, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001814	      0xe800000000	                          call 0x4001819	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4001819	        0x4883c410	                           add rsp, 0x10	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x400181d	            0x85c0	                           test eax, eax	       470	sequencer.c	FUNCTION_19	IF_2
0x400181f	            0x7517	                           jne 0x4001838	       470	sequencer.c	FUNCTION_19	IF_2
0x4001821	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4001825	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4001829	          0x4889d6	                            mov rsi, rdx	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x400182c	          0x4889c7	                            mov rdi, rax	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x400182f	      0xe800000000	                          call 0x4001834	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4001834	            0x85c0	                           test eax, eax	       473	sequencer.c	FUNCTION_19	IF_2
0x4001836	            0x7446	                            je 0x400187e	       473	sequencer.c	FUNCTION_19	IF_2
0x4001838	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x400183c	          0x4889c7	                            mov rdi, rax	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x400183f	      0xe800000000	                          call 0x4001844	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x4001844	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       476	sequencer.c	FUNCTION_19	IF_2
0x4001848	          0x4889c6	                            mov rsi, rax	       476	sequencer.c	FUNCTION_19	IF_2
0x400184b	      0xbf00000000	                              mov edi, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x4001850	      0xb800000000	                              mov eax, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x4001855	      0xe800000000	                          call 0x400185a	       476	sequencer.c	FUNCTION_19	IF_2
0x400185a	      0xe8e1e7ffff	                    call sym.const_error	       476	sequencer.c	FUNCTION_19	IF_2
0x400185f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4001863	          0x4889c7	                            mov rdi, rax	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4001866	      0xe800000000	                          call 0x400186b	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x400186b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x400186f	          0x4889c7	                            mov rdi, rax	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4001872	      0xe800000000	                          call 0x4001877	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4001877	      0xb8ffffffff	                     mov eax, 0xffffffff	       479	sequencer.c	FUNCTION_19	IF_2
0x400187c	            0xeb2e	                           jmp 0x40018ac	       479	sequencer.c	FUNCTION_19	IF_2
0x400187e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       482	sequencer.c	FUNCTION_19	CALL_12
0x4001882	          0x4889c7	                            mov rdi, rax	       482	sequencer.c	FUNCTION_19	CALL_12
0x4001885	      0xe800000000	                          call 0x400188a	       482	sequencer.c	FUNCTION_19	CALL_12
0x400188a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       483	sequencer.c	FUNCTION_19	CALL_13
0x400188e	          0x4889c7	                            mov rdi, rax	       483	sequencer.c	FUNCTION_19	CALL_13
0x4001891	      0xe800000000	                          call 0x4001896	       483	sequencer.c	FUNCTION_19	CALL_13
0x4001896	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       484	sequencer.c	FUNCTION_19	CALL_14
0x400189a	          0x4889c7	                            mov rdi, rax	       484	sequencer.c	FUNCTION_19	CALL_14
0x400189d	      0xe800000000	                          call 0x40018a2	       484	sequencer.c	FUNCTION_19	CALL_14
0x40018a2	      0xe8bafdffff	       call sym.update_abort_safety_file	       485	sequencer.c	FUNCTION_19	CALL_15
0x40018a7	      0xb800000000	                              mov eax, 0	       486	sequencer.c	FUNCTION_19
0x40018ac	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       487	sequencer.c	FUNCTION_19
0x40018b0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       487	sequencer.c	FUNCTION_19
0x40018b9	            0x7405	                            je 0x40018c0	       487	sequencer.c	FUNCTION_19
0x40018bb	      0xe800000000	                          call 0x40018c0	       487	sequencer.c	FUNCTION_19
0x40018c0	        0x488b5df8	                mov rbx, qword [rbp - 8]	       487	sequencer.c	FUNCTION_19
0x40018c4	              0xc9	                                   leave	       487	sequencer.c	FUNCTION_19
0x40018c5	              0xc3	                                     ret	       487	sequencer.c	FUNCTION_19
hashmap_entry_init	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	14
0x400031c	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_144
0x400031d	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_144
0x4000320	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_144
0x4000324	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_144
0x4000327	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_144
0x400032b	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_144
0x400032f	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_144
0x4000333	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_144
0x4000336	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_144
0x4000339	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_144
0x400033d	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_144
0x4000344	              0x90	                                     nop	       250	hashmap.h	FUNCTION_144
0x4000345	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_144
0x4000346	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_144
rollback_single_pick	CALL,10:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	59
0x4006db3	              0x55	                                push rbp	      2263	sequencer.c	FUNCTION_70
0x4006db4	          0x4889e5	                            mov rbp, rsp	      2263	sequencer.c	FUNCTION_70
0x4006db7	        0x4883ec20	                           sub rsp, 0x20	      2263	sequencer.c	FUNCTION_70
0x4006dbb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2263	sequencer.c	FUNCTION_70
0x4006dc4	        0x488945f8	                mov qword [rbp - 8], rax	      2263	sequencer.c	FUNCTION_70
0x4006dc8	            0x31c0	                            xor eax, eax	      2263	sequencer.c	FUNCTION_70
0x4006dca	      0xe800000000	                          call 0x4006dcf	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dcf	          0x4889c7	                            mov rdi, rax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dd2	      0xe800000000	                          call 0x4006dd7	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dd7	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dd9	            0x752f	                           jne 0x4006e0a	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006ddb	      0xe800000000	                          call 0x4006de0	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4006de0	          0x4889c7	                            mov rdi, rax	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4006de3	      0xe800000000	                          call 0x4006de8	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4006de8	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dea	            0x751e	                           jne 0x4006e0a	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4006dec	      0xbf00000000	                              mov edi, 0	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006df1	      0xe8b195ffff	                               call sym.	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006df6	          0x4889c7	                            mov rdi, rax	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006df9	      0xb800000000	                              mov eax, 0	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006dfe	      0xe800000000	                          call 0x4006e03	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006e03	      0xe83892ffff	                    call sym.const_error	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006e08	            0xeb77	                           jmp 0x4006e81	      2268	sequencer.c	FUNCTION_70	CALL_5
0x4006e0a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e0e	      0xb900000000	                              mov ecx, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e13	          0x4889c2	                            mov rdx, rax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e16	      0xbe00000000	                              mov esi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e1b	      0xbf00000000	                              mov edi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e20	      0xe800000000	                          call 0x4006e25	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e25	            0x85c0	                           test eax, eax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e27	            0x741e	                            je 0x4006e47	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4006e29	      0xbf00000000	                              mov edi, 0	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e2e	      0xe87495ffff	                               call sym.	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e33	          0x4889c7	                            mov rdi, rax	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e36	      0xb800000000	                              mov eax, 0	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e3b	      0xe800000000	                          call 0x4006e40	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e40	      0xe8fb91ffff	                    call sym.const_error	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e45	            0xeb3a	                           jmp 0x4006e81	      2270	sequencer.c	FUNCTION_70	CALL_7
0x4006e47	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4006e4b	          0x4889c7	                            mov rdi, rax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4006e4e	      0xe8cf95ffff	                    call sym.is_null_oid	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4006e53	            0x85c0	                           test eax, eax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4006e55	            0x741e	                            je 0x4006e75	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4006e57	      0xbf00000000	                              mov edi, 0	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e5c	      0xe84695ffff	                               call sym.	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e61	          0x4889c7	                            mov rdi, rax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e64	      0xb800000000	                              mov eax, 0	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e69	      0xe800000000	                          call 0x4006e6e	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e6e	      0xe8cd91ffff	                    call sym.const_error	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e73	            0xeb0c	                           jmp 0x4006e81	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4006e75	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2273	sequencer.c	FUNCTION_70	CALL_10
0x4006e79	          0x4889c7	                            mov rdi, rax	      2273	sequencer.c	FUNCTION_70	CALL_10
0x4006e7c	      0xe8c8feffff	             call sym.reset_for_rollback	      2273	sequencer.c	FUNCTION_70	CALL_10
0x4006e81	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2274	sequencer.c	FUNCTION_70
0x4006e85	    0x644833142528	                xor rdx, qword fs:[0x28]	      2274	sequencer.c	FUNCTION_70
0x4006e8e	            0x7405	                            je 0x4006e95	      2274	sequencer.c	FUNCTION_70
0x4006e90	      0xe800000000	                          call 0x4006e95	      2274	sequencer.c	FUNCTION_70
0x4006e95	              0xc9	                                   leave	      2274	sequencer.c	FUNCTION_70
0x4006e96	              0xc3	                                     ret	      2274	sequencer.c	FUNCTION_70
pick_commits	CALL,110:FOR,0:WHILE,1:ELSE,9:DO,0:IF,46:SWITCH,0:functions,0	893
0x4009512	              0x55	                                push rbp	      2989	sequencer.c	FUNCTION_87
0x4009513	          0x4889e5	                            mov rbp, rsp	      2989	sequencer.c	FUNCTION_87
0x4009516	            0x4155	                                push r13	      2989	sequencer.c	FUNCTION_87
0x4009518	            0x4154	                                push r12	      2989	sequencer.c	FUNCTION_87
0x400951a	              0x53	                                push rbx	      2989	sequencer.c	FUNCTION_87
0x400951b	    0x4881ec580a00	                          sub rsp, 0xa58	      2989	sequencer.c	FUNCTION_87
0x4009522	    0x4889bd98f5ff	            mov qword [rbp - 0xa68], rdi	      2989	sequencer.c	FUNCTION_87
0x4009529	    0x4889b590f5ff	            mov qword [rbp - 0xa70], rsi	      2989	sequencer.c	FUNCTION_87
0x4009530	    0x64488b042528	                mov rax, qword fs:[0x28]	      2989	sequencer.c	FUNCTION_87
0x4009539	        0x488945d8	             mov qword [rbp - 0x28], rax	      2989	sequencer.c	FUNCTION_87
0x400953d	            0x31c0	                            xor eax, eax	      2989	sequencer.c	FUNCTION_87
0x400953f	    0xc785a0f5ffff	              mov dword [rbp - 0xa60], 0	      2990	sequencer.c	FUNCTION_87
0x4009549	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 0	      2990	sequencer.c	FUNCTION_87
0x4009553	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2992	sequencer.c	FUNCTION_87	CALL_1
0x400955a	          0x4889c7	                            mov rdi, rax	      2992	sequencer.c	FUNCTION_87	CALL_1
0x400955d	      0xe81d7bffff	                    call sym.action_name	      2992	sequencer.c	FUNCTION_87	CALL_1
0x4009562	      0xba00000000	                              mov edx, 0	      2992	sequencer.c	FUNCTION_87	CALL_1
0x4009567	          0x4889c6	                            mov rsi, rax	      2992	sequencer.c	FUNCTION_87	CALL_1
0x400956a	      0xbf00000000	                              mov edi, 0	      2992	sequencer.c	FUNCTION_87	CALL_1
0x400956f	      0xe800000000	                          call 0x4009574	      2992	sequencer.c	FUNCTION_87	CALL_1
0x4009574	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2993	sequencer.c	FUNCTION_87	IF_1
0x400957b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2993	sequencer.c	FUNCTION_87	IF_1
0x400957e	            0x85c0	                           test eax, eax	      2993	sequencer.c	FUNCTION_87	IF_1
0x4009580	            0x7451	                            je 0x40095d3	      2993	sequencer.c	FUNCTION_87	IF_1
0x4009582	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x4009589	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x400958c	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x400958e	            0x752a	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x4009590	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x4009597	          0x8b400c	              mov eax, dword [rax + 0xc]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x400959a	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x400959c	            0x751c	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x400959e	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095a5	          0x8b4008	                mov eax, dword [rax + 8]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095a8	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095aa	            0x750e	                           jne 0x40095ba	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095ac	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095b3	          0x8b4004	                mov eax, dword [rax + 4]	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095b6	            0x85c0	                           test eax, eax	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095b8	            0x7419	                            je 0x40095d3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095ba	      0xb900000000	                              mov ecx, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095bf	      0xbab30b0000	                          mov edx, 0xbb3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095c4	      0xbe00000000	                              mov esi, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095c9	      0xbf00000000	                              mov edi, 0	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095ce	      0xe800000000	                          call 0x40095d3	      2994	sequencer.c	FUNCTION_87	IF_1	CALL_2
0x40095d3	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_3
0x40095da	          0x4889c7	                            mov rdi, rax	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_3
0x40095dd	      0xe8aabcffff	         call sym.read_and_refresh_cache	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_3
0x40095e2	            0x85c0	                           test eax, eax	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_3
0x40095e4	     0xf8440090000	                            je 0x4009f2a	      2996	sequencer.c	FUNCTION_87	IF_2	CALL_3
0x40095ea	      0xb8ffffffff	                     mov eax, 0xffffffff	      2997	sequencer.c	FUNCTION_87	IF_2
0x40095ef	      0xe9660f0000	                           jmp 0x400a55a	      2997	sequencer.c	FUNCTION_87	IF_2
0x40095f4	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x40095fb	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x40095ff	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009606	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009609	          0x4863d0	                         movsxd rdx, eax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x400960c	          0x4889d0	                            mov rax, rdx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x400960f	          0x4801c0	                            add rax, rax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009612	          0x4801d0	                            add rax, rdx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009615	        0x48c1e004	                              shl rax, 4	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009619	          0x4801c8	                            add rax, rcx	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x400961c	    0x488985b0f5ff	            mov qword [rbp - 0xa50], rax	      3000	sequencer.c	FUNCTION_87	WHILE_1
0x4009623	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x400962a	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x4009631	          0x4889d6	                            mov rsi, rdx	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x4009634	          0x4889c7	                            mov rdi, rax	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x4009637	      0xe87ddaffff	                      call sym.save_todo	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x400963c	            0x85c0	                           test eax, eax	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x400963e	            0x740a	                            je 0x400964a	      3001	sequencer.c	FUNCTION_87	WHILE_1	IF_3	CALL_4
0x4009640	      0xb8ffffffff	                     mov eax, 0xffffffff	      3002	sequencer.c	FUNCTION_87	WHILE_1	IF_3
0x4009645	      0xe9100f0000	                           jmp 0x400a55a	      3002	sequencer.c	FUNCTION_87	WHILE_1	IF_3
0x400964a	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_5
0x4009651	          0x4889c7	                            mov rdi, rax	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_5
0x4009654	      0xe86f76ffff	                    call sym.is_rebase_i	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_5
0x4009659	            0x85c0	                           test eax, eax	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_5
0x400965b	     0xf8415010000	                            je 0x4009776	      3003	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_5
0x4009661	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x4009668	            0x8b00	                    mov eax, dword [rax]	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x400966a	          0x83f80c	                            cmp eax, 0xc	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x400966d	     0xf84b6000000	                            je 0x4009729	      3004	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x4009673	      0xe85570ffff	             call sym.rebase_path_msgnum	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_6
0x4009678	      0xbe00000000	                              mov esi, 0	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_6
0x400967d	          0x4889c7	                            mov rdi, rax	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_6
0x4009680	      0xe800000000	                          call 0x4009685	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_6
0x4009685	    0x488985b8f5ff	            mov qword [rbp - 0xa48], rax	      3005	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_6
0x400968c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x4009693	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x4009696	          0x8d5001	                      lea edx, [rax + 1]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x4009699	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x40096a0	          0x89502c	             mov dword [rax + 0x2c], edx	      3007	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x40096a3	    0x4883bdb8f5ff	              cmp qword [rbp - 0xa48], 0	      3009	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6
0x40096ab	            0x7432	                            je 0x40096df	      3009	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6
0x40096ad	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096b4	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096b7	    0x488b85b8f5ff	            mov rax, qword [rbp - 0xa48]	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096be	      0xbe00000000	                              mov esi, 0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096c3	          0x4889c7	                            mov rdi, rax	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096c6	      0xb800000000	                              mov eax, 0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096cb	      0xe800000000	                          call 0x40096d0	      3010	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_7
0x40096d0	    0x488b85b8f5ff	            mov rax, qword [rbp - 0xa48]	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_8
0x40096d7	          0x4889c7	                            mov rdi, rax	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_8
0x40096da	      0xe800000000	                          call 0x40096df	      3011	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	IF_6	CALL_8
0x40096df	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3016	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x40096e6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3016	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5
0x40096e9	            0x85c0	                           test eax, eax	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x40096eb	            0x7407	                            je 0x40096f4	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x40096ed	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x40096f2	            0xeb05	                           jmp 0x40096f9	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x40096f4	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x40096f9	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009700	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009703	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x400970a	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x400970d	    0x488b05000000	            mov rax, qword [0x04009714] 	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009714	          0x4989f0	                             mov r8, rsi	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009717	      0xbe00000000	                              mov esi, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x400971c	          0x4889c7	                            mov rdi, rax	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x400971f	      0xb800000000	                              mov eax, 0	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009724	      0xe800000000	                          call 0x4009729	      3013	sequencer.c	FUNCTION_87	WHILE_1	IF_4	IF_5	CALL_9
0x4009729	      0xe8fd6fffff	            call sym.rebase_path_message	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_11
0x400972e	          0x4889c7	                            mov rdi, rax	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_11
0x4009731	      0xe800000000	                          call 0x4009736	      3018	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_11
0x4009736	      0xe8ac70ffff	      call sym.rebase_path_author_script	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x400973b	          0x4889c7	                            mov rdi, rax	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x400973e	      0xe800000000	                          call 0x4009743	      3019	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_13
0x4009743	      0xe8fd70ffff	        call sym.rebase_path_stopped_sha	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x4009748	          0x4889c7	                            mov rdi, rax	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x400974b	      0xe800000000	                          call 0x4009750	      3020	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_15
0x4009750	      0xe8c170ffff	              call sym.rebase_path_amend	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x4009755	          0x4889c7	                            mov rdi, rax	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x4009758	      0xe800000000	                          call 0x400975d	      3021	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_17
0x400975d	      0xb901000000	                              mov ecx, 1	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_18
0x4009762	      0xba00000000	                              mov edx, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_18
0x4009767	      0xbe00000000	                              mov esi, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_18
0x400976c	      0xbf00000000	                              mov edi, 0	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_18
0x4009771	      0xe800000000	                          call 0x4009776	      3022	sequencer.c	FUNCTION_87	WHILE_1	IF_4	CALL_18
0x4009776	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x400977d	            0x8b00	                    mov eax, dword [rax]	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x400977f	          0x83f805	                              cmp eax, 5	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x4009782	     0xf8748030000	                            ja 0x4009ad0	      3024	sequencer.c	FUNCTION_87	WHILE_1	IF_7
0x4009788	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_19
0x400978f	          0x4889c7	                            mov rdi, rax	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_19
0x4009792	      0xe83175ffff	                    call sym.is_rebase_i	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_19
0x4009797	            0x85c0	                           test eax, eax	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_19
0x4009799	            0x7441	                            je 0x40097dc	      3025	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_19
0x400979b	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097a2	            0x8b00	                    mov eax, dword [rax]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097a4	            0x89c7	                            mov edi, eax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097a6	      0xe85fa4ffff	              call sym.command_to_string	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097ab	          0x4889c1	                            mov rcx, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097ae	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097b5	      0xba00000000	                              mov edx, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097ba	          0x4889ce	                            mov rsi, rcx	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097bd	          0x4889c7	                            mov rdi, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097c0	      0xb800000000	                              mov eax, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097c5	      0xe809fcffff	                 call sym.reflog_message	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097ca	      0xba01000000	                              mov edx, 1	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097cf	          0x4889c6	                            mov rsi, rax	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097d2	      0xbf00000000	                              mov edi, 0	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097d7	      0xe800000000	                          call 0x40097dc	      3026	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_8	CALL_20
0x40097dc	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097e3	          0x4889c7	                            mov rdi, rax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097e6	      0xe8e1f7ffff	                 call sym.is_final_fixup	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097eb	            0x89c1	                            mov ecx, eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097ed	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097f4	        0x488b7008	                mov rsi, qword [rax + 8]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097f8	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x40097ff	            0x8b00	                    mov eax, dword [rax]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x4009801	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x4009808	            0x89c7	                            mov edi, eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x400980a	      0xe8ccacffff	                 call sym.do_pick_commit	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x400980f	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3029	sequencer.c	FUNCTION_87	WHILE_1	IF_7	CALL_22
0x4009815	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x400981c	          0x4889c7	                            mov rdi, rax	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x400981f	      0xe8a474ffff	                    call sym.is_rebase_i	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x4009824	            0x85c0	                           test eax, eax	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x4009826	     0xf84a2000000	                            je 0x40098ce	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x400982c	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x4009833	     0xf8995000000	                           jns 0x40098ce	      3031	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_24
0x4009839	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009840	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009843	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400984a	            0x89d6	                            mov esi, edx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400984c	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400984f	      0xe81bc3ffff	                  call sym.get_item_line	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009854	          0x4989c4	                            mov r12, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009857	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400985e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009861	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009868	            0x89d6	                            mov esi, edx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400986a	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400986d	      0xe832c3ffff	           call sym.get_item_line_length	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009872	            0x89c3	                            mov ebx, eax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009874	      0xbf00000000	                              mov edi, 0	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009879	      0xe8296bffff	                               call sym.	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400987e	          0x4c89e2	                            mov rdx, r12	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009881	            0x89de	                            mov esi, ebx	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009883	          0x4889c7	                            mov rdi, rax	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009886	      0xb800000000	                              mov eax, 0	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x400988b	      0xe800000000	                          call 0x4009890	      3033	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	CALL_26
0x4009890	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x4009897	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x400989a	          0x8d50ff	                      lea edx, [rax - 1]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x400989d	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x40098a4	          0x895028	             mov dword [rax + 0x28], edx	      3038	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9
0x40098a7	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098ae	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098b5	          0x4889d6	                            mov rsi, rdx	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098b8	          0x4889c7	                            mov rdi, rax	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098bb	      0xe8f9d7ffff	                      call sym.save_todo	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098c0	            0x85c0	                           test eax, eax	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098c2	            0x740a	                            je 0x40098ce	      3039	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10	CALL_29
0x40098c4	      0xb8ffffffff	                     mov eax, 0xffffffff	      3040	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10
0x40098c9	      0xe98c0c0000	                           jmp 0x400a55a	      3040	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_9	IF_10
0x40098ce	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098d5	            0x8b00	                    mov eax, dword [rax]	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098d7	          0x83f802	                              cmp eax, 2	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098da	     0xf85b5000000	                           jne 0x4009995	      3042	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098e0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098e7	        0x488b4008	                mov rax, qword [rax + 8]	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098eb	    0x488985c0f5ff	            mov qword [rbp - 0xa40], rax	      3043	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11
0x40098f2	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3044	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12
0x40098f9	            0x7550	                           jne 0x400994b	      3044	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12
0x40098fb	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009902	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009906	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400990d	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009910	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009917	          0x4889c7	                            mov rdi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400991a	      0xe8bf77ffff	              call sym.short_commit_name	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400991f	          0x4989c5	                            mov r13, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009922	      0xbf00000000	                              mov edi, 0	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009927	      0xe87b6affff	                               call sym.	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400992c	          0x4889c6	                            mov rsi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400992f	    0x488b05000000	            mov rax, qword [0x04009936] 	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009936	          0x4d89e0	                             mov r8, r12	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009939	            0x89d9	                            mov ecx, ebx	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400993b	          0x4c89ea	                            mov rdx, r13	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400993e	          0x4889c7	                            mov rdi, rax	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009941	      0xb800000000	                              mov eax, 0	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x4009946	      0xe800000000	                          call 0x400994b	      3045	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	IF_12	CALL_30
0x400994b	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009952	           0xf94c0	                                 sete al	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009955	        0x440fb6c0	                           movzx r8d, al	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009959	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009960	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009963	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x400996a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x400996e	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009974	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x400997b	    0x488b85c0f5ff	            mov rax, qword [rbp - 0xa40]	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009982	          0x4589c1	                            mov r9d, r8d	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009985	          0x4189f8	                            mov r8d, edi	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009988	          0x4889c7	                            mov rdi, rax	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x400998b	      0xe8bcdfffff	               call sym.error_with_patch	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009990	      0xe9c50b0000	                           jmp 0x400a55a	      3049	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_11	CALL_33
0x4009995	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x400999c	          0x4889c7	                            mov rdi, rax	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x400999f	      0xe82473ffff	                    call sym.is_rebase_i	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x40099a4	            0x85c0	                           test eax, eax	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x40099a6	            0x7438	                            je 0x40099e0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x40099a8	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x40099af	            0x752f	                           jne 0x40099e0	      3053	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_34
0x40099b1	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099b8	      0xbe01000000	                              mov esi, 1	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099bd	          0x4889c7	                            mov rdi, rax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099c0	      0xe8c6f6ffff	                   call sym.peek_command	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099c5	            0x89c2	                            mov edx, eax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099c7	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099ce	        0x488b4008	                mov rax, qword [rax + 8]	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099d2	        0x4883c004	                              add rax, 4	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099d6	            0x89d6	                            mov esi, edx	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099d8	          0x4889c7	                            mov rdi, rax	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099db	      0xe886aaffff	            call sym.record_in_rewritten	      3054	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_13	CALL_35
0x40099e0	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099e7	            0x7456	                            je 0x4009a3f	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099e9	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099f0	            0x8b00	                    mov eax, dword [rax]	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099f2	            0x89c7	                            mov edi, eax	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099f4	      0xe899a2ffff	                       call sym.is_fixup	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099f9	            0x85c0	                           test eax, eax	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099fb	            0x7442	                            je 0x4009a3f	      3056	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_37
0x40099fd	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 1	      3057	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	IF_15
0x4009a04	            0x7505	                           jne 0x4009a0b	      3057	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	IF_15
0x4009a06	      0xe8a0deffff	                call sym.intend_to_amend	      3058	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_38
0x4009a0b	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a12	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a16	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a1d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a20	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a27	        0x488b4008	                mov rax, qword [rax + 8]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a2b	    0x488bb590f5ff	            mov rsi, qword [rbp - 0xa70]	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a32	          0x4889c7	                            mov rdi, rax	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a35	      0xe8d4dfffff	            call sym.error_failed_squash	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a3a	      0xe91b0b0000	                           jmp 0x400a55a	      3059	sequencer.c	FUNCTION_87	WHILE_1	IF_7	IF_14	CALL_39
0x4009a3f	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a46	     0xf84be030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a4c	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a53	          0x4889c7	                            mov rdi, rax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a56	      0xe86d72ffff	                    call sym.is_rebase_i	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a5b	            0x85c0	                           test eax, eax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a5d	     0xf84a7030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a63	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a6a	        0x488b4008	                mov rax, qword [rax + 8]	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a6e	          0x4885c0	                           test rax, rax	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a71	     0xf8493030000	                            je 0x4009e0a	      3061	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_40
0x4009a77	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3064	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16
0x4009a7e	            0x8b00	                    mov eax, dword [rax]	      3064	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16
0x4009a80	          0x83f803	                              cmp eax, 3	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a83	           0xf94c0	                                 sete al	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a86	        0x440fb6c0	                           movzx r8d, al	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a8a	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a91	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a94	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a9b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009a9f	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009aa6	        0x488b4008	                mov rax, qword [rax + 8]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009aaa	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009ab0	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009ab7	          0x4589c1	                            mov r9d, r8d	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009aba	          0x4189f8	                            mov r8d, edi	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009abd	          0x4889c7	                            mov rdi, rax	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009ac0	      0xe887deffff	               call sym.error_with_patch	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009ac5	     0xb85a0f5ffff	             or eax, dword [rbp - 0xa60]	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009acb	      0xe98a0a0000	                           jmp 0x400a55a	      3062	sequencer.c	FUNCTION_87	WHILE_1	IF_7	ELSE_1	IF_16	CALL_41
0x4009ad0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009ad7	            0x8b00	                    mov eax, dword [rax]	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009ad9	          0x83f806	                              cmp eax, 6	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009adc	     0xf8547010000	                           jne 0x4009c29	      3065	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009ae2	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009ae9	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009aed	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009af4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009af7	            0x4898	                                    cdqe	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009af9	          0x4801d0	                            add rax, rdx	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009afc	    0x488985c8f5ff	            mov qword [rbp - 0xa38], rax	      3066	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b03	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b0a	           0xfb600	                   movzx eax, byte [rax]	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b0d	           0xfbec0	                           movsx eax, al	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b10	    0x8985acf5ffff	            mov dword [rbp - 0xa54], eax	      3067	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b16	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3070	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b1d	          0xc60000	                       mov byte [rax], 0	      3070	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b20	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_42
0x4009b27	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_42
0x4009b2b	          0x4889c7	                            mov rdi, rax	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_42
0x4009b2e	      0xe8dbdfffff	                        call sym.do_exec	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_42
0x4009b33	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3071	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	CALL_42
0x4009b39	    0x8b85acf5ffff	            mov eax, dword [rbp - 0xa54]	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b3f	            0x89c2	                            mov edx, eax	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b41	    0x488b85c8f5ff	            mov rax, qword [rbp - 0xa38]	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b48	            0x8810	                      mov byte [rax], dl	      3072	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17
0x4009b4a	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3075	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	IF_18
0x4009b51	     0xf85b3020000	                           jne 0x4009e0a	      3075	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	IF_18
0x4009b57	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b5e	          0x4889c7	                            mov rdi, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b61	      0xe8a571ffff	                  call sym.get_todo_path	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b66	          0x4889c2	                            mov rdx, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b69	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b70	          0x4889c6	                            mov rsi, rax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b73	          0x4889d7	                            mov rdi, rdx	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b76	      0xe800000000	                          call 0x4009b7b	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b7b	            0x85c0	                           test eax, eax	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b7d	            0x743c	                            je 0x4009bbb	      3077	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_43
0x4009b7f	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b86	          0x4889c7	                            mov rdi, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b89	      0xe87d71ffff	                  call sym.get_todo_path	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b8e	          0x4889c3	                            mov rbx, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b91	      0xbf00000000	                              mov edi, 0	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b96	      0xe80c68ffff	                               call sym.	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b9b	          0x4889de	                            mov rsi, rbx	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009b9e	          0x4889c7	                            mov rdi, rax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009ba1	      0xb800000000	                              mov eax, 0	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009ba6	      0xe800000000	                          call 0x4009bab	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009bab	      0xe89064ffff	                    call sym.const_error	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009bb0	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009bb6	      0xe94f020000	                           jmp 0x4009e0a	      3078	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_3	IF_19	CALL_44
0x4009bbb	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bc2	        0x488d5034	                   lea rdx, [rax + 0x34]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bc6	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bcd	          0x4889c6	                            mov rsi, rax	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bd0	          0x4889d7	                            mov rdi, rdx	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bd3	      0xe800000000	                          call 0x4009bd8	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bd8	            0x85c0	                           test eax, eax	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009bda	     0xf842a020000	                            je 0x4009e0a	      3080	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_46
0x4009be0	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_47
0x4009be7	          0x4889c7	                            mov rdi, rax	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_47
0x4009bea	      0xe8c3b7ffff	              call sym.todo_list_release	      3081	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	CALL_47
0x4009bef	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009bf6	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009bfd	          0x4889d6	                            mov rsi, rdx	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009c00	          0x4889c7	                            mov rdi, rax	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009c03	      0xe892c0ffff	             call sym.read_populate_todo	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009c08	            0x85c0	                           test eax, eax	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009c0a	            0x740a	                            je 0x4009c16	      3082	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21	CALL_48
0x4009c0c	    0xc785a0f5ffff	    mov dword [rbp - 0xa60], 0xffffffff 	      3083	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20	IF_21
0x4009c16	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x4009c1d	    0xc74028ffffff	     mov dword [rax + 0x28], 0xffffffff 	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x4009c24	      0xe9e1010000	                           jmp 0x4009e0a	      3085	sequencer.c	FUNCTION_87	WHILE_1	ELSE_2	IF_17	ELSE_4	IF_20
0x4009c29	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x4009c30	            0x8b00	                    mov eax, dword [rax]	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x4009c32	          0x83f807	                              cmp eax, 7	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x4009c35	            0x7541	                           jne 0x4009c78	      3087	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22
0x4009c37	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c3e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c41	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c48	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c4c	            0x89d6	                            mov esi, edx	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c4e	          0x4889c7	                            mov rdi, rax	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c51	      0xe8fbe2ffff	                       call sym.do_label	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c56	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c5c	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c63	     0xf84a1010000	                            je 0x4009e0a	      3088	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23	CALL_49
0x4009c69	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3089	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23
0x4009c73	      0xe992010000	                           jmp 0x4009e0a	      3089	sequencer.c	FUNCTION_87	WHILE_1	ELSE_5	IF_22	IF_23
0x4009c78	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x4009c7f	            0x8b00	                    mov eax, dword [rax]	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x4009c81	          0x83f808	                              cmp eax, 8	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x4009c84	            0x7548	                           jne 0x4009cce	      3090	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24
0x4009c86	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009c8d	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009c90	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009c97	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009c9b	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009ca2	            0x89ce	                            mov esi, ecx	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009ca4	          0x4889c7	                            mov rdi, rax	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009ca7	      0xe84de5ffff	                       call sym.do_reset	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009cac	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009cb2	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009cb9	     0xf844b010000	                            je 0x4009e0a	      3091	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25	CALL_50
0x4009cbf	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3092	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25
0x4009cc9	      0xe93c010000	                           jmp 0x4009e0a	      3092	sequencer.c	FUNCTION_87	WHILE_1	ELSE_6	IF_24	IF_25
0x4009cce	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x4009cd5	            0x8b00	                    mov eax, dword [rax]	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x4009cd7	          0x83f809	                              cmp eax, 9	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x4009cda	     0xf85ea000000	                           jne 0x4009dca	      3093	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26
0x4009ce0	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3096	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x4009ce7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3096	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x4009cea	            0x89c7	                            mov edi, eax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009cec	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009cf3	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009cf6	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009cfd	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d01	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d08	        0x488b4008	                mov rax, qword [rax + 8]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d0c	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d13	          0x4989c8	                             mov r8, rcx	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d16	            0x89f9	                            mov ecx, edi	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d18	          0x4889c7	                            mov rdi, rax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d1b	      0xe815e9ffff	                       call sym.do_merge	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d20	    0x8985a0f5ffff	            mov dword [rbp - 0xa60], eax	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d26	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d2d	            0x790c	                           jns 0x4009d3b	      3094	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27	CALL_51
0x4009d2f	    0xc785a4f5ffff	              mov dword [rbp - 0xa5c], 1	      3097	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x4009d39	            0xeb3f	                           jmp 0x4009d7a	      3097	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_27
0x4009d3b	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x4009d42	        0x488b4008	                mov rax, qword [rax + 8]	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x4009d46	          0x4885c0	                           test rax, rax	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x4009d49	            0x742f	                            je 0x4009d7a	      3098	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28
0x4009d4b	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d52	      0xbe01000000	                              mov esi, 1	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d57	          0x4889c7	                            mov rdi, rax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d5a	      0xe82cf3ffff	                   call sym.peek_command	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d5f	            0x89c2	                            mov edx, eax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d61	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d68	        0x488b4008	                mov rax, qword [rax + 8]	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d6c	        0x4883c004	                              add rax, 4	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d70	            0x89d6	                            mov esi, edx	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d72	          0x4889c7	                            mov rdi, rax	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d75	      0xe8eca6ffff	            call sym.record_in_rewritten	      3099	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	ELSE_8	IF_28	CALL_52
0x4009d7a	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3101	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29
0x4009d81	     0xf8e83000000	                           jle 0x4009e0a	      3101	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29
0x4009d87	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009d8e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009d91	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009d98	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009d9c	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009da3	        0x488b4008	                mov rax, qword [rax + 8]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009da7	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dad	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009db4	    0x41b900000000	                              mov r9d, 0	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dba	          0x4189f8	                            mov r8d, edi	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dbd	          0x4889c7	                            mov rdi, rax	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dc0	      0xe887dbffff	               call sym.error_with_patch	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dc5	      0xe990070000	                           jmp 0x400a55a	      3103	sequencer.c	FUNCTION_87	WHILE_1	ELSE_7	IF_26	IF_29	CALL_54
0x4009dca	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009dd1	            0x8b00	                    mov eax, dword [rax]	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009dd3	            0x89c7	                            mov edi, eax	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009dd5	      0xe8a59effff	                        call sym.is_noop	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009dda	            0x85c0	                           test eax, eax	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009ddc	            0x752c	                           jne 0x4009e0a	      3107	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30	CALL_55
0x4009dde	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009de5	            0x8b18	                    mov ebx, dword [rax]	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009de7	      0xbf00000000	                              mov edi, 0	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009dec	      0xe8b665ffff	                               call sym.	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009df1	            0x89de	                            mov esi, ebx	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009df3	          0x4889c7	                            mov rdi, rax	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009df6	      0xb800000000	                              mov eax, 0	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009dfb	      0xe800000000	                          call 0x4009e00	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009e00	      0xe83b62ffff	                    call sym.const_error	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009e05	      0xe950070000	                           jmp 0x400a55a	      3108	sequencer.c	FUNCTION_87	WHILE_1	ELSE_9	IF_30
0x4009e0a	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      3110	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e11	     0xf84e8000000	                            je 0x4009eff	      3110	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e17	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e1e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e21	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e28	            0x89d6	                            mov esi, edx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e2a	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e2d	      0xe83dbdffff	                  call sym.get_item_line	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e32	          0x4989c4	                            mov r12, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e35	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e3c	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e3f	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e46	            0x89d6	                            mov esi, edx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e48	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e4b	      0xe854bdffff	           call sym.get_item_line_length	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e50	            0x89c3	                            mov ebx, eax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e52	      0xbf00000000	                              mov edi, 0	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e57	      0xe84b65ffff	                               call sym.	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e5c	          0x4c89e2	                            mov rdx, r12	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e5f	            0x89de	                            mov esi, ebx	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e61	          0x4889c7	                            mov rdi, rax	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e64	      0xb800000000	                              mov eax, 0	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e69	      0xe800000000	                          call 0x4009e6e	      3111	sequencer.c	FUNCTION_87	WHILE_1	IF_31	CALL_58
0x4009e6e	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e75	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e78	          0x8d50ff	                      lea edx, [rax - 1]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e7b	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e82	          0x895028	             mov dword [rax + 0x28], edx	      3115	sequencer.c	FUNCTION_87	WHILE_1	IF_31
0x4009e85	    0x488b9590f5ff	            mov rdx, qword [rbp - 0xa70]	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009e8c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009e93	          0x4889d6	                            mov rsi, rdx	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009e96	          0x4889c7	                            mov rdi, rax	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009e99	      0xe81bd2ffff	                      call sym.save_todo	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009e9e	            0x85c0	                           test eax, eax	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009ea0	            0x740a	                            je 0x4009eac	      3116	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32	CALL_61
0x4009ea2	      0xb8ffffffff	                     mov eax, 0xffffffff	      3117	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32
0x4009ea7	      0xe9ae060000	                           jmp 0x400a55a	      3117	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_32
0x4009eac	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x4009eb3	        0x488b4008	                mov rax, qword [rax + 8]	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x4009eb7	          0x4885c0	                           test rax, rax	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x4009eba	            0x7443	                            je 0x4009eff	      3118	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33
0x4009ebc	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ec3	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ec6	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ecd	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ed1	    0x488b85b0f5ff	            mov rax, qword [rbp - 0xa50]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ed8	        0x488b4008	                mov rax, qword [rax + 8]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009edc	    0x8bbda0f5ffff	            mov edi, dword [rbp - 0xa60]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ee2	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ee9	    0x41b900000000	                              mov r9d, 0	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009eef	          0x4189f8	                            mov r8d, edi	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ef2	          0x4889c7	                            mov rdi, rax	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009ef5	      0xe852daffff	               call sym.error_with_patch	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009efa	      0xe95b060000	                           jmp 0x400a55a	      3119	sequencer.c	FUNCTION_87	WHILE_1	IF_31	IF_33	CALL_62
0x4009eff	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x4009f06	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x4009f09	          0x8d5001	                      lea edx, [rax + 1]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x4009f0c	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x4009f13	          0x895028	             mov dword [rax + 0x28], edx	      3125	sequencer.c	FUNCTION_87	WHILE_1
0x4009f16	    0x83bda0f5ffff	              cmp dword [rbp - 0xa60], 0	      3126	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x4009f1d	            0x740b	                            je 0x4009f2a	      3126	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x4009f1f	    0x8b85a0f5ffff	            mov eax, dword [rbp - 0xa60]	      3127	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x4009f25	      0xe930060000	                           jmp 0x400a55a	      3127	sequencer.c	FUNCTION_87	WHILE_1	IF_34
0x4009f2a	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f31	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f34	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f3b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f3e	            0x39c2	                            cmp edx, eax	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f40	     0xf8caef6ffff	                            jl 0x40095f4	      2999	sequencer.c	FUNCTION_87	WHILE_1
0x4009f46	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_63
0x4009f4d	          0x4889c7	                            mov rdi, rax	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_63
0x4009f50	      0xe8736dffff	                    call sym.is_rebase_i	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_63
0x4009f55	            0x85c0	                           test eax, eax	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_63
0x4009f57	     0xf84ee050000	                            je 0x400a54b	      3130	sequencer.c	FUNCTION_87	IF_35	CALL_63
0x4009f5d	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f68	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f73	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f7e	    0x48c78500f6ff	              mov qword [rbp - 0xa00], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f89	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f94	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	      3131	sequencer.c	FUNCTION_87	IF_35
0x4009f9f	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fa6	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fa9	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fb0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fb3	            0x39c2	                            cmp edx, eax	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fb5	            0x7d0a	                           jge 0x4009fc1	      3135	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fb7	      0xb800000000	                              mov eax, 0	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fbc	      0xe999050000	                           jmp 0x400a55a	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0x4009fc1	      0xe8f769ffff	          call sym.rebase_path_head_name	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fc6	          0x4889c1	                            mov rcx, rax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fc9	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fd0	      0xba00000000	                              mov edx, 0	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fd5	          0x4889ce	                            mov rsi, rcx	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fd8	          0x4889c7	                            mov rdi, rax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fdb	      0xe88074ffff	                  call sym.read_oneliner	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fe0	            0x85c0	                           test eax, eax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fe2	     0xf8475020000	                            je 0x400a25d	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009fe8	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_66
0x4009fef	      0xbe00000000	                              mov esi, 0	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_66
0x4009ff4	          0x4889c7	                            mov rdi, rax	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_66
0x4009ff7	      0xe800000000	                          call 0x4009ffc	      3139	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_66
0x4009ffc	            0x85c0	                           test eax, eax	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x4009ffe	     0xf8459020000	                            je 0x400a25d	      3138	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_65
0x400a004	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a00b	          0x4889c6	                            mov rsi, rax	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a00e	      0xbf00000000	                              mov edi, 0	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a013	      0xe800000000	                          call 0x400a018	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a018	            0x85c0	                           test eax, eax	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a01a	            0x744b	                            je 0x400a067	      3144	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_67
0x400a01c	      0xbf00000000	                              mov edi, 0	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a021	      0xe88163ffff	                               call sym.	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a026	          0x4889c7	                            mov rdi, rax	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a029	      0xb800000000	                              mov eax, 0	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a02e	      0xe800000000	                          call 0x400a033	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a033	      0xe80860ffff	                    call sym.const_error	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a038	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3145	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_68
0x400a03e	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_69
0x400a045	          0x4889c7	                            mov rdi, rax	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_69
0x400a048	      0xe800000000	                          call 0x400a04d	      3147	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_69
0x400a04d	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_70
0x400a054	          0x4889c7	                            mov rdi, rax	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_70
0x400a057	      0xe800000000	                          call 0x400a05c	      3148	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38	CALL_70
0x400a05c	    0x8b85a8f5ffff	            mov eax, dword [rbp - 0xa58]	      3149	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_38
0x400a062	      0xe9f3040000	                           jmp 0x400a55a	      3136	sequencer.c	FUNCTION_87	IF_35	IF_36
0x400a067	      0xe8c468ffff	          call sym.rebase_path_orig_head	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a06c	          0x4889c1	                            mov rcx, rax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a06f	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a076	      0xba00000000	                              mov edx, 0	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a07b	          0x4889ce	                            mov rsi, rcx	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a07e	          0x4889c7	                            mov rdi, rax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a081	      0xe8da73ffff	                  call sym.read_oneliner	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a086	            0x85c0	                           test eax, eax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a088	            0x741d	                            je 0x400a0a7	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a08a	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_73
0x400a091	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_73
0x400a098	          0x4889d6	                            mov rsi, rdx	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_73
0x400a09b	          0x4889c7	                            mov rdi, rax	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_73
0x400a09e	      0xe800000000	                          call 0x400a0a3	      3152	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_73
0x400a0a3	            0x85c0	                           test eax, eax	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a0a5	            0x7427	                            je 0x400a0ce	      3151	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_72
0x400a0a7	      0xbf00000000	                              mov edi, 0	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0ac	      0xe8f662ffff	                               call sym.	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0b1	          0x4889c7	                            mov rdi, rax	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0b4	      0xb800000000	                              mov eax, 0	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0b9	      0xe800000000	                          call 0x400a0be	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0be	      0xe87d5fffff	                    call sym.const_error	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0c3	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3153	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39	CALL_74
0x400a0c9	      0xe970ffffff	                           jmp 0x400a03e	      3154	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_39
0x400a0ce	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a0d5	      0xbe00000000	                              mov esi, 0	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a0da	          0x4889c7	                            mov rdi, rax	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a0dd	      0xe88b60ffff	                  call sym.strbuf_setlen	      3156	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a0e2	      0xe80569ffff	               call sym.rebase_path_onto	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0e7	          0x4889c1	                            mov rcx, rax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0ea	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0f1	      0xba00000000	                              mov edx, 0	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0f6	          0x4889ce	                            mov rsi, rcx	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0f9	          0x4889c7	                            mov rdi, rax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a0fc	      0xe85f73ffff	                  call sym.read_oneliner	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a101	            0x85c0	                           test eax, eax	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a103	            0x7527	                           jne 0x400a12c	      3157	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_76
0x400a105	      0xbf00000000	                              mov edi, 0	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a10a	      0xe89862ffff	                               call sym.	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a10f	          0x4889c7	                            mov rdi, rax	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a112	      0xb800000000	                              mov eax, 0	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a117	      0xe800000000	                          call 0x400a11c	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a11c	      0xe81f5fffff	                    call sym.const_error	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a121	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3158	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40	CALL_77
0x400a127	      0xe912ffffff	                           jmp 0x400a03e	      3159	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_40
0x400a12c	    0x488b8d10f6ff	            mov rcx, qword [rbp - 0x9f0]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a133	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a13a	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a141	          0x4989c8	                             mov r8, rcx	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a144	          0x4889d1	                            mov rcx, rdx	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a147	      0xba00000000	                              mov edx, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a14c	      0xbe00000000	                              mov esi, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a151	          0x4889c7	                            mov rdi, rax	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a154	      0xb800000000	                              mov eax, 0	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a159	      0xe875f2ffff	                 call sym.reflog_message	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a15e	    0x488985d0f5ff	            mov qword [rbp - 0xa30], rax	      3161	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_78
0x400a165	    0x488bb5f0f5ff	            mov rsi, qword [rbp - 0xa10]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a16c	    0x488d8d20f7ff	                  lea rcx, [rbp - 0x8e0]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a173	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a17a	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a181	    0x41b900000000	                              mov r9d, 0	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a187	    0x41b801000000	                              mov r8d, 1	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a18d	          0x4889c7	                            mov rdi, rax	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a190	      0xe800000000	                          call 0x400a195	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a195	            0x85c0	                           test eax, eax	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a197	            0x7431	                            je 0x400a1ca	      3163	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_79
0x400a199	    0x488b9df0f5ff	            mov rbx, qword [rbp - 0xa10]	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1a0	      0xbf00000000	                              mov edi, 0	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1a5	      0xe8fd61ffff	                               call sym.	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1aa	          0x4889de	                            mov rsi, rbx	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1ad	          0x4889c7	                            mov rdi, rax	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1b0	      0xb800000000	                              mov eax, 0	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1b5	      0xe800000000	                          call 0x400a1ba	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1ba	      0xe8815effff	                    call sym.const_error	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1bf	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3165	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41	CALL_80
0x400a1c5	      0xe974feffff	                           jmp 0x400a03e	      3167	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_41
0x400a1ca	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1d1	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1d8	          0x4889d1	                            mov rcx, rdx	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1db	      0xba00000000	                              mov edx, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1e0	      0xbe00000000	                              mov esi, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1e5	          0x4889c7	                            mov rdi, rax	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1e8	      0xb800000000	                              mov eax, 0	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1ed	      0xe8e1f1ffff	                 call sym.reflog_message	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1f2	    0x488985d0f5ff	            mov qword [rbp - 0xa30], rax	      3169	sequencer.c	FUNCTION_87	IF_35	IF_37	CALL_81
0x400a1f9	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a200	    0x488b95d0f5ff	            mov rdx, qword [rbp - 0xa30]	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a207	          0x4889c6	                            mov rsi, rax	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a20a	      0xbf00000000	                              mov edi, 0	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a20f	      0xe800000000	                          call 0x400a214	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a214	            0x85c0	                           test eax, eax	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a216	            0x7431	                            je 0x400a249	      3171	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_82
0x400a218	    0x488b9df0f5ff	            mov rbx, qword [rbp - 0xa10]	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a21f	      0xbf00000000	                              mov edi, 0	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a224	      0xe87e61ffff	                               call sym.	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a229	          0x4889de	                            mov rsi, rbx	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a22c	          0x4889c7	                            mov rdi, rax	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a22f	      0xb800000000	                              mov eax, 0	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a234	      0xe800000000	                          call 0x400a239	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a239	      0xe8025effff	                    call sym.const_error	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a23e	    0x8985a8f5ffff	            mov dword [rbp - 0xa58], eax	      3172	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42	CALL_83
0x400a244	      0xe9f5fdffff	                           jmp 0x400a03e	      3174	sequencer.c	FUNCTION_87	IF_35	IF_37	IF_42
0x400a249	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a250	      0xbe00000000	                              mov esi, 0	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a255	          0x4889c7	                            mov rdi, rax	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a258	      0xe8105fffff	                  call sym.strbuf_setlen	      3176	sequencer.c	FUNCTION_87	IF_35	IF_37
0x400a25d	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a264	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a267	            0x85c0	                           test eax, eax	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a269	     0xf84ea000000	                            je 0x400a359	      3179	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a26f	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_84
0x400a276	      0xbab0080000	                          mov edx, 0x8b0	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_84
0x400a27b	      0xbe00000000	                              mov esi, 0	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_84
0x400a280	          0x4889c7	                            mov rdi, rax	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_84
0x400a283	      0xe800000000	                          call 0x400a288	      3183	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_84
0x400a288	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_85
0x400a28f	      0xbe00000000	                              mov esi, 0	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_85
0x400a294	          0x4889c7	                            mov rdi, rax	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_85
0x400a297	      0xe800000000	                          call 0x400a29c	      3184	sequencer.c	FUNCTION_87	IF_35	IF_43	CALL_85
0x400a29c	     0xfb68599f7ff	           movzx eax, byte [rbp - 0x867]	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2a3	          0x83c801	                               or eax, 1	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2a6	    0x888599f7ffff	              mov byte [rbp - 0x867], al	      3185	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2ac	    0xc78578fcffff	              mov dword [rbp - 0x388], 2	      3186	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2b6	     0xfb6859bf7ff	           movzx eax, byte [rbp - 0x865]	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2bd	          0x83c880	                      or eax, 0xffffff80	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2c0	    0x88859bf7ffff	              mov byte [rbp - 0x865], al	      3188	sequencer.c	FUNCTION_87	IF_35	IF_43
0x400a2c6	      0xe86566ffff	          call sym.rebase_path_orig_head	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2cb	          0x4889c1	                            mov rcx, rax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2ce	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2d5	      0xba00000000	                              mov edx, 0	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2da	          0x4889ce	                            mov rsi, rcx	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2dd	          0x4889c7	                            mov rdi, rax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2e0	      0xe87b71ffff	                  call sym.read_oneliner	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2e5	            0x85c0	                           test eax, eax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2e7	            0x7470	                            je 0x400a359	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a2e9	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a2f0	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a2f7	          0x4889d6	                            mov rsi, rdx	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a2fa	          0x4889c7	                            mov rdi, rax	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a2fd	      0xe800000000	                          call 0x400a302	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a302	            0x85c0	                           test eax, eax	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a304	            0x7553	                           jne 0x400a359	      3190	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_87
0x400a306	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_89
0x400a30d	          0x4889c6	                            mov rsi, rax	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_89
0x400a310	      0xbf00000000	                              mov edi, 0	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_89
0x400a315	      0xe800000000	                          call 0x400a31a	      3192	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_89
0x400a31a	            0x85c0	                           test eax, eax	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a31c	            0x753b	                           jne 0x400a359	      3191	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_88
0x400a31e	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a325	    0x488d90f80400	                  lea rdx, [rax + 0x4f8]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a32c	    0x488db500f7ff	                  lea rsi, [rbp - 0x900]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a333	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a33a	          0x4889d1	                            mov rcx, rdx	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a33d	      0xba00000000	                              mov edx, 0	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a342	          0x4889c7	                            mov rdi, rax	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a345	      0xe800000000	                          call 0x400a34a	      3193	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_90
0x400a34a	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_91
0x400a351	          0x4889c7	                            mov rdi, rax	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_91
0x400a354	      0xe800000000	                          call 0x400a359	      3195	sequencer.c	FUNCTION_87	IF_35	IF_43	IF_44	CALL_91
0x400a359	      0xe8b99fffff	        call sym.flush_rewritten_pending	      3198	sequencer.c	FUNCTION_87	IF_35	CALL_92
0x400a35e	      0xe81165ffff	     call sym.rebase_path_rewritten_list	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a363	          0x4889c2	                            mov rdx, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a366	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a36d	          0x4889c6	                            mov rsi, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a370	          0x4889d7	                            mov rdi, rdx	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a373	      0xe800000000	                          call 0x400a378	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a378	            0x85c0	                           test eax, eax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a37a	     0xf857e010000	                           jne 0x400a4fe	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a380	    0x488b8550f7ff	            mov rax, qword [rbp - 0x8b0]	      3200	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a387	          0x4885c0	                           test rax, rax	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a38a	     0xf8e6e010000	                           jle 0x400a4fe	      3199	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_93
0x400a390	    0x488d9520f6ff	                  lea rdx, [rbp - 0x9e0]	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a397	      0xb800000000	                              mov eax, 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a39c	      0xb90c000000	                            mov ecx, 0xc	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3a1	          0x4889d7	                            mov rdi, rdx	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3a4	          0xf348ab	              rep stosq qword [rdi], rax	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3a7	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3b2	    0x48c78538f6ff	              mov qword [rbp - 0x9c8], 0	      3201	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3bd	      0xbf00000000	                              mov edi, 0	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3c2	      0xe800000000	                          call 0x400a3c7	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3c7	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      3202	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3ce	      0xe8a164ffff	     call sym.rebase_path_rewritten_list	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3d3	      0xbe00000000	                              mov esi, 0	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3d8	          0x4889c7	                            mov rdi, rax	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3db	      0xb800000000	                              mov eax, 0	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3e0	      0xe800000000	                          call 0x400a3e5	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3e5	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      3205	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_96
0x400a3eb	     0xfb68568f6ff	           movzx eax, byte [rbp - 0x998]	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3f2	          0x83c808	                               or eax, 8	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3f5	    0x888568f6ffff	              mov byte [rbp - 0x998], al	      3206	sequencer.c	FUNCTION_87	IF_35	IF_45
0x400a3fb	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_97
0x400a402	        0x4883c008	                              add rax, 8	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_97
0x400a406	      0xbe00000000	                              mov esi, 0	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_97
0x400a40b	          0x4889c7	                            mov rdi, rax	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_97
0x400a40e	      0xe800000000	                          call 0x400a413	      3207	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_97
0x400a413	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_98
0x400a41a	        0x4883c008	                              add rax, 8	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_98
0x400a41e	      0xbe00000000	                              mov esi, 0	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_98
0x400a423	          0x4889c7	                            mov rdi, rax	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_98
0x400a426	      0xe800000000	                          call 0x400a42b	      3208	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_98
0x400a42b	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_99
0x400a432	        0x4883c008	                              add rax, 8	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_99
0x400a436	      0xbe00000000	                              mov esi, 0	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_99
0x400a43b	          0x4889c7	                            mov rdi, rax	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_99
0x400a43e	      0xe800000000	                          call 0x400a443	      3209	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_99
0x400a443	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_100
0x400a44a	          0x4889c7	                            mov rdi, rax	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_100
0x400a44d	      0xe800000000	                          call 0x400a452	      3211	sequencer.c	FUNCTION_87	IF_35	IF_45	CALL_100
0x400a452	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      3213	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a45a	     0xf849e000000	                            je 0x400a4fe	      3213	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a460	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a467	      0xb800000000	                              mov eax, 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a46c	      0xb90c000000	                            mov ecx, 0xc	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a471	          0x4889d7	                            mov rdi, rdx	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a474	          0xf348ab	              rep stosq qword [rdi], rax	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a477	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a482	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	      3214	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a48d	      0xe8e263ffff	     call sym.rebase_path_rewritten_list	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a492	      0xbe00000000	                              mov esi, 0	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a497	          0x4889c7	                            mov rdi, rax	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a49a	      0xb800000000	                              mov eax, 0	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a49f	      0xe800000000	                          call 0x400a4a4	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a4a4	    0x8985acf6ffff	            mov dword [rbp - 0x954], eax	      3216	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_102
0x400a4aa	     0xfb685c8f6ff	           movzx eax, byte [rbp - 0x938]	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a4b1	          0x83c820	                            or eax, 0x20	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a4b4	    0x8885c8f6ffff	              mov byte [rbp - 0x938], al	      3218	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46
0x400a4ba	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4c1	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4c8	        0x4883c208	                              add rdx, 8	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4cc	          0x4889c6	                            mov rsi, rax	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4cf	          0x4889d7	                            mov rdi, rdx	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4d2	      0xe800000000	                          call 0x400a4d7	      3219	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_103
0x400a4d7	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_104
0x400a4de	        0x4883c008	                              add rax, 8	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_104
0x400a4e2	      0xbe00000000	                              mov esi, 0	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_104
0x400a4e7	          0x4889c7	                            mov rdi, rax	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_104
0x400a4ea	      0xe800000000	                          call 0x400a4ef	      3220	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_104
0x400a4ef	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_105
0x400a4f6	          0x4889c7	                            mov rdi, rax	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_105
0x400a4f9	      0xe800000000	                          call 0x400a4fe	      3222	sequencer.c	FUNCTION_87	IF_35	IF_45	IF_46	CALL_105
0x400a4fe	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_106
0x400a505	          0x4889c7	                            mov rdi, rax	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_106
0x400a508	      0xe802ecffff	                call sym.apply_autostash	      3225	sequencer.c	FUNCTION_87	IF_35	CALL_106
0x400a50d	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a514	    0x488b05000000	            mov rax, qword [0x0400a51b] 	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a51b	      0xbe00000000	                              mov esi, 0	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a520	          0x4889c7	                            mov rdi, rax	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a523	      0xb800000000	                              mov eax, 0	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a528	      0xe800000000	                          call 0x400a52d	      3227	sequencer.c	FUNCTION_87	IF_35	CALL_107
0x400a52d	    0x488d8500f6ff	                  lea rax, [rbp - 0xa00]	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_108
0x400a534	          0x4889c7	                            mov rdi, rax	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_108
0x400a537	      0xe800000000	                          call 0x400a53c	      3230	sequencer.c	FUNCTION_87	IF_35	CALL_108
0x400a53c	    0x488d85e0f5ff	                  lea rax, [rbp - 0xa20]	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_109
0x400a543	          0x4889c7	                            mov rdi, rax	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_109
0x400a546	      0xe800000000	                          call 0x400a54b	      3231	sequencer.c	FUNCTION_87	IF_35	CALL_109
0x400a54b	    0x488b8590f5ff	            mov rax, qword [rbp - 0xa70]	      3238	sequencer.c	FUNCTION_87	CALL_110
0x400a552	          0x4889c7	                            mov rdi, rax	      3238	sequencer.c	FUNCTION_87	CALL_110
0x400a555	      0xe800000000	                          call 0x400a55a	      3238	sequencer.c	FUNCTION_87	CALL_110
0x400a55a	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      3239	sequencer.c	FUNCTION_87
0x400a55e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3239	sequencer.c	FUNCTION_87
0x400a567	            0x7405	                            je 0x400a56e	      3239	sequencer.c	FUNCTION_87
0x400a569	      0xe800000000	                          call 0x400a56e	      3239	sequencer.c	FUNCTION_87
0x400a56e	    0x4881c4580a00	                          add rsp, 0xa58	      3239	sequencer.c	FUNCTION_87
0x400a575	              0x5b	                                 pop rbx	      3239	sequencer.c	FUNCTION_87
0x400a576	            0x415c	                                 pop r12	      3239	sequencer.c	FUNCTION_87
0x400a578	            0x415d	                                 pop r13	      3239	sequencer.c	FUNCTION_87
0x400a57a	              0x5d	                                 pop rbp	      3239	sequencer.c	FUNCTION_87
0x400a57b	              0xc3	                                     ret	      3239	sequencer.c	FUNCTION_87
commit_post_rewrite	CALL,4:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	30
0x4002bc9	              0x55	                                push rbp	       914	sequencer.c	FUNCTION_32
0x4002bca	          0x4889e5	                            mov rbp, rsp	       914	sequencer.c	FUNCTION_32
0x4002bcd	        0x4883ec20	                           sub rsp, 0x20	       914	sequencer.c	FUNCTION_32
0x4002bd1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       914	sequencer.c	FUNCTION_32
0x4002bd5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       914	sequencer.c	FUNCTION_32
0x4002bd9	      0xbf00000000	                              mov edi, 0	       917	sequencer.c	FUNCTION_32	CALL_1
0x4002bde	      0xe800000000	                          call 0x4002be3	       917	sequencer.c	FUNCTION_32	CALL_1
0x4002be3	        0x488945f8	                mov qword [rbp - 8], rax	       917	sequencer.c	FUNCTION_32	CALL_1
0x4002be7	      0x48837df800	                  cmp qword [rbp - 8], 0	       918	sequencer.c	FUNCTION_32	IF_1
0x4002bec	            0x742c	                            je 0x4002c1a	       918	sequencer.c	FUNCTION_32	IF_1
0x4002bee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002bf2	        0x488d4804	                      lea rcx, [rax + 4]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002bf6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002bfe	          0x4889ce	                            mov rsi, rcx	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002c01	          0x4889c7	                            mov rdi, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002c04	      0xe800000000	                          call 0x4002c09	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4002c09	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4002c0d	      0xbe00000000	                              mov esi, 0	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4002c12	          0x4889c7	                            mov rdi, rax	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4002c15	      0xe800000000	                          call 0x4002c1a	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4002c1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c1e	        0x488d5004	                      lea rdx, [rax + 4]	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c26	          0x4889c6	                            mov rsi, rax	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c29	          0x4889d7	                            mov rdi, rdx	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c2c	      0xe8f4fdffff	               call sym.run_rewrite_hook	       923	sequencer.c	FUNCTION_32	CALL_4
0x4002c31	              0x90	                                     nop	       924	sequencer.c	FUNCTION_32
0x4002c32	              0xc9	                                   leave	       924	sequencer.c	FUNCTION_32
0x4002c33	              0xc3	                                     ret	       924	sequencer.c	FUNCTION_32
label_oid	CALL,23:FOR,2:WHILE,0:ELSE,1:DO,0:IF,6:SWITCH,0:functions,0	255
0x400b540	              0x55	                                push rbp	      3589	sequencer.c	FUNCTION_95
0x400b541	          0x4889e5	                            mov rbp, rsp	      3589	sequencer.c	FUNCTION_95
0x400b544	              0x53	                                push rbx	      3589	sequencer.c	FUNCTION_95
0x400b545	    0x4881ec980000	                           sub rsp, 0x98	      3589	sequencer.c	FUNCTION_95
0x400b54c	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      3589	sequencer.c	FUNCTION_95
0x400b553	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      3589	sequencer.c	FUNCTION_95
0x400b55a	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      3589	sequencer.c	FUNCTION_95
0x400b561	    0x64488b042528	                mov rax, qword fs:[0x28]	      3589	sequencer.c	FUNCTION_95
0x400b56a	        0x488945e8	             mov qword [rbp - 0x18], rax	      3589	sequencer.c	FUNCTION_95
0x400b56e	            0x31c0	                            xor eax, eax	      3589	sequencer.c	FUNCTION_95
0x400b570	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b577	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b57e	          0x4889d6	                            mov rsi, rdx	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b581	          0x4889c7	                            mov rdi, rax	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b584	      0xe800000000	                          call 0x400b589	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b589	        0x48894598	             mov qword [rbp - 0x68], rax	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400b58d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3597	sequencer.c	FUNCTION_95	IF_1
0x400b592	            0x740d	                            je 0x400b5a1	      3597	sequencer.c	FUNCTION_95	IF_1
0x400b594	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3598	sequencer.c	FUNCTION_95	IF_1
0x400b598	        0x4883c028	                           add rax, 0x28	      3598	sequencer.c	FUNCTION_95	IF_1
0x400b59c	      0xe9b1030000	                           jmp 0x400b952	      3598	sequencer.c	FUNCTION_95	IF_1
0x400b5a1	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      3613	sequencer.c	FUNCTION_95	IF_2
0x400b5a9	     0xf8535010000	                           jne 0x400b6e4	      3613	sequencer.c	FUNCTION_95	IF_2
0x400b5af	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3616	sequencer.c	FUNCTION_95	IF_2
0x400b5b6	        0x4883c060	                           add rax, 0x60	      3616	sequencer.c	FUNCTION_95	IF_2
0x400b5ba	      0xbe00000000	                              mov esi, 0	      3616	sequencer.c	FUNCTION_95	IF_2
0x400b5bf	          0x4889c7	                            mov rdi, rax	      3616	sequencer.c	FUNCTION_95	IF_2
0x400b5c2	      0xe8a64bffff	                  call sym.strbuf_setlen	      3616	sequencer.c	FUNCTION_95	IF_2
0x400b5c7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400b5ce	        0x4883c060	                           add rax, 0x60	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400b5d2	      0xbe28000000	                           mov esi, 0x28	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400b5d7	          0x4889c7	                            mov rdi, rax	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400b5da	      0xe800000000	                          call 0x400b5df	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400b5df	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3618	sequencer.c	FUNCTION_95	IF_2
0x400b5e6	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3618	sequencer.c	FUNCTION_95	IF_2
0x400b5ea	        0x488945a0	             mov qword [rbp - 0x60], rax	      3618	sequencer.c	FUNCTION_95	IF_2
0x400b5ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3618	sequencer.c	FUNCTION_95	IF_2
0x400b5f2	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3618	sequencer.c	FUNCTION_95	IF_2
0x400b5f9	    0x8b1500000000	            mov edx, dword [0x0400b5ff] 	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b5ff	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b606	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b60a	          0x4889ce	                            mov rsi, rcx	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b60d	          0x4889c7	                            mov rdi, rax	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b610	      0xe800000000	                          call 0x400b615	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400b615	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b619	          0x4889c7	                            mov rdi, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b61c	      0xe800000000	                          call 0x400b621	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b621	            0x89c6	                            mov esi, eax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b623	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b62a	        0x488d4830	                   lea rcx, [rax + 0x30]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b62e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b632	          0x4889c2	                            mov rdx, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b635	          0x4889cf	                            mov rdi, rcx	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b638	      0xe80a4dffff	          call sym.hashmap_get_from_hash	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b63d	          0x4885c0	                           test rax, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b640	     0xf84db010000	                            je 0x400b821	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400b646	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400b64a	          0x4889c7	                            mov rdi, rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400b64d	      0xe800000000	                          call 0x400b652	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400b652	        0x4883c001	                              add rax, 1	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400b656	        0x48894590	             mov qword [rbp - 0x70], rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400b65a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400b661	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400b665	          0x4889d6	                            mov rsi, rdx	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400b668	          0x4889c7	                            mov rdi, rax	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400b66b	      0xe800000000	                          call 0x400b670	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400b670	            0xeb66	                           jmp 0x400b6d8	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b672	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b676	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b67a	          0x4801d0	                            add rax, rdx	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b67d	           0xfb600	                   movzx eax, byte [rax]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b680	          0x88458b	               mov byte [rbp - 0x75], al	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b683	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b687	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b68b	          0x4801d0	                            add rax, rdx	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b68e	          0xc60000	                       mov byte [rax], 0	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b691	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b695	          0x4889c7	                            mov rdi, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b698	      0xe800000000	                          call 0x400b69d	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b69d	            0x89c6	                            mov esi, eax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b69f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6a6	        0x488d4830	                   lea rcx, [rax + 0x30]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6aa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6ae	          0x4889c2	                            mov rdx, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6b1	          0x4889cf	                            mov rdi, rcx	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6b4	      0xe88e4cffff	          call sym.hashmap_get_from_hash	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6b9	          0x4885c0	                           test rax, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6bc	     0xf845e010000	                            je 0x400b820	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400b6c2	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6c6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6ca	          0x4801c2	                            add rdx, rax	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6cd	         0xfb6458b	            movzx eax, byte [rbp - 0x75]	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6d1	            0x8802	                      mov byte [rdx], al	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6d3	      0x4883459001	               add qword [rbp - 0x70], 1	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6d8	      0x48837d9027	           cmp qword [rbp - 0x70], 0x27 	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6dd	            0x7693	                           jbe 0x400b672	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6df	      0xe93d010000	                           jmp 0x400b821	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400b6e4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6eb	          0x4889c7	                            mov rdi, rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6ee	      0xe800000000	                          call 0x400b6f3	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6f3	        0x488945a8	             mov qword [rbp - 0x58], rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6f7	      0x48837da814	           cmp qword [rbp - 0x58], 0x14 	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6fc	            0x751a	                           jne 0x400b718	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b6fe	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b702	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b709	          0x4889d6	                            mov rsi, rdx	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b70c	          0x4889c7	                            mov rdi, rax	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b70f	      0xe800000000	                          call 0x400b714	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b714	            0x85c0	                           test eax, eax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b716	            0x744c	                            je 0x400b764	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400b718	      0x48837da801	               cmp qword [rbp - 0x58], 1	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b71d	            0x750e	                           jne 0x400b72d	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400b71f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b726	           0xfb600	                   movzx eax, byte [rax]	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b729	            0x3c23	                            cmp al, 0x23	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b72b	            0x7437	                            je 0x400b764	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b72d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b734	          0x4889c7	                            mov rdi, rax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b737	      0xe800000000	                          call 0x400b73c	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b73c	            0x89c6	                            mov esi, eax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b73e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b745	        0x488d4830	                   lea rcx, [rax + 0x30]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b749	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b750	          0x4889c2	                            mov rdx, rax	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b753	          0x4889cf	                            mov rdi, rcx	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b756	      0xe8ec4bffff	          call sym.hashmap_get_from_hash	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400b75b	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b75e	     0xf84bd000000	                            je 0x400b821	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b764	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b76b	        0x4883c060	                           add rax, 0x60	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b76f	        0x488945b0	             mov qword [rbp - 0x50], rax	      3650	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b773	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b777	      0xbe00000000	                              mov esi, 0	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b77c	          0x4889c7	                            mov rdi, rax	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b77f	      0xe8e949ffff	                  call sym.strbuf_setlen	      3652	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b784	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b788	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b78f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b793	          0x4889ce	                            mov rsi, rcx	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b796	          0x4889c7	                            mov rdi, rax	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b799	      0xe800000000	                          call 0x400b79e	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400b79e	    0xc7458c020000	               mov dword [rbp - 0x74], 2	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400b7a5	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_15
0x400b7a9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_15
0x400b7ad	          0x4889d6	                            mov rsi, rdx	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_15
0x400b7b0	          0x4889c7	                            mov rdi, rax	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_15
0x400b7b3	      0xe8b549ffff	                  call sym.strbuf_setlen	      3656	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_15
0x400b7b8	          0x8b558c	             mov edx, dword [rbp - 0x74]	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7bf	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7c4	          0x4889c7	                            mov rdi, rax	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7c7	      0xb800000000	                              mov eax, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7cc	      0xe800000000	                          call 0x400b7d1	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400b7d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3660	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0x400b7d5	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3660	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0x400b7d9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x400b7dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x400b7e1	          0x4889c7	                            mov rdi, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7e4	      0xe800000000	                          call 0x400b7e9	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7e9	            0x89c1	                            mov ecx, eax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7eb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7f2	        0x4883c030	                           add rax, 0x30	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7f6	          0x4889da	                            mov rdx, rbx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7f9	            0x89ce	                            mov esi, ecx	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7fb	          0x4889c7	                            mov rdi, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b7fe	      0xe8444bffff	          call sym.hashmap_get_from_hash	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b803	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b806	            0x7406	                            je 0x400b80e	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400b808	        0x83458c01	               add dword [rbp - 0x74], 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400b80c	            0xeb97	                           jmp 0x400b7a5	      3662	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400b80e	              0x90	                                     nop	      3661	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6
0x400b80f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b813	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b817	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b81e	            0xeb01	                           jmp 0x400b821	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400b820	              0x90	                                     nop	      3635	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4
0x400b821	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3667	sequencer.c	FUNCTION_95
0x400b828	          0x4889c7	                            mov rdi, rax	      3667	sequencer.c	FUNCTION_95
0x400b82b	      0xe800000000	                          call 0x400b830	      3667	sequencer.c	FUNCTION_95
0x400b830	        0x488945b8	             mov qword [rbp - 0x48], rax	      3667	sequencer.c	FUNCTION_95
0x400b834	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3667	sequencer.c	FUNCTION_95
0x400b838	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95
0x400b83b	      0xbf10000000	                           mov edi, 0x10	      3667	sequencer.c	FUNCTION_95
0x400b840	      0xe85c48ffff	                         call sym.st_add	      3667	sequencer.c	FUNCTION_95
0x400b845	      0xbe01000000	                              mov esi, 1	      3667	sequencer.c	FUNCTION_95
0x400b84a	          0x4889c7	                            mov rdi, rax	      3667	sequencer.c	FUNCTION_95
0x400b84d	      0xe84f48ffff	                         call sym.st_add	      3667	sequencer.c	FUNCTION_95
0x400b852	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95
0x400b855	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x400b85a	      0xe800000000	                          call 0x400b85f	      3667	sequencer.c	FUNCTION_95
0x400b85f	        0x488945c0	             mov qword [rbp - 0x40], rax	      3667	sequencer.c	FUNCTION_95
0x400b863	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3667	sequencer.c	FUNCTION_95
0x400b867	        0x488d4810	                   lea rcx, [rax + 0x10]	      3667	sequencer.c	FUNCTION_95
0x400b86b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3667	sequencer.c	FUNCTION_95
0x400b86f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3667	sequencer.c	FUNCTION_95
0x400b876	          0x4889c6	                            mov rsi, rax	      3667	sequencer.c	FUNCTION_95
0x400b879	          0x4889cf	                            mov rdi, rcx	      3667	sequencer.c	FUNCTION_95
0x400b87c	      0xe800000000	                          call 0x400b881	      3667	sequencer.c	FUNCTION_95
0x400b881	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b888	          0x4889c7	                            mov rdi, rax	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b88b	      0xe800000000	                          call 0x400b890	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b890	            0x89c2	                            mov edx, eax	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b892	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b896	            0x89d6	                            mov esi, edx	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b898	          0x4889c7	                            mov rdi, rax	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b89b	      0xe87c4affff	             call sym.hashmap_entry_init	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400b8a0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8a7	        0x488d5030	                   lea rdx, [rax + 0x30]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8af	          0x4889c6	                            mov rsi, rax	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8b2	          0x4889d7	                            mov rdi, rdx	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8b5	      0xe800000000	                          call 0x400b8ba	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400b8ba	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3671	sequencer.c	FUNCTION_95
0x400b8c1	          0x4889c7	                            mov rdi, rax	      3671	sequencer.c	FUNCTION_95
0x400b8c4	      0xe800000000	                          call 0x400b8c9	      3671	sequencer.c	FUNCTION_95
0x400b8c9	        0x488945c8	             mov qword [rbp - 0x38], rax	      3671	sequencer.c	FUNCTION_95
0x400b8cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3671	sequencer.c	FUNCTION_95
0x400b8d1	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95
0x400b8d4	      0xbf28000000	                           mov edi, 0x28	      3671	sequencer.c	FUNCTION_95
0x400b8d9	      0xe8c347ffff	                         call sym.st_add	      3671	sequencer.c	FUNCTION_95
0x400b8de	      0xbe01000000	                              mov esi, 1	      3671	sequencer.c	FUNCTION_95
0x400b8e3	          0x4889c7	                            mov rdi, rax	      3671	sequencer.c	FUNCTION_95
0x400b8e6	      0xe8b647ffff	                         call sym.st_add	      3671	sequencer.c	FUNCTION_95
0x400b8eb	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95
0x400b8ee	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95
0x400b8f3	      0xe800000000	                          call 0x400b8f8	      3671	sequencer.c	FUNCTION_95
0x400b8f8	        0x48894598	             mov qword [rbp - 0x68], rax	      3671	sequencer.c	FUNCTION_95
0x400b8fc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3671	sequencer.c	FUNCTION_95
0x400b900	        0x488d4828	                   lea rcx, [rax + 0x28]	      3671	sequencer.c	FUNCTION_95
0x400b904	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3671	sequencer.c	FUNCTION_95
0x400b908	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3671	sequencer.c	FUNCTION_95
0x400b90f	          0x4889c6	                            mov rsi, rax	      3671	sequencer.c	FUNCTION_95
0x400b912	          0x4889cf	                            mov rdi, rcx	      3671	sequencer.c	FUNCTION_95
0x400b915	      0xe800000000	                          call 0x400b91a	      3671	sequencer.c	FUNCTION_95
0x400b91a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b91e	        0x488d5010	                   lea rdx, [rax + 0x10]	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b922	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b929	          0x4889c6	                            mov rsi, rax	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b92c	          0x4889d7	                            mov rdi, rdx	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b92f	      0xe8404bffff	                         call sym.oidcpy	      3672	sequencer.c	FUNCTION_95	CALL_22
0x400b934	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b93b	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b93f	          0x4889d6	                            mov rsi, rdx	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b942	          0x4889c7	                            mov rdi, rax	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b945	      0xe800000000	                          call 0x400b94a	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b94a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3675	sequencer.c	FUNCTION_95
0x400b94e	        0x4883c028	                           add rax, 0x28	      3675	sequencer.c	FUNCTION_95
0x400b952	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3676	sequencer.c	FUNCTION_95
0x400b956	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3676	sequencer.c	FUNCTION_95
0x400b95f	            0x7405	                            je 0x400b966	      3676	sequencer.c	FUNCTION_95
0x400b961	      0xe800000000	                          call 0x400b966	      3676	sequencer.c	FUNCTION_95
0x400b966	    0x4881c4980000	                           add rsp, 0x98	      3676	sequencer.c	FUNCTION_95
0x400b96d	              0x5b	                                 pop rbx	      3676	sequencer.c	FUNCTION_95
0x400b96e	              0x5d	                                 pop rbp	      3676	sequencer.c	FUNCTION_95
0x400b96f	              0xc3	                                     ret	      3676	sequencer.c	FUNCTION_95
strbuf_complete_line	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	11
0x40002fc	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_161
0x40002fd	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_161
0x4000300	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_161
0x4000304	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_161
0x4000308	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_161	CALL_1
0x400030c	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_161	CALL_1
0x4000311	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_161	CALL_1
0x4000314	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_161	CALL_1
0x4000319	              0x90	                                     nop	       602	strbuf.h	FUNCTION_161
0x400031a	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_161
0x400031b	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_161
record_in_rewritten	CALL,7:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	34
0x4004466	              0x55	                                push rbp	      1482	sequencer.c	FUNCTION_47
0x4004467	          0x4889e5	                            mov rbp, rsp	      1482	sequencer.c	FUNCTION_47
0x400446a	        0x4883ec20	                           sub rsp, 0x20	      1482	sequencer.c	FUNCTION_47
0x400446e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1482	sequencer.c	FUNCTION_47
0x4004472	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1482	sequencer.c	FUNCTION_47
0x4004475	      0xe829c4ffff	  call sym.rebase_path_rewritten_pending	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400447a	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400447f	          0x4889c7	                            mov rdi, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x4004482	      0xe800000000	                          call 0x4004487	      1483	sequencer.c	FUNCTION_47	CALL_2
0x4004487	        0x488945f8	                mov qword [rbp - 8], rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400448b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1485	sequencer.c	FUNCTION_47	IF_1
0x4004490	            0x7446	                            je 0x40044d8	      1485	sequencer.c	FUNCTION_47	IF_1
0x4004492	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4004496	          0x4889c7	                            mov rdi, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x4004499	      0xe800000000	                          call 0x400449e	      1488	sequencer.c	FUNCTION_47	CALL_4
0x400449e	          0x4889c2	                            mov rdx, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044a5	      0xbe00000000	                              mov esi, 0	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044aa	          0x4889c7	                            mov rdi, rax	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044ad	      0xb800000000	                              mov eax, 0	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044b2	      0xe800000000	                          call 0x40044b7	      1488	sequencer.c	FUNCTION_47	CALL_4
0x40044b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1489	sequencer.c	FUNCTION_47	CALL_5
0x40044bb	          0x4889c7	                            mov rdi, rax	      1489	sequencer.c	FUNCTION_47	CALL_5
0x40044be	      0xe800000000	                          call 0x40044c3	      1489	sequencer.c	FUNCTION_47	CALL_5
0x40044c3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x40044c6	            0x89c7	                            mov edi, eax	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x40044c8	      0xe8c5f7ffff	                       call sym.is_fixup	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x40044cd	            0x85c0	                           test eax, eax	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x40044cf	            0x7508	                           jne 0x40044d9	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_6
0x40044d1	      0xe841feffff	        call sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_7
0x40044d6	            0xeb01	                           jmp 0x40044d9	      1492	sequencer.c	FUNCTION_47	CALL_7
0x40044d8	              0x90	                                     nop	      1486	sequencer.c	FUNCTION_47	IF_1
0x40044d9	              0xc9	                                   leave	      1493	sequencer.c	FUNCTION_47
0x40044da	              0xc3	                                     ret	      1493	sequencer.c	FUNCTION_47
safe_append	CALL,17:FOR,0:WHILE,0:ELSE,0:DO,0:IF,4:SWITCH,0:functions,0	135
0x4007cb7	              0x55	                                push rbp	      2545	sequencer.c	FUNCTION_79
0x4007cb8	          0x4889e5	                            mov rbp, rsp	      2545	sequencer.c	FUNCTION_79
0x4007cbb	    0x4881ec200100	                          sub rsp, 0x120	      2545	sequencer.c	FUNCTION_79
0x4007cc2	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2545	sequencer.c	FUNCTION_79
0x4007cc9	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	      2545	sequencer.c	FUNCTION_79
0x4007cd0	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	      2545	sequencer.c	FUNCTION_79
0x4007cd7	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	      2545	sequencer.c	FUNCTION_79
0x4007cde	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	      2545	sequencer.c	FUNCTION_79
0x4007ce5	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	      2545	sequencer.c	FUNCTION_79
0x4007cec	            0x84c0	                             test al, al	      2545	sequencer.c	FUNCTION_79
0x4007cee	            0x7420	                            je 0x4007d10	      2545	sequencer.c	FUNCTION_79
0x4007cf0	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	      2545	sequencer.c	FUNCTION_79
0x4007cf4	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	      2545	sequencer.c	FUNCTION_79
0x4007cf8	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	      2545	sequencer.c	FUNCTION_79
0x4007cfc	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	      2545	sequencer.c	FUNCTION_79
0x4007d00	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	      2545	sequencer.c	FUNCTION_79
0x4007d04	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	      2545	sequencer.c	FUNCTION_79
0x4007d08	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	      2545	sequencer.c	FUNCTION_79
0x4007d0c	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	      2545	sequencer.c	FUNCTION_79
0x4007d10	    0x64488b042528	                mov rax, qword fs:[0x28]	      2545	sequencer.c	FUNCTION_79
0x4007d19	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2545	sequencer.c	FUNCTION_79
0x4007d20	            0x31c0	                            xor eax, eax	      2545	sequencer.c	FUNCTION_79
0x4007d22	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2547	sequencer.c	FUNCTION_79
0x4007d2d	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d34	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d3b	      0xba04000000	                              mov edx, 4	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d40	          0x4889ce	                            mov rsi, rcx	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d43	          0x4889c7	                            mov rdi, rax	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d46	      0xe87487ffff	      call sym.hold_lock_file_for_update	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d4b	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2548	sequencer.c	FUNCTION_79	CALL_1
0x4007d51	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2550	sequencer.c	FUNCTION_79
0x4007d5c	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	      2550	sequencer.c	FUNCTION_79
0x4007d67	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2550	sequencer.c	FUNCTION_79
0x4007d72	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      2552	sequencer.c	FUNCTION_79	IF_1
0x4007d79	            0x790a	                           jns 0x4007d85	      2552	sequencer.c	FUNCTION_79	IF_1
0x4007d7b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2553	sequencer.c	FUNCTION_79	IF_1
0x4007d80	      0xe9b3010000	                           jmp 0x4007f38	      2553	sequencer.c	FUNCTION_79	IF_1
0x4007d85	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007d8c	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007d93	      0xba00000000	                              mov edx, 0	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007d98	          0x4889ce	                            mov rsi, rcx	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007d9b	          0x4889c7	                            mov rdi, rax	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007d9e	      0xe800000000	                          call 0x4007da3	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007da3	          0x4885c0	                           test rax, rax	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007da6	            0x794e	                           jns 0x4007df6	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007da8	      0xe800000000	                          call 0x4007dad	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007dad	            0x8b00	                    mov eax, dword [rax]	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007daf	          0x83f802	                              cmp eax, 2	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007db2	            0x7442	                            je 0x4007df6	      2555	sequencer.c	FUNCTION_79	IF_2	CALL_2
0x4007db4	      0xbf00000000	                              mov edi, 0	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007db9	      0xe8e985ffff	                               call sym.	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dbe	          0x4889c2	                            mov rdx, rax	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dc1	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dc8	          0x4889c6	                            mov rsi, rax	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dcb	          0x4889d7	                            mov rdi, rdx	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dce	      0xb800000000	                              mov eax, 0	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dd3	      0xe800000000	                          call 0x4007dd8	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007dd8	      0xe86382ffff	                    call sym.const_error	      2556	sequencer.c	FUNCTION_79	IF_2	CALL_3
0x4007ddd	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x4007de4	          0x4889c7	                            mov rdi, rax	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x4007de7	      0xe80087ffff	             call sym.rollback_lock_file	      2557	sequencer.c	FUNCTION_79	IF_2	CALL_4
0x4007dec	      0xb8ffffffff	                     mov eax, 0xffffffff	      2558	sequencer.c	FUNCTION_79	IF_2
0x4007df1	      0xe942010000	                           jmp 0x4007f38	      2558	sequencer.c	FUNCTION_79	IF_2
0x4007df6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2560	sequencer.c	FUNCTION_79	CALL_5
0x4007dfd	      0xbe0a000000	                            mov esi, 0xa	      2560	sequencer.c	FUNCTION_79	CALL_5
0x4007e02	          0x4889c7	                            mov rdi, rax	      2560	sequencer.c	FUNCTION_79	CALL_5
0x4007e05	      0xe8a084ffff	                call sym.strbuf_complete	      2560	sequencer.c	FUNCTION_79	CALL_5
0x4007e0a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e14	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e1e	        0x488d4510	                   lea rax, [rbp + 0x10]	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e22	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e29	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e30	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2561	sequencer.c	FUNCTION_79	CALL_6
0x4007e37	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e3e	    0x488b8de0feff	            mov rcx, qword [rbp - 0x120]	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e45	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e4c	          0x4889ce	                            mov rsi, rcx	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e4f	          0x4889c7	                            mov rdi, rax	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e52	      0xe800000000	                          call 0x4007e57	      2562	sequencer.c	FUNCTION_79	CALL_7
0x4007e57	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e5e	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e65	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e6b	          0x4889ce	                            mov rsi, rcx	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e6e	            0x89c7	                            mov edi, eax	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e70	      0xe800000000	                          call 0x4007e75	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e75	          0x4885c0	                           test rax, rax	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e78	            0x794e	                           jns 0x4007ec8	      2565	sequencer.c	FUNCTION_79	IF_3	CALL_9
0x4007e7a	      0xbf00000000	                              mov edi, 0	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e7f	      0xe82385ffff	                               call sym.	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e84	          0x4889c2	                            mov rdx, rax	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e87	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e8e	          0x4889c6	                            mov rsi, rax	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e91	          0x4889d7	                            mov rdi, rdx	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e94	      0xb800000000	                              mov eax, 0	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e99	      0xe800000000	                          call 0x4007e9e	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007e9e	      0xe89d81ffff	                    call sym.const_error	      2566	sequencer.c	FUNCTION_79	IF_3	CALL_10
0x4007ea3	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_11
0x4007eaa	          0x4889c7	                            mov rdi, rax	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_11
0x4007ead	      0xe800000000	                          call 0x4007eb2	      2567	sequencer.c	FUNCTION_79	IF_3	CALL_11
0x4007eb2	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x4007eb9	          0x4889c7	                            mov rdi, rax	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x4007ebc	      0xe82b86ffff	             call sym.rollback_lock_file	      2568	sequencer.c	FUNCTION_79	IF_3	CALL_12
0x4007ec1	      0xb8ffffffff	                     mov eax, 0xffffffff	      2569	sequencer.c	FUNCTION_79	IF_3
0x4007ec6	            0xeb70	                           jmp 0x4007f38	      2569	sequencer.c	FUNCTION_79	IF_3
0x4007ec8	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x4007ecf	          0x4889c7	                            mov rdi, rax	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x4007ed2	      0xe800000000	                          call 0x4007ed7	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x4007ed7	            0x85c0	                           test eax, eax	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x4007ed9	            0x7949	                           jns 0x4007f24	      2571	sequencer.c	FUNCTION_79	IF_4	CALL_13
0x4007edb	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_14
0x4007ee2	          0x4889c7	                            mov rdi, rax	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_14
0x4007ee5	      0xe800000000	                          call 0x4007eea	      2572	sequencer.c	FUNCTION_79	IF_4	CALL_14
0x4007eea	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x4007ef1	          0x4889c7	                            mov rdi, rax	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x4007ef4	      0xe8f385ffff	             call sym.rollback_lock_file	      2573	sequencer.c	FUNCTION_79	IF_4	CALL_15
0x4007ef9	      0xbf00000000	                              mov edi, 0	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007efe	      0xe8a484ffff	                               call sym.	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f03	          0x4889c2	                            mov rdx, rax	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f06	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f0d	          0x4889c6	                            mov rsi, rax	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f10	          0x4889d7	                            mov rdi, rdx	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f13	      0xb800000000	                              mov eax, 0	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f18	      0xe800000000	                          call 0x4007f1d	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f1d	      0xe81e81ffff	                    call sym.const_error	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f22	            0xeb14	                           jmp 0x4007f38	      2574	sequencer.c	FUNCTION_79	IF_4	CALL_16
0x4007f24	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      2577	sequencer.c	FUNCTION_79	CALL_17
0x4007f2b	          0x4889c7	                            mov rdi, rax	      2577	sequencer.c	FUNCTION_79	CALL_17
0x4007f2e	      0xe800000000	                          call 0x4007f33	      2577	sequencer.c	FUNCTION_79	CALL_17
0x4007f33	      0xb800000000	                              mov eax, 0	      2578	sequencer.c	FUNCTION_79
0x4007f38	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2579	sequencer.c	FUNCTION_79
0x4007f3f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2579	sequencer.c	FUNCTION_79
0x4007f48	            0x7405	                            je 0x4007f4f	      2579	sequencer.c	FUNCTION_79
0x4007f4a	      0xe800000000	                          call 0x4007f4f	      2579	sequencer.c	FUNCTION_79
0x4007f4f	              0xc9	                                   leave	      2579	sequencer.c	FUNCTION_79
0x4007f50	              0xc3	                                     ret	      2579	sequencer.c	FUNCTION_79
is_rebase_i	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	10
0x4000cc8	              0x55	                                push rbp	       193	sequencer.c	FUNCTION_3
0x4000cc9	          0x4889e5	                            mov rbp, rsp	       193	sequencer.c	FUNCTION_3
0x4000ccc	        0x48897df8	                mov qword [rbp - 8], rdi	       193	sequencer.c	FUNCTION_3
0x4000cd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	sequencer.c	FUNCTION_3
0x4000cd4	            0x8b00	                    mov eax, dword [rax]	       194	sequencer.c	FUNCTION_3
0x4000cd6	          0x83f802	                              cmp eax, 2	       194	sequencer.c	FUNCTION_3
0x4000cd9	           0xf94c0	                                 sete al	       194	sequencer.c	FUNCTION_3
0x4000cdc	           0xfb6c0	                           movzx eax, al	       194	sequencer.c	FUNCTION_3
0x4000cdf	              0x5d	                                 pop rbp	       195	sequencer.c	FUNCTION_3
0x4000ce0	              0xc3	                                     ret	       195	sequencer.c	FUNCTION_3
transform_todos	CALL,20:FOR,1:WHILE,0:ELSE,3:DO,0:IF,8:SWITCH,0:functions,0	180
0x400ce7b	              0x55	                                push rbp	      4008	sequencer.c	FUNCTION_99
0x400ce7c	          0x4889e5	                            mov rbp, rsp	      4008	sequencer.c	FUNCTION_99
0x400ce7f	    0x4881ecb00000	                           sub rsp, 0xb0	      4008	sequencer.c	FUNCTION_99
0x400ce86	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      4008	sequencer.c	FUNCTION_99
0x400ce8c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4008	sequencer.c	FUNCTION_99
0x400ce95	        0x488945f8	                mov qword [rbp - 8], rax	      4008	sequencer.c	FUNCTION_99
0x400ce99	            0x31c0	                            xor eax, eax	      4008	sequencer.c	FUNCTION_99
0x400ce9b	      0xe8cf37ffff	               call sym.rebase_path_todo	      4009	sequencer.c	FUNCTION_99	CALL_1
0x400cea0	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4009	sequencer.c	FUNCTION_99	CALL_1
0x400cea7	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4010	sequencer.c	FUNCTION_99
0x400ceab	      0xb800000000	                              mov eax, 0	      4010	sequencer.c	FUNCTION_99
0x400ceb0	      0xb90b000000	                            mov ecx, 0xb	      4010	sequencer.c	FUNCTION_99
0x400ceb5	          0x4889d7	                            mov rdi, rdx	      4010	sequencer.c	FUNCTION_99
0x400ceb8	          0xf348ab	              rep stosq qword [rdi], rax	      4010	sequencer.c	FUNCTION_99
0x400cebb	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      4010	sequencer.c	FUNCTION_99
0x400cec3	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4011	sequencer.c	FUNCTION_99
0x400cecb	    0x48c745880000	               mov qword [rbp - 0x78], 0	      4011	sequencer.c	FUNCTION_99
0x400ced3	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4011	sequencer.c	FUNCTION_99
0x400cedb	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cee2	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cee6	      0xba00000000	                              mov edx, 0	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400ceeb	          0x4889ce	                            mov rsi, rcx	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400ceee	          0x4889c7	                            mov rdi, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cef1	      0xe800000000	                          call 0x400cef6	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cef6	          0x4885c0	                           test rax, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cef9	            0x792e	                           jns 0x400cf29	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cefb	      0xbf00000000	                              mov edi, 0	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf00	      0xe8a234ffff	                               call sym.	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf05	          0x4889c2	                            mov rdx, rax	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf08	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf0f	          0x4889c6	                            mov rsi, rax	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf12	          0x4889d7	                            mov rdi, rdx	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf15	      0xb800000000	                              mov eax, 0	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf1a	      0xe800000000	                          call 0x400cf1f	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf1f	      0xe81c31ffff	                    call sym.const_error	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf24	      0xe94d020000	                           jmp 0x400d176	      4016	sequencer.c	FUNCTION_99	CALL_3
0x400cf29	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf2d	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf31	          0x4889d6	                            mov rsi, rdx	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf34	          0x4889c7	                            mov rdi, rax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf37	      0xe8f889ffff	              call sym.parse_insn_buffer	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf3c	            0x85c0	                           test eax, eax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf3e	            0x743a	                            je 0x400cf7a	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cf40	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_5
0x400cf44	          0x4889c7	                            mov rdi, rax	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_5
0x400cf47	      0xe86684ffff	              call sym.todo_list_release	      4019	sequencer.c	FUNCTION_99	IF_2	CALL_5
0x400cf4c	      0xbf00000000	                              mov edi, 0	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf51	      0xe85134ffff	                               call sym.	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf56	          0x4889c2	                            mov rdx, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf59	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf60	          0x4889c6	                            mov rsi, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf63	          0x4889d7	                            mov rdi, rdx	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf66	      0xb800000000	                              mov eax, 0	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf6b	      0xe800000000	                          call 0x400cf70	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf70	      0xe8cb30ffff	                    call sym.const_error	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf75	      0xe9fc010000	                           jmp 0x400d176	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400cf7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cf7e	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cf85	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cf8f	      0xe99f010000	                           jmp 0x400d133	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cf94	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cf9b	            0x8b00	                    mov eax, dword [rax]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cf9d	          0x83f80b	                            cmp eax, 0xb	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cfa0	            0x7630	                           jbe 0x400cfd2	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cfa2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfa9	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfad	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfb4	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfb7	        0x488d4580	                   lea rax, [rbp - 0x80]	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfbb	      0xbe00000000	                              mov esi, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfc0	          0x4889c7	                            mov rdi, rax	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfc3	      0xb800000000	                              mov eax, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfc8	      0xe800000000	                          call 0x400cfcd	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cfcd	      0xe952010000	                           jmp 0x400d124	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cfd2	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cfd8	          0x83e004	                              and eax, 4	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cfdb	            0x85c0	                           test eax, eax	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cfdd	            0x7423	                            je 0x400d002	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cfdf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cfe6	            0x8b00	                    mov eax, dword [rax]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cfe8	            0x89c7	                            mov edi, eax	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cfea	      0xe8546cffff	                call sym.command_to_char	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cfef	           0xfbed0	                           movsx edx, al	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cff2	        0x488d4580	                   lea rax, [rbp - 0x80]	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cff6	            0x89d6	                            mov esi, edx	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cff8	          0x4889c7	                            mov rdi, rax	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400cffb	      0xe80732ffff	                   call sym.strbuf_addch	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400d000	            0xeb22	                           jmp 0x400d024	      4032	sequencer.c	FUNCTION_99	FOR_1	CALL_9
0x400d002	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d009	            0x8b00	                    mov eax, dword [rax]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d00b	            0x89c7	                            mov edi, eax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d00d	      0xe8f86bffff	              call sym.command_to_string	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d012	          0x4889c2	                            mov rdx, rax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d015	        0x488d4580	                   lea rax, [rbp - 0x80]	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d019	          0x4889d6	                            mov rsi, rdx	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d01c	          0x4889c7	                            mov rdi, rax	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d01f	      0xe85132ffff	                  call sym.strbuf_addstr	      4034	sequencer.c	FUNCTION_99	FOR_1	CALL_11
0x400d024	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d02b	        0x488b4008	                mov rax, qword [rax + 8]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d02f	          0x4885c0	                           test rax, rax	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d032	     0xf84a0000000	                            je 0x400d0d8	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d038	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d03e	          0x83e002	                              and eax, 2	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d041	            0x85c0	                           test eax, eax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d043	            0x7415	                            je 0x400d05a	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d045	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d04c	        0x488b4008	                mov rax, qword [rax + 8]	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d050	          0x4889c7	                            mov rdi, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d053	      0xe88640ffff	              call sym.short_commit_name	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d058	            0xeb17	                           jmp 0x400d071	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d05a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_13
0x400d061	        0x488b4008	                mov rax, qword [rax + 8]	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_13
0x400d065	        0x4883c004	                              add rax, 4	      4040	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_13
0x400d069	          0x4889c7	                            mov rdi, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d06c	      0xe800000000	                          call 0x400d071	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400d071	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400d078	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400d07f	            0x8b00	                    mov eax, dword [rax]	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400d081	          0x83f809	                              cmp eax, 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400d084	            0x7535	                           jne 0x400d0bb	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400d086	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400d08d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400d090	          0x83e001	                              and eax, 1	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400d093	            0x85c0	                           test eax, eax	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400d095	            0x7413	                            je 0x400d0aa	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400d097	        0x488d4580	                   lea rax, [rbp - 0x80]	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_14
0x400d09b	      0xbe00000000	                              mov esi, 0	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_14
0x400d0a0	          0x4889c7	                            mov rdi, rax	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_14
0x400d0a3	      0xe8cd31ffff	                  call sym.strbuf_addstr	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_14
0x400d0a8	            0xeb11	                           jmp 0x400d0bb	      4044	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_14
0x400d0aa	        0x488d4580	                   lea rax, [rbp - 0x80]	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_15
0x400d0ae	      0xbe00000000	                              mov esi, 0	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_15
0x400d0b3	          0x4889c7	                            mov rdi, rax	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_15
0x400d0b6	      0xe8ba31ffff	                  call sym.strbuf_addstr	      4046	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	CALL_15
0x400d0bb	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0c2	        0x488d4580	                   lea rax, [rbp - 0x80]	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0c6	      0xbe00000000	                              mov esi, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0cb	          0x4889c7	                            mov rdi, rax	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0ce	      0xb800000000	                              mov eax, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0d3	      0xe800000000	                          call 0x400d0d8	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400d0d8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400d0df	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400d0e2	            0x85c0	                           test eax, eax	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400d0e4	            0x7513	                           jne 0x400d0f9	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400d0e6	        0x488d4580	                   lea rax, [rbp - 0x80]	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_17
0x400d0ea	      0xbe0a000000	                            mov esi, 0xa	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_17
0x400d0ef	          0x4889c7	                            mov rdi, rax	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_17
0x400d0f2	      0xe81031ffff	                   call sym.strbuf_addch	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_17
0x400d0f7	            0xeb2b	                           jmp 0x400d124	      4054	sequencer.c	FUNCTION_99	FOR_1	CALL_17
0x400d0f9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d100	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d104	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d10b	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d10e	        0x488d4580	                   lea rax, [rbp - 0x80]	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d112	      0xbe00000000	                              mov esi, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d117	          0x4889c7	                            mov rdi, rax	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d11a	      0xb800000000	                              mov eax, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d11f	      0xe800000000	                          call 0x400d124	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400d124	    0x838564ffffff	               add dword [rbp - 0x9c], 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400d12b	    0x48838568ffff	           add qword [rbp - 0x98], 0x30 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400d133	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400d136	    0x3b8564ffffff	             cmp eax, dword [rbp - 0x9c]	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400d13c	     0xf8f52feffff	                            jg 0x400cf94	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400d142	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d146	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d14a	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d151	      0xb900000000	                              mov ecx, 0	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d156	          0x4889c7	                            mov rdi, rax	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d159	      0xe88741ffff	                  call sym.write_message	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d15e	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400d164	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4060	sequencer.c	FUNCTION_99	CALL_20
0x400d168	          0x4889c7	                            mov rdi, rax	      4060	sequencer.c	FUNCTION_99	CALL_20
0x400d16b	      0xe84282ffff	              call sym.todo_list_release	      4060	sequencer.c	FUNCTION_99	CALL_20
0x400d170	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      4061	sequencer.c	FUNCTION_99
0x400d176	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4062	sequencer.c	FUNCTION_99
0x400d17a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4062	sequencer.c	FUNCTION_99
0x400d183	            0x7405	                            je 0x400d18a	      4062	sequencer.c	FUNCTION_99
0x400d185	      0xe800000000	                          call 0x400d18a	      4062	sequencer.c	FUNCTION_99
0x400d18a	              0xc9	                                   leave	      4062	sequencer.c	FUNCTION_99
0x400d18b	              0xc3	                                     ret	      4062	sequencer.c	FUNCTION_99
st_mult	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	22
0x40000e5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_176
0x40000e6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_176
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_176
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_176
0x40000f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_176
0x40000f5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_176	IF_1
0x40000fa	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_176	IF_1
0x40000fc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_176	IF_1
0x4000103	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_176	IF_1
0x4000108	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_176	IF_1
0x400010c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_176	IF_1
0x4000110	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_176	IF_1
0x4000112	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x4000116	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x400011a	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x400011d	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x4000122	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x4000127	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_176	IF_1	CALL_1
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_176
0x4000130	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_176
0x4000135	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_176
0x4000136	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_176
strbuf_setlen	CALL,2:FOR,0:WHILE,0:ELSE,1:DO,0:IF,2:SWITCH,0:functions,0	43
0x400016d	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_153
0x400016e	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_153
0x4000171	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_153
0x4000175	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_153
0x4000179	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_153
0x400017d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_153	IF_1
0x4000181	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_153	IF_1
0x4000184	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_153	IF_1
0x4000187	            0x740d	                            je 0x4000196	       162	strbuf.h	FUNCTION_153	IF_1
0x4000189	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_153	IF_1
0x400018d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_153	IF_1
0x4000190	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_153	IF_1
0x4000194	            0xeb05	                           jmp 0x400019b	       162	strbuf.h	FUNCTION_153	IF_1
0x4000196	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_153	IF_1
0x400019b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_153	IF_1
0x400019f	            0x730f	                           jae 0x40001b0	       162	strbuf.h	FUNCTION_153	IF_1
0x40001a1	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_153	CALL_1
0x40001a6	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_153	CALL_1
0x40001ab	      0xe800000000	                          call 0x40001b0	       163	strbuf.h	FUNCTION_153	CALL_1
0x40001b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_153
0x40001b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_153
0x40001b8	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_153
0x40001bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_153	IF_2
0x40001c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_153	IF_2
0x40001c4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_153	IF_2
0x40001ca	            0x7414	                            je 0x40001e0	       165	strbuf.h	FUNCTION_153	IF_2
0x40001cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_153	IF_2
0x40001d0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_153	IF_2
0x40001d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_153	IF_2
0x40001d8	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_153	IF_2
0x40001db	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_153	IF_2
0x40001de	            0xeb24	                           jmp 0x4000204	       169	strbuf.h	FUNCTION_153
0x40001e0	     0xfb605000000	           movzx eax, byte [0x040001e7] 	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001e7	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001e9	            0x7419	                            je 0x4000204	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001eb	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001f0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001f5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001fa	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_153	CALL_2
0x40001ff	      0xe800000000	                          call 0x4000204	       168	strbuf.h	FUNCTION_153	CALL_2
0x4000204	              0x90	                                     nop	       169	strbuf.h	FUNCTION_153
0x4000205	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_153
0x4000206	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_153
intend_to_amend	CALL,6:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	43
0x40078ab	              0x55	                                push rbp	      2450	sequencer.c	FUNCTION_75
0x40078ac	          0x4889e5	                            mov rbp, rsp	      2450	sequencer.c	FUNCTION_75
0x40078af	              0x53	                                push rbx	      2450	sequencer.c	FUNCTION_75
0x40078b0	        0x4883ec38	                           sub rsp, 0x38	      2450	sequencer.c	FUNCTION_75
0x40078b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2450	sequencer.c	FUNCTION_75
0x40078bd	        0x488945e8	             mov qword [rbp - 0x18], rax	      2450	sequencer.c	FUNCTION_75
0x40078c1	            0x31c0	                            xor eax, eax	      2450	sequencer.c	FUNCTION_75
0x40078c3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078c7	          0x4889c6	                            mov rsi, rax	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078ca	      0xbf00000000	                              mov edi, 0	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078cf	      0xe800000000	                          call 0x40078d4	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078d4	            0x85c0	                           test eax, eax	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078d6	            0x741e	                            je 0x40078f6	      2454	sequencer.c	FUNCTION_75	IF_1	CALL_1
0x40078d8	      0xbf00000000	                              mov edi, 0	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078dd	      0xe8c58affff	                               call sym.	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078e2	          0x4889c7	                            mov rdi, rax	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078e5	      0xb800000000	                              mov eax, 0	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078ea	      0xe800000000	                          call 0x40078ef	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078ef	      0xe84c87ffff	                    call sym.const_error	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078f4	            0xeb3b	                           jmp 0x4007931	      2455	sequencer.c	FUNCTION_75	CALL_2
0x40078f6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2457	sequencer.c	FUNCTION_75	CALL_3
0x40078fa	          0x4889c7	                            mov rdi, rax	      2457	sequencer.c	FUNCTION_75	CALL_3
0x40078fd	      0xe800000000	                          call 0x4007902	      2457	sequencer.c	FUNCTION_75	CALL_3
0x4007902	        0x488945c8	             mov qword [rbp - 0x38], rax	      2457	sequencer.c	FUNCTION_75	CALL_3
0x4007906	      0xe80b8fffff	              call sym.rebase_path_amend	      2458	sequencer.c	FUNCTION_75	CALL_6
0x400790b	          0x4889c3	                            mov rbx, rax	      2458	sequencer.c	FUNCTION_75	CALL_6
0x400790e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007912	          0x4889c7	                            mov rdi, rax	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007915	      0xe800000000	                          call 0x400791a	      2458	sequencer.c	FUNCTION_75	CALL_6
0x400791a	          0x4889c6	                            mov rsi, rax	      2458	sequencer.c	FUNCTION_75	CALL_6
0x400791d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007921	      0xb901000000	                              mov ecx, 1	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007926	          0x4889da	                            mov rdx, rbx	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007929	          0x4889c7	                            mov rdi, rax	      2458	sequencer.c	FUNCTION_75	CALL_6
0x400792c	      0xe8b499ffff	                  call sym.write_message	      2458	sequencer.c	FUNCTION_75	CALL_6
0x4007931	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2459	sequencer.c	FUNCTION_75
0x4007935	    0x644833142528	                xor rdx, qword fs:[0x28]	      2459	sequencer.c	FUNCTION_75
0x400793e	            0x7405	                            je 0x4007945	      2459	sequencer.c	FUNCTION_75
0x4007940	      0xe800000000	                          call 0x4007945	      2459	sequencer.c	FUNCTION_75
0x4007945	        0x4883c438	                           add rsp, 0x38	      2459	sequencer.c	FUNCTION_75
0x4007949	              0x5b	                                 pop rbx	      2459	sequencer.c	FUNCTION_75
0x400794a	              0x5d	                                 pop rbp	      2459	sequencer.c	FUNCTION_75
0x400794b	              0xc3	                                     ret	      2459	sequencer.c	FUNCTION_75
hashcpy	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	14
0x4000449	              0x55	                                push rbp	       994	cache.h	FUNCTION_117
0x400044a	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_117
0x400044d	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_117
0x4000451	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_117
0x4000455	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_117
0x4000459	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_117	CALL_1
0x400045d	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_117	CALL_1
0x4000461	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_117	CALL_1
0x4000466	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_117	CALL_1
0x4000469	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_117	CALL_1
0x400046c	      0xe800000000	                          call 0x4000471	       995	cache.h	FUNCTION_117	CALL_1
0x4000471	              0x90	                                     nop	       996	cache.h	FUNCTION_117
0x4000472	              0xc9	                                   leave	       996	cache.h	FUNCTION_117
0x4000473	              0xc3	                                     ret	       996	cache.h	FUNCTION_117
oidclr	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	12
0x400049a	              0x55	                                push rbp	      1016	cache.h	FUNCTION_121
0x400049b	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_121
0x400049e	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_121
0x40004a2	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_121
0x40004a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_121	CALL_1
0x40004aa	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_121	CALL_1
0x40004af	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_121	CALL_1
0x40004b4	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_121	CALL_1
0x40004b7	      0xe800000000	                          call 0x40004bc	      1017	cache.h	FUNCTION_121	CALL_1
0x40004bc	              0x90	                                     nop	      1018	cache.h	FUNCTION_121
0x40004bd	              0xc9	                                   leave	      1018	cache.h	FUNCTION_121
0x40004be	              0xc3	                                     ret	      1018	cache.h	FUNCTION_121
parse_commit	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	10
0x4000507	              0x55	                                push rbp	        74	commit.h	FUNCTION_189
0x4000508	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_189
0x400050b	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_189
0x400050f	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_189
0x4000513	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_189	CALL_1
0x4000517	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_189	CALL_1
0x400051c	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_189	CALL_1
0x400051f	      0xe800000000	                          call 0x4000524	        75	commit.h	FUNCTION_189	CALL_1
0x4000524	              0xc9	                                   leave	        76	commit.h	FUNCTION_189
0x4000525	              0xc3	                                     ret	        76	commit.h	FUNCTION_189
count_commands	CALL,0:FOR,1:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	27
0x4005ad4	              0x55	                                push rbp	      1925	sequencer.c	FUNCTION_55
0x4005ad5	          0x4889e5	                            mov rbp, rsp	      1925	sequencer.c	FUNCTION_55
0x4005ad8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1925	sequencer.c	FUNCTION_55
0x4005adc	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1926	sequencer.c	FUNCTION_55
0x4005ae3	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005aea	            0xeb2d	                           jmp 0x4005b19	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005af0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005af4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005af7	          0x4863d0	                         movsxd rdx, eax	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005afa	          0x4889d0	                            mov rax, rdx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005afd	          0x4801c0	                            add rax, rax	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b00	          0x4801d0	                            add rax, rdx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b03	        0x48c1e004	                              shl rax, 4	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b07	          0x4801c8	                            add rax, rcx	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b0a	            0x8b00	                    mov eax, dword [rax]	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b0c	          0x83f80c	                            cmp eax, 0xc	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b0f	            0x7404	                            je 0x4005b15	      1929	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b11	        0x8345f801	                  add dword [rbp - 8], 1	      1930	sequencer.c	FUNCTION_55	FOR_1	IF_1
0x4005b15	        0x8345fc01	                  add dword [rbp - 4], 1	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005b19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005b1d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005b20	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005b23	            0x7fc7	                            jg 0x4005aec	      1928	sequencer.c	FUNCTION_55	FOR_1
0x4005b25	          0x8b45f8	                mov eax, dword [rbp - 8]	      1932	sequencer.c	FUNCTION_55
0x4005b28	              0x5d	                                 pop rbp	      1933	sequencer.c	FUNCTION_55
0x4005b29	              0xc3	                                     ret	      1933	sequencer.c	FUNCTION_55
get_message	CALL,7:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	63
0x4001104	              0x55	                                push rbp	       316	sequencer.c	FUNCTION_11
0x4001105	          0x4889e5	                            mov rbp, rsp	       316	sequencer.c	FUNCTION_11
0x4001108	        0x4883ec30	                           sub rsp, 0x30	       316	sequencer.c	FUNCTION_11
0x400110c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       316	sequencer.c	FUNCTION_11
0x4001110	        0x488975d0	             mov qword [rbp - 0x30], rsi	       316	sequencer.c	FUNCTION_11
0x4001114	    0x64488b042528	                mov rax, qword fs:[0x28]	       316	sequencer.c	FUNCTION_11
0x400111d	        0x488945f8	                mov qword [rbp - 8], rax	       316	sequencer.c	FUNCTION_11
0x4001121	            0x31c0	                            xor eax, eax	       316	sequencer.c	FUNCTION_11
0x4001123	      0xe800000000	                          call 0x4001128	       320	sequencer.c	FUNCTION_11	CALL_2
0x4001128	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x400112b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       320	sequencer.c	FUNCTION_11	CALL_2
0x400112f	      0xbe00000000	                              mov esi, 0	       320	sequencer.c	FUNCTION_11	CALL_2
0x4001134	          0x4889c7	                            mov rdi, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4001137	      0xe800000000	                          call 0x400113c	       320	sequencer.c	FUNCTION_11	CALL_2
0x400113c	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x400113f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       320	sequencer.c	FUNCTION_11	CALL_2
0x4001143	        0x48895018	             mov qword [rax + 0x18], rdx	       320	sequencer.c	FUNCTION_11	CALL_2
0x4001147	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	sequencer.c	FUNCTION_11	CALL_3
0x400114b	          0x4889c7	                            mov rdi, rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x400114e	      0xe88bffffff	              call sym.short_commit_name	       321	sequencer.c	FUNCTION_11	CALL_3
0x4001153	        0x488945f0	             mov qword [rbp - 0x10], rax	       321	sequencer.c	FUNCTION_11	CALL_3
0x4001157	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       323	sequencer.c	FUNCTION_11	CALL_4
0x400115b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       323	sequencer.c	FUNCTION_11	CALL_4
0x400115f	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4001163	          0x4889d6	                            mov rsi, rdx	       323	sequencer.c	FUNCTION_11	CALL_4
0x4001166	          0x4889c7	                            mov rdi, rax	       323	sequencer.c	FUNCTION_11	CALL_4
0x4001169	      0xe800000000	                          call 0x400116e	       323	sequencer.c	FUNCTION_11	CALL_4
0x400116e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       323	sequencer.c	FUNCTION_11	CALL_4
0x4001171	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001174	          0x4863d0	                         movsxd rdx, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001177	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       325	sequencer.c	FUNCTION_11	CALL_5
0x400117b	          0x4889d6	                            mov rsi, rdx	       325	sequencer.c	FUNCTION_11	CALL_5
0x400117e	          0x4889c7	                            mov rdi, rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001181	      0xe800000000	                          call 0x4001186	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001186	          0x4889c2	                            mov rdx, rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001189	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       325	sequencer.c	FUNCTION_11	CALL_5
0x400118d	        0x48895010	             mov qword [rax + 0x10], rdx	       325	sequencer.c	FUNCTION_11	CALL_5
0x4001191	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	sequencer.c	FUNCTION_11	CALL_6
0x4001195	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       326	sequencer.c	FUNCTION_11	CALL_6
0x4001199	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       326	sequencer.c	FUNCTION_11	CALL_6
0x400119d	          0x4889c6	                            mov rsi, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011a0	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011a5	      0xb800000000	                              mov eax, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011aa	      0xe800000000	                          call 0x40011af	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011af	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011b6	        0x48895008	                mov qword [rax + 8], rdx	       326	sequencer.c	FUNCTION_11	CALL_6
0x40011ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011be	        0x488b4008	                mov rax, qword [rax + 8]	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011c2	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011c5	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011ca	      0xb800000000	                              mov eax, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011cf	      0xe800000000	                          call 0x40011d4	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011d4	          0x4889c2	                            mov rdx, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011db	          0x488910	                    mov qword [rax], rdx	       327	sequencer.c	FUNCTION_11	CALL_7
0x40011de	      0xb800000000	                              mov eax, 0	       329	sequencer.c	FUNCTION_11
0x40011e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       330	sequencer.c	FUNCTION_11
0x40011e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       330	sequencer.c	FUNCTION_11
0x40011f0	            0x7405	                            je 0x40011f7	       330	sequencer.c	FUNCTION_11
0x40011f2	      0xe800000000	                          call 0x40011f7	       330	sequencer.c	FUNCTION_11
0x40011f7	              0xc9	                                   leave	       330	sequencer.c	FUNCTION_11
0x40011f8	              0xc3	                                     ret	       330	sequencer.c	FUNCTION_11
save_todo	CALL,18:FOR,0:WHILE,0:ELSE,0:DO,0:IF,8:SWITCH,0:functions,0	167
0x40070b9	              0x55	                                push rbp	      2326	sequencer.c	FUNCTION_72
0x40070ba	          0x4889e5	                            mov rbp, rsp	      2326	sequencer.c	FUNCTION_72
0x40070bd	              0x53	                                push rbx	      2326	sequencer.c	FUNCTION_72
0x40070be	        0x4883ec58	                           sub rsp, 0x58	      2326	sequencer.c	FUNCTION_72
0x40070c2	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2326	sequencer.c	FUNCTION_72
0x40070c6	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2326	sequencer.c	FUNCTION_72
0x40070ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      2326	sequencer.c	FUNCTION_72
0x40070d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2326	sequencer.c	FUNCTION_72
0x40070d7	            0x31c0	                            xor eax, eax	      2326	sequencer.c	FUNCTION_72
0x40070d9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2327	sequencer.c	FUNCTION_72
0x40070e1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40070e5	          0x4889c7	                            mov rdi, rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40070e8	      0xe81e9cffff	                  call sym.get_todo_path	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40070ed	        0x488945d8	             mov qword [rbp - 0x28], rax	      2328	sequencer.c	FUNCTION_72	CALL_1
0x40070f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2329	sequencer.c	FUNCTION_72
0x40070f5	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2329	sequencer.c	FUNCTION_72
0x40070f8	          0x8945bc	             mov dword [rbp - 0x44], eax	      2329	sequencer.c	FUNCTION_72
0x40070fb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x40070ff	          0x4889c7	                            mov rdi, rax	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4007102	      0xe8c19bffff	                    call sym.is_rebase_i	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4007107	            0x85c0	                           test eax, eax	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4007109	            0x7404	                            je 0x400710f	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x400710b	        0x8345bc01	               add dword [rbp - 0x44], 1	      2336	sequencer.c	FUNCTION_72	IF_1
0x400710f	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2338	sequencer.c	FUNCTION_72	CALL_3
0x4007113	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2338	sequencer.c	FUNCTION_72	CALL_3
0x4007117	      0xba00000000	                              mov edx, 0	      2338	sequencer.c	FUNCTION_72	CALL_3
0x400711c	          0x4889ce	                            mov rsi, rcx	      2338	sequencer.c	FUNCTION_72	CALL_3
0x400711f	          0x4889c7	                            mov rdi, rax	      2338	sequencer.c	FUNCTION_72	CALL_3
0x4007122	      0xe89893ffff	      call sym.hold_lock_file_for_update	      2338	sequencer.c	FUNCTION_72	CALL_3
0x4007127	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2338	sequencer.c	FUNCTION_72	CALL_3
0x400712a	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2339	sequencer.c	FUNCTION_72	IF_2
0x400712e	            0x792b	                           jns 0x400715b	      2339	sequencer.c	FUNCTION_72	IF_2
0x4007130	      0xbf00000000	                              mov edi, 0	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007135	      0xe86d92ffff	                               call sym.	      2340	sequencer.c	FUNCTION_72	CALL_4
0x400713a	          0x4889c2	                            mov rdx, rax	      2340	sequencer.c	FUNCTION_72	CALL_4
0x400713d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007141	          0x4889c6	                            mov rsi, rax	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007144	          0x4889d7	                            mov rdi, rdx	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007147	      0xb800000000	                              mov eax, 0	      2340	sequencer.c	FUNCTION_72	CALL_4
0x400714c	      0xe800000000	                          call 0x4007151	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007151	      0xe8ea8effff	                    call sym.const_error	      2340	sequencer.c	FUNCTION_72	CALL_4
0x4007156	      0xe9b5010000	                           jmp 0x4007310	      2340	sequencer.c	FUNCTION_72	CALL_4
0x400715b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2341	sequencer.c	FUNCTION_72	CALL_5
0x400715e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4007162	            0x89d6	                            mov esi, edx	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4007164	          0x4889c7	                            mov rdi, rax	      2341	sequencer.c	FUNCTION_72	CALL_5
0x4007167	      0xe8bee9ffff	           call sym.get_item_line_offset	      2341	sequencer.c	FUNCTION_72	CALL_5
0x400716c	          0x8945c8	             mov dword [rbp - 0x38], eax	      2341	sequencer.c	FUNCTION_72	CALL_5
0x400716f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2343	sequencer.c	FUNCTION_72	IF_3
0x4007173	        0x488b5008	                mov rdx, qword [rax + 8]	      2343	sequencer.c	FUNCTION_72	IF_3
0x4007177	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400717a	            0x4898	                                    cdqe	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400717c	          0x4829c2	                            sub rdx, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400717f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4007183	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4007187	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400718a	            0x4898	                                    cdqe	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400718c	          0x4801c1	                            add rcx, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400718f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4007192	          0x4889ce	                            mov rsi, rcx	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4007195	            0x89c7	                            mov edi, eax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4007197	      0xe800000000	                          call 0x400719c	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400719c	          0x4885c0	                           test rax, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400719f	            0x792b	                           jns 0x40071cc	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x40071a1	      0xbf00000000	                              mov edi, 0	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071a6	      0xe8fc91ffff	                               call sym.	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071ab	          0x4889c2	                            mov rdx, rax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071b2	          0x4889c6	                            mov rsi, rax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071b5	          0x4889d7	                            mov rdi, rdx	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071b8	      0xb800000000	                              mov eax, 0	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071bd	      0xe800000000	                          call 0x40071c2	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071c2	      0xe8798effff	                    call sym.const_error	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071c7	      0xe944010000	                           jmp 0x4007310	      2344	sequencer.c	FUNCTION_72	CALL_7
0x40071cc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40071d0	          0x4889c7	                            mov rdi, rax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40071d3	      0xe800000000	                          call 0x40071d8	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40071d8	            0x85c0	                           test eax, eax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40071da	            0x792b	                           jns 0x4007207	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40071dc	      0xbf00000000	                              mov edi, 0	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071e1	      0xe8c191ffff	                               call sym.	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071e6	          0x4889c2	                            mov rdx, rax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071ed	          0x4889c6	                            mov rsi, rax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071f0	          0x4889d7	                            mov rdi, rdx	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071f3	      0xb800000000	                              mov eax, 0	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071f8	      0xe800000000	                          call 0x40071fd	      2346	sequencer.c	FUNCTION_72	CALL_9
0x40071fd	      0xe83e8effff	                    call sym.const_error	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4007202	      0xe909010000	                           jmp 0x4007310	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4007207	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400720b	          0x4889c7	                            mov rdi, rax	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400720e	      0xe8b59affff	                    call sym.is_rebase_i	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4007213	            0x85c0	                           test eax, eax	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4007215	     0xf84f0000000	                            je 0x400730b	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400721b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x400721f	     0xf8ee6000000	                           jle 0x400730b	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x4007225	      0xe87494ffff	               call sym.rebase_path_done	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_11
0x400722a	        0x488945e0	             mov qword [rbp - 0x20], rax	      2349	sequencer.c	FUNCTION_72	IF_5	CALL_11
0x400722e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x4007232	      0xbab6010000	                          mov edx, 0x1b6	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x4007237	      0xbe41040000	                          mov esi, 0x441	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x400723c	          0x4889c7	                            mov rdi, rax	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x400723f	      0xb800000000	                              mov eax, 0	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x4007244	      0xe800000000	                          call 0x4007249	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x4007249	          0x8945cc	             mov dword [rbp - 0x34], eax	      2350	sequencer.c	FUNCTION_72	IF_5	CALL_12
0x400724c	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2351	sequencer.c	FUNCTION_72	IF_5
0x4007253	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4007257	            0x790a	                           jns 0x4007263	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4007259	      0xb800000000	                              mov eax, 0	      2354	sequencer.c	FUNCTION_72	IF_5	IF_6
0x400725e	      0xe9ad000000	                           jmp 0x4007310	      2354	sequencer.c	FUNCTION_72	IF_5	IF_6
0x4007263	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4007266	          0x8d50ff	                      lea edx, [rax - 1]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4007269	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x400726d	            0x89d6	                            mov esi, edx	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x400726f	          0x4889c7	                            mov rdi, rax	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4007272	      0xe82de9ffff	           call sym.get_item_line_length	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x4007277	          0x4863d8	                         movsxd rbx, eax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400727a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400727d	          0x8d50ff	                      lea edx, [rax - 1]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007280	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007284	            0x89d6	                            mov esi, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007286	          0x4889c7	                            mov rdi, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007289	      0xe8e1e8ffff	                  call sym.get_item_line	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400728e	          0x4889c1	                            mov rcx, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007291	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007294	          0x4889da	                            mov rdx, rbx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4007297	          0x4889ce	                            mov rsi, rcx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400729a	            0x89c7	                            mov edi, eax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400729c	      0xe800000000	                          call 0x40072a1	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40072a1	          0x4885c0	                           test rax, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40072a4	            0x7929	                           jns 0x40072cf	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40072a6	      0xbf00000000	                              mov edi, 0	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072ab	      0xe8f790ffff	                               call sym.	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072b0	          0x4889c2	                            mov rdx, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072b7	          0x4889c6	                            mov rsi, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072ba	          0x4889d7	                            mov rdi, rdx	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072bd	      0xb800000000	                              mov eax, 0	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072c2	      0xe800000000	                          call 0x40072c7	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072c7	      0xe8748dffff	                    call sym.const_error	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072cc	          0x8945c0	             mov dword [rbp - 0x40], eax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x40072cf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40072d2	            0x89c7	                            mov edi, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40072d4	      0xe800000000	                          call 0x40072d9	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40072d9	            0x85c0	                           test eax, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40072db	            0x7929	                           jns 0x4007306	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x40072dd	      0xbf00000000	                              mov edi, 0	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072e2	      0xe8c090ffff	                               call sym.	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072e7	          0x4889c2	                            mov rdx, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072ee	          0x4889c6	                            mov rsi, rax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072f1	          0x4889d7	                            mov rdi, rdx	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072f4	      0xb800000000	                              mov eax, 0	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072f9	      0xe800000000	                          call 0x40072fe	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x40072fe	      0xe83d8dffff	                    call sym.const_error	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4007303	          0x8945c0	             mov dword [rbp - 0x40], eax	      2360	sequencer.c	FUNCTION_72	IF_5	CALL_18
0x4007306	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2361	sequencer.c	FUNCTION_72	IF_5
0x4007309	            0xeb05	                           jmp 0x4007310	      2361	sequencer.c	FUNCTION_72	IF_5
0x400730b	      0xb800000000	                              mov eax, 0	      2363	sequencer.c	FUNCTION_72
0x4007310	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2364	sequencer.c	FUNCTION_72
0x4007314	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2364	sequencer.c	FUNCTION_72
0x400731d	            0x7405	                            je 0x4007324	      2364	sequencer.c	FUNCTION_72
0x400731f	      0xe800000000	                          call 0x4007324	      2364	sequencer.c	FUNCTION_72
0x4007324	        0x4883c458	                           add rsp, 0x58	      2364	sequencer.c	FUNCTION_72
0x4007328	              0x5b	                                 pop rbx	      2364	sequencer.c	FUNCTION_72
0x4007329	              0x5d	                                 pop rbp	      2364	sequencer.c	FUNCTION_72
0x400732a	              0xc3	                                     ret	      2364	sequencer.c	FUNCTION_72
run_rewrite_hook	CALL,11:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	85
0x4002a25	              0x55	                                push rbp	       883	sequencer.c	FUNCTION_31
0x4002a26	          0x4889e5	                            mov rbp, rsp	       883	sequencer.c	FUNCTION_31
0x4002a29	              0x53	                                push rbx	       883	sequencer.c	FUNCTION_31
0x4002a2a	    0x4881ecc80000	                           sub rsp, 0xc8	       883	sequencer.c	FUNCTION_31
0x4002a31	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       883	sequencer.c	FUNCTION_31
0x4002a38	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       883	sequencer.c	FUNCTION_31
0x4002a3f	    0x64488b042528	                mov rax, qword fs:[0x28]	       883	sequencer.c	FUNCTION_31
0x4002a48	        0x488945e8	             mov qword [rbp - 0x18], rax	       883	sequencer.c	FUNCTION_31
0x4002a4c	            0x31c0	                            xor eax, eax	       883	sequencer.c	FUNCTION_31
0x4002a4e	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       884	sequencer.c	FUNCTION_31
0x4002a55	      0xb800000000	                              mov eax, 0	       884	sequencer.c	FUNCTION_31
0x4002a5a	      0xb90c000000	                            mov ecx, 0xc	       884	sequencer.c	FUNCTION_31
0x4002a5f	          0x4889d7	                            mov rdi, rdx	       884	sequencer.c	FUNCTION_31
0x4002a62	          0xf348ab	              rep stosq qword [rdi], rax	       884	sequencer.c	FUNCTION_31
0x4002a65	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       884	sequencer.c	FUNCTION_31
0x4002a70	    0x48c745880000	               mov qword [rbp - 0x78], 0	       884	sequencer.c	FUNCTION_31
0x4002a78	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       887	sequencer.c	FUNCTION_31
0x4002a83	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       887	sequencer.c	FUNCTION_31
0x4002a8e	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       887	sequencer.c	FUNCTION_31
0x4002a99	      0xbf00000000	                              mov edi, 0	       889	sequencer.c	FUNCTION_31	CALL_1
0x4002a9e	      0xe800000000	                          call 0x4002aa3	       889	sequencer.c	FUNCTION_31	CALL_1
0x4002aa3	        0x488945d0	             mov qword [rbp - 0x30], rax	       889	sequencer.c	FUNCTION_31	CALL_1
0x4002aa7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       890	sequencer.c	FUNCTION_31	IF_1
0x4002aab	          0x4885c0	                           test rax, rax	       890	sequencer.c	FUNCTION_31	IF_1
0x4002aae	            0x750a	                           jne 0x4002aba	       890	sequencer.c	FUNCTION_31	IF_1
0x4002ab0	      0xb800000000	                              mov eax, 0	       891	sequencer.c	FUNCTION_31	IF_1
0x4002ab5	      0xe9f1000000	                           jmp 0x4002bab	       891	sequencer.c	FUNCTION_31	IF_1
0x4002aba	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       893	sequencer.c	FUNCTION_31
0x4002ac2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       894	sequencer.c	FUNCTION_31
0x4002aca	        0x488d45d0	                   lea rax, [rbp - 0x30]	       896	sequencer.c	FUNCTION_31
0x4002ace	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       896	sequencer.c	FUNCTION_31
0x4002ad5	    0xc7459cffffff	     mov dword [rbp - 0x64], 0xffffffff 	       897	sequencer.c	FUNCTION_31
0x4002adc	         0xfb645b8	            movzx eax, byte [rbp - 0x48]	       898	sequencer.c	FUNCTION_31
0x4002ae0	          0x83c820	                            or eax, 0x20	       898	sequencer.c	FUNCTION_31
0x4002ae3	          0x8845b8	               mov byte [rbp - 0x48], al	       898	sequencer.c	FUNCTION_31
0x4002ae6	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       900	sequencer.c	FUNCTION_31	CALL_2
0x4002aed	          0x4889c7	                            mov rdi, rax	       900	sequencer.c	FUNCTION_31	CALL_2
0x4002af0	      0xe800000000	                          call 0x4002af5	       900	sequencer.c	FUNCTION_31	CALL_2
0x4002af5	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       900	sequencer.c	FUNCTION_31	CALL_2
0x4002afb	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       901	sequencer.c	FUNCTION_31	IF_2
0x4002b02	            0x740b	                            je 0x4002b0f	       901	sequencer.c	FUNCTION_31	IF_2
0x4002b04	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       902	sequencer.c	FUNCTION_31	IF_2
0x4002b0a	      0xe99c000000	                           jmp 0x4002bab	       902	sequencer.c	FUNCTION_31	IF_2
0x4002b0f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b16	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b19	      0xe800000000	                          call 0x4002b1e	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b1e	          0x4889c3	                            mov rbx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b21	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b28	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b2b	      0xe800000000	                          call 0x4002b30	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b30	          0x4889c2	                            mov rdx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b33	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b3a	          0x4889d9	                            mov rcx, rbx	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b3d	      0xbe00000000	                              mov esi, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b42	          0x4889c7	                            mov rdi, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b45	      0xb800000000	                              mov eax, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b4a	      0xe800000000	                          call 0x4002b4f	       903	sequencer.c	FUNCTION_31	CALL_5
0x4002b4f	      0xbe01000000	                              mov esi, 1	       904	sequencer.c	FUNCTION_31	CALL_6
0x4002b54	      0xbf0d000000	                            mov edi, 0xd	       904	sequencer.c	FUNCTION_31	CALL_6
0x4002b59	      0xe800000000	                          call 0x4002b5e	       904	sequencer.c	FUNCTION_31	CALL_6
0x4002b5e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b65	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b6c	          0x8b459c	             mov eax, dword [rbp - 0x64]	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b6f	          0x4889ce	                            mov rsi, rcx	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b72	            0x89c7	                            mov edi, eax	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b74	      0xe800000000	                          call 0x4002b79	       905	sequencer.c	FUNCTION_31	CALL_7
0x4002b79	          0x8b459c	             mov eax, dword [rbp - 0x64]	       906	sequencer.c	FUNCTION_31	CALL_8
0x4002b7c	            0x89c7	                            mov edi, eax	       906	sequencer.c	FUNCTION_31	CALL_8
0x4002b7e	      0xe800000000	                          call 0x4002b83	       906	sequencer.c	FUNCTION_31	CALL_8
0x4002b83	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       907	sequencer.c	FUNCTION_31	CALL_9
0x4002b8a	          0x4889c7	                            mov rdi, rax	       907	sequencer.c	FUNCTION_31	CALL_9
0x4002b8d	      0xe800000000	                          call 0x4002b92	       907	sequencer.c	FUNCTION_31	CALL_9
0x4002b92	      0xbf0d000000	                            mov edi, 0xd	       908	sequencer.c	FUNCTION_31	CALL_10
0x4002b97	      0xe800000000	                          call 0x4002b9c	       908	sequencer.c	FUNCTION_31	CALL_10
0x4002b9c	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       909	sequencer.c	FUNCTION_31	CALL_11
0x4002ba3	          0x4889c7	                            mov rdi, rax	       909	sequencer.c	FUNCTION_31	CALL_11
0x4002ba6	      0xe800000000	                          call 0x4002bab	       909	sequencer.c	FUNCTION_31	CALL_11
0x4002bab	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       910	sequencer.c	FUNCTION_31
0x4002baf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       910	sequencer.c	FUNCTION_31
0x4002bb8	            0x7405	                            je 0x4002bbf	       910	sequencer.c	FUNCTION_31
0x4002bba	      0xe800000000	                          call 0x4002bbf	       910	sequencer.c	FUNCTION_31
0x4002bbf	    0x4881c4c80000	                           add rsp, 0xc8	       910	sequencer.c	FUNCTION_31
0x4002bc6	              0x5b	                                 pop rbx	       910	sequencer.c	FUNCTION_31
0x4002bc7	              0x5d	                                 pop rbp	       910	sequencer.c	FUNCTION_31
0x4002bc8	              0xc3	                                     ret	       910	sequencer.c	FUNCTION_31
print_commit_summary	CALL,39:FOR,0:WHILE,0:ELSE,1:DO,0:IF,9:SWITCH,0:functions,0	238
0x4002e08	              0x55	                                push rbp	       994	sequencer.c	FUNCTION_35
0x4002e09	          0x4889e5	                            mov rbp, rsp	       994	sequencer.c	FUNCTION_35
0x4002e0c	    0x4881ec100a00	                          sub rsp, 0xa10	       994	sequencer.c	FUNCTION_35
0x4002e13	    0x4889bd08f6ff	            mov qword [rbp - 0x9f8], rdi	       994	sequencer.c	FUNCTION_35
0x4002e1a	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	       994	sequencer.c	FUNCTION_35
0x4002e21	    0x8995fcf5ffff	            mov dword [rbp - 0xa04], edx	       994	sequencer.c	FUNCTION_35
0x4002e27	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	sequencer.c	FUNCTION_35
0x4002e30	        0x488945f8	                mov qword [rbp - 8], rax	       994	sequencer.c	FUNCTION_35
0x4002e34	            0x31c0	                            xor eax, eax	       994	sequencer.c	FUNCTION_35
0x4002e36	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       997	sequencer.c	FUNCTION_35
0x4002e41	    0x48c78528f6ff	              mov qword [rbp - 0x9d8], 0	       997	sequencer.c	FUNCTION_35
0x4002e4c	    0x48c78530f6ff	              mov qword [rbp - 0x9d0], 0	       997	sequencer.c	FUNCTION_35
0x4002e57	    0x488d95a0f6ff	                  lea rdx, [rbp - 0x960]	       999	sequencer.c	FUNCTION_35
0x4002e5e	      0xb800000000	                              mov eax, 0	       999	sequencer.c	FUNCTION_35
0x4002e63	      0xb914000000	                           mov ecx, 0x14	       999	sequencer.c	FUNCTION_35
0x4002e68	          0x4889d7	                            mov rdi, rdx	       999	sequencer.c	FUNCTION_35
0x4002e6b	          0xf348ab	              rep stosq qword [rdi], rax	       999	sequencer.c	FUNCTION_35
0x4002e6e	    0x48c78540f6ff	              mov qword [rbp - 0x9c0], 0	      1000	sequencer.c	FUNCTION_35
0x4002e79	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	      1000	sequencer.c	FUNCTION_35
0x4002e84	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	      1000	sequencer.c	FUNCTION_35
0x4002e8f	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	      1001	sequencer.c	FUNCTION_35
0x4002e9a	    0x48c78568f6ff	              mov qword [rbp - 0x998], 0	      1001	sequencer.c	FUNCTION_35
0x4002ea5	    0x48c78570f6ff	              mov qword [rbp - 0x990], 0	      1001	sequencer.c	FUNCTION_35
0x4002eb0	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4002eb7	          0x4889c7	                            mov rdi, rax	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4002eba	      0xe800000000	                          call 0x4002ebf	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4002ebf	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4002ec6	    0x4883bd18f6ff	              cmp qword [rbp - 0x9e8], 0	      1004	sequencer.c	FUNCTION_35	IF_1
0x4002ece	            0x7517	                           jne 0x4002ee7	      1004	sequencer.c	FUNCTION_35	IF_1
0x4002ed0	      0xbf00000000	                              mov edi, 0	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4002ed5	      0xe8cdd4ffff	                               call sym.	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4002eda	          0x4889c7	                            mov rdi, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4002edd	      0xb800000000	                              mov eax, 0	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4002ee2	      0xe800000000	                          call 0x4002ee7	      1005	sequencer.c	FUNCTION_35	CALL_3
0x4002ee7	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4002eee	          0x4889c7	                            mov rdi, rax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4002ef1	      0xe811d6ffff	                   call sym.parse_commit	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4002ef6	            0x85c0	                           test eax, eax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4002ef8	            0x7417	                            je 0x4002f11	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x4002efa	      0xbf00000000	                              mov edi, 0	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4002eff	      0xe8a3d4ffff	                               call sym.	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4002f04	          0x4889c7	                            mov rdi, rax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4002f07	      0xb800000000	                              mov eax, 0	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4002f0c	      0xe800000000	                          call 0x4002f11	      1007	sequencer.c	FUNCTION_35	CALL_6
0x4002f11	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1009	sequencer.c	FUNCTION_35	CALL_7
0x4002f18	      0xbe00000000	                              mov esi, 0	      1009	sequencer.c	FUNCTION_35	CALL_7
0x4002f1d	          0x4889c7	                            mov rdi, rax	      1009	sequencer.c	FUNCTION_35	CALL_7
0x4002f20	      0xe850d3ffff	                  call sym.strbuf_addstr	      1009	sequencer.c	FUNCTION_35	CALL_7
0x4002f25	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f2c	    0x488d9540f6ff	                  lea rdx, [rbp - 0x9c0]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f33	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f3a	      0xbe00000000	                              mov esi, 0	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f3f	          0x4889c7	                            mov rdi, rax	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f42	      0xe800000000	                          call 0x4002f47	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4002f47	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f4e	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f55	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f5c	      0xbe00000000	                              mov esi, 0	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f61	          0x4889c7	                            mov rdi, rax	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f64	      0xe800000000	                          call 0x4002f69	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4002f69	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f70	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f77	          0x4889d6	                            mov rsi, rdx	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f7a	          0x4889c7	                            mov rdi, rax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f7d	      0xe800000000	                          call 0x4002f82	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f82	            0x85c0	                           test eax, eax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f84	            0x742d	                            je 0x4002fb3	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4002f86	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x4002f8d	      0xbe00000000	                              mov esi, 0	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x4002f92	          0x4889c7	                            mov rdi, rax	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x4002f95	      0xe8dbd2ffff	                  call sym.strbuf_addstr	      1014	sequencer.c	FUNCTION_35	IF_3	CALL_11
0x4002f9a	    0x488d9540f6ff	                  lea rdx, [rbp - 0x9c0]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4002fa1	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4002fa8	          0x4889d6	                            mov rsi, rdx	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4002fab	          0x4889c7	                            mov rdi, rax	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4002fae	      0xe800000000	                          call 0x4002fb3	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4002fb3	    0x8b85fcf5ffff	            mov eax, dword [rbp - 0xa04]	      1017	sequencer.c	FUNCTION_35	IF_4
0x4002fb9	          0x83e002	                              and eax, 2	      1017	sequencer.c	FUNCTION_35	IF_4
0x4002fbc	            0x85c0	                           test eax, eax	      1017	sequencer.c	FUNCTION_35	IF_4
0x4002fbe	            0x747f	                            je 0x400303f	      1017	sequencer.c	FUNCTION_35	IF_4
0x4002fc0	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4002fcb	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4002fd6	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4002fe1	    0x488d8da0f6ff	                  lea rcx, [rbp - 0x960]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4002fe8	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4002fef	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4002ff6	      0xbe00000000	                              mov esi, 0	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4002ffb	          0x4889c7	                            mov rdi, rax	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4002ffe	      0xe800000000	                          call 0x4003003	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4003003	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x400300a	      0xbe00000000	                              mov esi, 0	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x400300f	          0x4889c7	                            mov rdi, rax	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x4003012	      0xe85ed2ffff	                  call sym.strbuf_addstr	      1021	sequencer.c	FUNCTION_35	IF_4	CALL_14
0x4003017	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400301e	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4003025	          0x4889d6	                            mov rsi, rdx	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4003028	          0x4889c7	                            mov rdi, rax	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400302b	      0xe800000000	                          call 0x4003030	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4003030	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4003037	          0x4889c7	                            mov rdi, rax	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x400303a	      0xe800000000	                          call 0x400303f	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x400303f	      0xe800000000	                          call 0x4003044	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4003044	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4003046	            0x7565	                           jne 0x40030ad	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4003048	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x400304f	      0xbe00000000	                              mov esi, 0	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x4003054	          0x4889c7	                            mov rdi, rax	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x4003057	      0xe819d2ffff	                  call sym.strbuf_addstr	      1026	sequencer.c	FUNCTION_35	IF_5	CALL_18
0x400305c	    0x488d9560f6ff	                  lea rdx, [rbp - 0x9a0]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4003063	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400306a	          0x4889d6	                            mov rsi, rdx	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400306d	          0x4889c7	                            mov rdi, rax	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4003070	      0xe800000000	                          call 0x4003075	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4003075	    0x8b0500000000	            mov eax, dword [0x0400307b] 	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400307b	            0x85c0	                           test eax, eax	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400307d	            0x742e	                            je 0x40030ad	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400307f	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x4003086	      0xbe0a000000	                            mov esi, 0xa	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x400308b	          0x4889c7	                            mov rdi, rax	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x400308e	      0xe874d1ffff	                   call sym.strbuf_addch	      1029	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_20
0x4003093	      0xe8e2fcffff	          call sym.implicit_ident_advice	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x4003098	          0x4889c2	                            mov rdx, rax	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x400309b	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x40030a2	          0x4889d6	                            mov rsi, rdx	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x40030a5	          0x4889c7	                            mov rdi, rax	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x40030a8	      0xe8c8d1ffff	                  call sym.strbuf_addstr	      1030	sequencer.c	FUNCTION_35	IF_5	IF_6	CALL_22
0x40030ad	    0x488d8540f6ff	                  lea rax, [rbp - 0x9c0]	      1033	sequencer.c	FUNCTION_35	CALL_23
0x40030b4	          0x4889c7	                            mov rdi, rax	      1033	sequencer.c	FUNCTION_35	CALL_23
0x40030b7	      0xe800000000	                          call 0x40030bc	      1033	sequencer.c	FUNCTION_35	CALL_23
0x40030bc	    0x488d8560f6ff	                  lea rax, [rbp - 0x9a0]	      1034	sequencer.c	FUNCTION_35	CALL_24
0x40030c3	          0x4889c7	                            mov rdi, rax	      1034	sequencer.c	FUNCTION_35	CALL_24
0x40030c6	      0xe800000000	                          call 0x40030cb	      1034	sequencer.c	FUNCTION_35	CALL_24
0x40030cb	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40030d2	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40030d9	          0x4889d6	                            mov rsi, rdx	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40030dc	          0x4889c7	                            mov rdi, rax	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40030df	      0xe800000000	                          call 0x40030e4	      1036	sequencer.c	FUNCTION_35	CALL_25
0x40030e4	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40030eb	      0xb900000000	                              mov ecx, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40030f0	          0x4889c2	                            mov rdx, rax	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40030f3	      0xbe00000000	                              mov esi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40030f8	      0xbf00000000	                              mov edi, 0	      1037	sequencer.c	FUNCTION_35	CALL_26
0x40030fd	      0xe800000000	                          call 0x4003102	      1037	sequencer.c	FUNCTION_35	CALL_26
0x4003102	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1039	sequencer.c	FUNCTION_35
0x4003109	          0x83c801	                               or eax, 1	      1039	sequencer.c	FUNCTION_35
0x400310c	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1039	sequencer.c	FUNCTION_35
0x4003112	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x28 	      1040	sequencer.c	FUNCTION_35
0x400311c	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1043	sequencer.c	FUNCTION_35
0x4003123	          0x83c810	                            or eax, 0x10	      1043	sequencer.c	FUNCTION_35
0x4003126	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1043	sequencer.c	FUNCTION_35
0x400312c	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	      1044	sequencer.c	FUNCTION_35
0x4003133	          0x83c804	                               or eax, 4	      1044	sequencer.c	FUNCTION_35
0x4003136	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	      1044	sequencer.c	FUNCTION_35
0x400313c	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x4003143	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x400314a	          0x4889d6	                            mov rsi, rdx	      1045	sequencer.c	FUNCTION_35	CALL_27
0x400314d	          0x4889c7	                            mov rdi, rax	      1045	sequencer.c	FUNCTION_35	CALL_27
0x4003150	      0xe800000000	                          call 0x4003155	      1045	sequencer.c	FUNCTION_35	CALL_27
0x4003155	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      1046	sequencer.c	FUNCTION_35
0x400315c	          0x83e0fe	                     and eax, 0xfffffffe	      1046	sequencer.c	FUNCTION_35
0x400315f	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      1046	sequencer.c	FUNCTION_35
0x4003165	    0xc78588fcffff	              mov dword [rbp - 0x378], 1	      1047	sequencer.c	FUNCTION_35
0x400316f	    0xc78584fcffff	              mov dword [rbp - 0x37c], 0	      1048	sequencer.c	FUNCTION_35
0x4003179	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1049	sequencer.c	FUNCTION_35	CALL_28
0x4003180	    0x4805f8040000	                          add rax, 0x4f8	      1049	sequencer.c	FUNCTION_35	CALL_28
0x4003186	          0x4889c7	                            mov rdi, rax	      1049	sequencer.c	FUNCTION_35	CALL_28
0x4003189	      0xe800000000	                          call 0x400318e	      1049	sequencer.c	FUNCTION_35	CALL_28
0x400318e	      0xb900000000	                              mov ecx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4003193	      0xba00000000	                              mov edx, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x4003198	      0xbe00000000	                              mov esi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x400319d	      0xbf00000000	                              mov edi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40031a2	      0xe800000000	                          call 0x40031a7	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40031a7	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40031ae	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1052	sequencer.c	FUNCTION_35	IF_7
0x40031b5	          0x4885c0	                           test rax, rax	      1052	sequencer.c	FUNCTION_35	IF_7
0x40031b8	            0x7517	                           jne 0x40031d1	      1052	sequencer.c	FUNCTION_35	IF_7
0x40031ba	      0xbf00000000	                              mov edi, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40031bf	      0xe8e3d1ffff	                               call sym.	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40031c4	          0x4889c7	                            mov rdi, rax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40031c7	      0xb800000000	                              mov eax, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40031cc	      0xe800000000	                          call 0x40031d1	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40031d1	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031d8	      0xbe00000000	                              mov esi, 0	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031dd	          0x4889c7	                            mov rdi, rax	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031e0	      0xe800000000	                          call 0x40031e5	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031e5	            0x85c0	                           test eax, eax	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031e7	            0x7513	                           jne 0x40031fc	      1054	sequencer.c	FUNCTION_35	IF_8	CALL_32
0x40031e9	      0xbf00000000	                              mov edi, 0	      1055	sequencer.c	FUNCTION_35	CALL_33
0x40031ee	      0xe8b4d1ffff	                               call sym.	      1055	sequencer.c	FUNCTION_35	CALL_33
0x40031f3	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      1055	sequencer.c	FUNCTION_35	CALL_33
0x40031fa	            0xeb1b	                           jmp 0x4003217	      1055	sequencer.c	FUNCTION_35	CALL_33
0x40031fc	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1057	sequencer.c	FUNCTION_35	CALL_34
0x4003203	    0x488d9580f6ff	                  lea rdx, [rbp - 0x980]	      1057	sequencer.c	FUNCTION_35	CALL_34
0x400320a	      0xbe00000000	                              mov esi, 0	      1057	sequencer.c	FUNCTION_35	CALL_34
0x400320f	          0x4889c7	                            mov rdi, rax	      1057	sequencer.c	FUNCTION_35	CALL_34
0x4003212	      0xe834ceffff	                    call sym.skip_prefix	      1057	sequencer.c	FUNCTION_35	CALL_34
0x4003217	    0x8b85fcf5ffff	            mov eax, dword [rbp - 0xa04]	      1058	sequencer.c	FUNCTION_35	CALL_35
0x400321d	          0x83e001	                              and eax, 1	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003220	            0x85c0	                           test eax, eax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003222	            0x740f	                            je 0x4003233	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003224	      0xbf00000000	                              mov edi, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003229	      0xe879d1ffff	                               call sym.	      1058	sequencer.c	FUNCTION_35	CALL_35
0x400322e	          0x4889c2	                            mov rdx, rax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003231	            0xeb05	                           jmp 0x4003238	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003233	      0xba00000000	                              mov edx, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003238	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      1058	sequencer.c	FUNCTION_35	CALL_35
0x400323f	          0x4889c6	                            mov rsi, rax	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003242	      0xbf00000000	                              mov edi, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003247	      0xb800000000	                              mov eax, 0	      1058	sequencer.c	FUNCTION_35	CALL_35
0x400324c	      0xe800000000	                          call 0x4003251	      1058	sequencer.c	FUNCTION_35	CALL_35
0x4003251	    0x488b9518f6ff	            mov rdx, qword [rbp - 0x9e8]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x4003258	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x400325f	          0x4889d6	                            mov rsi, rdx	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x4003262	          0x4889c7	                            mov rdi, rax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x4003265	      0xe800000000	                          call 0x400326a	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x400326a	            0x85c0	                           test eax, eax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x400326c	            0x7539	                           jne 0x40032a7	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_37
0x400326e	     0xfb685baf7ff	           movzx eax, byte [rbp - 0x846]	      1062	sequencer.c	FUNCTION_35	IF_9
0x4003275	          0x83c801	                               or eax, 1	      1062	sequencer.c	FUNCTION_35	IF_9
0x4003278	    0x8885baf7ffff	              mov byte [rbp - 0x846], al	      1062	sequencer.c	FUNCTION_35	IF_9
0x400327e	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	      1063	sequencer.c	FUNCTION_35	IF_9
0x4003285	          0x83c808	                               or eax, 8	      1063	sequencer.c	FUNCTION_35	IF_9
0x4003288	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	      1063	sequencer.c	FUNCTION_35	IF_9
0x400328e	    0x488b9518f6ff	            mov rdx, qword [rbp - 0x9e8]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x4003295	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x400329c	          0x4889d6	                            mov rsi, rdx	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x400329f	          0x4889c7	                            mov rdi, rax	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x40032a2	      0xe800000000	                          call 0x40032a7	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_38
0x40032a7	    0x488d8520f6ff	                  lea rax, [rbp - 0x9e0]	      1067	sequencer.c	FUNCTION_35	CALL_39
0x40032ae	          0x4889c7	                            mov rdi, rax	      1067	sequencer.c	FUNCTION_35	CALL_39
0x40032b1	      0xe800000000	                          call 0x40032b6	      1067	sequencer.c	FUNCTION_35	CALL_39
0x40032b6	              0x90	                                     nop	      1068	sequencer.c	FUNCTION_35
0x40032b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1068	sequencer.c	FUNCTION_35
0x40032bb	    0x644833042528	                xor rax, qword fs:[0x28]	      1068	sequencer.c	FUNCTION_35
0x40032c4	            0x7405	                            je 0x40032cb	      1068	sequencer.c	FUNCTION_35
0x40032c6	      0xe800000000	                          call 0x40032cb	      1068	sequencer.c	FUNCTION_35
0x40032cb	              0xc9	                                   leave	      1068	sequencer.c	FUNCTION_35
0x40032cc	              0xc3	                                     ret	      1068	sequencer.c	FUNCTION_35
get_author	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	28
0x400224e	              0x55	                                push rbp	       674	sequencer.c	FUNCTION_25
0x400224f	          0x4889e5	                            mov rbp, rsp	       674	sequencer.c	FUNCTION_25
0x4002252	        0x4883ec30	                           sub rsp, 0x30	       674	sequencer.c	FUNCTION_25
0x4002256	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       674	sequencer.c	FUNCTION_25
0x400225a	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	sequencer.c	FUNCTION_25
0x4002263	        0x488945f8	                mov qword [rbp - 8], rax	       674	sequencer.c	FUNCTION_25
0x4002267	            0x31c0	                            xor eax, eax	       674	sequencer.c	FUNCTION_25
0x4002269	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       678	sequencer.c	FUNCTION_25	CALL_1
0x400226d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       678	sequencer.c	FUNCTION_25	CALL_1
0x4002271	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x4002276	          0x4889c7	                            mov rdi, rax	       678	sequencer.c	FUNCTION_25	CALL_1
0x4002279	      0xe800000000	                          call 0x400227e	       678	sequencer.c	FUNCTION_25	CALL_1
0x400227e	        0x488945f0	             mov qword [rbp - 0x10], rax	       678	sequencer.c	FUNCTION_25	CALL_1
0x4002282	      0x48837df000	               cmp qword [rbp - 0x10], 0	       679	sequencer.c	FUNCTION_25	IF_1
0x4002287	            0x7415	                            je 0x400229e	       679	sequencer.c	FUNCTION_25	IF_1
0x4002289	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       680	sequencer.c	FUNCTION_25	CALL_2
0x400228d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       680	sequencer.c	FUNCTION_25	CALL_2
0x4002291	          0x4889d6	                            mov rsi, rdx	       680	sequencer.c	FUNCTION_25	CALL_2
0x4002294	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x4002297	      0xe800000000	                          call 0x400229c	       680	sequencer.c	FUNCTION_25	CALL_2
0x400229c	            0xeb05	                           jmp 0x40022a3	       680	sequencer.c	FUNCTION_25	CALL_2
0x400229e	      0xb800000000	                              mov eax, 0	       682	sequencer.c	FUNCTION_25
0x40022a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       683	sequencer.c	FUNCTION_25
0x40022a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       683	sequencer.c	FUNCTION_25
0x40022b0	            0x7405	                            je 0x40022b7	       683	sequencer.c	FUNCTION_25
0x40022b2	      0xe800000000	                          call 0x40022b7	       683	sequencer.c	FUNCTION_25
0x40022b7	              0xc9	                                   leave	       683	sequencer.c	FUNCTION_25
0x40022b8	              0xc3	                                     ret	       683	sequencer.c	FUNCTION_25
is_fixup	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	12
0x4003c92	              0x55	                                push rbp	      1362	sequencer.c	FUNCTION_44
0x4003c93	          0x4889e5	                            mov rbp, rsp	      1362	sequencer.c	FUNCTION_44
0x4003c96	          0x897dfc	                mov dword [rbp - 4], edi	      1362	sequencer.c	FUNCTION_44
0x4003c99	        0x837dfc04	                  cmp dword [rbp - 4], 4	      1363	sequencer.c	FUNCTION_44
0x4003c9d	            0x7406	                            je 0x4003ca5	      1363	sequencer.c	FUNCTION_44
0x4003c9f	        0x837dfc05	                  cmp dword [rbp - 4], 5	      1363	sequencer.c	FUNCTION_44
0x4003ca3	            0x7507	                           jne 0x4003cac	      1363	sequencer.c	FUNCTION_44
0x4003ca5	      0xb801000000	                              mov eax, 1	      1363	sequencer.c	FUNCTION_44
0x4003caa	            0xeb05	                           jmp 0x4003cb1	      1363	sequencer.c	FUNCTION_44
0x4003cac	      0xb800000000	                              mov eax, 0	      1363	sequencer.c	FUNCTION_44
0x4003cb1	              0x5d	                                 pop rbp	      1364	sequencer.c	FUNCTION_44
0x4003cb2	              0xc3	                                     ret	      1364	sequencer.c	FUNCTION_44
git_config_string_dup	CALL,3:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	26
0x4006091	              0x55	                                push rbp	      2034	sequencer.c	FUNCTION_61
0x4006092	          0x4889e5	                            mov rbp, rsp	      2034	sequencer.c	FUNCTION_61
0x4006095	        0x4883ec20	                           sub rsp, 0x20	      2034	sequencer.c	FUNCTION_61
0x4006099	        0x48897df8	                mov qword [rbp - 8], rdi	      2034	sequencer.c	FUNCTION_61
0x400609d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2034	sequencer.c	FUNCTION_61
0x40060a1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2034	sequencer.c	FUNCTION_61
0x40060a5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2035	sequencer.c	FUNCTION_61	IF_1
0x40060aa	            0x7513	                           jne 0x40060bf	      2035	sequencer.c	FUNCTION_61	IF_1
0x40060ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2036	sequencer.c	FUNCTION_61	CALL_1
0x40060b0	          0x4889c7	                            mov rdi, rax	      2036	sequencer.c	FUNCTION_61	CALL_1
0x40060b3	      0xe800000000	                          call 0x40060b8	      2036	sequencer.c	FUNCTION_61	CALL_1
0x40060b8	      0xe8839fffff	                    call sym.const_error	      2036	sequencer.c	FUNCTION_61	CALL_1
0x40060bd	            0xeb2a	                           jmp 0x40060e9	      2036	sequencer.c	FUNCTION_61	CALL_1
0x40060bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40060c3	          0x488b00	                    mov rax, qword [rax]	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40060c6	          0x4889c7	                            mov rdi, rax	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40060c9	      0xe800000000	                          call 0x40060ce	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40060ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060d2	          0x4889c7	                            mov rdi, rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060d5	      0xe800000000	                          call 0x40060da	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060da	          0x4889c2	                            mov rdx, rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060e1	          0x488910	                    mov qword [rax], rdx	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40060e4	      0xb800000000	                              mov eax, 0	      2039	sequencer.c	FUNCTION_61
0x40060e9	              0xc9	                                   leave	      2040	sequencer.c	FUNCTION_61
0x40060ea	              0xc3	                                     ret	      2040	sequencer.c	FUNCTION_61
is_final_fixup	CALL,3:FOR,0:WHILE,1:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	63
0x4008fcc	              0x55	                                push rbp	      2888	sequencer.c	FUNCTION_83
0x4008fcd	          0x4889e5	                            mov rbp, rsp	      2888	sequencer.c	FUNCTION_83
0x4008fd0	        0x4883ec18	                           sub rsp, 0x18	      2888	sequencer.c	FUNCTION_83
0x4008fd4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2888	sequencer.c	FUNCTION_83
0x4008fd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2889	sequencer.c	FUNCTION_83
0x4008fdc	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2889	sequencer.c	FUNCTION_83
0x4008fdf	          0x8945fc	                mov dword [rbp - 4], eax	      2889	sequencer.c	FUNCTION_83
0x4008fe2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008fe6	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008fea	          0x8b45fc	                mov eax, dword [rbp - 4]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008fed	          0x4863d0	                         movsxd rdx, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008ff0	          0x4889d0	                            mov rax, rdx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008ff3	          0x4801c0	                            add rax, rax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008ff6	          0x4801d0	                            add rax, rdx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008ff9	        0x48c1e004	                              shl rax, 4	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4008ffd	          0x4801c8	                            add rax, rcx	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4009000	            0x8b00	                    mov eax, dword [rax]	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4009002	            0x89c7	                            mov edi, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4009004	      0xe889acffff	                       call sym.is_fixup	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x4009009	            0x85c0	                           test eax, eax	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x400900b	            0x7564	                           jne 0x4009071	      2891	sequencer.c	FUNCTION_83	IF_1	CALL_1
0x400900d	      0xb800000000	                              mov eax, 0	      2892	sequencer.c	FUNCTION_83	IF_1
0x4009012	            0xeb75	                           jmp 0x4009089	      2892	sequencer.c	FUNCTION_83	IF_1
0x4009014	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009018	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400901c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400901f	          0x4863d0	                         movsxd rdx, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009022	          0x4889d0	                            mov rax, rdx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009025	          0x4801c0	                            add rax, rax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009028	          0x4801d0	                            add rax, rdx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400902b	        0x48c1e004	                              shl rax, 4	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400902f	          0x4801c8	                            add rax, rcx	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009032	            0x8b00	                    mov eax, dword [rax]	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009034	            0x89c7	                            mov edi, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x4009036	      0xe857acffff	                       call sym.is_fixup	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400903b	            0x85c0	                           test eax, eax	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400903d	            0x7407	                            je 0x4009046	      2895	sequencer.c	FUNCTION_83	WHILE_1	IF_2	CALL_2
0x400903f	      0xb800000000	                              mov eax, 0	      2896	sequencer.c	FUNCTION_83	WHILE_1	IF_2
0x4009044	            0xeb43	                           jmp 0x4009089	      2896	sequencer.c	FUNCTION_83	WHILE_1	IF_2
0x4009046	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400904a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400904e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009051	          0x4863d0	                         movsxd rdx, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009054	          0x4889d0	                            mov rax, rdx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009057	          0x4801c0	                            add rax, rax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400905a	          0x4801d0	                            add rax, rdx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400905d	        0x48c1e004	                              shl rax, 4	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009061	          0x4801c8	                            add rax, rcx	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009064	            0x8b00	                    mov eax, dword [rax]	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009066	            0x89c7	                            mov edi, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009068	      0xe812acffff	                        call sym.is_noop	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400906d	            0x85c0	                           test eax, eax	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x400906f	            0x7412	                            je 0x4009083	      2897	sequencer.c	FUNCTION_83	ELSE_1	IF_3	CALL_3
0x4009071	        0x8345fc01	                  add dword [rbp - 4], 1	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x4009075	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x4009079	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x400907c	          0x3945fc	                cmp dword [rbp - 4], eax	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x400907f	            0x7c93	                            jl 0x4009014	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x4009081	            0xeb01	                           jmp 0x4009084	      2894	sequencer.c	FUNCTION_83	WHILE_1
0x4009083	              0x90	                                     nop	      2898	sequencer.c	FUNCTION_83	ELSE_1	IF_3
0x4009084	      0xb801000000	                              mov eax, 1	      2899	sequencer.c	FUNCTION_83
0x4009089	              0xc9	                                   leave	      2900	sequencer.c	FUNCTION_83
0x400908a	              0xc3	                                     ret	      2900	sequencer.c	FUNCTION_83
command_to_string	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	18
0x4003c0a	              0x55	                                push rbp	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x4003c0b	          0x4889e5	                            mov rbp, rsp	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x4003c0e	        0x4883ec10	                           sub rsp, 0x10	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x4003c12	          0x897dfc	                mov dword [rbp - 4], edi	      1343	sequencer.c	ELSE_1	FUNCTION_41
0x4003c15	        0x837dfc0b	                cmp dword [rbp - 4], 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c19	            0x7712	                            ja 0x4003c2d	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c1b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c1e	        0x48c1e004	                              shl rax, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c22	    0x480500000000	                              add rax, 0	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c28	          0x488b00	                    mov rax, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c2b	            0xeb14	                           jmp 0x4003c41	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4003c2d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4003c30	            0x89c6	                            mov esi, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4003c32	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4003c37	      0xb800000000	                              mov eax, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4003c3c	      0xe800000000	                          call 0x4003c41	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4003c41	              0xc9	                                   leave	      1347	sequencer.c	ELSE_1	FUNCTION_41
0x4003c42	              0xc3	                                     ret	      1347	sequencer.c	ELSE_1	FUNCTION_41
single_pick	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	24
0x400ae90	              0x55	                                push rbp	      3427	sequencer.c	FUNCTION_91
0x400ae91	          0x4889e5	                            mov rbp, rsp	      3427	sequencer.c	FUNCTION_91
0x400ae94	        0x4883ec10	                           sub rsp, 0x10	      3427	sequencer.c	FUNCTION_91
0x400ae98	        0x48897df8	                mov qword [rbp - 8], rdi	      3427	sequencer.c	FUNCTION_91
0x400ae9c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3427	sequencer.c	FUNCTION_91
0x400aea0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aea4	          0x4889c7	                            mov rdi, rax	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aea7	      0xe8d361ffff	                    call sym.action_name	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aeac	      0xba00000000	                              mov edx, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aeb1	          0x4889c6	                            mov rsi, rax	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aeb4	      0xbf00000000	                              mov edi, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aeb9	      0xe800000000	                          call 0x400aebe	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400aebe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aec2	            0x8b00	                    mov eax, dword [rax]	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aec4	          0x83f801	                              cmp eax, 1	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aec7	           0xf95c0	                                setne al	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aeca	           0xfb6c0	                           movzx eax, al	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aecd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aed1	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aed5	      0xb900000000	                              mov ecx, 0	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aeda	            0x89c7	                            mov edi, eax	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aedc	      0xe8fa95ffff	                 call sym.do_pick_commit	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400aee1	              0xc9	                                   leave	      3431	sequencer.c	FUNCTION_91
0x400aee2	              0xc3	                                     ret	      3431	sequencer.c	FUNCTION_91
strbuf_complete	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	27
0x40002aa	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_160
0x40002ab	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_160
0x40002ae	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_160
0x40002b2	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_160
0x40002b6	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_160
0x40002b8	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_160
0x40002bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002bf	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002c3	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_160	IF_1
0x40002c6	            0x7431	                            je 0x40002f9	       595	strbuf.h	FUNCTION_160	IF_1
0x40002c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002cc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_160	IF_1
0x40002d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002d4	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002d8	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_160	IF_1
0x40002dc	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_160	IF_1
0x40002df	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002e2	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_160	IF_1
0x40002e5	            0x7412	                            je 0x40002f9	       595	strbuf.h	FUNCTION_160	IF_1
0x40002e7	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_160	CALL_1
0x40002eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_160	CALL_1
0x40002ef	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_160	CALL_1
0x40002f1	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_160	CALL_1
0x40002f4	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_160	CALL_1
0x40002f9	              0x90	                                     nop	       597	strbuf.h	FUNCTION_160
0x40002fa	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_160
0x40002fb	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_160
strbuf_read_file_or_whine	CALL,5:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	50
0x4005be6	              0x55	                                push rbp	      1953	sequencer.c	FUNCTION_59
0x4005be7	          0x4889e5	                            mov rbp, rsp	      1953	sequencer.c	FUNCTION_59
0x4005bea	        0x4883ec20	                           sub rsp, 0x20	      1953	sequencer.c	FUNCTION_59
0x4005bee	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1953	sequencer.c	FUNCTION_59
0x4005bf2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1953	sequencer.c	FUNCTION_59
0x4005bf6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005bfa	      0xbe00000000	                              mov esi, 0	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005bff	          0x4889c7	                            mov rdi, rax	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005c02	      0xb800000000	                              mov eax, 0	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005c07	      0xe800000000	                          call 0x4005c0c	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005c0c	          0x8945f4	              mov dword [rbp - 0xc], eax	      1957	sequencer.c	FUNCTION_59	CALL_1
0x4005c0f	        0x837df400	                cmp dword [rbp - 0xc], 0	      1958	sequencer.c	FUNCTION_59	IF_1
0x4005c13	            0x792a	                           jns 0x4005c3f	      1958	sequencer.c	FUNCTION_59	IF_1
0x4005c15	      0xbf00000000	                              mov edi, 0	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c1a	      0xe888a7ffff	                               call sym.	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c1f	          0x4889c2	                            mov rdx, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c26	          0x4889c6	                            mov rsi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c29	          0x4889d7	                            mov rdi, rdx	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c2c	      0xb800000000	                              mov eax, 0	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c31	      0xe800000000	                          call 0x4005c36	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c36	      0xe805a4ffff	                    call sym.const_error	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c3b	            0x4898	                                    cdqe	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c3d	            0xeb59	                           jmp 0x4005c98	      1959	sequencer.c	FUNCTION_59	CALL_2
0x4005c3f	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c46	      0xba00000000	                              mov edx, 0	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c4b	            0x89ce	                            mov esi, ecx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c4d	          0x4889c7	                            mov rdi, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c50	      0xe800000000	                          call 0x4005c55	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c55	        0x488945f8	                mov qword [rbp - 8], rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x4005c59	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1961	sequencer.c	FUNCTION_59	CALL_4
0x4005c5c	            0x89c7	                            mov edi, eax	      1961	sequencer.c	FUNCTION_59	CALL_4
0x4005c5e	      0xe800000000	                          call 0x4005c63	      1961	sequencer.c	FUNCTION_59	CALL_4
0x4005c63	      0x48837df800	                  cmp qword [rbp - 8], 0	      1962	sequencer.c	FUNCTION_59	IF_2
0x4005c68	            0x792a	                           jns 0x4005c94	      1962	sequencer.c	FUNCTION_59	IF_2
0x4005c6a	      0xbf00000000	                              mov edi, 0	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c6f	      0xe833a7ffff	                               call sym.	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c74	          0x4889c2	                            mov rdx, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c7b	          0x4889c6	                            mov rsi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c7e	          0x4889d7	                            mov rdi, rdx	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c81	      0xb800000000	                              mov eax, 0	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c86	      0xe800000000	                          call 0x4005c8b	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c8b	      0xe8b0a3ffff	                    call sym.const_error	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c90	            0x4898	                                    cdqe	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c92	            0xeb04	                           jmp 0x4005c98	      1963	sequencer.c	FUNCTION_59	CALL_5
0x4005c94	        0x488b45f8	                mov rax, qword [rbp - 8]	      1964	sequencer.c	FUNCTION_59
0x4005c98	              0xc9	                                   leave	      1965	sequencer.c	FUNCTION_59
0x4005c99	              0xc3	                                     ret	      1965	sequencer.c	FUNCTION_59
has_conforming_footer	CALL,3:FOR,1:WHILE,0:ELSE,0:DO,0:IF,5:SWITCH,0:functions,0	74
0x4000d35	              0x55	                                push rbp	       219	sequencer.c	FUNCTION_6
0x4000d36	          0x4889e5	                            mov rbp, rsp	       219	sequencer.c	FUNCTION_6
0x4000d39	        0x4883ec60	                           sub rsp, 0x60	       219	sequencer.c	FUNCTION_6
0x4000d3d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       219	sequencer.c	FUNCTION_6
0x4000d41	        0x488975b0	             mov qword [rbp - 0x50], rsi	       219	sequencer.c	FUNCTION_6
0x4000d45	          0x8955ac	             mov dword [rbp - 0x54], edx	       219	sequencer.c	FUNCTION_6
0x4000d48	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	sequencer.c	FUNCTION_6
0x4000d51	        0x488945f8	                mov qword [rbp - 8], rax	       219	sequencer.c	FUNCTION_6
0x4000d55	            0x31c0	                            xor eax, eax	       219	sequencer.c	FUNCTION_6
0x4000d57	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       222	sequencer.c	FUNCTION_6
0x4000d5e	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       222	sequencer.c	FUNCTION_6
0x4000d65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d69	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d6d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d71	          0x4889d6	                            mov rsi, rdx	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d74	          0x4889c7	                            mov rdi, rax	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d77	      0xe800000000	                          call 0x4000d7c	       224	sequencer.c	FUNCTION_6	CALL_1
0x4000d7c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       226	sequencer.c	FUNCTION_6	IF_1
0x4000d80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	sequencer.c	FUNCTION_6	IF_1
0x4000d84	          0x4839c2	                            cmp rdx, rax	       226	sequencer.c	FUNCTION_6	IF_1
0x4000d87	            0x750a	                           jne 0x4000d93	       226	sequencer.c	FUNCTION_6	IF_1
0x4000d89	      0xb800000000	                              mov eax, 0	       227	sequencer.c	FUNCTION_6	IF_1
0x4000d8e	      0xe9a1000000	                           jmp 0x4000e34	       227	sequencer.c	FUNCTION_6	IF_1
0x4000d93	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000d9a	            0xeb5e	                           jmp 0x4000dfa	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000d9c	      0x48837db000	               cmp qword [rbp - 0x50], 0	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000da1	            0x7453	                            je 0x4000df6	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000da3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000da7	        0x488b5008	                mov rdx, qword [rax + 8]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000daf	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000db3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000db7	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dba	          0x4863f6	                         movsxd rsi, esi	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dbd	        0x48c1e603	                              shl rsi, 3	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dc1	          0x4801f0	                            add rax, rsi	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dc4	          0x488b00	                    mov rax, qword [rax]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dc7	          0x4889ce	                            mov rsi, rcx	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dca	          0x4889c7	                            mov rdi, rax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dcd	      0xe800000000	                          call 0x4000dd2	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dd2	            0x85c0	                           test eax, eax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dd4	            0x7520	                           jne 0x4000df6	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000dd6	    0xc745c8010000	               mov dword [rbp - 0x38], 1	       231	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4000ddd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000de0	            0x4898	                                    cdqe	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000de2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000de6	        0x4883ea01	                              sub rdx, 1	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000dea	          0x4839d0	                            cmp rax, rdx	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000ded	            0x7507	                           jne 0x4000df6	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000def	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4000df6	        0x8345c401	               add dword [rbp - 0x3c], 1	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000dfa	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000dfd	          0x4863d0	                         movsxd rdx, eax	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000e00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000e04	          0x4839c2	                            cmp rdx, rax	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000e07	            0x7293	                            jb 0x4000d9c	       229	sequencer.c	FUNCTION_6	FOR_1
0x4000e09	        0x488d45d0	                   lea rax, [rbp - 0x30]	       236	sequencer.c	FUNCTION_6	CALL_3
0x4000e0d	          0x4889c7	                            mov rdi, rax	       236	sequencer.c	FUNCTION_6	CALL_3
0x4000e10	      0xe800000000	                          call 0x4000e15	       236	sequencer.c	FUNCTION_6	CALL_3
0x4000e15	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       238	sequencer.c	FUNCTION_6	IF_4
0x4000e19	            0x7407	                            je 0x4000e22	       238	sequencer.c	FUNCTION_6	IF_4
0x4000e1b	      0xb803000000	                              mov eax, 3	       239	sequencer.c	FUNCTION_6	IF_4
0x4000e20	            0xeb12	                           jmp 0x4000e34	       239	sequencer.c	FUNCTION_6	IF_4
0x4000e22	        0x837dc800	               cmp dword [rbp - 0x38], 0	       240	sequencer.c	FUNCTION_6	IF_5
0x4000e26	            0x7407	                            je 0x4000e2f	       240	sequencer.c	FUNCTION_6	IF_5
0x4000e28	      0xb802000000	                              mov eax, 2	       241	sequencer.c	FUNCTION_6	IF_5
0x4000e2d	            0xeb05	                           jmp 0x4000e34	       241	sequencer.c	FUNCTION_6	IF_5
0x4000e2f	      0xb801000000	                              mov eax, 1	       242	sequencer.c	FUNCTION_6
0x4000e34	        0x488b4df8	                mov rcx, qword [rbp - 8]	       243	sequencer.c	FUNCTION_6
0x4000e38	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       243	sequencer.c	FUNCTION_6
0x4000e41	            0x7405	                            je 0x4000e48	       243	sequencer.c	FUNCTION_6
0x4000e43	      0xe800000000	                          call 0x4000e48	       243	sequencer.c	FUNCTION_6
0x4000e48	              0xc9	                                   leave	       243	sequencer.c	FUNCTION_6
0x4000e49	              0xc3	                                     ret	       243	sequencer.c	FUNCTION_6
strbuf_addch	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	33
0x4000207	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_154
0x4000208	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_154
0x400020b	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_154
0x400020f	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_154
0x4000213	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_154
0x4000216	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_154	IF_1	CALL_1
0x400021a	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_154	IF_1	CALL_1
0x400021d	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_154	IF_1	CALL_1
0x4000222	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_154	IF_1	CALL_1
0x4000225	            0x7511	                           jne 0x4000238	       227	strbuf.h	FUNCTION_154	IF_1	CALL_1
0x4000227	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_154	CALL_2
0x400022b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_154	CALL_2
0x4000230	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_154	CALL_2
0x4000233	      0xe800000000	                          call 0x4000238	       228	strbuf.h	FUNCTION_154	CALL_2
0x4000238	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_154
0x400023c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_154
0x4000240	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_154
0x4000244	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_154
0x4000248	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_154
0x400024c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_154
0x4000250	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_154
0x4000254	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_154
0x4000257	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_154
0x400025a	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_154
0x400025c	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_154
0x4000260	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_154
0x4000264	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_154
0x4000268	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_154
0x400026c	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_154
0x400026f	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_154
0x4000272	              0x90	                                     nop	       231	strbuf.h	FUNCTION_154
0x4000273	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_154
0x4000274	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_154
save_opts	CALL,13:FOR,1:WHILE,0:ELSE,0:DO,0:IF,10:SWITCH,0:functions,0	155
0x400732b	              0x55	                                push rbp	      2367	sequencer.c	FUNCTION_73
0x400732c	          0x4889e5	                            mov rbp, rsp	      2367	sequencer.c	FUNCTION_73
0x400732f	        0x4883ec40	                           sub rsp, 0x40	      2367	sequencer.c	FUNCTION_73
0x4007333	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2367	sequencer.c	FUNCTION_73
0x4007337	    0x64488b042528	                mov rax, qword fs:[0x28]	      2367	sequencer.c	FUNCTION_73
0x4007340	        0x488945f8	                mov qword [rbp - 8], rax	      2367	sequencer.c	FUNCTION_73
0x4007344	            0x31c0	                            xor eax, eax	      2367	sequencer.c	FUNCTION_73
0x4007346	      0xe86892ffff	             call sym.git_path_opts_file	      2368	sequencer.c	FUNCTION_73	CALL_1
0x400734b	        0x488945d8	             mov qword [rbp - 0x28], rax	      2368	sequencer.c	FUNCTION_73	CALL_1
0x400734f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2369	sequencer.c	FUNCTION_73
0x4007356	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2371	sequencer.c	FUNCTION_73	IF_1
0x400735a	          0x8b400c	              mov eax, dword [rax + 0xc]	      2371	sequencer.c	FUNCTION_73	IF_1
0x400735d	            0x85c0	                           test eax, eax	      2371	sequencer.c	FUNCTION_73	IF_1
0x400735f	            0x7419	                            je 0x400737a	      2371	sequencer.c	FUNCTION_73	IF_1
0x4007361	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2372	sequencer.c	FUNCTION_73	CALL_2
0x4007365	      0xba00000000	                              mov edx, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400736a	      0xbe00000000	                              mov esi, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400736f	          0x4889c7	                            mov rdi, rax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x4007372	      0xe800000000	                          call 0x4007377	      2372	sequencer.c	FUNCTION_73	CALL_2
0x4007377	           0x945d0	              or dword [rbp - 0x30], eax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400737a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2373	sequencer.c	FUNCTION_73	IF_2
0x400737e	          0x8b4004	                mov eax, dword [rax + 4]	      2373	sequencer.c	FUNCTION_73	IF_2
0x4007381	            0x85c0	                           test eax, eax	      2373	sequencer.c	FUNCTION_73	IF_2
0x4007383	            0x7419	                            je 0x400739e	      2373	sequencer.c	FUNCTION_73	IF_2
0x4007385	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4007389	      0xba00000000	                              mov edx, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400738e	      0xbe00000000	                              mov esi, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4007393	          0x4889c7	                            mov rdi, rax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x4007396	      0xe800000000	                          call 0x400739b	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400739b	           0x945d0	              or dword [rbp - 0x30], eax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400739e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2375	sequencer.c	FUNCTION_73	IF_3
0x40073a2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2375	sequencer.c	FUNCTION_73	IF_3
0x40073a5	            0x85c0	                           test eax, eax	      2375	sequencer.c	FUNCTION_73	IF_3
0x40073a7	            0x7419	                            je 0x40073c2	      2375	sequencer.c	FUNCTION_73	IF_3
0x40073a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073ad	      0xba00000000	                              mov edx, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073b2	      0xbe00000000	                              mov esi, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073b7	          0x4889c7	                            mov rdi, rax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073ba	      0xe800000000	                          call 0x40073bf	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073bf	           0x945d0	              or dword [rbp - 0x30], eax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x40073c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2377	sequencer.c	FUNCTION_73	IF_4
0x40073c6	          0x8b4008	                mov eax, dword [rax + 8]	      2377	sequencer.c	FUNCTION_73	IF_4
0x40073c9	            0x85c0	                           test eax, eax	      2377	sequencer.c	FUNCTION_73	IF_4
0x40073cb	            0x7419	                            je 0x40073e6	      2377	sequencer.c	FUNCTION_73	IF_4
0x40073cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073d1	      0xba00000000	                              mov edx, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073d6	      0xbe00000000	                              mov esi, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073db	          0x4889c7	                            mov rdi, rax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073de	      0xe800000000	                          call 0x40073e3	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073e3	           0x945d0	              or dword [rbp - 0x30], eax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x40073e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2379	sequencer.c	FUNCTION_73	IF_5
0x40073ea	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2379	sequencer.c	FUNCTION_73	IF_5
0x40073ed	            0x85c0	                           test eax, eax	      2379	sequencer.c	FUNCTION_73	IF_5
0x40073ef	            0x7419	                            je 0x400740a	      2379	sequencer.c	FUNCTION_73	IF_5
0x40073f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40073f5	      0xba00000000	                              mov edx, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40073fa	      0xbe00000000	                              mov esi, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x40073ff	          0x4889c7	                            mov rdi, rax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x4007402	      0xe800000000	                          call 0x4007407	      2380	sequencer.c	FUNCTION_73	CALL_6
0x4007407	           0x945d0	              or dword [rbp - 0x30], eax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400740a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2381	sequencer.c	FUNCTION_73	IF_6
0x400740e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2381	sequencer.c	FUNCTION_73	IF_6
0x4007411	            0x85c0	                           test eax, eax	      2381	sequencer.c	FUNCTION_73	IF_6
0x4007413	            0x7459	                            je 0x400746e	      2381	sequencer.c	FUNCTION_73	IF_6
0x4007415	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400741d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x4007425	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400742d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x4007431	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x4007434	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x4007438	      0xbe00000000	                              mov esi, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400743d	          0x4889c7	                            mov rdi, rax	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x4007440	      0xb800000000	                              mov eax, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x4007445	      0xe800000000	                          call 0x400744a	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400744a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400744e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x4007452	      0xbe00000000	                              mov esi, 0	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x4007457	          0x4889c7	                            mov rdi, rax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400745a	      0xe800000000	                          call 0x400745f	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400745f	           0x945d0	              or dword [rbp - 0x30], eax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x4007462	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x4007466	          0x4889c7	                            mov rdi, rax	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x4007469	      0xe800000000	                          call 0x400746e	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400746e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2387	sequencer.c	FUNCTION_73	IF_7
0x4007472	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2387	sequencer.c	FUNCTION_73	IF_7
0x4007476	          0x4885c0	                           test rax, rax	      2387	sequencer.c	FUNCTION_73	IF_7
0x4007479	            0x741c	                            je 0x4007497	      2387	sequencer.c	FUNCTION_73	IF_7
0x400747b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400747f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4007483	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4007487	      0xbe00000000	                              mov esi, 0	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400748c	          0x4889c7	                            mov rdi, rax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400748f	      0xe800000000	                          call 0x4007494	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4007494	           0x945d0	              or dword [rbp - 0x30], eax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x4007497	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2389	sequencer.c	FUNCTION_73	IF_8
0x400749b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2389	sequencer.c	FUNCTION_73	IF_8
0x400749f	          0x4885c0	                           test rax, rax	      2389	sequencer.c	FUNCTION_73	IF_8
0x40074a2	            0x741c	                            je 0x40074c0	      2389	sequencer.c	FUNCTION_73	IF_8
0x40074a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074a8	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074b0	      0xbe00000000	                              mov esi, 0	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074b5	          0x4889c7	                            mov rdi, rax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074b8	      0xe800000000	                          call 0x40074bd	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074bd	           0x945d0	              or dword [rbp - 0x30], eax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x40074c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2391	sequencer.c	FUNCTION_73	IF_9
0x40074c4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2391	sequencer.c	FUNCTION_73	IF_9
0x40074c8	          0x4885c0	                           test rax, rax	      2391	sequencer.c	FUNCTION_73	IF_9
0x40074cb	            0x7457	                            je 0x4007524	      2391	sequencer.c	FUNCTION_73	IF_9
0x40074cd	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074d4	            0xeb3b	                           jmp 0x4007511	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074da	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074de	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074e1	          0x4863d2	                         movsxd rdx, edx	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074e4	        0x48c1e203	                              shl rdx, 3	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074e8	          0x4801d0	                            add rax, rdx	      2396	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x40074eb	          0x488b10	                    mov rdx, qword [rax]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x40074ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x40074f2	    0x41b800000000	                              mov r8d, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x40074f8	      0xb900000000	                              mov ecx, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x40074fd	      0xbe00000000	                              mov esi, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4007502	          0x4889c7	                            mov rdi, rax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x4007505	      0xe800000000	                          call 0x400750a	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400750a	           0x945d0	              or dword [rbp - 0x30], eax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400750d	        0x8345d401	               add dword [rbp - 0x2c], 1	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4007511	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4007514	          0x4863d0	                         movsxd rdx, eax	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4007517	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400751b	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400751f	          0x4839c2	                            cmp rdx, rax	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4007522	            0x72b2	                            jb 0x40074d6	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x4007524	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2398	sequencer.c	FUNCTION_73	IF_10
0x4007528	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2398	sequencer.c	FUNCTION_73	IF_10
0x400752b	            0x85c0	                           test eax, eax	      2398	sequencer.c	FUNCTION_73	IF_10
0x400752d	            0x742c	                            je 0x400755b	      2398	sequencer.c	FUNCTION_73	IF_10
0x400752f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2400	sequencer.c	FUNCTION_73	IF_10
0x4007533	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2400	sequencer.c	FUNCTION_73	IF_10
0x4007536	          0x83f801	                              cmp eax, 1	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007539	            0x7507	                           jne 0x4007542	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400753b	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007540	            0xeb05	                           jmp 0x4007547	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007542	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007547	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400754b	      0xbe00000000	                              mov esi, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007550	          0x4889c7	                            mov rdi, rax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007553	      0xe800000000	                          call 0x4007558	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x4007558	           0x945d0	              or dword [rbp - 0x30], eax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400755b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2402	sequencer.c	FUNCTION_73
0x400755e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2403	sequencer.c	FUNCTION_73
0x4007562	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2403	sequencer.c	FUNCTION_73
0x400756b	            0x7405	                            je 0x4007572	      2403	sequencer.c	FUNCTION_73
0x400756d	      0xe800000000	                          call 0x4007572	      2403	sequencer.c	FUNCTION_73
0x4007572	              0xc9	                                   leave	      2403	sequencer.c	FUNCTION_73
0x4007573	              0xc3	                                     ret	      2403	sequencer.c	FUNCTION_73
error_failed_squash	CALL,15:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	69
0x4007a0e	              0x55	                                push rbp	      2488	sequencer.c	FUNCTION_77
0x4007a0f	          0x4889e5	                            mov rbp, rsp	      2488	sequencer.c	FUNCTION_77
0x4007a12	            0x4154	                                push r12	      2488	sequencer.c	FUNCTION_77
0x4007a14	              0x53	                                push rbx	      2488	sequencer.c	FUNCTION_77
0x4007a15	        0x4883ec20	                           sub rsp, 0x20	      2488	sequencer.c	FUNCTION_77
0x4007a19	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2488	sequencer.c	FUNCTION_77
0x4007a1d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2488	sequencer.c	FUNCTION_77
0x4007a21	          0x8955dc	             mov dword [rbp - 0x24], edx	      2488	sequencer.c	FUNCTION_77
0x4007a24	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2488	sequencer.c	FUNCTION_77
0x4007a28	      0xe82d8dffff	         call sym.rebase_path_squash_msg	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a2d	          0x4889c3	                            mov rbx, rax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a30	      0xe8f68cffff	            call sym.rebase_path_message	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a35	      0xbab6010000	                          mov edx, 0x1b6	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a3a	          0x4889de	                            mov rsi, rbx	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a3d	          0x4889c7	                            mov rdi, rax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a40	      0xe800000000	                          call 0x4007a45	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a45	            0x85c0	                           test eax, eax	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a47	            0x7437	                            je 0x4007a80	      2489	sequencer.c	FUNCTION_77	IF_1	CALL_3
0x4007a49	      0xe8dd8cffff	            call sym.rebase_path_message	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a4e	          0x4989c4	                            mov r12, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a51	      0xe8048dffff	         call sym.rebase_path_squash_msg	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a56	          0x4889c3	                            mov rbx, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a59	      0xbf00000000	                              mov edi, 0	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a5e	      0xe84489ffff	                               call sym.	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a63	          0x4c89e2	                            mov rdx, r12	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a66	          0x4889de	                            mov rsi, rbx	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a69	          0x4889c7	                            mov rdi, rax	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a6c	      0xb800000000	                              mov eax, 0	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a71	      0xe800000000	                          call 0x4007a76	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a76	      0xe8c585ffff	                    call sym.const_error	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a7b	      0xe985000000	                           jmp 0x4007b05	      2490	sequencer.c	FUNCTION_77	IF_1	CALL_4
0x4007a80	      0xe800000000	                          call 0x4007a85	      2492	sequencer.c	FUNCTION_77	CALL_8
0x4007a85	          0x4889c7	                            mov rdi, rax	      2492	sequencer.c	FUNCTION_77	CALL_8
0x4007a88	      0xe800000000	                          call 0x4007a8d	      2492	sequencer.c	FUNCTION_77	CALL_8
0x4007a8d	      0xe8998cffff	            call sym.rebase_path_message	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007a92	          0x4889c3	                            mov rbx, rax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007a95	      0xe800000000	                          call 0x4007a9a	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007a9a	      0xbab6010000	                          mov edx, 0x1b6	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007a9f	          0x4889de	                            mov rsi, rbx	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007aa2	          0x4889c7	                            mov rdi, rax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007aa5	      0xe800000000	                          call 0x4007aaa	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007aaa	            0x85c0	                           test eax, eax	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007aac	            0x7434	                            je 0x4007ae2	      2493	sequencer.c	FUNCTION_77	IF_2	CALL_11
0x4007aae	      0xe800000000	                          call 0x4007ab3	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ab3	          0x4989c4	                            mov r12, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ab6	      0xe8708cffff	            call sym.rebase_path_message	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007abb	          0x4889c3	                            mov rbx, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007abe	      0xbf00000000	                              mov edi, 0	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ac3	      0xe8df88ffff	                               call sym.	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ac8	          0x4c89e2	                            mov rdx, r12	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007acb	          0x4889de	                            mov rsi, rbx	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ace	          0x4889c7	                            mov rdi, rax	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ad1	      0xb800000000	                              mov eax, 0	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ad6	      0xe800000000	                          call 0x4007adb	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007adb	      0xe86085ffff	                    call sym.const_error	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ae0	            0xeb23	                           jmp 0x4007b05	      2494	sequencer.c	FUNCTION_77	IF_2	CALL_12
0x4007ae2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007ae6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007ae9	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007aed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007af1	    0x41b900000000	                              mov r9d, 0	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007af7	    0x41b801000000	                              mov r8d, 1	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007afd	          0x4889c7	                            mov rdi, rax	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007b00	      0xe847feffff	               call sym.error_with_patch	      2496	sequencer.c	FUNCTION_77	CALL_15
0x4007b05	        0x4883c420	                           add rsp, 0x20	      2497	sequencer.c	FUNCTION_77
0x4007b09	              0x5b	                                 pop rbx	      2497	sequencer.c	FUNCTION_77
0x4007b0a	            0x415c	                                 pop r12	      2497	sequencer.c	FUNCTION_77
0x4007b0c	              0x5d	                                 pop rbp	      2497	sequencer.c	FUNCTION_77
0x4007b0d	              0xc3	                                     ret	      2497	sequencer.c	FUNCTION_77
create_seq_dir	CALL,8:FOR,0:WHILE,0:ELSE,1:DO,0:IF,2:SWITCH,0:functions,0	43
0x4006a0c	              0x55	                                push rbp	      2193	sequencer.c	FUNCTION_66
0x4006a0d	          0x4889e5	                            mov rbp, rsp	      2193	sequencer.c	FUNCTION_66
0x4006a10	              0x53	                                push rbx	      2193	sequencer.c	FUNCTION_66
0x4006a11	        0x4883ec08	                              sub rsp, 8	      2193	sequencer.c	FUNCTION_66
0x4006a15	      0xe800000000	                          call 0x4006a1a	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4006a1a	          0x4889c7	                            mov rdi, rax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4006a1d	      0xe800000000	                          call 0x4006a22	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4006a22	            0x85c0	                           test eax, eax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4006a24	            0x743a	                            je 0x4006a60	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x4006a26	      0xbf00000000	                              mov edi, 0	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a2b	      0xe87799ffff	                               call sym.	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a30	          0x4889c7	                            mov rdi, rax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a33	      0xb800000000	                              mov eax, 0	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a38	      0xe800000000	                          call 0x4006a3d	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a3d	      0xe8fe95ffff	                    call sym.const_error	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x4006a42	      0xbf00000000	                              mov edi, 0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4006a47	      0xe85b99ffff	                               call sym.	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4006a4c	          0x4889c7	                            mov rdi, rax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4006a4f	      0xb800000000	                              mov eax, 0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4006a54	      0xe800000000	                          call 0x4006a59	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x4006a59	      0xb8ffffffff	                     mov eax, 0xffffffff	      2197	sequencer.c	FUNCTION_66	IF_1
0x4006a5e	            0xeb44	                           jmp 0x4006aa4	      2197	sequencer.c	FUNCTION_66	IF_1
0x4006a60	      0xe800000000	                          call 0x4006a65	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a65	      0xbeff010000	                          mov esi, 0x1ff	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a6a	          0x4889c7	                            mov rdi, rax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a6d	      0xe800000000	                          call 0x4006a72	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a72	            0x85c0	                           test eax, eax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a74	            0x7929	                           jns 0x4006a9f	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x4006a76	      0xe800000000	                          call 0x4006a7b	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a7b	          0x4889c3	                            mov rbx, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a7e	      0xbf00000000	                              mov edi, 0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a83	      0xe81f99ffff	                               call sym.	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a88	          0x4889de	                            mov rsi, rbx	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a8b	          0x4889c7	                            mov rdi, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a8e	      0xb800000000	                              mov eax, 0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a93	      0xe800000000	                          call 0x4006a98	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a98	      0xe8a395ffff	                    call sym.const_error	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a9d	            0xeb05	                           jmp 0x4006aa4	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x4006a9f	      0xb800000000	                              mov eax, 0	      2201	sequencer.c	FUNCTION_66
0x4006aa4	        0x4883c408	                              add rsp, 8	      2202	sequencer.c	FUNCTION_66
0x4006aa8	              0x5b	                                 pop rbx	      2202	sequencer.c	FUNCTION_66
0x4006aa9	              0x5d	                                 pop rbp	      2202	sequencer.c	FUNCTION_66
0x4006aaa	              0xc3	                                     ret	      2202	sequencer.c	FUNCTION_66
append_new_todo	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	76
0x4005402	              0x55	                                push rbp	      1797	sequencer.c	FUNCTION_52
0x4005403	          0x4889e5	                            mov rbp, rsp	      1797	sequencer.c	FUNCTION_52
0x4005406	        0x4883ec10	                           sub rsp, 0x10	      1797	sequencer.c	FUNCTION_52
0x400540a	        0x48897df8	                mov qword [rbp - 8], rdi	      1797	sequencer.c	FUNCTION_52
0x400540e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005412	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4005415	          0x8d5001	                      lea edx, [rax + 1]	      1798	sequencer.c	FUNCTION_52
0x4005418	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x400541c	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x400541f	            0x39c2	                            cmp edx, eax	      1798	sequencer.c	FUNCTION_52
0x4005421	     0xf8e95000000	                           jle 0x40054bc	      1798	sequencer.c	FUNCTION_52
0x4005427	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x400542b	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x400542e	          0x8d5010	                   lea edx, [rax + 0x10]	      1798	sequencer.c	FUNCTION_52
0x4005431	            0x89d0	                            mov eax, edx	      1798	sequencer.c	FUNCTION_52
0x4005433	             0x1c0	                            add eax, eax	      1798	sequencer.c	FUNCTION_52
0x4005435	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52
0x4005437	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x4005439	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52
0x400543c	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52
0x400543e	            0xd1f8	                              sar eax, 1	      1798	sequencer.c	FUNCTION_52
0x4005440	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x4005442	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005446	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4005449	          0x83c001	                              add eax, 1	      1798	sequencer.c	FUNCTION_52
0x400544c	            0x39c2	                            cmp edx, eax	      1798	sequencer.c	FUNCTION_52
0x400544e	            0x7d13	                           jge 0x4005463	      1798	sequencer.c	FUNCTION_52
0x4005450	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005454	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4005457	          0x8d5001	                      lea edx, [rax + 1]	      1798	sequencer.c	FUNCTION_52
0x400545a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x400545e	          0x895024	             mov dword [rax + 0x24], edx	      1798	sequencer.c	FUNCTION_52
0x4005461	            0xeb22	                           jmp 0x4005485	      1798	sequencer.c	FUNCTION_52
0x4005463	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005467	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x400546a	          0x8d5010	                   lea edx, [rax + 0x10]	      1798	sequencer.c	FUNCTION_52
0x400546d	            0x89d0	                            mov eax, edx	      1798	sequencer.c	FUNCTION_52
0x400546f	             0x1c0	                            add eax, eax	      1798	sequencer.c	FUNCTION_52
0x4005471	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52
0x4005473	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x4005475	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52
0x4005478	             0x1d0	                            add eax, edx	      1798	sequencer.c	FUNCTION_52
0x400547a	            0xd1f8	                              sar eax, 1	      1798	sequencer.c	FUNCTION_52
0x400547c	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x400547e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005482	          0x895024	             mov dword [rax + 0x24], edx	      1798	sequencer.c	FUNCTION_52
0x4005485	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x4005489	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x400548c	            0x4898	                                    cdqe	      1798	sequencer.c	FUNCTION_52
0x400548e	          0x4889c6	                            mov rsi, rax	      1798	sequencer.c	FUNCTION_52
0x4005491	      0xbf30000000	                           mov edi, 0x30	      1798	sequencer.c	FUNCTION_52
0x4005496	      0xe84aacffff	                        call sym.st_mult	      1798	sequencer.c	FUNCTION_52
0x400549b	          0x4889c2	                            mov rdx, rax	      1798	sequencer.c	FUNCTION_52
0x400549e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x40054a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1798	sequencer.c	FUNCTION_52
0x40054a6	          0x4889d6	                            mov rsi, rdx	      1798	sequencer.c	FUNCTION_52
0x40054a9	          0x4889c7	                            mov rdi, rax	      1798	sequencer.c	FUNCTION_52
0x40054ac	      0xe800000000	                          call 0x40054b1	      1798	sequencer.c	FUNCTION_52
0x40054b1	          0x4889c2	                            mov rdx, rax	      1798	sequencer.c	FUNCTION_52
0x40054b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	sequencer.c	FUNCTION_52
0x40054b8	        0x48895018	             mov qword [rax + 0x18], rdx	      1798	sequencer.c	FUNCTION_52
0x40054bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x40054c0	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1799	sequencer.c	FUNCTION_52
0x40054c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x40054c8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1799	sequencer.c	FUNCTION_52
0x40054cb	          0x8d4801	                      lea ecx, [rax + 1]	      1799	sequencer.c	FUNCTION_52
0x40054ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1799	sequencer.c	FUNCTION_52
0x40054d2	          0x894a20	             mov dword [rdx + 0x20], ecx	      1799	sequencer.c	FUNCTION_52
0x40054d5	          0x4863d0	                         movsxd rdx, eax	      1799	sequencer.c	FUNCTION_52
0x40054d8	          0x4889d0	                            mov rax, rdx	      1799	sequencer.c	FUNCTION_52
0x40054db	          0x4801c0	                            add rax, rax	      1799	sequencer.c	FUNCTION_52
0x40054de	          0x4801d0	                            add rax, rdx	      1799	sequencer.c	FUNCTION_52
0x40054e1	        0x48c1e004	                              shl rax, 4	      1799	sequencer.c	FUNCTION_52
0x40054e5	          0x4801f0	                            add rax, rsi	      1799	sequencer.c	FUNCTION_52
0x40054e8	              0xc9	                                   leave	      1800	sequencer.c	FUNCTION_52
0x40054e9	              0xc3	                                     ret	      1800	sequencer.c	FUNCTION_52
read_and_refresh_cache	CALL,11:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	74
0x400528c	              0x55	                                push rbp	      1747	sequencer.c	FUNCTION_50
0x400528d	          0x4889e5	                            mov rbp, rsp	      1747	sequencer.c	FUNCTION_50
0x4005290	              0x53	                                push rbx	      1747	sequencer.c	FUNCTION_50
0x4005291	        0x4883ec38	                           sub rsp, 0x38	      1747	sequencer.c	FUNCTION_50
0x4005295	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1747	sequencer.c	FUNCTION_50
0x4005299	    0x64488b042528	                mov rax, qword fs:[0x28]	      1747	sequencer.c	FUNCTION_50
0x40052a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1747	sequencer.c	FUNCTION_50
0x40052a6	            0x31c0	                            xor eax, eax	      1747	sequencer.c	FUNCTION_50
0x40052a8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1748	sequencer.c	FUNCTION_50
0x40052b0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40052b4	      0xbe00000000	                              mov esi, 0	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40052b9	          0x4889c7	                            mov rdi, rax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40052bc	      0xe800000000	                          call 0x40052c1	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40052c1	          0x8945dc	             mov dword [rbp - 0x24], eax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x40052c4	      0xbe00000000	                              mov esi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40052c9	      0xbf00000000	                              mov edi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40052ce	      0xe800000000	                          call 0x40052d3	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40052d3	            0x85c0	                           test eax, eax	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40052d5	            0x7944	                           jns 0x400531b	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x40052d7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x40052db	          0x4889c7	                            mov rdi, rax	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x40052de	      0xe809b2ffff	             call sym.rollback_lock_file	      1751	sequencer.c	FUNCTION_50	IF_1	CALL_3
0x40052e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052e7	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052ea	      0xe890bdffff	                    call sym.action_name	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052ef	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052f2	      0xe8b0b0ffff	                               call sym.	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052f7	          0x4889c3	                            mov rbx, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052fa	      0xbf00000000	                              mov edi, 0	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x40052ff	      0xe8a3b0ffff	                               call sym.	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4005304	          0x4889de	                            mov rsi, rbx	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4005307	          0x4889c7	                            mov rdi, rax	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x400530a	      0xb800000000	                              mov eax, 0	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x400530f	      0xe800000000	                          call 0x4005314	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4005314	      0xe827adffff	                    call sym.const_error	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x4005319	            0xeb7c	                           jmp 0x4005397	      1752	sequencer.c	FUNCTION_50	IF_1	CALL_4
0x400531b	    0x41b800000000	                              mov r8d, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4005321	      0xb900000000	                              mov ecx, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4005326	      0xba00000000	                              mov edx, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x400532b	      0xbe06000000	                              mov esi, 6	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4005330	      0xbf00000000	                              mov edi, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4005335	      0xe800000000	                          call 0x400533a	      1755	sequencer.c	FUNCTION_50	CALL_7
0x400533a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1756	sequencer.c	FUNCTION_50	IF_2
0x400533e	            0x7852	                            js 0x4005392	      1756	sequencer.c	FUNCTION_50	IF_2
0x4005340	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4005344	      0xba03000000	                              mov edx, 3	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4005349	          0x4889c6	                            mov rsi, rax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x400534c	      0xbf00000000	                              mov edi, 0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4005351	      0xe800000000	                          call 0x4005356	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4005356	            0x85c0	                           test eax, eax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4005358	            0x7438	                            je 0x4005392	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x400535a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400535e	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005361	      0xe819bdffff	                    call sym.action_name	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005366	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005369	      0xe839b0ffff	                               call sym.	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400536e	          0x4889c3	                            mov rbx, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005371	      0xbf00000000	                              mov edi, 0	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005376	      0xe82cb0ffff	                               call sym.	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400537b	          0x4889de	                            mov rsi, rbx	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400537e	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005381	      0xb800000000	                              mov eax, 0	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005386	      0xe800000000	                          call 0x400538b	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x400538b	      0xe8b0acffff	                    call sym.const_error	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005390	            0xeb05	                           jmp 0x4005397	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4005392	      0xb800000000	                              mov eax, 0	      1763	sequencer.c	FUNCTION_50
0x4005397	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1764	sequencer.c	FUNCTION_50
0x400539b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1764	sequencer.c	FUNCTION_50
0x40053a4	            0x7405	                            je 0x40053ab	      1764	sequencer.c	FUNCTION_50
0x40053a6	      0xe800000000	                          call 0x40053ab	      1764	sequencer.c	FUNCTION_50
0x40053ab	        0x4883c438	                           add rsp, 0x38	      1764	sequencer.c	FUNCTION_50
0x40053af	              0x5b	                                 pop rbx	      1764	sequencer.c	FUNCTION_50
0x40053b0	              0x5d	                                 pop rbp	      1764	sequencer.c	FUNCTION_50
0x40053b1	              0xc3	                                     ret	      1764	sequencer.c	FUNCTION_50
strbuf_addstr	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	17
0x4000275	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_155
0x4000276	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_155
0x4000279	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_155
0x400027d	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_155
0x4000281	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_155
0x4000285	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_155	CALL_2
0x4000289	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_155	CALL_2
0x400028c	      0xe800000000	                          call 0x4000291	       279	strbuf.h	FUNCTION_155	CALL_2
0x4000291	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_155	CALL_2
0x4000294	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_155	CALL_2
0x4000298	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_155	CALL_2
0x400029c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_155	CALL_2
0x400029f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_155	CALL_2
0x40002a2	      0xe800000000	                          call 0x40002a7	       279	strbuf.h	FUNCTION_155	CALL_2
0x40002a7	              0x90	                                     nop	       280	strbuf.h	FUNCTION_155
0x40002a8	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_155
0x40002a9	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_155
action_name	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,1:functions,0	32
0x400107f	              0x55	                                push rbp	       291	sequencer.c	FUNCTION_9
0x4001080	          0x4889e5	                            mov rbp, rsp	       291	sequencer.c	FUNCTION_9
0x4001083	              0x53	                                push rbx	       291	sequencer.c	FUNCTION_9
0x4001084	        0x4883ec18	                           sub rsp, 0x18	       291	sequencer.c	FUNCTION_9
0x4001088	        0x48897de8	             mov qword [rbp - 0x18], rdi	       291	sequencer.c	FUNCTION_9
0x400108c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4001090	            0x8b00	                    mov eax, dword [rax]	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4001092	          0x83f801	                              cmp eax, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4001095	            0x7413	                            je 0x40010aa	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4001097	          0x83f801	                              cmp eax, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400109a	            0x7207	                            jb 0x40010a3	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400109c	          0x83f802	                              cmp eax, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400109f	            0x7410	                            je 0x40010b1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40010a1	            0xeb15	                           jmp 0x40010b8	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x40010a3	      0xb800000000	                              mov eax, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x40010a8	            0xeb2d	                           jmp 0x40010d7	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x40010aa	      0xb800000000	                              mov eax, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x40010af	            0xeb26	                           jmp 0x40010d7	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x40010b1	      0xb800000000	                              mov eax, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x40010b6	            0xeb1f	                           jmp 0x40010d7	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x40010b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010bc	            0x8b18	                    mov ebx, dword [rax]	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010be	      0xbf00000000	                              mov edi, 0	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010c3	      0xe8dff2ffff	                               call sym.	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010c8	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010ca	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010cd	      0xb800000000	                              mov eax, 0	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010d2	      0xe800000000	                          call 0x40010d7	       300	sequencer.c	FUNCTION_9	CALL_2
0x40010d7	        0x4883c418	                           add rsp, 0x18	       301	sequencer.c	FUNCTION_9
0x40010db	              0x5b	                                 pop rbx	       301	sequencer.c	FUNCTION_9
0x40010dc	              0x5d	                                 pop rbp	       301	sequencer.c	FUNCTION_9
0x40010dd	              0xc3	                                     ret	       301	sequencer.c	FUNCTION_9
hashmap_get_from_hash	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	26
0x4000347	              0x55	                                push rbp	       305	hashmap.h	FUNCTION_146
0x4000348	          0x4889e5	                            mov rbp, rsp	       305	hashmap.h	FUNCTION_146
0x400034b	        0x4883ec40	                           sub rsp, 0x40	       305	hashmap.h	FUNCTION_146
0x400034f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       305	hashmap.h	FUNCTION_146
0x4000353	          0x8975d4	             mov dword [rbp - 0x2c], esi	       305	hashmap.h	FUNCTION_146
0x4000356	        0x488955c8	             mov qword [rbp - 0x38], rdx	       305	hashmap.h	FUNCTION_146
0x400035a	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	hashmap.h	FUNCTION_146
0x4000363	        0x488945f8	                mov qword [rbp - 8], rax	       305	hashmap.h	FUNCTION_146
0x4000367	            0x31c0	                            xor eax, eax	       305	hashmap.h	FUNCTION_146
0x4000369	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       307	hashmap.h	FUNCTION_146	CALL_1
0x400036c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       307	hashmap.h	FUNCTION_146	CALL_1
0x4000370	            0x89d6	                            mov esi, edx	       307	hashmap.h	FUNCTION_146	CALL_1
0x4000372	          0x4889c7	                            mov rdi, rax	       307	hashmap.h	FUNCTION_146	CALL_1
0x4000375	      0xe8a2ffffff	             call sym.hashmap_entry_init	       307	hashmap.h	FUNCTION_146	CALL_1
0x400037a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       308	hashmap.h	FUNCTION_146	CALL_2
0x400037e	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       308	hashmap.h	FUNCTION_146	CALL_2
0x4000382	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	hashmap.h	FUNCTION_146	CALL_2
0x4000386	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_146	CALL_2
0x4000389	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_146	CALL_2
0x400038c	      0xe800000000	                          call 0x4000391	       308	hashmap.h	FUNCTION_146	CALL_2
0x4000391	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	hashmap.h	FUNCTION_146
0x4000395	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	hashmap.h	FUNCTION_146
0x400039e	            0x7405	                            je 0x40003a5	       309	hashmap.h	FUNCTION_146
0x40003a0	      0xe800000000	                          call 0x40003a5	       309	hashmap.h	FUNCTION_146
0x40003a5	              0xc9	                                   leave	       309	hashmap.h	FUNCTION_146
0x40003a6	              0xc3	                                     ret	       309	hashmap.h	FUNCTION_146
parse_head	CALL,9:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:SWITCH,0:functions,0	71
0x40032cd	              0x55	                                push rbp	      1071	sequencer.c	FUNCTION_36
0x40032ce	          0x4889e5	                            mov rbp, rsp	      1071	sequencer.c	FUNCTION_36
0x40032d1	              0x53	                                push rbx	      1071	sequencer.c	FUNCTION_36
0x40032d2	        0x4883ec48	                           sub rsp, 0x48	      1071	sequencer.c	FUNCTION_36
0x40032d6	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1071	sequencer.c	FUNCTION_36
0x40032da	    0x64488b042528	                mov rax, qword fs:[0x28]	      1071	sequencer.c	FUNCTION_36
0x40032e3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1071	sequencer.c	FUNCTION_36
0x40032e7	            0x31c0	                            xor eax, eax	      1071	sequencer.c	FUNCTION_36
0x40032e9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032ed	          0x4889c6	                            mov rsi, rax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032f0	      0xbf00000000	                              mov edi, 0	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032f5	      0xe800000000	                          call 0x40032fa	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032fa	            0x85c0	                           test eax, eax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032fc	            0x740d	                            je 0x400330b	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x40032fe	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1076	sequencer.c	FUNCTION_36	IF_1
0x4003306	      0xe9aa000000	                           jmp 0x40033b5	      1076	sequencer.c	FUNCTION_36	IF_1
0x400330b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x400330f	          0x4889c7	                            mov rdi, rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4003312	      0xe800000000	                          call 0x4003317	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4003317	        0x488945c8	             mov qword [rbp - 0x38], rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x400331b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4003320	            0x7521	                           jne 0x4003343	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4003322	      0xbf00000000	                              mov edi, 0	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4003327	      0xe87bd0ffff	                               call sym.	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x400332c	          0x4889c7	                            mov rdi, rax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x400332f	      0xb800000000	                              mov eax, 0	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4003334	      0xe800000000	                          call 0x4003339	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4003339	      0xe802cdffff	                    call sym.const_error	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x400333e	      0xe982000000	                           jmp 0x40033c5	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4003343	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x4003347	        0x488d5004	                      lea rdx, [rax + 4]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400334b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400334f	          0x4889d6	                            mov rsi, rdx	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x4003352	          0x4889c7	                            mov rdi, rax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x4003355	      0xe8a3d0ffff	                         call sym.oidcmp	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400335a	            0x85c0	                           test eax, eax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400335c	            0x7429	                            je 0x4003387	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400335e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003362	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003365	      0xe800000000	                          call 0x400336a	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x400336a	          0x4889c3	                            mov rbx, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x400336d	      0xbf00000000	                              mov edi, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003372	      0xe830d0ffff	                               call sym.	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003377	          0x4889de	                            mov rsi, rbx	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x400337a	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x400337d	      0xb800000000	                              mov eax, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003382	      0xe800000000	                          call 0x4003387	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4003387	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x400338b	          0x4889c7	                            mov rdi, rax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x400338e	      0xe874d1ffff	                   call sym.parse_commit	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4003393	            0x85c0	                           test eax, eax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4003395	            0x741e	                            je 0x40033b5	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x4003397	      0xbf00000000	                              mov edi, 0	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x400339c	      0xe806d0ffff	                               call sym.	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033a1	          0x4889c7	                            mov rdi, rax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033a4	      0xb800000000	                              mov eax, 0	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033a9	      0xe800000000	                          call 0x40033ae	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033ae	      0xe88dccffff	                    call sym.const_error	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033b3	            0xeb10	                           jmp 0x40033c5	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40033b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1088	sequencer.c	FUNCTION_36
0x40033b9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1088	sequencer.c	FUNCTION_36
0x40033bd	          0x488910	                    mov qword [rax], rdx	      1088	sequencer.c	FUNCTION_36
0x40033c0	      0xb800000000	                              mov eax, 0	      1090	sequencer.c	FUNCTION_36
0x40033c5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1091	sequencer.c	FUNCTION_36
0x40033c9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1091	sequencer.c	FUNCTION_36
0x40033d2	            0x7405	                            je 0x40033d9	      1091	sequencer.c	FUNCTION_36
0x40033d4	      0xe800000000	                          call 0x40033d9	      1091	sequencer.c	FUNCTION_36
0x40033d9	        0x4883c448	                           add rsp, 0x48	      1091	sequencer.c	FUNCTION_36
0x40033dd	              0x5b	                                 pop rbx	      1091	sequencer.c	FUNCTION_36
0x40033de	              0x5d	                                 pop rbp	      1091	sequencer.c	FUNCTION_36
0x40033df	              0xc3	                                     ret	      1091	sequencer.c	FUNCTION_36
read_populate_opts	CALL,25:FOR,0:WHILE,1:ELSE,2:DO,0:IF,11:SWITCH,0:functions,0	171
0x400660b	              0x55	                                push rbp	      2102	sequencer.c	FUNCTION_64
0x400660c	          0x4889e5	                            mov rbp, rsp	      2102	sequencer.c	FUNCTION_64
0x400660f	              0x53	                                push rbx	      2102	sequencer.c	FUNCTION_64
0x4006610	        0x4883ec48	                           sub rsp, 0x48	      2102	sequencer.c	FUNCTION_64
0x4006614	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2102	sequencer.c	FUNCTION_64
0x4006618	    0x64488b042528	                mov rax, qword fs:[0x28]	      2102	sequencer.c	FUNCTION_64
0x4006621	        0x488945e8	             mov qword [rbp - 0x18], rax	      2102	sequencer.c	FUNCTION_64
0x4006625	            0x31c0	                            xor eax, eax	      2102	sequencer.c	FUNCTION_64
0x4006627	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x400662b	          0x4889c7	                            mov rdi, rax	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x400662e	      0xe895a6ffff	                    call sym.is_rebase_i	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4006633	            0x85c0	                           test eax, eax	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4006635	     0xf84e7010000	                            je 0x4006822	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x400663b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4006643	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x400664b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4006653	      0xe8a9a2ffff	       call sym.rebase_path_gpg_sign_opt	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4006658	          0x4889c1	                            mov rcx, rax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400665b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400665f	      0xba01000000	                              mov edx, 1	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4006664	          0x4889ce	                            mov rsi, rcx	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4006667	          0x4889c7	                            mov rdi, rax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400666a	      0xe8f1adffff	                  call sym.read_oneliner	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400666f	            0x85c0	                           test eax, eax	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4006671	            0x7464	                            je 0x40066d7	      2106	sequencer.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4006673	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4006677	      0xbe00000000	                              mov esi, 0	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x400667c	          0x4889c7	                            mov rdi, rax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x400667f	      0xe800000000	                          call 0x4006684	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4006684	            0x85c0	                           test eax, eax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4006686	            0x7513	                           jne 0x400669b	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4006688	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400668c	      0xbe00000000	                              mov esi, 0	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4006691	          0x4889c7	                            mov rdi, rax	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4006694	      0xe8d49affff	                  call sym.strbuf_setlen	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4006699	            0xeb2b	                           jmp 0x40066c6	      2108	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400669b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x400669f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40066a3	          0x4889c7	                            mov rdi, rax	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40066a6	      0xe800000000	                          call 0x40066ab	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x40066ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066af	        0x4883c002	                              add rax, 2	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066b3	          0x4889c7	                            mov rdi, rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066b6	      0xe800000000	                          call 0x40066bb	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066bb	          0x4889c2	                            mov rdx, rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066c2	        0x48895030	             mov qword [rax + 0x30], rdx	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x40066c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2
0x40066ca	      0xbe00000000	                              mov esi, 0	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2
0x40066cf	          0x4889c7	                            mov rdi, rax	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2
0x40066d2	      0xe8969affff	                  call sym.strbuf_setlen	      2113	sequencer.c	FUNCTION_64	IF_1	IF_2
0x40066d7	      0xe8cca3ffff	call sym.rebase_path_allow_rerere_autoupdate	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066dc	          0x4889c1	                            mov rcx, rax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066df	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066e3	      0xba01000000	                              mov edx, 1	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066e8	          0x4889ce	                            mov rsi, rcx	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066eb	          0x4889c7	                            mov rdi, rax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066ee	      0xe86dadffff	                  call sym.read_oneliner	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066f3	            0x85c0	                           test eax, eax	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066f5	            0x7453	                            je 0x400674a	      2116	sequencer.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40066f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x40066fb	      0xbe00000000	                              mov esi, 0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x4006700	          0x4889c7	                            mov rdi, rax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x4006703	      0xe800000000	                          call 0x4006708	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x4006708	            0x85c0	                           test eax, eax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x400670a	            0x750d	                           jne 0x4006719	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5	CALL_9
0x400670c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4006710	    0xc74018010000	               mov dword [rax + 0x18], 1	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4006717	            0xeb20	                           jmp 0x4006739	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4006719	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x400671d	      0xbe00000000	                              mov esi, 0	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x4006722	          0x4889c7	                            mov rdi, rax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x4006725	      0xe800000000	                          call 0x400672a	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x400672a	            0x85c0	                           test eax, eax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x400672c	            0x750b	                           jne 0x4006739	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6	CALL_10
0x400672e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4006732	    0xc74018020000	               mov dword [rax + 0x18], 2	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4006739	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4
0x400673d	      0xbe00000000	                              mov esi, 0	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4
0x4006742	          0x4889c7	                            mov rdi, rax	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4
0x4006745	      0xe8239affff	                  call sym.strbuf_setlen	      2121	sequencer.c	FUNCTION_64	IF_1	IF_4
0x400674a	      0xe810a2ffff	            call sym.rebase_path_verbose	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_12
0x400674f	          0x4889c7	                            mov rdi, rax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_12
0x4006752	      0xe800000000	                          call 0x4006757	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_12
0x4006757	            0x85c0	                           test eax, eax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_12
0x4006759	            0x740b	                            je 0x4006766	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_12
0x400675b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x400675f	    0xc74028010000	               mov dword [rax + 0x28], 1	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4006766	      0xe823a2ffff	            call sym.rebase_path_signoff	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_14
0x400676b	          0x4889c7	                            mov rdi, rax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_14
0x400676e	      0xe800000000	                          call 0x4006773	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_14
0x4006773	            0x85c0	                           test eax, eax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_14
0x4006775	            0x7416	                            je 0x400678d	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_14
0x4006777	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x400677b	    0xc74014000000	               mov dword [rax + 0x14], 0	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x4006782	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x4006786	    0xc74010010000	               mov dword [rax + 0x10], 1	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x400678d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_15
0x4006791	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_15
0x4006795	          0x4889d6	                            mov rsi, rdx	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_15
0x4006798	          0x4889c7	                            mov rdi, rax	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_15
0x400679b	      0xe819fdffff	             call sym.read_strategy_opts	      2132	sequencer.c	FUNCTION_64	IF_1	CALL_15
0x40067a0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_16
0x40067a4	          0x4889c7	                            mov rdi, rax	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_16
0x40067a7	      0xe800000000	                          call 0x40067ac	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_16
0x40067ac	      0xe807a0ffff	     call sym.rebase_path_current_fixups	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067b1	          0x4889c1	                            mov rcx, rax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067b8	        0x4883c060	                           add rax, 0x60	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067bc	      0xba01000000	                              mov edx, 1	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067c1	          0x4889ce	                            mov rsi, rcx	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067c4	          0x4889c7	                            mov rdi, rax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067c7	      0xe894acffff	                  call sym.read_oneliner	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067cc	            0x85c0	                           test eax, eax	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067ce	            0x744b	                            je 0x400681b	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_17
0x40067d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40067d4	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40067d8	        0x488945c8	             mov qword [rbp - 0x38], rax	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40067dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40067e0	    0xc74078010000	               mov dword [rax + 0x78], 1	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x40067e7	            0xeb16	                           jmp 0x40067ff	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x40067e9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067ed	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067f0	          0x8d5001	                      lea edx, [rax + 1]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067f7	          0x895078	             mov dword [rax + 0x78], edx	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067fa	      0x488345c801	               add qword [rbp - 0x38], 1	      2141	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x40067ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x4006803	      0xbe0a000000	                            mov esi, 0xa	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x4006808	          0x4889c7	                            mov rdi, rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x400680b	      0xe800000000	                          call 0x4006810	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x4006810	        0x488945c8	             mov qword [rbp - 0x38], rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x4006814	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x4006819	            0x75ce	                           jne 0x40067e9	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1	CALL_19
0x400681b	      0xb800000000	                              mov eax, 0	      2145	sequencer.c	FUNCTION_64	IF_1
0x4006820	            0xeb66	                           jmp 0x4006888	      2145	sequencer.c	FUNCTION_64	IF_1
0x4006822	      0xe88c9dffff	             call sym.git_path_opts_file	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_21
0x4006827	          0x4889c7	                            mov rdi, rax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_21
0x400682a	      0xe800000000	                          call 0x400682f	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_21
0x400682f	            0x85c0	                           test eax, eax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_21
0x4006831	            0x7507	                           jne 0x400683a	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_21
0x4006833	      0xb800000000	                              mov eax, 0	      2149	sequencer.c	FUNCTION_64	IF_10
0x4006838	            0xeb4e	                           jmp 0x4006888	      2149	sequencer.c	FUNCTION_64	IF_10
0x400683a	      0xe8749dffff	             call sym.git_path_opts_file	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x400683f	          0x4889c1	                            mov rcx, rax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006842	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006846	          0x4889c2	                            mov rdx, rax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006849	          0x4889ce	                            mov rsi, rcx	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x400684c	      0xbf00000000	                              mov edi, 0	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006851	      0xe800000000	                          call 0x4006856	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006856	            0x85c0	                           test eax, eax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x4006858	            0x7929	                           jns 0x4006883	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_23
0x400685a	      0xe8549dffff	             call sym.git_path_opts_file	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x400685f	          0x4889c3	                            mov rbx, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006862	      0xbf00000000	                              mov edi, 0	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006867	      0xe83b9bffff	                               call sym.	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x400686c	          0x4889de	                            mov rsi, rbx	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x400686f	          0x4889c7	                            mov rdi, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006872	      0xb800000000	                              mov eax, 0	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006877	      0xe800000000	                          call 0x400687c	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x400687c	      0xe8bf97ffff	                    call sym.const_error	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006881	            0xeb05	                           jmp 0x4006888	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_24
0x4006883	      0xb800000000	                              mov eax, 0	      2159	sequencer.c	FUNCTION_64
0x4006888	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2160	sequencer.c	FUNCTION_64
0x400688c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2160	sequencer.c	FUNCTION_64
0x4006895	            0x7405	                            je 0x400689c	      2160	sequencer.c	FUNCTION_64
0x4006897	      0xe800000000	                          call 0x400689c	      2160	sequencer.c	FUNCTION_64
0x400689c	        0x4883c448	                           add rsp, 0x48	      2160	sequencer.c	FUNCTION_64
0x40068a0	              0x5b	                                 pop rbx	      2160	sequencer.c	FUNCTION_64
0x40068a1	              0x5d	                                 pop rbp	      2160	sequencer.c	FUNCTION_64
0x40068a2	              0xc3	                                     ret	      2160	sequencer.c	FUNCTION_64
get_todo_path	CALL,3:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	14
0x4000d0b	              0x55	                                push rbp	       205	sequencer.c	FUNCTION_5
0x4000d0c	          0x4889e5	                            mov rbp, rsp	       205	sequencer.c	FUNCTION_5
0x4000d0f	        0x4883ec10	                           sub rsp, 0x10	       205	sequencer.c	FUNCTION_5
0x4000d13	        0x48897df8	                mov qword [rbp - 8], rdi	       205	sequencer.c	FUNCTION_5
0x4000d17	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000d1b	          0x4889c7	                            mov rdi, rax	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000d1e	      0xe8a5ffffff	                    call sym.is_rebase_i	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000d23	            0x85c0	                           test eax, eax	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000d25	            0x7407	                            je 0x4000d2e	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4000d27	      0xe843f9ffff	               call sym.rebase_path_todo	       207	sequencer.c	FUNCTION_5	CALL_2
0x4000d2c	            0xeb05	                           jmp 0x4000d33	       207	sequencer.c	FUNCTION_5	CALL_2
0x4000d2e	      0xe851f8ffff	             call sym.git_path_todo_file	       208	sequencer.c	FUNCTION_5	CALL_3
0x4000d33	              0xc9	                                   leave	       209	sequencer.c	FUNCTION_5
0x4000d34	              0xc3	                                     ret	       209	sequencer.c	FUNCTION_5
do_reset	CALL,33:FOR,1:WHILE,0:ELSE,0:DO,0:IF,8:SWITCH,0:functions,0	219
0x40081f9	              0x55	                                push rbp	      2625	sequencer.c	FUNCTION_81
0x40081fa	          0x4889e5	                            mov rbp, rsp	      2625	sequencer.c	FUNCTION_81
0x40081fd	              0x53	                                push rbx	      2625	sequencer.c	FUNCTION_81
0x40081fe	    0x4881ecc80300	                          sub rsp, 0x3c8	      2625	sequencer.c	FUNCTION_81
0x4008205	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	      2625	sequencer.c	FUNCTION_81
0x400820c	    0x89b544fcffff	            mov dword [rbp - 0x3bc], esi	      2625	sequencer.c	FUNCTION_81
0x4008212	    0x48899538fcff	            mov qword [rbp - 0x3c8], rdx	      2625	sequencer.c	FUNCTION_81
0x4008219	    0x64488b042528	                mov rax, qword fs:[0x28]	      2625	sequencer.c	FUNCTION_81
0x4008222	        0x488945e8	             mov qword [rbp - 0x18], rax	      2625	sequencer.c	FUNCTION_81
0x4008226	            0x31c0	                            xor eax, eax	      2625	sequencer.c	FUNCTION_81
0x4008228	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	      2626	sequencer.c	FUNCTION_81
0x4008233	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	      2626	sequencer.c	FUNCTION_81
0x400823e	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	      2626	sequencer.c	FUNCTION_81
0x4008249	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	      2628	sequencer.c	FUNCTION_81
0x4008254	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 0	      2632	sequencer.c	FUNCTION_81
0x400825e	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x4008265	      0xbe04000000	                              mov esi, 4	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x400826a	          0x4889c7	                            mov rdi, rax	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x400826d	      0xe800000000	                          call 0x4008272	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x4008272	            0x85c0	                           test eax, eax	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x4008274	            0x790a	                           jns 0x4008280	      2634	sequencer.c	FUNCTION_81	IF_1	CALL_1
0x4008276	      0xb8ffffffff	                     mov eax, 0xffffffff	      2635	sequencer.c	FUNCTION_81	IF_1
0x400827b	      0xe997030000	                           jmp 0x4008617	      2635	sequencer.c	FUNCTION_81	IF_1
0x4008280	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	      2638	sequencer.c	FUNCTION_81	FOR_1
0x400828a	            0xeb3f	                           jmp 0x40082cb	      2638	sequencer.c	FUNCTION_81	FOR_1
0x400828c	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x4008292	          0x4863d0	                         movsxd rdx, eax	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x4008295	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x400829c	          0x4801d0	                            add rax, rdx	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x400829f	           0xfb600	                   movzx eax, byte [rax]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082a2	           0xfb6c0	                           movzx eax, al	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082a5	            0x4898	                                    cdqe	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082a7	     0xfb680000000	                   movzx eax, byte [rax]	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082ae	           0xfb6c0	                           movzx eax, al	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082b1	          0x83e001	                              and eax, 1	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082b4	            0x85c0	                           test eax, eax	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082b6	            0x740c	                            je 0x40082c4	      2639	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082b8	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2640	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082be	    0x898544fcffff	            mov dword [rbp - 0x3bc], eax	      2640	sequencer.c	FUNCTION_81	FOR_1	IF_2
0x40082c4	    0x83855cfcffff	              add dword [rbp - 0x3a4], 1	      2638	sequencer.c	FUNCTION_81	FOR_1
0x40082cb	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	      2638	sequencer.c	FUNCTION_81	FOR_1
0x40082d1	    0x3b8544fcffff	            cmp eax, dword [rbp - 0x3bc]	      2638	sequencer.c	FUNCTION_81	FOR_1
0x40082d7	            0x7cb3	                            jl 0x400828c	      2638	sequencer.c	FUNCTION_81	FOR_1
0x40082d9	    0x488b8d48fcff	            mov rcx, qword [rbp - 0x3b8]	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082e0	    0x8b9544fcffff	            mov edx, dword [rbp - 0x3bc]	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082e6	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082ed	      0xbe00000000	                              mov esi, 0	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082f2	          0x4889c7	                            mov rdi, rax	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082f5	      0xb800000000	                              mov eax, 0	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082fa	      0xe800000000	                          call 0x40082ff	      2642	sequencer.c	FUNCTION_81	CALL_2
0x40082ff	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x4008306	    0x488d95c0fcff	                  lea rdx, [rbp - 0x340]	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x400830d	          0x4889d6	                            mov rsi, rdx	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x4008310	          0x4889c7	                            mov rdi, rax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x4008313	      0xe800000000	                          call 0x4008318	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x4008318	            0x85c0	                           test eax, eax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x400831a	            0x746f	                            je 0x400838b	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x400831c	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x4008323	        0x488d500f	                    lea rdx, [rax + 0xf]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x4008327	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x400832e	          0x4889c6	                            mov rsi, rax	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x4008331	          0x4889d7	                            mov rdi, rdx	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x4008334	      0xe800000000	                          call 0x4008339	      2644	sequencer.c	FUNCTION_81	IF_3	CALL_5
0x4008339	            0x85c0	                           test eax, eax	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x400833b	            0x744e	                            je 0x400838b	      2643	sequencer.c	FUNCTION_81	IF_3	CALL_3
0x400833d	    0x488b9d80fcff	            mov rbx, qword [rbp - 0x380]	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008344	      0xbf00000000	                              mov edi, 0	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008349	      0xe85980ffff	                               call sym.	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x400834e	          0x4889de	                            mov rsi, rbx	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008351	          0x4889c7	                            mov rdi, rax	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008354	      0xb800000000	                              mov eax, 0	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008359	      0xe800000000	                          call 0x400835e	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x400835e	      0xe8dd7cffff	                    call sym.const_error	      2645	sequencer.c	FUNCTION_81	IF_3	CALL_6
0x4008363	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_7
0x400836a	          0x4889c7	                            mov rdi, rax	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_7
0x400836d	      0xe87a81ffff	             call sym.rollback_lock_file	      2646	sequencer.c	FUNCTION_81	IF_3	CALL_7
0x4008372	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x4008379	          0x4889c7	                            mov rdi, rax	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x400837c	      0xe800000000	                          call 0x4008381	      2647	sequencer.c	FUNCTION_81	IF_3	CALL_8
0x4008381	      0xb8ffffffff	                     mov eax, 0xffffffff	      2648	sequencer.c	FUNCTION_81	IF_3
0x4008386	      0xe98c020000	                           jmp 0x4008617	      2648	sequencer.c	FUNCTION_81	IF_3
0x400838b	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	      2651	sequencer.c	FUNCTION_81	CALL_9
0x4008392	      0xba00030000	                          mov edx, 0x300	      2651	sequencer.c	FUNCTION_81	CALL_9
0x4008397	      0xbe00000000	                              mov esi, 0	      2651	sequencer.c	FUNCTION_81	CALL_9
0x400839c	          0x4889c7	                            mov rdi, rax	      2651	sequencer.c	FUNCTION_81	CALL_9
0x400839f	      0xe800000000	                          call 0x40083a4	      2651	sequencer.c	FUNCTION_81	CALL_9
0x40083a4	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	      2652	sequencer.c	FUNCTION_81	CALL_10
0x40083ab	      0xbe00000000	                              mov esi, 0	      2652	sequencer.c	FUNCTION_81	CALL_10
0x40083b0	          0x4889c7	                            mov rdi, rax	      2652	sequencer.c	FUNCTION_81	CALL_10
0x40083b3	      0xe800000000	                          call 0x40083b8	      2652	sequencer.c	FUNCTION_81	CALL_10
0x40083b8	    0xc785e0feffff	              mov dword [rbp - 0x120], 1	      2653	sequencer.c	FUNCTION_81
0x40083c2	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2654	sequencer.c	FUNCTION_81
0x40083cd	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      2655	sequencer.c	FUNCTION_81
0x40083d8	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	      2656	sequencer.c	FUNCTION_81
0x40083e3	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	      2657	sequencer.c	FUNCTION_81
0x40083ed	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	      2658	sequencer.c	FUNCTION_81
0x40083f7	      0xbf00000000	                              mov edi, 0	      2660	sequencer.c	FUNCTION_81	IF_4
0x40083fc	      0xe800000000	                          call 0x4008401	      2660	sequencer.c	FUNCTION_81	IF_4
0x4008401	            0x85c0	                           test eax, eax	      2660	sequencer.c	FUNCTION_81	IF_4
0x4008403	            0x7442	                            je 0x4008447	      2660	sequencer.c	FUNCTION_81	IF_4
0x4008405	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_11
0x400840c	          0x4889c7	                            mov rdi, rax	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_11
0x400840f	      0xe8d880ffff	             call sym.rollback_lock_file	      2661	sequencer.c	FUNCTION_81	IF_4	CALL_11
0x4008414	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_12
0x400841b	          0x4889c7	                            mov rdi, rax	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_12
0x400841e	      0xe800000000	                          call 0x4008423	      2662	sequencer.c	FUNCTION_81	IF_4	CALL_12
0x4008423	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x400842a	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x400842d	      0xe84d8cffff	                    call sym.action_name	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x4008432	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x4008435	      0xe86d7fffff	                               call sym.	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x400843a	          0x4889c7	                            mov rdi, rax	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x400843d	      0xe800000000	                          call 0x4008442	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x4008442	      0xe9d0010000	                           jmp 0x4008617	      2663	sequencer.c	FUNCTION_81	IF_4	CALL_15
0x4008447	    0x488d95c0fcff	                  lea rdx, [rbp - 0x340]	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x400844e	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x4008455	          0x4889d6	                            mov rsi, rdx	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x4008458	          0x4889c7	                            mov rdi, rax	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x400845b	      0xe800000000	                          call 0x4008460	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x4008460	          0x4885c0	                           test rax, rax	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x4008463	            0x7568	                           jne 0x40084cd	      2666	sequencer.c	FUNCTION_81	IF_5	CALL_16
0x4008465	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x400846c	          0x4889c7	                            mov rdi, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x400846f	      0xe800000000	                          call 0x4008474	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008474	          0x4889c3	                            mov rbx, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008477	      0xbf00000000	                              mov edi, 0	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x400847c	      0xe8267fffff	                               call sym.	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008481	          0x4889de	                            mov rsi, rbx	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008484	          0x4889c7	                            mov rdi, rax	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008487	      0xb800000000	                              mov eax, 0	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x400848c	      0xe800000000	                          call 0x4008491	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008491	      0xe8aa7bffff	                    call sym.const_error	      2667	sequencer.c	FUNCTION_81	IF_5	CALL_18
0x4008496	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x400849d	          0x4889c7	                            mov rdi, rax	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x40084a0	      0xe84780ffff	             call sym.rollback_lock_file	      2668	sequencer.c	FUNCTION_81	IF_5	CALL_19
0x40084a5	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_20
0x40084ac	          0x4889c7	                            mov rdi, rax	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_20
0x40084af	      0xe800000000	                          call 0x40084b4	      2669	sequencer.c	FUNCTION_81	IF_5	CALL_20
0x40084b4	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_21
0x40084bb	          0x4889c7	                            mov rdi, rax	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_21
0x40084be	      0xe800000000	                          call 0x40084c3	      2670	sequencer.c	FUNCTION_81	IF_5	CALL_21
0x40084c3	      0xb8ffffffff	                     mov eax, 0xffffffff	      2671	sequencer.c	FUNCTION_81	IF_5
0x40084c8	      0xe94a010000	                           jmp 0x4008617	      2671	sequencer.c	FUNCTION_81	IF_5
0x40084cd	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084d4	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084db	          0x4889c6	                            mov rsi, rax	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084de	      0xbf01000000	                              mov edi, 1	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084e3	      0xe800000000	                          call 0x40084e8	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084e8	            0x85c0	                           test eax, eax	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084ea	            0x7437	                            je 0x4008523	      2674	sequencer.c	FUNCTION_81	IF_6	CALL_22
0x40084ec	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_23
0x40084f3	          0x4889c7	                            mov rdi, rax	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_23
0x40084f6	      0xe8f17fffff	             call sym.rollback_lock_file	      2675	sequencer.c	FUNCTION_81	IF_6	CALL_23
0x40084fb	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_24
0x4008502	          0x4889c7	                            mov rdi, rax	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_24
0x4008505	      0xe800000000	                          call 0x400850a	      2676	sequencer.c	FUNCTION_81	IF_6	CALL_24
0x400850a	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_25
0x4008511	          0x4889c7	                            mov rdi, rax	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_25
0x4008514	      0xe800000000	                          call 0x4008519	      2677	sequencer.c	FUNCTION_81	IF_6	CALL_25
0x4008519	      0xb8ffffffff	                     mov eax, 0xffffffff	      2678	sequencer.c	FUNCTION_81	IF_6
0x400851e	      0xe9f4000000	                           jmp 0x4008617	      2678	sequencer.c	FUNCTION_81	IF_6
0x4008523	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2681	sequencer.c	FUNCTION_81	CALL_26
0x400852a	          0x4889c7	                            mov rdi, rax	      2681	sequencer.c	FUNCTION_81	CALL_26
0x400852d	      0xe800000000	                          call 0x4008532	      2681	sequencer.c	FUNCTION_81	CALL_26
0x4008532	    0x48898568fcff	            mov qword [rbp - 0x398], rax	      2681	sequencer.c	FUNCTION_81	CALL_26
0x4008539	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	      2682	sequencer.c	FUNCTION_81	CALL_27
0x4008540	          0x4889c6	                            mov rsi, rax	      2682	sequencer.c	FUNCTION_81	CALL_27
0x4008543	      0xbf00000000	                              mov edi, 0	      2682	sequencer.c	FUNCTION_81	CALL_27
0x4008548	      0xe800000000	                          call 0x400854d	      2682	sequencer.c	FUNCTION_81	CALL_27
0x400854d	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x4008554	      0xba01000000	                              mov edx, 1	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x4008559	          0x4889c6	                            mov rsi, rax	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x400855c	      0xbf00000000	                              mov edi, 0	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x4008561	      0xe800000000	                          call 0x4008566	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x4008566	            0x85c0	                           test eax, eax	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x4008568	            0x7922	                           jns 0x400858c	      2684	sequencer.c	FUNCTION_81	IF_7	CALL_28
0x400856a	      0xbf00000000	                              mov edi, 0	      2685	sequencer.c	FUNCTION_81	CALL_29
0x400856f	      0xe8337effff	                               call sym.	      2685	sequencer.c	FUNCTION_81	CALL_29
0x4008574	          0x4889c7	                            mov rdi, rax	      2685	sequencer.c	FUNCTION_81	CALL_29
0x4008577	      0xb800000000	                              mov eax, 0	      2685	sequencer.c	FUNCTION_81	CALL_29
0x400857c	      0xe800000000	                          call 0x4008581	      2685	sequencer.c	FUNCTION_81	CALL_29
0x4008581	      0xe8ba7affff	                    call sym.const_error	      2685	sequencer.c	FUNCTION_81	CALL_29
0x4008586	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      2685	sequencer.c	FUNCTION_81	CALL_29
0x400858c	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	      2686	sequencer.c	FUNCTION_81	CALL_30
0x4008593	          0x4889c7	                            mov rdi, rax	      2686	sequencer.c	FUNCTION_81	CALL_30
0x4008596	      0xe800000000	                          call 0x400859b	      2686	sequencer.c	FUNCTION_81	CALL_30
0x400859b	    0x83bd58fcffff	              cmp dword [rbp - 0x3a8], 0	      2688	sequencer.c	FUNCTION_81	IF_8
0x40085a2	            0x755e	                           jne 0x4008602	      2688	sequencer.c	FUNCTION_81	IF_8
0x40085a4	    0x488b8d48fcff	            mov rcx, qword [rbp - 0x3b8]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085ab	    0x8b9544fcffff	            mov edx, dword [rbp - 0x3bc]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085b1	    0x488b8538fcff	            mov rax, qword [rbp - 0x3c8]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085b8	          0x4989c8	                             mov r8, rcx	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085bb	            0x89d1	                            mov ecx, edx	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085bd	      0xba00000000	                              mov edx, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085c2	      0xbe00000000	                              mov esi, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085c7	          0x4889c7	                            mov rdi, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085ca	      0xb800000000	                              mov eax, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085cf	      0xe8ff0d0000	                 call sym.reflog_message	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085d4	          0x4889c7	                            mov rdi, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085d7	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085de	    0x41b900000000	                              mov r9d, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085e4	    0x41b800000000	                              mov r8d, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085ea	      0xb900000000	                              mov ecx, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085ef	          0x4889c2	                            mov rdx, rax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085f2	      0xbe00000000	                              mov esi, 0	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085f7	      0xe800000000	                          call 0x40085fc	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x40085fc	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      2689	sequencer.c	FUNCTION_81	IF_8	CALL_32
0x4008602	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	      2693	sequencer.c	FUNCTION_81	CALL_33
0x4008609	          0x4889c7	                            mov rdi, rax	      2693	sequencer.c	FUNCTION_81	CALL_33
0x400860c	      0xe800000000	                          call 0x4008611	      2693	sequencer.c	FUNCTION_81	CALL_33
0x4008611	    0x8b8558fcffff	            mov eax, dword [rbp - 0x3a8]	      2694	sequencer.c	FUNCTION_81
0x4008617	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2695	sequencer.c	FUNCTION_81
0x400861b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2695	sequencer.c	FUNCTION_81
0x4008624	            0x7405	                            je 0x400862b	      2695	sequencer.c	FUNCTION_81
0x4008626	      0xe800000000	                          call 0x400862b	      2695	sequencer.c	FUNCTION_81
0x400862b	    0x4881c4c80300	                          add rsp, 0x3c8	      2695	sequencer.c	FUNCTION_81
0x4008632	              0x5b	                                 pop rbx	      2695	sequencer.c	FUNCTION_81
0x4008633	              0x5d	                                 pop rbp	      2695	sequencer.c	FUNCTION_81
0x4008634	              0xc3	                                     ret	      2695	sequencer.c	FUNCTION_81
sequencer_pick_revisions	CALL,24:FOR,1:WHILE,0:ELSE,1:DO,0:IF,11:SWITCH,0:functions,0	222
0x400aee3	              0x55	                                push rbp	      3434	sequencer.c	FUNCTION_92
0x400aee4	          0x4889e5	                            mov rbp, rsp	      3434	sequencer.c	FUNCTION_92
0x400aee7	              0x53	                                push rbx	      3434	sequencer.c	FUNCTION_92
0x400aee8	    0x4881ecb80000	                           sub rsp, 0xb8	      3434	sequencer.c	FUNCTION_92
0x400aeef	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3434	sequencer.c	FUNCTION_92
0x400aef6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	sequencer.c	FUNCTION_92
0x400aeff	        0x488945e8	             mov qword [rbp - 0x18], rax	      3434	sequencer.c	FUNCTION_92
0x400af03	            0x31c0	                            xor eax, eax	      3434	sequencer.c	FUNCTION_92
0x400af05	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3435	sequencer.c	FUNCTION_92
0x400af0c	      0xb800000000	                              mov eax, 0	      3435	sequencer.c	FUNCTION_92
0x400af11	      0xb90b000000	                            mov ecx, 0xb	      3435	sequencer.c	FUNCTION_92
0x400af16	          0x4889d7	                            mov rdi, rdx	      3435	sequencer.c	FUNCTION_92
0x400af19	          0xf348ab	              rep stosq qword [rdi], rax	      3435	sequencer.c	FUNCTION_92
0x400af1c	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3435	sequencer.c	FUNCTION_92
0x400af24	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af2b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af32	          0x4885c0	                           test rax, rax	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af35	            0x7519	                           jne 0x400af50	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af37	      0xb900000000	                              mov ecx, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af3c	      0xba6f0d0000	                          mov edx, 0xd6f	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af41	      0xbe00000000	                              mov esi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af46	      0xbf00000000	                              mov edi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af4b	      0xe800000000	                          call 0x400af50	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400af50	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400af57	          0x4889c7	                            mov rdi, rax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400af5a	      0xe82da3ffff	         call sym.read_and_refresh_cache	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400af5f	            0x85c0	                           test eax, eax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400af61	            0x740a	                            je 0x400af6d	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400af63	      0xb8ffffffff	                     mov eax, 0xffffffff	      3441	sequencer.c	FUNCTION_92	IF_1
0x400af68	      0xe941030000	                           jmp 0x400b2ae	      3441	sequencer.c	FUNCTION_92	IF_1
0x400af6d	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400af77	      0xe90b010000	                           jmp 0x400b087	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400af7c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af83	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af8a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af8e	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af94	          0x4863d2	                         movsxd rdx, edx	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af97	        0x48c1e205	                              shl rdx, 5	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af9b	          0x4801d0	                            add rax, rdx	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400af9e	        0x488b4008	                mov rax, qword [rax + 8]	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400afa2	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400afa9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400afb0	           0xfb600	                   movzx eax, byte [rax]	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400afb3	            0x84c0	                             test al, al	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400afb5	     0xf84c4000000	                            je 0x400b07f	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400afbb	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afbf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afc6	          0x4889d6	                            mov rsi, rdx	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afc9	          0x4889c7	                            mov rdi, rax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afcc	      0xe800000000	                          call 0x400afd1	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afd1	            0x85c0	                           test eax, eax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afd3	            0x757c	                           jne 0x400b051	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400afd5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afd9	      0xbe01000000	                              mov esi, 1	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afde	          0x4889c7	                            mov rdi, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afe1	      0xe800000000	                          call 0x400afe6	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afe6	          0x4885c0	                           test rax, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afe9	     0xf8591000000	                           jne 0x400b080	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400afef	    0x488b05000000	            mov rax, qword [0x0400aff6] 	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400aff6	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400affa	      0xba00000000	                              mov edx, 0	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400afff	          0x4889ce	                            mov rsi, rcx	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400b002	          0x4889c7	                            mov rdi, rax	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400b005	      0xe800000000	                          call 0x400b00a	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400b00a	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400b010	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b016	            0x89c7	                            mov edi, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b018	      0xe800000000	                          call 0x400b01d	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b01d	          0x4889c3	                            mov rbx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b020	      0xbf00000000	                              mov edi, 0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b025	      0xe87d53ffff	                               call sym.	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b02a	          0x4889c1	                            mov rcx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b02d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b034	          0x4889da	                            mov rdx, rbx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b037	          0x4889c6	                            mov rsi, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b03a	          0x4889cf	                            mov rdi, rcx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b03d	      0xb800000000	                              mov eax, 0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b042	      0xe800000000	                          call 0x400b047	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b047	      0xe8f44fffff	                    call sym.const_error	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b04c	      0xe95d020000	                           jmp 0x400b2ae	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400b051	      0xbf00000000	                              mov edi, 0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b056	      0xe84c53ffff	                               call sym.	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b05b	          0x4889c2	                            mov rdx, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b05e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b065	          0x4889c6	                            mov rsi, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b068	          0x4889d7	                            mov rdi, rdx	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b06b	      0xb800000000	                              mov eax, 0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b070	      0xe800000000	                          call 0x400b075	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b075	      0xe8c64fffff	                    call sym.const_error	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b07a	      0xe92f020000	                           jmp 0x400b2ae	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400b07f	              0x90	                                     nop	      3449	sequencer.c	FUNCTION_92	FOR_1	IF_2
0x400b080	    0x838554ffffff	               add dword [rbp - 0xac], 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b087	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b08e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b095	          0x8b5008	                mov edx, dword [rax + 8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b098	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b09e	            0x39c2	                            cmp edx, eax	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b0a0	     0xf87d6feffff	                            ja 0x400af7c	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400b0a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0ad	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0b4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0b7	          0x83f801	                              cmp eax, 1	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0ba	     0xf850c010000	                           jne 0x400b1cc	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0c0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0c7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0ce	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0d2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0d5	          0x83f805	                              cmp eax, 5	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0d8	     0xf85ee000000	                           jne 0x400b1cc	      3470	sequencer.c	FUNCTION_92	IF_5
0x400b0de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3472	sequencer.c	FUNCTION_92	IF_5
0x400b0e5	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3472	sequencer.c	FUNCTION_92	IF_5
0x400b0ec	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0f0	          0x83e030	                           and eax, 0x30	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0f3	            0x84c0	                             test al, al	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0f5	     0xf84d1000000	                            je 0x400b1cc	      3471	sequencer.c	FUNCTION_92	IF_5
0x400b0fb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3473	sequencer.c	FUNCTION_92	IF_5
0x400b102	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3473	sequencer.c	FUNCTION_92	IF_5
0x400b109	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3473	sequencer.c	FUNCTION_92	IF_5
0x400b10d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3473	sequencer.c	FUNCTION_92	IF_5
0x400b110	            0x85c0	                           test eax, eax	      3472	sequencer.c	FUNCTION_92	IF_5
0x400b112	     0xf85b4000000	                           jne 0x400b1cc	      3472	sequencer.c	FUNCTION_92	IF_5
0x400b118	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b11f	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b126	          0x4889c7	                            mov rdi, rax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b129	      0xe800000000	                          call 0x400b12e	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b12e	            0x85c0	                           test eax, eax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b130	            0x7421	                            je 0x400b153	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b132	      0xbf00000000	                              mov edi, 0	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b137	      0xe86b52ffff	                               call sym.	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b13c	          0x4889c7	                            mov rdi, rax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b13f	      0xb800000000	                              mov eax, 0	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b144	      0xe800000000	                          call 0x400b149	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b149	      0xe8f24effff	                    call sym.const_error	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b14e	      0xe95b010000	                           jmp 0x400b2ae	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b153	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b15a	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b161	          0x4889c7	                            mov rdi, rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b164	      0xe800000000	                          call 0x400b169	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b169	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b170	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b178	            0x741b	                            je 0x400b195	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b17a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b181	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b188	          0x4889c7	                            mov rdi, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b18b	      0xe800000000	                          call 0x400b190	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b190	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b193	            0x7419	                            je 0x400b1ae	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b195	      0xbf00000000	                              mov edi, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b19a	      0xb800000000	                              mov eax, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b19f	      0xe800000000	                          call 0x400b1a4	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b1a4	      0xe8974effff	                    call sym.const_error	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b1a9	      0xe900010000	                           jmp 0x400b2ae	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b1ae	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1b5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1bc	          0x4889d6	                            mov rsi, rdx	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1bf	          0x4889c7	                            mov rdi, rax	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1c2	      0xe8c9fcffff	                    call sym.single_pick	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1c7	      0xe9e2000000	                           jmp 0x400b2ae	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b1cc	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1d3	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1da	          0x4889d6	                            mov rsi, rdx	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1dd	          0x4889c7	                            mov rdi, rax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1e0	      0xe8beb6ffff	        call sym.walk_revs_populate_todo	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1e5	            0x85c0	                           test eax, eax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1e7	            0x7509	                           jne 0x400b1f2	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1e9	      0xe81eb8ffff	                 call sym.create_seq_dir	      3490	sequencer.c	FUNCTION_92	IF_8	CALL_16
0x400b1ee	            0x85c0	                           test eax, eax	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1f0	            0x790a	                           jns 0x400b1fc	      3489	sequencer.c	FUNCTION_92	IF_8	CALL_15
0x400b1f2	      0xb8ffffffff	                     mov eax, 0xffffffff	      3491	sequencer.c	FUNCTION_92	IF_8
0x400b1f7	      0xe9b2000000	                           jmp 0x400b2ae	      3491	sequencer.c	FUNCTION_92	IF_8
0x400b1fc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b200	          0x4889c6	                            mov rsi, rax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b203	      0xbf00000000	                              mov edi, 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b208	      0xe800000000	                          call 0x400b20d	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b20d	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b20f	            0x742b	                            je 0x400b23c	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b211	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b218	            0x8b00	                    mov eax, dword [rax]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b21a	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b21c	            0x751e	                           jne 0x400b23c	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400b21e	      0xbf00000000	                              mov edi, 0	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b223	      0xe87f51ffff	                               call sym.	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b228	          0x4889c7	                            mov rdi, rax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b22b	      0xb800000000	                              mov eax, 0	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b230	      0xe800000000	                          call 0x400b235	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b235	      0xe8064effff	                    call sym.const_error	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b23a	            0xeb72	                           jmp 0x400b2ae	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400b23c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b240	          0x4889c7	                            mov rdi, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b243	      0xe800000000	                          call 0x400b248	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b248	          0x4889c7	                            mov rdi, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b24b	      0xe85bb8ffff	                      call sym.save_head	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b250	            0x85c0	                           test eax, eax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b252	            0x7407	                            je 0x400b25b	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400b254	      0xb8ffffffff	                     mov eax, 0xffffffff	      3495	sequencer.c	FUNCTION_92	IF_10
0x400b259	            0xeb53	                           jmp 0x400b2ae	      3495	sequencer.c	FUNCTION_92	IF_10
0x400b25b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400b262	          0x4889c7	                            mov rdi, rax	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400b265	      0xe8c1c0ffff	                      call sym.save_opts	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400b26a	            0x85c0	                           test eax, eax	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400b26c	            0x7407	                            je 0x400b275	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400b26e	      0xb8ffffffff	                     mov eax, 0xffffffff	      3497	sequencer.c	FUNCTION_92	IF_11
0x400b273	            0xeb39	                           jmp 0x400b2ae	      3497	sequencer.c	FUNCTION_92	IF_11
0x400b275	      0xe8e763ffff	       call sym.update_abort_safety_file	      3498	sequencer.c	FUNCTION_92	CALL_22
0x400b27a	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b281	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b288	          0x4889d6	                            mov rsi, rdx	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b28b	          0x4889c7	                            mov rdi, rax	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b28e	      0xe87fe2ffff	                   call sym.pick_commits	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b293	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400b299	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3500	sequencer.c	FUNCTION_92	CALL_24
0x400b2a0	          0x4889c7	                            mov rdi, rax	      3500	sequencer.c	FUNCTION_92	CALL_24
0x400b2a3	      0xe80aa1ffff	              call sym.todo_list_release	      3500	sequencer.c	FUNCTION_92	CALL_24
0x400b2a8	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      3501	sequencer.c	FUNCTION_92
0x400b2ae	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3502	sequencer.c	FUNCTION_92
0x400b2b2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3502	sequencer.c	FUNCTION_92
0x400b2bb	            0x7405	                            je 0x400b2c2	      3502	sequencer.c	FUNCTION_92
0x400b2bd	      0xe800000000	                          call 0x400b2c2	      3502	sequencer.c	FUNCTION_92
0x400b2c2	    0x4881c4b80000	                           add rsp, 0xb8	      3502	sequencer.c	FUNCTION_92
0x400b2c9	              0x5b	                                 pop rbx	      3502	sequencer.c	FUNCTION_92
0x400b2ca	              0x5d	                                 pop rbp	      3502	sequencer.c	FUNCTION_92
0x400b2cb	              0xc3	                                     ret	      3502	sequencer.c	FUNCTION_92
do_recursive_merge	CALL,20:FOR,1:WHILE,0:ELSE,0:DO,0:IF,6:SWITCH,0:functions,0	162
0x40019af	              0x55	                                push rbp	       510	sequencer.c	FUNCTION_21
0x40019b0	          0x4889e5	                            mov rbp, rsp	       510	sequencer.c	FUNCTION_21
0x40019b3	              0x53	                                push rbx	       510	sequencer.c	FUNCTION_21
0x40019b4	    0x4881ec280500	                          sub rsp, 0x528	       510	sequencer.c	FUNCTION_21
0x40019bb	    0x4889bd08fbff	            mov qword [rbp - 0x4f8], rdi	       510	sequencer.c	FUNCTION_21
0x40019c2	    0x4889b500fbff	            mov qword [rbp - 0x500], rsi	       510	sequencer.c	FUNCTION_21
0x40019c9	    0x488995f8faff	            mov qword [rbp - 0x508], rdx	       510	sequencer.c	FUNCTION_21
0x40019d0	    0x48898df0faff	            mov qword [rbp - 0x510], rcx	       510	sequencer.c	FUNCTION_21
0x40019d7	    0x4c8985e8faff	             mov qword [rbp - 0x518], r8	       510	sequencer.c	FUNCTION_21
0x40019de	    0x4c898de0faff	             mov qword [rbp - 0x520], r9	       510	sequencer.c	FUNCTION_21
0x40019e5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       510	sequencer.c	FUNCTION_21
0x40019e9	    0x488985d8faff	            mov qword [rbp - 0x528], rax	       510	sequencer.c	FUNCTION_21
0x40019f0	    0x64488b042528	                mov rax, qword fs:[0x28]	       510	sequencer.c	FUNCTION_21
0x40019f9	        0x488945e8	             mov qword [rbp - 0x18], rax	       510	sequencer.c	FUNCTION_21
0x40019fd	            0x31c0	                            xor eax, eax	       510	sequencer.c	FUNCTION_21
0x40019ff	    0x48c78520fbff	              mov qword [rbp - 0x4e0], 0	       515	sequencer.c	FUNCTION_21
0x4001a0a	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a11	      0xbe04000000	                              mov esi, 4	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a16	          0x4889c7	                            mov rdi, rax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a19	      0xe800000000	                          call 0x4001a1e	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a1e	            0x85c0	                           test eax, eax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a20	            0x790a	                           jns 0x4001a2c	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4001a22	      0xb8ffffffff	                     mov eax, 0xffffffff	       518	sequencer.c	FUNCTION_21	IF_1
0x4001a27	      0xe97b020000	                           jmp 0x4001ca7	       518	sequencer.c	FUNCTION_21	IF_1
0x4001a2c	      0xbf00000000	                              mov edi, 0	       520	sequencer.c	FUNCTION_21
0x4001a31	      0xe800000000	                          call 0x4001a36	       520	sequencer.c	FUNCTION_21
0x4001a36	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       522	sequencer.c	FUNCTION_21	CALL_2
0x4001a3d	          0x4889c7	                            mov rdi, rax	       522	sequencer.c	FUNCTION_21	CALL_2
0x4001a40	      0xe800000000	                          call 0x4001a45	       522	sequencer.c	FUNCTION_21	CALL_2
0x4001a45	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	       523	sequencer.c	FUNCTION_21
0x4001a4d	            0x7409	                            je 0x4001a58	       523	sequencer.c	FUNCTION_21
0x4001a4f	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       523	sequencer.c	FUNCTION_21
0x4001a56	            0xeb05	                           jmp 0x4001a5d	       523	sequencer.c	FUNCTION_21
0x4001a58	      0xb800000000	                              mov eax, 0	       523	sequencer.c	FUNCTION_21
0x4001a5d	    0x48898550fbff	            mov qword [rbp - 0x4b0], rax	       523	sequencer.c	FUNCTION_21
0x4001a64	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 0	       524	sequencer.c	FUNCTION_21
0x4001a6f	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	       525	sequencer.c	FUNCTION_21
0x4001a77	            0x7409	                            je 0x4001a82	       525	sequencer.c	FUNCTION_21
0x4001a79	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       525	sequencer.c	FUNCTION_21
0x4001a80	            0xeb05	                           jmp 0x4001a87	       525	sequencer.c	FUNCTION_21
0x4001a82	      0xb800000000	                              mov eax, 0	       525	sequencer.c	FUNCTION_21
0x4001a87	    0x48898560fbff	            mov qword [rbp - 0x4a0], rax	       525	sequencer.c	FUNCTION_21
0x4001a8e	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4001a95	          0x4889c7	                            mov rdi, rax	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4001a98	      0xe82bf2ffff	                    call sym.is_rebase_i	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4001a9d	            0x85c0	                           test eax, eax	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4001a9f	            0x740a	                            je 0x4001aab	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4001aa1	    0xc78578fbffff	              mov dword [rbp - 0x488], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4001aab	    0xc785a0fbffff	              mov dword [rbp - 0x460], 1	       528	sequencer.c	FUNCTION_21
0x4001ab5	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	       530	sequencer.c	FUNCTION_21	CALL_4
0x4001abc	          0x4889c7	                            mov rdi, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4001abf	      0xe800000000	                          call 0x4001ac4	       530	sequencer.c	FUNCTION_21	CALL_4
0x4001ac4	    0x48898538fbff	            mov qword [rbp - 0x4c8], rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4001acb	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001ad3	            0x7411	                            je 0x4001ae6	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001ad5	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001adc	          0x4889c7	                            mov rdi, rax	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001adf	      0xe800000000	                          call 0x4001ae4	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001ae4	            0xeb05	                           jmp 0x4001aeb	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001ae6	      0xe8bdfaffff	                     call sym.empty_tree	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001aeb	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       531	sequencer.c	FUNCTION_21	CALL_6
0x4001af2	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001afa	            0x7411	                            je 0x4001b0d	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001afc	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b03	          0x4889c7	                            mov rdi, rax	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b06	      0xe800000000	                          call 0x4001b0b	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b0b	            0xeb05	                           jmp 0x4001b12	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b0d	      0xe896faffff	                     call sym.empty_tree	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b12	    0x48898548fbff	            mov qword [rbp - 0x4b8], rax	       532	sequencer.c	FUNCTION_21	CALL_8
0x4001b19	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b20	        0x488b4048	            mov rax, qword [rax + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b24	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b2b	            0xeb24	                           jmp 0x4001b51	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b2d	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b34	          0x488b10	                    mov rdx, qword [rax]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b37	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b3e	          0x4889d6	                            mov rsi, rdx	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b41	          0x4889c7	                            mov rdi, rax	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b44	      0xe800000000	                          call 0x4001b49	       535	sequencer.c	FUNCTION_21	CALL_9
0x4001b49	    0x48838530fbff	              add qword [rbp - 0x4d0], 8	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b51	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b58	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b5c	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b63	        0x488b4050	            mov rax, qword [rax + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b67	        0x48c1e003	                              shl rax, 3	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b6b	          0x4801d0	                            add rax, rdx	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b6e	    0x483b8530fbff	            cmp rax, qword [rbp - 0x4d0]	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b75	            0x75b6	                           jne 0x4001b2d	       534	sequencer.c	FUNCTION_21	FOR_1
0x4001b77	    0x488dbd28fbff	                  lea rdi, [rbp - 0x4d8]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b7e	    0x488b8d48fbff	            mov rcx, qword [rbp - 0x4b8]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b85	    0x488b9540fbff	            mov rdx, qword [rbp - 0x4c0]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b8c	    0x488bb538fbff	            mov rsi, qword [rbp - 0x4c8]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b93	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b9a	          0x4989f8	                             mov r8, rdi	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001b9d	          0x4889c7	                            mov rdi, rax	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001ba0	      0xe800000000	                          call 0x4001ba5	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001ba5	    0x89851cfbffff	            mov dword [rbp - 0x4e4], eax	       537	sequencer.c	FUNCTION_21	CALL_10
0x4001bab	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bb2	          0x4889c7	                            mov rdi, rax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bb5	      0xe80ef1ffff	                    call sym.is_rebase_i	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bba	            0x85c0	                           test eax, eax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bbc	            0x7422	                            je 0x4001be0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bbe	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bc5	            0x7f19	                            jg 0x4001be0	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4001bc7	    0x488b15000000	            mov rdx, qword [0x04001bce] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4001bce	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	       541	sequencer.c	FUNCTION_21	CALL_12
0x4001bd5	          0x4889d6	                            mov rsi, rdx	       541	sequencer.c	FUNCTION_21	CALL_12
0x4001bd8	          0x4889c7	                            mov rdi, rax	       541	sequencer.c	FUNCTION_21	CALL_12
0x4001bdb	      0xe800000000	                          call 0x4001be0	       541	sequencer.c	FUNCTION_21	CALL_12
0x4001be0	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       542	sequencer.c	FUNCTION_21	CALL_13
0x4001be7	        0x4883c058	                           add rax, 0x58	       542	sequencer.c	FUNCTION_21	CALL_13
0x4001beb	          0x4889c7	                            mov rdi, rax	       542	sequencer.c	FUNCTION_21	CALL_13
0x4001bee	      0xe800000000	                          call 0x4001bf3	       542	sequencer.c	FUNCTION_21	CALL_13
0x4001bf3	    0x8b859cfbffff	            mov eax, dword [rbp - 0x464]	       543	sequencer.c	FUNCTION_21	CALL_14
0x4001bf9	      0xba00000000	                              mov edx, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4001bfe	            0x89c6	                            mov esi, eax	       543	sequencer.c	FUNCTION_21	CALL_14
0x4001c00	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x4001c05	      0xe800000000	                          call 0x4001c0a	       543	sequencer.c	FUNCTION_21	CALL_14
0x4001c0a	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       544	sequencer.c	FUNCTION_21	IF_4
0x4001c11	            0x7917	                           jns 0x4001c2a	       544	sequencer.c	FUNCTION_21	IF_4
0x4001c13	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       545	sequencer.c	FUNCTION_21	IF_4	CALL_15
0x4001c1a	          0x4889c7	                            mov rdi, rax	       545	sequencer.c	FUNCTION_21	IF_4	CALL_15
0x4001c1d	      0xe8cae8ffff	             call sym.rollback_lock_file	       545	sequencer.c	FUNCTION_21	IF_4	CALL_15
0x4001c22	    0x8b851cfbffff	            mov eax, dword [rbp - 0x4e4]	       546	sequencer.c	FUNCTION_21	IF_4
0x4001c28	            0xeb7d	                           jmp 0x4001ca7	       546	sequencer.c	FUNCTION_21	IF_4
0x4001c2a	    0x488d8520fbff	                  lea rax, [rbp - 0x4e0]	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c31	      0xba03000000	                              mov edx, 3	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c36	          0x4889c6	                            mov rsi, rax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c39	      0xbf00000000	                              mov edi, 0	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c3e	      0xe800000000	                          call 0x4001c43	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c43	            0x85c0	                           test eax, eax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c45	            0x743b	                            je 0x4001c82	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4001c47	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c4e	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c51	      0xe829f4ffff	                    call sym.action_name	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c56	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c59	      0xe849e7ffff	                               call sym.	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c5e	          0x4889c3	                            mov rbx, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c61	      0xbf00000000	                              mov edi, 0	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c66	      0xe83ce7ffff	                               call sym.	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c6b	          0x4889de	                            mov rsi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c6e	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c71	      0xb800000000	                              mov eax, 0	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c76	      0xe800000000	                          call 0x4001c7b	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c7b	      0xe8c0e3ffff	                    call sym.const_error	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c80	            0xeb25	                           jmp 0x4001ca7	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4001c82	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       558	sequencer.c	FUNCTION_21	IF_6
0x4001c89	            0x750f	                           jne 0x4001c9a	       558	sequencer.c	FUNCTION_21	IF_6
0x4001c8b	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	       559	sequencer.c	FUNCTION_21	CALL_20
0x4001c92	          0x4889c7	                            mov rdi, rax	       559	sequencer.c	FUNCTION_21	CALL_20
0x4001c95	      0xe800000000	                          call 0x4001c9a	       559	sequencer.c	FUNCTION_21	CALL_20
0x4001c9a	    0x83bd1cfbffff	              cmp dword [rbp - 0x4e4], 0	       561	sequencer.c	FUNCTION_21
0x4001ca1	           0xf94c0	                                 sete al	       561	sequencer.c	FUNCTION_21
0x4001ca4	           0xfb6c0	                           movzx eax, al	       561	sequencer.c	FUNCTION_21
0x4001ca7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       562	sequencer.c	FUNCTION_21
0x4001cab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       562	sequencer.c	FUNCTION_21
0x4001cb4	            0x7405	                            je 0x4001cbb	       562	sequencer.c	FUNCTION_21
0x4001cb6	      0xe800000000	                          call 0x4001cbb	       562	sequencer.c	FUNCTION_21
0x4001cbb	    0x4881c4280500	                          add rsp, 0x528	       562	sequencer.c	FUNCTION_21
0x4001cc2	              0x5b	                                 pop rbx	       562	sequencer.c	FUNCTION_21
0x4001cc3	              0x5d	                                 pop rbp	       562	sequencer.c	FUNCTION_21
0x4001cc4	              0xc3	                                     ret	       562	sequencer.c	FUNCTION_21
print_advice	CALL,8:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	39
0x4001252	              0x55	                                push rbp	       341	sequencer.c	FUNCTION_13
0x4001253	          0x4889e5	                            mov rbp, rsp	       341	sequencer.c	FUNCTION_13
0x4001256	        0x4883ec20	                           sub rsp, 0x20	       341	sequencer.c	FUNCTION_13
0x400125a	          0x897dec	             mov dword [rbp - 0x14], edi	       341	sequencer.c	FUNCTION_13
0x400125d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       341	sequencer.c	FUNCTION_13
0x4001261	      0xbf00000000	                              mov edi, 0	       342	sequencer.c	FUNCTION_13	CALL_1
0x4001266	      0xe800000000	                          call 0x400126b	       342	sequencer.c	FUNCTION_13	CALL_1
0x400126b	        0x488945f8	                mov qword [rbp - 8], rax	       342	sequencer.c	FUNCTION_13	CALL_1
0x400126f	      0x48837df800	                  cmp qword [rbp - 8], 0	       344	sequencer.c	FUNCTION_13	IF_1
0x4001274	            0x742c	                            je 0x40012a2	       344	sequencer.c	FUNCTION_13	IF_1
0x4001276	    0x488b05000000	            mov rax, qword [0x0400127d] 	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x400127d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x4001281	      0xbe00000000	                              mov esi, 0	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x4001286	          0x4889c7	                            mov rdi, rax	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x4001289	      0xb800000000	                              mov eax, 0	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x400128e	      0xe800000000	                          call 0x4001293	       345	sequencer.c	FUNCTION_13	IF_1	CALL_2
0x4001293	      0xe800000000	                          call 0x4001298	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x4001298	          0x4889c7	                            mov rdi, rax	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x400129b	      0xe800000000	                          call 0x40012a0	       351	sequencer.c	FUNCTION_13	IF_1	CALL_4
0x40012a0	            0xeb41	                           jmp 0x40012e3	       352	sequencer.c	FUNCTION_13	IF_1
0x40012a2	        0x837dec00	               cmp dword [rbp - 0x14], 0	       355	sequencer.c	FUNCTION_13	IF_2
0x40012a6	            0x743b	                            je 0x40012e3	       355	sequencer.c	FUNCTION_13	IF_2
0x40012a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x40012ac	          0x8b400c	              mov eax, dword [rax + 0xc]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x40012af	            0x85c0	                           test eax, eax	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x40012b1	            0x7419	                            je 0x40012cc	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x40012b3	      0xbf00000000	                              mov edi, 0	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012b8	      0xe8eaf0ffff	                               call sym.	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012bd	          0x4889c7	                            mov rdi, rax	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012c0	      0xb800000000	                              mov eax, 0	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012c5	      0xe800000000	                          call 0x40012ca	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012ca	            0xeb17	                           jmp 0x40012e3	       357	sequencer.c	FUNCTION_13	IF_2	IF_3	CALL_6
0x40012cc	      0xbf00000000	                              mov edi, 0	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x40012d1	      0xe8d1f0ffff	                               call sym.	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x40012d6	          0x4889c7	                            mov rdi, rax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x40012d9	      0xb800000000	                              mov eax, 0	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x40012de	      0xe800000000	                          call 0x40012e3	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_8
0x40012e3	              0xc9	                                   leave	       364	sequencer.c	FUNCTION_13
0x40012e4	              0xc3	                                     ret	       364	sequencer.c	FUNCTION_13
hashcmp	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	13
0x40003d3	              0x55	                                push rbp	       974	cache.h	FUNCTION_113
0x40003d4	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_113
0x40003d7	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_113
0x40003db	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_113
0x40003df	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_113
0x40003e3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_113	CALL_1
0x40003e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_113	CALL_1
0x40003eb	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_113	CALL_1
0x40003f0	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_113	CALL_1
0x40003f3	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_113	CALL_1
0x40003f6	      0xe800000000	                          call 0x40003fb	       975	cache.h	FUNCTION_113	CALL_1
0x40003fb	              0xc9	                                   leave	       976	cache.h	FUNCTION_113
0x40003fc	              0xc3	                                     ret	       976	cache.h	FUNCTION_113
prepare_revs	CALL,3:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	57
0x40051bb	              0x55	                                push rbp	      1730	sequencer.c	FUNCTION_49
0x40051bc	          0x4889e5	                            mov rbp, rsp	      1730	sequencer.c	FUNCTION_49
0x40051bf	        0x4883ec10	                           sub rsp, 0x10	      1730	sequencer.c	FUNCTION_49
0x40051c3	        0x48897df8	                mov qword [rbp - 8], rdi	      1730	sequencer.c	FUNCTION_49
0x40051c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051cb	            0x8b00	                    mov eax, dword [rax]	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051cd	          0x83f801	                              cmp eax, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051d0	            0x754d	                           jne 0x400521f	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051d6	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051dd	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051e1	          0x83e030	                           and eax, 0x30	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051e4	            0x84c0	                             test al, al	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051e6	            0x7537	                           jne 0x400521f	      1735	sequencer.c	FUNCTION_49	IF_1
0x40051e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1736	sequencer.c	FUNCTION_49	IF_1
0x40051ec	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x40051f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1736	sequencer.c	FUNCTION_49	IF_1
0x40051f7	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x40051fe	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005202	          0xc0e806	                               shr al, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005205	          0x83e001	                              and eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005208	          0x83f001	                              xor eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400520b	          0x83e001	                              and eax, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400520e	          0xc1e006	                              shl eax, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005211	            0x89c1	                            mov ecx, eax	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005213	         0xfb64277	           movzx eax, byte [rdx + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x4005217	          0x83e0bf	                     and eax, 0xffffffbf	      1736	sequencer.c	FUNCTION_49	IF_1
0x400521a	             0x9c8	                             or eax, ecx	      1736	sequencer.c	FUNCTION_49	IF_1
0x400521c	          0x884277	               mov byte [rdx + 0x77], al	      1736	sequencer.c	FUNCTION_49	IF_1
0x400521f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4005223	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400522a	          0x4889c7	                            mov rdi, rax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400522d	      0xe800000000	                          call 0x4005232	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4005232	            0x85c0	                           test eax, eax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4005234	            0x741e	                            je 0x4005254	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x4005236	      0xbf00000000	                              mov edi, 0	      1739	sequencer.c	FUNCTION_49	CALL_2
0x400523b	      0xe867b1ffff	                               call sym.	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4005240	          0x4889c7	                            mov rdi, rax	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4005243	      0xb800000000	                              mov eax, 0	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4005248	      0xe800000000	                          call 0x400524d	      1739	sequencer.c	FUNCTION_49	CALL_2
0x400524d	      0xe8eeadffff	                    call sym.const_error	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4005252	            0xeb36	                           jmp 0x400528a	      1739	sequencer.c	FUNCTION_49	CALL_2
0x4005254	        0x488b45f8	                mov rax, qword [rbp - 8]	      1741	sequencer.c	FUNCTION_49	IF_3
0x4005258	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1741	sequencer.c	FUNCTION_49	IF_3
0x400525f	          0x488b00	                    mov rax, qword [rax]	      1741	sequencer.c	FUNCTION_49	IF_3
0x4005262	          0x4885c0	                           test rax, rax	      1741	sequencer.c	FUNCTION_49	IF_3
0x4005265	            0x751e	                           jne 0x4005285	      1741	sequencer.c	FUNCTION_49	IF_3
0x4005267	      0xbf00000000	                              mov edi, 0	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400526c	      0xe836b1ffff	                               call sym.	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4005271	          0x4889c7	                            mov rdi, rax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4005274	      0xb800000000	                              mov eax, 0	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4005279	      0xe800000000	                          call 0x400527e	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400527e	      0xe8bdadffff	                    call sym.const_error	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4005283	            0xeb05	                           jmp 0x400528a	      1742	sequencer.c	FUNCTION_49	CALL_3
0x4005285	      0xb800000000	                              mov eax, 0	      1743	sequencer.c	FUNCTION_49
0x400528a	              0xc9	                                   leave	      1744	sequencer.c	FUNCTION_49
0x400528b	              0xc3	                                     ret	      1744	sequencer.c	FUNCTION_49
rearrange_squash	CALL,44:FOR,5:WHILE,2:ELSE,4:DO,0:IF,16:SWITCH,0:functions,0	543
0x400dc2d	              0x55	                                push rbp	      4289	sequencer.c	FUNCTION_105
0x400dc2e	          0x4889e5	                            mov rbp, rsp	      4289	sequencer.c	FUNCTION_105
0x400dc31	              0x53	                                push rbx	      4289	sequencer.c	FUNCTION_105
0x400dc32	    0x4881ec480100	                          sub rsp, 0x148	      4289	sequencer.c	FUNCTION_105
0x400dc39	    0x64488b042528	                mov rax, qword fs:[0x28]	      4289	sequencer.c	FUNCTION_105
0x400dc42	        0x488945e8	             mov qword [rbp - 0x18], rax	      4289	sequencer.c	FUNCTION_105
0x400dc46	            0x31c0	                            xor eax, eax	      4289	sequencer.c	FUNCTION_105
0x400dc48	      0xe8222affff	               call sym.rebase_path_todo	      4290	sequencer.c	FUNCTION_105	CALL_1
0x400dc4d	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      4290	sequencer.c	FUNCTION_105	CALL_1
0x400dc54	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4291	sequencer.c	FUNCTION_105
0x400dc58	      0xb800000000	                              mov eax, 0	      4291	sequencer.c	FUNCTION_105
0x400dc5d	      0xb90b000000	                            mov ecx, 0xb	      4291	sequencer.c	FUNCTION_105
0x400dc62	          0x4889d7	                            mov rdi, rdx	      4291	sequencer.c	FUNCTION_105
0x400dc65	          0xf348ab	              rep stosq qword [rdi], rax	      4291	sequencer.c	FUNCTION_105
0x400dc68	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4291	sequencer.c	FUNCTION_105
0x400dc70	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	      4293	sequencer.c	FUNCTION_105
0x400dc7a	    0xc785bcfeffff	              mov dword [rbp - 0x144], 0	      4293	sequencer.c	FUNCTION_105
0x400dc84	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc8b	        0x488d4590	                   lea rax, [rbp - 0x70]	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc8f	          0x4889d6	                            mov rsi, rdx	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc92	          0x4889c7	                            mov rdi, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc95	      0xe84c7fffff	      call sym.strbuf_read_file_or_whine	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc9a	          0x4885c0	                           test rax, rax	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc9d	            0x790a	                           jns 0x400dca9	      4296	sequencer.c	FUNCTION_105	IF_1	CALL_2
0x400dc9f	      0xb8ffffffff	                     mov eax, 0xffffffff	      4297	sequencer.c	FUNCTION_105	IF_1
0x400dca4	      0xe944090000	                           jmp 0x400e5ed	      4297	sequencer.c	FUNCTION_105	IF_1
0x400dca9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcad	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcb1	          0x4889d6	                            mov rsi, rdx	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcb4	          0x4889c7	                            mov rdi, rax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcb7	      0xe8787cffff	              call sym.parse_insn_buffer	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcbc	            0x85c0	                           test eax, eax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcbe	            0x7916	                           jns 0x400dcd6	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400dcc0	        0x488d4590	                   lea rax, [rbp - 0x70]	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0x400dcc4	          0x4889c7	                            mov rdi, rax	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0x400dcc7	      0xe8e676ffff	              call sym.todo_list_release	      4299	sequencer.c	FUNCTION_105	IF_2	CALL_4
0x400dccc	      0xb8ffffffff	                     mov eax, 0xffffffff	      4300	sequencer.c	FUNCTION_105	IF_2
0x400dcd1	      0xe917090000	                           jmp 0x400e5ed	      4300	sequencer.c	FUNCTION_105	IF_2
0x400dcd6	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4313	sequencer.c	FUNCTION_105
0x400dcd9	          0x4863d0	                         movsxd rdx, eax	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dcdc	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dce3	          0x4889d1	                            mov rcx, rdx	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dce6	      0xba00000000	                              mov edx, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dceb	      0xbe00000000	                              mov esi, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dcf0	          0x4889c7	                            mov rdi, rax	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dcf3	      0xe800000000	                          call 0x400dcf8	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400dcf8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4314	sequencer.c	FUNCTION_105
0x400dcfb	            0x4898	                                    cdqe	      4314	sequencer.c	FUNCTION_105
0x400dcfd	          0x4889c6	                            mov rsi, rax	      4314	sequencer.c	FUNCTION_105
0x400dd00	      0xbf04000000	                              mov edi, 4	      4314	sequencer.c	FUNCTION_105
0x400dd05	      0xe8db23ffff	                        call sym.st_mult	      4314	sequencer.c	FUNCTION_105
0x400dd0a	          0x4889c7	                            mov rdi, rax	      4314	sequencer.c	FUNCTION_105
0x400dd0d	      0xe800000000	                          call 0x400dd12	      4314	sequencer.c	FUNCTION_105
0x400dd12	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      4314	sequencer.c	FUNCTION_105
0x400dd19	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4315	sequencer.c	FUNCTION_105
0x400dd1c	            0x4898	                                    cdqe	      4315	sequencer.c	FUNCTION_105
0x400dd1e	          0x4889c6	                            mov rsi, rax	      4315	sequencer.c	FUNCTION_105
0x400dd21	      0xbf04000000	                              mov edi, 4	      4315	sequencer.c	FUNCTION_105
0x400dd26	      0xe8ba23ffff	                        call sym.st_mult	      4315	sequencer.c	FUNCTION_105
0x400dd2b	          0x4889c7	                            mov rdi, rax	      4315	sequencer.c	FUNCTION_105
0x400dd2e	      0xe800000000	                          call 0x400dd33	      4315	sequencer.c	FUNCTION_105
0x400dd33	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      4315	sequencer.c	FUNCTION_105
0x400dd3a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4316	sequencer.c	FUNCTION_105
0x400dd3d	            0x4898	                                    cdqe	      4316	sequencer.c	FUNCTION_105
0x400dd3f	          0x4889c6	                            mov rsi, rax	      4316	sequencer.c	FUNCTION_105
0x400dd42	      0xbf08000000	                              mov edi, 8	      4316	sequencer.c	FUNCTION_105
0x400dd47	      0xe89923ffff	                        call sym.st_mult	      4316	sequencer.c	FUNCTION_105
0x400dd4c	          0x4889c7	                            mov rdi, rax	      4316	sequencer.c	FUNCTION_105
0x400dd4f	      0xe800000000	                          call 0x400dd54	      4316	sequencer.c	FUNCTION_105
0x400dd54	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      4316	sequencer.c	FUNCTION_105
0x400dd5b	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dd65	      0xe9fa050000	                           jmp 0x400e364	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dd6a	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dd75	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dd80	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dd8b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dd8f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dd95	          0x4863d0	                         movsxd rdx, eax	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dd98	          0x4889d0	                            mov rax, rdx	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dd9b	          0x4801c0	                            add rax, rax	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dd9e	          0x4801d0	                            add rax, rdx	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dda1	        0x48c1e004	                              shl rax, 4	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dda5	          0x4801c8	                            add rax, rcx	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dda8	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400ddaf	    0xc785c4feffff	    mov dword [rbp - 0x13c], 0xffffffff 	      4322	sequencer.c	FUNCTION_105	FOR_1
0x400ddb9	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddbf	            0x4898	                                    cdqe	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddc1	    0x488d14850000	                        lea rdx, [rax*4]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddc9	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddd0	          0x4801c2	                            add rdx, rax	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddd3	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddd9	            0x4898	                                    cdqe	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dddb	    0x488d0c850000	                        lea rcx, [rax*4]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dde3	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddea	          0x4801c8	                            add rax, rcx	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dded	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddf3	            0x8b00	                    mov eax, dword [rax]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddf5	            0x8902	                    mov dword [rdx], eax	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400ddf7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400ddfe	        0x488b4008	                mov rax, qword [rax + 8]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de02	          0x4885c0	                           test rax, rax	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de05	            0x740e	                            je 0x400de15	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de07	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de0e	            0x8b00	                    mov eax, dword [rax]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de10	          0x83f80b	                            cmp eax, 0xb	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de13	            0x7526	                           jne 0x400de3b	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de15	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de1b	            0x4898	                                    cdqe	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de1d	    0x488d14c50000	                        lea rdx, [rax*8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de25	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de2c	          0x4801d0	                            add rax, rdx	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de2f	    0x48c700000000	                      mov qword [rax], 0	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de36	      0xe922050000	                           jmp 0x400e35d	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400de3b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de42	            0x8b00	                    mov eax, dword [rax]	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de44	            0x89c7	                            mov edi, eax	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de46	      0xe8475effff	                       call sym.is_fixup	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de4b	            0x85c0	                           test eax, eax	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de4d	            0x742d	                            je 0x400de7c	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400de4f	        0x488d4590	                   lea rax, [rbp - 0x70]	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_7
0x400de53	          0x4889c7	                            mov rdi, rax	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_7
0x400de56	      0xe85775ffff	              call sym.todo_list_release	      4332	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_7
0x400de5b	      0xbf00000000	                              mov edi, 0	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de60	      0xe84225ffff	                               call sym.	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de65	          0x4889c7	                            mov rdi, rax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de68	      0xb800000000	                              mov eax, 0	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de6d	      0xe800000000	                          call 0x400de72	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de72	      0xe8c921ffff	                    call sym.const_error	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de77	      0xe971070000	                           jmp 0x400e5ed	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400de7c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400de83	        0x488b4008	                mov rax, qword [rax + 8]	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400de87	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400de8e	        0x48895018	             mov qword [rax + 0x18], rdx	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400de92	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_9
0x400de99	        0x488b4008	                mov rax, qword [rax + 8]	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_9
0x400de9d	          0x4889c7	                            mov rdi, rax	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_9
0x400dea0	      0xe86226ffff	                   call sym.parse_commit	      4338	sequencer.c	FUNCTION_105	FOR_1	CALL_9
0x400dea5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400deac	        0x488b4008	                mov rax, qword [rax + 8]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400deb0	      0xbe00000000	                              mov esi, 0	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400deb5	          0x4889c7	                            mov rdi, rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400deb8	      0xe800000000	                          call 0x400debd	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400debd	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400dec4	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400decb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400ded2	          0x4889d6	                            mov rsi, rdx	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400ded5	          0x4889c7	                            mov rdi, rax	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400ded8	      0xe800000000	                          call 0x400dedd	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400dedd	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400dee4	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400deeb	      0xba00000000	                              mov edx, 0	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400def0	          0x4889ce	                            mov rsi, rcx	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400def3	          0x4889c7	                            mov rdi, rax	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400def6	      0xe800000000	                          call 0x400defb	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400defb	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df01	            0x4898	                                    cdqe	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df03	    0x488d14c50000	                        lea rdx, [rax*8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df0b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df12	        0x488d1c02	                    lea rbx, [rdx + rax]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df16	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df1d	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df24	          0x4889d6	                            mov rsi, rdx	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df27	          0x4889c7	                            mov rdi, rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df2a	      0xe800000000	                          call 0x400df2f	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df2f	          0x488903	                    mov qword [rbx], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df32	          0x488b03	                    mov rax, qword [rbx]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df35	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400df3c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df43	        0x488b4008	                mov rax, qword [rax + 8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df47	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df4e	          0x4889d6	                            mov rsi, rdx	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df51	          0x4889c7	                            mov rdi, rax	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df54	      0xe800000000	                          call 0x400df59	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400df59	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df60	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df67	      0xbe00000000	                              mov esi, 0	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df6c	          0x4889c7	                            mov rdi, rax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df6f	      0xe8d720ffff	                    call sym.skip_prefix	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df74	            0x85c0	                           test eax, eax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df76	            0x7537	                           jne 0x400dfaf	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df78	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_16
0x400df7f	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_16
0x400df86	      0xbe00000000	                              mov esi, 0	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_16
0x400df8b	          0x4889c7	                            mov rdi, rax	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_16
0x400df8e	      0xe8b820ffff	                    call sym.skip_prefix	      4345	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_16
0x400df93	            0x85c0	                           test eax, eax	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df95	     0xf84d9010000	                            je 0x400e174	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400df9b	            0xeb12	                           jmp 0x400dfaf	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400df9d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfa4	        0x4883c001	                              add rax, 1	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfa8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfaf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfb6	           0xfb600	                   movzx eax, byte [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfb9	           0xfb6c0	                           movzx eax, al	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfbc	            0x4898	                                    cdqe	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfbe	     0xfb680000000	                   movzx eax, byte [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfc5	           0xfb6c0	                           movzx eax, al	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfc8	          0x83e001	                              and eax, 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfcb	            0x85c0	                           test eax, eax	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfcd	            0x75ce	                           jne 0x400df9d	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dfcf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfd6	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfdd	      0xbe00000000	                              mov esi, 0	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfe2	          0x4889c7	                            mov rdi, rax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfe5	      0xe86120ffff	                    call sym.skip_prefix	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfea	            0x85c0	                           test eax, eax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfec	            0x75ad	                           jne 0x400df9b	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400dfee	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_18
0x400dff5	    0x488d95d8feff	                  lea rdx, [rbp - 0x128]	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_18
0x400dffc	      0xbe00000000	                              mov esi, 0	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_18
0x400e001	          0x4889c7	                            mov rdi, rax	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_18
0x400e004	      0xe84220ffff	                    call sym.skip_prefix	      4352	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_18
0x400e009	            0x85c0	                           test eax, eax	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400e00b	            0x7402	                            je 0x400e00f	      4351	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6	CALL_17
0x400e00d	            0xeb8c	                           jmp 0x400df9b	      4354	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2
0x400e00f	              0x90	                                     nop	      4353	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	IF_6
0x400e010	    0x488b9dd8feff	            mov rbx, qword [rbp - 0x128]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e017	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e01e	          0x4889c7	                            mov rdi, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e021	      0xe800000000	                          call 0x400e026	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e026	            0x89c1	                            mov ecx, eax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e028	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e02f	          0x4889da	                            mov rdx, rbx	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e032	            0x89ce	                            mov esi, ecx	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e034	          0x4889c7	                            mov rdi, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e037	      0xe80b23ffff	          call sym.hashmap_get_from_hash	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e03c	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e043	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e04b	            0x7415	                            je 0x400e062	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400e04d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400e054	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400e057	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400e05d	      0xe912010000	                           jmp 0x400e174	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400e062	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e069	      0xbe20000000	                           mov esi, 0x20	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e06e	          0x4889c7	                            mov rdi, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e071	      0xe800000000	                          call 0x400e076	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e076	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e079	            0x7568	                           jne 0x400e0e3	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e07b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_22
0x400e082	          0x4889c7	                            mov rdi, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e085	      0xe800000000	                          call 0x400e08a	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e08a	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e091	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e099	            0x7448	                            je 0x400e0e3	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e09b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0a6	          0x4885c0	                           test rax, rax	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_22
0x400e0a9	            0x7438	                            je 0x400e0e3	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_22
0x400e0ab	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0b2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0b6	          0x4889c2	                            mov rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0bd	          0x4829c2	                            sub rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0c0	          0x4889d0	                            mov rax, rdx	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0c3	        0x48c1f804	                              sar rax, 4	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0c7	          0x4889c2	                            mov rdx, rax	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0ca	    0x48b8abaaaaaa	          movabs rax, 0xaaaaaaaaaaaaaaab	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0d4	        0x480fafc2	                           imul rax, rdx	      4366	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0d8	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0de	      0xe991000000	                           jmp 0x400e174	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e0e3	    0xc785c4feffff	              mov dword [rbp - 0x13c], 0	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e0ed	            0xeb5c	                           jmp 0x400e14b	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e0ef	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e0f5	            0x4898	                                    cdqe	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e0f7	    0x488d14c50000	                        lea rdx, [rax*8]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e0ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e106	          0x4801d0	                            add rax, rdx	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e109	          0x488b00	                    mov rax, qword [rax]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e10c	          0x4885c0	                           test rax, rax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e10f	            0x7433	                            je 0x400e144	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e111	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e118	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e11e	            0x4898	                                    cdqe	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e120	    0x488d0cc50000	                        lea rcx, [rax*8]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e128	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e12f	          0x4801c8	                            add rax, rcx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e132	          0x488b00	                    mov rax, qword [rax]	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e135	          0x4889d6	                            mov rsi, rdx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e138	          0x4889c7	                            mov rdi, rax	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e13b	      0xe800000000	                          call 0x400e140	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_23
0x400e140	            0x85c0	                           test eax, eax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e142	            0x7517	                           jne 0x400e15b	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e144	    0x8385c4feffff	              add dword [rbp - 0x13c], 1	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e14b	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e151	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e157	            0x7c96	                            jl 0x400e0ef	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e159	            0xeb01	                           jmp 0x400e15c	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e15b	              0x90	                                     nop	      4372	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e15c	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e162	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e168	            0x750a	                           jne 0x400e174	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e16a	    0xc785c4feffff	    mov dword [rbp - 0x13c], 0xffffffff 	      4374	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e174	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e17b	     0xf88f1000000	                            js 0x400e272	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e181	    0xc785bcfeffff	              mov dword [rbp - 0x144], 1	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e18b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e18f	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e195	          0x4863d0	                         movsxd rdx, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e198	          0x4889d0	                            mov rax, rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e19b	          0x4801c0	                            add rax, rax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e19e	          0x4801d0	                            add rax, rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1a1	        0x48c1e004	                              shl rax, 4	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1a5	        0x488d1c01	                    lea rbx, [rcx + rax]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1a9	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_24
0x400e1b0	      0xbe00000000	                              mov esi, 0	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_24
0x400e1b5	          0x4889c7	                            mov rdi, rax	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_24
0x400e1b8	      0xe800000000	                          call 0x400e1bd	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_24
0x400e1bd	            0x85c0	                           test eax, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1bf	            0x7407	                            je 0x400e1c8	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1c1	      0xb804000000	                              mov eax, 4	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1c6	            0xeb05	                           jmp 0x400e1cd	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1c8	      0xb805000000	                              mov eax, 5	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1cd	            0x8903	                    mov dword [rbx], eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400e1cf	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1d5	            0x4898	                                    cdqe	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1d7	    0x488d14850000	                        lea rdx, [rax*4]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1df	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1e6	          0x4801d0	                            add rax, rdx	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1e9	            0x8b00	                    mov eax, dword [rax]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1eb	            0x85c0	                           test eax, eax	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1ed	            0x7924	                           jns 0x400e213	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1ef	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1f5	            0x4898	                                    cdqe	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1f7	    0x488d14850000	                        lea rdx, [rax*4]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e1ff	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e206	          0x4801c2	                            add rdx, rax	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e209	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e20f	            0x8902	                    mov dword [rdx], eax	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e211	            0xeb38	                           jmp 0x400e24b	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e213	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e219	            0x4898	                                    cdqe	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e21b	    0x488d14850000	                        lea rdx, [rax*4]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e223	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e22a	          0x4801d0	                            add rax, rdx	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e22d	            0x8b00	                    mov eax, dword [rax]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e22f	            0x4898	                                    cdqe	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e231	    0x488d14850000	                        lea rdx, [rax*4]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e239	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e240	          0x4801c2	                            add rdx, rax	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e243	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e249	            0x8902	                    mov dword [rdx], eax	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e24b	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e251	            0x4898	                                    cdqe	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e253	    0x488d14850000	                        lea rdx, [rax*4]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e25b	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e262	          0x4801c2	                            add rdx, rax	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e265	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e26b	            0x8902	                    mov dword [rdx], eax	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e26d	      0xe9eb000000	                           jmp 0x400e35d	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400e272	    0x488b9dd0feff	            mov rbx, qword [rbp - 0x130]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e279	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e280	          0x4889c7	                            mov rdi, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e283	      0xe800000000	                          call 0x400e288	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e288	            0x89c1	                            mov ecx, eax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e28a	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e291	          0x4889da	                            mov rdx, rbx	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e294	            0x89ce	                            mov esi, ecx	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e296	          0x4889c7	                            mov rdi, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e299	      0xe8a920ffff	          call sym.hashmap_get_from_hash	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e29e	          0x4885c0	                           test rax, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e2a1	     0xf85b6000000	                           jne 0x400e35d	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_25
0x400e2a7	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2ae	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2b5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2bc	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2bf	      0xbf18000000	                           mov edi, 0x18	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2c4	      0xe8d81dffff	                         call sym.st_add	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2c9	      0xbe01000000	                              mov esi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2ce	          0x4889c7	                            mov rdi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2d1	      0xe8cb1dffff	                         call sym.st_add	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2d6	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2d9	      0xbf01000000	                              mov edi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2de	      0xe800000000	                          call 0x400e2e3	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2e3	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2ea	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2f1	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2f8	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e2fc	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e303	          0x4889c6	                            mov rsi, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e306	          0x4889cf	                            mov rdi, rcx	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e309	      0xe800000000	                          call 0x400e30e	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e30e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e315	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e31b	          0x895010	             mov dword [rax + 0x10], edx	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e31e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e325	        0x4883c014	                           add rax, 0x14	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e329	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e32c	      0xe800000000	                          call 0x400e331	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e331	            0x89c2	                            mov edx, eax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e333	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e33a	            0x89d6	                            mov esi, edx	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e33c	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e33f	      0xe8d81fffff	             call sym.hashmap_entry_init	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e344	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_29
0x400e34b	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_29
0x400e352	          0x4889d6	                            mov rsi, rdx	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_29
0x400e355	          0x4889c7	                            mov rdi, rax	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_29
0x400e358	      0xe800000000	                          call 0x400e35d	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_29
0x400e35d	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400e364	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400e367	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400e36d	     0xf8ff7f9ffff	                            jg 0x400dd6a	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400e373	    0x83bdbcfeffff	              cmp dword [rbp - 0x144], 0	      4396	sequencer.c	FUNCTION_105	IF_14
0x400e37a	     0xf84d7010000	                            je 0x400e557	      4396	sequencer.c	FUNCTION_105	IF_14
0x400e380	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400e38b	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400e396	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400e3a1	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3ab	      0xe963010000	                           jmp 0x400e513	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3b0	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3b4	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3ba	          0x4863d0	                         movsxd rdx, eax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3bd	          0x4889d0	                            mov rax, rdx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3c0	          0x4801c0	                            add rax, rax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3c3	          0x4801d0	                            add rax, rdx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3c6	        0x48c1e004	                              shl rax, 4	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3ca	          0x4801c8	                            add rax, rcx	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3cd	            0x8b00	                    mov eax, dword [rax]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3cf	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3d5	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4401	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3db	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4401	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e3e1	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_30
0x400e3e7	            0x89c7	                            mov edi, eax	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_30
0x400e3e9	      0xe8a458ffff	                       call sym.is_fixup	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_30
0x400e3ee	            0x85c0	                           test eax, eax	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_30
0x400e3f0	     0xf8515010000	                           jne 0x400e50b	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_30
0x400e3f6	      0xe901010000	                           jmp 0x400e4fc	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e3fb	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e401	        0x488d4590	                   lea rax, [rbp - 0x70]	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e405	            0x89d6	                            mov esi, edx	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e407	          0x4889c7	                            mov rdi, rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e40a	      0xe86077ffff	                  call sym.get_item_line	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e40f	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      4411	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e416	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_32
0x400e41c	          0x8d5001	                      lea edx, [rax + 1]	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_32
0x400e41f	        0x488d4590	                   lea rax, [rbp - 0x70]	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e423	            0x89d6	                            mov esi, edx	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e425	          0x4889c7	                            mov rdi, rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e428	      0xe84277ffff	                  call sym.get_item_line	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e42d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4413	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e434	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e438	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e43e	          0x4863d0	                         movsxd rdx, eax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e441	          0x4889d0	                            mov rax, rdx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e444	          0x4801c0	                            add rax, rax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e447	          0x4801d0	                            add rax, rdx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e44a	        0x48c1e004	                              shl rax, 4	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e44e	          0x4801c8	                            add rax, rcx	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e451	            0x8b00	                    mov eax, dword [rax]	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e453	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      4417	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e459	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400e45f	            0x89c7	                            mov edi, eax	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400e461	      0xe82c58ffff	                       call sym.is_fixup	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400e466	            0x85c0	                           test eax, eax	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400e468	            0x7440	                            je 0x400e4aa	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400e46a	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e470	        0x48c1e004	                              shl rax, 4	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e474	    0x480500000000	                              add rax, 0	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e47a	          0x488b10	                    mov rdx, qword [rax]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e47d	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e484	          0x4889d6	                            mov rsi, rdx	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e487	          0x4889c7	                            mov rdi, rax	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e48a	      0xe8e61dffff	                  call sym.strbuf_addstr	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_34
0x400e48f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_35
0x400e496	      0xbe00000000	                              mov esi, 0	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_35
0x400e49b	          0x4889c7	                            mov rdi, rax	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_35
0x400e49e	      0xe800000000	                          call 0x400e4a3	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_35
0x400e4a3	    0x480185e8feff	           add qword [rbp - 0x118], rax 	      4421	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_35
0x400e4aa	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4b1	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4b8	          0x4829c2	                            sub rdx, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4bb	          0x4889d0	                            mov rax, rdx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4be	          0x4889c2	                            mov rdx, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4c1	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4c8	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4cf	          0x4889ce	                            mov rsi, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4d2	          0x4889c7	                            mov rdi, rax	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4d5	      0xe800000000	                          call 0x400e4da	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_36
0x400e4da	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4e0	            0x4898	                                    cdqe	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4e2	    0x488d14850000	                        lea rdx, [rax*4]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4ea	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4f1	          0x4801d0	                            add rax, rdx	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4f4	            0x8b00	                    mov eax, dword [rax]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4f6	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e4fc	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e503	     0xf89f2feffff	                           jns 0x400e3fb	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e509	            0xeb01	                           jmp 0x400e50c	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400e50b	              0x90	                                     nop	      4408	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15
0x400e50c	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e513	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e516	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e51c	     0xf8f8efeffff	                            jg 0x400e3b0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e522	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e529	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e530	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e537	          0x4889ce	                            mov rsi, rcx	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e53a	          0x4889c7	                            mov rdi, rax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e53d	      0xe8d2f0ffff	                   call sym.rewrite_file	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e542	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      4430	sequencer.c	FUNCTION_105	IF_14	CALL_37
0x400e548	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_38
0x400e54f	          0x4889c7	                            mov rdi, rax	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_38
0x400e552	      0xe800000000	                          call 0x400e557	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_38
0x400e557	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      4434	sequencer.c	FUNCTION_105	CALL_39
0x400e55e	          0x4889c7	                            mov rdi, rax	      4434	sequencer.c	FUNCTION_105	CALL_39
0x400e561	      0xe800000000	                          call 0x400e566	      4434	sequencer.c	FUNCTION_105	CALL_39
0x400e566	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      4435	sequencer.c	FUNCTION_105	CALL_40
0x400e56d	          0x4889c7	                            mov rdi, rax	      4435	sequencer.c	FUNCTION_105	CALL_40
0x400e570	      0xe800000000	                          call 0x400e575	      4435	sequencer.c	FUNCTION_105	CALL_40
0x400e575	    0xc785c0feffff	              mov dword [rbp - 0x140], 0	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e57f	            0xeb2c	                           jmp 0x400e5ad	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e581	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e587	            0x4898	                                    cdqe	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e589	    0x488d14c50000	                        lea rdx, [rax*8]	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e591	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e598	          0x4801d0	                            add rax, rdx	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e59b	          0x488b00	                    mov rax, qword [rax]	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e59e	          0x4889c7	                            mov rdi, rax	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e5a1	      0xe800000000	                          call 0x400e5a6	      4437	sequencer.c	FUNCTION_105	CALL_41
0x400e5a6	    0x8385c0feffff	              add dword [rbp - 0x140], 1	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e5ad	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e5b0	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e5b6	            0x7fc9	                            jg 0x400e581	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e5b8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      4438	sequencer.c	FUNCTION_105	CALL_42
0x400e5bf	          0x4889c7	                            mov rdi, rax	      4438	sequencer.c	FUNCTION_105	CALL_42
0x400e5c2	      0xe800000000	                          call 0x400e5c7	      4438	sequencer.c	FUNCTION_105	CALL_42
0x400e5c7	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      4439	sequencer.c	FUNCTION_105	CALL_43
0x400e5ce	      0xbe01000000	                              mov esi, 1	      4439	sequencer.c	FUNCTION_105	CALL_43
0x400e5d3	          0x4889c7	                            mov rdi, rax	      4439	sequencer.c	FUNCTION_105	CALL_43
0x400e5d6	      0xe800000000	                          call 0x400e5db	      4439	sequencer.c	FUNCTION_105	CALL_43
0x400e5db	        0x488d4590	                   lea rax, [rbp - 0x70]	      4440	sequencer.c	FUNCTION_105	CALL_44
0x400e5df	          0x4889c7	                            mov rdi, rax	      4440	sequencer.c	FUNCTION_105	CALL_44
0x400e5e2	      0xe8cb6dffff	              call sym.todo_list_release	      4440	sequencer.c	FUNCTION_105	CALL_44
0x400e5e7	    0x8b85b8feffff	            mov eax, dword [rbp - 0x148]	      4442	sequencer.c	FUNCTION_105
0x400e5ed	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4443	sequencer.c	FUNCTION_105
0x400e5f1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	sequencer.c	FUNCTION_105
0x400e5fa	            0x7405	                            je 0x400e601	      4443	sequencer.c	FUNCTION_105
0x400e5fc	      0xe800000000	                          call 0x400e601	      4443	sequencer.c	FUNCTION_105
0x400e601	    0x4881c4480100	                          add rsp, 0x148	      4443	sequencer.c	FUNCTION_105
0x400e608	              0x5b	                                 pop rbx	      4443	sequencer.c	FUNCTION_105
0x400e609	              0x5d	                                 pop rbp	      4443	sequencer.c	FUNCTION_105
0x400e60a	              0xc3	                                     ret	      4443	sequencer.c	FUNCTION_105
is_index_unchanged	CALL,10:FOR,0:WHILE,0:ELSE,0:DO,0:IF,5:SWITCH,0:functions,0	72
0x4001cc5	              0x55	                                push rbp	       565	sequencer.c	FUNCTION_22
0x4001cc6	          0x4889e5	                            mov rbp, rsp	       565	sequencer.c	FUNCTION_22
0x4001cc9	        0x4883ec30	                           sub rsp, 0x30	       565	sequencer.c	FUNCTION_22
0x4001ccd	    0x64488b042528	                mov rax, qword fs:[0x28]	       565	sequencer.c	FUNCTION_22
0x4001cd6	        0x488945f8	                mov qword [rbp - 8], rax	       565	sequencer.c	FUNCTION_22
0x4001cda	            0x31c0	                            xor eax, eax	       565	sequencer.c	FUNCTION_22
0x4001cdc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001ce0	      0xb900000000	                              mov ecx, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001ce5	          0x4889c2	                            mov rdx, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001ce8	      0xbe01000000	                              mov esi, 1	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001ced	      0xbf00000000	                              mov edi, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001cf2	      0xe800000000	                          call 0x4001cf7	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001cf7	          0x4885c0	                           test rax, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001cfa	            0x7521	                           jne 0x4001d1d	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4001cfc	      0xbf00000000	                              mov edi, 0	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d01	      0xe8a1e6ffff	                               call sym.	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d06	          0x4889c7	                            mov rdi, rax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d09	      0xb800000000	                              mov eax, 0	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d0e	      0xe800000000	                          call 0x4001d13	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d13	      0xe828e3ffff	                    call sym.const_error	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d18	      0xe9b3000000	                           jmp 0x4001dd0	       570	sequencer.c	FUNCTION_22	CALL_2
0x4001d1d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       572	sequencer.c	FUNCTION_22	CALL_3
0x4001d21	          0x4889c7	                            mov rdi, rax	       572	sequencer.c	FUNCTION_22	CALL_3
0x4001d24	      0xe800000000	                          call 0x4001d29	       572	sequencer.c	FUNCTION_22	CALL_3
0x4001d29	        0x488945d8	             mov qword [rbp - 0x28], rax	       572	sequencer.c	FUNCTION_22	CALL_3
0x4001d2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4001d31	          0x4889c7	                            mov rdi, rax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4001d34	      0xe8cee7ffff	                   call sym.parse_commit	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4001d39	            0x85c0	                           test eax, eax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4001d3b	            0x740a	                            je 0x4001d47	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4001d3d	      0xb8ffffffff	                     mov eax, 0xffffffff	       583	sequencer.c	FUNCTION_22	IF_2
0x4001d42	      0xe989000000	                           jmp 0x4001dd0	       583	sequencer.c	FUNCTION_22	IF_2
0x4001d47	    0x488b05000000	            mov rax, qword [0x04001d4e] 	       585	sequencer.c	FUNCTION_22	IF_3
0x4001d4e	          0x4885c0	                           test rax, rax	       585	sequencer.c	FUNCTION_22	IF_3
0x4001d51	            0x750c	                           jne 0x4001d5f	       585	sequencer.c	FUNCTION_22	IF_3
0x4001d53	      0xe800000000	                          call 0x4001d58	       586	sequencer.c	FUNCTION_22	CALL_5
0x4001d58	    0x488905000000	            mov qword [0x04001d5f], rax 	       586	sequencer.c	FUNCTION_22	CALL_5
0x4001d5f	    0x488b05000000	            mov rax, qword [0x04001d66] 	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4001d66	          0x4889c7	                            mov rdi, rax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4001d69	      0xe800000000	                          call 0x4001d6e	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4001d6e	            0x85c0	                           test eax, eax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4001d70	            0x7531	                           jne 0x4001da3	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4001d72	      0xbe00000000	                              mov esi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4001d77	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4001d7c	      0xe800000000	                          call 0x4001d81	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4001d81	            0x85c0	                           test eax, eax	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4001d83	            0x741e	                            je 0x4001da3	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4001d85	      0xbf00000000	                              mov edi, 0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001d8a	      0xe818e6ffff	                               call sym.	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001d8f	          0x4889c7	                            mov rdi, rax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001d92	      0xb800000000	                              mov eax, 0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001d97	      0xe800000000	                          call 0x4001d9c	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001d9c	      0xe89fe2ffff	                    call sym.const_error	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001da1	            0xeb2d	                           jmp 0x4001dd0	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4001da3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       593	sequencer.c	FUNCTION_22	CALL_10
0x4001da7	          0x4889c7	                            mov rdi, rax	       593	sequencer.c	FUNCTION_22	CALL_10
0x4001daa	      0xe800000000	                          call 0x4001daf	       593	sequencer.c	FUNCTION_22	CALL_10
0x4001daf	          0x4889c2	                            mov rdx, rax	       593	sequencer.c	FUNCTION_22	CALL_10
0x4001db2	    0x488b05000000	            mov rax, qword [0x04001db9] 	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001db9	        0x4883c004	                              add rax, 4	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dbd	          0x4889d6	                            mov rsi, rdx	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dc0	          0x4889c7	                            mov rdi, rax	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dc3	      0xe835e6ffff	                         call sym.oidcmp	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dc8	            0x85c0	                           test eax, eax	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dca	           0xf94c0	                                 sete al	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dcd	           0xfb6c0	                           movzx eax, al	       592	sequencer.c	FUNCTION_22	CALL_9
0x4001dd0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       594	sequencer.c	FUNCTION_22
0x4001dd4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       594	sequencer.c	FUNCTION_22
0x4001ddd	            0x7405	                            je 0x4001de4	       594	sequencer.c	FUNCTION_22
0x4001ddf	      0xe800000000	                          call 0x4001de4	       594	sequencer.c	FUNCTION_22
0x4001de4	              0xc9	                                   leave	       594	sequencer.c	FUNCTION_22
0x4001de5	              0xc3	                                     ret	       594	sequencer.c	FUNCTION_22
sequencer_add_exec_commands	CALL,11:FOR,1:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	113
0x400cc86	              0x55	                                push rbp	      3972	sequencer.c	FUNCTION_98
0x400cc87	          0x4889e5	                            mov rbp, rsp	      3972	sequencer.c	FUNCTION_98
0x400cc8a	    0x4881eca00000	                           sub rsp, 0xa0	      3972	sequencer.c	FUNCTION_98
0x400cc91	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      3972	sequencer.c	FUNCTION_98
0x400cc98	    0x64488b042528	                mov rax, qword fs:[0x28]	      3972	sequencer.c	FUNCTION_98
0x400cca1	        0x488945f8	                mov qword [rbp - 8], rax	      3972	sequencer.c	FUNCTION_98
0x400cca5	            0x31c0	                            xor eax, eax	      3972	sequencer.c	FUNCTION_98
0x400cca7	      0xe8c339ffff	               call sym.rebase_path_todo	      3973	sequencer.c	FUNCTION_98	CALL_1
0x400ccac	        0x48894588	             mov qword [rbp - 0x78], rax	      3973	sequencer.c	FUNCTION_98	CALL_1
0x400ccb0	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3974	sequencer.c	FUNCTION_98
0x400ccb4	      0xb800000000	                              mov eax, 0	      3974	sequencer.c	FUNCTION_98
0x400ccb9	      0xb90b000000	                            mov ecx, 0xb	      3974	sequencer.c	FUNCTION_98
0x400ccbe	          0x4889d7	                            mov rdi, rdx	      3974	sequencer.c	FUNCTION_98
0x400ccc1	          0xf348ab	              rep stosq qword [rdi], rax	      3974	sequencer.c	FUNCTION_98
0x400ccc4	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      3974	sequencer.c	FUNCTION_98
0x400cccc	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3976	sequencer.c	FUNCTION_98
0x400ccd0	        0x48894590	             mov qword [rbp - 0x70], rax	      3976	sequencer.c	FUNCTION_98
0x400ccd4	    0x48c745800000	               mov qword [rbp - 0x80], 0	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ccdc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400cce3	          0x4889c7	                            mov rdi, rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400cce6	      0xe800000000	                          call 0x400cceb	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400cceb	        0x48894598	             mov qword [rbp - 0x68], rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400ccef	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ccf3	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ccf7	      0xba00000000	                              mov edx, 0	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ccfc	          0x4889ce	                            mov rsi, rcx	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400ccff	          0x4889c7	                            mov rdi, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400cd02	      0xe800000000	                          call 0x400cd07	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400cd07	          0x4885c0	                           test rax, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400cd0a	            0x792b	                           jns 0x400cd37	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400cd0c	      0xbf00000000	                              mov edi, 0	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd11	      0xe89136ffff	                               call sym.	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd16	          0x4889c2	                            mov rdx, rax	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd19	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd1d	          0x4889c6	                            mov rsi, rax	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd20	          0x4889d7	                            mov rdi, rdx	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd23	      0xb800000000	                              mov eax, 0	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd28	      0xe800000000	                          call 0x400cd2d	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd2d	      0xe80e33ffff	                    call sym.const_error	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd32	      0xe92e010000	                           jmp 0x400ce65	      3981	sequencer.c	FUNCTION_98	CALL_4
0x400cd37	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd3b	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd3f	          0x4889d6	                            mov rsi, rdx	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd42	          0x4889c7	                            mov rdi, rax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd45	      0xe8ea8bffff	              call sym.parse_insn_buffer	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd4a	            0x85c0	                           test eax, eax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd4c	            0x7437	                            je 0x400cd85	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400cd4e	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_6
0x400cd52	          0x4889c7	                            mov rdi, rax	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_6
0x400cd55	      0xe85886ffff	              call sym.todo_list_release	      3984	sequencer.c	FUNCTION_98	IF_2	CALL_6
0x400cd5a	      0xbf00000000	                              mov edi, 0	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd5f	      0xe84336ffff	                               call sym.	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd64	          0x4889c2	                            mov rdx, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd67	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd6b	          0x4889c6	                            mov rsi, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd6e	          0x4889d7	                            mov rdi, rdx	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd71	      0xb800000000	                              mov eax, 0	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd76	      0xe800000000	                          call 0x400cd7b	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd7b	      0xe8c032ffff	                    call sym.const_error	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd80	      0xe9e0000000	                           jmp 0x400ce65	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cd85	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	      3988	sequencer.c	FUNCTION_98
0x400cd8f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400cd93	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400cd9a	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400cda4	            0xeb61	                           jmp 0x400ce07	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400cda6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdad	            0x8b00	                    mov eax, dword [rax]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdaf	            0x85c0	                           test eax, eax	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdb1	            0x753b	                           jne 0x400cdee	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdb3	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdba	            0x7532	                           jne 0x400cdee	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdbc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdc3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdc7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdcb	        0x488d3402	                    lea rsi, [rdx + rax]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdcf	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdd3	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdda	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cdde	          0x4889c7	                            mov rdi, rax	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cde1	      0xe800000000	                          call 0x400cde6	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400cde6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdea	        0x48014580	            add qword [rbp - 0x80], rax 	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400cdee	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      3996	sequencer.c	FUNCTION_98	FOR_1
0x400cdf8	    0x838570ffffff	               add dword [rbp - 0x90], 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400cdff	    0x48838578ffff	           add qword [rbp - 0x88], 0x30 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ce07	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ce0a	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ce10	            0x7f94	                            jg 0x400cda6	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ce12	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce16	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce1d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce21	          0x4889ce	                            mov rsi, rcx	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce24	          0x4889c7	                            mov rdi, rax	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce27	      0xe800000000	                          call 0x400ce2c	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ce2c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce30	        0x488b7008	                mov rsi, qword [rax + 8]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce34	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce38	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce3c	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce40	      0xb900000000	                              mov ecx, 0	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce45	          0x4889c7	                            mov rdi, rax	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce48	      0xe89844ffff	                  call sym.write_message	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce4d	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ce53	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4003	sequencer.c	FUNCTION_98	CALL_11
0x400ce57	          0x4889c7	                            mov rdi, rax	      4003	sequencer.c	FUNCTION_98	CALL_11
0x400ce5a	      0xe85385ffff	              call sym.todo_list_release	      4003	sequencer.c	FUNCTION_98	CALL_11
0x400ce5f	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      4004	sequencer.c	FUNCTION_98
0x400ce65	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4005	sequencer.c	FUNCTION_98
0x400ce69	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4005	sequencer.c	FUNCTION_98
0x400ce72	            0x7405	                            je 0x400ce79	      4005	sequencer.c	FUNCTION_98
0x400ce74	      0xe800000000	                          call 0x400ce79	      4005	sequencer.c	FUNCTION_98
0x400ce79	              0xc9	                                   leave	      4005	sequencer.c	FUNCTION_98
0x400ce7a	              0xc3	                                     ret	      4005	sequencer.c	FUNCTION_98
apply_autostash	CALL,21:FOR,0:WHILE,0:ELSE,2:DO,0:IF,3:SWITCH,0:functions,0	151
0x400910f	              0x55	                                push rbp	      2914	sequencer.c	FUNCTION_85
0x4009110	          0x4889e5	                            mov rbp, rsp	      2914	sequencer.c	FUNCTION_85
0x4009113	              0x53	                                push rbx	      2914	sequencer.c	FUNCTION_85
0x4009114	    0x4881ec180100	                          sub rsp, 0x118	      2914	sequencer.c	FUNCTION_85
0x400911b	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      2914	sequencer.c	FUNCTION_85
0x4009122	    0x64488b042528	                mov rax, qword fs:[0x28]	      2914	sequencer.c	FUNCTION_85
0x400912b	        0x488945e8	             mov qword [rbp - 0x18], rax	      2914	sequencer.c	FUNCTION_85
0x400912f	            0x31c0	                            xor eax, eax	      2914	sequencer.c	FUNCTION_85
0x4009131	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2915	sequencer.c	FUNCTION_85
0x400913c	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      2915	sequencer.c	FUNCTION_85
0x4009147	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      2915	sequencer.c	FUNCTION_85
0x4009152	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2916	sequencer.c	FUNCTION_85
0x4009159	      0xb800000000	                              mov eax, 0	      2916	sequencer.c	FUNCTION_85
0x400915e	      0xb90c000000	                            mov ecx, 0xc	      2916	sequencer.c	FUNCTION_85
0x4009163	          0x4889d7	                            mov rdi, rdx	      2916	sequencer.c	FUNCTION_85
0x4009166	          0xf348ab	              rep stosq qword [rdi], rax	      2916	sequencer.c	FUNCTION_85
0x4009169	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      2916	sequencer.c	FUNCTION_85
0x4009174	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      2916	sequencer.c	FUNCTION_85
0x400917f	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      2917	sequencer.c	FUNCTION_85
0x4009189	      0xe88d78ffff	          call sym.rebase_path_autostash	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x400918e	          0x4889c1	                            mov rcx, rax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x4009191	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x4009198	      0xba01000000	                              mov edx, 1	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x400919d	          0x4889ce	                            mov rsi, rcx	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x40091a0	          0x4889c7	                            mov rdi, rax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x40091a3	      0xe8b882ffff	                  call sym.read_oneliner	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x40091a8	            0x85c0	                           test eax, eax	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x40091aa	            0x7519	                           jne 0x40091c5	      2919	sequencer.c	FUNCTION_85	IF_1	CALL_2
0x40091ac	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x40091b3	          0x4889c7	                            mov rdi, rax	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x40091b6	      0xe800000000	                          call 0x40091bb	      2920	sequencer.c	FUNCTION_85	IF_1	CALL_3
0x40091bb	      0xb800000000	                              mov eax, 0	      2921	sequencer.c	FUNCTION_85	IF_1
0x40091c0	      0xe9f0010000	                           jmp 0x40093b5	      2921	sequencer.c	FUNCTION_85	IF_1
0x40091c5	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2923	sequencer.c	FUNCTION_85	CALL_4
0x40091cc	          0x4889c7	                            mov rdi, rax	      2923	sequencer.c	FUNCTION_85	CALL_4
0x40091cf	      0xe800000000	                          call 0x40091d4	      2923	sequencer.c	FUNCTION_85	CALL_4
0x40091d4	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2925	sequencer.c	FUNCTION_85
0x40091db	          0x83c808	                               or eax, 8	      2925	sequencer.c	FUNCTION_85
0x40091de	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2925	sequencer.c	FUNCTION_85
0x40091e4	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2926	sequencer.c	FUNCTION_85
0x40091eb	          0x83c802	                               or eax, 2	      2926	sequencer.c	FUNCTION_85
0x40091ee	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2926	sequencer.c	FUNCTION_85
0x40091f4	     0xfb68568ffff	            movzx eax, byte [rbp - 0x98]	      2927	sequencer.c	FUNCTION_85
0x40091fb	          0x83c804	                               or eax, 4	      2927	sequencer.c	FUNCTION_85
0x40091fe	    0x888568ffffff	               mov byte [rbp - 0x98], al	      2927	sequencer.c	FUNCTION_85
0x4009204	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2928	sequencer.c	FUNCTION_85	CALL_5
0x400920b	        0x4883c008	                              add rax, 8	      2928	sequencer.c	FUNCTION_85	CALL_5
0x400920f	      0xbe00000000	                              mov esi, 0	      2928	sequencer.c	FUNCTION_85	CALL_5
0x4009214	          0x4889c7	                            mov rdi, rax	      2928	sequencer.c	FUNCTION_85	CALL_5
0x4009217	      0xe800000000	                          call 0x400921c	      2928	sequencer.c	FUNCTION_85	CALL_5
0x400921c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2929	sequencer.c	FUNCTION_85	CALL_6
0x4009223	        0x4883c008	                              add rax, 8	      2929	sequencer.c	FUNCTION_85	CALL_6
0x4009227	      0xbe00000000	                              mov esi, 0	      2929	sequencer.c	FUNCTION_85	CALL_6
0x400922c	          0x4889c7	                            mov rdi, rax	      2929	sequencer.c	FUNCTION_85	CALL_6
0x400922f	      0xe800000000	                          call 0x4009234	      2929	sequencer.c	FUNCTION_85	CALL_6
0x4009234	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2930	sequencer.c	FUNCTION_85	CALL_7
0x400923b	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      2930	sequencer.c	FUNCTION_85	CALL_7
0x4009242	        0x4883c208	                              add rdx, 8	      2930	sequencer.c	FUNCTION_85	CALL_7
0x4009246	          0x4889c6	                            mov rsi, rax	      2930	sequencer.c	FUNCTION_85	CALL_7
0x4009249	          0x4889d7	                            mov rdi, rdx	      2930	sequencer.c	FUNCTION_85	CALL_7
0x400924c	      0xe800000000	                          call 0x4009251	      2930	sequencer.c	FUNCTION_85	CALL_7
0x4009251	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x4009258	          0x4889c7	                            mov rdi, rax	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x400925b	      0xe800000000	                          call 0x4009260	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x4009260	            0x85c0	                           test eax, eax	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x4009262	            0x7529	                           jne 0x400928d	      2931	sequencer.c	FUNCTION_85	IF_2	CALL_8
0x4009264	      0xbf00000000	                              mov edi, 0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x4009269	      0xe83971ffff	                               call sym.	      2932	sequencer.c	FUNCTION_85	CALL_10
0x400926e	          0x4889c2	                            mov rdx, rax	      2932	sequencer.c	FUNCTION_85	CALL_10
0x4009271	    0x488b05000000	            mov rax, qword [0x04009278] 	      2932	sequencer.c	FUNCTION_85	CALL_10
0x4009278	          0x4889d6	                            mov rsi, rdx	      2932	sequencer.c	FUNCTION_85	CALL_10
0x400927b	          0x4889c7	                            mov rdi, rax	      2932	sequencer.c	FUNCTION_85	CALL_10
0x400927e	      0xb800000000	                              mov eax, 0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x4009283	      0xe800000000	                          call 0x4009288	      2932	sequencer.c	FUNCTION_85	CALL_10
0x4009288	      0xe913010000	                           jmp 0x40093a0	      2932	sequencer.c	FUNCTION_85	CALL_10
0x400928d	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x4009291	      0xb800000000	                              mov eax, 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x4009296	      0xb90c000000	                            mov ecx, 0xc	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x400929b	          0x4889d7	                            mov rdi, rdx	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x400929e	          0xf348ab	              rep stosq qword [rdi], rax	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x40092a1	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x40092a9	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2934	sequencer.c	FUNCTION_85	ELSE_1
0x40092b1	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x40092b5	          0x83c808	                               or eax, 8	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x40092b8	          0x8845c8	               mov byte [rbp - 0x38], al	      2936	sequencer.c	FUNCTION_85	ELSE_1
0x40092bb	        0x488d4580	                   lea rax, [rbp - 0x80]	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x40092bf	        0x4883c008	                              add rax, 8	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x40092c3	      0xbe00000000	                              mov esi, 0	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x40092c8	          0x4889c7	                            mov rdi, rax	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x40092cb	      0xe800000000	                          call 0x40092d0	      2937	sequencer.c	FUNCTION_85	ELSE_1	CALL_11
0x40092d0	        0x488d4580	                   lea rax, [rbp - 0x80]	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x40092d4	        0x4883c008	                              add rax, 8	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x40092d8	      0xbe00000000	                              mov esi, 0	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x40092dd	          0x4889c7	                            mov rdi, rax	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x40092e0	      0xe800000000	                          call 0x40092e5	      2938	sequencer.c	FUNCTION_85	ELSE_1	CALL_12
0x40092e5	        0x488d4580	                   lea rax, [rbp - 0x80]	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x40092e9	        0x4883c008	                              add rax, 8	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x40092ed	      0xbe00000000	                              mov esi, 0	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x40092f2	          0x4889c7	                            mov rdi, rax	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x40092f5	      0xe800000000	                          call 0x40092fa	      2939	sequencer.c	FUNCTION_85	ELSE_1	CALL_13
0x40092fa	        0x488d4580	                   lea rax, [rbp - 0x80]	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x40092fe	        0x4883c008	                              add rax, 8	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x4009302	      0xbe00000000	                              mov esi, 0	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x4009307	          0x4889c7	                            mov rdi, rax	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x400930a	      0xe800000000	                          call 0x400930f	      2940	sequencer.c	FUNCTION_85	ELSE_1	CALL_14
0x400930f	        0x488d4580	                   lea rax, [rbp - 0x80]	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x4009313	        0x4883c008	                              add rax, 8	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x4009317	      0xbe00000000	                              mov esi, 0	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x400931c	          0x4889c7	                            mov rdi, rax	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x400931f	      0xe800000000	                          call 0x4009324	      2941	sequencer.c	FUNCTION_85	ELSE_1	CALL_15
0x4009324	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x400932b	        0x488d5580	                   lea rdx, [rbp - 0x80]	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x400932f	        0x4883c208	                              add rdx, 8	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x4009333	          0x4889c6	                            mov rsi, rax	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x4009336	          0x4889d7	                            mov rdi, rdx	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x4009339	      0xe800000000	                          call 0x400933e	      2942	sequencer.c	FUNCTION_85	ELSE_1	CALL_16
0x400933e	        0x488d4580	                   lea rax, [rbp - 0x80]	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x4009342	          0x4889c7	                            mov rdi, rax	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x4009345	      0xe800000000	                          call 0x400934a	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x400934a	            0x85c0	                           test eax, eax	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x400934c	            0x742e	                            je 0x400937c	      2943	sequencer.c	FUNCTION_85	ELSE_1	IF_3	CALL_17
0x400934e	    0x488b9d10ffff	             mov rbx, qword [rbp - 0xf0]	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x4009355	      0xbf00000000	                              mov edi, 0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400935a	      0xe84870ffff	                               call sym.	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400935f	          0x4889de	                            mov rsi, rbx	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x4009362	          0x4889c7	                            mov rdi, rax	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x4009365	      0xb800000000	                              mov eax, 0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400936a	      0xe800000000	                          call 0x400936f	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400936f	      0xe8cc6cffff	                    call sym.const_error	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x4009374	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400937a	            0xeb24	                           jmp 0x40093a0	      2944	sequencer.c	FUNCTION_85	ELSE_1	CALL_18
0x400937c	      0xbf00000000	                              mov edi, 0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009381	      0xe82170ffff	                               call sym.	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009386	          0x4889c2	                            mov rdx, rax	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009389	    0x488b05000000	            mov rax, qword [0x04009390] 	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009390	          0x4889d6	                            mov rsi, rdx	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009393	          0x4889c7	                            mov rdi, rax	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x4009396	      0xb800000000	                              mov eax, 0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x400939b	      0xe800000000	                          call 0x40093a0	      2946	sequencer.c	FUNCTION_85	ELSE_1	ELSE_2	CALL_19
0x40093a0	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	      2953	sequencer.c	FUNCTION_85	CALL_21
0x40093a7	          0x4889c7	                            mov rdi, rax	      2953	sequencer.c	FUNCTION_85	CALL_21
0x40093aa	      0xe800000000	                          call 0x40093af	      2953	sequencer.c	FUNCTION_85	CALL_21
0x40093af	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      2954	sequencer.c	FUNCTION_85
0x40093b5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2955	sequencer.c	FUNCTION_85
0x40093b9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2955	sequencer.c	FUNCTION_85
0x40093c2	            0x7405	                            je 0x40093c9	      2955	sequencer.c	FUNCTION_85
0x40093c4	      0xe800000000	                          call 0x40093c9	      2955	sequencer.c	FUNCTION_85
0x40093c9	    0x4881c4180100	                          add rsp, 0x118	      2955	sequencer.c	FUNCTION_85
0x40093d0	              0x5b	                                 pop rbx	      2955	sequencer.c	FUNCTION_85
0x40093d1	              0x5d	                                 pop rbp	      2955	sequencer.c	FUNCTION_85
0x40093d2	              0xc3	                                     ret	      2955	sequencer.c	FUNCTION_85
update_squash_messages	CALL,58:FOR,0:WHILE,0:ELSE,3:DO,0:IF,10:SWITCH,0:functions,0	376
0x4003cb3	              0x55	                                push rbp	      1368	sequencer.c	FUNCTION_45
0x4003cb4	          0x4889e5	                            mov rbp, rsp	      1368	sequencer.c	FUNCTION_45
0x4003cb7	              0x53	                                push rbx	      1368	sequencer.c	FUNCTION_45
0x4003cb8	    0x4881ecb80000	                           sub rsp, 0xb8	      1368	sequencer.c	FUNCTION_45
0x4003cbf	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      1368	sequencer.c	FUNCTION_45
0x4003cc5	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      1368	sequencer.c	FUNCTION_45
0x4003ccc	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1368	sequencer.c	FUNCTION_45
0x4003cd3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1368	sequencer.c	FUNCTION_45
0x4003cdc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1368	sequencer.c	FUNCTION_45
0x4003ce0	            0x31c0	                            xor eax, eax	      1368	sequencer.c	FUNCTION_45
0x4003ce2	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1369	sequencer.c	FUNCTION_45
0x4003cea	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1369	sequencer.c	FUNCTION_45
0x4003cf2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1369	sequencer.c	FUNCTION_45
0x4003cfa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1373	sequencer.c	FUNCTION_45	IF_1
0x4003d01	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1373	sequencer.c	FUNCTION_45	IF_1
0x4003d04	            0x85c0	                           test eax, eax	      1373	sequencer.c	FUNCTION_45	IF_1
0x4003d06	     0xf8e29010000	                           jle 0x4003e35	      1373	sequencer.c	FUNCTION_45	IF_1
0x4003d0c	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4003d14	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4003d1c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x4003d24	      0xe831caffff	         call sym.rebase_path_squash_msg	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d29	          0x4889c1	                            mov rcx, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d2c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d30	      0xba09000000	                              mov edx, 9	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d35	          0x4889ce	                            mov rsi, rcx	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d38	          0x4889c7	                            mov rdi, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d3b	      0xe800000000	                          call 0x4003d40	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d40	          0x4885c0	                           test rax, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d43	            0x7f2c	                            jg 0x4003d71	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4003d45	      0xe810caffff	         call sym.rebase_path_squash_msg	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d4a	          0x4889c3	                            mov rbx, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d4d	      0xbf00000000	                              mov edi, 0	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d52	      0xe850c6ffff	                               call sym.	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d57	          0x4889de	                            mov rsi, rbx	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d5a	          0x4889c7	                            mov rdi, rax	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d5d	      0xb800000000	                              mov eax, 0	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d62	      0xe800000000	                          call 0x4003d67	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d67	      0xe8d4c2ffff	                    call sym.const_error	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d6c	      0xe988050000	                           jmp 0x40042f9	      1378	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4003d71	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1381	sequencer.c	FUNCTION_45	IF_1
0x4003d75	           0xfb610	                   movzx edx, byte [rax]	      1381	sequencer.c	FUNCTION_45	IF_1
0x4003d78	     0xfb605000000	           movzx eax, byte [0x04003d7f] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x4003d7f	            0x38c2	                              cmp dl, al	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d81	            0x7406	                            je 0x4003d89	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d83	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d87	            0xeb11	                           jmp 0x4003d9a	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d89	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d8d	      0xbe0a000000	                            mov esi, 0xa	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d92	          0x4889c7	                            mov rdi, rax	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d95	      0xe800000000	                          call 0x4003d9a	      1382	sequencer.c	FUNCTION_45	IF_1
0x4003d9a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1381	sequencer.c	FUNCTION_45	IF_1
0x4003da1	     0xfb605000000	           movzx eax, byte [0x04003da8] 	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003da8	           0xfbed0	                           movsx edx, al	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003dab	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003daf	      0xbe00000000	                              mov esi, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003db4	          0x4889c7	                            mov rdi, rax	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003db7	      0xb800000000	                              mov eax, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003dbc	      0xe800000000	                          call 0x4003dc1	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4003dc1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1386	sequencer.c	FUNCTION_45	IF_1
0x4003dc8	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1386	sequencer.c	FUNCTION_45	IF_1
0x4003dcb	          0x8d5802	                      lea ebx, [rax + 2]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003dce	      0xbf00000000	                              mov edi, 0	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003dd3	      0xe8cfc5ffff	                               call sym.	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003dd8	          0x4889c1	                            mov rcx, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003ddb	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003ddf	            0x89da	                            mov edx, ebx	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003de1	          0x4889ce	                            mov rsi, rcx	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003de4	          0x4889c7	                            mov rdi, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003de7	      0xb800000000	                              mov eax, 0	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003dec	      0xe800000000	                          call 0x4003df1	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4003df1	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003df5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003df9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e00	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e04	          0x4829f0	                            sub rax, rsi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e07	          0x4889c6	                            mov rsi, rax	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e0a	        0x488d4590	                   lea rax, [rbp - 0x70]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e0e	          0x4989c8	                             mov r8, rcx	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e11	          0x4889d1	                            mov rcx, rdx	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e14	          0x4889f2	                            mov rdx, rsi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e17	      0xbe00000000	                              mov esi, 0	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e1c	          0x4889c7	                            mov rdi, rax	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e1f	      0xe800000000	                          call 0x4003e24	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4003e24	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4003e28	          0x4889c7	                            mov rdi, rax	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4003e2b	      0xe800000000	                          call 0x4003e30	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4003e30	      0xe9f4010000	                           jmp 0x4004029	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x4003e35	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e39	          0x4889c6	                            mov rsi, rax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e3c	      0xbf00000000	                              mov edi, 0	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e41	      0xe800000000	                          call 0x4003e46	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e46	            0x85c0	                           test eax, eax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e48	            0x7421	                            je 0x4003e6b	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x4003e4a	      0xbf00000000	                              mov edi, 0	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e4f	      0xe853c5ffff	                               call sym.	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e54	          0x4889c7	                            mov rdi, rax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e57	      0xb800000000	                              mov eax, 0	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e5c	      0xe800000000	                          call 0x4003e61	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e61	      0xe8dac1ffff	                    call sym.const_error	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e66	      0xe98e040000	                           jmp 0x40042f9	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4003e6b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e6f	          0x4889c7	                            mov rdi, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e72	      0xe800000000	                          call 0x4003e77	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e77	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e7e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e86	            0x7521	                           jne 0x4003ea9	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x4003e88	      0xbf00000000	                              mov edi, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003e8d	      0xe815c5ffff	                               call sym.	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003e92	          0x4889c7	                            mov rdi, rax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003e95	      0xb800000000	                              mov eax, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003e9a	      0xe800000000	                          call 0x4003e9f	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003e9f	      0xe89cc1ffff	                    call sym.const_error	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003ea4	      0xe950040000	                           jmp 0x40042f9	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4003ea9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003eb0	      0xbe00000000	                              mov esi, 0	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003eb5	          0x4889c7	                            mov rdi, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003eb8	      0xe800000000	                          call 0x4003ebd	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003ebd	        0x48894580	             mov qword [rbp - 0x80], rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003ec1	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003ec6	            0x7521	                           jne 0x4003ee9	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4003ec8	      0xbf00000000	                              mov edi, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003ecd	      0xe8d5c4ffff	                               call sym.	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003ed2	          0x4889c7	                            mov rdi, rax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003ed5	      0xb800000000	                              mov eax, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003eda	      0xe800000000	                          call 0x4003edf	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003edf	      0xe85cc1ffff	                    call sym.const_error	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003ee4	      0xe910040000	                           jmp 0x40042f9	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4003ee9	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4003eed	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4003ef1	          0x4889d6	                            mov rsi, rdx	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4003ef4	          0x4889c7	                            mov rdi, rax	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4003ef7	      0xe800000000	                          call 0x4003efc	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4003efc	      0xe888c8ffff	          call sym.rebase_path_fixup_msg	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f01	          0x4889c3	                            mov rbx, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f08	          0x4889c7	                            mov rdi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f0b	      0xe800000000	                          call 0x4003f10	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f10	          0x4889c6	                            mov rsi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f13	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f17	      0xb900000000	                              mov ecx, 0	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f1c	          0x4889da	                            mov rdx, rbx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f1f	          0x4889c7	                            mov rdi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f22	      0xe8bed3ffff	                  call sym.write_message	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f27	            0x85c0	                           test eax, eax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f29	            0x7442	                            je 0x4003f6d	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4003f2b	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4003f2f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4003f36	          0x4889d6	                            mov rsi, rdx	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4003f39	          0x4889c7	                            mov rdi, rax	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4003f3c	      0xe800000000	                          call 0x4003f41	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4003f41	      0xe843c8ffff	          call sym.rebase_path_fixup_msg	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f46	          0x4889c3	                            mov rbx, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f49	      0xbf00000000	                              mov edi, 0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f4e	      0xe854c4ffff	                               call sym.	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f53	          0x4889de	                            mov rsi, rbx	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f56	          0x4889c7	                            mov rdi, rax	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f59	      0xb800000000	                              mov eax, 0	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f5e	      0xe800000000	                          call 0x4003f63	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f63	      0xe8d8c0ffff	                    call sym.const_error	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f68	      0xe98c030000	                           jmp 0x40042f9	      1405	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_21
0x4003f6d	     0xfb605000000	           movzx eax, byte [0x04003f74] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f74	           0xfbed0	                           movsx edx, al	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f77	        0x488d4590	                   lea rax, [rbp - 0x70]	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f7b	      0xbe00000000	                              mov esi, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f80	          0x4889c7	                            mov rdi, rax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f83	      0xb800000000	                              mov eax, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f88	      0xe800000000	                          call 0x4003f8d	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4003f8d	      0xbf00000000	                              mov edi, 0	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003f92	      0xe810c4ffff	                               call sym.	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003f97	          0x4889c1	                            mov rcx, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003f9a	        0x488d4590	                   lea rax, [rbp - 0x70]	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003f9e	      0xba02000000	                              mov edx, 2	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003fa3	          0x4889ce	                            mov rsi, rcx	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003fa6	          0x4889c7	                            mov rdi, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003fa9	      0xb800000000	                              mov eax, 0	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003fae	      0xe800000000	                          call 0x4003fb3	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4003fb3	     0xfb605000000	           movzx eax, byte [0x04003fba] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fba	           0xfbed0	                           movsx edx, al	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fbd	        0x488d4590	                   lea rax, [rbp - 0x70]	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fc1	      0xbe00000000	                              mov esi, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fc6	          0x4889c7	                            mov rdi, rax	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fc9	      0xb800000000	                              mov eax, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fce	      0xe800000000	                          call 0x4003fd3	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x4003fd3	      0xbf00000000	                              mov edi, 0	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fd8	      0xe8cac3ffff	                               call sym.	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fdd	          0x4889c2	                            mov rdx, rax	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fe0	        0x488d4590	                   lea rax, [rbp - 0x70]	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fe4	          0x4889d6	                            mov rsi, rdx	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fe7	          0x4889c7	                            mov rdi, rax	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fea	      0xe886c2ffff	                  call sym.strbuf_addstr	      1412	sequencer.c	FUNCTION_45	ELSE_1	CALL_28
0x4003fef	        0x488d4590	                   lea rax, [rbp - 0x70]	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x4003ff3	      0xbe00000000	                              mov esi, 0	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x4003ff8	          0x4889c7	                            mov rdi, rax	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x4003ffb	      0xe875c2ffff	                  call sym.strbuf_addstr	      1413	sequencer.c	FUNCTION_45	ELSE_1	CALL_29
0x4004000	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x4004004	        0x488d4590	                   lea rax, [rbp - 0x70]	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x4004008	          0x4889d6	                            mov rsi, rdx	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x400400b	          0x4889c7	                            mov rdi, rax	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x400400e	      0xe862c2ffff	                  call sym.strbuf_addstr	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x4004013	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4004017	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x400401e	          0x4889d6	                            mov rsi, rdx	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4004021	          0x4889c7	                            mov rdi, rax	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4004024	      0xe800000000	                          call 0x4004029	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4004029	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004030	      0xbe00000000	                              mov esi, 0	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004035	          0x4889c7	                            mov rdi, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004038	      0xe800000000	                          call 0x400403d	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x400403d	        0x48894588	             mov qword [rbp - 0x78], rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004041	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004046	            0x753a	                           jne 0x4004082	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x4004048	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400404f	        0x4883c004	                              add rax, 4	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004053	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004056	      0xe800000000	                          call 0x400405b	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400405b	          0x4889c3	                            mov rbx, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400405e	      0xbf00000000	                              mov edi, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004063	      0xe83fc3ffff	                               call sym.	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004068	          0x4889de	                            mov rsi, rbx	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400406b	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400406e	      0xb800000000	                              mov eax, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004073	      0xe800000000	                          call 0x4004078	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004078	      0xe8c3bfffff	                    call sym.const_error	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x400407d	      0xe977020000	                           jmp 0x40042f9	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4004082	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1422	sequencer.c	FUNCTION_45	CALL_35
0x4004086	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1422	sequencer.c	FUNCTION_45	CALL_35
0x400408a	          0x4889d6	                            mov rsi, rdx	      1422	sequencer.c	FUNCTION_45	CALL_35
0x400408d	          0x4889c7	                            mov rdi, rax	      1422	sequencer.c	FUNCTION_45	CALL_35
0x4004090	      0xe800000000	                          call 0x4004095	      1422	sequencer.c	FUNCTION_45	CALL_35
0x4004095	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 5	      1424	sequencer.c	FUNCTION_45	IF_8
0x400409c	     0xf859a000000	                           jne 0x400413c	      1424	sequencer.c	FUNCTION_45	IF_8
0x40040a2	      0xe8e2c6ffff	          call sym.rebase_path_fixup_msg	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x40040a7	          0x4889c7	                            mov rdi, rax	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x40040aa	      0xe800000000	                          call 0x40040af	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x40040af	     0xfb605000000	           movzx eax, byte [0x040040b6] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040b6	           0xfbed0	                           movsx edx, al	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040b9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040bd	      0xbe00000000	                              mov esi, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040c2	          0x4889c7	                            mov rdi, rax	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040c5	      0xb800000000	                              mov eax, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040ca	      0xe800000000	                          call 0x40040cf	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x40040cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1428	sequencer.c	FUNCTION_45	IF_8
0x40040d6	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1428	sequencer.c	FUNCTION_45	IF_8
0x40040d9	          0x8d5001	                      lea edx, [rax + 1]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040dc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040e3	          0x895078	             mov dword [rax + 0x78], edx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040e6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1428	sequencer.c	FUNCTION_45	IF_8
0x40040ed	          0x8b5878	            mov ebx, dword [rax + 0x78] 	      1428	sequencer.c	FUNCTION_45	IF_8
0x40040f0	      0xbf00000000	                              mov edi, 0	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040f5	      0xe8adc2ffff	                               call sym.	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040fa	          0x4889c1	                            mov rcx, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x40040fd	        0x488d4590	                   lea rax, [rbp - 0x70]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4004101	            0x89da	                            mov edx, ebx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4004103	          0x4889ce	                            mov rsi, rcx	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4004106	          0x4889c7	                            mov rdi, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4004109	      0xb800000000	                              mov eax, 0	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400410e	      0xe800000000	                          call 0x4004113	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4004113	        0x488d4590	                   lea rax, [rbp - 0x70]	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_41
0x4004117	      0xbe00000000	                              mov esi, 0	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_41
0x400411c	          0x4889c7	                            mov rdi, rax	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_41
0x400411f	      0xe851c1ffff	                  call sym.strbuf_addstr	      1429	sequencer.c	FUNCTION_45	IF_8	CALL_41
0x4004124	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x4004128	        0x488d4590	                   lea rax, [rbp - 0x70]	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x400412c	          0x4889d6	                            mov rsi, rdx	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x400412f	          0x4889c7	                            mov rdi, rax	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x4004132	      0xe83ec1ffff	                  call sym.strbuf_addstr	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x4004137	      0xe9d2000000	                           jmp 0x400420e	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x400413c	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 4	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4004143	     0xf8599000000	                           jne 0x40041e2	      1431	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4004149	     0xfb605000000	           movzx eax, byte [0x04004150] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4004150	           0xfbed0	                           movsx edx, al	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4004153	        0x488d4590	                   lea rax, [rbp - 0x70]	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4004157	      0xbe00000000	                              mov esi, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x400415c	          0x4889c7	                            mov rdi, rax	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x400415f	      0xb800000000	                              mov eax, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4004164	      0xe800000000	                          call 0x4004169	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x4004169	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4004170	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4004173	          0x8d5001	                      lea edx, [rax + 1]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4004176	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400417d	          0x895078	             mov dword [rax + 0x78], edx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4004180	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x4004187	          0x8b5878	            mov ebx, dword [rax + 0x78] 	      1434	sequencer.c	FUNCTION_45	ELSE_2	IF_9
0x400418a	      0xbf00000000	                              mov edi, 0	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400418f	      0xe813c2ffff	                               call sym.	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4004194	          0x4889c1	                            mov rcx, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4004197	        0x488d4590	                   lea rax, [rbp - 0x70]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400419b	            0x89da	                            mov edx, ebx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400419d	          0x4889ce	                            mov rsi, rcx	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40041a0	          0x4889c7	                            mov rdi, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40041a3	      0xb800000000	                              mov eax, 0	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40041a8	      0xe800000000	                          call 0x40041ad	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40041ad	        0x488d4590	                   lea rax, [rbp - 0x70]	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_46
0x40041b1	      0xbe00000000	                              mov esi, 0	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_46
0x40041b6	          0x4889c7	                            mov rdi, rax	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_46
0x40041b9	      0xe8b7c0ffff	                  call sym.strbuf_addstr	      1435	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_46
0x40041be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041c2	          0x4889c7	                            mov rdi, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041c5	      0xe800000000	                          call 0x40041ca	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041ca	          0x4889c2	                            mov rdx, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041cd	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041d1	        0x488d4590	                   lea rax, [rbp - 0x70]	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041d5	          0x4889ce	                            mov rsi, rcx	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041d8	          0x4889c7	                            mov rdi, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041db	      0xe800000000	                          call 0x40041e0	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041e0	            0xeb2c	                           jmp 0x400420e	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x40041e2	      0xbf00000000	                              mov edi, 0	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041e7	      0xe8bbc1ffff	                               call sym.	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041ec	          0x4889c2	                            mov rdx, rax	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041ef	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041f5	            0x89c6	                            mov esi, eax	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041f7	          0x4889d7	                            mov rdi, rdx	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041fa	      0xb800000000	                              mov eax, 0	      1438	sequencer.c	FUNCTION_45	CALL_49
0x40041ff	      0xe800000000	                          call 0x4004204	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4004204	      0xe837beffff	                    call sym.const_error	      1438	sequencer.c	FUNCTION_45	CALL_49
0x4004209	      0xe9eb000000	                           jmp 0x40042f9	      1438	sequencer.c	FUNCTION_45	CALL_49
0x400420e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4004212	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4004219	          0x4889d6	                            mov rsi, rdx	      1439	sequencer.c	FUNCTION_45	CALL_50
0x400421c	          0x4889c7	                            mov rdi, rax	      1439	sequencer.c	FUNCTION_45	CALL_50
0x400421f	      0xe800000000	                          call 0x4004224	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4004224	      0xe831c5ffff	         call sym.rebase_path_squash_msg	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004229	          0x4889c2	                            mov rdx, rax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400422c	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004230	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004234	      0xb900000000	                              mov ecx, 0	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004239	          0x4889c7	                            mov rdi, rax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400423c	      0xe8a4d0ffff	                  call sym.write_message	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004241	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4004247	        0x488d4590	                   lea rax, [rbp - 0x70]	      1442	sequencer.c	FUNCTION_45	CALL_53
0x400424b	          0x4889c7	                            mov rdi, rax	      1442	sequencer.c	FUNCTION_45	CALL_53
0x400424e	      0xe800000000	                          call 0x4004253	      1442	sequencer.c	FUNCTION_45	CALL_53
0x4004253	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1444	sequencer.c	FUNCTION_45	IF_10
0x400425a	     0xf8593000000	                           jne 0x40042f3	      1444	sequencer.c	FUNCTION_45	IF_10
0x4004260	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1448	sequencer.c	FUNCTION_45	IF_10	CALL_56
0x4004267	        0x4883c004	                              add rax, 4	      1448	sequencer.c	FUNCTION_45	IF_10	CALL_56
0x400426b	          0x4889c7	                            mov rdi, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400426e	      0xe800000000	                          call 0x4004273	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004273	          0x4889c3	                            mov rbx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004276	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400427c	            0x89c7	                            mov edi, eax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400427e	      0xe887f9ffff	              call sym.command_to_string	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004283	          0x4889c1	                            mov rcx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004286	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1446	sequencer.c	FUNCTION_45	IF_10
0x400428d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1446	sequencer.c	FUNCTION_45	IF_10
0x4004291	          0x4885c0	                           test rax, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004294	            0x7407	                            je 0x400429d	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x4004296	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400429b	            0xeb05	                           jmp 0x40042a2	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x400429d	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042a2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042a9	        0x4883c060	                           add rax, 0x60	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042ad	          0x4989d8	                             mov r8, rbx	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042b0	      0xbe00000000	                              mov esi, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042b5	          0x4889c7	                            mov rdi, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042b8	      0xb800000000	                              mov eax, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042bd	      0xe800000000	                          call 0x40042c2	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40042c2	      0xe8f1c4ffff	     call sym.rebase_path_current_fixups	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042c7	          0x4889c2	                            mov rdx, rax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042d1	        0x488b7068	            mov rsi, qword [rax + 0x68] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042d5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042dc	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042e0	      0xb900000000	                              mov ecx, 0	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042e5	          0x4889c7	                            mov rdi, rax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042e8	      0xe8f8cfffff	                  call sym.write_message	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042ed	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40042f3	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1454	sequencer.c	FUNCTION_45
0x40042f9	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1455	sequencer.c	FUNCTION_45
0x40042fd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1455	sequencer.c	FUNCTION_45
0x4004306	            0x7405	                            je 0x400430d	      1455	sequencer.c	FUNCTION_45
0x4004308	      0xe800000000	                          call 0x400430d	      1455	sequencer.c	FUNCTION_45
0x400430d	    0x4881c4b80000	                           add rsp, 0xb8	      1455	sequencer.c	FUNCTION_45
0x4004314	              0x5b	                                 pop rbx	      1455	sequencer.c	FUNCTION_45
0x4004315	              0x5d	                                 pop rbp	      1455	sequencer.c	FUNCTION_45
0x4004316	              0xc3	                                     ret	      1455	sequencer.c	FUNCTION_45
run_git_commit	CALL,20:FOR,0:WHILE,0:ELSE,2:DO,0:IF,15:SWITCH,0:functions,0	212
0x40022b9	              0x55	                                push rbp	       719	sequencer.c	FUNCTION_26
0x40022ba	          0x4889e5	                            mov rbp, rsp	       719	sequencer.c	FUNCTION_26
0x40022bd	    0x4881ecd00000	                           sub rsp, 0xd0	       719	sequencer.c	FUNCTION_26
0x40022c4	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       719	sequencer.c	FUNCTION_26
0x40022cb	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       719	sequencer.c	FUNCTION_26
0x40022d2	    0x89953cffffff	             mov dword [rbp - 0xc4], edx	       719	sequencer.c	FUNCTION_26
0x40022d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       719	sequencer.c	FUNCTION_26
0x40022e1	        0x488945f8	                mov qword [rbp - 8], rax	       719	sequencer.c	FUNCTION_26
0x40022e5	            0x31c0	                            xor eax, eax	       719	sequencer.c	FUNCTION_26
0x40022e7	        0x488d5590	                   lea rdx, [rbp - 0x70]	       720	sequencer.c	FUNCTION_26
0x40022eb	      0xb800000000	                              mov eax, 0	       720	sequencer.c	FUNCTION_26
0x40022f0	      0xb90c000000	                            mov ecx, 0xc	       720	sequencer.c	FUNCTION_26
0x40022f5	          0x4889d7	                            mov rdi, rdx	       720	sequencer.c	FUNCTION_26
0x40022f8	          0xf348ab	              rep stosq qword [rdi], rax	       720	sequencer.c	FUNCTION_26
0x40022fb	    0x48c745980000	               mov qword [rbp - 0x68], 0	       720	sequencer.c	FUNCTION_26
0x4002303	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       720	sequencer.c	FUNCTION_26
0x400230b	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       723	sequencer.c	FUNCTION_26
0x400230f	          0x83c808	                               or eax, 8	       723	sequencer.c	FUNCTION_26
0x4002312	          0x8845d8	               mov byte [rbp - 0x28], al	       723	sequencer.c	FUNCTION_26
0x4002315	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x400231c	          0x4889c7	                            mov rdi, rax	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x400231f	      0xe8a4e9ffff	                    call sym.is_rebase_i	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4002324	            0x85c0	                           test eax, eax	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4002326	            0x747d	                            je 0x40023a5	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4002328	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400232e	          0x83e002	                              and eax, 2	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002331	            0x85c0	                           test eax, eax	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002333	            0x7511	                           jne 0x4002346	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002335	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002339	          0x83c820	                            or eax, 0x20	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400233c	          0x8845d8	               mov byte [rbp - 0x28], al	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x400233f	    0xc745c4ffffff	     mov dword [rbp - 0x3c], 0xffffffff 	       728	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002346	        0x488d4590	                   lea rax, [rbp - 0x70]	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x400234a	        0x4883c018	                           add rax, 0x18	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x400234e	          0x4889c7	                            mov rdi, rax	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x4002351	      0xe861fdffff	                call sym.read_env_script	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x4002356	            0x85c0	                           test eax, eax	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x4002358	            0x744b	                            je 0x40023a5	       731	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_2
0x400235a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4002361	          0x4889c7	                            mov rdi, rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4002364	      0xe8e1eaffff	            call sym.gpg_sign_opt_quoted	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4002369	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       732	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_3
0x4002370	      0xbf00000000	                              mov edi, 0	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4002375	      0xe82de0ffff	                               call sym.	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400237a	          0x4889c1	                            mov rcx, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400237d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4002384	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400238b	          0x4889c6	                            mov rsi, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400238e	          0x4889cf	                            mov rdi, rcx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4002391	      0xb800000000	                              mov eax, 0	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4002396	      0xe800000000	                          call 0x400239b	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400239b	      0xe8a0dcffff	                    call sym.const_error	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40023a0	      0xe97c020000	                           jmp 0x4002621	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40023a5	        0x488d4590	                   lea rax, [rbp - 0x70]	       739	sequencer.c	FUNCTION_26	CALL_5
0x40023a9	        0x4883c008	                              add rax, 8	       739	sequencer.c	FUNCTION_26	CALL_5
0x40023ad	      0xbe00000000	                              mov esi, 0	       739	sequencer.c	FUNCTION_26	CALL_5
0x40023b2	          0x4889c7	                            mov rdi, rax	       739	sequencer.c	FUNCTION_26	CALL_5
0x40023b5	      0xe800000000	                          call 0x40023ba	       739	sequencer.c	FUNCTION_26	CALL_5
0x40023ba	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       741	sequencer.c	FUNCTION_26	IF_4
0x40023c0	          0x83e010	                           and eax, 0x10	       741	sequencer.c	FUNCTION_26	IF_4
0x40023c3	            0x85c0	                           test eax, eax	       741	sequencer.c	FUNCTION_26	IF_4
0x40023c5	            0x7515	                           jne 0x40023dc	       741	sequencer.c	FUNCTION_26	IF_4
0x40023c7	        0x488d4590	                   lea rax, [rbp - 0x70]	       742	sequencer.c	FUNCTION_26	CALL_6
0x40023cb	        0x4883c008	                              add rax, 8	       742	sequencer.c	FUNCTION_26	CALL_6
0x40023cf	      0xbe00000000	                              mov esi, 0	       742	sequencer.c	FUNCTION_26	CALL_6
0x40023d4	          0x4889c7	                            mov rdi, rax	       742	sequencer.c	FUNCTION_26	CALL_6
0x40023d7	      0xe800000000	                          call 0x40023dc	       742	sequencer.c	FUNCTION_26	CALL_6
0x40023dc	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       743	sequencer.c	FUNCTION_26	IF_5
0x40023e2	          0x83e004	                              and eax, 4	       743	sequencer.c	FUNCTION_26	IF_5
0x40023e5	            0x85c0	                           test eax, eax	       743	sequencer.c	FUNCTION_26	IF_5
0x40023e7	            0x7415	                            je 0x40023fe	       743	sequencer.c	FUNCTION_26	IF_5
0x40023e9	        0x488d4590	                   lea rax, [rbp - 0x70]	       744	sequencer.c	FUNCTION_26	CALL_7
0x40023ed	        0x4883c008	                              add rax, 8	       744	sequencer.c	FUNCTION_26	CALL_7
0x40023f1	      0xbe00000000	                              mov esi, 0	       744	sequencer.c	FUNCTION_26	CALL_7
0x40023f6	          0x4889c7	                            mov rdi, rax	       744	sequencer.c	FUNCTION_26	CALL_7
0x40023f9	      0xe800000000	                          call 0x40023fe	       744	sequencer.c	FUNCTION_26	CALL_7
0x40023fe	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       745	sequencer.c	FUNCTION_26	IF_6
0x4002405	        0x488b4030	            mov rax, qword [rax + 0x30] 	       745	sequencer.c	FUNCTION_26	IF_6
0x4002409	          0x4885c0	                           test rax, rax	       745	sequencer.c	FUNCTION_26	IF_6
0x400240c	            0x7428	                            je 0x4002436	       745	sequencer.c	FUNCTION_26	IF_6
0x400240e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002415	        0x488b4030	            mov rax, qword [rax + 0x30] 	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002419	        0x488d5590	                   lea rdx, [rbp - 0x70]	       746	sequencer.c	FUNCTION_26	CALL_8
0x400241d	        0x488d4a08	                      lea rcx, [rdx + 8]	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002421	          0x4889c2	                            mov rdx, rax	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002424	      0xbe00000000	                              mov esi, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002429	          0x4889cf	                            mov rdi, rcx	       746	sequencer.c	FUNCTION_26	CALL_8
0x400242c	      0xb800000000	                              mov eax, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002431	      0xe800000000	                          call 0x4002436	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002436	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       747	sequencer.c	FUNCTION_26	IF_7
0x400243e	            0x7428	                            je 0x4002468	       747	sequencer.c	FUNCTION_26	IF_7
0x4002440	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002447	        0x488d5590	                   lea rdx, [rbp - 0x70]	       748	sequencer.c	FUNCTION_26	CALL_9
0x400244b	        0x488d7a08	                      lea rdi, [rdx + 8]	       748	sequencer.c	FUNCTION_26	CALL_9
0x400244f	      0xb900000000	                              mov ecx, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002454	          0x4889c2	                            mov rdx, rax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002457	      0xbe00000000	                              mov esi, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x400245c	      0xb800000000	                              mov eax, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002461	      0xe800000000	                          call 0x4002466	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002466	            0xeb31	                           jmp 0x4002499	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002468	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400246e	          0x83e002	                              and eax, 2	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002471	            0x85c0	                           test eax, eax	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002473	            0x7524	                           jne 0x4002499	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002475	        0x488d4590	                   lea rax, [rbp - 0x70]	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002479	        0x4883c008	                              add rax, 8	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400247d	      0xb900000000	                              mov ecx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002482	      0xba00000000	                              mov edx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002487	      0xbe00000000	                              mov esi, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400248c	          0x4889c7	                            mov rdi, rax	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400248f	      0xb800000000	                              mov eax, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002494	      0xe800000000	                          call 0x4002499	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002499	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       751	sequencer.c	FUNCTION_26	IF_9
0x400249f	          0x83e008	                              and eax, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x40024a2	            0x85c0	                           test eax, eax	       751	sequencer.c	FUNCTION_26	IF_9
0x40024a4	            0x7415	                            je 0x40024bb	       751	sequencer.c	FUNCTION_26	IF_9
0x40024a6	        0x488d4590	                   lea rax, [rbp - 0x70]	       752	sequencer.c	FUNCTION_26	CALL_11
0x40024aa	        0x4883c008	                              add rax, 8	       752	sequencer.c	FUNCTION_26	CALL_11
0x40024ae	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x40024b3	          0x4889c7	                            mov rdi, rax	       752	sequencer.c	FUNCTION_26	CALL_11
0x40024b6	      0xe800000000	                          call 0x40024bb	       752	sequencer.c	FUNCTION_26	CALL_11
0x40024bb	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       753	sequencer.c	FUNCTION_26	IF_10
0x40024c1	          0x83e002	                              and eax, 2	       753	sequencer.c	FUNCTION_26	IF_10
0x40024c4	            0x85c0	                           test eax, eax	       753	sequencer.c	FUNCTION_26	IF_10
0x40024c6	            0x7417	                            je 0x40024df	       753	sequencer.c	FUNCTION_26	IF_10
0x40024c8	        0x488d4590	                   lea rax, [rbp - 0x70]	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024cc	        0x4883c008	                              add rax, 8	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024d0	      0xbe00000000	                              mov esi, 0	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024d5	          0x4889c7	                            mov rdi, rax	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024d8	      0xe800000000	                          call 0x40024dd	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024dd	            0xeb56	                           jmp 0x4002535	       754	sequencer.c	FUNCTION_26	CALL_12
0x40024df	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024e5	          0x83e008	                              and eax, 8	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024e8	            0x85c0	                           test eax, eax	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024ea	            0x7549	                           jne 0x4002535	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024ec	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024f3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024f6	            0x85c0	                           test eax, eax	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024f8	            0x753b	                           jne 0x4002535	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x40024fa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002501	          0x8b4008	                mov eax, dword [rax + 8]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002504	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002506	            0x752d	                           jne 0x4002535	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002508	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x400250f	          0x4889c6	                            mov rsi, rax	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002512	      0xbf00000000	                              mov edi, 0	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002517	      0xe800000000	                          call 0x400251c	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x400251c	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400251e	            0x7415	                            je 0x4002535	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002520	        0x488d4590	                   lea rax, [rbp - 0x70]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002524	        0x4883c008	                              add rax, 8	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002528	      0xbe00000000	                              mov esi, 0	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x400252d	          0x4889c7	                            mov rdi, rax	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002530	      0xe800000000	                          call 0x4002535	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002535	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       760	sequencer.c	FUNCTION_26	IF_12
0x400253b	          0x83e001	                              and eax, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x400253e	            0x85c0	                           test eax, eax	       760	sequencer.c	FUNCTION_26	IF_12
0x4002540	            0x7415	                            je 0x4002557	       760	sequencer.c	FUNCTION_26	IF_12
0x4002542	        0x488d4590	                   lea rax, [rbp - 0x70]	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002546	        0x4883c008	                              add rax, 8	       761	sequencer.c	FUNCTION_26	CALL_15
0x400254a	      0xbe00000000	                              mov esi, 0	       761	sequencer.c	FUNCTION_26	CALL_15
0x400254f	          0x4889c7	                            mov rdi, rax	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002552	      0xe800000000	                          call 0x4002557	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002557	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       763	sequencer.c	FUNCTION_26	IF_13
0x400255e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x4002561	            0x85c0	                           test eax, eax	       763	sequencer.c	FUNCTION_26	IF_13
0x4002563	            0x7415	                            je 0x400257a	       763	sequencer.c	FUNCTION_26	IF_13
0x4002565	        0x488d4590	                   lea rax, [rbp - 0x70]	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002569	        0x4883c008	                              add rax, 8	       764	sequencer.c	FUNCTION_26	CALL_16
0x400256d	      0xbe00000000	                              mov esi, 0	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002572	          0x4889c7	                            mov rdi, rax	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002575	      0xe800000000	                          call 0x400257a	       764	sequencer.c	FUNCTION_26	CALL_16
0x400257a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       766	sequencer.c	FUNCTION_26	IF_14
0x400257d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x4002580	     0xf858f000000	                           jne 0x4002615	       766	sequencer.c	FUNCTION_26	IF_14
0x4002586	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4002591	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x400259c	    0x48c745800000	               mov qword [rbp - 0x80], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x40025a4	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025ab	        0x488d4590	                   lea rax, [rbp - 0x70]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025af	        0x4883ec08	                              sub rsp, 8	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025b3	            0x6a00	                                  push 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025b5	          0x4989d1	                             mov r9, rdx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025b8	    0x41b800000000	                              mov r8d, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025be	      0xb900000000	                              mov ecx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025c3	      0xba00000000	                              mov edx, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025c8	      0xbe00000000	                              mov esi, 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025cd	          0x4889c7	                            mov rdi, rax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025d0	      0xe800000000	                          call 0x40025d5	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025d5	        0x4883c410	                           add rsp, 0x10	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025d9	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x40025df	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x40025e6	            0x7416	                            je 0x40025fe	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x40025e8	    0x488b15000000	            mov rdx, qword [0x040025ef] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x40025ef	        0x488b4580	             mov rax, qword [rbp - 0x80]	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x40025f3	          0x4889d6	                            mov rsi, rdx	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x40025f6	          0x4889c7	                            mov rdi, rax	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x40025f9	      0xe800000000	                          call 0x40025fe	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x40025fe	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4002605	          0x4889c7	                            mov rdi, rax	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4002608	      0xe800000000	                          call 0x400260d	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x400260d	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       777	sequencer.c	FUNCTION_26	IF_14
0x4002613	            0xeb0c	                           jmp 0x4002621	       777	sequencer.c	FUNCTION_26	IF_14
0x4002615	        0x488d4590	                   lea rax, [rbp - 0x70]	       780	sequencer.c	FUNCTION_26	CALL_20
0x4002619	          0x4889c7	                            mov rdi, rax	       780	sequencer.c	FUNCTION_26	CALL_20
0x400261c	      0xe800000000	                          call 0x4002621	       780	sequencer.c	FUNCTION_26	CALL_20
0x4002621	        0x488b4df8	                mov rcx, qword [rbp - 8]	       781	sequencer.c	FUNCTION_26
0x4002625	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       781	sequencer.c	FUNCTION_26
0x400262e	            0x7405	                            je 0x4002635	       781	sequencer.c	FUNCTION_26
0x4002630	      0xe800000000	                          call 0x4002635	       781	sequencer.c	FUNCTION_26
0x4002635	              0xc9	                                   leave	       781	sequencer.c	FUNCTION_26
0x4002636	              0xc3	                                     ret	       781	sequencer.c	FUNCTION_26
do_label	CALL,14:FOR,0:WHILE,0:ELSE,2:DO,0:IF,5:SWITCH,0:functions,0	140
0x4007f51	              0x55	                                push rbp	      2582	sequencer.c	FUNCTION_80
0x4007f52	          0x4889e5	                            mov rbp, rsp	      2582	sequencer.c	FUNCTION_80
0x4007f55	              0x53	                                push rbx	      2582	sequencer.c	FUNCTION_80
0x4007f56	    0x4881ecb80000	                           sub rsp, 0xb8	      2582	sequencer.c	FUNCTION_80
0x4007f5d	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2582	sequencer.c	FUNCTION_80
0x4007f64	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2582	sequencer.c	FUNCTION_80
0x4007f6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2582	sequencer.c	FUNCTION_80
0x4007f73	        0x488945e8	             mov qword [rbp - 0x18], rax	      2582	sequencer.c	FUNCTION_80
0x4007f77	            0x31c0	                            xor eax, eax	      2582	sequencer.c	FUNCTION_80
0x4007f79	    0x488b05000000	            mov rax, qword [0x04007f80] 	      2583	sequencer.c	FUNCTION_80	CALL_1
0x4007f80	          0x4889c7	                            mov rdi, rax	      2583	sequencer.c	FUNCTION_80	CALL_1
0x4007f83	      0xe800000000	                          call 0x4007f88	      2583	sequencer.c	FUNCTION_80	CALL_1
0x4007f88	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2583	sequencer.c	FUNCTION_80	CALL_1
0x4007f8f	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2585	sequencer.c	FUNCTION_80
0x4007f9a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      2585	sequencer.c	FUNCTION_80
0x4007fa5	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2585	sequencer.c	FUNCTION_80
0x4007fad	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2585	sequencer.c	FUNCTION_80
0x4007fb5	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2585	sequencer.c	FUNCTION_80
0x4007fbd	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2585	sequencer.c	FUNCTION_80
0x4007fc5	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2586	sequencer.c	FUNCTION_80
0x4007fcd	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2586	sequencer.c	FUNCTION_80
0x4007fd5	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2586	sequencer.c	FUNCTION_80
0x4007fdd	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2587	sequencer.c	FUNCTION_80
0x4007fe7	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 1	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007fee	            0x7536	                           jne 0x4008026	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007ff0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007ff7	           0xfb600	                   movzx eax, byte [rax]	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007ffa	            0x3c23	                            cmp al, 0x23	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007ffc	            0x7528	                           jne 0x4008026	      2590	sequencer.c	FUNCTION_80	IF_1
0x4007ffe	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2591	sequencer.c	FUNCTION_80	IF_1
0x4008005	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2591	sequencer.c	FUNCTION_80	IF_1
0x400800b	            0x89c6	                            mov esi, eax	      2591	sequencer.c	FUNCTION_80	IF_1
0x400800d	      0xbf00000000	                              mov edi, 0	      2591	sequencer.c	FUNCTION_80	IF_1
0x4008012	      0xb800000000	                              mov eax, 0	      2591	sequencer.c	FUNCTION_80	IF_1
0x4008017	      0xe800000000	                          call 0x400801c	      2591	sequencer.c	FUNCTION_80	IF_1
0x400801c	      0xe81f80ffff	                    call sym.const_error	      2591	sequencer.c	FUNCTION_80	IF_1
0x4008021	      0xe9b9010000	                           jmp 0x40081df	      2591	sequencer.c	FUNCTION_80	IF_1
0x4008026	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2593	sequencer.c	FUNCTION_80	CALL_2
0x400802d	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2593	sequencer.c	FUNCTION_80	CALL_2
0x4008033	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2593	sequencer.c	FUNCTION_80	CALL_2
0x400803a	      0xbe00000000	                              mov esi, 0	      2593	sequencer.c	FUNCTION_80	CALL_2
0x400803f	          0x4889c7	                            mov rdi, rax	      2593	sequencer.c	FUNCTION_80	CALL_2
0x4008042	      0xb800000000	                              mov eax, 0	      2593	sequencer.c	FUNCTION_80	CALL_2
0x4008047	      0xe800000000	                          call 0x400804c	      2593	sequencer.c	FUNCTION_80	CALL_2
0x400804c	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2594	sequencer.c	FUNCTION_80	CALL_3
0x4008053	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2594	sequencer.c	FUNCTION_80	CALL_3
0x4008059	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2594	sequencer.c	FUNCTION_80	CALL_3
0x400805d	      0xbe00000000	                              mov esi, 0	      2594	sequencer.c	FUNCTION_80	CALL_3
0x4008062	          0x4889c7	                            mov rdi, rax	      2594	sequencer.c	FUNCTION_80	CALL_3
0x4008065	      0xb800000000	                              mov eax, 0	      2594	sequencer.c	FUNCTION_80	CALL_3
0x400806a	      0xe800000000	                          call 0x400806f	      2594	sequencer.c	FUNCTION_80	CALL_3
0x400806f	        0x488d5590	                   lea rdx, [rbp - 0x70]	      2596	sequencer.c	FUNCTION_80	CALL_4
0x4008073	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2596	sequencer.c	FUNCTION_80	CALL_4
0x400807a	          0x4889d6	                            mov rsi, rdx	      2596	sequencer.c	FUNCTION_80	CALL_4
0x400807d	          0x4889c7	                            mov rdi, rax	      2596	sequencer.c	FUNCTION_80	CALL_4
0x4008080	      0xe800000000	                          call 0x4008085	      2596	sequencer.c	FUNCTION_80	CALL_4
0x4008085	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2596	sequencer.c	FUNCTION_80	CALL_4
0x400808c	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      2597	sequencer.c	FUNCTION_80	IF_2
0x4008094	            0x752a	                           jne 0x40080c0	      2597	sequencer.c	FUNCTION_80	IF_2
0x4008096	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2598	sequencer.c	FUNCTION_80	IF_2
0x400809a	          0x4889c6	                            mov rsi, rax	      2598	sequencer.c	FUNCTION_80	IF_2
0x400809d	      0xbf00000000	                              mov edi, 0	      2598	sequencer.c	FUNCTION_80	IF_2
0x40080a2	      0xb800000000	                              mov eax, 0	      2598	sequencer.c	FUNCTION_80	IF_2
0x40080a7	      0xe800000000	                          call 0x40080ac	      2598	sequencer.c	FUNCTION_80	IF_2
0x40080ac	      0xe88f7fffff	                    call sym.const_error	      2598	sequencer.c	FUNCTION_80	IF_2
0x40080b1	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2599	sequencer.c	FUNCTION_80	IF_2
0x40080bb	      0xe9b6000000	                           jmp 0x4008176	      2599	sequencer.c	FUNCTION_80	IF_2
0x40080c0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080c4	          0x4889c6	                            mov rsi, rax	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080c7	      0xbf00000000	                              mov edi, 0	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080cc	      0xe800000000	                          call 0x40080d1	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080d1	            0x85c0	                           test eax, eax	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080d3	            0x7428	                            je 0x40080fd	      2600	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_5
0x40080d5	      0xbf00000000	                              mov edi, 0	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080da	      0xe8c882ffff	                               call sym.	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080df	          0x4889c7	                            mov rdi, rax	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080e2	      0xb800000000	                              mov eax, 0	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080e7	      0xe800000000	                          call 0x40080ec	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080ec	      0xe84f7fffff	                    call sym.const_error	      2601	sequencer.c	FUNCTION_80	ELSE_1	IF_3	CALL_6
0x40080f1	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2602	sequencer.c	FUNCTION_80	ELSE_1	IF_3
0x40080fb	            0xeb79	                           jmp 0x4008176	      2602	sequencer.c	FUNCTION_80	ELSE_1	IF_3
0x40080fd	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008101	        0x488b7580	             mov rsi, qword [rbp - 0x80]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008105	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008109	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008110	        0x4883ec08	                              sub rsp, 8	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008114	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008118	              0x51	                                push rcx	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008119	          0x4989f9	                             mov r9, rdi	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x400811c	    0x41b800000000	                              mov r8d, 0	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008122	      0xb900000000	                              mov ecx, 0	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008127	          0x4889c7	                            mov rdi, rax	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x400812a	      0xe800000000	                          call 0x400812f	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x400812f	        0x4883c410	                           add rsp, 0x10	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008133	            0x85c0	                           test eax, eax	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008135	            0x781a	                            js 0x4008151	      2603	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_7
0x4008137	        0x488d5590	                   lea rdx, [rbp - 0x70]	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_8
0x400813b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_8
0x4008142	          0x4889d6	                            mov rsi, rdx	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_8
0x4008145	          0x4889c7	                            mov rdi, rax	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_8
0x4008148	      0xe800000000	                          call 0x400814d	      2605	sequencer.c	FUNCTION_80	ELSE_2	IF_4	CALL_8
0x400814d	            0x85c0	                           test eax, eax	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x400814f	            0x7425	                            je 0x4008176	      2604	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008151	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008155	          0x4889c6	                            mov rsi, rax	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008158	      0xbf00000000	                              mov edi, 0	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x400815d	      0xb800000000	                              mov eax, 0	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008162	      0xe800000000	                          call 0x4008167	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008167	      0xe8d47effff	                    call sym.const_error	      2606	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x400816c	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	      2607	sequencer.c	FUNCTION_80	ELSE_2	IF_4
0x4008176	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2609	sequencer.c	FUNCTION_80	CALL_9
0x400817d	          0x4889c7	                            mov rdi, rax	      2609	sequencer.c	FUNCTION_80	CALL_9
0x4008180	      0xe800000000	                          call 0x4008185	      2609	sequencer.c	FUNCTION_80	CALL_9
0x4008185	        0x488d4590	                   lea rax, [rbp - 0x70]	      2610	sequencer.c	FUNCTION_80	CALL_10
0x4008189	          0x4889c7	                            mov rdi, rax	      2610	sequencer.c	FUNCTION_80	CALL_10
0x400818c	      0xe800000000	                          call 0x4008191	      2610	sequencer.c	FUNCTION_80	CALL_10
0x4008191	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2611	sequencer.c	FUNCTION_80	CALL_11
0x4008195	          0x4889c7	                            mov rdi, rax	      2611	sequencer.c	FUNCTION_80	CALL_11
0x4008198	      0xe800000000	                          call 0x400819d	      2611	sequencer.c	FUNCTION_80	CALL_11
0x400819d	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2613	sequencer.c	FUNCTION_80	IF_5
0x40081a4	            0x7524	                           jne 0x40081ca	      2613	sequencer.c	FUNCTION_80	IF_5
0x40081a6	        0x488b5d80	             mov rbx, qword [rbp - 0x80]	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081aa	      0xe82387ffff	     call sym.rebase_path_refs_to_delete	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081af	          0x4889da	                            mov rdx, rbx	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081b2	      0xbe00000000	                              mov esi, 0	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081b7	          0x4889c7	                            mov rdi, rax	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081ba	      0xb800000000	                              mov eax, 0	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081bf	      0xe8f3faffff	                    call sym.safe_append	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081c4	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2614	sequencer.c	FUNCTION_80	IF_5	CALL_13
0x40081ca	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2616	sequencer.c	FUNCTION_80	CALL_14
0x40081d1	          0x4889c7	                            mov rdi, rax	      2616	sequencer.c	FUNCTION_80	CALL_14
0x40081d4	      0xe800000000	                          call 0x40081d9	      2616	sequencer.c	FUNCTION_80	CALL_14
0x40081d9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2618	sequencer.c	FUNCTION_80
0x40081df	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2619	sequencer.c	FUNCTION_80
0x40081e3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2619	sequencer.c	FUNCTION_80
0x40081ec	            0x7405	                            je 0x40081f3	      2619	sequencer.c	FUNCTION_80
0x40081ee	      0xe800000000	                          call 0x40081f3	      2619	sequencer.c	FUNCTION_80
0x40081f3	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2619	sequencer.c	FUNCTION_80
0x40081f7	              0xc9	                                   leave	      2619	sequencer.c	FUNCTION_80
0x40081f8	              0xc3	                                     ret	      2619	sequencer.c	FUNCTION_80
update_head_with_reflog	CALL,11:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	104
0x400288a	              0x55	                                push rbp	       848	sequencer.c	FUNCTION_30
0x400288b	          0x4889e5	                            mov rbp, rsp	       848	sequencer.c	FUNCTION_30
0x400288e	        0x4883ec70	                           sub rsp, 0x70	       848	sequencer.c	FUNCTION_30
0x4002892	        0x48897db8	             mov qword [rbp - 0x48], rdi	       848	sequencer.c	FUNCTION_30
0x4002896	        0x488975b0	             mov qword [rbp - 0x50], rsi	       848	sequencer.c	FUNCTION_30
0x400289a	        0x488955a8	             mov qword [rbp - 0x58], rdx	       848	sequencer.c	FUNCTION_30
0x400289e	        0x48894da0	             mov qword [rbp - 0x60], rcx	       848	sequencer.c	FUNCTION_30
0x40028a2	        0x4c894598	              mov qword [rbp - 0x68], r8	       848	sequencer.c	FUNCTION_30
0x40028a6	    0x64488b042528	                mov rax, qword fs:[0x28]	       848	sequencer.c	FUNCTION_30
0x40028af	        0x488945f8	                mov qword [rbp - 8], rax	       848	sequencer.c	FUNCTION_30
0x40028b3	            0x31c0	                            xor eax, eax	       848	sequencer.c	FUNCTION_30
0x40028b5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       850	sequencer.c	FUNCTION_30
0x40028bd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       850	sequencer.c	FUNCTION_30
0x40028c5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       850	sequencer.c	FUNCTION_30
0x40028cd	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       852	sequencer.c	FUNCTION_30
0x40028d4	      0x48837da800	               cmp qword [rbp - 0x58], 0	       854	sequencer.c	FUNCTION_30	IF_1
0x40028d9	            0x7424	                            je 0x40028ff	       854	sequencer.c	FUNCTION_30	IF_1
0x40028db	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x40028df	        0x488d45e0	                   lea rax, [rbp - 0x20]	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x40028e3	          0x4889d6	                            mov rsi, rdx	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x40028e6	          0x4889c7	                            mov rdi, rax	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x40028e9	      0xe887d9ffff	                  call sym.strbuf_addstr	       855	sequencer.c	FUNCTION_30	IF_1	CALL_1
0x40028ee	        0x488d45e0	                   lea rax, [rbp - 0x20]	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x40028f2	      0xbe00000000	                              mov esi, 0	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x40028f7	          0x4889c7	                            mov rdi, rax	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x40028fa	      0xe876d9ffff	                  call sym.strbuf_addstr	       856	sequencer.c	FUNCTION_30	IF_1	CALL_2
0x40028ff	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       859	sequencer.c	FUNCTION_30	CALL_3
0x4002903	        0x488b4010	            mov rax, qword [rax + 0x10] 	       859	sequencer.c	FUNCTION_30	CALL_3
0x4002907	      0xbe0a000000	                            mov esi, 0xa	       859	sequencer.c	FUNCTION_30	CALL_3
0x400290c	          0x4889c7	                            mov rdi, rax	       859	sequencer.c	FUNCTION_30	CALL_3
0x400290f	      0xe800000000	                          call 0x4002914	       859	sequencer.c	FUNCTION_30	CALL_3
0x4002914	        0x488945d0	             mov qword [rbp - 0x30], rax	       859	sequencer.c	FUNCTION_30	CALL_3
0x4002918	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       860	sequencer.c	FUNCTION_30	IF_2
0x400291d	            0x7435	                            je 0x4002954	       860	sequencer.c	FUNCTION_30	IF_2
0x400291f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002923	        0x4883c001	                              add rax, 1	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002927	          0x4889c2	                            mov rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400292a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400292e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002932	          0x4829c2	                            sub rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002935	          0x4889d0	                            mov rax, rdx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002938	          0x4889c2	                            mov rdx, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400293b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400293f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002943	        0x488d45e0	                   lea rax, [rbp - 0x20]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002947	          0x4889ce	                            mov rsi, rcx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400294a	          0x4889c7	                            mov rdi, rax	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x400294d	      0xe800000000	                          call 0x4002952	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002952	            0xeb24	                           jmp 0x4002978	       861	sequencer.c	FUNCTION_30	IF_2	CALL_4
0x4002954	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x4002958	        0x488d45e0	                   lea rax, [rbp - 0x20]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x400295c	          0x4889d6	                            mov rsi, rdx	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x400295f	          0x4889c7	                            mov rdi, rax	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x4002962	      0xe800000000	                          call 0x4002967	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_5
0x4002967	        0x488d45e0	                   lea rax, [rbp - 0x20]	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x400296b	      0xbe0a000000	                            mov esi, 0xa	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x4002970	          0x4889c7	                            mov rdi, rax	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x4002973	      0xe88fd8ffff	                   call sym.strbuf_addch	       864	sequencer.c	FUNCTION_30	ELSE_1	CALL_6
0x4002978	        0x488b4598	             mov rax, qword [rbp - 0x68]	       867	sequencer.c	FUNCTION_30	CALL_7
0x400297c	          0x4889c7	                            mov rdi, rax	       867	sequencer.c	FUNCTION_30	CALL_7
0x400297f	      0xe800000000	                          call 0x4002984	       867	sequencer.c	FUNCTION_30	CALL_7
0x4002984	        0x488945d8	             mov qword [rbp - 0x28], rax	       867	sequencer.c	FUNCTION_30	CALL_7
0x4002988	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       868	sequencer.c	FUNCTION_30	IF_3
0x400298d	            0x745e	                            je 0x40029ed	       868	sequencer.c	FUNCTION_30	IF_3
0x400298f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       871	sequencer.c	FUNCTION_30	IF_3
0x4002993	      0x48837db800	               cmp qword [rbp - 0x48], 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x4002998	            0x740a	                            je 0x40029a4	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x400299a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x400299e	        0x488d4804	                      lea rcx, [rax + 4]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029a2	            0xeb05	                           jmp 0x40029a9	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029a4	      0xb900000000	                              mov ecx, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029a9	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029b1	        0x4883ec08	                              sub rsp, 8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029b5	          0xff7598	                 push qword [rbp - 0x68]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029b8	          0x4989f1	                             mov r9, rsi	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029bb	    0x41b800000000	                              mov r8d, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029c1	      0xbe00000000	                              mov esi, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029c6	          0x4889c7	                            mov rdi, rax	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029c9	      0xe800000000	                          call 0x40029ce	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029ce	        0x4883c410	                           add rsp, 0x10	       869	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x40029d2	            0x85c0	                           test eax, eax	       868	sequencer.c	FUNCTION_30	IF_3
0x40029d4	            0x7517	                           jne 0x40029ed	       868	sequencer.c	FUNCTION_30	IF_3
0x40029d6	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x40029da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x40029de	          0x4889d6	                            mov rsi, rdx	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x40029e1	          0x4889c7	                            mov rdi, rax	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x40029e4	      0xe800000000	                          call 0x40029e9	       872	sequencer.c	FUNCTION_30	IF_3	CALL_9
0x40029e9	            0x85c0	                           test eax, eax	       871	sequencer.c	FUNCTION_30	IF_3
0x40029eb	            0x7407	                            je 0x40029f4	       871	sequencer.c	FUNCTION_30	IF_3
0x40029ed	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       873	sequencer.c	FUNCTION_30	IF_3
0x40029f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       875	sequencer.c	FUNCTION_30	CALL_10
0x40029f8	          0x4889c7	                            mov rdi, rax	       875	sequencer.c	FUNCTION_30	CALL_10
0x40029fb	      0xe800000000	                          call 0x4002a00	       875	sequencer.c	FUNCTION_30	CALL_10
0x4002a00	        0x488d45e0	                   lea rax, [rbp - 0x20]	       876	sequencer.c	FUNCTION_30	CALL_11
0x4002a04	          0x4889c7	                            mov rdi, rax	       876	sequencer.c	FUNCTION_30	CALL_11
0x4002a07	      0xe800000000	                          call 0x4002a0c	       876	sequencer.c	FUNCTION_30	CALL_11
0x4002a0c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       878	sequencer.c	FUNCTION_30
0x4002a0f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       879	sequencer.c	FUNCTION_30
0x4002a13	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       879	sequencer.c	FUNCTION_30
0x4002a1c	            0x7405	                            je 0x4002a23	       879	sequencer.c	FUNCTION_30
0x4002a1e	      0xe800000000	                          call 0x4002a23	       879	sequencer.c	FUNCTION_30
0x4002a23	              0xc9	                                   leave	       879	sequencer.c	FUNCTION_30
0x4002a24	              0xc3	                                     ret	       879	sequencer.c	FUNCTION_30
oidcpy	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	13
0x4000474	              0x55	                                push rbp	       999	cache.h	FUNCTION_118
0x4000475	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_118
0x4000478	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_118
0x400047c	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_118
0x4000480	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_118
0x4000484	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_118	CALL_1
0x4000488	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_118	CALL_1
0x400048c	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_118	CALL_1
0x400048f	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_118	CALL_1
0x4000492	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_118	CALL_1
0x4000497	              0x90	                                     nop	      1001	cache.h	FUNCTION_118
0x4000498	              0xc9	                                   leave	      1001	cache.h	FUNCTION_118
0x4000499	              0xc3	                                     ret	      1001	cache.h	FUNCTION_118
reset_for_rollback	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	24
0x4006d49	              0x55	                                push rbp	      2252	sequencer.c	FUNCTION_69
0x4006d4a	          0x4889e5	                            mov rbp, rsp	      2252	sequencer.c	FUNCTION_69
0x4006d4d	        0x4883ec40	                           sub rsp, 0x40	      2252	sequencer.c	FUNCTION_69
0x4006d51	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2252	sequencer.c	FUNCTION_69
0x4006d55	    0x64488b042528	                mov rax, qword fs:[0x28]	      2252	sequencer.c	FUNCTION_69
0x4006d5e	        0x488945f8	                mov qword [rbp - 8], rax	      2252	sequencer.c	FUNCTION_69
0x4006d62	            0x31c0	                            xor eax, eax	      2252	sequencer.c	FUNCTION_69
0x4006d64	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2255	sequencer.c	FUNCTION_69
0x4006d6c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2256	sequencer.c	FUNCTION_69
0x4006d74	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4006d78	          0x4889c7	                            mov rdi, rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4006d7b	      0xe800000000	                          call 0x4006d80	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4006d80	        0x488945e0	             mov qword [rbp - 0x20], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4006d84	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2258	sequencer.c	FUNCTION_69
0x4006d8c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4006d90	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4006d95	          0x4889c7	                            mov rdi, rax	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4006d98	      0xe800000000	                          call 0x4006d9d	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4006d9d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2260	sequencer.c	FUNCTION_69
0x4006da1	    0x644833142528	                xor rdx, qword fs:[0x28]	      2260	sequencer.c	FUNCTION_69
0x4006daa	            0x7405	                            je 0x4006db1	      2260	sequencer.c	FUNCTION_69
0x4006dac	      0xe800000000	                          call 0x4006db1	      2260	sequencer.c	FUNCTION_69
0x4006db1	              0xc9	                                   leave	      2260	sequencer.c	FUNCTION_69
0x4006db2	              0xc3	                                     ret	      2260	sequencer.c	FUNCTION_69
skip_unnecessary_picks	CALL,36:FOR,1:WHILE,0:ELSE,0:DO,0:IF,15:SWITCH,0:functions,0	282
0x400d6fe	              0x55	                                push rbp	      4187	sequencer.c	FUNCTION_103
0x400d6ff	          0x4889e5	                            mov rbp, rsp	      4187	sequencer.c	FUNCTION_103
0x400d702	            0x4154	                                push r12	      4187	sequencer.c	FUNCTION_103
0x400d704	              0x53	                                push rbx	      4187	sequencer.c	FUNCTION_103
0x400d705	    0x4881ece00000	                           sub rsp, 0xe0	      4187	sequencer.c	FUNCTION_103
0x400d70c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4187	sequencer.c	FUNCTION_103
0x400d715	        0x488945e8	             mov qword [rbp - 0x18], rax	      4187	sequencer.c	FUNCTION_103
0x400d719	            0x31c0	                            xor eax, eax	      4187	sequencer.c	FUNCTION_103
0x400d71b	      0xe84f2fffff	               call sym.rebase_path_todo	      4188	sequencer.c	FUNCTION_103	CALL_1
0x400d720	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4188	sequencer.c	FUNCTION_103	CALL_1
0x400d727	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4189	sequencer.c	FUNCTION_103
0x400d732	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      4189	sequencer.c	FUNCTION_103
0x400d73d	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4189	sequencer.c	FUNCTION_103
0x400d748	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4190	sequencer.c	FUNCTION_103
0x400d74f	      0xb800000000	                              mov eax, 0	      4190	sequencer.c	FUNCTION_103
0x400d754	      0xb90b000000	                            mov ecx, 0xb	      4190	sequencer.c	FUNCTION_103
0x400d759	          0x4889d7	                            mov rdi, rdx	      4190	sequencer.c	FUNCTION_103
0x400d75c	          0xf348ab	              rep stosq qword [rdi], rax	      4190	sequencer.c	FUNCTION_103
0x400d75f	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4190	sequencer.c	FUNCTION_103
0x400d767	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4191	sequencer.c	FUNCTION_103
0x400d76b	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4191	sequencer.c	FUNCTION_103
0x400d772	      0xe87532ffff	               call sym.rebase_path_onto	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d777	          0x4889c1	                            mov rcx, rax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d77a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d781	      0xba00000000	                              mov edx, 0	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d786	          0x4889ce	                            mov rsi, rcx	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d789	          0x4889c7	                            mov rdi, rax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d78c	      0xe8cf3cffff	                  call sym.read_oneliner	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d791	            0x85c0	                           test eax, eax	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d793	            0x7521	                           jne 0x400d7b6	      4194	sequencer.c	FUNCTION_103	IF_1	CALL_3
0x400d795	      0xbf00000000	                              mov edi, 0	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d79a	      0xe8082cffff	                               call sym.	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d79f	          0x4889c7	                            mov rdi, rax	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d7a2	      0xb800000000	                              mov eax, 0	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d7a7	      0xe800000000	                          call 0x400d7ac	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d7ac	      0xe88f28ffff	                    call sym.const_error	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d7b1	      0xe902040000	                           jmp 0x400dbb8	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d7b6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7bd	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7c1	          0x4889d6	                            mov rsi, rdx	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7c4	          0x4889c7	                            mov rdi, rax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7c7	      0xe800000000	                          call 0x400d7cc	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7cc	            0x85c0	                           test eax, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7ce	            0x7430	                            je 0x400d800	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d7d0	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400d7d7	          0x4889c7	                            mov rdi, rax	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400d7da	      0xe800000000	                          call 0x400d7df	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400d7df	      0xbf00000000	                              mov edi, 0	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7e4	      0xe8be2bffff	                               call sym.	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7e9	          0x4889c7	                            mov rdi, rax	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7ec	      0xb800000000	                              mov eax, 0	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7f1	      0xe800000000	                          call 0x400d7f6	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7f6	      0xe84528ffff	                    call sym.const_error	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d7fb	      0xe9b8030000	                           jmp 0x400dbb8	      4198	sequencer.c	FUNCTION_103	IF_2	CALL_7
0x400d800	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400d807	          0x4889c7	                            mov rdi, rax	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400d80a	      0xe800000000	                          call 0x400d80f	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400d80f	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d816	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d81d	          0x4889d6	                            mov rsi, rdx	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d820	          0x4889c7	                            mov rdi, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d823	      0xe8be83ffff	      call sym.strbuf_read_file_or_whine	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d828	          0x4885c0	                           test rax, rax	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d82b	            0x790a	                           jns 0x400d837	      4202	sequencer.c	FUNCTION_103	IF_3	CALL_9
0x400d82d	      0xb8ffffffff	                     mov eax, 0xffffffff	      4203	sequencer.c	FUNCTION_103	IF_3
0x400d832	      0xe981030000	                           jmp 0x400dbb8	      4203	sequencer.c	FUNCTION_103	IF_3
0x400d837	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d83b	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d842	          0x4889d6	                            mov rsi, rdx	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d845	          0x4889c7	                            mov rdi, rax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d848	      0xe8e780ffff	              call sym.parse_insn_buffer	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d84d	            0x85c0	                           test eax, eax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d84f	            0x7919	                           jns 0x400d86a	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d851	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_11
0x400d858	          0x4889c7	                            mov rdi, rax	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_11
0x400d85b	      0xe8527bffff	              call sym.todo_list_release	      4205	sequencer.c	FUNCTION_103	IF_4	CALL_11
0x400d860	      0xb8ffffffff	                     mov eax, 0xffffffff	      4206	sequencer.c	FUNCTION_103	IF_4
0x400d865	      0xe94e030000	                           jmp 0x400dbb8	      4206	sequencer.c	FUNCTION_103	IF_4
0x400d86a	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d874	      0xe935010000	                           jmp 0x400d9ae	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d879	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d87d	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d883	          0x4863d0	                         movsxd rdx, eax	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d886	          0x4889d0	                            mov rax, rdx	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d889	          0x4801c0	                            add rax, rax	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d88c	          0x4801d0	                            add rax, rdx	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d88f	        0x48c1e004	                              shl rax, 4	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d893	          0x4801c8	                            add rax, rcx	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d896	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d89d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d8a4	            0x8b00	                    mov eax, dword [rax]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d8a6	          0x83f809	                              cmp eax, 9	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d8a9	     0xf87f7000000	                            ja 0x400d9a6	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d8af	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d8b6	            0x8b00	                    mov eax, dword [rax]	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d8b8	            0x85c0	                           test eax, eax	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d8ba	     0xf85ff000000	                           jne 0x400d9bf	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d8c0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8c7	        0x488b4008	                mov rax, qword [rax + 8]	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8cb	          0x4889c7	                            mov rdi, rax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8ce	      0xe8342cffff	                   call sym.parse_commit	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8d3	            0x85c0	                           test eax, eax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8d5	            0x744d	                            je 0x400d924	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d8d7	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_13
0x400d8de	          0x4889c7	                            mov rdi, rax	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_13
0x400d8e1	      0xe8cc7affff	              call sym.todo_list_release	      4217	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_13
0x400d8e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8ed	        0x488b4008	                mov rax, qword [rax + 8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8f1	        0x4883c004	                              add rax, 4	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8f5	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8f8	      0xe800000000	                          call 0x400d8fd	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8fd	          0x4889c3	                            mov rbx, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d900	      0xbf00000000	                              mov edi, 0	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d905	      0xe89d2affff	                               call sym.	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d90a	          0x4889de	                            mov rsi, rbx	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d90d	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d910	      0xb800000000	                              mov eax, 0	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d915	      0xe800000000	                          call 0x400d91a	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d91a	      0xe82127ffff	                    call sym.const_error	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d91f	      0xe994020000	                           jmp 0x400dbb8	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d924	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d92b	        0x488b4008	                mov rax, qword [rax + 8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d92f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d933	          0x4885c0	                           test rax, rax	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d936	     0xf8486000000	                            je 0x400d9c2	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d93c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d943	        0x488b4008	                mov rax, qword [rax + 8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d947	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d94b	        0x488b4008	                mov rax, qword [rax + 8]	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d94f	          0x4885c0	                           test rax, rax	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d952	            0x7571	                           jne 0x400d9c5	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d954	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d95b	        0x488b4008	                mov rax, qword [rax + 8]	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d95f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d963	          0x488b00	                    mov rax, qword [rax]	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d966	        0x4883c004	                              add rax, 4	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d96a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4225	sequencer.c	FUNCTION_103	FOR_1
0x400d971	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d978	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d97f	          0x4889d6	                            mov rsi, rdx	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d982	          0x4889c7	                            mov rdi, rax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d985	      0xe8492affff	                        call sym.hashcmp	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d98a	            0x85c0	                           test eax, eax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d98c	            0x753a	                           jne 0x400d9c8	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d98e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d995	        0x488b4008	                mov rax, qword [rax + 8]	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d999	        0x4883c004	                              add rax, 4	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d99d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d9a4	            0xeb01	                           jmp 0x400d9a7	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d9a6	              0x90	                                     nop	      4213	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d9a7	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9ae	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9b1	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9b7	     0xf8fbcfeffff	                            jg 0x400d879	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9bd	            0xeb0a	                           jmp 0x400d9c9	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9bf	              0x90	                                     nop	      4215	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d9c0	            0xeb07	                           jmp 0x400d9c9	      4215	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d9c2	              0x90	                                     nop	      4222	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d9c3	            0xeb04	                           jmp 0x400d9c9	      4222	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d9c5	              0x90	                                     nop	      4224	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d9c6	            0xeb01	                           jmp 0x400d9c9	      4224	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d9c8	              0x90	                                     nop	      4227	sequencer.c	FUNCTION_103	FOR_1	IF_10
0x400d9c9	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d9d0	     0xf8eb7010000	                           jle 0x400db8d	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d9d6	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9dc	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9e3	            0x89d6	                            mov esi, edx	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9e5	          0x4889c7	                            mov rdi, rax	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9e8	      0xe83d81ffff	           call sym.get_item_line_offset	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9ed	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      4231	sequencer.c	FUNCTION_103	IF_11	CALL_17
0x400d9f3	      0xe8a62cffff	               call sym.rebase_path_done	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_18
0x400d9f8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4232	sequencer.c	FUNCTION_103	IF_11	CALL_18
0x400d9ff	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da06	      0xbab6010000	                          mov edx, 0x1b6	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da0b	      0xbe41040000	                          mov esi, 0x441	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da10	          0x4889c7	                            mov rdi, rax	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da13	      0xb800000000	                              mov eax, 0	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da18	      0xe800000000	                          call 0x400da1d	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da1d	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      4234	sequencer.c	FUNCTION_103	IF_11	CALL_19
0x400da23	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400da2a	            0x7942	                           jns 0x400da6e	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400da2c	      0xbf00000000	                              mov edi, 0	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da31	      0xe87129ffff	                               call sym.	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da36	          0x4889c2	                            mov rdx, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da39	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da40	          0x4889c6	                            mov rsi, rax	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da43	          0x4889d7	                            mov rdi, rdx	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da46	      0xb800000000	                              mov eax, 0	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da4b	      0xe800000000	                          call 0x400da50	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da50	      0xe8eb25ffff	                    call sym.const_error	      4236	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_20
0x400da55	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_21
0x400da5c	          0x4889c7	                            mov rdi, rax	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_21
0x400da5f	      0xe84e79ffff	              call sym.todo_list_release	      4238	sequencer.c	FUNCTION_103	IF_11	IF_12	CALL_21
0x400da64	      0xb8ffffffff	                     mov eax, 0xffffffff	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400da69	      0xe94a010000	                           jmp 0x400dbb8	      4239	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400da6e	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da74	          0x4863d0	                         movsxd rdx, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da77	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da7b	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da81	          0x4889ce	                            mov rsi, rcx	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da84	            0x89c7	                            mov edi, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da86	      0xe800000000	                          call 0x400da8b	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da8b	          0x4885c0	                           test rax, rax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da8e	            0x794f	                           jns 0x400dadf	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400da90	      0xbf00000000	                              mov edi, 0	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400da95	      0xe80d29ffff	                               call sym.	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400da9a	          0x4889c2	                            mov rdx, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400da9d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400daa4	          0x4889c6	                            mov rsi, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400daa7	          0x4889d7	                            mov rdi, rdx	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400daaa	      0xb800000000	                              mov eax, 0	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400daaf	      0xe800000000	                          call 0x400dab4	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400dab4	      0xe88725ffff	                    call sym.const_error	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400dab9	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_24
0x400dac0	          0x4889c7	                            mov rdi, rax	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_24
0x400dac3	      0xe8ea78ffff	              call sym.todo_list_release	      4243	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_24
0x400dac8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400dace	            0x89c7	                            mov edi, eax	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400dad0	      0xe800000000	                          call 0x400dad5	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400dad5	      0xb8ffffffff	                     mov eax, 0xffffffff	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400dada	      0xe9d9000000	                           jmp 0x400dbb8	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400dadf	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400dae5	            0x89c7	                            mov edi, eax	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400dae7	      0xe800000000	                          call 0x400daec	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400daec	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      4250	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400daf3	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400daf9	            0x4898	                                    cdqe	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400dafb	          0x4829c2	                            sub rdx, rax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400dafe	          0x4989d4	                            mov r12, rdx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db01	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db05	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db0b	            0x4898	                                    cdqe	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db0d	        0x488d1c02	                    lea rbx, [rdx + rax]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db11	      0xe8592bffff	               call sym.rebase_path_todo	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db16	          0x4c89e2	                            mov rdx, r12	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db19	          0x4889de	                            mov rsi, rbx	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db1c	          0x4889c7	                            mov rdi, rax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db1f	      0xe8f0faffff	                   call sym.rewrite_file	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db24	            0x85c0	                           test eax, eax	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db26	            0x7916	                           jns 0x400db3e	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400db28	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_29
0x400db2f	          0x4889c7	                            mov rdi, rax	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_29
0x400db32	      0xe87b78ffff	              call sym.todo_list_release	      4251	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_29
0x400db37	      0xb8ffffffff	                     mov eax, 0xffffffff	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400db3c	            0xeb7a	                           jmp 0x400dbb8	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400db3e	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      4255	sequencer.c	FUNCTION_103	IF_11
0x400db44	          0x894598	             mov dword [rbp - 0x68], eax	      4255	sequencer.c	FUNCTION_103	IF_11
0x400db47	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db4e	      0xbe00000000	                              mov esi, 0	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db53	          0x4889c7	                            mov rdi, rax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db56	      0xe830b5ffff	                   call sym.peek_command	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db5b	            0x89c7	                            mov edi, eax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db5d	      0xe83061ffff	                       call sym.is_fixup	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db62	            0x85c0	                           test eax, eax	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db64	            0x7427	                            je 0x400db8d	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400db66	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db6d	      0xbe00000000	                              mov esi, 0	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db72	          0x4889c7	                            mov rdi, rax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db75	      0xe811b5ffff	                   call sym.peek_command	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db7a	            0x89c2	                            mov edx, eax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db7c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db83	            0x89d6	                            mov esi, edx	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db85	          0x4889c7	                            mov rdi, rax	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db88	      0xe8d968ffff	            call sym.record_in_rewritten	      4257	sequencer.c	FUNCTION_103	IF_11	CALL_33
0x400db8d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4260	sequencer.c	FUNCTION_103	CALL_34
0x400db94	          0x4889c7	                            mov rdi, rax	      4260	sequencer.c	FUNCTION_103	CALL_34
0x400db97	      0xe81678ffff	              call sym.todo_list_release	      4260	sequencer.c	FUNCTION_103	CALL_34
0x400db9c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      4261	sequencer.c	FUNCTION_103	CALL_36
0x400dba3	          0x4889c7	                            mov rdi, rax	      4261	sequencer.c	FUNCTION_103	CALL_36
0x400dba6	      0xe800000000	                          call 0x400dbab	      4261	sequencer.c	FUNCTION_103	CALL_36
0x400dbab	          0x4889c7	                            mov rdi, rax	      4261	sequencer.c	FUNCTION_103	CALL_36
0x400dbae	      0xe800000000	                          call 0x400dbb3	      4261	sequencer.c	FUNCTION_103	CALL_36
0x400dbb3	      0xb800000000	                              mov eax, 0	      4263	sequencer.c	FUNCTION_103
0x400dbb8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4264	sequencer.c	FUNCTION_103
0x400dbbc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4264	sequencer.c	FUNCTION_103
0x400dbc5	            0x7405	                            je 0x400dbcc	      4264	sequencer.c	FUNCTION_103
0x400dbc7	      0xe800000000	                          call 0x400dbcc	      4264	sequencer.c	FUNCTION_103
0x400dbcc	    0x4881c4e00000	                           add rsp, 0xe0	      4264	sequencer.c	FUNCTION_103
0x400dbd3	              0x5b	                                 pop rbx	      4264	sequencer.c	FUNCTION_103
0x400dbd4	            0x415c	                                 pop r12	      4264	sequencer.c	FUNCTION_103
0x400dbd6	              0x5d	                                 pop rbp	      4264	sequencer.c	FUNCTION_103
0x400dbd7	              0xc3	                                     ret	      4264	sequencer.c	FUNCTION_103
rollback_lock_file	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	10
0x40004ec	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_142
0x40004ed	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_142
0x40004f0	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_142
0x40004f4	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_142
0x40004f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_142	CALL_1
0x40004fc	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_142	CALL_1
0x40004ff	      0xe800000000	                          call 0x4000504	       304	lockfile.h	FUNCTION_142	CALL_1
0x4000504	              0x90	                                     nop	       305	lockfile.h	FUNCTION_142
0x4000505	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_142
0x4000506	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_142
st_add	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	20
0x40000a1	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_175
0x40000a2	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_175
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_175
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_175
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_175
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_175	IF_1
0x40000b5	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_175	IF_1
0x40000b8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_175	IF_1
0x40000bc	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_175	IF_1
0x40000be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000c6	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000c9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000ce	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_175	IF_1	CALL_1
0x40000d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_175
0x40000dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_175
0x40000e0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_175
0x40000e3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_175
0x40000e4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_175
write_message	CALL,10:FOR,0:WHILE,0:ELSE,0:DO,0:IF,4:SWITCH,0:functions,0	97
0x40012e5	              0x55	                                push rbp	       368	sequencer.c	FUNCTION_14
0x40012e6	          0x4889e5	                            mov rbp, rsp	       368	sequencer.c	FUNCTION_14
0x40012e9	        0x4883ec40	                           sub rsp, 0x40	       368	sequencer.c	FUNCTION_14
0x40012ed	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       368	sequencer.c	FUNCTION_14
0x40012f1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       368	sequencer.c	FUNCTION_14
0x40012f5	        0x488955c8	             mov qword [rbp - 0x38], rdx	       368	sequencer.c	FUNCTION_14
0x40012f9	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       368	sequencer.c	FUNCTION_14
0x40012fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	sequencer.c	FUNCTION_14
0x4001305	        0x488945f8	                mov qword [rbp - 8], rax	       368	sequencer.c	FUNCTION_14
0x4001309	            0x31c0	                            xor eax, eax	       368	sequencer.c	FUNCTION_14
0x400130b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       369	sequencer.c	FUNCTION_14
0x4001313	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       371	sequencer.c	FUNCTION_14	CALL_1
0x4001317	        0x488d45f0	                   lea rax, [rbp - 0x10]	       371	sequencer.c	FUNCTION_14	CALL_1
0x400131b	      0xba00000000	                              mov edx, 0	       371	sequencer.c	FUNCTION_14	CALL_1
0x4001320	          0x4889ce	                            mov rsi, rcx	       371	sequencer.c	FUNCTION_14	CALL_1
0x4001323	          0x4889c7	                            mov rdi, rax	       371	sequencer.c	FUNCTION_14	CALL_1
0x4001326	      0xe894f1ffff	      call sym.hold_lock_file_for_update	       371	sequencer.c	FUNCTION_14	CALL_1
0x400132b	          0x8945ec	             mov dword [rbp - 0x14], eax	       371	sequencer.c	FUNCTION_14	CALL_1
0x400132e	        0x837dec00	               cmp dword [rbp - 0x14], 0	       372	sequencer.c	FUNCTION_14	IF_1
0x4001332	            0x792b	                           jns 0x400135f	       372	sequencer.c	FUNCTION_14	IF_1
0x4001334	      0xbf00000000	                              mov edi, 0	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001339	      0xe869f0ffff	                               call sym.	       373	sequencer.c	FUNCTION_14	CALL_2
0x400133e	          0x4889c2	                            mov rdx, rax	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001341	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001345	          0x4889c6	                            mov rsi, rax	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001348	          0x4889d7	                            mov rdi, rdx	       373	sequencer.c	FUNCTION_14	CALL_2
0x400134b	      0xb800000000	                              mov eax, 0	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001350	      0xe800000000	                          call 0x4001355	       373	sequencer.c	FUNCTION_14	CALL_2
0x4001355	      0xe8e6ecffff	                    call sym.const_error	       373	sequencer.c	FUNCTION_14	CALL_2
0x400135a	      0xe9eb000000	                           jmp 0x400144a	       373	sequencer.c	FUNCTION_14	CALL_2
0x400135f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4001363	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4001367	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400136a	          0x4889ce	                            mov rsi, rcx	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400136d	            0x89c7	                            mov edi, eax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x400136f	      0xe800000000	                          call 0x4001374	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4001374	          0x4885c0	                           test rax, rax	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4001377	            0x793c	                           jns 0x40013b5	       374	sequencer.c	FUNCTION_14	IF_2	CALL_3
0x4001379	      0xbf00000000	                              mov edi, 0	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x400137e	      0xe824f0ffff	                               call sym.	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4001383	          0x4889c2	                            mov rdx, rax	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4001386	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x400138a	          0x4889c6	                            mov rsi, rax	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x400138d	          0x4889d7	                            mov rdi, rdx	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4001390	      0xb800000000	                              mov eax, 0	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x4001395	      0xe800000000	                          call 0x400139a	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x400139a	      0xe8a1ecffff	                    call sym.const_error	       375	sequencer.c	FUNCTION_14	IF_2	CALL_4
0x400139f	        0x488d45f0	                   lea rax, [rbp - 0x10]	       376	sequencer.c	FUNCTION_14	IF_2	CALL_5
0x40013a3	          0x4889c7	                            mov rdi, rax	       376	sequencer.c	FUNCTION_14	IF_2	CALL_5
0x40013a6	      0xe841f1ffff	             call sym.rollback_lock_file	       376	sequencer.c	FUNCTION_14	IF_2	CALL_5
0x40013ab	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	sequencer.c	FUNCTION_14	IF_2
0x40013b0	      0xe995000000	                           jmp 0x400144a	       377	sequencer.c	FUNCTION_14	IF_2
0x40013b5	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013b9	            0x7452	                            je 0x400140d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013bb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013be	      0xba01000000	                              mov edx, 1	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013c3	      0xbe00000000	                              mov esi, 0	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013c8	            0x89c7	                            mov edi, eax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013ca	      0xe800000000	                          call 0x40013cf	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013cf	          0x4885c0	                           test rax, rax	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013d2	            0x7939	                           jns 0x400140d	       379	sequencer.c	FUNCTION_14	IF_3	CALL_6
0x40013d4	      0xbf00000000	                              mov edi, 0	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013d9	      0xe8c9efffff	                               call sym.	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013de	          0x4889c2	                            mov rdx, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013e5	          0x4889c6	                            mov rsi, rax	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013e8	          0x4889d7	                            mov rdi, rdx	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013eb	      0xb800000000	                              mov eax, 0	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013f0	      0xe800000000	                          call 0x40013f5	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013f5	      0xe846ecffff	                    call sym.const_error	       380	sequencer.c	FUNCTION_14	IF_3	CALL_7
0x40013fa	        0x488d45f0	                   lea rax, [rbp - 0x10]	       381	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x40013fe	          0x4889c7	                            mov rdi, rax	       381	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x4001401	      0xe8e6f0ffff	             call sym.rollback_lock_file	       381	sequencer.c	FUNCTION_14	IF_3	CALL_8
0x4001406	      0xb8ffffffff	                     mov eax, 0xffffffff	       382	sequencer.c	FUNCTION_14	IF_3
0x400140b	            0xeb3d	                           jmp 0x400144a	       382	sequencer.c	FUNCTION_14	IF_3
0x400140d	        0x488d45f0	                   lea rax, [rbp - 0x10]	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4001411	          0x4889c7	                            mov rdi, rax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4001414	      0xe800000000	                          call 0x4001419	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x4001419	            0x85c0	                           test eax, eax	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x400141b	            0x7928	                           jns 0x4001445	       384	sequencer.c	FUNCTION_14	IF_4	CALL_9
0x400141d	      0xbf00000000	                              mov edi, 0	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001422	      0xe880efffff	                               call sym.	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001427	          0x4889c2	                            mov rdx, rax	       385	sequencer.c	FUNCTION_14	CALL_10
0x400142a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       385	sequencer.c	FUNCTION_14	CALL_10
0x400142e	          0x4889c6	                            mov rsi, rax	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001431	          0x4889d7	                            mov rdi, rdx	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001434	      0xb800000000	                              mov eax, 0	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001439	      0xe800000000	                          call 0x400143e	       385	sequencer.c	FUNCTION_14	CALL_10
0x400143e	      0xe8fdebffff	                    call sym.const_error	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001443	            0xeb05	                           jmp 0x400144a	       385	sequencer.c	FUNCTION_14	CALL_10
0x4001445	      0xb800000000	                              mov eax, 0	       387	sequencer.c	FUNCTION_14
0x400144a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       388	sequencer.c	FUNCTION_14
0x400144e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       388	sequencer.c	FUNCTION_14
0x4001457	            0x7405	                            je 0x400145e	       388	sequencer.c	FUNCTION_14
0x4001459	      0xe800000000	                          call 0x400145e	       388	sequencer.c	FUNCTION_14
0x400145e	              0xc9	                                   leave	       388	sequencer.c	FUNCTION_14
0x400145f	              0xc3	                                     ret	       388	sequencer.c	FUNCTION_14
const_error	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_167
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_167
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_167
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_167
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_167
todo_list_release	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	22
0x40053b2	              0x55	                                push rbp	      1790	sequencer.c	FUNCTION_51
0x40053b3	          0x4889e5	                            mov rbp, rsp	      1790	sequencer.c	FUNCTION_51
0x40053b6	        0x4883ec10	                           sub rsp, 0x10	      1790	sequencer.c	FUNCTION_51
0x40053ba	        0x48897df8	                mov qword [rbp - 8], rdi	      1790	sequencer.c	FUNCTION_51
0x40053be	        0x488b45f8	                mov rax, qword [rbp - 8]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x40053c2	          0x4889c7	                            mov rdi, rax	      1791	sequencer.c	FUNCTION_51	CALL_1
0x40053c5	      0xe800000000	                          call 0x40053ca	      1791	sequencer.c	FUNCTION_51	CALL_1
0x40053ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	sequencer.c	FUNCTION_51
0x40053ce	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x40053d2	          0x4889c7	                            mov rdi, rax	      1792	sequencer.c	FUNCTION_51
0x40053d5	      0xe800000000	                          call 0x40053da	      1792	sequencer.c	FUNCTION_51
0x40053da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	sequencer.c	FUNCTION_51
0x40053de	    0x48c740180000	               mov qword [rax + 0x18], 0	      1792	sequencer.c	FUNCTION_51
0x40053e6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x40053ea	    0xc74024000000	               mov dword [rax + 0x24], 0	      1793	sequencer.c	FUNCTION_51
0x40053f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x40053f5	          0x8b5024	            mov edx, dword [rax + 0x24] 	      1793	sequencer.c	FUNCTION_51
0x40053f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1793	sequencer.c	FUNCTION_51
0x40053fc	          0x895020	             mov dword [rax + 0x20], edx	      1793	sequencer.c	FUNCTION_51
0x40053ff	              0x90	                                     nop	      1794	sequencer.c	FUNCTION_51
0x4005400	              0xc9	                                   leave	      1794	sequencer.c	FUNCTION_51
0x4005401	              0xc3	                                     ret	      1794	sequencer.c	FUNCTION_51
make_script_with_merges	CALL,72:FOR,5:WHILE,2:ELSE,8:DO,0:IF,21:SWITCH,0:functions,0	775
0x400b970	              0x55	                                push rbp	      3681	sequencer.c	FUNCTION_96
0x400b971	          0x4889e5	                            mov rbp, rsp	      3681	sequencer.c	FUNCTION_96
0x400b974	              0x53	                                push rbx	      3681	sequencer.c	FUNCTION_96
0x400b975	    0x4881eca80200	                          sub rsp, 0x2a8	      3681	sequencer.c	FUNCTION_96
0x400b97c	    0x4889bd68fdff	            mov qword [rbp - 0x298], rdi	      3681	sequencer.c	FUNCTION_96
0x400b983	    0x4889b560fdff	            mov qword [rbp - 0x2a0], rsi	      3681	sequencer.c	FUNCTION_96
0x400b98a	    0x48899558fdff	            mov qword [rbp - 0x2a8], rdx	      3681	sequencer.c	FUNCTION_96
0x400b991	    0x898d54fdffff	            mov dword [rbp - 0x2ac], ecx	      3681	sequencer.c	FUNCTION_96
0x400b997	    0x64488b042528	                mov rax, qword fs:[0x28]	      3681	sequencer.c	FUNCTION_96
0x400b9a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      3681	sequencer.c	FUNCTION_96
0x400b9a4	            0x31c0	                            xor eax, eax	      3681	sequencer.c	FUNCTION_96
0x400b9a6	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3682	sequencer.c	FUNCTION_96
0x400b9ac	          0x83e001	                              and eax, 1	      3682	sequencer.c	FUNCTION_96
0x400b9af	    0x89857cfdffff	            mov dword [rbp - 0x284], eax	      3682	sequencer.c	FUNCTION_96
0x400b9b5	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3683	sequencer.c	FUNCTION_96
0x400b9bb	          0x83e010	                           and eax, 0x10	      3683	sequencer.c	FUNCTION_96
0x400b9be	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      3683	sequencer.c	FUNCTION_96
0x400b9c4	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	      3684	sequencer.c	FUNCTION_96
0x400b9cf	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      3684	sequencer.c	FUNCTION_96
0x400b9da	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      3684	sequencer.c	FUNCTION_96
0x400b9e5	    0x48c78570feff	              mov qword [rbp - 0x190], 0	      3684	sequencer.c	FUNCTION_96
0x400b9f0	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      3684	sequencer.c	FUNCTION_96
0x400b9fb	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      3684	sequencer.c	FUNCTION_96
0x400ba06	    0x48c78590feff	              mov qword [rbp - 0x170], 0	      3685	sequencer.c	FUNCTION_96
0x400ba11	    0x48c78598feff	              mov qword [rbp - 0x168], 0	      3685	sequencer.c	FUNCTION_96
0x400ba1c	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      3685	sequencer.c	FUNCTION_96
0x400ba27	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	      3686	sequencer.c	FUNCTION_96
0x400ba32	    0x488d8590fdff	                  lea rax, [rbp - 0x270]	      3686	sequencer.c	FUNCTION_96
0x400ba39	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3686	sequencer.c	FUNCTION_96
0x400ba40	    0x48c78598fdff	              mov qword [rbp - 0x268], 0	      3687	sequencer.c	FUNCTION_96
0x400ba4b	    0x488d8598fdff	                  lea rax, [rbp - 0x268]	      3687	sequencer.c	FUNCTION_96
0x400ba52	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3687	sequencer.c	FUNCTION_96
0x400ba59	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      3689	sequencer.c	FUNCTION_96
0x400ba60	      0xb800000000	                              mov eax, 0	      3689	sequencer.c	FUNCTION_96
0x400ba65	      0xb906000000	                              mov ecx, 6	      3689	sequencer.c	FUNCTION_96
0x400ba6a	          0x4889d7	                            mov rdi, rdx	      3689	sequencer.c	FUNCTION_96
0x400ba6d	          0xf348ab	              rep stosq qword [rdi], rax	      3689	sequencer.c	FUNCTION_96
0x400ba70	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      3691	sequencer.c	FUNCTION_96
0x400ba77	      0xb800000000	                              mov eax, 0	      3691	sequencer.c	FUNCTION_96
0x400ba7c	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400ba81	          0x4889d7	                            mov rdi, rdx	      3691	sequencer.c	FUNCTION_96
0x400ba84	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400ba87	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	      3691	sequencer.c	FUNCTION_96
0x400ba8e	      0xb800000000	                              mov eax, 0	      3691	sequencer.c	FUNCTION_96
0x400ba93	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400ba98	          0x4889d7	                            mov rdi, rdx	      3691	sequencer.c	FUNCTION_96
0x400ba9b	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400ba9e	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      3692	sequencer.c	FUNCTION_96
0x400baa5	      0xb800000000	                              mov eax, 0	      3692	sequencer.c	FUNCTION_96
0x400baaa	      0xb906000000	                              mov ecx, 6	      3692	sequencer.c	FUNCTION_96
0x400baaf	          0x4889d7	                            mov rdi, rdx	      3692	sequencer.c	FUNCTION_96
0x400bab2	          0xf348ab	              rep stosq qword [rdi], rax	      3692	sequencer.c	FUNCTION_96
0x400bab5	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3693	sequencer.c	FUNCTION_96
0x400babc	      0xb800000000	                              mov eax, 0	      3693	sequencer.c	FUNCTION_96
0x400bac1	      0xb90f000000	                            mov ecx, 0xf	      3693	sequencer.c	FUNCTION_96
0x400bac6	          0x4889d7	                            mov rdi, rdx	      3693	sequencer.c	FUNCTION_96
0x400bac9	          0xf348ab	              rep stosq qword [rdi], rax	      3693	sequencer.c	FUNCTION_96
0x400bacc	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3693	sequencer.c	FUNCTION_96
0x400bad4	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      3695	sequencer.c	FUNCTION_96
0x400bada	          0x83e004	                              and eax, 4	      3695	sequencer.c	FUNCTION_96
0x400badd	    0x898584fdffff	            mov dword [rbp - 0x27c], eax	      3695	sequencer.c	FUNCTION_96
0x400bae3	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3696	sequencer.c	FUNCTION_96
0x400baea	            0x7407	                            je 0x400baf3	      3696	sequencer.c	FUNCTION_96
0x400baec	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x400baf1	            0xeb05	                           jmp 0x400baf8	      3696	sequencer.c	FUNCTION_96
0x400baf3	      0xb800000000	                              mov eax, 0	      3696	sequencer.c	FUNCTION_96
0x400baf8	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      3696	sequencer.c	FUNCTION_96
0x400baff	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3697	sequencer.c	FUNCTION_96
0x400bb06	            0x7407	                            je 0x400bb0f	      3697	sequencer.c	FUNCTION_96
0x400bb08	      0xb800000000	                              mov eax, 0	      3697	sequencer.c	FUNCTION_96
0x400bb0d	            0xeb05	                           jmp 0x400bb14	      3697	sequencer.c	FUNCTION_96
0x400bb0f	      0xb800000000	                              mov eax, 0	      3697	sequencer.c	FUNCTION_96
0x400bb14	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      3697	sequencer.c	FUNCTION_96
0x400bb1b	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3698	sequencer.c	FUNCTION_96
0x400bb22	            0x7407	                            je 0x400bb2b	      3698	sequencer.c	FUNCTION_96
0x400bb24	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400bb29	            0xeb05	                           jmp 0x400bb30	      3698	sequencer.c	FUNCTION_96
0x400bb2b	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400bb30	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      3698	sequencer.c	FUNCTION_96
0x400bb37	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      3699	sequencer.c	FUNCTION_96
0x400bb3e	            0x7407	                            je 0x400bb47	      3699	sequencer.c	FUNCTION_96
0x400bb40	      0xb800000000	                              mov eax, 0	      3699	sequencer.c	FUNCTION_96
0x400bb45	            0xeb05	                           jmp 0x400bb4c	      3699	sequencer.c	FUNCTION_96
0x400bb47	      0xb800000000	                              mov eax, 0	      3699	sequencer.c	FUNCTION_96
0x400bb4c	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      3699	sequencer.c	FUNCTION_96
0x400bb53	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400bb5a	      0xbe00000000	                              mov esi, 0	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400bb5f	          0x4889c7	                            mov rdi, rax	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400bb62	      0xe800000000	                          call 0x400bb67	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400bb67	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400bb6e	      0xbe00000000	                              mov esi, 0	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400bb73	          0x4889c7	                            mov rdi, rax	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400bb76	      0xe800000000	                          call 0x400bb7b	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400bb7b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb82	        0x4883c030	                           add rax, 0x30	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb86	      0xb900000000	                              mov ecx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb8b	      0xba00000000	                              mov edx, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb90	      0xbe00000000	                              mov esi, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb95	          0x4889c7	                            mov rdi, rax	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb98	      0xe800000000	                          call 0x400bb9d	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400bb9d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400bba4	        0x4883c060	                           add rax, 0x60	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400bba8	      0xbe20000000	                           mov esi, 0x20	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400bbad	          0x4889c7	                            mov rdi, rax	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400bbb0	      0xe800000000	                          call 0x400bbb5	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400bbb5	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbbc	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbbf	            0x85c0	                           test eax, eax	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbc1	     0xf84c8060000	                            je 0x400c28f	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbc7	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbce	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbd2	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbd5	      0x2500040000	                          and eax, 0x400	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbda	            0x85c0	                           test eax, eax	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbdc	     0xf84ad060000	                            je 0x400c28f	      3706	sequencer.c	FUNCTION_96	IF_1
0x400bbe2	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3707	sequencer.c	FUNCTION_96	IF_1
0x400bbe9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3707	sequencer.c	FUNCTION_96	IF_1
0x400bbed	          0x488b00	                    mov rax, qword [rax]	      3707	sequencer.c	FUNCTION_96	IF_1
0x400bbf0	        0x4883c004	                              add rax, 4	      3707	sequencer.c	FUNCTION_96	IF_1
0x400bbf4	    0x48898500feff	            mov qword [rbp - 0x200], rax	      3707	sequencer.c	FUNCTION_96	IF_1
0x400bbfb	    0x48c78508feff	              mov qword [rbp - 0x1f8], 4	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc06	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc0d	          0x4889c6	                            mov rsi, rax	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc10	      0xbf28000000	                           mov edi, 0x28	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc15	      0xe88744ffff	                         call sym.st_add	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc1a	      0xbe01000000	                              mov esi, 1	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc1f	          0x4889c7	                            mov rdi, rax	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc22	      0xe87a44ffff	                         call sym.st_add	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc27	          0x4889c6	                            mov rsi, rax	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc2a	      0xbf01000000	                              mov edi, 1	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc2f	      0xe800000000	                          call 0x400bc34	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc34	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc3b	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc42	        0x488d4828	                   lea rcx, [rax + 0x28]	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc46	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc4d	          0x4889c2	                            mov rdx, rax	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc50	      0xbe00000000	                              mov esi, 0	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc55	          0x4889cf	                            mov rdi, rcx	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc58	      0xe800000000	                          call 0x400bc5d	      3708	sequencer.c	FUNCTION_96	IF_1
0x400bc5d	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc64	        0x488d5010	                   lea rdx, [rax + 0x10]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc68	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc6f	          0x4889c6	                            mov rsi, rax	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc72	          0x4889d7	                            mov rdi, rdx	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc75	      0xe8fa47ffff	                         call sym.oidcpy	      3709	sequencer.c	FUNCTION_96	IF_1	CALL_5
0x400bc7a	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400bc81	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400bc88	          0x4889d6	                            mov rsi, rdx	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400bc8b	          0x4889c7	                            mov rdi, rax	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400bc8e	      0xe800000000	                          call 0x400bc93	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400bc93	      0xe9f7050000	                           jmp 0x400c28f	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400bc98	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bc9f	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bca6	          0x4889d6	                            mov rsi, rdx	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bca9	          0x4889c7	                            mov rdi, rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bcac	      0xe800000000	                          call 0x400bcb1	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bcb1	        0x4883c008	                              add rax, 8	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bcb5	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400bcbc	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcc3	        0x488d5004	                      lea rdx, [rax + 4]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcc7	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcce	          0x4889d6	                            mov rsi, rdx	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcd1	          0x4889c7	                            mov rdi, rax	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcd4	      0xe800000000	                          call 0x400bcd9	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400bcd9	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400bce0	          0x4889c7	                            mov rdi, rax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400bce3	      0xe89a7dffff	       call sym.is_original_commit_empty	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400bce8	    0x898588fdffff	            mov dword [rbp - 0x278], eax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400bcee	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bcf5	            0x751e	                           jne 0x400bd15	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bcf7	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bcfe	            0x8b00	                    mov eax, dword [rax]	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd00	          0xc1e804	                              shr eax, 4	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd03	      0x25ffffff07	                      and eax, 0x7ffffff	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd08	      0x2500020000	                          and eax, 0x200	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd0d	            0x85c0	                           test eax, eax	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd0f	     0xf8579050000	                           jne 0x400c28e	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400bd15	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3733	sequencer.c	FUNCTION_96	WHILE_1
0x400bd1c	      0xbe00000000	                              mov esi, 0	      3733	sequencer.c	FUNCTION_96	WHILE_1
0x400bd21	          0x4889c7	                            mov rdi, rax	      3733	sequencer.c	FUNCTION_96	WHILE_1
0x400bd24	      0xe84444ffff	                  call sym.strbuf_setlen	      3733	sequencer.c	FUNCTION_96	WHILE_1
0x400bd29	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd30	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd37	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd3e	          0x4889ce	                            mov rsi, rcx	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd41	          0x4889c7	                            mov rdi, rax	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd44	      0xe800000000	                          call 0x400bd49	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400bd49	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd50	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd54	          0x4885c0	                           test rax, rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd57	            0x7411	                            je 0x400bd6a	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd59	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd60	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd64	        0x488b4008	                mov rax, qword [rax + 8]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd68	            0xeb05	                           jmp 0x400bd6f	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd6a	      0xb800000000	                              mov eax, 0	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd6f	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400bd76	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd7e	     0xf8537010000	                           jne 0x400bebb	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd84	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd8b	      0xbe00000000	                              mov esi, 0	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd90	          0x4889c7	                            mov rdi, rax	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd93	      0xe8d543ffff	                  call sym.strbuf_setlen	      3739	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bd98	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400bd9f	            0x752c	                           jne 0x400bdcd	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400bda1	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400bda8	            0x7423	                            je 0x400bdcd	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400bdaa	     0xfb605000000	           movzx eax, byte [0x0400bdb1] 	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdb1	           0xfbed0	                           movsx edx, al	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdb4	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdbb	      0xbe00000000	                              mov esi, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdc0	          0x4889c7	                            mov rdi, rax	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdc3	      0xb800000000	                              mov eax, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdc8	      0xe800000000	                          call 0x400bdcd	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400bdcd	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bdd4	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3743	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0x400bddb	        0x4883c004	                              add rax, 4	      3743	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_14
0x400bddf	          0x4889c7	                            mov rdi, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bde2	      0xe800000000	                          call 0x400bde7	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bde7	          0x4889c1	                            mov rcx, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bdea	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bdf1	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bdf8	          0x4989d8	                             mov r8, rbx	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400bdfb	      0xbe00000000	                              mov esi, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400be00	          0x4889c7	                            mov rdi, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400be03	      0xb800000000	                              mov eax, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400be08	      0xe800000000	                          call 0x400be0d	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400be0d	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be14	          0x4889c7	                            mov rdi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be17	      0xe800000000	                          call 0x400be1c	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be1c	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be23	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be2a	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be2d	      0xbf28000000	                           mov edi, 0x28	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be32	      0xe86a42ffff	                         call sym.st_add	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be37	      0xbe01000000	                              mov esi, 1	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be3c	          0x4889c7	                            mov rdi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be3f	      0xe85d42ffff	                         call sym.st_add	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be44	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be47	      0xbf01000000	                              mov edi, 1	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be4c	      0xe800000000	                          call 0x400be51	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be51	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be58	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be5f	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be66	        0x488d4a28	                   lea rcx, [rdx + 0x28]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be6a	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be71	          0x4889c6	                            mov rsi, rax	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be74	          0x4889cf	                            mov rdi, rcx	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be77	      0xe800000000	                          call 0x400be7c	      3746	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400be7c	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be83	        0x488d5004	                      lea rdx, [rax + 4]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be87	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be8e	        0x4883c010	                           add rax, 0x10	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be92	          0x4889d6	                            mov rsi, rdx	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be95	          0x4889c7	                            mov rdi, rax	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be98	      0xe8d745ffff	                         call sym.oidcpy	      3747	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_15
0x400be9d	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400bea4	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400beab	          0x4889d6	                            mov rsi, rdx	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400beae	          0x4889c7	                            mov rdi, rax	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400beb1	      0xe800000000	                          call 0x400beb6	      3748	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_16
0x400beb6	      0xe9d4030000	                           jmp 0x400c28f	      3750	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400bebb	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bec3	            0x7417	                            je 0x400bedc	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bec5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400becc	        0x488b4008	                mov rax, qword [rax + 8]	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bed0	          0x4885c0	                           test rax, rax	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bed3	            0x7407	                            je 0x400bedc	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bed5	      0xb801000000	                              mov eax, 1	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400beda	            0xeb05	                           jmp 0x400bee1	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bedc	      0xb800000000	                              mov eax, 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bee1	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400bee7	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	      3755	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400beee	            0x7419	                            je 0x400bf09	      3755	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400bef0	      0xba00000000	                              mov edx, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400bef5	      0xbeac0e0000	                          mov esi, 0xeac	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400befa	      0xbf00000000	                              mov edi, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400beff	      0xb800000000	                              mov eax, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400bf04	      0xe800000000	                          call 0x400bf09	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400bf09	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3759	sequencer.c	FUNCTION_96	WHILE_1
0x400bf10	      0xbe00000000	                              mov esi, 0	      3759	sequencer.c	FUNCTION_96	WHILE_1
0x400bf15	          0x4889c7	                            mov rdi, rax	      3759	sequencer.c	FUNCTION_96	WHILE_1
0x400bf18	      0xe85042ffff	                  call sym.strbuf_setlen	      3759	sequencer.c	FUNCTION_96	WHILE_1
0x400bf1d	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf24	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf2b	      0xbe00000000	                              mov esi, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf30	          0x4889c7	                            mov rdi, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf33	      0xe81341ffff	                    call sym.skip_prefix	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf38	            0x85c0	                           test eax, eax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf3a	     0xf848d000000	                            je 0x400bfcd	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf40	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf47	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf4c	          0x4889c7	                            mov rdi, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf4f	      0xe800000000	                          call 0x400bf54	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf54	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf5b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf62	          0x4885c0	                           test rax, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf65	            0x7466	                            je 0x400bfcd	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400bf67	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_19
0x400bf6e	        0x4883c001	                              add rax, 1	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_19
0x400bf72	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf79	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_19
0x400bf80	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf85	          0x4889c7	                            mov rdi, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf88	      0xe800000000	                          call 0x400bf8d	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf8d	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf94	    0x4883bd20feff	              cmp qword [rbp - 0x1e0], 0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf9c	            0x742f	                            je 0x400bfcd	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_18
0x400bf9e	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfa5	    0x488b95a0fdff	            mov rdx, qword [rbp - 0x260]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfac	          0x4829d0	                            sub rax, rdx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfaf	          0x4889c2	                            mov rdx, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfb2	    0x488b8da0fdff	            mov rcx, qword [rbp - 0x260]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfb9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfc0	          0x4889ce	                            mov rsi, rcx	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfc3	          0x4889c7	                            mov rdi, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfc6	      0xe800000000	                          call 0x400bfcb	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfcb	            0xeb7e	                           jmp 0x400c04b	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_20
0x400bfcd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfd4	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfdb	      0xbe00000000	                              mov esi, 0	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfe0	          0x4889c7	                            mov rdi, rax	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfe3	      0xe86340ffff	                    call sym.skip_prefix	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfe8	            0x85c0	                           test eax, eax	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfea	            0x7446	                            je 0x400c032	      3764	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_21
0x400bfec	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400bff3	      0xbe00000000	                              mov esi, 0	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400bff8	          0x4889c7	                            mov rdi, rax	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400bffb	      0xe800000000	                          call 0x400c000	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400c000	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400c007	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7	CALL_22
0x400c00e	          0x4885c0	                           test rax, rax	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c011	            0x741f	                            je 0x400c032	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c013	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c01a	        0x488d5006	                      lea rdx, [rax + 6]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c01e	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c025	          0x4889d6	                            mov rsi, rdx	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c028	          0x4889c7	                            mov rdi, rax	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c02b	      0xe84542ffff	                  call sym.strbuf_addstr	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c030	            0xeb19	                           jmp 0x400c04b	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400c032	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_25
0x400c039	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_25
0x400c040	          0x4889d6	                            mov rsi, rdx	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_25
0x400c043	          0x4889c7	                            mov rdi, rax	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_25
0x400c046	      0xe800000000	                          call 0x400c04b	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_25
0x400c04b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c052	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c059	            0xeb3c	                           jmp 0x400c097	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c05b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c062	           0xfb600	                   movzx eax, byte [rax]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c065	           0xfb6c0	                           movzx eax, al	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c068	            0x4898	                                    cdqe	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c06a	     0xfb680000000	                   movzx eax, byte [rax]	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c071	           0xfb6c0	                           movzx eax, al	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c074	          0x83e001	                              and eax, 1	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c077	            0x85c0	                           test eax, eax	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c079	            0x740a	                            je 0x400c085	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c07b	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c082	          0xc6002d	                    mov byte [rax], 0x2d	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400c085	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c08c	        0x4883c001	                              add rax, 1	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c090	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c097	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c09e	           0xfb600	                   movzx eax, byte [rax]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c0a1	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c0a3	            0x75b6	                           jne 0x400c05b	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400c0a5	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3775	sequencer.c	FUNCTION_96	WHILE_1
0x400c0ac	      0xbe00000000	                              mov esi, 0	      3775	sequencer.c	FUNCTION_96	WHILE_1
0x400c0b1	          0x4889c7	                            mov rdi, rax	      3775	sequencer.c	FUNCTION_96	WHILE_1
0x400c0b4	      0xe8b440ffff	                  call sym.strbuf_setlen	      3775	sequencer.c	FUNCTION_96	WHILE_1
0x400c0b9	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3777	sequencer.c	FUNCTION_96	WHILE_1	CALL_27
0x400c0c0	        0x4883c004	                              add rax, 4	      3777	sequencer.c	FUNCTION_96	WHILE_1	CALL_27
0x400c0c4	          0x4889c7	                            mov rdi, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0c7	      0xe800000000	                          call 0x400c0cc	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0cc	          0x4889c1	                            mov rcx, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0cf	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0d6	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0dd	      0xbe00000000	                              mov esi, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0e2	          0x4889c7	                            mov rdi, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0e5	      0xb800000000	                              mov eax, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0ea	      0xe800000000	                          call 0x400c0ef	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_26
0x400c0ef	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400c0f6	          0x488b00	                    mov rax, qword [rax]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400c0f9	        0x4883c004	                              add rax, 4	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400c0fd	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400c104	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400c10b	      0xbe20000000	                           mov esi, 0x20	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400c110	          0x4889c7	                            mov rdi, rax	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400c113	      0xe8ef40ffff	                   call sym.strbuf_addch	      3781	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400c118	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c11f	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c126	          0x4889d6	                            mov rsi, rdx	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c129	          0x4889c7	                            mov rdi, rax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c12c	      0xe800000000	                          call 0x400c131	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c131	            0x85c0	                           test eax, eax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c133	            0x7532	                           jne 0x400c167	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_29
0x400c135	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c13c	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c143	      0xbe00000000	                              mov esi, 0	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c148	          0x4889c7	                            mov rdi, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c14b	      0xe8f0f3ffff	                      call sym.label_oid	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c150	          0x4889c2	                            mov rdx, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c153	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c15a	          0x4889d6	                            mov rsi, rdx	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c15d	          0x4889c7	                            mov rdi, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c160	      0xe81041ffff	                  call sym.strbuf_addstr	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c165	            0xeb5c	                           jmp 0x400c1c3	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_31
0x400c167	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c16e	          0x488b00	                    mov rax, qword [rax]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c171	    0x488b95b8fdff	            mov rdx, qword [rbp - 0x248]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c178	          0x4889d6	                            mov rsi, rdx	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c17b	          0x4889c7	                            mov rdi, rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c17e	      0xe800000000	                          call 0x400c183	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c183	        0x4883c008	                              add rax, 8	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c187	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_32
0x400c18e	    0x488b8da0feff	            mov rcx, qword [rbp - 0x160]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c195	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c19c	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1a3	          0x4889ce	                            mov rsi, rcx	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1a6	          0x4889c7	                            mov rdi, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1a9	      0xe892f3ffff	                      call sym.label_oid	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1ae	          0x4889c2	                            mov rdx, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1b1	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1b8	          0x4889d6	                            mov rsi, rdx	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1bb	          0x4889c7	                            mov rdi, rax	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1be	      0xe8b240ffff	                  call sym.strbuf_addstr	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_34
0x400c1c3	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1ca	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1d1	      0xbe00000000	                              mov esi, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1d6	          0x4889c7	                            mov rdi, rax	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1d9	      0xb800000000	                              mov eax, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1de	      0xe800000000	                          call 0x400c1e3	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_35
0x400c1e3	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c1ea	          0x4889c7	                            mov rdi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c1ed	      0xe800000000	                          call 0x400c1f2	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c1f2	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c1f9	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c200	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c203	      0xbf28000000	                           mov edi, 0x28	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c208	      0xe8943effff	                         call sym.st_add	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c20d	      0xbe01000000	                              mov esi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c212	          0x4889c7	                            mov rdi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c215	      0xe8873effff	                         call sym.st_add	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c21a	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c21d	      0xbf01000000	                              mov edi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c222	      0xe800000000	                          call 0x400c227	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c227	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c22e	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c235	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c23c	        0x488d4a28	                   lea rcx, [rdx + 0x28]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c240	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c247	          0x4889c6	                            mov rsi, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c24a	          0x4889cf	                            mov rdi, rcx	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c24d	      0xe800000000	                          call 0x400c252	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400c252	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c259	        0x488d5004	                      lea rdx, [rax + 4]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c25d	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c264	        0x4883c010	                           add rax, 0x10	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c268	          0x4889d6	                            mov rsi, rdx	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c26b	          0x4889c7	                            mov rdi, rax	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c26e	      0xe80142ffff	                         call sym.oidcpy	      3794	sequencer.c	FUNCTION_96	WHILE_1	CALL_36
0x400c273	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c27a	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c281	          0x4889d6	                            mov rsi, rdx	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c284	          0x4889c7	                            mov rdi, rax	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c287	      0xe800000000	                          call 0x400c28c	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c28c	            0xeb01	                           jmp 0x400c28f	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_37
0x400c28e	              0x90	                                     nop	      3731	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400c28f	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c296	          0x4889c7	                            mov rdi, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c299	      0xe800000000	                          call 0x400c29e	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c29e	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c2a5	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c2ad	     0xf85e5f9ffff	                           jne 0x400bc98	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400c2b3	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c2ba	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c2c1	      0xe90b010000	                           jmp 0x400c3d1	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c2c6	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c2cd	          0x488b00	                    mov rax, qword [rax]	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c2d0	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c2d4	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c2db	      0xe99a000000	                           jmp 0x400c37a	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c2e0	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c2e7	          0x488b00	                    mov rax, qword [rax]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c2ea	        0x4883c004	                              add rax, 4	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c2ee	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c2f5	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c2fc	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c303	          0x4889d6	                            mov rsi, rdx	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c306	          0x4889c7	                            mov rdi, rax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c309	      0xe800000000	                          call 0x400c30e	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c30e	            0x85c0	                           test eax, eax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c310	            0x7455	                            je 0x400c367	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_38
0x400c312	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c319	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c320	          0x4889d6	                            mov rsi, rdx	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c323	          0x4889c7	                            mov rdi, rax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c326	      0xe800000000	                          call 0x400c32b	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c32b	            0x85c0	                           test eax, eax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c32d	            0x751b	                           jne 0x400c34a	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_39
0x400c32f	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c336	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c33d	          0x4889d6	                            mov rsi, rdx	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c340	          0x4889c7	                            mov rdi, rax	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c343	      0xe800000000	                          call 0x400c348	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c348	            0xeb1e	                           jmp 0x400c368	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_40
0x400c34a	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c351	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c358	      0xbe00000000	                              mov esi, 0	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c35d	          0x4889c7	                            mov rdi, rax	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c360	      0xe8dbf1ffff	                      call sym.label_oid	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c365	            0xeb01	                           jmp 0x400c368	      3812	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_41
0x400c367	              0x90	                                     nop	      3808	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10
0x400c368	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c36f	        0x488b4008	                mov rax, qword [rax + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c373	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c37a	    0x4883bdc8fdff	              cmp qword [rbp - 0x238], 0	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c382	     0xf8558ffffff	                           jne 0x400c2e0	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c388	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c38f	        0x488b4008	                mov rax, qword [rax + 8]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c393	          0x4885c0	                           test rax, rax	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c396	            0x7527	                           jne 0x400c3bf	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c398	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c39f	          0x488b00	                    mov rax, qword [rax]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3a2	    0x488b95b8fdff	            mov rdx, qword [rbp - 0x248]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3a9	          0x4889d6	                            mov rsi, rdx	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3ac	          0x4889c7	                            mov rdi, rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3af	      0xe800000000	                          call 0x400c3b4	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3b4	        0x4883c008	                              add rax, 8	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3b8	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_42
0x400c3bf	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c3c6	        0x488b4008	                mov rax, qword [rax + 8]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c3ca	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c3d1	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c3d9	     0xf85e7feffff	                           jne 0x400c2c6	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c3df	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3e6	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3ed	      0xbe00000000	                              mov esi, 0	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3f2	          0x4889c7	                            mov rdi, rax	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3f5	      0xb800000000	                              mov eax, 0	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3fa	      0xe800000000	                          call 0x400c3ff	      3828	sequencer.c	FUNCTION_96	CALL_43
0x400c3ff	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c406	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c40d	      0xe9bb030000	                           jmp 0x400c7cd	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c412	    0x48c785a0fdff	              mov qword [rbp - 0x260], 0	      3830	sequencer.c	FUNCTION_96	FOR_4
0x400c41d	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400c424	          0x488b00	                    mov rax, qword [rax]	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400c427	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400c42e	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c435	        0x488d5004	                      lea rdx, [rax + 4]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c439	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c440	          0x4889d6	                            mov rsi, rdx	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c443	          0x4889c7	                            mov rdi, rax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c446	      0xe800000000	                          call 0x400c44b	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c44b	            0x85c0	                           test eax, eax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c44d	     0xf8567030000	                           jne 0x400c7ba	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_44
0x400c453	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c45a	        0x488d5004	                      lea rdx, [rax + 4]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c45e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c465	          0x4889d6	                            mov rsi, rdx	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c468	          0x4889c7	                            mov rdi, rax	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c46b	      0xe800000000	                          call 0x400c470	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c470	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_45
0x400c477	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400c47f	            0x7426	                            je 0x400c4a7	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400c481	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c488	        0x488d5028	                   lea rdx, [rax + 0x28]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c48c	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c493	      0xbe00000000	                              mov esi, 0	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c498	          0x4889c7	                            mov rdi, rax	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c49b	      0xb800000000	                              mov eax, 0	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c4a0	      0xe800000000	                          call 0x400c4a5	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c4a5	            0xeb61	                           jmp 0x400c508	      3838	sequencer.c	FUNCTION_96	FOR_4	CALL_46
0x400c4a7	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_47
0x400c4ae	          0x4889c6	                            mov rsi, rax	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_47
0x400c4b1	      0xbf0a000000	                            mov edi, 0xa	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_47
0x400c4b6	      0xe800000000	                          call 0x400c4bb	      3840	sequencer.c	FUNCTION_96	FOR_4	CALL_47
0x400c4bb	            0xeb4b	                           jmp 0x400c508	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c4bd	    0x488d95a0fdff	                  lea rdx, [rbp - 0x260]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_50
0x400c4c4	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_50
0x400c4cb	          0x4889d6	                            mov rsi, rdx	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_50
0x400c4ce	          0x4889c7	                            mov rdi, rax	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_50
0x400c4d1	      0xe800000000	                          call 0x400c4d6	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_50
0x400c4d6	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4dd	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4e1	          0x4885c0	                           test rax, rax	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4e4	            0x750d	                           jne 0x400c4f3	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4e6	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      3846	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4f1	            0xeb5b	                           jmp 0x400c54e	      3847	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c4f3	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c4fa	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c4fe	          0x488b00	                    mov rax, qword [rax]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c501	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c508	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c50f	        0x488d5004	                      lea rdx, [rax + 4]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c513	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c51a	          0x4889d6	                            mov rsi, rdx	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c51d	          0x4889c7	                            mov rdi, rax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c520	      0xe800000000	                          call 0x400c525	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c525	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c527	            0x7425	                            je 0x400c54e	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c529	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c530	        0x488d5004	                      lea rdx, [rax + 4]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c534	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c53b	          0x4889d6	                            mov rsi, rdx	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c53e	          0x4889c7	                            mov rdi, rax	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c541	      0xe800000000	                          call 0x400c546	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_49
0x400c546	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c548	     0xf846fffffff	                            je 0x400c4bd	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_48
0x400c54e	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400c556	            0x7525	                           jne 0x400c57d	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400c558	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c55f	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c566	      0xbe00000000	                              mov esi, 0	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c56b	          0x4889c7	                            mov rdi, rax	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c56e	      0xb800000000	                              mov eax, 0	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c573	      0xe800000000	                          call 0x400c578	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c578	      0xe928010000	                           jmp 0x400c6a5	      3853	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c57d	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	      3855	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0x400c588	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3858	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0x400c58f	        0x488d5004	                      lea rdx, [rax + 4]	      3858	sequencer.c	FUNCTION_96	FOR_4	ELSE_6
0x400c593	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_52
0x400c59a	          0x4889d6	                            mov rsi, rdx	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_52
0x400c59d	          0x4889c7	                            mov rdi, rax	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_52
0x400c5a0	      0xe800000000	                          call 0x400c5a5	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_52
0x400c5a5	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_52
0x400c5ac	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5b4	            0x7414	                            je 0x400c5ca	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5b6	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5bd	        0x4883c028	                           add rax, 0x28	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5c1	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5c8	            0xeb32	                           jmp 0x400c5fc	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c5ca	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400c5d1	            0x7529	                           jne 0x400c5fc	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400c5d3	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5da	        0x488d4804	                      lea rcx, [rax + 4]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5de	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5e5	          0x4889c2	                            mov rdx, rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5e8	      0xbe00000000	                              mov esi, 0	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5ed	          0x4889cf	                            mov rdi, rcx	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5f0	      0xe84befffff	                      call sym.label_oid	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5f5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_53
0x400c5fc	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c604	            0x7418	                            je 0x400c61e	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c606	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c60d	      0xbe00000000	                              mov esi, 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c612	          0x4889c7	                            mov rdi, rax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c615	      0xe800000000	                          call 0x400c61a	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c61a	            0x85c0	                           test eax, eax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c61c	            0x7522	                           jne 0x400c640	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19	CALL_54
0x400c61e	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c625	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c62c	      0xbe00000000	                              mov esi, 0	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c631	          0x4889c7	                            mov rdi, rax	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c634	      0xb800000000	                              mov eax, 0	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c639	      0xe800000000	                          call 0x400c63e	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c63e	            0xeb65	                           jmp 0x400c6a5	      3866	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_55
0x400c640	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8
0x400c647	      0xbe00000000	                              mov esi, 0	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8
0x400c64c	          0x4889c7	                            mov rdi, rax	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8
0x400c64f	      0xe8193bffff	                  call sym.strbuf_setlen	      3868	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8
0x400c654	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c65b	    0x488b8dc0fdff	            mov rcx, qword [rbp - 0x240]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c662	    0x488b8568fdff	            mov rax, qword [rbp - 0x298]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c669	          0x4889ce	                            mov rsi, rcx	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c66c	          0x4889c7	                            mov rdi, rax	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c66f	      0xe800000000	                          call 0x400c674	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_56
0x400c674	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c67b	    0x488b8dd8fdff	            mov rcx, qword [rbp - 0x228]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c682	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c689	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c690	          0x4989f0	                             mov r8, rsi	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c693	      0xbe00000000	                              mov esi, 0	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c698	          0x4889c7	                            mov rdi, rax	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c69b	      0xb800000000	                              mov eax, 0	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c6a0	      0xe800000000	                          call 0x400c6a5	      3870	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_57
0x400c6a5	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6ac	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6b3	      0xe9e3000000	                           jmp 0x400c79b	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6b8	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6bf	          0x488b00	                    mov rax, qword [rax]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6c2	        0x4883c004	                              add rax, 4	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6c6	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c6cd	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6d4	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6db	          0x4889d6	                            mov rsi, rdx	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6de	          0x4889c7	                            mov rdi, rax	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6e1	      0xe800000000	                          call 0x400c6e6	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6e6	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_58
0x400c6ed	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400c6f5	            0x7424	                            je 0x400c71b	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400c6f7	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c6fe	        0x488d5028	                   lea rdx, [rax + 0x28]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c702	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c709	      0xbe00000000	                              mov esi, 0	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c70e	          0x4889c7	                            mov rdi, rax	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c711	      0xb800000000	                              mov eax, 0	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c716	      0xe800000000	                          call 0x400c71b	      3880	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_59
0x400c71b	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c722	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c729	          0x4889d6	                            mov rsi, rdx	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c72c	          0x4889c7	                            mov rdi, rax	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c72f	      0xe800000000	                          call 0x400c734	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c734	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_60
0x400c73b	    0x4883bd10feff	              cmp qword [rbp - 0x1f0], 0	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c743	            0x742b	                            je 0x400c770	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c745	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      3884	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c74c	        0x488d4828	                   lea rcx, [rax + 0x28]	      3884	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c750	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c757	    0x488b8558fdff	            mov rax, qword [rbp - 0x2a8]	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c75e	      0xbe00000000	                              mov esi, 0	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c763	          0x4889c7	                            mov rdi, rax	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c766	      0xb800000000	                              mov eax, 0	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c76b	      0xe800000000	                          call 0x400c770	      3883	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21	CALL_61
0x400c770	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_62
0x400c777	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_62
0x400c77e	          0x4889d6	                            mov rsi, rdx	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_62
0x400c781	          0x4889c7	                            mov rdi, rax	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_62
0x400c784	      0xe800000000	                          call 0x400c789	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_62
0x400c789	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c790	        0x488b4008	                mov rax, qword [rax + 8]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c794	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c79b	    0x4883bdd0fdff	              cmp qword [rbp - 0x230], 0	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c7a3	     0xf850fffffff	                           jne 0x400c6b8	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c7a9	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_63
0x400c7b0	          0x4889c7	                            mov rdi, rax	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_63
0x400c7b3	      0xe800000000	                          call 0x400c7b8	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_63
0x400c7b8	            0xeb01	                           jmp 0x400c7bb	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_63
0x400c7ba	              0x90	                                     nop	      3834	sequencer.c	FUNCTION_96	FOR_4	IF_13
0x400c7bb	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c7c2	        0x488b4008	                mov rax, qword [rax + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c7c6	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c7cd	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c7d5	     0xf8537fcffff	                           jne 0x400c412	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c7db	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3891	sequencer.c	FUNCTION_96	CALL_64
0x400c7e2	          0x4889c7	                            mov rdi, rax	      3891	sequencer.c	FUNCTION_96	CALL_64
0x400c7e5	      0xe800000000	                          call 0x400c7ea	      3891	sequencer.c	FUNCTION_96	CALL_64
0x400c7ea	    0x488b8598fdff	            mov rax, qword [rbp - 0x268]	      3892	sequencer.c	FUNCTION_96	CALL_65
0x400c7f1	          0x4889c7	                            mov rdi, rax	      3892	sequencer.c	FUNCTION_96	CALL_65
0x400c7f4	      0xe800000000	                          call 0x400c7f9	      3892	sequencer.c	FUNCTION_96	CALL_65
0x400c7f9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3894	sequencer.c	FUNCTION_96	CALL_66
0x400c800	          0x4889c7	                            mov rdi, rax	      3894	sequencer.c	FUNCTION_96	CALL_66
0x400c803	      0xe800000000	                          call 0x400c808	      3894	sequencer.c	FUNCTION_96	CALL_66
0x400c808	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      3895	sequencer.c	FUNCTION_96	CALL_67
0x400c80f	          0x4889c7	                            mov rdi, rax	      3895	sequencer.c	FUNCTION_96	CALL_67
0x400c812	      0xe800000000	                          call 0x400c817	      3895	sequencer.c	FUNCTION_96	CALL_67
0x400c817	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      3896	sequencer.c	FUNCTION_96	CALL_68
0x400c81e	          0x4889c7	                            mov rdi, rax	      3896	sequencer.c	FUNCTION_96	CALL_68
0x400c821	      0xe800000000	                          call 0x400c826	      3896	sequencer.c	FUNCTION_96	CALL_68
0x400c826	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3898	sequencer.c	FUNCTION_96	CALL_69
0x400c82d	      0xbe01000000	                              mov esi, 1	      3898	sequencer.c	FUNCTION_96	CALL_69
0x400c832	          0x4889c7	                            mov rdi, rax	      3898	sequencer.c	FUNCTION_96	CALL_69
0x400c835	      0xe800000000	                          call 0x400c83a	      3898	sequencer.c	FUNCTION_96	CALL_69
0x400c83a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3899	sequencer.c	FUNCTION_96	CALL_70
0x400c841	      0xbe01000000	                              mov esi, 1	      3899	sequencer.c	FUNCTION_96	CALL_70
0x400c846	          0x4889c7	                            mov rdi, rax	      3899	sequencer.c	FUNCTION_96	CALL_70
0x400c849	      0xe800000000	                          call 0x400c84e	      3899	sequencer.c	FUNCTION_96	CALL_70
0x400c84e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3900	sequencer.c	FUNCTION_96	CALL_71
0x400c855	        0x4883c030	                           add rax, 0x30	      3900	sequencer.c	FUNCTION_96	CALL_71
0x400c859	      0xbe01000000	                              mov esi, 1	      3900	sequencer.c	FUNCTION_96	CALL_71
0x400c85e	          0x4889c7	                            mov rdi, rax	      3900	sequencer.c	FUNCTION_96	CALL_71
0x400c861	      0xe800000000	                          call 0x400c866	      3900	sequencer.c	FUNCTION_96	CALL_71
0x400c866	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3901	sequencer.c	FUNCTION_96	CALL_72
0x400c86d	        0x4883c060	                           add rax, 0x60	      3901	sequencer.c	FUNCTION_96	CALL_72
0x400c871	          0x4889c7	                            mov rdi, rax	      3901	sequencer.c	FUNCTION_96	CALL_72
0x400c874	      0xe800000000	                          call 0x400c879	      3901	sequencer.c	FUNCTION_96	CALL_72
0x400c879	      0xb800000000	                              mov eax, 0	      3903	sequencer.c	FUNCTION_96
0x400c87e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3904	sequencer.c	FUNCTION_96
0x400c882	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3904	sequencer.c	FUNCTION_96
0x400c88b	            0x7405	                            je 0x400c892	      3904	sequencer.c	FUNCTION_96
0x400c88d	      0xe800000000	                          call 0x400c892	      3904	sequencer.c	FUNCTION_96
0x400c892	    0x4881c4a80200	                          add rsp, 0x2a8	      3904	sequencer.c	FUNCTION_96
0x400c899	              0x5b	                                 pop rbx	      3904	sequencer.c	FUNCTION_96
0x400c89a	              0x5d	                                 pop rbp	      3904	sequencer.c	FUNCTION_96
0x400c89b	              0xc3	                                     ret	      3904	sequencer.c	FUNCTION_96
message_is_empty	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	19
0x4002742	              0x55	                                push rbp	       815	sequencer.c	FUNCTION_28
0x4002743	          0x4889e5	                            mov rbp, rsp	       815	sequencer.c	FUNCTION_28
0x4002746	        0x4883ec10	                           sub rsp, 0x10	       815	sequencer.c	FUNCTION_28
0x400274a	        0x48897df8	                mov qword [rbp - 8], rdi	       815	sequencer.c	FUNCTION_28
0x400274e	          0x8975f4	              mov dword [rbp - 0xc], esi	       815	sequencer.c	FUNCTION_28
0x4002751	        0x837df401	                cmp dword [rbp - 0xc], 1	       816	sequencer.c	FUNCTION_28	IF_1
0x4002755	            0x7514	                           jne 0x400276b	       816	sequencer.c	FUNCTION_28	IF_1
0x4002757	        0x488b45f8	                mov rax, qword [rbp - 8]	       816	sequencer.c	FUNCTION_28	IF_1
0x400275b	        0x488b4008	                mov rax, qword [rax + 8]	       816	sequencer.c	FUNCTION_28	IF_1
0x400275f	          0x4885c0	                           test rax, rax	       816	sequencer.c	FUNCTION_28	IF_1
0x4002762	            0x7407	                            je 0x400276b	       816	sequencer.c	FUNCTION_28	IF_1
0x4002764	      0xb800000000	                              mov eax, 0	       817	sequencer.c	FUNCTION_28	IF_1
0x4002769	            0xeb11	                           jmp 0x400277c	       817	sequencer.c	FUNCTION_28	IF_1
0x400276b	        0x488b45f8	                mov rax, qword [rbp - 8]	       818	sequencer.c	FUNCTION_28	CALL_1
0x400276f	      0xbe00000000	                              mov esi, 0	       818	sequencer.c	FUNCTION_28	CALL_1
0x4002774	          0x4889c7	                            mov rdi, rax	       818	sequencer.c	FUNCTION_28	CALL_1
0x4002777	      0xe8bbfeffff	                  call sym.rest_is_empty	       818	sequencer.c	FUNCTION_28	CALL_1
0x400277c	              0xc9	                                   leave	       819	sequencer.c	FUNCTION_28
0x400277d	              0xc3	                                     ret	       819	sequencer.c	FUNCTION_28
sequencer_init_config	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	13
0x4000c9d	              0x55	                                push rbp	       187	sequencer.c	FUNCTION_2
0x4000c9e	          0x4889e5	                            mov rbp, rsp	       187	sequencer.c	FUNCTION_2
0x4000ca1	        0x4883ec10	                           sub rsp, 0x10	       187	sequencer.c	FUNCTION_2
0x4000ca5	        0x48897df8	                mov qword [rbp - 8], rdi	       187	sequencer.c	FUNCTION_2
0x4000ca9	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	sequencer.c	FUNCTION_2
0x4000cad	    0xc74038010000	               mov dword [rax + 0x38], 1	       188	sequencer.c	FUNCTION_2
0x4000cb4	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	sequencer.c	FUNCTION_2	CALL_1
0x4000cb8	          0x4889c6	                            mov rsi, rax	       189	sequencer.c	FUNCTION_2	CALL_1
0x4000cbb	      0xbf00000000	                              mov edi, 0	       189	sequencer.c	FUNCTION_2	CALL_1
0x4000cc0	      0xe800000000	                          call 0x4000cc5	       189	sequencer.c	FUNCTION_2	CALL_1
0x4000cc5	              0x90	                                     nop	       190	sequencer.c	FUNCTION_2
0x4000cc6	              0xc9	                                   leave	       190	sequencer.c	FUNCTION_2
0x4000cc7	              0xc3	                                     ret	       190	sequencer.c	FUNCTION_2
walk_revs_populate_todo	CALL,8:FOR,0:WHILE,1:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	92
0x40068a3	              0x55	                                push rbp	      2164	sequencer.c	FUNCTION_65
0x40068a4	          0x4889e5	                            mov rbp, rsp	      2164	sequencer.c	FUNCTION_65
0x40068a7	              0x53	                                push rbx	      2164	sequencer.c	FUNCTION_65
0x40068a8	        0x4883ec58	                           sub rsp, 0x58	      2164	sequencer.c	FUNCTION_65
0x40068ac	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2164	sequencer.c	FUNCTION_65
0x40068b0	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2164	sequencer.c	FUNCTION_65
0x40068b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2164	sequencer.c	FUNCTION_65
0x40068bd	        0x488945e8	             mov qword [rbp - 0x18], rax	      2164	sequencer.c	FUNCTION_65
0x40068c1	            0x31c0	                            xor eax, eax	      2164	sequencer.c	FUNCTION_65
0x40068c3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2165	sequencer.c	FUNCTION_65
0x40068c7	            0x8b00	                    mov eax, dword [rax]	      2165	sequencer.c	FUNCTION_65
0x40068c9	          0x83f801	                              cmp eax, 1	      2166	sequencer.c	FUNCTION_65
0x40068cc	           0xf95c0	                                setne al	      2166	sequencer.c	FUNCTION_65
0x40068cf	           0xfb6c0	                           movzx eax, al	      2165	sequencer.c	FUNCTION_65
0x40068d2	          0x8945b8	             mov dword [rbp - 0x48], eax	      2165	sequencer.c	FUNCTION_65
0x40068d5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2167	sequencer.c	FUNCTION_65
0x40068d8	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x40068dc	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x40068e2	          0x488b00	                    mov rax, qword [rax]	      2167	sequencer.c	FUNCTION_65
0x40068e5	        0x488945c8	             mov qword [rbp - 0x38], rax	      2167	sequencer.c	FUNCTION_65
0x40068e9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x40068ed	          0x4889c7	                            mov rdi, rax	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x40068f0	      0xe8c6e8ffff	                   call sym.prepare_revs	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x40068f5	            0x85c0	                           test eax, eax	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x40068f7	     0xf84cd000000	                            je 0x40069ca	      2170	sequencer.c	FUNCTION_65	IF_1	CALL_1
0x40068fd	      0xb8ffffffff	                     mov eax, 0xffffffff	      2171	sequencer.c	FUNCTION_65	IF_1
0x4006902	      0xe9ea000000	                           jmp 0x40069f1	      2171	sequencer.c	FUNCTION_65	IF_1
0x4006907	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x400690b	          0x4889c7	                            mov rdi, rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x400690e	      0xe8efeaffff	                call sym.append_new_todo	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4006913	        0x488945d8	             mov qword [rbp - 0x28], rax	      2174	sequencer.c	FUNCTION_65	WHILE_1	CALL_3
0x4006917	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400691b	      0xbe00000000	                              mov esi, 0	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4006920	          0x4889c7	                            mov rdi, rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4006923	      0xe800000000	                          call 0x4006928	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x4006928	        0x488945e0	             mov qword [rbp - 0x20], rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400692c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x4006930	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x4006933	            0x8910	                    mov dword [rax], edx	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x4006935	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x4006939	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x400693d	        0x48895008	                mov qword [rax + 8], rdx	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x4006941	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x4006945	    0x48c740180000	               mov qword [rax + 0x18], 0	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x400694d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x4006951	    0xc74020000000	               mov dword [rax + 0x20], 0	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x4006958	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x400695c	        0x488b5008	                mov rdx, qword [rax + 8]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x4006960	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x4006964	        0x48895028	             mov qword [rax + 0x28], rdx	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x4006968	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400696c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4006970	          0x4889d6	                            mov rsi, rdx	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4006973	          0x4889c7	                            mov rdi, rax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x4006976	      0xe800000000	                          call 0x400697b	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400697b	          0x8945bc	             mov dword [rbp - 0x44], eax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400697e	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006982	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006986	          0x4889c7	                            mov rdi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006989	      0xe850a7ffff	              call sym.short_commit_name	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400698e	          0x4889c6	                            mov rsi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006991	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006995	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x4006998	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400699c	          0x4989d9	                             mov r9, rbx	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400699f	          0x4189c8	                            mov r8d, ecx	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069a2	          0x4889f1	                            mov rcx, rsi	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069a5	      0xbe00000000	                              mov esi, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069aa	          0x4889c7	                            mov rdi, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069ad	      0xb800000000	                              mov eax, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069b2	      0xe800000000	                          call 0x40069b7	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x40069b7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x40069bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x40069bf	          0x4889d6	                            mov rsi, rdx	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x40069c2	          0x4889c7	                            mov rdi, rax	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x40069c5	      0xe800000000	                          call 0x40069ca	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x40069ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069ce	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069d5	          0x4889c7	                            mov rdi, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069d8	      0xe800000000	                          call 0x40069dd	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069dd	        0x488945d0	             mov qword [rbp - 0x30], rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069e1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069e6	     0xf851bffffff	                           jne 0x4006907	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x40069ec	      0xb800000000	                              mov eax, 0	      2189	sequencer.c	FUNCTION_65
0x40069f1	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2190	sequencer.c	FUNCTION_65
0x40069f5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2190	sequencer.c	FUNCTION_65
0x40069fe	            0x7405	                            je 0x4006a05	      2190	sequencer.c	FUNCTION_65
0x4006a00	      0xe800000000	                          call 0x4006a05	      2190	sequencer.c	FUNCTION_65
0x4006a05	        0x4883c458	                           add rsp, 0x58	      2190	sequencer.c	FUNCTION_65
0x4006a09	              0x5b	                                 pop rbx	      2190	sequencer.c	FUNCTION_65
0x4006a0a	              0x5d	                                 pop rbp	      2190	sequencer.c	FUNCTION_65
0x4006a0b	              0xc3	                                     ret	      2190	sequencer.c	FUNCTION_65
flush_rewritten_pending	CALL,11:FOR,0:WHILE,1:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	86
0x4004317	              0x55	                                push rbp	      1457	sequencer.c	FUNCTION_46
0x4004318	          0x4889e5	                            mov rbp, rsp	      1457	sequencer.c	FUNCTION_46
0x400431b	        0x4883ec60	                           sub rsp, 0x60	      1457	sequencer.c	FUNCTION_46
0x400431f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	sequencer.c	FUNCTION_46
0x4004328	        0x488945f8	                mov qword [rbp - 8], rax	      1457	sequencer.c	FUNCTION_46
0x400432c	            0x31c0	                            xor eax, eax	      1457	sequencer.c	FUNCTION_46
0x400432e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1458	sequencer.c	FUNCTION_46
0x4004336	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1458	sequencer.c	FUNCTION_46
0x400433e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1458	sequencer.c	FUNCTION_46
0x4004346	      0xe858c5ffff	  call sym.rebase_path_rewritten_pending	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400434b	          0x4889c1	                            mov rcx, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400434e	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4004352	      0xba52000000	                           mov edx, 0x52	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4004357	          0x4889ce	                            mov rsi, rcx	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400435a	          0x4889c7	                            mov rdi, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400435d	      0xe800000000	                          call 0x4004362	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4004362	          0x4885c0	                           test rax, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4004365	     0xf8ed8000000	                           jle 0x4004443	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400436b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400436f	          0x4889c6	                            mov rsi, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4004372	      0xbf00000000	                              mov edi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4004377	      0xe800000000	                          call 0x400437c	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400437c	            0x85c0	                           test eax, eax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400437e	     0xf85bf000000	                           jne 0x4004443	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4004384	      0xe8ebc4ffff	     call sym.rebase_path_rewritten_list	      1464	sequencer.c	FUNCTION_46	IF_1	CALL_5
0x4004389	      0xbe00000000	                              mov esi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400438e	          0x4889c7	                            mov rdi, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4004391	      0xe800000000	                          call 0x4004396	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4004396	        0x488945b0	             mov qword [rbp - 0x50], rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400439a	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400439f	     0xf849e000000	                            je 0x4004443	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x40043a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	sequencer.c	FUNCTION_46	IF_1
0x40043a9	        0x488945a8	             mov qword [rbp - 0x58], rax	      1465	sequencer.c	FUNCTION_46	IF_1
0x40043ad	            0xeb6d	                           jmp 0x400441c	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043af	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043b3	      0xbe0a000000	                            mov esi, 0xa	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043b8	          0x4889c7	                            mov rdi, rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043bb	      0xe800000000	                          call 0x40043c0	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043c0	        0x488945b8	             mov qword [rbp - 0x48], rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x40043c4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043c8	          0x4889c7	                            mov rdi, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043cb	      0xe800000000	                          call 0x40043d0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043d0	          0x4889c1	                            mov rcx, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043d3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043d7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043db	          0x4829c2	                            sub rdx, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043de	          0x4889d0	                            mov rax, rdx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043e1	            0x89c6	                            mov esi, eax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043e3	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043e7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043eb	          0x4989c8	                             mov r8, rcx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043ee	          0x4889d1	                            mov rcx, rdx	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043f1	            0x89f2	                            mov edx, esi	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043f3	      0xbe00000000	                              mov esi, 0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043f8	          0x4889c7	                            mov rdi, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x40043fb	      0xb800000000	                              mov eax, 0	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4004400	      0xe800000000	                          call 0x4004405	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1	CALL_6
0x4004405	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4004409	           0xfb600	                   movzx eax, byte [rax]	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x400440c	            0x84c0	                             test al, al	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x400440e	            0x7419	                            je 0x4004429	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4004410	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004414	        0x4883c001	                              add rax, 1	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004418	        0x488945a8	             mov qword [rbp - 0x58], rax	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400441c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004420	           0xfb600	                   movzx eax, byte [rax]	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004423	            0x84c0	                             test al, al	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004425	            0x7588	                           jne 0x40043af	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004427	            0xeb01	                           jmp 0x400442a	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4004429	              0x90	                                     nop	      1472	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x400442a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_8
0x400442e	          0x4889c7	                            mov rdi, rax	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_8
0x4004431	      0xe800000000	                          call 0x4004436	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_8
0x4004436	      0xe868c4ffff	  call sym.rebase_path_rewritten_pending	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_10
0x400443b	          0x4889c7	                            mov rdi, rax	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_10
0x400443e	      0xe800000000	                          call 0x4004443	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_10
0x4004443	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1478	sequencer.c	FUNCTION_46	CALL_11
0x4004447	          0x4889c7	                            mov rdi, rax	      1478	sequencer.c	FUNCTION_46	CALL_11
0x400444a	      0xe800000000	                          call 0x400444f	      1478	sequencer.c	FUNCTION_46	CALL_11
0x400444f	              0x90	                                     nop	      1479	sequencer.c	FUNCTION_46
0x4004450	        0x488b45f8	                mov rax, qword [rbp - 8]	      1479	sequencer.c	FUNCTION_46
0x4004454	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	sequencer.c	FUNCTION_46
0x400445d	            0x7405	                            je 0x4004464	      1479	sequencer.c	FUNCTION_46
0x400445f	      0xe800000000	                          call 0x4004464	      1479	sequencer.c	FUNCTION_46
0x4004464	              0xc9	                                   leave	      1479	sequencer.c	FUNCTION_46
0x4004465	              0xc3	                                     ret	      1479	sequencer.c	FUNCTION_46
rewrite_file	CALL,6:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	63
0x400d614	              0x55	                                push rbp	      4173	sequencer.c	FUNCTION_102
0x400d615	          0x4889e5	                            mov rbp, rsp	      4173	sequencer.c	FUNCTION_102
0x400d618	        0x4883ec30	                           sub rsp, 0x30	      4173	sequencer.c	FUNCTION_102
0x400d61c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4173	sequencer.c	FUNCTION_102
0x400d620	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4173	sequencer.c	FUNCTION_102
0x400d624	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4173	sequencer.c	FUNCTION_102
0x400d628	    0xc745f8000000	                  mov dword [rbp - 8], 0	      4174	sequencer.c	FUNCTION_102
0x400d62f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d633	      0xbe01020000	                          mov esi, 0x201	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d638	          0x4889c7	                            mov rdi, rax	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d63b	      0xb800000000	                              mov eax, 0	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d640	      0xe800000000	                          call 0x400d645	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d645	          0x8945fc	                mov dword [rbp - 4], eax	      4175	sequencer.c	FUNCTION_102	CALL_1
0x400d648	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4176	sequencer.c	FUNCTION_102	IF_1
0x400d64c	            0x792b	                           jns 0x400d679	      4176	sequencer.c	FUNCTION_102	IF_1
0x400d64e	      0xbf00000000	                              mov edi, 0	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d653	      0xe84f2dffff	                               call sym.	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d658	          0x4889c2	                            mov rdx, rax	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d65b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d65f	          0x4889c6	                            mov rsi, rax	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d662	          0x4889d7	                            mov rdi, rdx	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d665	      0xb800000000	                              mov eax, 0	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d66a	      0xe800000000	                          call 0x400d66f	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d66f	      0xe8cc29ffff	                    call sym.const_error	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d674	      0xe983000000	                           jmp 0x400d6fc	      4177	sequencer.c	FUNCTION_102	CALL_2
0x400d679	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d67d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d681	          0x8b45fc	                mov eax, dword [rbp - 4]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d684	          0x4889ce	                            mov rsi, rcx	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d687	            0x89c7	                            mov edi, eax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d689	      0xe800000000	                          call 0x400d68e	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d68e	          0x4885c0	                           test rax, rax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d691	            0x7929	                           jns 0x400d6bc	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d693	      0xbf00000000	                              mov edi, 0	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d698	      0xe80a2dffff	                               call sym.	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d69d	          0x4889c2	                            mov rdx, rax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6a4	          0x4889c6	                            mov rsi, rax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6a7	          0x4889d7	                            mov rdi, rdx	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6aa	      0xb800000000	                              mov eax, 0	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6af	      0xe800000000	                          call 0x400d6b4	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6b4	      0xe88729ffff	                    call sym.const_error	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6b9	          0x8945f8	                mov dword [rbp - 8], eax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d6bc	          0x8b45fc	                mov eax, dword [rbp - 4]	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6bf	            0x89c7	                            mov edi, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6c1	      0xe800000000	                          call 0x400d6c6	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6c6	            0x85c0	                           test eax, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6c8	            0x742f	                            je 0x400d6f9	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6ca	        0x837df800	                  cmp dword [rbp - 8], 0	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6ce	            0x7529	                           jne 0x400d6f9	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d6d0	      0xbf00000000	                              mov edi, 0	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6d5	      0xe8cd2cffff	                               call sym.	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6da	          0x4889c2	                            mov rdx, rax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6e1	          0x4889c6	                            mov rsi, rax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6e4	          0x4889d7	                            mov rdi, rdx	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6e7	      0xb800000000	                              mov eax, 0	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6ec	      0xe800000000	                          call 0x400d6f1	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6f1	      0xe84a29ffff	                    call sym.const_error	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6f6	          0x8945f8	                mov dword [rbp - 8], eax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d6f9	          0x8b45f8	                mov eax, dword [rbp - 8]	      4182	sequencer.c	FUNCTION_102
0x400d6fc	              0xc9	                                   leave	      4183	sequencer.c	FUNCTION_102
0x400d6fd	              0xc3	                                     ret	      4183	sequencer.c	FUNCTION_102
_	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	15
0x40003a7	              0x55	                                push rbp	        51	gettext.h	FUNCTION_192
0x40003a8	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_192
0x40003ab	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_192
0x40003af	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_192
0x40003b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_192	IF_1
0x40003b7	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_192	IF_1
0x40003ba	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_192	IF_1
0x40003bc	            0x7507	                           jne 0x40003c5	        52	gettext.h	FUNCTION_192	IF_1
0x40003be	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_192	IF_1
0x40003c3	            0xeb0c	                           jmp 0x40003d1	        53	gettext.h	FUNCTION_192	IF_1
0x40003c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_192
0x40003c9	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_192
0x40003cc	      0xe800000000	                          call 0x40003d1	        54	gettext.h	FUNCTION_192
0x40003d1	              0xc9	                                   leave	        55	gettext.h	FUNCTION_192
0x40003d2	              0xc3	                                     ret	        55	gettext.h	FUNCTION_192
labels_cmp	CALL,2:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	25
0x400b4eb	              0x55	                                push rbp	      3572	sequencer.c	FUNCTION_94
0x400b4ec	          0x4889e5	                            mov rbp, rsp	      3572	sequencer.c	FUNCTION_94
0x400b4ef	        0x4883ec20	                           sub rsp, 0x20	      3572	sequencer.c	FUNCTION_94
0x400b4f3	        0x48897df8	                mov qword [rbp - 8], rdi	      3572	sequencer.c	FUNCTION_94
0x400b4f7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3572	sequencer.c	FUNCTION_94
0x400b4fb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3572	sequencer.c	FUNCTION_94
0x400b4ff	        0x48894de0	             mov qword [rbp - 0x20], rcx	      3572	sequencer.c	FUNCTION_94
0x400b503	      0x48837de000	               cmp qword [rbp - 0x20], 0	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b508	            0x7419	                            je 0x400b523	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b50a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b50e	        0x488d5010	                   lea rdx, [rax + 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b512	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b516	          0x4889c6	                            mov rsi, rax	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b519	          0x4889d7	                            mov rdi, rdx	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b51c	      0xe800000000	                          call 0x400b521	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b521	            0xeb1b	                           jmp 0x400b53e	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b523	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b527	        0x488d5010	                   lea rdx, [rax + 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b52b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b52f	        0x4883c010	                           add rax, 0x10	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b533	          0x4889d6	                            mov rsi, rdx	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b536	          0x4889c7	                            mov rdi, rax	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b539	      0xe800000000	                          call 0x400b53e	      3573	sequencer.c	FUNCTION_94	CALL_2
0x400b53e	              0xc9	                                   leave	      3574	sequencer.c	FUNCTION_94
0x400b53f	              0xc3	                                     ret	      3574	sequencer.c	FUNCTION_94
check_todo_list	CALL,22:FOR,2:WHILE,0:ELSE,0:DO,0:IF,8:SWITCH,0:functions,0	201
0x400d24b	              0x55	                                push rbp	      4091	sequencer.c	FUNCTION_101
0x400d24c	          0x4889e5	                            mov rbp, rsp	      4091	sequencer.c	FUNCTION_101
0x400d24f	            0x4154	                                push r12	      4091	sequencer.c	FUNCTION_101
0x400d251	              0x53	                                push rbx	      4091	sequencer.c	FUNCTION_101
0x400d252	    0x4881ecd00000	                           sub rsp, 0xd0	      4091	sequencer.c	FUNCTION_101
0x400d259	    0x64488b042528	                mov rax, qword fs:[0x28]	      4091	sequencer.c	FUNCTION_101
0x400d262	        0x488945e8	             mov qword [rbp - 0x18], rax	      4091	sequencer.c	FUNCTION_101
0x400d266	            0x31c0	                            xor eax, eax	      4091	sequencer.c	FUNCTION_101
0x400d268	      0xe81fffffff	 call sym.get_missing_commit_check_level	      4092	sequencer.c	FUNCTION_101	CALL_1
0x400d26d	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      4092	sequencer.c	FUNCTION_101	CALL_1
0x400d273	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4093	sequencer.c	FUNCTION_101
0x400d27e	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      4093	sequencer.c	FUNCTION_101
0x400d289	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4093	sequencer.c	FUNCTION_101
0x400d294	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4094	sequencer.c	FUNCTION_101
0x400d298	      0xb800000000	                              mov eax, 0	      4094	sequencer.c	FUNCTION_101
0x400d29d	      0xb90b000000	                            mov ecx, 0xb	      4094	sequencer.c	FUNCTION_101
0x400d2a2	          0x4889d7	                            mov rdi, rdx	      4094	sequencer.c	FUNCTION_101
0x400d2a5	          0xf348ab	              rep stosq qword [rdi], rax	      4094	sequencer.c	FUNCTION_101
0x400d2a8	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      4094	sequencer.c	FUNCTION_101
0x400d2b0	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      4095	sequencer.c	FUNCTION_101
0x400d2bb	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      4095	sequencer.c	FUNCTION_101
0x400d2c6	    0x48c745800000	               mov qword [rbp - 0x80], 0	      4095	sequencer.c	FUNCTION_101
0x400d2ce	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      4096	sequencer.c	FUNCTION_101
0x400d2d8	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      4096	sequencer.c	FUNCTION_101
0x400d2e2	      0xe88833ffff	               call sym.rebase_path_todo	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2e7	          0x4889c2	                            mov rdx, rax	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2ea	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2f1	          0x4889d6	                            mov rsi, rdx	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2f4	          0x4889c7	                            mov rdi, rax	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2f7	      0xe8792fffff	                  call sym.strbuf_addstr	      4098	sequencer.c	FUNCTION_101	CALL_3
0x400d2fc	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d303	        0x488d4590	                   lea rax, [rbp - 0x70]	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d307	          0x4889d6	                            mov rsi, rdx	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d30a	          0x4889c7	                            mov rdi, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d30d	      0xe8d488ffff	      call sym.strbuf_read_file_or_whine	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d312	          0x4885c0	                           test rax, rax	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d315	            0x790f	                           jns 0x400d326	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400d317	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      4100	sequencer.c	FUNCTION_101	IF_1
0x400d321	      0xe980020000	                           jmp 0x400d5a6	      4101	sequencer.c	FUNCTION_101	IF_1
0x400d326	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4104	sequencer.c	FUNCTION_101	CALL_5
0x400d32a	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4103	sequencer.c	FUNCTION_101
0x400d32e	          0x4889d6	                            mov rsi, rdx	      4103	sequencer.c	FUNCTION_101
0x400d331	          0x4889c7	                            mov rdi, rax	      4103	sequencer.c	FUNCTION_101
0x400d334	      0xe8fb85ffff	              call sym.parse_insn_buffer	      4103	sequencer.c	FUNCTION_101
0x400d339	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      4103	sequencer.c	FUNCTION_101
0x400d33f	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4103	sequencer.c	FUNCTION_101
0x400d345	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      4103	sequencer.c	FUNCTION_101
0x400d34b	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      4106	sequencer.c	FUNCTION_101	IF_2
0x400d352	     0xf854e020000	                           jne 0x400d5a6	      4106	sequencer.c	FUNCTION_101	IF_2
0x400d358	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      4106	sequencer.c	FUNCTION_101	IF_2
0x400d35f	     0xf8441020000	                            je 0x400d5a6	      4106	sequencer.c	FUNCTION_101	IF_2
0x400d365	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d36f	            0xeb48	                           jmp 0x400d3b9	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d371	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d375	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d37b	          0x4863d0	                         movsxd rdx, eax	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d37e	          0x4889d0	                            mov rax, rdx	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d381	          0x4801c0	                            add rax, rax	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d384	          0x4801d0	                            add rax, rdx	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d387	        0x48c1e004	                              shl rax, 4	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d38b	          0x4801c8	                            add rax, rcx	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d38e	        0x488b4008	                mov rax, qword [rax + 8]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d392	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d399	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d3a1	            0x740f	                            je 0x400d3b2	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d3a3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d3aa	    0x48c740180100	               mov qword [rax + 0x18], 1	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d3b2	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d3b9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d3bc	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d3c2	            0x7fad	                            jg 0x400d371	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d3c4	        0x488d4590	                   lea rax, [rbp - 0x70]	      4116	sequencer.c	FUNCTION_101	CALL_6
0x400d3c8	          0x4889c7	                            mov rdi, rax	      4116	sequencer.c	FUNCTION_101	CALL_6
0x400d3cb	      0xe8e27fffff	              call sym.todo_list_release	      4116	sequencer.c	FUNCTION_101	CALL_6
0x400d3d0	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4117	sequencer.c	FUNCTION_101	CALL_7
0x400d3d7	      0xbe00000000	                              mov esi, 0	      4117	sequencer.c	FUNCTION_101	CALL_7
0x400d3dc	          0x4889c7	                            mov rdi, rax	      4117	sequencer.c	FUNCTION_101	CALL_7
0x400d3df	      0xe8912effff	                  call sym.strbuf_addstr	      4117	sequencer.c	FUNCTION_101	CALL_7
0x400d3e4	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3eb	        0x488d4590	                   lea rax, [rbp - 0x70]	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3ef	          0x4889d6	                            mov rsi, rdx	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3f2	          0x4889c7	                            mov rdi, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3f5	      0xe8ec87ffff	      call sym.strbuf_read_file_or_whine	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3fa	          0x4885c0	                           test rax, rax	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3fd	            0x790f	                           jns 0x400d40e	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d3ff	    0xc7852cffffff	     mov dword [rbp - 0xd4], 0xffffffff 	      4119	sequencer.c	FUNCTION_101	IF_4
0x400d409	      0xe998010000	                           jmp 0x400d5a6	      4120	sequencer.c	FUNCTION_101	IF_4
0x400d40e	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400d415	          0x4889c7	                            mov rdi, rax	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400d418	      0xe800000000	                          call 0x400d41d	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400d41d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d421	        0x488d5590	                   lea rdx, [rbp - 0x70]	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d425	          0x4889d6	                            mov rsi, rdx	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d428	          0x4889c7	                            mov rdi, rax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d42b	      0xe80485ffff	              call sym.parse_insn_buffer	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d430	            0x85c0	                           test eax, eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d432	           0xf95c0	                                setne al	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d435	           0xfb6c0	                           movzx eax, al	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d438	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d43e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d441	          0x83e801	                              sub eax, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d444	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d44a	      0xe9ab000000	                           jmp 0x400d4fa	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d44f	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d453	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d459	          0x4863d0	                         movsxd rdx, eax	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d45c	          0x4889d0	                            mov rax, rdx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d45f	          0x4801c0	                            add rax, rax	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d462	          0x4801d0	                            add rax, rdx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d465	        0x48c1e004	                              shl rax, 4	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d469	          0x4801c8	                            add rax, rcx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d46c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d473	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400d47a	        0x488b4008	                mov rax, qword [rax + 8]	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400d47e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400d485	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d48d	            0x7464	                            je 0x400d4f3	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d48f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d496	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d49a	          0x4885c0	                           test rax, rax	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d49d	            0x7554	                           jne 0x400d4f3	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d49f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4a6	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4aa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4b1	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4b4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4bb	          0x4889c7	                            mov rdi, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4be	      0xe81b3cffff	              call sym.short_commit_name	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4c3	          0x4889c2	                            mov rdx, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4c6	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4cd	          0x4d89e0	                             mov r8, r12	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4d0	            0x89d9	                            mov ecx, ebx	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4d2	      0xbe00000000	                              mov esi, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4d7	          0x4889c7	                            mov rdi, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4da	      0xb800000000	                              mov eax, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4df	      0xe800000000	                          call 0x400d4e4	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d4e4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d4eb	    0x48c740180100	               mov qword [rax + 0x18], 1	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d4f3	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d4fa	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d501	     0xf8948ffffff	                           jns 0x400d44f	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d507	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4138	sequencer.c	FUNCTION_101	IF_6
0x400d50e	          0x4885c0	                           test rax, rax	      4138	sequencer.c	FUNCTION_101	IF_6
0x400d511	     0xf848e000000	                            je 0x400d5a5	      4138	sequencer.c	FUNCTION_101	IF_6
0x400d517	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 2	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d51e	            0x7516	                           jne 0x400d536	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d520	    0xc7852cffffff	               mov dword [rbp - 0xd4], 1	      4142	sequencer.c	FUNCTION_101	IF_7
0x400d52a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4142	sequencer.c	FUNCTION_101	IF_7
0x400d530	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      4142	sequencer.c	FUNCTION_101	IF_7
0x400d536	      0xbf00000000	                              mov edi, 0	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d53b	      0xe8672effff	                               call sym.	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d540	          0x4889c2	                            mov rdx, rax	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d543	    0x488b05000000	            mov rax, qword [0x0400d54a] 	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d54a	          0x4889d6	                            mov rsi, rdx	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d54d	          0x4889c7	                            mov rdi, rax	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d550	      0xb800000000	                              mov eax, 0	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d555	      0xe800000000	                          call 0x400d55a	      4144	sequencer.c	FUNCTION_101	CALL_13
0x400d55a	    0x488b15000000	            mov rdx, qword [0x0400d561] 	      4149	sequencer.c	FUNCTION_101	CALL_15
0x400d561	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4149	sequencer.c	FUNCTION_101	CALL_15
0x400d565	          0x4889d6	                            mov rsi, rdx	      4149	sequencer.c	FUNCTION_101	CALL_15
0x400d568	          0x4889c7	                            mov rdi, rax	      4149	sequencer.c	FUNCTION_101	CALL_15
0x400d56b	      0xe800000000	                          call 0x400d570	      4149	sequencer.c	FUNCTION_101	CALL_15
0x400d570	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      4150	sequencer.c	FUNCTION_101	CALL_16
0x400d577	          0x4889c7	                            mov rdi, rax	      4150	sequencer.c	FUNCTION_101	CALL_16
0x400d57a	      0xe800000000	                          call 0x400d57f	      4150	sequencer.c	FUNCTION_101	CALL_16
0x400d57f	      0xbf00000000	                              mov edi, 0	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d584	      0xe81e2effff	                               call sym.	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d589	          0x4889c2	                            mov rdx, rax	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d58c	    0x488b05000000	            mov rax, qword [0x0400d593] 	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d593	          0x4889d6	                            mov rsi, rdx	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d596	          0x4889c7	                            mov rdi, rax	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d599	      0xb800000000	                              mov eax, 0	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d59e	      0xe800000000	                          call 0x400d5a3	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d5a3	            0xeb01	                           jmp 0x400d5a6	      4152	sequencer.c	FUNCTION_101	CALL_18
0x400d5a5	              0x90	                                     nop	      4139	sequencer.c	FUNCTION_101	IF_6
0x400d5a6	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      4159	sequencer.c	FUNCTION_101	CALL_19
0x400d5ad	          0x4889c7	                            mov rdi, rax	      4159	sequencer.c	FUNCTION_101	CALL_19
0x400d5b0	      0xe800000000	                          call 0x400d5b5	      4159	sequencer.c	FUNCTION_101	CALL_19
0x400d5b5	        0x488d4590	                   lea rax, [rbp - 0x70]	      4160	sequencer.c	FUNCTION_101	CALL_20
0x400d5b9	          0x4889c7	                            mov rdi, rax	      4160	sequencer.c	FUNCTION_101	CALL_20
0x400d5bc	      0xe8f17dffff	              call sym.todo_list_release	      4160	sequencer.c	FUNCTION_101	CALL_20
0x400d5c1	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      4162	sequencer.c	FUNCTION_101	IF_8
0x400d5c8	            0x7424	                            je 0x400d5ee	      4162	sequencer.c	FUNCTION_101	IF_8
0x400d5ca	      0xbf00000000	                              mov edi, 0	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5cf	      0xe8d32dffff	                               call sym.	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5d4	          0x4889c2	                            mov rdx, rax	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5d7	    0x488b05000000	            mov rax, qword [0x0400d5de] 	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5de	          0x4889d6	                            mov rsi, rdx	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5e1	          0x4889c7	                            mov rdi, rax	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5e4	      0xb800000000	                              mov eax, 0	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5e9	      0xe800000000	                          call 0x400d5ee	      4163	sequencer.c	FUNCTION_101	IF_8	CALL_21
0x400d5ee	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      4169	sequencer.c	FUNCTION_101
0x400d5f4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4170	sequencer.c	FUNCTION_101
0x400d5f8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4170	sequencer.c	FUNCTION_101
0x400d601	            0x7405	                            je 0x400d608	      4170	sequencer.c	FUNCTION_101
0x400d603	      0xe800000000	                          call 0x400d608	      4170	sequencer.c	FUNCTION_101
0x400d608	    0x4881c4d00000	                           add rsp, 0xd0	      4170	sequencer.c	FUNCTION_101
0x400d60f	              0x5b	                                 pop rbx	      4170	sequencer.c	FUNCTION_101
0x400d610	            0x415c	                                 pop r12	      4170	sequencer.c	FUNCTION_101
0x400d612	              0x5d	                                 pop rbp	      4170	sequencer.c	FUNCTION_101
0x400d613	              0xc3	                                     ret	      4170	sequencer.c	FUNCTION_101
peek_command	CALL,1:FOR,1:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	44
0x400908b	              0x55	                                push rbp	      2903	sequencer.c	FUNCTION_84
0x400908c	          0x4889e5	                            mov rbp, rsp	      2903	sequencer.c	FUNCTION_84
0x400908f	        0x4883ec20	                           sub rsp, 0x20	      2903	sequencer.c	FUNCTION_84
0x4009093	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2903	sequencer.c	FUNCTION_84
0x4009097	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2903	sequencer.c	FUNCTION_84
0x400909a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400909e	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090a1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090a4	             0x1d0	                            add eax, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090a6	          0x8945fc	                mov dword [rbp - 4], eax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090a9	            0xeb51	                           jmp 0x40090fc	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090af	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090b6	          0x4863d0	                         movsxd rdx, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090b9	          0x4889d0	                            mov rax, rdx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090bc	          0x4801c0	                            add rax, rax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090bf	          0x4801d0	                            add rax, rdx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090c2	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090c6	          0x4801c8	                            add rax, rcx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090c9	            0x8b00	                    mov eax, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090cb	            0x89c7	                            mov edi, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090cd	      0xe8adabffff	                        call sym.is_noop	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090d2	            0x85c0	                           test eax, eax	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090d4	            0x7522	                           jne 0x40090f8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x40090d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090da	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090de	          0x8b45fc	                mov eax, dword [rbp - 4]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090e1	          0x4863d0	                         movsxd rdx, eax	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090e4	          0x4889d0	                            mov rax, rdx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090e7	          0x4801c0	                            add rax, rax	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090ea	          0x4801d0	                            add rax, rdx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090ed	        0x48c1e004	                              shl rax, 4	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090f1	          0x4801c8	                            add rax, rcx	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090f4	            0x8b00	                    mov eax, dword [rax]	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090f6	            0xeb15	                           jmp 0x400910d	      2908	sequencer.c	FUNCTION_84	FOR_1	IF_1
0x40090f8	        0x8345fc01	                  add dword [rbp - 4], 1	      2906	sequencer.c	FUNCTION_84	FOR_1
0x40090fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009100	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009103	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009106	            0x7fa3	                            jg 0x40090ab	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009108	      0xb8ffffffff	                     mov eax, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x400910d	              0xc9	                                   leave	      2911	sequencer.c	FUNCTION_84
0x400910e	              0xc3	                                     ret	      2911	sequencer.c	FUNCTION_84
commit_staged_changes	CALL,54:FOR,0:WHILE,1:ELSE,1:DO,0:IF,19:SWITCH,0:functions,0	345
0x400a60a	              0x55	                                push rbp	      3253	sequencer.c	FUNCTION_89
0x400a60b	          0x4889e5	                            mov rbp, rsp	      3253	sequencer.c	FUNCTION_89
0x400a60e	              0x53	                                push rbx	      3253	sequencer.c	FUNCTION_89
0x400a60f	    0x4881eca80000	                           sub rsp, 0xa8	      3253	sequencer.c	FUNCTION_89
0x400a616	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3253	sequencer.c	FUNCTION_89
0x400a61d	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3253	sequencer.c	FUNCTION_89
0x400a624	    0x64488b042528	                mov rax, qword fs:[0x28]	      3253	sequencer.c	FUNCTION_89
0x400a62d	        0x488945e8	             mov qword [rbp - 0x18], rax	      3253	sequencer.c	FUNCTION_89
0x400a631	            0x31c0	                            xor eax, eax	      3253	sequencer.c	FUNCTION_89
0x400a633	    0xc78560ffffff	               mov dword [rbp - 0xa0], 3	      3254	sequencer.c	FUNCTION_89
0x400a63d	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      3255	sequencer.c	FUNCTION_89
0x400a647	      0xbf01000000	                              mov edi, 1	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x400a64c	      0xe800000000	                          call 0x400a651	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x400a651	            0x85c0	                           test eax, eax	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x400a653	            0x7421	                            je 0x400a676	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x400a655	      0xbf00000000	                              mov edi, 0	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a65a	      0xe8485dffff	                               call sym.	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a65f	          0x4889c7	                            mov rdi, rax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a662	      0xb800000000	                              mov eax, 0	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a667	      0xe800000000	                          call 0x400a66c	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a66c	      0xe8cf59ffff	                    call sym.const_error	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a671	      0xe95a050000	                           jmp 0x400abd0	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a676	      0xbf00000000	                              mov edi, 0	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a67b	      0xe800000000	                          call 0x400a680	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a680	            0x85c0	                           test eax, eax	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a682	           0xf94c0	                                 sete al	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a685	           0xfb6c0	                           movzx eax, al	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a688	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      3260	sequencer.c	FUNCTION_89	CALL_3
0x400a68e	      0xe88361ffff	              call sym.rebase_path_amend	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x400a693	          0x4889c7	                            mov rdi, rax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x400a696	      0xe800000000	                          call 0x400a69b	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x400a69b	            0x85c0	                           test eax, eax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x400a69d	     0xf84ff030000	                            je 0x400aaa2	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x400a6a3	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x400a6ab	    0x48c745980000	               mov qword [rbp - 0x68], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x400a6b3	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x400a6bb	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6bf	          0x4889c6	                            mov rsi, rax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6c2	      0xbf00000000	                              mov edi, 0	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6c7	      0xe800000000	                          call 0x400a6cc	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6cc	            0x85c0	                           test eax, eax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6ce	            0x7421	                            je 0x400a6f1	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x400a6d0	      0xbf00000000	                              mov edi, 0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6d5	      0xe8cd5cffff	                               call sym.	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6da	          0x4889c7	                            mov rdi, rax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6dd	      0xb800000000	                              mov eax, 0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6e2	      0xe800000000	                          call 0x400a6e7	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6e7	      0xe85459ffff	                    call sym.const_error	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6ec	      0xe9df040000	                           jmp 0x400abd0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a6f1	      0xe82061ffff	              call sym.rebase_path_amend	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a6f6	          0x4889c1	                            mov rcx, rax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a6f9	        0x488d4590	                   lea rax, [rbp - 0x70]	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a6fd	      0xba00000000	                              mov edx, 0	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a702	          0x4889ce	                            mov rsi, rcx	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a705	          0x4889c7	                            mov rdi, rax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a708	      0xe8536dffff	                  call sym.read_oneliner	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a70d	            0x85c0	                           test eax, eax	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a70f	            0x752c	                           jne 0x400a73d	      3268	sequencer.c	FUNCTION_89	IF_2	IF_4	CALL_9
0x400a711	      0xe80061ffff	              call sym.rebase_path_amend	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a716	          0x4889c3	                            mov rbx, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a719	      0xbf00000000	                              mov edi, 0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a71e	      0xe8845cffff	                               call sym.	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a723	          0x4889de	                            mov rsi, rbx	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a726	          0x4889c7	                            mov rdi, rax	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a729	      0xb800000000	                              mov eax, 0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a72e	      0xe800000000	                          call 0x400a733	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a733	      0xe80859ffff	                    call sym.const_error	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a738	      0xe993040000	                           jmp 0x400abd0	      3269	sequencer.c	FUNCTION_89	IF_2	CALL_11
0x400a73d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a741	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a745	          0x4889d6	                            mov rsi, rdx	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a748	          0x4889c7	                            mov rdi, rax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a74b	      0xe800000000	                          call 0x400a750	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a750	            0x85c0	                           test eax, eax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a752	            0x742c	                            je 0x400a780	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a754	      0xe8bd60ffff	              call sym.rebase_path_amend	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a759	          0x4889c3	                            mov rbx, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a75c	      0xbf00000000	                              mov edi, 0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a761	      0xe8415cffff	                               call sym.	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a766	          0x4889de	                            mov rsi, rbx	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a769	          0x4889c7	                            mov rdi, rax	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a76c	      0xb800000000	                              mov eax, 0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a771	      0xe800000000	                          call 0x400a776	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a776	      0xe8c558ffff	                    call sym.const_error	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a77b	      0xe950040000	                           jmp 0x400abd0	      3271	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_13
0x400a780	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a787	            0x7538	                           jne 0x400a7c1	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a789	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a78d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a791	          0x4889d6	                            mov rsi, rdx	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a794	          0x4889c7	                            mov rdi, rax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a797	      0xe8615cffff	                         call sym.oidcmp	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a79c	            0x85c0	                           test eax, eax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a79e	            0x7421	                            je 0x400a7c1	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a7a0	      0xbf00000000	                              mov edi, 0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7a5	      0xe8fd5bffff	                               call sym.	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7aa	          0x4889c7	                            mov rdi, rax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7ad	      0xb800000000	                              mov eax, 0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7b2	      0xe800000000	                          call 0x400a7b7	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7b7	      0xe88458ffff	                    call sym.const_error	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7bc	      0xe90f040000	                           jmp 0x400abd0	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a7c1	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7c8	     0xf84c1020000	                            je 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7ce	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7d2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7d6	          0x4889d6	                            mov rsi, rdx	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7d9	          0x4889c7	                            mov rdi, rax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7dc	      0xe81c5cffff	                         call sym.oidcmp	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7e1	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7e3	     0xf85a6020000	                           jne 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7e9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a7f0	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a7f3	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7f5	     0xf8e94020000	                           jle 0x400aa8f	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a7fb	      0xe84560ffff	        call sym.rebase_path_stopped_sha	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400a800	          0x4889c7	                            mov rdi, rax	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400a803	      0xe800000000	                          call 0x400a808	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400a808	            0x85c0	                           test eax, eax	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a80a	     0xf847f020000	                            je 0x400aa8f	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a810	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a817	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a81b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a822	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a829	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a82d	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a833	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a83a	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a83d	          0x8d50ff	                      lea edx, [rax - 1]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a840	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a847	          0x895078	             mov dword [rax + 0x78], edx	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a84a	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a851	            0x752a	                           jne 0x400a87d	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a853	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a85a	          0x4889c1	                            mov rcx, rax	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a85d	      0xba00000000	                              mov edx, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a862	      0xbedd0c0000	                          mov esi, 0xcdd	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a867	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a86c	      0xb800000000	                              mov eax, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a871	      0xe800000000	                          call 0x400a876	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a876	    0x83ad68ffffff	               sub dword [rbp - 0x98], 1	      3295	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a87d	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a884	            0x741d	                            je 0x400a8a3	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a886	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a88c	            0x4898	                                    cdqe	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a88e	        0x488d50ff	                      lea rdx, [rax - 1]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a892	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a899	          0x4801d0	                            add rax, rdx	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a89c	           0xfb600	                   movzx eax, byte [rax]	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a89f	            0x3c0a	                             cmp al, 0xa	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a8a1	            0x75d3	                           jne 0x400a876	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a8a3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8a9	            0x4898	                                    cdqe	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8ab	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8b2	        0x4883c260	                           add rdx, 0x60	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8b6	          0x4889c6	                            mov rsi, rax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8b9	          0x4889d7	                            mov rdi, rdx	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8bc	      0xe8ac58ffff	                  call sym.strbuf_setlen	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a8c1	      0xe8f25effff	     call sym.rebase_path_current_fixups	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8c6	          0x4889c2	                            mov rdx, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8c9	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8cf	          0x4863f0	                         movsxd rsi, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8d9	      0xb900000000	                              mov ecx, 0	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8de	          0x4889c7	                            mov rdi, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8e1	      0xe8ff69ffff	                  call sym.write_message	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8e6	            0x85c0	                           test eax, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8e8	            0x792c	                           jns 0x400a916	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a8ea	      0xe8c95effff	     call sym.rebase_path_current_fixups	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a8ef	          0x4889c3	                            mov rbx, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a8f2	      0xbf00000000	                              mov edi, 0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a8f7	      0xe8ab5affff	                               call sym.	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a8fc	          0x4889de	                            mov rsi, rbx	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a8ff	          0x4889c7	                            mov rdi, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a902	      0xb800000000	                              mov eax, 0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a907	      0xe800000000	                          call 0x400a90c	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a90c	      0xe82f57ffff	                    call sym.const_error	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a911	      0xe9ba020000	                           jmp 0x400abd0	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x400a916	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a91d	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a920	            0x85c0	                           test eax, eax	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a922	            0x7e79	                           jle 0x400a99d	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a924	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a92b	      0xbe00000000	                              mov esi, 0	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a930	          0x4889c7	                            mov rdi, rax	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a933	      0xe853e7ffff	                   call sym.peek_command	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a938	            0x89c7	                            mov edi, eax	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a93a	      0xe85393ffff	                       call sym.is_fixup	      3314	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	CALL_26
0x400a93f	            0x85c0	                           test eax, eax	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a941	            0x755a	                           jne 0x400a99d	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a943	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a94d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a954	      0xbe00000000	                              mov esi, 0	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a959	          0x4889c7	                            mov rdi, rax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a95c	      0xe800000000	                          call 0x400a961	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a961	            0x85c0	                           test eax, eax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a963	     0xf8525010000	                           jne 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a969	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_28
0x400a970	      0xbe00000000	                              mov esi, 0	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_28
0x400a975	          0x4889c7	                            mov rdi, rax	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_28
0x400a978	      0xe800000000	                          call 0x400a97d	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_28
0x400a97d	          0x4885c0	                           test rax, rax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a980	     0xf8508010000	                           jne 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a986	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a98c	          0x83e0f5	                     and eax, 0xfffffff5	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a98f	          0x83c808	                               or eax, 8	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a992	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      3324	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a998	      0xe9f1000000	                           jmp 0x400aa8e	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a99d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9a4	      0xbe00000000	                              mov esi, 0	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9a9	          0x4889c7	                            mov rdi, rax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9ac	      0xe8dae6ffff	                   call sym.peek_command	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9b1	            0x89c7	                            mov edi, eax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9b3	      0xe8da92ffff	                       call sym.is_fixup	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9b8	            0x85c0	                           test eax, eax	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9ba	     0xf84cf000000	                            je 0x400aa8f	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_30
0x400a9c0	      0xe8955dffff	         call sym.rebase_path_squash_msg	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_31
0x400a9c5	        0x48894580	             mov qword [rbp - 0x80], rax	      3331	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_31
0x400a9c9	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9d0	          0x4889c7	                            mov rdi, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9d3	      0xe8f588ffff	                     call sym.parse_head	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9d8	            0x85c0	                           test eax, eax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9da	            0x7553	                           jne 0x400aa2f	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9dc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_33
0x400a9e3	      0xbe00000000	                              mov esi, 0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9e8	          0x4889c7	                            mov rdi, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9eb	      0xe800000000	                          call 0x400a9f0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9f0	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9f7	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a9ff	            0x742e	                            je 0x400aa2f	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400aa01	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa08	          0x4889c7	                            mov rdi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa0b	      0xe800000000	                          call 0x400aa10	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa10	          0x4889c6	                            mov rsi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa13	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa17	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa1e	      0xb900000000	                              mov ecx, 0	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa23	          0x4889c7	                            mov rdi, rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa26	      0xe8ba68ffff	                  call sym.write_message	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa2b	            0x85c0	                           test eax, eax	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_33
0x400aa2d	            0x7444	                            je 0x400aa73	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_33
0x400aa2f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa36	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa3d	          0x4889d6	                            mov rsi, rdx	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa40	          0x4889c7	                            mov rdi, rax	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa43	      0xe800000000	                          call 0x400aa48	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa48	      0xbf00000000	                              mov edi, 0	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa4d	      0xe85559ffff	                               call sym.	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa52	          0x4889c2	                            mov rdx, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa55	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa59	          0x4889c6	                            mov rsi, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa5c	          0x4889d7	                            mov rdi, rdx	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa5f	      0xb800000000	                              mov eax, 0	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa64	      0xe800000000	                          call 0x400aa69	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa69	      0xe8d255ffff	                    call sym.const_error	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_37
0x400aa6e	      0xe95d010000	                           jmp 0x400abd0	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400aa73	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa7a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa81	          0x4889d6	                            mov rsi, rdx	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa84	          0x4889c7	                            mov rdi, rax	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa87	      0xe800000000	                          call 0x400aa8c	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa8c	            0xeb01	                           jmp 0x400aa8f	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_38
0x400aa8e	              0x90	                                     nop	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400aa8f	        0x488d4590	                   lea rax, [rbp - 0x70]	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_39
0x400aa93	          0x4889c7	                            mov rdi, rax	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_39
0x400aa96	      0xe800000000	                          call 0x400aa9b	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_39
0x400aa9b	    0x838d60ffffff	                or dword [rbp - 0xa0], 4	      3345	sequencer.c	FUNCTION_89	IF_2
0x400aaa2	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3348	sequencer.c	FUNCTION_89	IF_14
0x400aaa9	            0x745d	                            je 0x400ab08	      3348	sequencer.c	FUNCTION_89	IF_14
0x400aaab	      0xe800000000	                          call 0x400aab0	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_40
0x400aab0	        0x48894588	             mov qword [rbp - 0x78], rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_40
0x400aab4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aab8	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aabb	      0xe800000000	                          call 0x400aac0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aac0	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aac2	            0x7431	                            je 0x400aaf5	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aac4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aac8	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aacb	      0xe800000000	                          call 0x400aad0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aad0	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aad2	            0x7421	                            je 0x400aaf5	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_42
0x400aad4	      0xbf00000000	                              mov edi, 0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aad9	      0xe8c958ffff	                               call sym.	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aade	          0x4889c7	                            mov rdi, rax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aae1	      0xb800000000	                              mov eax, 0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aae6	      0xe800000000	                          call 0x400aaeb	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aaeb	      0xe85055ffff	                    call sym.const_error	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aaf0	      0xe9db000000	                           jmp 0x400abd0	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_43
0x400aaf5	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400aafc	            0x750a	                           jne 0x400ab08	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400aafe	      0xb800000000	                              mov eax, 0	      3354	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400ab03	      0xe9c8000000	                           jmp 0x400abd0	      3354	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400ab08	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab0f	            0x750a	                           jne 0x400ab1b	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab11	      0xe8155cffff	            call sym.rebase_path_message	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab16	          0x4889c1	                            mov rcx, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab19	            0xeb05	                           jmp 0x400ab20	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab1b	      0xb900000000	                              mov ecx, 0	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab20	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab26	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab2d	          0x4889c6	                            mov rsi, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab30	          0x4889cf	                            mov rdi, rcx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab33	      0xe88177ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab38	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab3a	            0x741e	                            je 0x400ab5a	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_45
0x400ab3c	      0xbf00000000	                              mov edi, 0	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab41	      0xe86158ffff	                               call sym.	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab46	          0x4889c7	                            mov rdi, rax	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab49	      0xb800000000	                              mov eax, 0	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab4e	      0xe800000000	                          call 0x400ab53	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab53	      0xe8e854ffff	                    call sym.const_error	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab58	            0xeb76	                           jmp 0x400abd0	      3359	sequencer.c	FUNCTION_89	CALL_46
0x400ab5a	      0xe8b75cffff	              call sym.rebase_path_amend	      3360	sequencer.c	FUNCTION_89	CALL_48
0x400ab5f	          0x4889c7	                            mov rdi, rax	      3360	sequencer.c	FUNCTION_89	CALL_48
0x400ab62	      0xe800000000	                          call 0x400ab67	      3360	sequencer.c	FUNCTION_89	CALL_48
0x400ab67	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      3361	sequencer.c	FUNCTION_89	IF_18
0x400ab6e	            0x741a	                            je 0x400ab8a	      3361	sequencer.c	FUNCTION_89	IF_18
0x400ab70	      0xe8145cffff	          call sym.rebase_path_fixup_msg	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_50
0x400ab75	          0x4889c7	                            mov rdi, rax	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_50
0x400ab78	      0xe800000000	                          call 0x400ab7d	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_50
0x400ab7d	      0xe8d85bffff	         call sym.rebase_path_squash_msg	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_52
0x400ab82	          0x4889c7	                            mov rdi, rax	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_52
0x400ab85	      0xe800000000	                          call 0x400ab8a	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_52
0x400ab8a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3365	sequencer.c	FUNCTION_89	IF_19
0x400ab91	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3365	sequencer.c	FUNCTION_89	IF_19
0x400ab94	            0x85c0	                           test eax, eax	      3365	sequencer.c	FUNCTION_89	IF_19
0x400ab96	            0x7e33	                           jle 0x400abcb	      3365	sequencer.c	FUNCTION_89	IF_19
0x400ab98	      0xe81b5cffff	     call sym.rebase_path_current_fixups	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_54
0x400ab9d	          0x4889c7	                            mov rdi, rax	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_54
0x400aba0	      0xe800000000	                          call 0x400aba5	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_54
0x400aba5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3371	sequencer.c	FUNCTION_89	IF_19
0x400abac	        0x4883c060	                           add rax, 0x60	      3371	sequencer.c	FUNCTION_89	IF_19
0x400abb0	      0xbe00000000	                              mov esi, 0	      3371	sequencer.c	FUNCTION_89	IF_19
0x400abb5	          0x4889c7	                            mov rdi, rax	      3371	sequencer.c	FUNCTION_89	IF_19
0x400abb8	      0xe8b055ffff	                  call sym.strbuf_setlen	      3371	sequencer.c	FUNCTION_89	IF_19
0x400abbd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3372	sequencer.c	FUNCTION_89	IF_19
0x400abc4	    0xc74078000000	               mov dword [rax + 0x78], 0	      3372	sequencer.c	FUNCTION_89	IF_19
0x400abcb	      0xb800000000	                              mov eax, 0	      3374	sequencer.c	FUNCTION_89
0x400abd0	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3375	sequencer.c	FUNCTION_89
0x400abd4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3375	sequencer.c	FUNCTION_89
0x400abdd	            0x7405	                            je 0x400abe4	      3375	sequencer.c	FUNCTION_89
0x400abdf	      0xe800000000	                          call 0x400abe4	      3375	sequencer.c	FUNCTION_89
0x400abe4	    0x4881c4a80000	                           add rsp, 0xa8	      3375	sequencer.c	FUNCTION_89
0x400abeb	              0x5b	                                 pop rbx	      3375	sequencer.c	FUNCTION_89
0x400abec	              0x5d	                                 pop rbp	      3375	sequencer.c	FUNCTION_89
0x400abed	              0xc3	                                     ret	      3375	sequencer.c	FUNCTION_89
populate_opts_cb	CALL,22:FOR,0:WHILE,0:ELSE,11:DO,0:IF,12:SWITCH,0:functions,0	263
0x40060eb	              0x55	                                push rbp	      2043	sequencer.c	FUNCTION_62
0x40060ec	          0x4889e5	                            mov rbp, rsp	      2043	sequencer.c	FUNCTION_62
0x40060ef	              0x53	                                push rbx	      2043	sequencer.c	FUNCTION_62
0x40060f0	        0x4883ec48	                           sub rsp, 0x48	      2043	sequencer.c	FUNCTION_62
0x40060f4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2043	sequencer.c	FUNCTION_62
0x40060f8	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2043	sequencer.c	FUNCTION_62
0x40060fc	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2043	sequencer.c	FUNCTION_62
0x4006100	    0x64488b042528	                mov rax, qword fs:[0x28]	      2043	sequencer.c	FUNCTION_62
0x4006109	        0x488945e8	             mov qword [rbp - 0x18], rax	      2043	sequencer.c	FUNCTION_62
0x400610d	            0x31c0	                            xor eax, eax	      2043	sequencer.c	FUNCTION_62
0x400610f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2044	sequencer.c	FUNCTION_62
0x4006113	        0x488945e0	             mov qword [rbp - 0x20], rax	      2044	sequencer.c	FUNCTION_62
0x4006117	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2045	sequencer.c	FUNCTION_62
0x400611e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2047	sequencer.c	FUNCTION_62	IF_1
0x4006123	            0x750c	                           jne 0x4006131	      2047	sequencer.c	FUNCTION_62	IF_1
0x4006125	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2048	sequencer.c	FUNCTION_62	IF_1
0x400612c	      0xe935030000	                           jmp 0x4006466	      2048	sequencer.c	FUNCTION_62	IF_1
0x4006131	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x4006135	      0xbe00000000	                              mov esi, 0	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x400613a	          0x4889c7	                            mov rdi, rax	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x400613d	      0xe800000000	                          call 0x4006142	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x4006142	            0x85c0	                           test eax, eax	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x4006144	            0x7525	                           jne 0x400616b	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2	CALL_1
0x4006146	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400614a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400614e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4006152	          0x4889ce	                            mov rsi, rcx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4006155	          0x4889c7	                            mov rdi, rax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4006158	      0xe800000000	                          call 0x400615d	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400615d	            0x89c2	                            mov edx, eax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400615f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4006163	          0x89500c	              mov dword [rax + 0xc], edx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4006166	      0xe9fb020000	                           jmp 0x4006466	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400616b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x400616f	      0xbe00000000	                              mov esi, 0	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x4006174	          0x4889c7	                            mov rdi, rax	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x4006177	      0xe800000000	                          call 0x400617c	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x400617c	            0x85c0	                           test eax, eax	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x400617e	            0x7525	                           jne 0x40061a5	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3	CALL_3
0x4006180	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4006184	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4006188	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400618c	          0x4889ce	                            mov rsi, rcx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400618f	          0x4889c7	                            mov rdi, rax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4006192	      0xe800000000	                          call 0x4006197	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4006197	            0x89c2	                            mov edx, eax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4006199	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400619d	          0x895004	                mov dword [rax + 4], edx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40061a0	      0xe9c1020000	                           jmp 0x4006466	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40061a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061a9	      0xbe00000000	                              mov esi, 0	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061ae	          0x4889c7	                            mov rdi, rax	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061b1	      0xe800000000	                          call 0x40061b6	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061b6	            0x85c0	                           test eax, eax	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061b8	            0x7525	                           jne 0x40061df	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4	CALL_5
0x40061ba	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061be	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061c6	          0x4889ce	                            mov rsi, rcx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061c9	          0x4889c7	                            mov rdi, rax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061cc	      0xe800000000	                          call 0x40061d1	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061d1	            0x89c2	                            mov edx, eax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061d7	          0x895010	             mov dword [rax + 0x10], edx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061da	      0xe987020000	                           jmp 0x4006466	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x40061df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061e3	      0xbe00000000	                              mov esi, 0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061e8	          0x4889c7	                            mov rdi, rax	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061eb	      0xe800000000	                          call 0x40061f0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061f0	            0x85c0	                           test eax, eax	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061f2	            0x7525	                           jne 0x4006219	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5	CALL_7
0x40061f4	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x40061f8	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x40061fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006200	          0x4889ce	                            mov rsi, rcx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006203	          0x4889c7	                            mov rdi, rax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006206	      0xe800000000	                          call 0x400620b	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400620b	            0x89c2	                            mov edx, eax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400620d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006211	          0x895008	                mov dword [rax + 8], edx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006214	      0xe94d020000	                           jmp 0x4006466	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4006219	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x400621d	      0xbe00000000	                              mov esi, 0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x4006222	          0x4889c7	                            mov rdi, rax	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x4006225	      0xe800000000	                          call 0x400622a	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x400622a	            0x85c0	                           test eax, eax	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x400622c	            0x7525	                           jne 0x4006253	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6	CALL_9
0x400622e	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006232	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006236	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400623a	          0x4889ce	                            mov rsi, rcx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400623d	          0x4889c7	                            mov rdi, rax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006240	      0xe800000000	                          call 0x4006245	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006245	            0x89c2	                            mov edx, eax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006247	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400624b	          0x895014	             mov dword [rax + 0x14], edx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400624e	      0xe913020000	                           jmp 0x4006466	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4006253	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x4006257	      0xbe00000000	                              mov esi, 0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x400625c	          0x4889c7	                            mov rdi, rax	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x400625f	      0xe800000000	                          call 0x4006264	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x4006264	            0x85c0	                           test eax, eax	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x4006266	            0x7521	                           jne 0x4006289	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7	CALL_11
0x4006268	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400626c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006270	          0x4889d6	                            mov rsi, rdx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006273	          0x4889c7	                            mov rdi, rax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006276	      0xe800000000	                          call 0x400627b	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400627b	            0x89c2	                            mov edx, eax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400627d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006281	          0x89502c	             mov dword [rax + 0x2c], edx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006284	      0xe9dd010000	                           jmp 0x4006466	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4006289	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x400628d	      0xbe00000000	                              mov esi, 0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x4006292	          0x4889c7	                            mov rdi, rax	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x4006295	      0xe800000000	                          call 0x400629a	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x400629a	            0x85c0	                           test eax, eax	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x400629c	            0x7520	                           jne 0x40062be	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8	CALL_13
0x400629e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062a2	        0x488d4840	                   lea rcx, [rax + 0x40]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062a6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062ae	          0x4889c6	                            mov rsi, rax	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062b1	          0x4889cf	                            mov rdi, rcx	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062b4	      0xe8d8fdffff	          call sym.git_config_string_dup	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062b9	      0xe9a8010000	                           jmp 0x4006466	      2062	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40062be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062c2	      0xbe00000000	                              mov esi, 0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062c7	          0x4889c7	                            mov rdi, rax	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062ca	      0xe800000000	                          call 0x40062cf	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062cf	            0x85c0	                           test eax, eax	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062d1	            0x7520	                           jne 0x40062f3	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9	CALL_15
0x40062d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062d7	        0x488d4830	                   lea rcx, [rax + 0x30]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062db	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062e3	          0x4889c6	                            mov rsi, rax	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062e6	          0x4889cf	                            mov rdi, rcx	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062e9	      0xe8a3fdffff	          call sym.git_config_string_dup	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062ee	      0xe973010000	                           jmp 0x4006466	      2064	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40062f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x40062f7	      0xbe00000000	                              mov esi, 0	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x40062fc	          0x4889c7	                            mov rdi, rax	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x40062ff	      0xe800000000	                          call 0x4006304	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x4006304	            0x85c0	                           test eax, eax	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x4006306	     0xf85ed000000	                           jne 0x40063f9	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_17
0x400630c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006310	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006314	        0x488d5001	                      lea rdx, [rax + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006318	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400631c	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006320	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006323	     0xf869b000000	                           jbe 0x40063c4	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006329	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400632d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006331	          0x4889d0	                            mov rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006334	          0x4801c0	                            add rax, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006337	          0x4801d0	                            add rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400633a	        0x4883c030	                           add rax, 0x30	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400633e	          0x48d1e8	                              shr rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006341	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006344	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006348	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400634c	        0x4883c001	                              add rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006350	          0x4839c2	                            cmp rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006353	            0x7316	                           jae 0x400636b	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006355	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006359	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400635d	        0x488d5001	                      lea rdx, [rax + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006361	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006365	        0x48895058	             mov qword [rax + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006369	            0xeb23	                           jmp 0x400638e	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400636b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400636f	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006373	          0x4889d0	                            mov rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006376	          0x4801c0	                            add rax, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006379	          0x4801d0	                            add rax, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400637c	        0x4883c030	                           add rax, 0x30	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006380	          0x48d1e8	                              shr rax, 1	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006383	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006386	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400638a	        0x48895058	             mov qword [rax + 0x58], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400638e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006392	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006396	          0x4889c6	                            mov rsi, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4006399	      0xbf08000000	                              mov edi, 8	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400639e	      0xe8429dffff	                        call sym.st_mult	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063a3	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063aa	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063ae	          0x4889d6	                            mov rsi, rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063b1	          0x4889c7	                            mov rdi, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063b4	      0xe800000000	                          call 0x40063b9	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063b9	          0x4889c2	                            mov rdx, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063c0	        0x48895048	             mov qword [rax + 0x48], rdx	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40063c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063c8	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063d0	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063d4	        0x488d4801	                      lea rcx, [rax + 1]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063d8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063dc	        0x48894a50	             mov qword [rdx + 0x50], rcx	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063e0	        0x48c1e003	                              shl rax, 3	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063e4	        0x488d1c06	                    lea rbx, [rsi + rax]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063ec	          0x4889c7	                            mov rdi, rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063ef	      0xe800000000	                          call 0x40063f4	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063f4	          0x488903	                    mov qword [rbx], rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063f7	            0xeb6d	                           jmp 0x4006466	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_18
0x40063f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x40063fd	      0xbe00000000	                              mov esi, 0	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x4006402	          0x4889c7	                            mov rdi, rax	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x4006405	      0xe800000000	                          call 0x400640a	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x400640a	            0x85c0	                           test eax, eax	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x400640c	            0x7530	                           jne 0x400643e	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_19
0x400640e	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x4006412	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x4006416	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x400641a	          0x4889ce	                            mov rsi, rcx	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x400641d	          0x4889c7	                            mov rdi, rax	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x4006420	      0xe800000000	                          call 0x4006425	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_20
0x4006425	            0x85c0	                           test eax, eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4006427	            0x7407	                            je 0x4006430	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4006429	      0xba01000000	                              mov edx, 1	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400642e	            0xeb05	                           jmp 0x4006435	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4006430	      0xba02000000	                              mov edx, 2	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4006435	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4006439	          0x895018	             mov dword [rax + 0x18], edx	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400643c	            0xeb28	                           jmp 0x4006466	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400643e	      0xbf00000000	                              mov edi, 0	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006443	      0xe85f9fffff	                               call sym.	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006448	          0x4889c2	                            mov rdx, rax	      2073	sequencer.c	FUNCTION_62	CALL_21
0x400644b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2073	sequencer.c	FUNCTION_62	CALL_21
0x400644f	          0x4889c6	                            mov rsi, rax	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006452	          0x4889d7	                            mov rdi, rdx	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006455	      0xb800000000	                              mov eax, 0	      2073	sequencer.c	FUNCTION_62	CALL_21
0x400645a	      0xe800000000	                          call 0x400645f	      2073	sequencer.c	FUNCTION_62	CALL_21
0x400645f	      0xe8dc9bffff	                    call sym.const_error	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006464	            0xeb38	                           jmp 0x400649e	      2073	sequencer.c	FUNCTION_62	CALL_21
0x4006466	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2075	sequencer.c	FUNCTION_62	IF_12
0x4006469	            0x85c0	                           test eax, eax	      2075	sequencer.c	FUNCTION_62	IF_12
0x400646b	            0x752c	                           jne 0x4006499	      2075	sequencer.c	FUNCTION_62	IF_12
0x400646d	      0xbf00000000	                              mov edi, 0	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006472	      0xe8309fffff	                               call sym.	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006477	          0x4889c1	                            mov rcx, rax	      2076	sequencer.c	FUNCTION_62	CALL_22
0x400647a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2076	sequencer.c	FUNCTION_62	CALL_22
0x400647e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006482	          0x4889c6	                            mov rsi, rax	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006485	          0x4889cf	                            mov rdi, rcx	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006488	      0xb800000000	                              mov eax, 0	      2076	sequencer.c	FUNCTION_62	CALL_22
0x400648d	      0xe800000000	                          call 0x4006492	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006492	      0xe8a99bffff	                    call sym.const_error	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006497	            0xeb05	                           jmp 0x400649e	      2076	sequencer.c	FUNCTION_62	CALL_22
0x4006499	      0xb800000000	                              mov eax, 0	      2078	sequencer.c	FUNCTION_62
0x400649e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2079	sequencer.c	FUNCTION_62
0x40064a2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2079	sequencer.c	FUNCTION_62
0x40064ab	            0x7405	                            je 0x40064b2	      2079	sequencer.c	FUNCTION_62
0x40064ad	      0xe800000000	                          call 0x40064b2	      2079	sequencer.c	FUNCTION_62
0x40064b2	        0x4883c448	                           add rsp, 0x48	      2079	sequencer.c	FUNCTION_62
0x40064b6	              0x5b	                                 pop rbx	      2079	sequencer.c	FUNCTION_62
0x40064b7	              0x5d	                                 pop rbp	      2079	sequencer.c	FUNCTION_62
0x40064b8	              0xc3	                                     ret	      2079	sequencer.c	FUNCTION_62
get_missing_commit_check_level	CALL,6:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:SWITCH,0:functions,0	53
0x400d18c	              0x55	                                push rbp	      4069	sequencer.c	FUNCTION_100
0x400d18d	          0x4889e5	                            mov rbp, rsp	      4069	sequencer.c	FUNCTION_100
0x400d190	              0x53	                                push rbx	      4069	sequencer.c	FUNCTION_100
0x400d191	        0x4883ec18	                           sub rsp, 0x18	      4069	sequencer.c	FUNCTION_100
0x400d195	    0x64488b042528	                mov rax, qword fs:[0x28]	      4069	sequencer.c	FUNCTION_100
0x400d19e	        0x488945e8	             mov qword [rbp - 0x18], rax	      4069	sequencer.c	FUNCTION_100
0x400d1a2	            0x31c0	                            xor eax, eax	      4069	sequencer.c	FUNCTION_100
0x400d1a4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1a8	          0x4889c6	                            mov rsi, rax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1ab	      0xbf00000000	                              mov edi, 0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1b0	      0xe800000000	                          call 0x400d1b5	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1b5	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1b7	            0x7515	                           jne 0x400d1ce	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400d1bd	          0x4889c6	                            mov rsi, rax	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400d1c0	      0xbf00000000	                              mov edi, 0	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400d1c5	      0xe800000000	                          call 0x400d1ca	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400d1ca	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1cc	            0x7507	                           jne 0x400d1d5	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400d1ce	      0xb800000000	                              mov eax, 0	      4074	sequencer.c	FUNCTION_100	IF_1
0x400d1d3	            0xeb5b	                           jmp 0x400d230	      4074	sequencer.c	FUNCTION_100	IF_1
0x400d1d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1d9	          0x4889c6	                            mov rsi, rax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1dc	      0xbf00000000	                              mov edi, 0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1e1	      0xe800000000	                          call 0x400d1e6	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1e6	            0x85c0	                           test eax, eax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1e8	            0x7507	                           jne 0x400d1f1	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d1ea	      0xb801000000	                              mov eax, 1	      4076	sequencer.c	FUNCTION_100	IF_2
0x400d1ef	            0xeb3f	                           jmp 0x400d230	      4076	sequencer.c	FUNCTION_100	IF_2
0x400d1f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d1f5	          0x4889c6	                            mov rsi, rax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d1f8	      0xbf00000000	                              mov edi, 0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d1fd	      0xe800000000	                          call 0x400d202	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d202	            0x85c0	                           test eax, eax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d204	            0x7507	                           jne 0x400d20d	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400d206	      0xb802000000	                              mov eax, 2	      4078	sequencer.c	FUNCTION_100	IF_3
0x400d20b	            0xeb23	                           jmp 0x400d230	      4078	sequencer.c	FUNCTION_100	IF_3
0x400d20d	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d211	      0xbf00000000	                              mov edi, 0	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d216	      0xe88c31ffff	                               call sym.	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d21b	          0x4889de	                            mov rsi, rbx	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d21e	          0x4889c7	                            mov rdi, rax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d221	      0xb800000000	                              mov eax, 0	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d226	      0xe800000000	                          call 0x400d22b	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400d22b	      0xb800000000	                              mov eax, 0	      4081	sequencer.c	FUNCTION_100
0x400d230	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4082	sequencer.c	FUNCTION_100
0x400d234	    0x644833142528	                xor rdx, qword fs:[0x28]	      4082	sequencer.c	FUNCTION_100
0x400d23d	            0x7405	                            je 0x400d244	      4082	sequencer.c	FUNCTION_100
0x400d23f	      0xe800000000	                          call 0x400d244	      4082	sequencer.c	FUNCTION_100
0x400d244	        0x4883c418	                           add rsp, 0x18	      4082	sequencer.c	FUNCTION_100
0x400d248	              0x5b	                                 pop rbx	      4082	sequencer.c	FUNCTION_100
0x400d249	              0x5d	                                 pop rbp	      4082	sequencer.c	FUNCTION_100
0x400d24a	              0xc3	                                     ret	      4082	sequencer.c	FUNCTION_100
do_exec	CALL,12:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:SWITCH,0:functions,0	102
0x4007b0e	              0x55	                                push rbp	      2500	sequencer.c	FUNCTION_78
0x4007b0f	          0x4889e5	                            mov rbp, rsp	      2500	sequencer.c	FUNCTION_78
0x4007b12	              0x53	                                push rbx	      2500	sequencer.c	FUNCTION_78
0x4007b13	        0x4883ec58	                           sub rsp, 0x58	      2500	sequencer.c	FUNCTION_78
0x4007b17	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2500	sequencer.c	FUNCTION_78
0x4007b1b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2500	sequencer.c	FUNCTION_78
0x4007b24	        0x488945e8	             mov qword [rbp - 0x18], rax	      2500	sequencer.c	FUNCTION_78
0x4007b28	            0x31c0	                            xor eax, eax	      2500	sequencer.c	FUNCTION_78
0x4007b2a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2501	sequencer.c	FUNCTION_78
0x4007b32	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2501	sequencer.c	FUNCTION_78
0x4007b39	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2501	sequencer.c	FUNCTION_78
0x4007b40	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2502	sequencer.c	FUNCTION_78
0x4007b48	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2502	sequencer.c	FUNCTION_78
0x4007b50	    0x488b05000000	            mov rax, qword [0x04007b57] 	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b57	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b5b	      0xbe00000000	                              mov esi, 0	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b60	          0x4889c7	                            mov rdi, rax	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b63	      0xb800000000	                              mov eax, 0	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b68	      0xe800000000	                          call 0x4007b6d	      2505	sequencer.c	FUNCTION_78	CALL_1
0x4007b6d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2506	sequencer.c	FUNCTION_78
0x4007b71	        0x488945d0	             mov qword [rbp - 0x30], rax	      2506	sequencer.c	FUNCTION_78
0x4007b75	      0xe800000000	                          call 0x4007b7a	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b7a	          0x4889c7	                            mov rdi, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b7d	      0xe800000000	                          call 0x4007b82	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b82	          0x4889c2	                            mov rdx, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b85	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b89	      0xbe00000000	                              mov esi, 0	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b8e	          0x4889c7	                            mov rdi, rax	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b91	      0xb800000000	                              mov eax, 0	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b96	      0xe800000000	                          call 0x4007b9b	      2507	sequencer.c	FUNCTION_78	CALL_4
0x4007b9b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2509	sequencer.c	FUNCTION_78
0x4007b9f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007ba3	          0x4889d1	                            mov rcx, rdx	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007ba6	      0xba00000000	                              mov edx, 0	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007bab	      0xbe10000000	                           mov esi, 0x10	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007bb0	          0x4889c7	                            mov rdi, rax	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007bb3	      0xe800000000	                          call 0x4007bb8	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007bb8	          0x8945b8	             mov dword [rbp - 0x48], eax	      2508	sequencer.c	FUNCTION_78	CALL_5
0x4007bbb	      0xbf00000000	                              mov edi, 0	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bc0	      0xe800000000	                          call 0x4007bc5	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bc5	            0x85c0	                           test eax, eax	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bc7	            0x780e	                            js 0x4007bd7	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bc9	      0xbf00000000	                              mov edi, 0	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bce	      0xe800000000	                          call 0x4007bd3	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bd3	            0x85c0	                           test eax, eax	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bd5	            0x7921	                           jns 0x4007bf8	      2512	sequencer.c	FUNCTION_78	IF_1
0x4007bd7	      0xbf00000000	                              mov edi, 0	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007bdc	      0xe8c687ffff	                               call sym.	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007be1	          0x4889c7	                            mov rdi, rax	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007be4	      0xb800000000	                              mov eax, 0	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007be9	      0xe800000000	                          call 0x4007bee	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007bee	      0xe84d84ffff	                    call sym.const_error	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007bf3	      0xe9a4000000	                           jmp 0x4007c9c	      2513	sequencer.c	FUNCTION_78	CALL_6
0x4007bf8	      0xb901000000	                              mov ecx, 1	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007bfd	      0xba01000000	                              mov edx, 1	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007c02	      0xbe00000000	                              mov esi, 0	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007c07	      0xbf00000000	                              mov edi, 0	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007c0c	      0xe800000000	                          call 0x4007c11	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007c11	          0x8945bc	             mov dword [rbp - 0x44], eax	      2515	sequencer.c	FUNCTION_78	CALL_7
0x4007c14	        0x837db800	               cmp dword [rbp - 0x48], 0	      2517	sequencer.c	FUNCTION_78	IF_2
0x4007c18	            0x7445	                            je 0x4007c5f	      2517	sequencer.c	FUNCTION_78	IF_2
0x4007c1a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c1e	            0x7407	                            je 0x4007c27	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c20	      0xbb00000000	                              mov ebx, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c25	            0xeb05	                           jmp 0x4007c2c	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c27	      0xbb00000000	                              mov ebx, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c2c	      0xbf00000000	                              mov edi, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c31	      0xe87187ffff	                               call sym.	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c36	          0x4889c1	                            mov rcx, rax	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c39	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c3d	          0x4889da	                            mov rdx, rbx	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c40	          0x4889c6	                            mov rsi, rax	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c43	          0x4889cf	                            mov rdi, rcx	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c46	      0xb800000000	                              mov eax, 0	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c4b	      0xe800000000	                          call 0x4007c50	      2518	sequencer.c	FUNCTION_78	IF_2	CALL_9
0x4007c50	        0x837db87f	           cmp dword [rbp - 0x48], 0x7f 	      2526	sequencer.c	FUNCTION_78	IF_2	IF_3
0x4007c54	            0x7537	                           jne 0x4007c8d	      2526	sequencer.c	FUNCTION_78	IF_2	IF_3
0x4007c56	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2528	sequencer.c	FUNCTION_78	IF_2	IF_3
0x4007c5d	            0xeb2e	                           jmp 0x4007c8d	      2528	sequencer.c	FUNCTION_78	IF_2	IF_3
0x4007c5f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2529	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x4007c63	            0x7428	                            je 0x4007c8d	      2529	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x4007c65	      0xbf00000000	                              mov edi, 0	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c6a	      0xe83887ffff	                               call sym.	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c6f	          0x4889c2	                            mov rdx, rax	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c76	          0x4889c6	                            mov rsi, rax	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c79	          0x4889d7	                            mov rdi, rdx	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c7c	      0xb800000000	                              mov eax, 0	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c81	      0xe800000000	                          call 0x4007c86	      2530	sequencer.c	FUNCTION_78	ELSE_1	IF_4	CALL_11
0x4007c86	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      2536	sequencer.c	FUNCTION_78	ELSE_1	IF_4
0x4007c8d	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2539	sequencer.c	FUNCTION_78	CALL_12
0x4007c91	          0x4889c7	                            mov rdi, rax	      2539	sequencer.c	FUNCTION_78	CALL_12
0x4007c94	      0xe800000000	                          call 0x4007c99	      2539	sequencer.c	FUNCTION_78	CALL_12
0x4007c99	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2541	sequencer.c	FUNCTION_78
0x4007c9c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2542	sequencer.c	FUNCTION_78
0x4007ca0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2542	sequencer.c	FUNCTION_78
0x4007ca9	            0x7405	                            je 0x4007cb0	      2542	sequencer.c	FUNCTION_78
0x4007cab	      0xe800000000	                          call 0x4007cb0	      2542	sequencer.c	FUNCTION_78
0x4007cb0	        0x4883c458	                           add rsp, 0x58	      2542	sequencer.c	FUNCTION_78
0x4007cb4	              0x5b	                                 pop rbx	      2542	sequencer.c	FUNCTION_78
0x4007cb5	              0x5d	                                 pop rbp	      2542	sequencer.c	FUNCTION_78
0x4007cb6	              0xc3	                                     ret	      2542	sequencer.c	FUNCTION_78
get_item_line	CALL,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	19
0x4005b6f	              0x55	                                push rbp	      1942	sequencer.c	FUNCTION_57
0x4005b70	          0x4889e5	                            mov rbp, rsp	      1942	sequencer.c	FUNCTION_57
0x4005b73	              0x53	                                push rbx	      1942	sequencer.c	FUNCTION_57
0x4005b74	        0x4883ec10	                           sub rsp, 0x10	      1942	sequencer.c	FUNCTION_57
0x4005b78	        0x48897df0	             mov qword [rbp - 0x10], rdi	      1942	sequencer.c	FUNCTION_57
0x4005b7c	          0x8975ec	             mov dword [rbp - 0x14], esi	      1942	sequencer.c	FUNCTION_57
0x4005b7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b83	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b87	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b8e	            0x89d6	                            mov esi, edx	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b90	          0x4889c7	                            mov rdi, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b93	      0xe892ffffff	           call sym.get_item_line_offset	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b98	            0x4898	                                    cdqe	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b9a	          0x4801d8	                            add rax, rbx	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4005b9d	        0x4883c410	                           add rsp, 0x10	      1944	sequencer.c	FUNCTION_57
0x4005ba1	              0x5b	                                 pop rbx	      1944	sequencer.c	FUNCTION_57
0x4005ba2	              0x5d	                                 pop rbp	      1944	sequencer.c	FUNCTION_57
0x4005ba3	              0xc3	                                     ret	      1944	sequencer.c	FUNCTION_57
do_pick_commit	CALL,95:FOR,1:WHILE,0:ELSE,12:DO,0:IF,38:SWITCH,0:functions,0	725
0x40044db	              0x55	                                push rbp	      1497	sequencer.c	FUNCTION_48
0x40044dc	          0x4889e5	                            mov rbp, rsp	      1497	sequencer.c	FUNCTION_48
0x40044df	            0x4154	                                push r12	      1497	sequencer.c	FUNCTION_48
0x40044e1	              0x53	                                push rbx	      1497	sequencer.c	FUNCTION_48
0x40044e2	    0x4881ecf00000	                           sub rsp, 0xf0	      1497	sequencer.c	FUNCTION_48
0x40044e9	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      1497	sequencer.c	FUNCTION_48
0x40044ef	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      1497	sequencer.c	FUNCTION_48
0x40044f6	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	      1497	sequencer.c	FUNCTION_48
0x40044fd	    0x898d18ffffff	             mov dword [rbp - 0xe8], ecx	      1497	sequencer.c	FUNCTION_48
0x4004503	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	sequencer.c	FUNCTION_48
0x400450c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1497	sequencer.c	FUNCTION_48
0x4004510	            0x31c0	                            xor eax, eax	      1497	sequencer.c	FUNCTION_48
0x4004512	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1498	sequencer.c	FUNCTION_48
0x4004519	          0x8b4004	                mov eax, dword [rax + 4]	      1498	sequencer.c	FUNCTION_48
0x400451c	            0x85c0	                           test eax, eax	      1498	sequencer.c	FUNCTION_48
0x400451e	            0x7407	                            je 0x4004527	      1498	sequencer.c	FUNCTION_48
0x4004520	      0xb802000000	                              mov eax, 2	      1498	sequencer.c	FUNCTION_48
0x4004525	            0xeb05	                           jmp 0x400452c	      1498	sequencer.c	FUNCTION_48
0x4004527	      0xb800000000	                              mov eax, 0	      1498	sequencer.c	FUNCTION_48
0x400452c	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	      1498	sequencer.c	FUNCTION_48
0x4004532	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004539	          0x8b4004	                mov eax, dword [rax + 4]	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400453c	            0x85c0	                           test eax, eax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400453e	            0x7507	                           jne 0x4004547	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004540	      0xe800000000	                          call 0x4004545	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004545	            0xeb05	                           jmp 0x400454c	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004547	      0xb800000000	                              mov eax, 0	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400454c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004553	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1503	sequencer.c	FUNCTION_48
0x400455e	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1504	sequencer.c	FUNCTION_48
0x4004566	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1504	sequencer.c	FUNCTION_48
0x400456e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1504	sequencer.c	FUNCTION_48
0x4004576	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1504	sequencer.c	FUNCTION_48
0x400457e	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1505	sequencer.c	FUNCTION_48
0x4004586	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1505	sequencer.c	FUNCTION_48
0x400458e	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1505	sequencer.c	FUNCTION_48
0x4004596	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      1506	sequencer.c	FUNCTION_48
0x40045a0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1508	sequencer.c	FUNCTION_48	IF_1
0x40045a7	          0x8b400c	              mov eax, dword [rax + 0xc]	      1508	sequencer.c	FUNCTION_48	IF_1
0x40045aa	            0x85c0	                           test eax, eax	      1508	sequencer.c	FUNCTION_48	IF_1
0x40045ac	            0x743f	                            je 0x40045ed	      1508	sequencer.c	FUNCTION_48	IF_1
0x40045ae	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045b2	      0xba00000000	                              mov edx, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045b7	      0xbe00000000	                              mov esi, 0	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045bc	          0x4889c7	                            mov rdi, rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045bf	      0xe800000000	                          call 0x40045c4	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045c4	            0x85c0	                           test eax, eax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045c6	     0xf849e000000	                            je 0x400466a	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x40045cc	      0xbf00000000	                              mov edi, 0	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045d1	      0xe8d1bdffff	                               call sym.	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045d6	          0x4889c7	                            mov rdi, rax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045d9	      0xb800000000	                              mov eax, 0	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045de	      0xe800000000	                          call 0x40045e3	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045e3	      0xe858baffff	                    call sym.const_error	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045e8	      0xe9b10b0000	                           jmp 0x400519e	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x40045ed	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x40045f1	          0x4889c6	                            mov rsi, rax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x40045f4	      0xbf00000000	                              mov edi, 0	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x40045f9	      0xe800000000	                          call 0x40045fe	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x40045fe	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4004604	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x400460b	            0x741e	                            je 0x400462b	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x400460d	    0x488b05000000	            mov rax, qword [0x04004614] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004614	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004618	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x400461c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004620	          0x4889d6	                            mov rsi, rdx	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004623	          0x4889c7	                            mov rdi, rax	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x4004626	      0xe849beffff	                         call sym.oidcpy	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x400462b	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004632	            0x7407	                            je 0x400463b	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004634	      0xb800000000	                              mov eax, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004639	            0xeb05	                           jmp 0x4004640	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x400463b	      0xb800000000	                              mov eax, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004640	      0xba00000000	                              mov edx, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004645	      0xbe00000000	                              mov esi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x400464a	          0x4889c7	                            mov rdi, rax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x400464d	      0xe800000000	                          call 0x4004652	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004652	            0x85c0	                           test eax, eax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004654	            0x7414	                            je 0x400466a	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x4004656	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x400465d	          0x4889c7	                            mov rdi, rax	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4004660	      0xe860cfffff	              call sym.error_dirty_index	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4004665	      0xe9340b0000	                           jmp 0x400519e	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x400466a	      0xbf00000000	                              mov edi, 0	      1525	sequencer.c	FUNCTION_48
0x400466f	      0xe800000000	                          call 0x4004674	      1525	sequencer.c	FUNCTION_48
0x4004674	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1527	sequencer.c	FUNCTION_48	IF_5
0x400467b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1527	sequencer.c	FUNCTION_48	IF_5
0x400467f	          0x4885c0	                           test rax, rax	      1527	sequencer.c	FUNCTION_48	IF_5
0x4004682	            0x7510	                           jne 0x4004694	      1527	sequencer.c	FUNCTION_48	IF_5
0x4004684	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1528	sequencer.c	FUNCTION_48	IF_5
0x400468f	      0xe973010000	                           jmp 0x4004807	      1528	sequencer.c	FUNCTION_48	IF_5
0x4004694	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x400469b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x400469f	        0x488b4008	                mov rax, qword [rax + 8]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40046a3	          0x4885c0	                           test rax, rax	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40046a6	     0xf84fe000000	                            je 0x40047aa	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40046ac	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40046b3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40046b6	            0x85c0	                           test eax, eax	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40046b8	            0x753a	                           jne 0x40046f4	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x40046ba	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046c1	        0x4883c004	                              add rax, 4	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046c5	          0x4889c7	                            mov rdi, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046c8	      0xe800000000	                          call 0x40046cd	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046cd	          0x4889c3	                            mov rbx, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046d0	      0xbf00000000	                              mov edi, 0	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046d5	      0xe8cdbcffff	                               call sym.	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046da	          0x4889de	                            mov rsi, rbx	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046dd	          0x4889c7	                            mov rdi, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046e0	      0xb800000000	                              mov eax, 0	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046e5	      0xe800000000	                          call 0x40046ea	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046ea	      0xe851b9ffff	                    call sym.const_error	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046ef	      0xe9aa0a0000	                           jmp 0x400519e	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40046f4	    0xc78530ffffff	               mov dword [rbp - 0xd0], 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x40046fe	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004705	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004709	        0x48894580	             mov qword [rbp - 0x80], rax	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400470d	            0xeb13	                           jmp 0x4004722	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400470f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004713	        0x488b4008	                mov rax, qword [rax + 8]	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004717	        0x48894580	             mov qword [rbp - 0x80], rax	      1541	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400471b	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      1540	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004722	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004729	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400472c	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004732	            0x7407	                            je 0x400473b	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004734	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004739	            0x75d4	                           jne 0x400470f	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400473b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4004742	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4004745	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x400474b	            0x7507	                           jne 0x4004754	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x400474d	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4004752	            0x7546	                           jne 0x400479a	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4004754	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400475b	          0x8b582c	            mov ebx, dword [rax + 0x2c] 	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400475e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004765	        0x4883c004	                              add rax, 4	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004769	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400476c	      0xe800000000	                          call 0x4004771	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004771	          0x4989c4	                            mov r12, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004774	      0xbf00000000	                              mov edi, 0	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004779	      0xe829bcffff	                               call sym.	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400477e	            0x89da	                            mov edx, ebx	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004780	          0x4c89e6	                            mov rsi, r12	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004783	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004786	      0xb800000000	                              mov eax, 0	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400478b	      0xe800000000	                          call 0x4004790	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004790	      0xe8abb8ffff	                    call sym.const_error	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4004795	      0xe9040a0000	                           jmp 0x400519e	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400479a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x400479e	          0x488b00	                    mov rax, qword [rax]	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40047a1	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40047a8	            0xeb5d	                           jmp 0x4004807	      1545	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x40047aa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40047b1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40047b4	            0x85c0	                           test eax, eax	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40047b6	            0x7e3a	                           jle 0x40047f2	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x40047b8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047bf	        0x4883c004	                              add rax, 4	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047c3	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047c6	      0xe800000000	                          call 0x40047cb	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047cb	          0x4889c3	                            mov rbx, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047ce	      0xbf00000000	                              mov edi, 0	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047d3	      0xe8cfbbffff	                               call sym.	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047d8	          0x4889de	                            mov rsi, rbx	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047db	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047de	      0xb800000000	                              mov eax, 0	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047e3	      0xe800000000	                          call 0x40047e8	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047e8	      0xe853b8ffff	                    call sym.const_error	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047ed	      0xe9ac090000	                           jmp 0x400519e	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x40047f2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x40047f9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x40047fd	          0x488b00	                    mov rax, qword [rax]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x4004800	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x4004807	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x400480b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x4004812	          0x4889d6	                            mov rsi, rdx	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x4004815	          0x4889c7	                            mov rdi, rax	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x4004818	      0xe8e7c8ffff	                    call sym.get_message	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x400481d	            0x85c0	                           test eax, eax	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x400481f	            0x743a	                            je 0x400485b	      1552	sequencer.c	FUNCTION_48	IF_10	CALL_14
0x4004821	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004828	        0x4883c004	                              add rax, 4	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x400482c	          0x4889c7	                            mov rdi, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x400482f	      0xe800000000	                          call 0x4004834	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004834	          0x4889c3	                            mov rbx, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004837	      0xbf00000000	                              mov edi, 0	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x400483c	      0xe866bbffff	                               call sym.	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004841	          0x4889de	                            mov rsi, rbx	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004844	          0x4889c7	                            mov rdi, rax	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004847	      0xb800000000	                              mov eax, 0	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x400484c	      0xe800000000	                          call 0x4004851	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004851	      0xe8eab7ffff	                    call sym.const_error	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x4004856	      0xe943090000	                           jmp 0x400519e	      1553	sequencer.c	FUNCTION_48	IF_10	CALL_15
0x400485b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004862	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004865	            0x85c0	                           test eax, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004867	     0xf84ce000000	                            je 0x400493b	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400486d	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004873	            0x89c7	                            mov edi, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004875	      0xe818f4ffff	                       call sym.is_fixup	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400487a	            0x85c0	                           test eax, eax	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400487c	     0xf85b9000000	                           jne 0x400493b	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4004882	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400488a	            0x741e	                            je 0x40048aa	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400488c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4004893	        0x488d5004	                      lea rdx, [rax + 4]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4004897	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x400489b	          0x4889c6	                            mov rsi, rax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x400489e	          0x4889d7	                            mov rdi, rdx	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048a1	      0xe857bbffff	                         call sym.oidcmp	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048a6	            0x85c0	                           test eax, eax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048a8	            0x7417	                            je 0x40048c1	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048aa	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048b2	     0xf8583000000	                           jne 0x400493b	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x40048b8	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1558	sequencer.c	FUNCTION_48	IF_11
0x40048bf	            0x747a	                            je 0x400493b	      1558	sequencer.c	FUNCTION_48	IF_11
0x40048c1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40048c8	          0x4889c7	                            mov rdi, rax	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40048cb	      0xe8f8c3ffff	                    call sym.is_rebase_i	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40048d0	            0x85c0	                           test eax, eax	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40048d2	            0x740c	                            je 0x40048e0	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x40048d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x40048d8	          0x4889c7	                            mov rdi, rax	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x40048db	      0xe806d5ffff	            call sym.write_author_script	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x40048e0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048e7	        0x488d7804	                      lea rdi, [rax + 4]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048eb	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048f2	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048f8	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048fc	          0x4889c6	                            mov rsi, rax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x40048ff	      0xe800ceffff	                call sym.fast_forward_to	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4004904	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x400490a	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4004911	     0xf8557080000	                           jne 0x400516e	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4004917	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 3	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x400491e	     0xf854a080000	                           jne 0x400516e	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4004924	    0x838d24ffffff	             or dword [rbp - 0xdc], 0x16	      1565	sequencer.c	FUNCTION_48	IF_11
0x400492b	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x4004936	      0xe967070000	                           jmp 0x40050a2	      1567	sequencer.c	FUNCTION_48	IF_11
0x400493b	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4004943	            0x7460	                            je 0x40049a5	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4004945	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x400494c	          0x4889c7	                            mov rdi, rax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x400494f	      0xe8b3bbffff	                   call sym.parse_commit	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4004954	            0x85c0	                           test eax, eax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4004956	            0x794d	                           jns 0x40049a5	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x4004958	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400495f	        0x4883c004	                              add rax, 4	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004963	          0x4889c7	                            mov rdi, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004966	      0xe800000000	                          call 0x400496b	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400496b	          0x4989c4	                            mov r12, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400496e	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004974	            0x89c7	                            mov edi, eax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004976	      0xe88ff2ffff	              call sym.command_to_string	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400497b	          0x4889c3	                            mov rbx, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400497e	      0xbf00000000	                              mov edi, 0	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004983	      0xe81fbaffff	                               call sym.	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004988	          0x4c89e2	                            mov rdx, r12	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400498b	          0x4889de	                            mov rsi, rbx	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400498e	          0x4889c7	                            mov rdi, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004991	      0xb800000000	                              mov eax, 0	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4004996	      0xe800000000	                          call 0x400499b	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x400499b	      0xe8a0b6ffff	                    call sym.const_error	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x40049a0	      0xe9f9070000	                           jmp 0x400519e	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x40049a5	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1583	sequencer.c	FUNCTION_48	IF_15
0x40049ac	     0xf85fc000000	                           jne 0x4004aae	      1583	sequencer.c	FUNCTION_48	IF_15
0x40049b2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1584	sequencer.c	FUNCTION_48	IF_15
0x40049b9	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1584	sequencer.c	FUNCTION_48	IF_15
0x40049c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1585	sequencer.c	FUNCTION_48	IF_15
0x40049c4	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1585	sequencer.c	FUNCTION_48	IF_15
0x40049cb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1586	sequencer.c	FUNCTION_48	IF_15
0x40049d2	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1586	sequencer.c	FUNCTION_48	IF_15
0x40049d9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1587	sequencer.c	FUNCTION_48	IF_15
0x40049dd	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1587	sequencer.c	FUNCTION_48	IF_15
0x40049e4	        0x488d4590	                   lea rax, [rbp - 0x70]	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_26
0x40049e8	      0xbe00000000	                              mov esi, 0	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_26
0x40049ed	          0x4889c7	                            mov rdi, rax	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_26
0x40049f0	      0xe880b8ffff	                  call sym.strbuf_addstr	      1588	sequencer.c	FUNCTION_48	IF_15	CALL_26
0x40049f5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_27
0x40049f9	        0x488d4590	                   lea rax, [rbp - 0x70]	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_27
0x40049fd	          0x4889d6	                            mov rsi, rdx	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_27
0x4004a00	          0x4889c7	                            mov rdi, rax	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_27
0x4004a03	      0xe86db8ffff	                  call sym.strbuf_addstr	      1589	sequencer.c	FUNCTION_48	IF_15	CALL_27
0x4004a08	        0x488d4590	                   lea rax, [rbp - 0x70]	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_28
0x4004a0c	      0xbe00000000	                              mov esi, 0	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_28
0x4004a11	          0x4889c7	                            mov rdi, rax	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_28
0x4004a14	      0xe85cb8ffff	                  call sym.strbuf_addstr	      1590	sequencer.c	FUNCTION_48	IF_15	CALL_28
0x4004a19	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a20	        0x4883c004	                              add rax, 4	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a24	          0x4889c7	                            mov rdi, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a27	      0xe800000000	                          call 0x4004a2c	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a2c	          0x4889c2	                            mov rdx, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a2f	        0x488d4590	                   lea rax, [rbp - 0x70]	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a33	          0x4889d6	                            mov rsi, rdx	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a36	          0x4889c7	                            mov rdi, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a39	      0xe837b8ffff	                  call sym.strbuf_addstr	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x4004a3e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a45	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a49	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a4c	            0x744a	                            je 0x4004a98	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a4e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a55	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a59	        0x488b4008	                mov rax, qword [rax + 8]	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a5d	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a60	            0x7436	                            je 0x4004a98	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x4004a62	        0x488d4590	                   lea rax, [rbp - 0x70]	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_31
0x4004a66	      0xbe00000000	                              mov esi, 0	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_31
0x4004a6b	          0x4889c7	                            mov rdi, rax	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_31
0x4004a6e	      0xe802b8ffff	                  call sym.strbuf_addstr	      1594	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_31
0x4004a73	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a7a	        0x4883c004	                              add rax, 4	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a7e	          0x4889c7	                            mov rdi, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a81	      0xe800000000	                          call 0x4004a86	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a86	          0x4889c2	                            mov rdx, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a89	        0x488d4590	                   lea rax, [rbp - 0x70]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a8d	          0x4889d6	                            mov rsi, rdx	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a90	          0x4889c7	                            mov rdi, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a93	      0xe8ddb7ffff	                  call sym.strbuf_addstr	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x4004a98	        0x488d4590	                   lea rax, [rbp - 0x70]	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x4004a9c	      0xbe00000000	                              mov esi, 0	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x4004aa1	          0x4889c7	                            mov rdi, rax	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x4004aa4	      0xe8ccb7ffff	                  call sym.strbuf_addstr	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x4004aa9	      0xe912010000	                           jmp 0x4004bc0	      1597	sequencer.c	FUNCTION_48	IF_15	CALL_34
0x4004aae	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1601	sequencer.c	FUNCTION_48	ELSE_5
0x4004ab5	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1601	sequencer.c	FUNCTION_48	ELSE_5
0x4004abc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1602	sequencer.c	FUNCTION_48	ELSE_5
0x4004ac0	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1602	sequencer.c	FUNCTION_48	ELSE_5
0x4004ac7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4004ace	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1603	sequencer.c	FUNCTION_48	ELSE_5
0x4004ad5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1604	sequencer.c	FUNCTION_48	ELSE_5
0x4004ad9	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1604	sequencer.c	FUNCTION_48	ELSE_5
0x4004ae0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004ae4	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004aeb	          0x4889d6	                            mov rsi, rdx	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004aee	          0x4889c7	                            mov rdi, rax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004af1	      0xe800000000	                          call 0x4004af6	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004af6	            0x85c0	                           test eax, eax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004af8	            0x7416	                            je 0x4004b10	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4004afa	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4004b01	        0x488d4590	                   lea rax, [rbp - 0x70]	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4004b05	          0x4889d6	                            mov rsi, rdx	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4004b08	          0x4889c7	                            mov rdi, rax	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4004b0b	      0xe865b7ffff	                  call sym.strbuf_addstr	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4004b10	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4004b17	          0x8b4008	                mov eax, dword [rax + 8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4004b1a	            0x85c0	                           test eax, eax	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4004b1c	            0x747e	                            je 0x4004b9c	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4004b1e	        0x488d4590	                   lea rax, [rbp - 0x70]	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_37
0x4004b22	          0x4889c7	                            mov rdi, rax	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_37
0x4004b25	      0xe8d2b7ffff	           call sym.strbuf_complete_line	      1611	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_37
0x4004b2a	        0x488d4590	                   lea rax, [rbp - 0x70]	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b2e	      0xba00000000	                              mov edx, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b33	      0xbe00000000	                              mov esi, 0	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b38	          0x4889c7	                            mov rdi, rax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b3b	      0xe8f5c1ffff	          call sym.has_conforming_footer	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b40	            0x85c0	                           test eax, eax	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b42	            0x7511	                           jne 0x4004b55	      1612	sequencer.c	FUNCTION_48	ELSE_5	IF_18	IF_19	CALL_38
0x4004b44	        0x488d4590	                   lea rax, [rbp - 0x70]	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_39
0x4004b48	      0xbe0a000000	                            mov esi, 0xa	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_39
0x4004b4d	          0x4889c7	                            mov rdi, rax	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_39
0x4004b50	      0xe8b2b6ffff	                   call sym.strbuf_addch	      1613	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_39
0x4004b55	        0x488d4590	                   lea rax, [rbp - 0x70]	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_40
0x4004b59	      0xbe00000000	                              mov esi, 0	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_40
0x4004b5e	          0x4889c7	                            mov rdi, rax	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_40
0x4004b61	      0xe80fb7ffff	                  call sym.strbuf_addstr	      1614	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_40
0x4004b66	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b6d	        0x4883c004	                              add rax, 4	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b71	          0x4889c7	                            mov rdi, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b74	      0xe800000000	                          call 0x4004b79	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b79	          0x4889c2	                            mov rdx, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b7c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b80	          0x4889d6	                            mov rsi, rdx	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b83	          0x4889c7	                            mov rdi, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b86	      0xe8eab6ffff	                  call sym.strbuf_addstr	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4004b8b	        0x488d4590	                   lea rax, [rbp - 0x70]	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_43
0x4004b8f	      0xbe00000000	                              mov esi, 0	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_43
0x4004b94	          0x4889c7	                            mov rdi, rax	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_43
0x4004b97	      0xe8d9b6ffff	                  call sym.strbuf_addstr	      1616	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_43
0x4004b9c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4004ba2	            0x89c7	                            mov edi, eax	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4004ba4	      0xe8e9f0ffff	                       call sym.is_fixup	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4004ba9	            0x85c0	                           test eax, eax	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4004bab	            0x7513	                           jne 0x4004bc0	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4004bad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4004bb1	          0x4889c7	                            mov rdi, rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4004bb4	      0xe895d6ffff	                     call sym.get_author	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4004bb9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1619	sequencer.c	FUNCTION_48	ELSE_5	CALL_45
0x4004bc0	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 3	      1622	sequencer.c	FUNCTION_48	IF_21
0x4004bc7	            0x750c	                           jne 0x4004bd5	      1622	sequencer.c	FUNCTION_48	IF_21
0x4004bc9	    0x838d24ffffff	             or dword [rbp - 0xdc], 0x12	      1623	sequencer.c	FUNCTION_48	IF_21
0x4004bd0	      0xe915010000	                           jmp 0x4004cea	      1623	sequencer.c	FUNCTION_48	IF_21
0x4004bd5	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4004bdb	            0x89c7	                            mov edi, eax	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4004bdd	      0xe8b0f0ffff	                       call sym.is_fixup	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4004be2	            0x85c0	                           test eax, eax	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4004be4	     0xf8400010000	                            je 0x4004cea	      1624	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_46
0x4004bea	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004bf1	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004bf8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004bfe	          0x4889ce	                            mov rsi, rcx	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004c01	            0x89c7	                            mov edi, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004c03	      0xe8abf0ffff	         call sym.update_squash_messages	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004c08	            0x85c0	                           test eax, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004c0a	            0x740a	                            je 0x4004c16	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4004c0c	      0xb8ffffffff	                     mov eax, 0xffffffff	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4004c11	      0xe988050000	                           jmp 0x400519e	      1626	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23
0x4004c16	    0x838d24ffffff	                or dword [rbp - 0xdc], 4	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x4004c1d	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4004c24	            0x7511	                           jne 0x4004c37	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4004c26	      0xe82fbbffff	         call sym.rebase_path_squash_msg	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4004c2b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4004c32	      0xe9b3000000	                           jmp 0x4004cea	      1629	sequencer.c	FUNCTION_48	ELSE_6	IF_22	CALL_48
0x4004c37	      0xe84dbbffff	          call sym.rebase_path_fixup_msg	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4004c3c	          0x4889c7	                            mov rdi, rax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4004c3f	      0xe800000000	                          call 0x4004c44	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4004c44	            0x85c0	                           test eax, eax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4004c46	            0x7418	                            je 0x4004c60	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x4004c48	    0x838d24ffffff	                or dword [rbp - 0xdc], 8	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x4004c4f	      0xe835bbffff	          call sym.rebase_path_fixup_msg	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4004c54	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4004c5b	      0xe98a000000	                           jmp 0x4004cea	      1632	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_51
0x4004c60	      0xe800000000	                          call 0x4004c65	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4004c65	        0x48894588	             mov qword [rbp - 0x78], rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4004c69	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4004c6d	          0x4889c7	                            mov rdi, rax	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4004c70	      0xe800000000	                          call 0x4004c75	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4004c75	      0xe8e0baffff	         call sym.rebase_path_squash_msg	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c7a	          0x4889c1	                            mov rcx, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c7d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c81	      0xbab6010000	                          mov edx, 0x1b6	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c86	          0x4889ce	                            mov rsi, rcx	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c89	          0x4889c7	                            mov rdi, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c8c	      0xe800000000	                          call 0x4004c91	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c91	            0x85c0	                           test eax, eax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c93	            0x7436	                            je 0x4004ccb	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4004c95	      0xe8c0baffff	         call sym.rebase_path_squash_msg	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004c9a	          0x4889c3	                            mov rbx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004c9d	      0xbf00000000	                              mov edi, 0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004ca2	      0xe800b7ffff	                               call sym.	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004ca7	          0x4889c1	                            mov rcx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004caa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cae	          0x4889c2	                            mov rdx, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cb1	          0x4889de	                            mov rsi, rbx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cb4	          0x4889cf	                            mov rdi, rcx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cb7	      0xb800000000	                              mov eax, 0	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cbc	      0xe800000000	                          call 0x4004cc1	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cc1	      0xe87ab3ffff	                    call sym.const_error	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004cc6	      0xe9d3040000	                           jmp 0x400519e	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4004ccb	      0xe800000000	                          call 0x4004cd0	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4004cd0	          0x4889c7	                            mov rdi, rax	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4004cd3	      0xe800000000	                          call 0x4004cd8	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x4004cd8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1640	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4004cdc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1640	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4004ce3	    0x838d24ffffff	                or dword [rbp - 0xdc], 2	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x4004cea	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004cf1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004cf4	            0x85c0	                           test eax, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004cf6	            0x7427	                            je 0x4004d1f	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004cf8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004cfe	            0x89c7	                            mov edi, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004d00	      0xe88defffff	                       call sym.is_fixup	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004d05	            0x85c0	                           test eax, eax	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004d07	            0x7516	                           jne 0x4004d1f	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4004d09	        0x488d4590	                   lea rax, [rbp - 0x70]	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4004d0d	      0xba00000000	                              mov edx, 0	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4004d12	      0xbe00000000	                              mov esi, 0	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4004d17	          0x4889c7	                            mov rdi, rax	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4004d1a	      0xe800000000	                          call 0x4004d1f	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4004d1f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d26	          0x4889c7	                            mov rdi, rax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d29	      0xe89abfffff	                    call sym.is_rebase_i	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d2e	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d30	            0x741f	                            je 0x4004d51	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d32	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d36	          0x4889c7	                            mov rdi, rax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d39	      0xe8a8d0ffff	            call sym.write_author_script	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d3e	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d40	            0x790f	                           jns 0x4004d51	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4004d42	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1649	sequencer.c	FUNCTION_48	IF_28
0x4004d4c	      0xe996010000	                           jmp 0x4004ee7	      1649	sequencer.c	FUNCTION_48	IF_28
0x4004d51	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d58	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d5c	          0x4885c0	                           test rax, rax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d5f	            0x7429	                            je 0x4004d8a	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d61	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d68	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d6c	      0xbe00000000	                              mov esi, 0	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d71	          0x4889c7	                            mov rdi, rax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d74	      0xe800000000	                          call 0x4004d79	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d79	            0x85c0	                           test eax, eax	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d7b	            0x740d	                            je 0x4004d8a	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d7d	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d84	     0xf8582000000	                           jne 0x4004e0c	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4004d8a	        0x4c8d4590	                    lea r8, [rbp - 0x70]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004d8e	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004d92	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004d99	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004da0	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004da7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dae	        0x4883ec08	                              sub rsp, 8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004db2	    0xffb508ffffff	                 push qword [rbp - 0xf8]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004db8	          0x4d89c1	                              mov r9, r8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dbb	          0x4989f8	                             mov r8, rdi	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dbe	          0x4889c7	                            mov rdi, rax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dc1	      0xe8e9cbffff	             call sym.do_recursive_merge	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dc6	        0x4883c410	                           add rsp, 0x10	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dca	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4004dd0	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4004dd7	            0x790b	                           jns 0x4004de4	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4004dd9	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1654	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4004ddf	      0xe9ba030000	                           jmp 0x400519e	      1654	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4004de4	      0xe800000000	                          call 0x4004de9	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004de9	          0x4889c2	                            mov rdx, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004dec	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004df0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004df4	      0xb900000000	                              mov ecx, 0	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004df9	          0x4889c7	                            mov rdi, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004dfc	      0xe8e4c4ffff	                  call sym.write_message	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004e01	     0x98528ffffff	              or dword [rbp - 0xd8], eax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_66
0x4004e07	      0xe9db000000	                           jmp 0x4004ee7	      1656	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_67
0x4004e0c	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1658	sequencer.c	FUNCTION_48	ELSE_10
0x4004e17	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1659	sequencer.c	FUNCTION_48	ELSE_10
0x4004e22	      0xe800000000	                          call 0x4004e27	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e27	          0x4889c2	                            mov rdx, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e2a	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e2e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e32	      0xb900000000	                              mov ecx, 0	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e37	          0x4889c7	                            mov rdi, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e3a	      0xe8a6c4ffff	                  call sym.write_message	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e3f	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_68
0x4004e45	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4004e4c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4004e53	          0x4889d6	                            mov rsi, rdx	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4004e56	          0x4889c7	                            mov rdi, rax	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4004e59	      0xe800000000	                          call 0x4004e5e	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4004e5e	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4004e65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4004e6c	          0x4889d6	                            mov rsi, rdx	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4004e6f	          0x4889c7	                            mov rdi, rax	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4004e72	      0xe800000000	                          call 0x4004e77	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4004e77	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004e7e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4004e82	          0x4889c7	                            mov rdi, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4004e85	      0xe800000000	                          call 0x4004e8a	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4004e8a	          0x4889c7	                            mov rdi, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4004e8d	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004e94	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1667	sequencer.c	FUNCTION_48	ELSE_10
0x4004e9b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1667	sequencer.c	FUNCTION_48	ELSE_10
0x4004e9f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004ea6	        0x488b7050	            mov rsi, qword [rax + 0x50] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004eaa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004eb1	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004eb5	          0x4989d9	                             mov r9, rbx	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004eb8	          0x4989f8	                             mov r8, rdi	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004ebb	          0x4889c7	                            mov rdi, rax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004ebe	      0xe800000000	                          call 0x4004ec3	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004ec3	     0x98528ffffff	              or dword [rbp - 0xd8], eax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4004ec9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4004ed0	          0x4889c7	                            mov rdi, rax	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4004ed3	      0xe800000000	                          call 0x4004ed8	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4004ed8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_75
0x4004edf	          0x4889c7	                            mov rdi, rax	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_75
0x4004ee2	      0xe800000000	                          call 0x4004ee7	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_75
0x4004ee7	        0x488d4590	                   lea rax, [rbp - 0x70]	      1672	sequencer.c	FUNCTION_48	CALL_76
0x4004eeb	          0x4889c7	                            mov rdi, rax	      1672	sequencer.c	FUNCTION_48	CALL_76
0x4004eee	      0xe800000000	                          call 0x4004ef3	      1672	sequencer.c	FUNCTION_48	CALL_76
0x4004ef3	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004efa	            0x755c	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004efc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f03	          0x8b400c	              mov eax, dword [rax + 0xc]	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f06	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f08	            0x754e	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f0a	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f11	            0x7409	                            je 0x4004f1c	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f13	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f1a	            0x753c	                           jne 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f1c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f23	        0x4883c004	                              add rax, 4	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f27	    0x41b900000000	                              mov r9d, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f2d	    0x41b801000000	                              mov r8d, 1	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f33	      0xb900000000	                              mov ecx, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f38	          0x4889c2	                            mov rdx, rax	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f3b	      0xbe00000000	                              mov esi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f40	      0xbf00000000	                              mov edi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f45	      0xe800000000	                          call 0x4004f4a	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_77
0x4004f4a	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f4c	            0x740a	                            je 0x4004f58	      1680	sequencer.c	FUNCTION_48	IF_31
0x4004f4e	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1683	sequencer.c	FUNCTION_48	IF_31
0x4004f58	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f5f	            0x755c	                           jne 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f61	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f68	          0x8b400c	              mov eax, dword [rax + 0xc]	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f6b	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f6d	            0x7409	                            je 0x4004f78	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f6f	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f76	            0x7409	                            je 0x4004f81	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f78	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f7f	            0x753c	                           jne 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004f81	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004f88	        0x4883c004	                              add rax, 4	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004f8c	    0x41b900000000	                              mov r9d, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004f92	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004f98	      0xb900000000	                              mov ecx, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004f9d	          0x4889c2	                            mov rdx, rax	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004fa0	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004fa5	      0xbf00000000	                              mov edi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004faa	      0xe800000000	                          call 0x4004faf	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_78
0x4004faf	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004fb1	            0x740a	                            je 0x4004fbd	      1684	sequencer.c	FUNCTION_48	IF_32
0x4004fb3	    0xc78528ffffff	     mov dword [rbp - 0xd8], 0xffffffff 	      1687	sequencer.c	FUNCTION_48	IF_32
0x4004fbd	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1689	sequencer.c	FUNCTION_48	IF_33
0x4004fc4	     0xf8481000000	                            je 0x400504b	      1689	sequencer.c	FUNCTION_48	IF_33
0x4004fca	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fce	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fd5	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fd8	      0xe801c1ffff	              call sym.short_commit_name	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fdd	          0x4989c4	                            mov r12, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fe0	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fe7	            0x750c	                           jne 0x4004ff5	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fe9	      0xbf00000000	                              mov edi, 0	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fee	      0xe8b4b3ffff	                               call sym.	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004ff3	            0xeb0a	                           jmp 0x4004fff	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004ff5	      0xbf00000000	                              mov edi, 0	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004ffa	      0xe8a8b3ffff	                               call sym.	      1690	sequencer.c	FUNCTION_48	IF_33
0x4004fff	          0x4889da	                            mov rdx, rbx	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005002	          0x4c89e6	                            mov rsi, r12	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005005	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005008	      0xb800000000	                              mov eax, 0	      1690	sequencer.c	FUNCTION_48	IF_33
0x400500d	      0xe800000000	                          call 0x4005012	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005012	      0xe829b0ffff	                    call sym.const_error	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005017	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 1	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x400501e	           0xf94c0	                                 sete al	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005021	           0xfb6c0	                           movzx eax, al	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005024	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x400502b	          0x4889d6	                            mov rsi, rdx	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x400502e	            0x89c7	                            mov edi, eax	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005030	      0xe81dc2ffff	                   call sym.print_advice	      1694	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005035	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_83
0x400503c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_83
0x400503f	            0x89c7	                            mov edi, eax	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_83
0x4005041	      0xe800000000	                          call 0x4005046	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_83
0x4005046	      0xe923010000	                           jmp 0x400516e	      1696	sequencer.c	FUNCTION_48	IF_33
0x400504b	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1699	sequencer.c	FUNCTION_48	CALL_84
0x4005052	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1699	sequencer.c	FUNCTION_48	CALL_84
0x4005059	          0x4889d6	                            mov rsi, rdx	      1699	sequencer.c	FUNCTION_48	CALL_84
0x400505c	          0x4889c7	                            mov rdi, rax	      1699	sequencer.c	FUNCTION_48	CALL_84
0x400505f	      0xe824ebffff	                    call sym.allow_empty	      1699	sequencer.c	FUNCTION_48	CALL_84
0x4005064	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1699	sequencer.c	FUNCTION_48	CALL_84
0x400506a	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1700	sequencer.c	FUNCTION_48	IF_34
0x4005071	            0x7911	                           jns 0x4005084	      1700	sequencer.c	FUNCTION_48	IF_34
0x4005073	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1701	sequencer.c	FUNCTION_48	IF_34
0x4005079	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1701	sequencer.c	FUNCTION_48	IF_34
0x400507f	      0xe9ea000000	                           jmp 0x400516e	      1702	sequencer.c	FUNCTION_48	IF_34
0x4005084	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x400508b	            0x7407	                            je 0x4005094	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x400508d	    0x838d24ffffff	                or dword [rbp - 0xdc], 1	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005094	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1705	sequencer.c	FUNCTION_48	IF_36
0x400509b	          0x8b400c	              mov eax, dword [rax + 0xc]	      1705	sequencer.c	FUNCTION_48	IF_36
0x400509e	            0x85c0	                           test eax, eax	      1705	sequencer.c	FUNCTION_48	IF_36
0x40050a0	            0x756d	                           jne 0x400510f	      1705	sequencer.c	FUNCTION_48	IF_36
0x40050a2	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050aa	            0x7516	                           jne 0x40050c2	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050ac	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050b3	            0x740d	                            je 0x40050c2	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050b5	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050bb	          0x83e004	                              and eax, 4	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050be	            0x85c0	                           test eax, eax	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050c0	            0x742b	                            je 0x40050ed	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40050c2	    0x8b8d24ffffff	             mov ecx, dword [rbp - 0xdc]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050c8	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050cf	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050d6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050dd	          0x4889c7	                            mov rdi, rax	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050e0	      0xe830e8ffff	                      call sym.do_commit	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050e5	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050eb	            0xeb22	                           jmp 0x400510f	      1708	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40050ed	      0xbf00000000	                              mov edi, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x40050f2	      0xe8b0b2ffff	                               call sym.	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x40050f7	          0x4889c7	                            mov rdi, rax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x40050fa	      0xb800000000	                              mov eax, 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x40050ff	      0xe800000000	                          call 0x4005104	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x4005104	      0xe837afffff	                    call sym.const_error	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x4005109	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_86
0x400510f	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1713	sequencer.c	FUNCTION_48	IF_38
0x4005116	            0x7556	                           jne 0x400516e	      1713	sequencer.c	FUNCTION_48	IF_38
0x4005118	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1713	sequencer.c	FUNCTION_48	IF_38
0x400511f	            0x744d	                            je 0x400516e	      1713	sequencer.c	FUNCTION_48	IF_38
0x4005121	      0xe863b6ffff	          call sym.rebase_path_fixup_msg	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_88
0x4005126	          0x4889c7	                            mov rdi, rax	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_88
0x4005129	      0xe800000000	                          call 0x400512e	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_88
0x400512e	      0xe827b6ffff	         call sym.rebase_path_squash_msg	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_90
0x4005133	          0x4889c7	                            mov rdi, rax	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_90
0x4005136	      0xe800000000	                          call 0x400513b	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_90
0x400513b	      0xe878b6ffff	     call sym.rebase_path_current_fixups	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_92
0x4005140	          0x4889c7	                            mov rdi, rax	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_92
0x4005143	      0xe800000000	                          call 0x4005148	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_92
0x4005148	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1717	sequencer.c	FUNCTION_48	IF_38
0x400514f	        0x4883c060	                           add rax, 0x60	      1717	sequencer.c	FUNCTION_48	IF_38
0x4005153	      0xbe00000000	                              mov esi, 0	      1717	sequencer.c	FUNCTION_48	IF_38
0x4005158	          0x4889c7	                            mov rdi, rax	      1717	sequencer.c	FUNCTION_48	IF_38
0x400515b	      0xe80db0ffff	                  call sym.strbuf_setlen	      1717	sequencer.c	FUNCTION_48	IF_38
0x4005160	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1718	sequencer.c	FUNCTION_48	IF_38
0x4005167	    0xc74078000000	               mov dword [rax + 0x78], 0	      1718	sequencer.c	FUNCTION_48	IF_38
0x400516e	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1722	sequencer.c	FUNCTION_48	CALL_93
0x4005172	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1722	sequencer.c	FUNCTION_48	CALL_93
0x4005179	          0x4889d6	                            mov rsi, rdx	      1722	sequencer.c	FUNCTION_48	CALL_93
0x400517c	          0x4889c7	                            mov rdi, rax	      1722	sequencer.c	FUNCTION_48	CALL_93
0x400517f	      0xe875c0ffff	                   call sym.free_message	      1722	sequencer.c	FUNCTION_48	CALL_93
0x4005184	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1723	sequencer.c	FUNCTION_48	CALL_94
0x400518b	          0x4889c7	                            mov rdi, rax	      1723	sequencer.c	FUNCTION_48	CALL_94
0x400518e	      0xe800000000	                          call 0x4005193	      1723	sequencer.c	FUNCTION_48	CALL_94
0x4005193	      0xe8c9c4ffff	       call sym.update_abort_safety_file	      1724	sequencer.c	FUNCTION_48	CALL_95
0x4005198	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	      1726	sequencer.c	FUNCTION_48
0x400519e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1727	sequencer.c	FUNCTION_48
0x40051a2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1727	sequencer.c	FUNCTION_48
0x40051ab	            0x7405	                            je 0x40051b2	      1727	sequencer.c	FUNCTION_48
0x40051ad	      0xe800000000	                          call 0x40051b2	      1727	sequencer.c	FUNCTION_48
0x40051b2	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1727	sequencer.c	FUNCTION_48
0x40051b6	              0x5b	                                 pop rbx	      1727	sequencer.c	FUNCTION_48
0x40051b7	            0x415c	                                 pop r12	      1727	sequencer.c	FUNCTION_48
0x40051b9	              0x5d	                                 pop rbp	      1727	sequencer.c	FUNCTION_48
0x40051ba	              0xc3	                                     ret	      1727	sequencer.c	FUNCTION_48
sequencer_rollback	CALL,24:FOR,0:WHILE,0:ELSE,1:DO,0:IF,7:SWITCH,0:functions,0	144
0x4006e97	              0x55	                                push rbp	      2277	sequencer.c	FUNCTION_71
0x4006e98	          0x4889e5	                            mov rbp, rsp	      2277	sequencer.c	FUNCTION_71
0x4006e9b	            0x4154	                                push r12	      2277	sequencer.c	FUNCTION_71
0x4006e9d	              0x53	                                push rbx	      2277	sequencer.c	FUNCTION_71
0x4006e9e	        0x4883ec60	                           sub rsp, 0x60	      2277	sequencer.c	FUNCTION_71
0x4006ea2	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2277	sequencer.c	FUNCTION_71
0x4006ea6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2277	sequencer.c	FUNCTION_71
0x4006eaf	        0x488945e8	             mov qword [rbp - 0x18], rax	      2277	sequencer.c	FUNCTION_71
0x4006eb3	            0x31c0	                            xor eax, eax	      2277	sequencer.c	FUNCTION_71
0x4006eb5	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2280	sequencer.c	FUNCTION_71
0x4006ebd	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2280	sequencer.c	FUNCTION_71
0x4006ec5	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2280	sequencer.c	FUNCTION_71
0x4006ecd	      0xe81097ffff	             call sym.git_path_head_file	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4006ed2	      0xbe00000000	                              mov esi, 0	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4006ed7	          0x4889c7	                            mov rdi, rax	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4006eda	      0xe800000000	                          call 0x4006edf	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4006edf	        0x488945a8	             mov qword [rbp - 0x58], rax	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4006ee3	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006ee8	            0x7516	                           jne 0x4006f00	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006eea	      0xe800000000	                          call 0x4006eef	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006eef	            0x8b00	                    mov eax, dword [rax]	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006ef1	          0x83f802	                              cmp eax, 2	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006ef4	            0x750a	                           jne 0x4006f00	      2284	sequencer.c	FUNCTION_71	IF_1
0x4006ef6	      0xe8b8feffff	           call sym.rollback_single_pick	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_2
0x4006efb	      0xe99c010000	                           jmp 0x400709c	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_2
0x4006f00	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2292	sequencer.c	FUNCTION_71	IF_2
0x4006f05	            0x752c	                           jne 0x4006f33	      2292	sequencer.c	FUNCTION_71	IF_2
0x4006f07	      0xe8d696ffff	             call sym.git_path_head_file	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f0c	          0x4889c3	                            mov rbx, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f0f	      0xbf00000000	                              mov edi, 0	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f14	      0xe88e94ffff	                               call sym.	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f19	          0x4889de	                            mov rsi, rbx	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f1c	          0x4889c7	                            mov rdi, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f1f	      0xb800000000	                              mov eax, 0	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f24	      0xe800000000	                          call 0x4006f29	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f29	      0xe81291ffff	                    call sym.const_error	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f2e	      0xe969010000	                           jmp 0x400709c	      2293	sequencer.c	FUNCTION_71	CALL_4
0x4006f33	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f37	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f3b	          0x4889d6	                            mov rsi, rdx	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f3e	          0x4889c7	                            mov rdi, rax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f41	      0xe800000000	                          call 0x4006f46	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f46	            0x85c0	                           test eax, eax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f48	            0x746b	                            je 0x4006fb5	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4006f4a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f4e	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f51	      0xe800000000	                          call 0x4006f56	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f56	            0x85c0	                           test eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f58	            0x7413	                            je 0x4006f6d	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f5a	      0xe800000000	                          call 0x4006f5f	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f5f	            0x8b00	                    mov eax, dword [rax]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f61	            0x89c7	                            mov edi, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f63	      0xe800000000	                          call 0x4006f68	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f68	          0x4889c3	                            mov rbx, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f6b	            0xeb0d	                           jmp 0x4006f7a	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f6d	      0xbf00000000	                              mov edi, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f72	      0xe83094ffff	                               call sym.	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f77	          0x4889c3	                            mov rbx, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f7a	      0xe86396ffff	             call sym.git_path_head_file	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f7f	          0x4989c4	                            mov r12, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f82	      0xbf00000000	                              mov edi, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f87	      0xe81b94ffff	                               call sym.	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f8c	          0x4889da	                            mov rdx, rbx	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f8f	          0x4c89e6	                            mov rsi, r12	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f92	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f95	      0xb800000000	                              mov eax, 0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f9a	      0xe800000000	                          call 0x4006f9f	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006f9f	      0xe89c90ffff	                    call sym.const_error	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4006fa4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4006fa8	          0x4889c7	                            mov rdi, rax	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4006fab	      0xe800000000	                          call 0x4006fb0	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x4006fb0	      0xe9d6000000	                           jmp 0x400708b	      2298	sequencer.c	FUNCTION_71	IF_3
0x4006fb5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2300	sequencer.c	FUNCTION_71	CALL_12
0x4006fb9	          0x4889c7	                            mov rdi, rax	      2300	sequencer.c	FUNCTION_71	CALL_12
0x4006fbc	      0xe800000000	                          call 0x4006fc1	      2300	sequencer.c	FUNCTION_71	CALL_12
0x4006fc1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fc5	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fc9	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fcd	          0x4889ce	                            mov rsi, rcx	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fd0	          0x4889c7	                            mov rdi, rax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fd3	      0xe800000000	                          call 0x4006fd8	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fd8	            0x85c0	                           test eax, eax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fda	            0x750b	                           jne 0x4006fe7	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fdc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fe0	           0xfb600	                   movzx eax, byte [rax]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fe3	            0x84c0	                             test al, al	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fe5	            0x7429	                            je 0x4007010	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4006fe7	      0xe8f695ffff	             call sym.git_path_head_file	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006fec	          0x4889c3	                            mov rbx, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006fef	      0xbf00000000	                              mov edi, 0	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006ff4	      0xe8ae93ffff	                               call sym.	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006ff9	          0x4889de	                            mov rsi, rbx	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006ffc	          0x4889c7	                            mov rdi, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4006fff	      0xb800000000	                              mov eax, 0	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4007004	      0xe800000000	                          call 0x4007009	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4007009	      0xe83290ffff	                    call sym.const_error	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x400700e	            0xeb7b	                           jmp 0x400708b	      2304	sequencer.c	FUNCTION_71	IF_4
0x4007010	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4007014	          0x4889c7	                            mov rdi, rax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4007017	      0xe80694ffff	                    call sym.is_null_oid	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x400701c	            0x85c0	                           test eax, eax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x400701e	            0x741e	                            je 0x400703e	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x4007020	      0xbf00000000	                              mov edi, 0	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4007025	      0xe87d93ffff	                               call sym.	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x400702a	          0x4889c7	                            mov rdi, rax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x400702d	      0xb800000000	                              mov eax, 0	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4007032	      0xe800000000	                          call 0x4007037	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x4007037	      0xe80490ffff	                    call sym.const_error	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x400703c	            0xeb4d	                           jmp 0x400708b	      2308	sequencer.c	FUNCTION_71	IF_5
0x400703e	      0xe8c3fbffff	               call sym.rollback_is_safe	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4007043	            0x85c0	                           test eax, eax	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4007045	            0x7519	                           jne 0x4007060	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4007047	      0xbf00000000	                              mov edi, 0	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x400704c	      0xe85693ffff	                               call sym.	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4007051	          0x4889c7	                            mov rdi, rax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4007054	      0xb800000000	                              mov eax, 0	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4007059	      0xe800000000	                          call 0x400705e	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x400705e	            0xeb10	                           jmp 0x4007070	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x4007060	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4007064	          0x4889c7	                            mov rdi, rax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4007067	      0xe8ddfcffff	             call sym.reset_for_rollback	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x400706c	            0x85c0	                           test eax, eax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x400706e	            0x751a	                           jne 0x400708a	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4007070	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2318	sequencer.c	FUNCTION_71	CALL_22
0x4007074	          0x4889c7	                            mov rdi, rax	      2318	sequencer.c	FUNCTION_71	CALL_22
0x4007077	      0xe800000000	                          call 0x400707c	      2318	sequencer.c	FUNCTION_71	CALL_22
0x400707c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4007080	          0x4889c7	                            mov rdi, rax	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4007083	      0xe800000000	                          call 0x4007088	      2319	sequencer.c	FUNCTION_71	CALL_23
0x4007088	            0xeb12	                           jmp 0x400709c	      2319	sequencer.c	FUNCTION_71	CALL_23
0x400708a	              0x90	                                     nop	      2317	sequencer.c	FUNCTION_71	ELSE_1	IF_7
0x400708b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2321	sequencer.c	FUNCTION_71	CALL_24
0x400708f	          0x4889c7	                            mov rdi, rax	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4007092	      0xe800000000	                          call 0x4007097	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4007097	      0xb8ffffffff	                     mov eax, 0xffffffff	      2322	sequencer.c	FUNCTION_71
0x400709c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2323	sequencer.c	FUNCTION_71
0x40070a0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2323	sequencer.c	FUNCTION_71
0x40070a9	            0x7405	                            je 0x40070b0	      2323	sequencer.c	FUNCTION_71
0x40070ab	      0xe800000000	                          call 0x40070b0	      2323	sequencer.c	FUNCTION_71
0x40070b0	        0x4883c460	                           add rsp, 0x60	      2323	sequencer.c	FUNCTION_71
0x40070b4	              0x5b	                                 pop rbx	      2323	sequencer.c	FUNCTION_71
0x40070b5	            0x415c	                                 pop r12	      2323	sequencer.c	FUNCTION_71
0x40070b7	              0x5d	                                 pop rbp	      2323	sequencer.c	FUNCTION_71
0x40070b8	              0xc3	                                     ret	      2323	sequencer.c	FUNCTION_71
run_prepare_commit_msg_hook	CALL,9:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:SWITCH,0:functions,0	78
0x4002c34	              0x55	                                push rbp	       927	sequencer.c	FUNCTION_33
0x4002c35	          0x4889e5	                            mov rbp, rsp	       927	sequencer.c	FUNCTION_33
0x4002c38	        0x4883ec40	                           sub rsp, 0x40	       927	sequencer.c	FUNCTION_33
0x4002c3c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       927	sequencer.c	FUNCTION_33
0x4002c40	        0x488975c0	             mov qword [rbp - 0x40], rsi	       927	sequencer.c	FUNCTION_33
0x4002c44	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	sequencer.c	FUNCTION_33
0x4002c4d	        0x488945f8	                mov qword [rbp - 8], rax	       927	sequencer.c	FUNCTION_33
0x4002c51	            0x31c0	                            xor eax, eax	       927	sequencer.c	FUNCTION_33
0x4002c53	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       928	sequencer.c	FUNCTION_33
0x4002c5b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       928	sequencer.c	FUNCTION_33
0x4002c62	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       928	sequencer.c	FUNCTION_33
0x4002c69	      0xe800000000	                          call 0x4002c6e	       932	sequencer.c	FUNCTION_33	CALL_1
0x4002c6e	        0x488945d8	             mov qword [rbp - 0x28], rax	       932	sequencer.c	FUNCTION_33	CALL_1
0x4002c72	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c76	        0x488b7008	                mov rsi, qword [rax + 8]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c82	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c86	      0xb900000000	                              mov ecx, 0	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c8b	          0x4889c7	                            mov rdi, rax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c8e	      0xe852e6ffff	                  call sym.write_message	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c93	            0x85c0	                           test eax, eax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c95	            0x740a	                            je 0x4002ca1	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4002c97	      0xb8ffffffff	                     mov eax, 0xffffffff	       934	sequencer.c	FUNCTION_33	IF_1
0x4002c9c	      0xe9c3000000	                           jmp 0x4002d64	       934	sequencer.c	FUNCTION_33	IF_1
0x4002ca1	      0xe800000000	                          call 0x4002ca6	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002ca6	          0x4889c2	                            mov rdx, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002ca9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002cad	      0xbe00000000	                              mov esi, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002cb2	          0x4889c7	                            mov rdi, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002cb5	      0xb800000000	                              mov eax, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002cba	      0xe800000000	                          call 0x4002cbf	       936	sequencer.c	FUNCTION_33	CALL_4
0x4002cbf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       937	sequencer.c	FUNCTION_33	CALL_5
0x4002cc3	      0xbe00000000	                              mov esi, 0	       937	sequencer.c	FUNCTION_33	CALL_5
0x4002cc8	          0x4889c7	                            mov rdi, rax	       937	sequencer.c	FUNCTION_33	CALL_5
0x4002ccb	      0xe800000000	                          call 0x4002cd0	       937	sequencer.c	FUNCTION_33	CALL_5
0x4002cd0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       938	sequencer.c	FUNCTION_33	IF_2
0x4002cd5	            0x7431	                            je 0x4002d08	       938	sequencer.c	FUNCTION_33	IF_2
0x4002cd7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cdb	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cdf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002ce3	    0x41b900000000	                              mov r9d, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002ce9	          0x4989c8	                             mov r8, rcx	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cec	      0xb900000000	                              mov ecx, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cf1	      0xbe00000000	                              mov esi, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cf6	          0x4889c7	                            mov rdi, rax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cf9	      0xb800000000	                              mov eax, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002cfe	      0xe800000000	                          call 0x4002d03	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002d03	          0x8945d4	             mov dword [rbp - 0x2c], eax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002d06	            0xeb28	                           jmp 0x4002d30	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x4002d08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d0c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d10	    0x41b800000000	                              mov r8d, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d16	      0xb900000000	                              mov ecx, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d1b	      0xbe00000000	                              mov esi, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d20	          0x4889c7	                            mov rdi, rax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d23	      0xb800000000	                              mov eax, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d28	      0xe800000000	                          call 0x4002d2d	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d2d	          0x8945d4	             mov dword [rbp - 0x2c], eax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4002d30	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       944	sequencer.c	FUNCTION_33	IF_3
0x4002d34	            0x741f	                            je 0x4002d55	       944	sequencer.c	FUNCTION_33	IF_3
0x4002d36	      0xbf00000000	                              mov edi, 0	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d3b	      0xe867d6ffff	                               call sym.	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d40	          0x4889c7	                            mov rdi, rax	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d43	      0xb800000000	                              mov eax, 0	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d48	      0xe800000000	                          call 0x4002d4d	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d4d	      0xe8eed2ffff	                    call sym.const_error	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d52	          0x8945d4	             mov dword [rbp - 0x2c], eax	       945	sequencer.c	FUNCTION_33	CALL_8
0x4002d55	        0x488d45e0	                   lea rax, [rbp - 0x20]	       946	sequencer.c	FUNCTION_33	CALL_9
0x4002d59	          0x4889c7	                            mov rdi, rax	       946	sequencer.c	FUNCTION_33	CALL_9
0x4002d5c	      0xe800000000	                          call 0x4002d61	       946	sequencer.c	FUNCTION_33	CALL_9
0x4002d61	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       948	sequencer.c	FUNCTION_33
0x4002d64	        0x488b4df8	                mov rcx, qword [rbp - 8]	       949	sequencer.c	FUNCTION_33
0x4002d68	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       949	sequencer.c	FUNCTION_33
0x4002d71	            0x7405	                            je 0x4002d78	       949	sequencer.c	FUNCTION_33
0x4002d73	      0xe800000000	                          call 0x4002d78	       949	sequencer.c	FUNCTION_33
0x4002d78	              0xc9	                                   leave	       949	sequencer.c	FUNCTION_33
0x4002d79	              0xc3	                                     ret	       949	sequencer.c	FUNCTION_33
make_patch	CALL,22:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:SWITCH,0:functions,0	164
0x4007574	              0x55	                                push rbp	      2406	sequencer.c	FUNCTION_74
0x4007575	          0x4889e5	                            mov rbp, rsp	      2406	sequencer.c	FUNCTION_74
0x4007578	              0x53	                                push rbx	      2406	sequencer.c	FUNCTION_74
0x4007579	    0x4881ec180900	                          sub rsp, 0x918	      2406	sequencer.c	FUNCTION_74
0x4007580	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	      2406	sequencer.c	FUNCTION_74
0x4007587	    0x4889b5e0f6ff	            mov qword [rbp - 0x920], rsi	      2406	sequencer.c	FUNCTION_74
0x400758e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2406	sequencer.c	FUNCTION_74
0x4007597	        0x488945e8	             mov qword [rbp - 0x18], rax	      2406	sequencer.c	FUNCTION_74
0x400759b	            0x31c0	                            xor eax, eax	      2406	sequencer.c	FUNCTION_74
0x400759d	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	      2407	sequencer.c	FUNCTION_74
0x40075a8	    0x48c78518f7ff	              mov qword [rbp - 0x8e8], 0	      2407	sequencer.c	FUNCTION_74
0x40075b3	    0x48c78520f7ff	              mov qword [rbp - 0x8e0], 0	      2407	sequencer.c	FUNCTION_74
0x40075be	    0xc785f4f6ffff	              mov dword [rbp - 0x90c], 0	      2410	sequencer.c	FUNCTION_74
0x40075c8	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2412	sequencer.c	FUNCTION_74	CALL_1
0x40075cf	          0x4889c7	                            mov rdi, rax	      2412	sequencer.c	FUNCTION_74	CALL_1
0x40075d2	      0xe8079bffff	              call sym.short_commit_name	      2412	sequencer.c	FUNCTION_74	CALL_1
0x40075d7	    0x48898500f7ff	            mov qword [rbp - 0x900], rax	      2412	sequencer.c	FUNCTION_74	CALL_1
0x40075de	      0xe86292ffff	        call sym.rebase_path_stopped_sha	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075e3	          0x4889c3	                            mov rbx, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075e6	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075ed	          0x4889c7	                            mov rdi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075f0	      0xe800000000	                          call 0x40075f5	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075f5	          0x4889c6	                            mov rsi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075f8	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x40075ff	      0xb901000000	                              mov ecx, 1	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4007604	          0x4889da	                            mov rdx, rbx	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4007607	          0x4889c7	                            mov rdi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400760a	      0xe8d69cffff	                  call sym.write_message	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400760f	            0x85c0	                           test eax, eax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4007611	            0x790a	                           jns 0x400761d	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4007613	      0xb8ffffffff	                     mov eax, 0xffffffff	      2414	sequencer.c	FUNCTION_74	IF_1
0x4007618	      0xe970020000	                           jmp 0x400788d	      2414	sequencer.c	FUNCTION_74	IF_1
0x400761d	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007624	        0x4883c004	                              add rax, 4	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007628	    0x41b900000000	                              mov r9d, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400762e	    0x41b801000000	                              mov r8d, 1	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007634	      0xb900000000	                              mov ecx, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007639	          0x4889c2	                            mov rdx, rax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400763c	      0xbe00000000	                              mov esi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007641	      0xbf00000000	                              mov edi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4007646	      0xe800000000	                          call 0x400764b	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400764b	            0x85c0	                           test eax, eax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400764d	            0x7427	                            je 0x4007676	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400764f	      0xbf00000000	                              mov edi, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007654	      0xe84e8dffff	                               call sym.	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007659	      0xbe00000000	                              mov esi, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x400765e	          0x4889c7	                            mov rdi, rax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007661	      0xb800000000	                              mov eax, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007666	      0xe800000000	                          call 0x400766b	      2417	sequencer.c	FUNCTION_74	CALL_6
0x400766b	      0xe8d089ffff	                    call sym.const_error	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007670	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4007676	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	      2419	sequencer.c	FUNCTION_74	CALL_8
0x400767d	          0x4889c7	                            mov rdi, rax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4007680	      0xe85c96ffff	                        call sym.get_dir	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4007685	          0x4889c2	                            mov rdx, rax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4007688	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2419	sequencer.c	FUNCTION_74	CALL_8
0x400768f	      0xbe00000000	                              mov esi, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4007694	          0x4889c7	                            mov rdi, rax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x4007697	      0xb800000000	                              mov eax, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x400769c	      0xe800000000	                          call 0x40076a1	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40076a1	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2420	sequencer.c	FUNCTION_74	CALL_9
0x40076a8	      0xbab0080000	                          mov edx, 0x8b0	      2420	sequencer.c	FUNCTION_74	CALL_9
0x40076ad	      0xbe00000000	                              mov esi, 0	      2420	sequencer.c	FUNCTION_74	CALL_9
0x40076b2	          0x4889c7	                            mov rdi, rax	      2420	sequencer.c	FUNCTION_74	CALL_9
0x40076b5	      0xe800000000	                          call 0x40076ba	      2420	sequencer.c	FUNCTION_74	CALL_9
0x40076ba	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2421	sequencer.c	FUNCTION_74	CALL_10
0x40076c1	      0xbe00000000	                              mov esi, 0	      2421	sequencer.c	FUNCTION_74	CALL_10
0x40076c6	          0x4889c7	                            mov rdi, rax	      2421	sequencer.c	FUNCTION_74	CALL_10
0x40076c9	      0xe800000000	                          call 0x40076ce	      2421	sequencer.c	FUNCTION_74	CALL_10
0x40076ce	    0xc785d0f7ffff	              mov dword [rbp - 0x830], 0	      2422	sequencer.c	FUNCTION_74
0x40076d8	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	      2423	sequencer.c	FUNCTION_74
0x40076df	          0x83c801	                               or eax, 1	      2423	sequencer.c	FUNCTION_74
0x40076e2	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	      2423	sequencer.c	FUNCTION_74
0x40076e8	    0xc78588fcffff	          mov dword [rbp - 0x378], 0x10 	      2424	sequencer.c	FUNCTION_74
0x40076f2	     0xfb685abf7ff	           movzx eax, byte [rbp - 0x855]	      2425	sequencer.c	FUNCTION_74
0x40076f9	          0x83c880	                      or eax, 0xffffff80	      2425	sequencer.c	FUNCTION_74
0x40076fc	    0x8885abf7ffff	              mov byte [rbp - 0x855], al	      2425	sequencer.c	FUNCTION_74
0x4007702	     0xfb685a9f7ff	           movzx eax, byte [rbp - 0x857]	      2426	sequencer.c	FUNCTION_74
0x4007709	          0x83c808	                               or eax, 8	      2426	sequencer.c	FUNCTION_74
0x400770c	    0x8885a9f7ffff	              mov byte [rbp - 0x857], al	      2426	sequencer.c	FUNCTION_74
0x4007712	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2427	sequencer.c	FUNCTION_74
0x4007719	      0xbe00000000	                              mov esi, 0	      2427	sequencer.c	FUNCTION_74
0x400771e	          0x4889c7	                            mov rdi, rax	      2427	sequencer.c	FUNCTION_74
0x4007721	      0xe800000000	                          call 0x4007726	      2427	sequencer.c	FUNCTION_74
0x4007726	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	      2427	sequencer.c	FUNCTION_74
0x400772d	    0xc78568fcffff	              mov dword [rbp - 0x398], 0	      2428	sequencer.c	FUNCTION_74
0x4007737	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      2429	sequencer.c	FUNCTION_74	IF_3
0x400773e	          0x4885c0	                           test rax, rax	      2429	sequencer.c	FUNCTION_74	IF_3
0x4007741	            0x752e	                           jne 0x4007771	      2429	sequencer.c	FUNCTION_74	IF_3
0x4007743	    0x488b9d20f7ff	            mov rbx, qword [rbp - 0x8e0]	      2430	sequencer.c	FUNCTION_74	CALL_11
0x400774a	      0xbf00000000	                              mov edi, 0	      2430	sequencer.c	FUNCTION_74	CALL_11
0x400774f	      0xe8538cffff	                               call sym.	      2430	sequencer.c	FUNCTION_74	CALL_11
0x4007754	          0x4889de	                            mov rsi, rbx	      2430	sequencer.c	FUNCTION_74	CALL_11
0x4007757	          0x4889c7	                            mov rdi, rax	      2430	sequencer.c	FUNCTION_74	CALL_11
0x400775a	      0xb800000000	                              mov eax, 0	      2430	sequencer.c	FUNCTION_74	CALL_11
0x400775f	      0xe800000000	                          call 0x4007764	      2430	sequencer.c	FUNCTION_74	CALL_11
0x4007764	      0xe8d788ffff	                    call sym.const_error	      2430	sequencer.c	FUNCTION_74	CALL_11
0x4007769	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2430	sequencer.c	FUNCTION_74	CALL_11
0x400776f	            0xeb2e	                           jmp 0x400779f	      2430	sequencer.c	FUNCTION_74	CALL_11
0x4007771	    0x488b95e8f6ff	            mov rdx, qword [rbp - 0x918]	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4007778	    0x488d8530f7ff	                  lea rax, [rbp - 0x8d0]	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x400777f	          0x4889d6	                            mov rsi, rdx	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4007782	          0x4889c7	                            mov rdi, rax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4007785	      0xe800000000	                          call 0x400778a	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x400778a	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4007790	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_13
0x4007797	          0x4889c7	                            mov rdi, rax	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_13
0x400779a	      0xe800000000	                          call 0x400779f	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_13
0x400779f	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2435	sequencer.c	FUNCTION_74
0x40077a6	      0xbe00000000	                              mov esi, 0	      2435	sequencer.c	FUNCTION_74
0x40077ab	          0x4889c7	                            mov rdi, rax	      2435	sequencer.c	FUNCTION_74
0x40077ae	      0xe8ba89ffff	                  call sym.strbuf_setlen	      2435	sequencer.c	FUNCTION_74
0x40077b3	    0x488b85e0f6ff	            mov rax, qword [rbp - 0x920]	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077ba	          0x4889c7	                            mov rdi, rax	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077bd	      0xe81f95ffff	                        call sym.get_dir	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077c2	          0x4889c2	                            mov rdx, rax	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077c5	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077cc	      0xbe00000000	                              mov esi, 0	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077d1	          0x4889c7	                            mov rdi, rax	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077d4	      0xb800000000	                              mov eax, 0	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077d9	      0xe800000000	                          call 0x40077de	      2437	sequencer.c	FUNCTION_74	CALL_15
0x40077de	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x40077e5	          0x4889c7	                            mov rdi, rax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x40077e8	      0xe800000000	                          call 0x40077ed	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x40077ed	            0x85c0	                           test eax, eax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x40077ef	     0xf8583000000	                           jne 0x4007878	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x40077f5	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x40077fc	      0xbe00000000	                              mov esi, 0	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4007801	          0x4889c7	                            mov rdi, rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4007804	      0xe800000000	                          call 0x4007809	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4007809	    0x48898508f7ff	            mov qword [rbp - 0x8f8], rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4007810	    0x488d95f8f6ff	                  lea rdx, [rbp - 0x908]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_18
0x4007817	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_18
0x400781e	          0x4889d6	                            mov rsi, rdx	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_18
0x4007821	          0x4889c7	                            mov rdi, rax	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_18
0x4007824	      0xe800000000	                          call 0x4007829	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_18
0x4007829	    0x488b9d20f7ff	            mov rbx, qword [rbp - 0x8e0]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007830	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007837	          0x4889c7	                            mov rdi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400783a	      0xe800000000	                          call 0x400783f	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400783f	          0x4889c6	                            mov rsi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007842	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007849	      0xb901000000	                              mov ecx, 1	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400784e	          0x4889da	                            mov rdx, rbx	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007851	          0x4889c7	                            mov rdi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007854	      0xe88c9affff	                  call sym.write_message	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4007859	     0x985f4f6ffff	             or dword [rbp - 0x90c], eax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400785f	    0x488b9508f7ff	            mov rdx, qword [rbp - 0x8f8]	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x4007866	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x400786d	          0x4889d6	                            mov rsi, rdx	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x4007870	          0x4889c7	                            mov rdi, rax	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x4007873	      0xe800000000	                          call 0x4007878	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_21
0x4007878	    0x488d8510f7ff	                  lea rax, [rbp - 0x8f0]	      2444	sequencer.c	FUNCTION_74	CALL_22
0x400787f	          0x4889c7	                            mov rdi, rax	      2444	sequencer.c	FUNCTION_74	CALL_22
0x4007882	      0xe800000000	                          call 0x4007887	      2444	sequencer.c	FUNCTION_74	CALL_22
0x4007887	    0x8b85f4f6ffff	            mov eax, dword [rbp - 0x90c]	      2446	sequencer.c	FUNCTION_74
0x400788d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2447	sequencer.c	FUNCTION_74
0x4007891	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2447	sequencer.c	FUNCTION_74
0x400789a	            0x7405	                            je 0x40078a1	      2447	sequencer.c	FUNCTION_74
0x400789c	      0xe800000000	                          call 0x40078a1	      2447	sequencer.c	FUNCTION_74
0x40078a1	    0x4881c4180900	                          add rsp, 0x918	      2447	sequencer.c	FUNCTION_74
0x40078a8	              0x5b	                                 pop rbx	      2447	sequencer.c	FUNCTION_74
0x40078a9	              0x5d	                                 pop rbp	      2447	sequencer.c	FUNCTION_74
0x40078aa	              0xc3	                                     ret	      2447	sequencer.c	FUNCTION_74
do_merge	CALL,59:FOR,1:WHILE,0:ELSE,4:DO,0:IF,19:SWITCH,0:functions,0	507
0x4008635	              0x55	                                push rbp	      2699	sequencer.c	FUNCTION_82
0x4008636	          0x4889e5	                            mov rbp, rsp	      2699	sequencer.c	FUNCTION_82
0x4008639	              0x53	                                push rbx	      2699	sequencer.c	FUNCTION_82
0x400863a	    0x4881ec680500	                          sub rsp, 0x568	      2699	sequencer.c	FUNCTION_82
0x4008641	    0x4889bda8faff	            mov qword [rbp - 0x558], rdi	      2699	sequencer.c	FUNCTION_82
0x4008648	    0x4889b5a0faff	            mov qword [rbp - 0x560], rsi	      2699	sequencer.c	FUNCTION_82
0x400864f	    0x89959cfaffff	            mov dword [rbp - 0x564], edx	      2699	sequencer.c	FUNCTION_82
0x4008655	    0x898d98faffff	            mov dword [rbp - 0x568], ecx	      2699	sequencer.c	FUNCTION_82
0x400865b	    0x4c898590faff	             mov qword [rbp - 0x570], r8	      2699	sequencer.c	FUNCTION_82
0x4008662	    0x64488b042528	                mov rax, qword fs:[0x28]	      2699	sequencer.c	FUNCTION_82
0x400866b	        0x488945e8	             mov qword [rbp - 0x18], rax	      2699	sequencer.c	FUNCTION_82
0x400866f	            0x31c0	                            xor eax, eax	      2699	sequencer.c	FUNCTION_82
0x4008671	    0x8b8598faffff	            mov eax, dword [rbp - 0x568]	      2700	sequencer.c	FUNCTION_82
0x4008677	          0x83e001	                              and eax, 1	      2700	sequencer.c	FUNCTION_82
0x400867a	            0x85c0	                           test eax, eax	      2701	sequencer.c	FUNCTION_82
0x400867c	            0x7407	                            je 0x4008685	      2701	sequencer.c	FUNCTION_82
0x400867e	      0xb812000000	                           mov eax, 0x12	      2701	sequencer.c	FUNCTION_82
0x4008683	            0xeb05	                           jmp 0x400868a	      2701	sequencer.c	FUNCTION_82
0x4008685	      0xb800000000	                              mov eax, 0	      2701	sequencer.c	FUNCTION_82
0x400868a	    0x8985c4faffff	            mov dword [rbp - 0x53c], eax	      2700	sequencer.c	FUNCTION_82
0x4008690	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	      2702	sequencer.c	FUNCTION_82
0x400869b	    0x48c78518fbff	              mov qword [rbp - 0x4e8], 0	      2702	sequencer.c	FUNCTION_82
0x40086a6	    0x48c78520fbff	              mov qword [rbp - 0x4e0], 0	      2702	sequencer.c	FUNCTION_82
0x40086b1	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	      2704	sequencer.c	FUNCTION_82
0x40086bc	      0xbe04000000	                              mov esi, 4	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x40086c1	      0xbf00000000	                              mov edi, 0	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x40086c6	      0xe800000000	                          call 0x40086cb	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x40086cb	            0x85c0	                           test eax, eax	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x40086cd	            0x790f	                           jns 0x40086de	      2710	sequencer.c	FUNCTION_82	IF_1	CALL_1
0x40086cf	    0xc785bcfaffff	    mov dword [rbp - 0x544], 0xffffffff 	      2711	sequencer.c	FUNCTION_82	IF_1
0x40086d9	      0xe9b1080000	                           jmp 0x4008f8f	      2712	sequencer.c	FUNCTION_82	IF_1
0x40086de	      0xbf00000000	                              mov edi, 0	      2715	sequencer.c	FUNCTION_82	CALL_2
0x40086e3	      0xe800000000	                          call 0x40086e8	      2715	sequencer.c	FUNCTION_82	CALL_2
0x40086e8	    0x488985f0faff	            mov qword [rbp - 0x510], rax	      2715	sequencer.c	FUNCTION_82	CALL_2
0x40086ef	    0x4883bdf0faff	              cmp qword [rbp - 0x510], 0	      2716	sequencer.c	FUNCTION_82	IF_2
0x40086f7	            0x7527	                           jne 0x4008720	      2716	sequencer.c	FUNCTION_82	IF_2
0x40086f9	      0xbf00000000	                              mov edi, 0	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x40086fe	      0xe8a47cffff	                               call sym.	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x4008703	          0x4889c7	                            mov rdi, rax	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x4008706	      0xb800000000	                              mov eax, 0	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x400870b	      0xe800000000	                          call 0x4008710	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x4008710	      0xe82b79ffff	                    call sym.const_error	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x4008715	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2717	sequencer.c	FUNCTION_82	IF_2	CALL_3
0x400871b	      0xe96f080000	                           jmp 0x4008f8f	      2718	sequencer.c	FUNCTION_82	IF_2
0x4008720	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2721	sequencer.c	FUNCTION_82
0x4008726	    0x8985b4faffff	            mov dword [rbp - 0x54c], eax	      2721	sequencer.c	FUNCTION_82
0x400872c	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2722	sequencer.c	FUNCTION_82	CALL_4
0x4008733	      0xbe00000000	                              mov esi, 0	      2722	sequencer.c	FUNCTION_82	CALL_4
0x4008738	          0x4889c7	                            mov rdi, rax	      2722	sequencer.c	FUNCTION_82	CALL_4
0x400873b	      0xe800000000	                          call 0x4008740	      2722	sequencer.c	FUNCTION_82	CALL_4
0x4008740	    0x8985c8faffff	            mov dword [rbp - 0x538], eax	      2722	sequencer.c	FUNCTION_82	CALL_4
0x4008746	    0x8b85c8faffff	            mov eax, dword [rbp - 0x538]	      2723	sequencer.c	FUNCTION_82
0x400874c	          0x4863d0	                         movsxd rdx, eax	      2723	sequencer.c	FUNCTION_82
0x400874f	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2723	sequencer.c	FUNCTION_82
0x4008756	          0x4801d0	                            add rax, rdx	      2723	sequencer.c	FUNCTION_82
0x4008759	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2723	sequencer.c	FUNCTION_82
0x4008760	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2724	sequencer.c	FUNCTION_82	CALL_5
0x4008767	      0xbe00000000	                              mov esi, 0	      2724	sequencer.c	FUNCTION_82	CALL_5
0x400876c	          0x4889c7	                            mov rdi, rax	      2724	sequencer.c	FUNCTION_82	CALL_5
0x400876f	      0xe800000000	                          call 0x4008774	      2724	sequencer.c	FUNCTION_82	CALL_5
0x4008774	    0x480185e8faff	           add qword [rbp - 0x518], rax 	      2724	sequencer.c	FUNCTION_82	CALL_5
0x400877b	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008782	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008785	            0x3c23	                            cmp al, 0x23	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008787	            0x7575	                           jne 0x40087fe	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008789	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008790	        0x4883c001	                              add rax, 1	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008794	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008797	            0x84c0	                             test al, al	      2725	sequencer.c	FUNCTION_82	IF_3
0x4008799	            0x7424	                            je 0x40087bf	      2725	sequencer.c	FUNCTION_82	IF_3
0x400879b	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087a2	        0x4883c001	                              add rax, 1	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087a6	           0xfb600	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087a9	           0xfb6c0	                           movzx eax, al	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087ac	            0x4898	                                    cdqe	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087ae	     0xfb680000000	                   movzx eax, byte [rax]	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087b5	           0xfb6c0	                           movzx eax, al	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087b8	          0x83e001	                              and eax, 1	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087bb	            0x85c0	                           test eax, eax	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087bd	            0x743f	                            je 0x40087fe	      2725	sequencer.c	FUNCTION_82	IF_3
0x40087bf	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087c6	        0x4883c001	                              add rax, 1	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087ca	      0xbe00000000	                              mov esi, 0	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087cf	          0x4889c7	                            mov rdi, rax	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087d2	      0xe800000000	                          call 0x40087d7	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087d7	        0x4883c001	                              add rax, 1	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087db	    0x480185e8faff	           add qword [rbp - 0x518], rax 	      2726	sequencer.c	FUNCTION_82	IF_3	CALL_6
0x40087e2	    0x488b95e8faff	            mov rdx, qword [rbp - 0x518]	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087e9	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087f0	          0x4829c2	                            sub rdx, rax	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087f3	          0x4889d0	                            mov rax, rdx	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087f6	    0x8985b4faffff	            mov dword [rbp - 0x54c], eax	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087fc	            0xeb41	                           jmp 0x400883f	      2727	sequencer.c	FUNCTION_82	IF_3
0x40087fe	    0x488b95e8faff	            mov rdx, qword [rbp - 0x518]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008805	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400880c	          0x4829c2	                            sub rdx, rax	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400880f	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008815	            0x4898	                                    cdqe	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008817	          0x4839c2	                            cmp rdx, rax	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400881a	            0x7d23	                           jge 0x400883f	      2728	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400881c	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008823	          0x4889c1	                            mov rcx, rax	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008826	      0xba00000000	                              mov edx, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400882b	      0xbea90a0000	                          mov esi, 0xaa9	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008830	      0xbf00000000	                              mov edi, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x4008835	      0xb800000000	                              mov eax, 0	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400883a	      0xe800000000	                          call 0x400883f	      2729	sequencer.c	FUNCTION_82	ELSE_1	IF_4
0x400883f	    0x488b8da0faff	            mov rcx, qword [rbp - 0x560]	      2731	sequencer.c	FUNCTION_82	CALL_7
0x4008846	    0x8b95c8faffff	            mov edx, dword [rbp - 0x538]	      2731	sequencer.c	FUNCTION_82	CALL_7
0x400884c	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2731	sequencer.c	FUNCTION_82	CALL_7
0x4008853	      0xbe00000000	                              mov esi, 0	      2731	sequencer.c	FUNCTION_82	CALL_7
0x4008858	          0x4889c7	                            mov rdi, rax	      2731	sequencer.c	FUNCTION_82	CALL_7
0x400885b	      0xb800000000	                              mov eax, 0	      2731	sequencer.c	FUNCTION_82	CALL_7
0x4008860	      0xe800000000	                          call 0x4008865	      2731	sequencer.c	FUNCTION_82	CALL_7
0x4008865	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2732	sequencer.c	FUNCTION_82	CALL_8
0x400886c	          0x4889c7	                            mov rdi, rax	      2732	sequencer.c	FUNCTION_82	CALL_8
0x400886f	      0xe800000000	                          call 0x4008874	      2732	sequencer.c	FUNCTION_82	CALL_8
0x4008874	    0x488985d8faff	            mov qword [rbp - 0x528], rax	      2732	sequencer.c	FUNCTION_82	CALL_8
0x400887b	    0x4883bdd8faff	              cmp qword [rbp - 0x528], 0	      2733	sequencer.c	FUNCTION_82	IF_5
0x4008883	            0x753a	                           jne 0x40088bf	      2733	sequencer.c	FUNCTION_82	IF_5
0x4008885	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x400888c	    0x41b800000000	                              mov r8d, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x4008892	      0xb900000000	                              mov ecx, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x4008897	      0xba0f000000	                            mov edx, 0xf	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x400889c	      0xbe00000000	                              mov esi, 0	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x40088a1	          0x4889c7	                            mov rdi, rax	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x40088a4	      0xe800000000	                          call 0x40088a9	      2735	sequencer.c	FUNCTION_82	IF_5	CALL_10
0x40088a9	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_11
0x40088b0	          0x4889c7	                            mov rdi, rax	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_11
0x40088b3	      0xe800000000	                          call 0x40088b8	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_11
0x40088b8	    0x488985d8faff	            mov qword [rbp - 0x528], rax	      2736	sequencer.c	FUNCTION_82	IF_5	CALL_11
0x40088bf	    0x4883bdd8faff	              cmp qword [rbp - 0x528], 0	      2739	sequencer.c	FUNCTION_82	IF_6
0x40088c7	            0x7531	                           jne 0x40088fa	      2739	sequencer.c	FUNCTION_82	IF_6
0x40088c9	    0x488b9d20fbff	            mov rbx, qword [rbp - 0x4e0]	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088d0	      0xbf00000000	                              mov edi, 0	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088d5	      0xe8cd7affff	                               call sym.	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088da	          0x4889de	                            mov rsi, rbx	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088dd	          0x4889c7	                            mov rdi, rax	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088e0	      0xb800000000	                              mov eax, 0	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088e5	      0xe800000000	                          call 0x40088ea	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088ea	      0xe85177ffff	                    call sym.const_error	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088ef	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2740	sequencer.c	FUNCTION_82	IF_6	CALL_12
0x40088f5	      0xe995060000	                           jmp 0x4008f8f	      2741	sequencer.c	FUNCTION_82	IF_6
0x40088fa	    0x4883bda8faff	              cmp qword [rbp - 0x558], 0	      2744	sequencer.c	FUNCTION_82	IF_7
0x4008902	     0xf8420010000	                            je 0x4008a28	      2744	sequencer.c	FUNCTION_82	IF_7
0x4008908	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_13
0x400890f	      0xbe00000000	                              mov esi, 0	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_13
0x4008914	          0x4889c7	                            mov rdi, rax	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_13
0x4008917	      0xe800000000	                          call 0x400891c	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_13
0x400891c	    0x488985f8faff	            mov qword [rbp - 0x508], rax	      2745	sequencer.c	FUNCTION_82	IF_7	CALL_13
0x4008923	    0x4883bdf8faff	              cmp qword [rbp - 0x508], 0	      2749	sequencer.c	FUNCTION_82	IF_7	IF_8
0x400892b	            0x7540	                           jne 0x400896d	      2749	sequencer.c	FUNCTION_82	IF_7	IF_8
0x400892d	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008934	        0x4883c004	                              add rax, 4	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008938	          0x4889c7	                            mov rdi, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x400893b	      0xe800000000	                          call 0x4008940	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008940	          0x4889c3	                            mov rbx, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008943	      0xbf00000000	                              mov edi, 0	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008948	      0xe85a7affff	                               call sym.	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x400894d	          0x4889de	                            mov rsi, rbx	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008950	          0x4889c7	                            mov rdi, rax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008953	      0xb800000000	                              mov eax, 0	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008958	      0xe800000000	                          call 0x400895d	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x400895d	      0xe8de76ffff	                    call sym.const_error	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008962	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2750	sequencer.c	FUNCTION_82	IF_7	IF_8	CALL_14
0x4008968	      0xe922060000	                           jmp 0x4008f8f	      2752	sequencer.c	FUNCTION_82	IF_7	IF_8
0x400896d	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_16
0x4008974	          0x4889c7	                            mov rdi, rax	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_16
0x4008977	      0xe86a94ffff	            call sym.write_author_script	      2754	sequencer.c	FUNCTION_82	IF_7	CALL_16
0x400897c	    0x488d9530fbff	                  lea rdx, [rbp - 0x4d0]	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x4008983	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x400898a	          0x4889d6	                            mov rsi, rdx	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x400898d	          0x4889c7	                            mov rdi, rax	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x4008990	      0xe800000000	                          call 0x4008995	      2755	sequencer.c	FUNCTION_82	IF_7	CALL_17
0x4008995	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_18
0x400899c	          0x4889c7	                            mov rdi, rax	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_18
0x400899f	      0xe800000000	                          call 0x40089a4	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_18
0x40089a4	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	      2756	sequencer.c	FUNCTION_82	IF_7	CALL_18
0x40089aa	      0xe800000000	                          call 0x40089af	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089af	          0x4889c2	                            mov rdx, rax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089b2	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089b8	          0x4863f0	                         movsxd rsi, eax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089bb	    0x488b8530fbff	            mov rax, qword [rbp - 0x4d0]	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089c2	      0xb900000000	                              mov ecx, 0	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089c7	          0x4889c7	                            mov rdi, rax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089ca	      0xe81689ffff	                  call sym.write_message	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089cf	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2757	sequencer.c	FUNCTION_82	IF_7	CALL_20
0x40089d5	    0x488b95f8faff	            mov rdx, qword [rbp - 0x508]	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x40089dc	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x40089e3	          0x4889d6	                            mov rsi, rdx	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x40089e6	          0x4889c7	                            mov rdi, rax	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x40089e9	      0xe800000000	                          call 0x40089ee	      2758	sequencer.c	FUNCTION_82	IF_7	CALL_21
0x40089ee	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2759	sequencer.c	FUNCTION_82	IF_7	IF_9
0x40089f5	     0xf8483010000	                            je 0x4008b7e	      2759	sequencer.c	FUNCTION_82	IF_7	IF_9
0x40089fb	      0xe800000000	                          call 0x4008a00	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a00	          0x4889c3	                            mov rbx, rax	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a03	      0xbf00000000	                              mov edi, 0	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a08	      0xe89a79ffff	                               call sym.	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a0d	          0x4889de	                            mov rsi, rbx	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a10	          0x4889c7	                            mov rdi, rax	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a13	      0xb800000000	                              mov eax, 0	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a18	      0xe800000000	                          call 0x4008a1d	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a1d	      0xe81e76ffff	                    call sym.const_error	      2760	sequencer.c	FUNCTION_82	IF_7	IF_9	CALL_22
0x4008a22	              0x90	                                     nop	      2762	sequencer.c	FUNCTION_82	IF_7	IF_9
0x4008a23	      0xe967050000	                           jmp 0x4008f8f	      2762	sequencer.c	FUNCTION_82	IF_7	IF_9
0x4008a28	    0x48c78530fbff	              mov qword [rbp - 0x4d0], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x4008a33	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x4008a3e	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	      2765	sequencer.c	FUNCTION_82	ELSE_2
0x4008a49	      0xbf00000000	                              mov edi, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a4e	      0xe800000000	                          call 0x4008a53	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a53	          0x4889c2	                            mov rdx, rax	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a56	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a5d	      0xbe00000000	                              mov esi, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a62	          0x4889c7	                            mov rdi, rax	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a65	      0xb800000000	                              mov eax, 0	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a6a	      0xe800000000	                          call 0x4008a6f	      2768	sequencer.c	FUNCTION_82	ELSE_2	CALL_25
0x4008a6f	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_26
0x4008a76	          0x4889c7	                            mov rdi, rax	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_26
0x4008a79	      0xe86893ffff	            call sym.write_author_script	      2769	sequencer.c	FUNCTION_82	ELSE_2	CALL_26
0x4008a7e	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2770	sequencer.c	FUNCTION_82	ELSE_2
0x4008a85	      0xbe00000000	                              mov esi, 0	      2770	sequencer.c	FUNCTION_82	ELSE_2
0x4008a8a	          0x4889c7	                            mov rdi, rax	      2770	sequencer.c	FUNCTION_82	ELSE_2
0x4008a8d	      0xe8db76ffff	                  call sym.strbuf_setlen	      2770	sequencer.c	FUNCTION_82	ELSE_2
0x4008a92	    0x8b85b4faffff	            mov eax, dword [rbp - 0x54c]	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008a98	    0x3b859cfaffff	            cmp eax, dword [rbp - 0x564]	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008a9e	            0x7d2e	                           jge 0x4008ace	      2772	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008aa0	    0x8b85b4faffff	            mov eax, dword [rbp - 0x54c]	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008aa6	          0x4863d0	                         movsxd rdx, eax	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008aa9	    0x488b85a0faff	            mov rax, qword [rbp - 0x560]	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008ab0	          0x4801d0	                            add rax, rdx	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008ab3	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2773	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008aba	    0x8b859cfaffff	            mov eax, dword [rbp - 0x564]	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008ac0	    0x2b85b4faffff	            sub eax, dword [rbp - 0x54c]	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008ac6	    0x8985c0faffff	            mov dword [rbp - 0x540], eax	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008acc	            0xeb41	                           jmp 0x4008b0f	      2774	sequencer.c	FUNCTION_82	ELSE_2	IF_10
0x4008ace	    0x488b8da0faff	            mov rcx, qword [rbp - 0x560]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008ad5	    0x8b95c8faffff	            mov edx, dword [rbp - 0x538]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008adb	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008ae2	      0xbe00000000	                              mov esi, 0	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008ae7	          0x4889c7	                            mov rdi, rax	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008aea	      0xb800000000	                              mov eax, 0	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008aef	      0xe800000000	                          call 0x4008af4	      2776	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3	CALL_27
0x4008af4	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	      2778	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x4008afb	    0x488985e8faff	            mov qword [rbp - 0x518], rax	      2778	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x4008b02	    0x488b8538fbff	            mov rax, qword [rbp - 0x4c8]	      2779	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x4008b09	    0x8985c0faffff	            mov dword [rbp - 0x540], eax	      2779	sequencer.c	FUNCTION_82	ELSE_2	ELSE_3
0x4008b0f	      0xe800000000	                          call 0x4008b14	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b14	          0x4889c2	                            mov rdx, rax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b17	    0x8b85c0faffff	            mov eax, dword [rbp - 0x540]	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b1d	          0x4863f0	                         movsxd rsi, eax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b20	    0x488b85e8faff	            mov rax, qword [rbp - 0x518]	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b27	      0xb900000000	                              mov ecx, 0	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b2c	          0x4889c7	                            mov rdi, rax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b2f	      0xe8b187ffff	                  call sym.write_message	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b34	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2782	sequencer.c	FUNCTION_82	ELSE_2	CALL_29
0x4008b3a	    0x488d8530fbff	                  lea rax, [rbp - 0x4d0]	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_30
0x4008b41	          0x4889c7	                            mov rdi, rax	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_30
0x4008b44	      0xe800000000	                          call 0x4008b49	      2783	sequencer.c	FUNCTION_82	ELSE_2	CALL_30
0x4008b49	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2784	sequencer.c	FUNCTION_82	ELSE_2	IF_11
0x4008b50	            0x742c	                            je 0x4008b7e	      2784	sequencer.c	FUNCTION_82	ELSE_2	IF_11
0x4008b52	      0xe800000000	                          call 0x4008b57	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b57	          0x4889c3	                            mov rbx, rax	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b5a	      0xbf00000000	                              mov edi, 0	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b5f	      0xe84378ffff	                               call sym.	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b64	          0x4889de	                            mov rsi, rbx	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b67	          0x4889c7	                            mov rdi, rax	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b6a	      0xb800000000	                              mov eax, 0	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b6f	      0xe800000000	                          call 0x4008b74	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b74	      0xe8c774ffff	                    call sym.const_error	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b79	      0xe911040000	                           jmp 0x4008f8f	      2785	sequencer.c	FUNCTION_82	ELSE_2	IF_11	CALL_31
0x4008b7e	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2795	sequencer.c	FUNCTION_82
0x4008b85	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2795	sequencer.c	FUNCTION_82
0x4008b88	            0x85c0	                           test eax, eax	      2795	sequencer.c	FUNCTION_82
0x4008b8a	            0x744d	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x4008b8c	    0x4883bda8faff	              cmp qword [rbp - 0x558], 0	      2795	sequencer.c	FUNCTION_82
0x4008b94	            0x7443	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x4008b96	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2795	sequencer.c	FUNCTION_82
0x4008b9d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2795	sequencer.c	FUNCTION_82
0x4008ba1	          0x4885c0	                           test rax, rax	      2795	sequencer.c	FUNCTION_82
0x4008ba4	            0x7433	                            je 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x4008ba6	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2797	sequencer.c	FUNCTION_82
0x4008bad	        0x488d5004	                      lea rdx, [rax + 4]	      2797	sequencer.c	FUNCTION_82
0x4008bb1	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bb8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bbc	          0x488b00	                    mov rax, qword [rax]	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bbf	        0x4883c004	                              add rax, 4	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bc3	          0x4889d6	                            mov rsi, rdx	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bc6	          0x4889c7	                            mov rdi, rax	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bc9	      0xe82f78ffff	                         call sym.oidcmp	      2796	sequencer.c	FUNCTION_82	CALL_33
0x4008bce	            0x85c0	                           test eax, eax	      2795	sequencer.c	FUNCTION_82
0x4008bd0	            0x7507	                           jne 0x4008bd9	      2795	sequencer.c	FUNCTION_82
0x4008bd2	      0xb801000000	                              mov eax, 1	      2795	sequencer.c	FUNCTION_82
0x4008bd7	            0xeb05	                           jmp 0x4008bde	      2795	sequencer.c	FUNCTION_82
0x4008bd9	      0xb800000000	                              mov eax, 0	      2795	sequencer.c	FUNCTION_82
0x4008bde	    0x8985b8faffff	            mov dword [rbp - 0x548], eax	      2795	sequencer.c	FUNCTION_82
0x4008be4	    0x83bdb8faffff	              cmp dword [rbp - 0x548], 0	      2803	sequencer.c	FUNCTION_82	IF_12
0x4008beb	            0x7462	                            je 0x4008c4f	      2803	sequencer.c	FUNCTION_82	IF_12
0x4008bed	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2804	sequencer.c	FUNCTION_82	IF_12
0x4008bf4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2804	sequencer.c	FUNCTION_82	IF_12
0x4008bf8	        0x488b4008	                mov rax, qword [rax + 8]	      2804	sequencer.c	FUNCTION_82	IF_12
0x4008bfc	    0x48898500fbff	            mov qword [rbp - 0x500], rax	      2804	sequencer.c	FUNCTION_82	IF_12
0x4008c03	    0x4883bd00fbff	              cmp qword [rbp - 0x500], 0	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c0b	            0x7442	                            je 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c0d	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c14	        0x488b4008	                mov rax, qword [rax + 8]	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c18	          0x4885c0	                           test rax, rax	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c1b	            0x7532	                           jne 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c1d	    0x488b8500fbff	            mov rax, qword [rbp - 0x500]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c24	          0x488b00	                    mov rax, qword [rax]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c27	        0x488d5004	                      lea rdx, [rax + 4]	      2808	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c2b	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_34
0x4008c32	        0x4883c004	                              add rax, 4	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_34
0x4008c36	          0x4889d6	                            mov rsi, rdx	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_34
0x4008c39	          0x4889c7	                            mov rdi, rax	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_34
0x4008c3c	      0xe8bc77ffff	                         call sym.oidcmp	      2807	sequencer.c	FUNCTION_82	IF_12	IF_13	CALL_34
0x4008c41	            0x85c0	                           test eax, eax	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c43	            0x740a	                            je 0x4008c4f	      2806	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c45	    0xc785b8faffff	              mov dword [rbp - 0x548], 0	      2809	sequencer.c	FUNCTION_82	IF_12	IF_13
0x4008c4f	    0x83bdb8faffff	              cmp dword [rbp - 0x548], 0	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c56	     0xf849f000000	                            je 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c5c	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c63	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c67	        0x488b4008	                mov rax, qword [rax + 8]	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c6b	          0x4885c0	                           test rax, rax	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c6e	     0xf8487000000	                            je 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c74	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008c7b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008c7f	        0x488b4008	                mov rax, qword [rax + 8]	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008c83	        0x488b4008	                mov rax, qword [rax + 8]	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008c87	          0x4885c0	                           test rax, rax	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c8a	            0x756f	                           jne 0x4008cfb	      2812	sequencer.c	FUNCTION_82	IF_14
0x4008c8c	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2815	sequencer.c	FUNCTION_82	IF_14
0x4008c93	        0x488d5004	                      lea rdx, [rax + 4]	      2815	sequencer.c	FUNCTION_82	IF_14
0x4008c97	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008c9e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008ca2	        0x488b4008	                mov rax, qword [rax + 8]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008ca6	          0x488b00	                    mov rax, qword [rax]	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008ca9	        0x4883c004	                              add rax, 4	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008cad	          0x4889d6	                            mov rsi, rdx	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008cb0	          0x4889c7	                            mov rdi, rax	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008cb3	      0xe84577ffff	                         call sym.oidcmp	      2814	sequencer.c	FUNCTION_82	IF_14	CALL_35
0x4008cb8	            0x85c0	                           test eax, eax	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008cba	            0x753f	                           jne 0x4008cfb	      2813	sequencer.c	FUNCTION_82	IF_14
0x4008cbc	      0xbf00000000	                              mov edi, 0	      2816	sequencer.c	FUNCTION_82	IF_14	CALL_36
0x4008cc1	      0xe82678ffff	             call sym.rollback_lock_file	      2816	sequencer.c	FUNCTION_82	IF_14	CALL_36
0x4008cc6	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2818	sequencer.c	FUNCTION_82	IF_14
0x4008ccd	        0x488d7004	                      lea rsi, [rax + 4]	      2818	sequencer.c	FUNCTION_82	IF_14
0x4008cd1	    0x488b85a8faff	            mov rax, qword [rbp - 0x558]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008cd8	        0x488d7804	                      lea rdi, [rax + 4]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008cdc	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008ce3	          0x4889c1	                            mov rcx, rax	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008ce6	      0xba00000000	                              mov edx, 0	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008ceb	      0xe8148affff	                call sym.fast_forward_to	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008cf0	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2817	sequencer.c	FUNCTION_82	IF_14	CALL_37
0x4008cf6	      0xe994020000	                           jmp 0x4008f8f	      2819	sequencer.c	FUNCTION_82	IF_14
0x4008cfb	      0xe800000000	                          call 0x4008d00	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d00	          0x4889c3	                            mov rbx, rax	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d03	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d0a	        0x4883c004	                              add rax, 4	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d0e	          0x4889c7	                            mov rdi, rax	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d11	      0xe800000000	                          call 0x4008d16	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d16	      0xb900000000	                              mov ecx, 0	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d1b	          0x4889da	                            mov rdx, rbx	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d1e	      0xbe28000000	                           mov esi, 0x28	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d23	          0x4889c7	                            mov rdi, rax	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d26	      0xe8ba85ffff	                  call sym.write_message	      2822	sequencer.c	FUNCTION_82	CALL_39
0x4008d2b	      0xe800000000	                          call 0x4008d30	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d30	      0xb900000000	                              mov ecx, 0	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d35	          0x4889c2	                            mov rdx, rax	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d38	      0xbe05000000	                              mov esi, 5	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d3d	      0xbf00000000	                              mov edi, 0	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d42	      0xe89e85ffff	                  call sym.write_message	      2824	sequencer.c	FUNCTION_82	CALL_42
0x4008d47	    0x488b95d8faff	            mov rdx, qword [rbp - 0x528]	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d4e	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d55	          0x4889d6	                            mov rsi, rdx	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d58	          0x4889c7	                            mov rdi, rax	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d5b	      0xe800000000	                          call 0x4008d60	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d60	    0x48898508fbff	            mov qword [rbp - 0x4f8], rax	      2826	sequencer.c	FUNCTION_82	CALL_43
0x4008d67	    0x4883bd08fbff	              cmp qword [rbp - 0x4f8], 0	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d6f	            0x7437	                            je 0x4008da8	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d71	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2828	sequencer.c	FUNCTION_82	IF_15
0x4008d78	          0x488b00	                    mov rax, qword [rax]	      2828	sequencer.c	FUNCTION_82	IF_15
0x4008d7b	        0x488d5004	                      lea rdx, [rax + 4]	      2828	sequencer.c	FUNCTION_82	IF_15
0x4008d7f	    0x488b85d8faff	            mov rax, qword [rbp - 0x528]	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d86	        0x4883c004	                              add rax, 4	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d8a	          0x4889d6	                            mov rsi, rdx	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d8d	          0x4889c7	                            mov rdi, rax	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d90	      0xe86876ffff	                         call sym.oidcmp	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d95	            0x85c0	                           test eax, eax	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d97	            0x750f	                           jne 0x4008da8	      2827	sequencer.c	FUNCTION_82	IF_15	CALL_44
0x4008d99	    0xc785bcfaffff	              mov dword [rbp - 0x544], 0	      2829	sequencer.c	FUNCTION_82	IF_15
0x4008da3	      0xe9e7010000	                           jmp 0x4008f8f	      2831	sequencer.c	FUNCTION_82	IF_15
0x4008da8	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008daf	    0x488985e0faff	            mov qword [rbp - 0x520], rax	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008db6	            0xeb2e	                           jmp 0x4008de6	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008db8	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dbf	          0x488b00	                    mov rax, qword [rax]	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dc2	    0x488d95d0faff	                  lea rdx, [rbp - 0x530]	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dc9	          0x4889d6	                            mov rsi, rdx	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dcc	          0x4889c7	                            mov rdi, rax	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dcf	      0xe800000000	                          call 0x4008dd4	      2835	sequencer.c	FUNCTION_82	CALL_45
0x4008dd4	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008ddb	        0x488b4008	                mov rax, qword [rax + 8]	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008ddf	    0x488985e0faff	            mov qword [rbp - 0x520], rax	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008de6	    0x4883bde0faff	              cmp qword [rbp - 0x520], 0	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008dee	            0x75c8	                           jne 0x4008db8	      2834	sequencer.c	FUNCTION_82	FOR_1
0x4008df0	    0x488b8508fbff	            mov rax, qword [rbp - 0x4f8]	      2836	sequencer.c	FUNCTION_82	CALL_46
0x4008df7	          0x4889c7	                            mov rdi, rax	      2836	sequencer.c	FUNCTION_82	CALL_46
0x4008dfa	      0xe800000000	                          call 0x4008dff	      2836	sequencer.c	FUNCTION_82	CALL_46
0x4008dff	      0xbf00000000	                              mov edi, 0	      2838	sequencer.c	FUNCTION_82
0x4008e04	      0xe800000000	                          call 0x4008e09	      2838	sequencer.c	FUNCTION_82
0x4008e09	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2839	sequencer.c	FUNCTION_82	CALL_47
0x4008e10	          0x4889c7	                            mov rdi, rax	      2839	sequencer.c	FUNCTION_82	CALL_47
0x4008e13	      0xe800000000	                          call 0x4008e18	      2839	sequencer.c	FUNCTION_82	CALL_47
0x4008e18	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 0	      2840	sequencer.c	FUNCTION_82
0x4008e23	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	      2841	sequencer.c	FUNCTION_82
0x4008e2a	    0x48898560fbff	            mov qword [rbp - 0x4a0], rax	      2841	sequencer.c	FUNCTION_82
0x4008e31	    0xc78578fbffff	              mov dword [rbp - 0x488], 2	      2842	sequencer.c	FUNCTION_82
0x4008e3b	    0x488b8dd0faff	            mov rcx, qword [rbp - 0x530]	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e42	    0x488dbd30fbff	                  lea rdi, [rbp - 0x4d0]	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e49	    0x488b95d8faff	            mov rdx, qword [rbp - 0x528]	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e50	    0x488bb5f0faff	            mov rsi, qword [rbp - 0x510]	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e57	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e5e	          0x4989f8	                             mov r8, rdi	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e61	          0x4889c7	                            mov rdi, rax	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e64	      0xe800000000	                          call 0x4008e69	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e69	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2844	sequencer.c	FUNCTION_82	CALL_48
0x4008e6f	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2845	sequencer.c	FUNCTION_82	IF_16
0x4008e76	            0x7f19	                            jg 0x4008e91	      2845	sequencer.c	FUNCTION_82	IF_16
0x4008e78	    0x488b15000000	            mov rdx, qword [0x04008e7f] 	      2846	sequencer.c	FUNCTION_82	CALL_49
0x4008e7f	    0x488b85b8fbff	            mov rax, qword [rbp - 0x448]	      2846	sequencer.c	FUNCTION_82	CALL_49
0x4008e86	          0x4889d6	                            mov rsi, rdx	      2846	sequencer.c	FUNCTION_82	CALL_49
0x4008e89	          0x4889c7	                            mov rdi, rax	      2846	sequencer.c	FUNCTION_82	CALL_49
0x4008e8c	      0xe800000000	                          call 0x4008e91	      2846	sequencer.c	FUNCTION_82	CALL_49
0x4008e91	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	      2847	sequencer.c	FUNCTION_82	CALL_50
0x4008e98	        0x4883c058	                           add rax, 0x58	      2847	sequencer.c	FUNCTION_82	CALL_50
0x4008e9c	          0x4889c7	                            mov rdi, rax	      2847	sequencer.c	FUNCTION_82	CALL_50
0x4008e9f	      0xe800000000	                          call 0x4008ea4	      2847	sequencer.c	FUNCTION_82	CALL_50
0x4008ea4	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2848	sequencer.c	FUNCTION_82	IF_17
0x4008eab	            0x7933	                           jns 0x4008ee0	      2848	sequencer.c	FUNCTION_82	IF_17
0x4008ead	      0xbf00000000	                              mov edi, 0	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008eb2	      0xe8f074ffff	                               call sym.	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008eb7	          0x4889c1	                            mov rcx, rax	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008eba	    0x488b95a0faff	            mov rdx, qword [rbp - 0x560]	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ec1	    0x8b85c8faffff	            mov eax, dword [rbp - 0x538]	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ec7	            0x89c6	                            mov esi, eax	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ec9	          0x4889cf	                            mov rdi, rcx	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ecc	      0xb800000000	                              mov eax, 0	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ed1	      0xe800000000	                          call 0x4008ed6	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008ed6	      0xe86571ffff	                    call sym.const_error	      2849	sequencer.c	FUNCTION_82	IF_17	CALL_51
0x4008edb	      0xe9af000000	                           jmp 0x4008f8f	      2851	sequencer.c	FUNCTION_82	IF_17
0x4008ee0	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2861	sequencer.c	FUNCTION_82
0x4008ee7	           0xf94c0	                                 sete al	      2861	sequencer.c	FUNCTION_82
0x4008eea	           0xfb6c0	                           movzx eax, al	      2861	sequencer.c	FUNCTION_82
0x4008eed	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2861	sequencer.c	FUNCTION_82
0x4008ef3	    0x8b0500000000	            mov eax, dword [0x04008ef9] 	      2863	sequencer.c	FUNCTION_82	IF_18
0x4008ef9	            0x85c0	                           test eax, eax	      2863	sequencer.c	FUNCTION_82	IF_18
0x4008efb	            0x743c	                            je 0x4008f39	      2863	sequencer.c	FUNCTION_82	IF_18
0x4008efd	      0xba01000000	                              mov edx, 1	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_52
0x4008f02	      0xbe00000000	                              mov esi, 0	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_52
0x4008f07	      0xbf00000000	                              mov edi, 0	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_52
0x4008f0c	      0xe800000000	                          call 0x4008f11	      2864	sequencer.c	FUNCTION_82	IF_18	CALL_52
0x4008f11	            0x85c0	                           test eax, eax	      2863	sequencer.c	FUNCTION_82	IF_18
0x4008f13	            0x7424	                            je 0x4008f39	      2863	sequencer.c	FUNCTION_82	IF_18
0x4008f15	      0xbf00000000	                              mov edi, 0	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f1a	      0xe88874ffff	                               call sym.	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f1f	          0x4889c7	                            mov rdi, rax	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f22	      0xb800000000	                              mov eax, 0	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f27	      0xe800000000	                          call 0x4008f2c	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f2c	      0xe80f71ffff	                    call sym.const_error	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f31	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2865	sequencer.c	FUNCTION_82	IF_18	CALL_53
0x4008f37	            0xeb56	                           jmp 0x4008f8f	      2866	sequencer.c	FUNCTION_82	IF_18
0x4008f39	      0xbf00000000	                              mov edi, 0	      2869	sequencer.c	FUNCTION_82	CALL_54
0x4008f3e	      0xe8a975ffff	             call sym.rollback_lock_file	      2869	sequencer.c	FUNCTION_82	CALL_54
0x4008f43	    0x83bdbcfaffff	              cmp dword [rbp - 0x544], 0	      2870	sequencer.c	FUNCTION_82	IF_19
0x4008f4a	            0x7413	                            je 0x4008f5f	      2870	sequencer.c	FUNCTION_82	IF_19
0x4008f4c	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2871	sequencer.c	FUNCTION_82	CALL_55
0x4008f53	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2871	sequencer.c	FUNCTION_82	CALL_55
0x4008f56	            0x89c7	                            mov edi, eax	      2871	sequencer.c	FUNCTION_82	CALL_55
0x4008f58	      0xe800000000	                          call 0x4008f5d	      2871	sequencer.c	FUNCTION_82	CALL_55
0x4008f5d	            0xeb30	                           jmp 0x4008f8f	      2871	sequencer.c	FUNCTION_82	CALL_55
0x4008f5f	    0x8b9dc4faffff	            mov ebx, dword [rbp - 0x53c]	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f65	      0xe800000000	                          call 0x4008f6a	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f6a	          0x4889c1	                            mov rcx, rax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f6d	    0x488b8590faff	            mov rax, qword [rbp - 0x570]	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f74	            0x89da	                            mov edx, ebx	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f76	          0x4889c6	                            mov rsi, rax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f79	          0x4889cf	                            mov rdi, rcx	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f7c	      0xe83893ffff	                 call sym.run_git_commit	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f81	            0x85c0	                           test eax, eax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f83	           0xf95c0	                                setne al	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f86	           0xfb6c0	                           movzx eax, al	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f89	    0x8985bcfaffff	            mov dword [rbp - 0x544], eax	      2878	sequencer.c	FUNCTION_82	ELSE_4	CALL_57
0x4008f8f	    0x488d8510fbff	                  lea rax, [rbp - 0x4f0]	      2882	sequencer.c	FUNCTION_82	CALL_58
0x4008f96	          0x4889c7	                            mov rdi, rax	      2882	sequencer.c	FUNCTION_82	CALL_58
0x4008f99	      0xe800000000	                          call 0x4008f9e	      2882	sequencer.c	FUNCTION_82	CALL_58
0x4008f9e	      0xbf00000000	                              mov edi, 0	      2883	sequencer.c	FUNCTION_82	CALL_59
0x4008fa3	      0xe84475ffff	             call sym.rollback_lock_file	      2883	sequencer.c	FUNCTION_82	CALL_59
0x4008fa8	    0x8b85bcfaffff	            mov eax, dword [rbp - 0x544]	      2884	sequencer.c	FUNCTION_82
0x4008fae	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2885	sequencer.c	FUNCTION_82
0x4008fb2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2885	sequencer.c	FUNCTION_82
0x4008fbb	            0x7405	                            je 0x4008fc2	      2885	sequencer.c	FUNCTION_82
0x4008fbd	      0xe800000000	                          call 0x4008fc2	      2885	sequencer.c	FUNCTION_82
0x4008fc2	    0x4881c4680500	                          add rsp, 0x568	      2885	sequencer.c	FUNCTION_82
0x4008fc9	              0x5b	                                 pop rbx	      2885	sequencer.c	FUNCTION_82
0x4008fca	              0x5d	                                 pop rbp	      2885	sequencer.c	FUNCTION_82
0x4008fcb	              0xc3	                                     ret	      2885	sequencer.c	FUNCTION_82
command_to_char	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	19
0x4003c43	              0x55	                                push rbp	      1350	sequencer.c	FUNCTION_42
0x4003c44	          0x4889e5	                            mov rbp, rsp	      1350	sequencer.c	FUNCTION_42
0x4003c47	          0x897dfc	                mov dword [rbp - 4], edi	      1350	sequencer.c	FUNCTION_42
0x4003c4a	        0x837dfc0b	                cmp dword [rbp - 4], 0xb	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c4e	            0x7726	                            ja 0x4003c76	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c50	          0x8b45fc	                mov eax, dword [rbp - 4]	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c53	        0x48c1e004	                              shl rax, 4	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c57	    0x480500000000	                              add rax, 0	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c5d	           0xfb600	                   movzx eax, byte [rax]	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c60	            0x84c0	                             test al, al	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c62	            0x7412	                            je 0x4003c76	      1351	sequencer.c	FUNCTION_42	IF_1
0x4003c64	          0x8b45fc	                mov eax, dword [rbp - 4]	      1352	sequencer.c	FUNCTION_42	IF_1
0x4003c67	        0x48c1e004	                              shl rax, 4	      1352	sequencer.c	FUNCTION_42	IF_1
0x4003c6b	    0x480500000000	                              add rax, 0	      1352	sequencer.c	FUNCTION_42	IF_1
0x4003c71	           0xfb600	                   movzx eax, byte [rax]	      1352	sequencer.c	FUNCTION_42	IF_1
0x4003c74	            0xeb07	                           jmp 0x4003c7d	      1352	sequencer.c	FUNCTION_42	IF_1
0x4003c76	     0xfb605000000	           movzx eax, byte [0x04003c7d] 	      1353	sequencer.c	FUNCTION_42
0x4003c7d	              0x5d	                                 pop rbp	      1354	sequencer.c	FUNCTION_42
0x4003c7e	              0xc3	                                     ret	      1354	sequencer.c	FUNCTION_42
read_oneliner	CALL,4:FOR,0:WHILE,0:ELSE,0:DO,0:IF,5:SWITCH,0:functions,0	93
0x4001460	              0x55	                                push rbp	       401	sequencer.c	FUNCTION_15
0x4001461	          0x4889e5	                            mov rbp, rsp	       401	sequencer.c	FUNCTION_15
0x4001464	        0x4883ec30	                           sub rsp, 0x30	       401	sequencer.c	FUNCTION_15
0x4001468	        0x48897de8	             mov qword [rbp - 0x18], rdi	       401	sequencer.c	FUNCTION_15
0x400146c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       401	sequencer.c	FUNCTION_15
0x4001470	          0x8955dc	             mov dword [rbp - 0x24], edx	       401	sequencer.c	FUNCTION_15
0x4001473	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	sequencer.c	FUNCTION_15
0x4001477	        0x488b4008	                mov rax, qword [rax + 8]	       402	sequencer.c	FUNCTION_15
0x400147b	          0x8945fc	                mov dword [rbp - 4], eax	       402	sequencer.c	FUNCTION_15
0x400147e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4001482	          0x4889c7	                            mov rdi, rax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4001485	      0xe800000000	                          call 0x400148a	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400148a	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400148c	            0x750a	                           jne 0x4001498	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400148e	      0xb800000000	                              mov eax, 0	       405	sequencer.c	FUNCTION_15	IF_1
0x4001493	      0xe90e010000	                           jmp 0x40015a6	       405	sequencer.c	FUNCTION_15	IF_1
0x4001498	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400149c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014a0	      0xba00000000	                              mov edx, 0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014a5	          0x4889ce	                            mov rsi, rcx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014a8	          0x4889c7	                            mov rdi, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014ab	      0xe800000000	                          call 0x40014b0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014b0	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014b3	            0x792b	                           jns 0x40014e0	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x40014b5	      0xbf00000000	                              mov edi, 0	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014ba	      0xe8e8eeffff	                               call sym.	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014bf	          0x4889c2	                            mov rdx, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014c6	          0x4889c6	                            mov rsi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014c9	          0x4889d7	                            mov rdi, rdx	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014cc	      0xb800000000	                              mov eax, 0	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014d1	      0xe800000000	                          call 0x40014d6	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x40014d6	      0xb800000000	                              mov eax, 0	       409	sequencer.c	FUNCTION_15	IF_2
0x40014db	      0xe9c6000000	                           jmp 0x40015a6	       409	sequencer.c	FUNCTION_15	IF_2
0x40014e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x40014e4	        0x488b5008	                mov rdx, qword [rax + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x40014e8	          0x8b45fc	                mov eax, dword [rbp - 4]	       412	sequencer.c	FUNCTION_15	IF_3
0x40014eb	            0x4898	                                    cdqe	       412	sequencer.c	FUNCTION_15	IF_3
0x40014ed	          0x4839c2	                            cmp rdx, rax	       412	sequencer.c	FUNCTION_15	IF_3
0x40014f0	     0xf868c000000	                           jbe 0x4001582	       412	sequencer.c	FUNCTION_15	IF_3
0x40014f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x40014fa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       412	sequencer.c	FUNCTION_15	IF_3
0x40014fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	sequencer.c	FUNCTION_15	IF_3
0x4001502	        0x488b4008	                mov rax, qword [rax + 8]	       412	sequencer.c	FUNCTION_15	IF_3
0x4001506	        0x4883e801	                              sub rax, 1	       412	sequencer.c	FUNCTION_15	IF_3
0x400150a	          0x4801d0	                            add rax, rdx	       412	sequencer.c	FUNCTION_15	IF_3
0x400150d	           0xfb600	                   movzx eax, byte [rax]	       412	sequencer.c	FUNCTION_15	IF_3
0x4001510	            0x3c0a	                             cmp al, 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4001512	            0x756e	                           jne 0x4001582	       412	sequencer.c	FUNCTION_15	IF_3
0x4001514	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001518	        0x488b4008	                mov rax, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400151c	        0x488d50ff	                      lea rdx, [rax - 1]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001520	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001524	        0x48895008	                mov qword [rax + 8], rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001528	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400152c	        0x488b5008	                mov rdx, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001530	          0x8b45fc	                mov eax, dword [rbp - 4]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001533	            0x4898	                                    cdqe	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001535	          0x4839c2	                            cmp rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001538	            0x7632	                           jbe 0x400156c	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400153a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400153e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001542	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001546	        0x488b4008	                mov rax, qword [rax + 8]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400154a	        0x4883e801	                              sub rax, 1	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400154e	          0x4801d0	                            add rax, rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001551	           0xfb600	                   movzx eax, byte [rax]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001554	            0x3c0d	                             cmp al, 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001556	            0x7514	                           jne 0x400156c	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001558	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400155c	        0x488b4008	                mov rax, qword [rax + 8]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001560	        0x488d50ff	                      lea rdx, [rax - 1]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4001568	        0x48895008	                mov qword [rax + 8], rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400156c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	sequencer.c	FUNCTION_15	IF_3
0x4001570	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       415	sequencer.c	FUNCTION_15	IF_3
0x4001574	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	sequencer.c	FUNCTION_15	IF_3
0x4001578	        0x488b4008	                mov rax, qword [rax + 8]	       415	sequencer.c	FUNCTION_15	IF_3
0x400157c	          0x4801d0	                            add rax, rdx	       415	sequencer.c	FUNCTION_15	IF_3
0x400157f	          0xc60000	                       mov byte [rax], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4001582	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       418	sequencer.c	FUNCTION_15	IF_5
0x4001586	            0x7419	                            je 0x40015a1	       418	sequencer.c	FUNCTION_15	IF_5
0x4001588	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	sequencer.c	FUNCTION_15	IF_5
0x400158c	        0x488b5008	                mov rdx, qword [rax + 8]	       418	sequencer.c	FUNCTION_15	IF_5
0x4001590	          0x8b45fc	                mov eax, dword [rbp - 4]	       418	sequencer.c	FUNCTION_15	IF_5
0x4001593	            0x4898	                                    cdqe	       418	sequencer.c	FUNCTION_15	IF_5
0x4001595	          0x4839c2	                            cmp rdx, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x4001598	            0x7507	                           jne 0x40015a1	       418	sequencer.c	FUNCTION_15	IF_5
0x400159a	      0xb800000000	                              mov eax, 0	       419	sequencer.c	FUNCTION_15	IF_5
0x400159f	            0xeb05	                           jmp 0x40015a6	       419	sequencer.c	FUNCTION_15	IF_5
0x40015a1	      0xb801000000	                              mov eax, 1	       421	sequencer.c	FUNCTION_15
0x40015a6	              0xc9	                                   leave	       422	sequencer.c	FUNCTION_15
0x40015a7	              0xc3	                                     ret	       422	sequencer.c	FUNCTION_15
read_strategy_opts	CALL,8:FOR,1:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	92
0x40064b9	              0x55	                                push rbp	      2082	sequencer.c	FUNCTION_63
0x40064ba	          0x4889e5	                            mov rbp, rsp	      2082	sequencer.c	FUNCTION_63
0x40064bd	              0x53	                                push rbx	      2082	sequencer.c	FUNCTION_63
0x40064be	        0x4883ec38	                           sub rsp, 0x38	      2082	sequencer.c	FUNCTION_63
0x40064c2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2082	sequencer.c	FUNCTION_63
0x40064c6	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2082	sequencer.c	FUNCTION_63
0x40064ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      2082	sequencer.c	FUNCTION_63
0x40064d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      2082	sequencer.c	FUNCTION_63
0x40064d7	            0x31c0	                            xor eax, eax	      2082	sequencer.c	FUNCTION_63
0x40064d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2085	sequencer.c	FUNCTION_63
0x40064dd	      0xbe00000000	                              mov esi, 0	      2085	sequencer.c	FUNCTION_63
0x40064e2	          0x4889c7	                            mov rdi, rax	      2085	sequencer.c	FUNCTION_63
0x40064e5	      0xe8839cffff	                  call sym.strbuf_setlen	      2085	sequencer.c	FUNCTION_63
0x40064ea	      0xe85ba5ffff	           call sym.rebase_path_strategy	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40064ef	          0x4889c1	                            mov rcx, rax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40064f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40064f6	      0xba00000000	                              mov edx, 0	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40064fb	          0x4889ce	                            mov rsi, rcx	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x40064fe	          0x4889c7	                            mov rdi, rax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4006501	      0xe85aafffff	                  call sym.read_oneliner	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4006506	            0x85c0	                           test eax, eax	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x4006508	     0xf84de000000	                            je 0x40065ec	      2086	sequencer.c	FUNCTION_63	IF_1	CALL_2
0x400650e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4006512	      0xbe00000000	                              mov esi, 0	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4006517	          0x4889c7	                            mov rdi, rax	      2088	sequencer.c	FUNCTION_63	CALL_3
0x400651a	      0xe800000000	                          call 0x400651f	      2088	sequencer.c	FUNCTION_63	CALL_3
0x400651f	          0x4889c2	                            mov rdx, rax	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4006522	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4006526	        0x48895040	             mov qword [rax + 0x40], rdx	      2088	sequencer.c	FUNCTION_63	CALL_3
0x400652a	      0xe84aa5ffff	      call sym.rebase_path_strategy_opts	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400652f	          0x4889c1	                            mov rcx, rax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4006532	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4006536	      0xba00000000	                              mov edx, 0	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400653b	          0x4889ce	                            mov rsi, rcx	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400653e	          0x4889c7	                            mov rdi, rax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4006541	      0xe81aafffff	                  call sym.read_oneliner	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4006546	            0x85c0	                           test eax, eax	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x4006548	     0xf84a1000000	                            je 0x40065ef	      2089	sequencer.c	FUNCTION_63	IF_2	CALL_5
0x400654e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006552	        0x488d5048	                   lea rdx, [rax + 0x48]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006556	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x400655a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2092	sequencer.c	FUNCTION_63	CALL_6
0x400655e	          0x4889d6	                            mov rsi, rdx	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006561	          0x4889c7	                            mov rdi, rax	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006564	      0xe800000000	                          call 0x4006569	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006569	          0x4863d0	                         movsxd rdx, eax	      2092	sequencer.c	FUNCTION_63	CALL_6
0x400656c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006570	        0x48895050	             mov qword [rax + 0x50], rdx	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4006574	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x400657b	            0xeb5a	                           jmp 0x40065d7	      2093	sequencer.c	FUNCTION_63	FOR_1
0x400657d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006581	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006585	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006588	          0x4863d2	                         movsxd rdx, edx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x400658b	        0x48c1e203	                              shl rdx, 3	      2094	sequencer.c	FUNCTION_63	FOR_1
0x400658f	          0x4801d0	                            add rax, rdx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006592	          0x488b00	                    mov rax, qword [rax]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006595	        0x488945e0	             mov qword [rbp - 0x20], rax	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4006599	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_7
0x400659d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_7
0x40065a1	      0xbe00000000	                              mov esi, 0	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_7
0x40065a6	          0x4889c7	                            mov rdi, rax	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_7
0x40065a9	      0xe89d9affff	                    call sym.skip_prefix	      2096	sequencer.c	FUNCTION_63	FOR_1	CALL_7
0x40065ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065b2	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065b6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065b9	          0x4863d2	                         movsxd rdx, edx	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065bc	        0x48c1e203	                              shl rdx, 3	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065c0	        0x488d1c10	                    lea rbx, [rax + rdx]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065c8	          0x4889c7	                            mov rdi, rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065cb	      0xe800000000	                          call 0x40065d0	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065d0	          0x488903	                    mov qword [rbx], rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x40065d3	        0x8345dc01	               add dword [rbp - 0x24], 1	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065da	          0x4863d0	                         movsxd rdx, eax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065e1	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065e5	          0x4839c2	                            cmp rdx, rax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065e8	            0x7293	                            jb 0x400657d	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065ea	            0xeb04	                           jmp 0x40065f0	      2093	sequencer.c	FUNCTION_63	FOR_1
0x40065ec	              0x90	                                     nop	      2087	sequencer.c	FUNCTION_63	IF_1
0x40065ed	            0xeb01	                           jmp 0x40065f0	      2087	sequencer.c	FUNCTION_63	IF_1
0x40065ef	              0x90	                                     nop	      2090	sequencer.c	FUNCTION_63	IF_2
0x40065f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2099	sequencer.c	FUNCTION_63
0x40065f4	    0x644833042528	                xor rax, qword fs:[0x28]	      2099	sequencer.c	FUNCTION_63
0x40065fd	            0x7405	                            je 0x4006604	      2099	sequencer.c	FUNCTION_63
0x40065ff	      0xe800000000	                          call 0x4006604	      2099	sequencer.c	FUNCTION_63
0x4006604	        0x4883c438	                           add rsp, 0x38	      2099	sequencer.c	FUNCTION_63
0x4006608	              0x5b	                                 pop rbx	      2099	sequencer.c	FUNCTION_63
0x4006609	              0x5d	                                 pop rbp	      2099	sequencer.c	FUNCTION_63
0x400660a	              0xc3	                                     ret	      2099	sequencer.c	FUNCTION_63
get_item_line_offset	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0	23
0x4005b2a	              0x55	                                push rbp	      1936	sequencer.c	FUNCTION_56
0x4005b2b	          0x4889e5	                            mov rbp, rsp	      1936	sequencer.c	FUNCTION_56
0x4005b2e	        0x48897df8	                mov qword [rbp - 8], rdi	      1936	sequencer.c	FUNCTION_56
0x4005b32	          0x8975f4	              mov dword [rbp - 0xc], esi	      1936	sequencer.c	FUNCTION_56
0x4005b35	        0x488b45f8	                mov rax, qword [rbp - 8]	      1937	sequencer.c	FUNCTION_56
0x4005b39	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x4005b3c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1937	sequencer.c	FUNCTION_56
0x4005b3f	            0x7e24	                           jle 0x4005b65	      1937	sequencer.c	FUNCTION_56
0x4005b41	        0x488b45f8	                mov rax, qword [rbp - 8]	      1938	sequencer.c	FUNCTION_56
0x4005b45	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1938	sequencer.c	FUNCTION_56
0x4005b49	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1938	sequencer.c	FUNCTION_56
0x4005b4c	          0x4863d0	                         movsxd rdx, eax	      1938	sequencer.c	FUNCTION_56
0x4005b4f	          0x4889d0	                            mov rax, rdx	      1938	sequencer.c	FUNCTION_56
0x4005b52	          0x4801c0	                            add rax, rax	      1938	sequencer.c	FUNCTION_56
0x4005b55	          0x4801d0	                            add rax, rdx	      1938	sequencer.c	FUNCTION_56
0x4005b58	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x4005b5c	          0x4801c8	                            add rax, rcx	      1938	sequencer.c	FUNCTION_56
0x4005b5f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1938	sequencer.c	FUNCTION_56
0x4005b63	            0xeb08	                           jmp 0x4005b6d	      1937	sequencer.c	FUNCTION_56
0x4005b65	        0x488b45f8	                mov rax, qword [rbp - 8]	      1938	sequencer.c	FUNCTION_56
0x4005b69	        0x488b4008	                mov rax, qword [rax + 8]	      1938	sequencer.c	FUNCTION_56
0x4005b6d	              0x5d	                                 pop rbp	      1939	sequencer.c	FUNCTION_56
0x4005b6e	              0xc3	                                     ret	      1939	sequencer.c	FUNCTION_56
sequencer_continue	CALL,27:FOR,0:WHILE,0:ELSE,3:DO,0:IF,13:SWITCH,0:functions,0	158
0x400abee	              0x55	                                push rbp	      3378	sequencer.c	FUNCTION_90
0x400abef	          0x4889e5	                            mov rbp, rsp	      3378	sequencer.c	FUNCTION_90
0x400abf2	    0x4881ecc00000	                           sub rsp, 0xc0	      3378	sequencer.c	FUNCTION_90
0x400abf9	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3378	sequencer.c	FUNCTION_90
0x400ac00	    0x64488b042528	                mov rax, qword fs:[0x28]	      3378	sequencer.c	FUNCTION_90
0x400ac09	        0x488945f8	                mov qword [rbp - 8], rax	      3378	sequencer.c	FUNCTION_90
0x400ac0d	            0x31c0	                            xor eax, eax	      3378	sequencer.c	FUNCTION_90
0x400ac0f	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3379	sequencer.c	FUNCTION_90
0x400ac13	      0xb800000000	                              mov eax, 0	      3379	sequencer.c	FUNCTION_90
0x400ac18	      0xb90b000000	                            mov ecx, 0xb	      3379	sequencer.c	FUNCTION_90
0x400ac1d	          0x4889d7	                            mov rdi, rdx	      3379	sequencer.c	FUNCTION_90
0x400ac20	          0xf348ab	              rep stosq qword [rdi], rax	      3379	sequencer.c	FUNCTION_90
0x400ac23	    0x48c745900000	               mov qword [rbp - 0x70], 0	      3379	sequencer.c	FUNCTION_90
0x400ac2b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400ac32	          0x4889c7	                            mov rdi, rax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400ac35	      0xe852a6ffff	         call sym.read_and_refresh_cache	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400ac3a	            0x85c0	                           test eax, eax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400ac3c	            0x740a	                            je 0x400ac48	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400ac3e	      0xb8ffffffff	                     mov eax, 0xffffffff	      3383	sequencer.c	FUNCTION_90	IF_1
0x400ac43	      0xe932020000	                           jmp 0x400ae7a	      3383	sequencer.c	FUNCTION_90	IF_1
0x400ac48	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0x400ac4f	          0x4889c7	                            mov rdi, rax	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0x400ac52	      0xe8b4b9ffff	             call sym.read_populate_opts	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0x400ac57	            0x85c0	                           test eax, eax	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0x400ac59	            0x740a	                            je 0x400ac65	      3385	sequencer.c	FUNCTION_90	IF_2	CALL_2
0x400ac5b	      0xb8ffffffff	                     mov eax, 0xffffffff	      3386	sequencer.c	FUNCTION_90	IF_2
0x400ac60	      0xe915020000	                           jmp 0x400ae7a	      3386	sequencer.c	FUNCTION_90	IF_2
0x400ac65	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400ac6c	          0x4889c7	                            mov rdi, rax	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400ac6f	      0xe85460ffff	                    call sym.is_rebase_i	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400ac74	            0x85c0	                           test eax, eax	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400ac76	            0x744d	                            je 0x400acc5	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x400ac78	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac7f	        0x488d4580	                   lea rax, [rbp - 0x80]	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac83	          0x4889d6	                            mov rsi, rdx	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac86	          0x4889c7	                            mov rdi, rax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac89	      0xe80cb0ffff	             call sym.read_populate_todo	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac8e	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac94	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400ac9b	     0xf85c0010000	                           jne 0x400ae61	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400aca1	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400aca5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acac	          0x4889d6	                            mov rsi, rdx	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acaf	          0x4889c7	                            mov rdi, rax	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acb2	      0xe853f9ffff	          call sym.commit_staged_changes	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acb7	            0x85c0	                           test eax, eax	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acb9	            0x7458	                            je 0x400ad13	      3390	sequencer.c	FUNCTION_90	IF_3	IF_5	CALL_5
0x400acbb	      0xb8ffffffff	                     mov eax, 0xffffffff	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x400acc0	      0xe9b5010000	                           jmp 0x400ae7a	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x400acc5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400accc	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400accf	      0xe83760ffff	                  call sym.get_todo_path	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400acd4	          0x4889c7	                            mov rdi, rax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400acd7	      0xe800000000	                          call 0x400acdc	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400acdc	            0x85c0	                           test eax, eax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400acde	            0x750a	                           jne 0x400acea	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x400ace0	      0xe897f8ffff	           call sym.continue_single_pick	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x400ace5	      0xe990010000	                           jmp 0x400ae7a	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x400acea	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400acf1	        0x488d4580	                   lea rax, [rbp - 0x80]	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400acf5	          0x4889d6	                            mov rsi, rdx	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400acf8	          0x4889c7	                            mov rdi, rax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400acfb	      0xe89aafffff	             call sym.read_populate_todo	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400ad00	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400ad06	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400ad0d	     0xf8551010000	                           jne 0x400ae64	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x400ad13	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400ad1a	          0x4889c7	                            mov rdi, rax	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400ad1d	      0xe8a65fffff	                    call sym.is_rebase_i	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400ad22	            0x85c0	                           test eax, eax	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400ad24	            0x757a	                           jne 0x400ada0	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400ad26	      0xe800000000	                          call 0x400ad2b	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad2b	          0x4889c7	                            mov rdi, rax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad2e	      0xe800000000	                          call 0x400ad33	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad33	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad35	            0x7511	                           jne 0x400ad48	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad37	      0xe800000000	                          call 0x400ad3c	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400ad3c	          0x4889c7	                            mov rdi, rax	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400ad3f	      0xe800000000	                          call 0x400ad44	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x400ad44	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad46	            0x7418	                            je 0x400ad60	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x400ad48	      0xe82ff8ffff	           call sym.continue_single_pick	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x400ad4d	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3401	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_15
0x400ad53	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400ad5a	     0xf8507010000	                           jne 0x400ae67	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400ad60	      0xba00000000	                              mov edx, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad65	      0xbe00000000	                              mov esi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad6a	      0xbf00000000	                              mov edi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad6f	      0xe800000000	                          call 0x400ad74	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad74	            0x85c0	                           test eax, eax	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad76	            0x741a	                            je 0x400ad92	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400ad78	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400ad7f	          0x4889c7	                            mov rdi, rax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400ad82	      0xe83e68ffff	              call sym.error_dirty_index	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400ad87	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400ad8d	      0xe9d6000000	                           jmp 0x400ae68	      3407	sequencer.c	FUNCTION_90	IF_8	IF_11
0x400ad92	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3409	sequencer.c	FUNCTION_90	IF_8
0x400ad95	          0x83c001	                              add eax, 1	      3409	sequencer.c	FUNCTION_90	IF_8
0x400ad98	          0x8945a8	             mov dword [rbp - 0x58], eax	      3409	sequencer.c	FUNCTION_90	IF_8
0x400ad9b	      0xe9a3000000	                           jmp 0x400ae43	      3409	sequencer.c	FUNCTION_90	IF_8
0x400ada0	      0xe8a05affff	        call sym.rebase_path_stopped_sha	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x400ada5	          0x4889c7	                            mov rdi, rax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x400ada8	      0xe800000000	                          call 0x400adad	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x400adad	            0x85c0	                           test eax, eax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x400adaf	     0xf848e000000	                            je 0x400ae43	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x400adb5	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x400adc0	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x400adcb	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x400add6	      0xe86a5affff	        call sym.rebase_path_stopped_sha	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400addb	          0x4889c1	                            mov rcx, rax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adde	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400ade5	      0xba01000000	                              mov edx, 1	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adea	          0x4889ce	                            mov rsi, rcx	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400aded	          0x4889c7	                            mov rdi, rax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adf0	      0xe86b66ffff	                  call sym.read_oneliner	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adf5	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adf7	            0x743b	                            je 0x400ae34	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400adf9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x400ae00	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x400ae04	          0x4889d6	                            mov rsi, rdx	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x400ae07	          0x4889c7	                            mov rdi, rax	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x400ae0a	      0xe800000000	                          call 0x400ae0f	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x400ae0f	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400ae11	            0x7521	                           jne 0x400ae34	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x400ae13	        0x488d4580	                   lea rax, [rbp - 0x80]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae17	      0xbe00000000	                              mov esi, 0	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae1c	          0x4889c7	                            mov rdi, rax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae1f	      0xe867e2ffff	                   call sym.peek_command	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae24	            0x89c2	                            mov edx, eax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae26	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae2a	            0x89d6	                            mov esi, edx	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae2c	          0x4889c7	                            mov rdi, rax	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae2f	      0xe83296ffff	            call sym.record_in_rewritten	      3416	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_24
0x400ae34	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x400ae3b	          0x4889c7	                            mov rdi, rax	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x400ae3e	      0xe800000000	                          call 0x400ae43	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x400ae43	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae4a	        0x488d4580	                   lea rax, [rbp - 0x80]	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae4e	          0x4889d6	                            mov rsi, rdx	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae51	          0x4889c7	                            mov rdi, rax	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae54	      0xe8b9e6ffff	                   call sym.pick_commits	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae59	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae5f	            0xeb07	                           jmp 0x400ae68	      3420	sequencer.c	FUNCTION_90	CALL_26
0x400ae61	              0x90	                                     nop	      3389	sequencer.c	FUNCTION_90	IF_3	IF_4
0x400ae62	            0xeb04	                           jmp 0x400ae68	      3389	sequencer.c	FUNCTION_90	IF_3	IF_4
0x400ae64	              0x90	                                     nop	      3395	sequencer.c	FUNCTION_90	ELSE_2	IF_7
0x400ae65	            0xeb01	                           jmp 0x400ae68	      3395	sequencer.c	FUNCTION_90	ELSE_2	IF_7
0x400ae67	              0x90	                                     nop	      3403	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400ae68	        0x488d4580	                   lea rax, [rbp - 0x80]	      3422	sequencer.c	FUNCTION_90	CALL_27
0x400ae6c	          0x4889c7	                            mov rdi, rax	      3422	sequencer.c	FUNCTION_90	CALL_27
0x400ae6f	      0xe83ea5ffff	              call sym.todo_list_release	      3422	sequencer.c	FUNCTION_90	CALL_27
0x400ae74	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      3423	sequencer.c	FUNCTION_90
0x400ae7a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3424	sequencer.c	FUNCTION_90
0x400ae7e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3424	sequencer.c	FUNCTION_90
0x400ae87	            0x7405	                            je 0x400ae8e	      3424	sequencer.c	FUNCTION_90
0x400ae89	      0xe800000000	                          call 0x400ae8e	      3424	sequencer.c	FUNCTION_90
0x400ae8e	              0xc9	                                   leave	      3424	sequencer.c	FUNCTION_90
0x400ae8f	              0xc3	                                     ret	      3424	sequencer.c	FUNCTION_90
parse_insn_line	CALL,15:FOR,1:WHILE,0:ELSE,3:DO,0:IF,12:SWITCH,0:functions,0	301
0x40054ea	              0x55	                                push rbp	      1803	sequencer.c	FUNCTION_53
0x40054eb	          0x4889e5	                            mov rbp, rsp	      1803	sequencer.c	FUNCTION_53
0x40054ee	            0x4154	                                push r12	      1803	sequencer.c	FUNCTION_53
0x40054f0	              0x53	                                push rbx	      1803	sequencer.c	FUNCTION_53
0x40054f1	        0x4883ec60	                           sub rsp, 0x60	      1803	sequencer.c	FUNCTION_53
0x40054f5	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1803	sequencer.c	FUNCTION_53
0x40054f9	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1803	sequencer.c	FUNCTION_53
0x40054fd	        0x48895598	             mov qword [rbp - 0x68], rdx	      1803	sequencer.c	FUNCTION_53
0x4005501	    0x64488b042528	                mov rax, qword fs:[0x28]	      1803	sequencer.c	FUNCTION_53
0x400550a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1803	sequencer.c	FUNCTION_53
0x400550e	            0x31c0	                            xor eax, eax	      1803	sequencer.c	FUNCTION_53
0x4005510	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1808	sequencer.c	FUNCTION_53
0x4005514	    0xc74010000000	               mov dword [rax + 0x10], 0	      1808	sequencer.c	FUNCTION_53
0x400551b	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1811	sequencer.c	FUNCTION_53	CALL_1
0x400551f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1811	sequencer.c	FUNCTION_53	CALL_1
0x4005523	      0xbe00000000	                              mov esi, 0	      1811	sequencer.c	FUNCTION_53	CALL_1
0x4005528	          0x4889c7	                            mov rdi, rax	      1811	sequencer.c	FUNCTION_53	CALL_1
0x400552b	      0xe800000000	                          call 0x4005530	      1811	sequencer.c	FUNCTION_53	CALL_1
0x4005530	          0x4801d8	                            add rax, rbx	      1811	sequencer.c	FUNCTION_53	CALL_1
0x4005533	        0x488945a0	             mov qword [rbp - 0x60], rax	      1811	sequencer.c	FUNCTION_53	CALL_1
0x4005537	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x400553b	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1813	sequencer.c	FUNCTION_53	IF_1
0x400553f	            0x741d	                            je 0x400555e	      1813	sequencer.c	FUNCTION_53	IF_1
0x4005541	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4005545	           0xfb600	                   movzx eax, byte [rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4005548	            0x3c0d	                             cmp al, 0xd	      1813	sequencer.c	FUNCTION_53	IF_1
0x400554a	            0x7412	                            je 0x400555e	      1813	sequencer.c	FUNCTION_53	IF_1
0x400554c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4005550	           0xfb610	                   movzx edx, byte [rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x4005553	     0xfb605000000	           movzx eax, byte [0x0400555a] 	      1813	sequencer.c	FUNCTION_53	IF_1
0x400555a	            0x38c2	                              cmp dl, al	      1813	sequencer.c	FUNCTION_53	IF_1
0x400555c	            0x7540	                           jne 0x400559e	      1813	sequencer.c	FUNCTION_53	IF_1
0x400555e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1814	sequencer.c	FUNCTION_53	IF_1
0x4005562	    0xc7000c000000	                    mov dword [rax], 0xc	      1814	sequencer.c	FUNCTION_53	IF_1
0x4005568	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1815	sequencer.c	FUNCTION_53	IF_1
0x400556c	    0x48c740080000	                  mov qword [rax + 8], 0	      1815	sequencer.c	FUNCTION_53	IF_1
0x4005574	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1816	sequencer.c	FUNCTION_53	IF_1
0x4005578	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1816	sequencer.c	FUNCTION_53	IF_1
0x400557c	        0x48895018	             mov qword [rax + 0x18], rdx	      1816	sequencer.c	FUNCTION_53	IF_1
0x4005580	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1817	sequencer.c	FUNCTION_53	IF_1
0x4005584	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1817	sequencer.c	FUNCTION_53	IF_1
0x4005588	          0x4829d0	                            sub rax, rdx	      1817	sequencer.c	FUNCTION_53	IF_1
0x400558b	            0x89c2	                            mov edx, eax	      1817	sequencer.c	FUNCTION_53	IF_1
0x400558d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1817	sequencer.c	FUNCTION_53	IF_1
0x4005591	          0x895020	             mov dword [rax + 0x20], edx	      1817	sequencer.c	FUNCTION_53	IF_1
0x4005594	      0xb800000000	                              mov eax, 0	      1818	sequencer.c	FUNCTION_53	IF_1
0x4005599	      0xe979030000	                           jmp 0x4005917	      1818	sequencer.c	FUNCTION_53	IF_1
0x400559e	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x40055a5	            0xeb7b	                           jmp 0x4005622	      1821	sequencer.c	FUNCTION_53	FOR_1
0x40055a7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055aa	            0x4898	                                    cdqe	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055ac	        0x48c1e004	                              shl rax, 4	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055b0	    0x480500000000	                              add rax, 0	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055b6	          0x488b08	                    mov rcx, qword [rax]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055b9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055bd	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055c1	          0x4889ce	                            mov rsi, rcx	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055c4	          0x4889c7	                            mov rdi, rax	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055c7	      0xe87faaffff	                    call sym.skip_prefix	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055cc	            0x85c0	                           test eax, eax	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055ce	            0x740b	                            je 0x40055db	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_2
0x40055d0	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x40055d3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x40055d7	            0x8910	                    mov dword [rax], edx	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x40055d9	            0xeb51	                           jmp 0x400562c	      1824	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x40055db	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055df	        0x4883c001	                              add rax, 1	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055e3	           0xfb600	                   movzx eax, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055e6	            0x3c20	                            cmp al, 0x20	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055e8	            0x7534	                           jne 0x400561e	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055ee	           0xfb610	                   movzx edx, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055f1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055f4	            0x4898	                                    cdqe	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055f6	        0x48c1e004	                              shl rax, 4	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40055fa	    0x480500000000	                              add rax, 0	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005600	           0xfb600	                   movzx eax, byte [rax]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005603	            0x38c2	                              cmp dl, al	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005605	            0x7517	                           jne 0x400561e	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005607	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400560b	        0x4883c001	                              add rax, 1	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400560f	        0x488945a0	             mov qword [rbp - 0x60], rax	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005613	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4005616	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400561a	            0x8910	                    mov dword [rax], edx	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400561c	            0xeb0e	                           jmp 0x400562c	      1828	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400561e	        0x8345b801	               add dword [rbp - 0x48], 1	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4005622	        0x837db80b	            cmp dword [rbp - 0x48], 0xb 	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4005626	     0xf8e7bffffff	                           jle 0x40055a7	      1821	sequencer.c	FUNCTION_53	FOR_1
0x400562c	        0x837db80b	            cmp dword [rbp - 0x48], 0xb 	      1830	sequencer.c	FUNCTION_53	IF_4
0x4005630	            0x7e0a	                           jle 0x400563c	      1830	sequencer.c	FUNCTION_53	IF_4
0x4005632	      0xb8ffffffff	                     mov eax, 0xffffffff	      1831	sequencer.c	FUNCTION_53	IF_4
0x4005637	      0xe9db020000	                           jmp 0x4005917	      1831	sequencer.c	FUNCTION_53	IF_4
0x400563c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1834	sequencer.c	FUNCTION_53	CALL_3
0x4005640	      0xbe00000000	                              mov esi, 0	      1834	sequencer.c	FUNCTION_53	CALL_3
0x4005645	          0x4889c7	                            mov rdi, rax	      1834	sequencer.c	FUNCTION_53	CALL_3
0x4005648	      0xe800000000	                          call 0x400564d	      1834	sequencer.c	FUNCTION_53	CALL_3
0x400564d	          0x8945bc	             mov dword [rbp - 0x44], eax	      1834	sequencer.c	FUNCTION_53	CALL_3
0x4005650	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1835	sequencer.c	FUNCTION_53
0x4005654	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1835	sequencer.c	FUNCTION_53
0x4005657	            0x4898	                                    cdqe	      1835	sequencer.c	FUNCTION_53
0x4005659	          0x4801d0	                            add rax, rdx	      1835	sequencer.c	FUNCTION_53
0x400565c	        0x488945a0	             mov qword [rbp - 0x60], rax	      1835	sequencer.c	FUNCTION_53
0x4005660	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4005664	            0x8b00	                    mov eax, dword [rax]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4005666	          0x83f80a	                            cmp eax, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x4005669	            0x757b	                           jne 0x40056e6	      1837	sequencer.c	FUNCTION_53	IF_5
0x400566b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x400566f	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4005673	            0x743b	                            je 0x40056b0	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4005675	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005679	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x400567d	            0x8b00	                    mov eax, dword [rax]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x400567f	            0x89c7	                            mov edi, eax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005681	      0xe884e5ffff	              call sym.command_to_string	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005686	          0x4989c4	                            mov r12, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005689	      0xbf00000000	                              mov edi, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x400568e	      0xe814adffff	                               call sym.	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005693	          0x4889da	                            mov rdx, rbx	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005696	          0x4c89e6	                            mov rsi, r12	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x4005699	          0x4889c7	                            mov rdi, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x400569c	      0xb800000000	                              mov eax, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x40056a1	      0xe800000000	                          call 0x40056a6	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x40056a6	      0xe895a9ffff	                    call sym.const_error	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x40056ab	      0xe967020000	                           jmp 0x4005917	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_4
0x40056b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1841	sequencer.c	FUNCTION_53	IF_5
0x40056b4	    0x48c740080000	                  mov qword [rax + 8], 0	      1841	sequencer.c	FUNCTION_53	IF_5
0x40056bc	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1842	sequencer.c	FUNCTION_53	IF_5
0x40056c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1842	sequencer.c	FUNCTION_53	IF_5
0x40056c4	        0x48895018	             mov qword [rax + 0x18], rdx	      1842	sequencer.c	FUNCTION_53	IF_5
0x40056c8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056cc	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056d0	          0x4829d0	                            sub rax, rdx	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056d3	            0x89c2	                            mov edx, eax	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056d9	          0x895020	             mov dword [rax + 0x20], edx	      1843	sequencer.c	FUNCTION_53	IF_5
0x40056dc	      0xb800000000	                              mov eax, 0	      1844	sequencer.c	FUNCTION_53	IF_5
0x40056e1	      0xe931020000	                           jmp 0x4005917	      1844	sequencer.c	FUNCTION_53	IF_5
0x40056e6	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1847	sequencer.c	FUNCTION_53	IF_7
0x40056ea	            0x7534	                           jne 0x4005720	      1847	sequencer.c	FUNCTION_53	IF_7
0x40056ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x40056f0	            0x8b00	                    mov eax, dword [rax]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x40056f2	            0x89c7	                            mov edi, eax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x40056f4	      0xe811e5ffff	              call sym.command_to_string	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x40056f9	          0x4889c3	                            mov rbx, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x40056fc	      0xbf00000000	                              mov edi, 0	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005701	      0xe8a1acffff	                               call sym.	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005706	          0x4889de	                            mov rsi, rbx	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005709	          0x4889c7	                            mov rdi, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x400570c	      0xb800000000	                              mov eax, 0	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005711	      0xe800000000	                          call 0x4005716	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005716	      0xe825a9ffff	                    call sym.const_error	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x400571b	      0xe9f7010000	                           jmp 0x4005917	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_6
0x4005720	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005724	            0x8b00	                    mov eax, dword [rax]	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005726	          0x83f806	                              cmp eax, 6	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005729	            0x7416	                            je 0x4005741	      1851	sequencer.c	FUNCTION_53	IF_8
0x400572b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1851	sequencer.c	FUNCTION_53	IF_8
0x400572f	            0x8b00	                    mov eax, dword [rax]	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005731	          0x83f807	                              cmp eax, 7	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005734	            0x740b	                            je 0x4005741	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005736	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1852	sequencer.c	FUNCTION_53	IF_8
0x400573a	            0x8b00	                    mov eax, dword [rax]	      1852	sequencer.c	FUNCTION_53	IF_8
0x400573c	          0x83f808	                              cmp eax, 8	      1851	sequencer.c	FUNCTION_53	IF_8
0x400573f	            0x7536	                           jne 0x4005777	      1851	sequencer.c	FUNCTION_53	IF_8
0x4005741	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1853	sequencer.c	FUNCTION_53	IF_8
0x4005745	    0x48c740080000	                  mov qword [rax + 8], 0	      1853	sequencer.c	FUNCTION_53	IF_8
0x400574d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1854	sequencer.c	FUNCTION_53	IF_8
0x4005751	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1854	sequencer.c	FUNCTION_53	IF_8
0x4005755	        0x48895018	             mov qword [rax + 0x18], rdx	      1854	sequencer.c	FUNCTION_53	IF_8
0x4005759	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1855	sequencer.c	FUNCTION_53	IF_8
0x400575d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1855	sequencer.c	FUNCTION_53	IF_8
0x4005761	          0x4829d0	                            sub rax, rdx	      1855	sequencer.c	FUNCTION_53	IF_8
0x4005764	            0x89c2	                            mov edx, eax	      1855	sequencer.c	FUNCTION_53	IF_8
0x4005766	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1855	sequencer.c	FUNCTION_53	IF_8
0x400576a	          0x895020	             mov dword [rax + 0x20], edx	      1855	sequencer.c	FUNCTION_53	IF_8
0x400576d	      0xb800000000	                              mov eax, 0	      1856	sequencer.c	FUNCTION_53	IF_8
0x4005772	      0xe9a0010000	                           jmp 0x4005917	      1856	sequencer.c	FUNCTION_53	IF_8
0x4005777	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1859	sequencer.c	FUNCTION_53	IF_9
0x400577b	            0x8b00	                    mov eax, dword [rax]	      1859	sequencer.c	FUNCTION_53	IF_9
0x400577d	          0x83f809	                              cmp eax, 9	      1859	sequencer.c	FUNCTION_53	IF_9
0x4005780	     0xf85cd000000	                           jne 0x4005853	      1859	sequencer.c	FUNCTION_53	IF_9
0x4005786	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x400578a	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x400578e	      0xbe00000000	                              mov esi, 0	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x4005793	          0x4889c7	                            mov rdi, rax	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x4005796	      0xe8b0a8ffff	                    call sym.skip_prefix	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x400579b	            0x85c0	                           test eax, eax	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x400579d	            0x7421	                            je 0x40057c0	      1860	sequencer.c	FUNCTION_53	IF_9	IF_10	CALL_8
0x400579f	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057a3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057a7	      0xbe00000000	                              mov esi, 0	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057ac	          0x4889c7	                            mov rdi, rax	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057af	      0xe800000000	                          call 0x40057b4	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057b4	          0x4801d8	                            add rax, rbx	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057b7	        0x488945a0	             mov qword [rbp - 0x60], rax	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057bb	      0xe993000000	                           jmp 0x4005853	      1861	sequencer.c	FUNCTION_53	IF_9	CALL_9
0x40057c0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057c4	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057c8	      0xbe00000000	                              mov esi, 0	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057cd	          0x4889c7	                            mov rdi, rax	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057d0	      0xe876a8ffff	                    call sym.skip_prefix	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057d5	            0x85c0	                           test eax, eax	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057d7	            0x7431	                            je 0x400580a	      1862	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_10
0x40057d9	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057dd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057e1	      0xbe00000000	                              mov esi, 0	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057e6	          0x4889c7	                            mov rdi, rax	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057e9	      0xe800000000	                          call 0x40057ee	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057ee	          0x4801d8	                            add rax, rbx	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057f1	        0x488945a0	             mov qword [rbp - 0x60], rax	      1863	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11	CALL_11
0x40057f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x40057f9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x40057fc	          0x83c801	                               or eax, 1	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x40057ff	            0x89c2	                            mov edx, eax	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4005801	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4005805	          0x895010	             mov dword [rax + 0x10], edx	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4005808	            0xeb49	                           jmp 0x4005853	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x400580a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400580e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005811	          0x83c801	                               or eax, 1	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005814	            0x89c2	                            mov edx, eax	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005816	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400581a	          0x895010	             mov dword [rax + 0x10], edx	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400581d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005821	    0x48c740080000	                  mov qword [rax + 8], 0	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005829	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400582d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005831	        0x48895018	             mov qword [rax + 0x18], rdx	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005835	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005839	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400583d	          0x4829d0	                            sub rax, rdx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005840	            0x89c2	                            mov edx, eax	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005842	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005846	          0x895020	             mov dword [rax + 0x20], edx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005849	      0xb800000000	                              mov eax, 0	      1870	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400584e	      0xe9c4000000	                           jmp 0x4005917	      1870	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4005853	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1874	sequencer.c	FUNCTION_53	CALL_12
0x4005857	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1874	sequencer.c	FUNCTION_53	CALL_12
0x400585b	      0xbe00000000	                              mov esi, 0	      1874	sequencer.c	FUNCTION_53	CALL_12
0x4005860	          0x4889c7	                            mov rdi, rax	      1874	sequencer.c	FUNCTION_53	CALL_12
0x4005863	      0xe800000000	                          call 0x4005868	      1874	sequencer.c	FUNCTION_53	CALL_12
0x4005868	          0x4801d8	                            add rax, rbx	      1874	sequencer.c	FUNCTION_53	CALL_12
0x400586b	        0x488945c8	             mov qword [rbp - 0x38], rax	      1874	sequencer.c	FUNCTION_53	CALL_12
0x400586f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1875	sequencer.c	FUNCTION_53
0x4005873	           0xfb600	                   movzx eax, byte [rax]	      1875	sequencer.c	FUNCTION_53
0x4005876	           0xfbec0	                           movsx eax, al	      1875	sequencer.c	FUNCTION_53
0x4005879	          0x8945c0	             mov dword [rbp - 0x40], eax	      1875	sequencer.c	FUNCTION_53
0x400587c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1876	sequencer.c	FUNCTION_53
0x4005880	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x4005883	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1877	sequencer.c	FUNCTION_53	CALL_13
0x4005887	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1877	sequencer.c	FUNCTION_53	CALL_13
0x400588b	          0x4889d6	                            mov rsi, rdx	      1877	sequencer.c	FUNCTION_53	CALL_13
0x400588e	          0x4889c7	                            mov rdi, rax	      1877	sequencer.c	FUNCTION_53	CALL_13
0x4005891	      0xe800000000	                          call 0x4005896	      1877	sequencer.c	FUNCTION_53	CALL_13
0x4005896	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1877	sequencer.c	FUNCTION_53	CALL_13
0x4005899	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1878	sequencer.c	FUNCTION_53
0x400589c	            0x89c2	                            mov edx, eax	      1878	sequencer.c	FUNCTION_53
0x400589e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1878	sequencer.c	FUNCTION_53
0x40058a2	            0x8810	                      mov byte [rax], dl	      1878	sequencer.c	FUNCTION_53
0x40058a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058a8	      0xbe00000000	                              mov esi, 0	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058ad	          0x4889c7	                            mov rdi, rax	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058b0	      0xe800000000	                          call 0x40058b5	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058b5	          0x4889c2	                            mov rdx, rax	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058bc	          0x4801c2	                            add rdx, rax	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058c3	        0x48895018	             mov qword [rax + 0x18], rdx	      1880	sequencer.c	FUNCTION_53	CALL_14
0x40058c7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1881	sequencer.c	FUNCTION_53
0x40058cb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1881	sequencer.c	FUNCTION_53
0x40058cf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1881	sequencer.c	FUNCTION_53
0x40058d3	          0x4829c2	                            sub rdx, rax	      1881	sequencer.c	FUNCTION_53
0x40058d6	          0x4889d0	                            mov rax, rdx	      1881	sequencer.c	FUNCTION_53
0x40058d9	            0x89c2	                            mov edx, eax	      1881	sequencer.c	FUNCTION_53
0x40058db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1881	sequencer.c	FUNCTION_53
0x40058df	          0x895020	             mov dword [rax + 0x20], edx	      1881	sequencer.c	FUNCTION_53
0x40058e2	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1883	sequencer.c	FUNCTION_53	IF_12
0x40058e6	            0x7907	                           jns 0x40058ef	      1883	sequencer.c	FUNCTION_53	IF_12
0x40058e8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1884	sequencer.c	FUNCTION_53	IF_12
0x40058ed	            0xeb28	                           jmp 0x4005917	      1884	sequencer.c	FUNCTION_53	IF_12
0x40058ef	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1886	sequencer.c	FUNCTION_53	CALL_15
0x40058f3	          0x4889c7	                            mov rdi, rax	      1886	sequencer.c	FUNCTION_53	CALL_15
0x40058f6	      0xe800000000	                          call 0x40058fb	      1886	sequencer.c	FUNCTION_53	CALL_15
0x40058fb	          0x4889c2	                            mov rdx, rax	      1886	sequencer.c	FUNCTION_53	CALL_15
0x40058fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1886	sequencer.c	FUNCTION_53	CALL_15
0x4005902	        0x48895008	                mov qword [rax + 8], rdx	      1886	sequencer.c	FUNCTION_53	CALL_15
0x4005906	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1887	sequencer.c	FUNCTION_53
0x400590a	        0x488b4008	                mov rax, qword [rax + 8]	      1887	sequencer.c	FUNCTION_53
0x400590e	          0x4885c0	                           test rax, rax	      1887	sequencer.c	FUNCTION_53
0x4005911	           0xf94c0	                                 sete al	      1887	sequencer.c	FUNCTION_53
0x4005914	           0xfb6c0	                           movzx eax, al	      1887	sequencer.c	FUNCTION_53
0x4005917	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1888	sequencer.c	FUNCTION_53
0x400591b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1888	sequencer.c	FUNCTION_53
0x4005924	            0x7405	                            je 0x400592b	      1888	sequencer.c	FUNCTION_53
0x4005926	      0xe800000000	                          call 0x400592b	      1888	sequencer.c	FUNCTION_53
0x400592b	        0x4883c460	                           add rsp, 0x60	      1888	sequencer.c	FUNCTION_53
0x400592f	              0x5b	                                 pop rbx	      1888	sequencer.c	FUNCTION_53
0x4005930	            0x415c	                                 pop r12	      1888	sequencer.c	FUNCTION_53
0x4005932	              0x5d	                                 pop rbp	      1888	sequencer.c	FUNCTION_53
0x4005933	              0xc3	                                     ret	      1888	sequencer.c	FUNCTION_53
skip_prefix	CALL,0:FOR,0:WHILE,0:ELSE,0:DO,1:IF,1:SWITCH,0:functions,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_168
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_168
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_168
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_168
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_168
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_168	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_168	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_168	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_168
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_168
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_168
reflog_message	CALL,7:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:SWITCH,0:functions,0	62
0x40093d3	              0x55	                                push rbp	      2959	sequencer.c	FUNCTION_86
0x40093d4	          0x4889e5	                            mov rbp, rsp	      2959	sequencer.c	FUNCTION_86
0x40093d7	    0x4881ecf00000	                           sub rsp, 0xf0	      2959	sequencer.c	FUNCTION_86
0x40093de	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	      2959	sequencer.c	FUNCTION_86
0x40093e5	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	      2959	sequencer.c	FUNCTION_86
0x40093ec	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	      2959	sequencer.c	FUNCTION_86
0x40093f3	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	      2959	sequencer.c	FUNCTION_86
0x40093fa	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	      2959	sequencer.c	FUNCTION_86
0x4009401	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	      2959	sequencer.c	FUNCTION_86
0x4009408	            0x84c0	                             test al, al	      2959	sequencer.c	FUNCTION_86
0x400940a	            0x7420	                            je 0x400942c	      2959	sequencer.c	FUNCTION_86
0x400940c	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	      2959	sequencer.c	FUNCTION_86
0x4009410	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	      2959	sequencer.c	FUNCTION_86
0x4009414	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	      2959	sequencer.c	FUNCTION_86
0x4009418	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	      2959	sequencer.c	FUNCTION_86
0x400941c	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	      2959	sequencer.c	FUNCTION_86
0x4009420	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	      2959	sequencer.c	FUNCTION_86
0x4009424	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	      2959	sequencer.c	FUNCTION_86
0x4009428	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	      2959	sequencer.c	FUNCTION_86
0x400942c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2959	sequencer.c	FUNCTION_86
0x4009435	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2959	sequencer.c	FUNCTION_86
0x400943c	            0x31c0	                            xor eax, eax	      2959	sequencer.c	FUNCTION_86
0x400943e	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4009448	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4009452	        0x488d4510	                   lea rax, [rbp + 0x10]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4009456	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x400945d	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2963	sequencer.c	FUNCTION_86	CALL_1
0x4009464	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2963	sequencer.c	FUNCTION_86	CALL_1
0x400946b	      0xbe00000000	                              mov esi, 0	      2964	sequencer.c	FUNCTION_86
0x4009470	      0xbf00000000	                              mov edi, 0	      2964	sequencer.c	FUNCTION_86
0x4009475	      0xe8f36cffff	                  call sym.strbuf_setlen	      2964	sequencer.c	FUNCTION_86
0x400947a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4009481	          0x4889c7	                            mov rdi, rax	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4009484	      0xe8f67bffff	                    call sym.action_name	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4009489	          0x4889c6	                            mov rsi, rax	      2965	sequencer.c	FUNCTION_86	CALL_3
0x400948c	      0xbf00000000	                              mov edi, 0	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4009491	      0xe8df6dffff	                  call sym.strbuf_addstr	      2965	sequencer.c	FUNCTION_86	CALL_3
0x4009496	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2966	sequencer.c	FUNCTION_86	IF_1
0x400949e	            0x741e	                            je 0x40094be	      2966	sequencer.c	FUNCTION_86	IF_1
0x40094a0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094a7	          0x4889c2	                            mov rdx, rax	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094aa	      0xbe00000000	                              mov esi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094af	      0xbf00000000	                              mov edi, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094b4	      0xb800000000	                              mov eax, 0	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094b9	      0xe800000000	                          call 0x40094be	      2967	sequencer.c	FUNCTION_86	CALL_4
0x40094be	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2968	sequencer.c	FUNCTION_86	IF_2
0x40094c6	            0x742a	                            je 0x40094f2	      2968	sequencer.c	FUNCTION_86	IF_2
0x40094c8	      0xbe00000000	                              mov esi, 0	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_5
0x40094cd	      0xbf00000000	                              mov edi, 0	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_5
0x40094d2	      0xe89e6dffff	                  call sym.strbuf_addstr	      2969	sequencer.c	FUNCTION_86	IF_2	CALL_5
0x40094d7	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x40094de	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x40094e5	          0x4889c6	                            mov rsi, rax	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x40094e8	      0xbf00000000	                              mov edi, 0	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x40094ed	      0xe800000000	                          call 0x40094f2	      2970	sequencer.c	FUNCTION_86	IF_2	CALL_6
0x40094f2	    0x488b05000000	            mov rax, qword [0x040094f9] 	      2974	sequencer.c	FUNCTION_86
0x40094f9	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      2975	sequencer.c	FUNCTION_86
0x4009500	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2975	sequencer.c	FUNCTION_86
0x4009509	            0x7405	                            je 0x4009510	      2975	sequencer.c	FUNCTION_86
0x400950b	      0xe800000000	                          call 0x4009510	      2975	sequencer.c	FUNCTION_86
0x4009510	              0xc9	                                   leave	      2975	sequencer.c	FUNCTION_86
0x4009511	              0xc3	                                     ret	      2975	sequencer.c	FUNCTION_86
implicit_ident_advice	CALL,8:FOR,0:WHILE,0:ELSE,1:DO,0:IF,1:SWITCH,0:functions,0	39
0x4002d7a	              0x55	                                push rbp	       977	sequencer.c	FUNCTION_34
0x4002d7b	          0x4889e5	                            mov rbp, rsp	       977	sequencer.c	FUNCTION_34
0x4002d7e	        0x4883ec20	                           sub rsp, 0x20	       977	sequencer.c	FUNCTION_34
0x4002d82	      0xbe00000000	                              mov esi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x4002d87	      0xbf00000000	                              mov edi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x4002d8c	      0xe800000000	                          call 0x4002d91	       978	sequencer.c	FUNCTION_34	CALL_1
0x4002d91	        0x488945f0	             mov qword [rbp - 0x10], rax	       978	sequencer.c	FUNCTION_34	CALL_1
0x4002d95	      0xbf00000000	                              mov edi, 0	       979	sequencer.c	FUNCTION_34	CALL_2
0x4002d9a	      0xe800000000	                          call 0x4002d9f	       979	sequencer.c	FUNCTION_34	CALL_2
0x4002d9f	        0x488945f8	                mov qword [rbp - 8], rax	       979	sequencer.c	FUNCTION_34	CALL_2
0x4002da3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002da7	          0x4889c7	                            mov rdi, rax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002daa	      0xe800000000	                          call 0x4002daf	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002daf	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002db1	            0x7510	                           jne 0x4002dc3	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002db3	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002db7	          0x4889c7	                            mov rdi, rax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dba	      0xe800000000	                          call 0x4002dbf	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dbf	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dc1	            0x7407	                            je 0x4002dca	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dc3	      0xb801000000	                              mov eax, 1	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dc8	            0xeb05	                           jmp 0x4002dcf	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dca	      0xb800000000	                              mov eax, 0	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dcf	          0x8945ec	             mov dword [rbp - 0x14], eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4002dd2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       982	sequencer.c	FUNCTION_34	CALL_5
0x4002dd6	          0x4889c7	                            mov rdi, rax	       982	sequencer.c	FUNCTION_34	CALL_5
0x4002dd9	      0xe800000000	                          call 0x4002dde	       982	sequencer.c	FUNCTION_34	CALL_5
0x4002dde	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	sequencer.c	FUNCTION_34	CALL_6
0x4002de2	          0x4889c7	                            mov rdi, rax	       983	sequencer.c	FUNCTION_34	CALL_6
0x4002de5	      0xe800000000	                          call 0x4002dea	       983	sequencer.c	FUNCTION_34	CALL_6
0x4002dea	        0x837dec00	               cmp dword [rbp - 0x14], 0	       985	sequencer.c	FUNCTION_34	IF_1
0x4002dee	            0x740c	                            je 0x4002dfc	       985	sequencer.c	FUNCTION_34	IF_1
0x4002df0	      0xbf00000000	                              mov edi, 0	       986	sequencer.c	FUNCTION_34	CALL_7
0x4002df5	      0xe8add5ffff	                               call sym.	       986	sequencer.c	FUNCTION_34	CALL_7
0x4002dfa	            0xeb0a	                           jmp 0x4002e06	       986	sequencer.c	FUNCTION_34	CALL_7
0x4002dfc	      0xbf00000000	                              mov edi, 0	       988	sequencer.c	FUNCTION_34	CALL_8
0x4002e01	      0xe8a1d5ffff	                               call sym.	       988	sequencer.c	FUNCTION_34	CALL_8
0x4002e06	              0xc9	                                   leave	       990	sequencer.c	FUNCTION_34
0x4002e07	              0xc3	                                     ret	       990	sequencer.c	FUNCTION_34
rollback_is_safe	CALL,16:FOR,0:WHILE,0:ELSE,2:DO,0:IF,4:SWITCH,0:functions,0	85
0x4006c06	              0x55	                                push rbp	      2228	sequencer.c	FUNCTION_68
0x4006c07	          0x4889e5	                            mov rbp, rsp	      2228	sequencer.c	FUNCTION_68
0x4006c0a	              0x53	                                push rbx	      2228	sequencer.c	FUNCTION_68
0x4006c0b	        0x4883ec68	                           sub rsp, 0x68	      2228	sequencer.c	FUNCTION_68
0x4006c0f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2228	sequencer.c	FUNCTION_68
0x4006c18	        0x488945e8	             mov qword [rbp - 0x18], rax	      2228	sequencer.c	FUNCTION_68
0x4006c1c	            0x31c0	                            xor eax, eax	      2228	sequencer.c	FUNCTION_68
0x4006c1e	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2229	sequencer.c	FUNCTION_68
0x4006c26	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2229	sequencer.c	FUNCTION_68
0x4006c2e	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2229	sequencer.c	FUNCTION_68
0x4006c36	      0xe8d699ffff	     call sym.git_path_abort_safety_file	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c3b	          0x4889c1	                            mov rcx, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c3e	        0x488d4590	                   lea rax, [rbp - 0x70]	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c42	      0xba00000000	                              mov edx, 0	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c47	          0x4889ce	                            mov rsi, rcx	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c4a	          0x4889c7	                            mov rdi, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c4d	      0xe800000000	                          call 0x4006c52	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c52	          0x4885c0	                           test rax, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c55	            0x785f	                            js 0x4006cb6	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4006c57	        0x488d4590	                   lea rax, [rbp - 0x70]	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4006c5b	          0x4889c7	                            mov rdi, rax	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4006c5e	      0xe800000000	                          call 0x4006c63	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4006c63	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c67	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c6b	          0x4889d6	                            mov rsi, rdx	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c6e	          0x4889c7	                            mov rdi, rax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c71	      0xe800000000	                          call 0x4006c76	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c76	            0x85c0	                           test eax, eax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c78	            0x742e	                            je 0x4006ca8	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4006c7a	        0x488d4590	                   lea rax, [rbp - 0x70]	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4006c7e	          0x4889c7	                            mov rdi, rax	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4006c81	      0xe800000000	                          call 0x4006c86	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4006c86	      0xe88699ffff	     call sym.git_path_abort_safety_file	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c8b	          0x4889c3	                            mov rbx, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c8e	      0xbf00000000	                              mov edi, 0	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c93	      0xe80f97ffff	                               call sym.	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c98	          0x4889de	                            mov rsi, rbx	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c9b	          0x4889c7	                            mov rdi, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006c9e	      0xb800000000	                              mov eax, 0	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006ca3	      0xe800000000	                          call 0x4006ca8	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4006ca8	        0x488d4590	                   lea rax, [rbp - 0x70]	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4006cac	          0x4889c7	                            mov rdi, rax	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4006caf	      0xe800000000	                          call 0x4006cb4	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4006cb4	            0xeb3c	                           jmp 0x4006cf2	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4006cb6	      0xe800000000	                          call 0x4006cbb	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cbb	            0x8b00	                    mov eax, dword [rax]	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cbd	          0x83f802	                              cmp eax, 2	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cc0	            0x750e	                           jne 0x4006cd0	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cc2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cc6	          0x4889c7	                            mov rdi, rax	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cc9	      0xe8cc97ffff	                         call sym.oidclr	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cce	            0xeb22	                           jmp 0x4006cf2	      2241	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x4006cd0	      0xe83c99ffff	     call sym.git_path_abort_safety_file	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006cd5	          0x4889c3	                            mov rbx, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006cd8	      0xbf00000000	                              mov edi, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006cdd	      0xe8c596ffff	                               call sym.	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006ce2	          0x4889de	                            mov rsi, rbx	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006ce5	          0x4889c7	                            mov rdi, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006ce8	      0xb800000000	                              mov eax, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006ced	      0xe800000000	                          call 0x4006cf2	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4006cf2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006cf6	          0x4889c6	                            mov rsi, rax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006cf9	      0xbf00000000	                              mov edi, 0	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006cfe	      0xe800000000	                          call 0x4006d03	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006d03	            0x85c0	                           test eax, eax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006d05	            0x740c	                            je 0x4006d13	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4006d07	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2246	sequencer.c	FUNCTION_68	CALL_15
0x4006d0b	          0x4889c7	                            mov rdi, rax	      2246	sequencer.c	FUNCTION_68	CALL_15
0x4006d0e	      0xe88797ffff	                         call sym.oidclr	      2246	sequencer.c	FUNCTION_68	CALL_15
0x4006d13	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d17	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d1b	          0x4889d6	                            mov rsi, rdx	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d1e	          0x4889c7	                            mov rdi, rax	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d21	      0xe8d796ffff	                         call sym.oidcmp	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d26	            0x85c0	                           test eax, eax	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d28	           0xf94c0	                                 sete al	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d2b	           0xfb6c0	                           movzx eax, al	      2248	sequencer.c	FUNCTION_68	CALL_16
0x4006d2e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2249	sequencer.c	FUNCTION_68
0x4006d32	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2249	sequencer.c	FUNCTION_68
0x4006d3b	            0x7405	                            je 0x4006d42	      2249	sequencer.c	FUNCTION_68
0x4006d3d	      0xe800000000	                          call 0x4006d42	      2249	sequencer.c	FUNCTION_68
0x4006d42	        0x4883c468	                           add rsp, 0x68	      2249	sequencer.c	FUNCTION_68
0x4006d46	              0x5b	                                 pop rbx	      2249	sequencer.c	FUNCTION_68
0x4006d47	              0x5d	                                 pop rbp	      2249	sequencer.c	FUNCTION_68
0x4006d48	              0xc3	                                     ret	      2249	sequencer.c	FUNCTION_68
read_populate_todo	CALL,26:FOR,1:WHILE,0:ELSE,3:DO,0:IF,11:SWITCH,0:functions,0	222
0x4005c9a	              0x55	                                push rbp	      1969	sequencer.c	FUNCTION_60
0x4005c9b	          0x4889e5	                            mov rbp, rsp	      1969	sequencer.c	FUNCTION_60
0x4005c9e	              0x53	                                push rbx	      1969	sequencer.c	FUNCTION_60
0x4005c9f	    0x4881ec380100	                          sub rsp, 0x138	      1969	sequencer.c	FUNCTION_60
0x4005ca6	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	      1969	sequencer.c	FUNCTION_60
0x4005cad	    0x4889b5c0feff	            mov qword [rbp - 0x140], rsi	      1969	sequencer.c	FUNCTION_60
0x4005cb4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1969	sequencer.c	FUNCTION_60
0x4005cbd	        0x488945e8	             mov qword [rbp - 0x18], rax	      1969	sequencer.c	FUNCTION_60
0x4005cc1	            0x31c0	                            xor eax, eax	      1969	sequencer.c	FUNCTION_60
0x4005cc3	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1971	sequencer.c	FUNCTION_60	CALL_1
0x4005cca	          0x4889c7	                            mov rdi, rax	      1971	sequencer.c	FUNCTION_60	CALL_1
0x4005ccd	      0xe839b0ffff	                  call sym.get_todo_path	      1971	sequencer.c	FUNCTION_60	CALL_1
0x4005cd2	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      1971	sequencer.c	FUNCTION_60	CALL_1
0x4005cd9	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1974	sequencer.c	FUNCTION_60
0x4005ce0	      0xbe00000000	                              mov esi, 0	      1974	sequencer.c	FUNCTION_60
0x4005ce5	          0x4889c7	                            mov rdi, rax	      1974	sequencer.c	FUNCTION_60
0x4005ce8	      0xe880a4ffff	                  call sym.strbuf_setlen	      1974	sequencer.c	FUNCTION_60
0x4005ced	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005cf4	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005cfb	          0x4889d6	                            mov rsi, rdx	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005cfe	          0x4889c7	                            mov rdi, rax	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005d01	      0xe8e0feffff	      call sym.strbuf_read_file_or_whine	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005d06	          0x4885c0	                           test rax, rax	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005d09	            0x790a	                           jns 0x4005d15	      1975	sequencer.c	FUNCTION_60	IF_1	CALL_2
0x4005d0b	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	sequencer.c	FUNCTION_60	IF_1
0x4005d10	      0xe95e030000	                           jmp 0x4006073	      1976	sequencer.c	FUNCTION_60	IF_1
0x4005d15	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      1978	sequencer.c	FUNCTION_60
0x4005d1c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1978	sequencer.c	FUNCTION_60
0x4005d23	          0x4889d6	                            mov rsi, rdx	      1978	sequencer.c	FUNCTION_60
0x4005d26	          0x4889c7	                            mov rdi, rax	      1978	sequencer.c	FUNCTION_60
0x4005d29	      0xe800000000	                          call 0x4005d2e	      1978	sequencer.c	FUNCTION_60
0x4005d2e	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      1978	sequencer.c	FUNCTION_60
0x4005d34	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	      1979	sequencer.c	FUNCTION_60	IF_2
0x4005d3b	            0x742e	                            je 0x4005d6b	      1979	sequencer.c	FUNCTION_60	IF_2
0x4005d3d	      0xbf00000000	                              mov edi, 0	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d42	      0xe860a6ffff	                               call sym.	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d47	          0x4889c2	                            mov rdx, rax	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d4a	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d51	          0x4889c6	                            mov rsi, rax	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d54	          0x4889d7	                            mov rdi, rdx	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d57	      0xb800000000	                              mov eax, 0	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d5c	      0xe800000000	                          call 0x4005d61	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d61	      0xe8daa2ffff	                    call sym.const_error	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d66	      0xe908030000	                           jmp 0x4006073	      1980	sequencer.c	FUNCTION_60	CALL_3
0x4005d6b	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d72	        0x488d5034	                   lea rdx, [rax + 0x34]	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d76	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d7d	          0x4889c6	                            mov rsi, rax	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d80	          0x4889d7	                            mov rdi, rdx	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d83	      0xe800000000	                          call 0x4005d88	      1981	sequencer.c	FUNCTION_60	CALL_4
0x4005d88	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005d8f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005d93	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005d9a	          0x4889d6	                            mov rsi, rdx	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005d9d	          0x4889c7	                            mov rdi, rax	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005da0	      0xe88ffbffff	              call sym.parse_insn_buffer	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005da5	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	      1983	sequencer.c	FUNCTION_60	CALL_5
0x4005dab	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	      1984	sequencer.c	FUNCTION_60	IF_3
0x4005db2	            0x7462	                            je 0x4005e16	      1984	sequencer.c	FUNCTION_60	IF_3
0x4005db4	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_6
0x4005dbb	          0x4889c7	                            mov rdi, rax	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_6
0x4005dbe	      0xe805afffff	                    call sym.is_rebase_i	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_6
0x4005dc3	            0x85c0	                           test eax, eax	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_6
0x4005dc5	            0x7421	                            je 0x4005de8	      1985	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_6
0x4005dc7	      0xbf00000000	                              mov edi, 0	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005dcc	      0xe8d6a5ffff	                               call sym.	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005dd1	          0x4889c7	                            mov rdi, rax	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005dd4	      0xb800000000	                              mov eax, 0	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005dd9	      0xe800000000	                          call 0x4005dde	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005dde	      0xe85da2ffff	                    call sym.const_error	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005de3	      0xe98b020000	                           jmp 0x4006073	      1986	sequencer.c	FUNCTION_60	IF_3	IF_4	CALL_7
0x4005de8	      0xbf00000000	                              mov edi, 0	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005ded	      0xe8b5a5ffff	                               call sym.	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005df2	          0x4889c2	                            mov rdx, rax	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005df5	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005dfc	          0x4889c6	                            mov rsi, rax	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005dff	          0x4889d7	                            mov rdi, rdx	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005e02	      0xb800000000	                              mov eax, 0	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005e07	      0xe800000000	                          call 0x4005e0c	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005e0c	      0xe82fa2ffff	                    call sym.const_error	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005e11	      0xe95d020000	                           jmp 0x4006073	      1988	sequencer.c	FUNCTION_60	IF_3	CALL_8
0x4005e16	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e1d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e20	            0x85c0	                           test eax, eax	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e22	            0x7545	                           jne 0x4005e69	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e24	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e2b	          0x4889c7	                            mov rdi, rax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e2e	      0xe895aeffff	                    call sym.is_rebase_i	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e33	            0x85c0	                           test eax, eax	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e35	            0x7411	                            je 0x4005e48	      1991	sequencer.c	FUNCTION_60	IF_5
0x4005e37	      0xe862a8ffff	               call sym.rebase_path_done	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e3c	          0x4889c7	                            mov rdi, rax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e3f	      0xe800000000	                          call 0x4005e44	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e44	            0x85c0	                           test eax, eax	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e46	            0x7521	                           jne 0x4005e69	      1992	sequencer.c	FUNCTION_60	IF_5	CALL_11
0x4005e48	      0xbf00000000	                              mov edi, 0	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e4d	      0xe855a5ffff	                               call sym.	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e52	          0x4889c7	                            mov rdi, rax	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e55	      0xb800000000	                              mov eax, 0	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e5a	      0xe800000000	                          call 0x4005e5f	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e5f	      0xe8dca1ffff	                    call sym.const_error	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e64	      0xe90a020000	                           jmp 0x4006073	      1993	sequencer.c	FUNCTION_60	CALL_12
0x4005e69	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_13
0x4005e70	          0x4889c7	                            mov rdi, rax	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_13
0x4005e73	      0xe850aeffff	                    call sym.is_rebase_i	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_13
0x4005e78	            0x85c0	                           test eax, eax	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_13
0x4005e7a	     0xf85bf000000	                           jne 0x4005f3f	      1995	sequencer.c	FUNCTION_60	IF_6	CALL_13
0x4005e80	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1997	sequencer.c	FUNCTION_60	IF_6
0x4005e87	            0x8b00	                    mov eax, dword [rax]	      1997	sequencer.c	FUNCTION_60	IF_6
0x4005e89	          0x83f801	                              cmp eax, 1	      1997	sequencer.c	FUNCTION_60	IF_6
0x4005e8c	           0xf95c0	                                setne al	      1997	sequencer.c	FUNCTION_60	IF_6
0x4005e8f	           0xfb6c0	                           movzx eax, al	      1996	sequencer.c	FUNCTION_60	IF_6
0x4005e92	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	      1996	sequencer.c	FUNCTION_60	IF_6
0x4005e98	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005ea2	      0xe982000000	                           jmp 0x4005f29	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005ea7	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005eae	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005eb2	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005eb8	          0x4863d0	                         movsxd rdx, eax	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ebb	          0x4889d0	                            mov rax, rdx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ebe	          0x4801c0	                            add rax, rax	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ec1	          0x4801d0	                            add rax, rdx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ec4	        0x48c1e004	                              shl rax, 4	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ec8	          0x4801c8	                            add rax, rcx	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ecb	            0x8b00	                    mov eax, dword [rax]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ecd	    0x3b85dcfeffff	            cmp eax, dword [rbp - 0x124]	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ed3	            0x7509	                           jne 0x4005ede	      2001	sequencer.c	FUNCTION_60	IF_6	FOR_1	IF_7
0x4005ed5	    0x8385d4feffff	              add dword [rbp - 0x12c], 1	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005edc	            0xeb4b	                           jmp 0x4005f29	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005ede	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	      2003	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005ee5	            0x7521	                           jne 0x4005f08	      2003	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005ee7	      0xbf00000000	                              mov edi, 0	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005eec	      0xe8b6a4ffff	                               call sym.	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005ef1	          0x4889c7	                            mov rdi, rax	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005ef4	      0xb800000000	                              mov eax, 0	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005ef9	      0xe800000000	                          call 0x4005efe	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005efe	      0xe83da1ffff	                    call sym.const_error	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005f03	      0xe96b010000	                           jmp 0x4006073	      2004	sequencer.c	FUNCTION_60	IF_6	ELSE_1	IF_8
0x4005f08	      0xbf00000000	                              mov edi, 0	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f0d	      0xe895a4ffff	                               call sym.	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f12	          0x4889c7	                            mov rdi, rax	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f15	      0xb800000000	                              mov eax, 0	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f1a	      0xe800000000	                          call 0x4005f1f	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f1f	      0xe81ca1ffff	                    call sym.const_error	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f24	      0xe94a010000	                           jmp 0x4006073	      2006	sequencer.c	FUNCTION_60	IF_6	CALL_15
0x4005f29	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005f30	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005f33	    0x3b85d4feffff	            cmp eax, dword [rbp - 0x12c]	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005f39	     0xf8f68ffffff	                            jg 0x4005ea7	      2000	sequencer.c	FUNCTION_60	IF_6	FOR_1
0x4005f3f	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_16
0x4005f46	          0x4889c7	                            mov rdi, rax	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_16
0x4005f49	      0xe87aadffff	                    call sym.is_rebase_i	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_16
0x4005f4e	            0x85c0	                           test eax, eax	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_16
0x4005f50	     0xf8418010000	                            je 0x400606e	      2009	sequencer.c	FUNCTION_60	IF_9	CALL_16
0x4005f56	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f5d	      0xb800000000	                              mov eax, 0	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f62	      0xb90b000000	                            mov ecx, 0xb	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f67	          0x4889d7	                            mov rdi, rdx	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f6a	          0xf348ab	              rep stosq qword [rdi], rax	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f6d	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      2010	sequencer.c	FUNCTION_60	IF_9
0x4005f78	      0xe87fa7ffff	           call sym.rebase_path_msgtotal	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_18
0x4005f7d	      0xbe00000000	                              mov esi, 0	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_18
0x4005f82	          0x4889c7	                            mov rdi, rax	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_18
0x4005f85	      0xe800000000	                          call 0x4005f8a	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_18
0x4005f8a	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      2011	sequencer.c	FUNCTION_60	IF_9	CALL_18
0x4005f91	      0xe808a7ffff	               call sym.rebase_path_done	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005f96	          0x4889c1	                            mov rcx, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005f99	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fa0	      0xba00000000	                              mov edx, 0	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fa5	          0x4889ce	                            mov rsi, rcx	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fa8	          0x4889c7	                            mov rdi, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fab	      0xe800000000	                          call 0x4005fb0	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fb0	          0x4885c0	                           test rax, rax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fb3	            0x7e3a	                           jle 0x4005fef	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fb5	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_21
0x4005fbc	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_21
0x4005fc3	          0x4889d6	                            mov rsi, rdx	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_21
0x4005fc6	          0x4889c7	                            mov rdi, rax	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_21
0x4005fc9	      0xe866f9ffff	              call sym.parse_insn_buffer	      2014	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_21
0x4005fce	            0x85c0	                           test eax, eax	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fd0	            0x751d	                           jne 0x4005fef	      2013	sequencer.c	FUNCTION_60	IF_9	IF_10	CALL_20
0x4005fd2	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fd9	          0x4889c7	                            mov rdi, rax	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fdc	      0xe8f3faffff	                 call sym.count_commands	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fe1	            0x89c2	                            mov edx, eax	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fe3	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fea	          0x89502c	             mov dword [rax + 0x2c], edx	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fed	            0xeb0e	                           jmp 0x4005ffd	      2015	sequencer.c	FUNCTION_60	IF_9	CALL_22
0x4005fef	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2017	sequencer.c	FUNCTION_60	IF_9	ELSE_3
0x4005ff6	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      2017	sequencer.c	FUNCTION_60	IF_9	ELSE_3
0x4005ffd	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2019	sequencer.c	FUNCTION_60	IF_9
0x4006004	          0x8b582c	            mov ebx, dword [rax + 0x2c] 	      2019	sequencer.c	FUNCTION_60	IF_9
0x4006007	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_23
0x400600e	          0x4889c7	                            mov rdi, rax	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_23
0x4006011	      0xe8befaffff	                 call sym.count_commands	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_23
0x4006016	          0x8d1403	                    lea edx, [rbx + rax]	      2020	sequencer.c	FUNCTION_60	IF_9	CALL_23
0x4006019	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2019	sequencer.c	FUNCTION_60	IF_9
0x4006020	          0x895030	             mov dword [rax + 0x30], edx	      2019	sequencer.c	FUNCTION_60	IF_9
0x4006023	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x400602a	          0x4889c7	                            mov rdi, rax	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x400602d	      0xe880f3ffff	              call sym.todo_list_release	      2021	sequencer.c	FUNCTION_60	IF_9	CALL_24
0x4006032	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      2023	sequencer.c	FUNCTION_60	IF_9	IF_11
0x400603a	            0x7432	                            je 0x400606e	      2023	sequencer.c	FUNCTION_60	IF_9	IF_11
0x400603c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x4006043	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x4006046	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x400604d	      0xbe00000000	                              mov esi, 0	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x4006052	          0x4889c7	                            mov rdi, rax	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x4006055	      0xb800000000	                              mov eax, 0	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x400605a	      0xe800000000	                          call 0x400605f	      2024	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_25
0x400605f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_26
0x4006066	          0x4889c7	                            mov rdi, rax	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_26
0x4006069	      0xe800000000	                          call 0x400606e	      2025	sequencer.c	FUNCTION_60	IF_9	IF_11	CALL_26
0x400606e	      0xb800000000	                              mov eax, 0	      2029	sequencer.c	FUNCTION_60
0x4006073	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2030	sequencer.c	FUNCTION_60
0x4006077	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2030	sequencer.c	FUNCTION_60
0x4006080	            0x7405	                            je 0x4006087	      2030	sequencer.c	FUNCTION_60
0x4006082	      0xe800000000	                          call 0x4006087	      2030	sequencer.c	FUNCTION_60
0x4006087	    0x4881c4380100	                          add rsp, 0x138	      2030	sequencer.c	FUNCTION_60
0x400608e	              0x5b	                                 pop rbx	      2030	sequencer.c	FUNCTION_60
0x400608f	              0x5d	                                 pop rbp	      2030	sequencer.c	FUNCTION_60
0x4006090	              0xc3	                                     ret	      2030	sequencer.c	FUNCTION_60
continue_single_pick	CALL,6:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:SWITCH,0:functions,0	35
0x400a57c	              0x55	                                push rbp	      3242	sequencer.c	FUNCTION_88
0x400a57d	          0x4889e5	                            mov rbp, rsp	      3242	sequencer.c	FUNCTION_88
0x400a580	        0x4883ec20	                           sub rsp, 0x20	      3242	sequencer.c	FUNCTION_88
0x400a584	    0x64488b042528	                mov rax, qword fs:[0x28]	      3242	sequencer.c	FUNCTION_88
0x400a58d	        0x488945f8	                mov qword [rbp - 8], rax	      3242	sequencer.c	FUNCTION_88
0x400a591	            0x31c0	                            xor eax, eax	      3242	sequencer.c	FUNCTION_88
0x400a593	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3243	sequencer.c	FUNCTION_88
0x400a59b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3243	sequencer.c	FUNCTION_88
0x400a5a3	      0xe800000000	                          call 0x400a5a8	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5a8	          0x4889c7	                            mov rdi, rax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5ab	      0xe800000000	                          call 0x400a5b0	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5b0	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5b2	            0x752f	                           jne 0x400a5e3	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5b4	      0xe800000000	                          call 0x400a5b9	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x400a5b9	          0x4889c7	                            mov rdi, rax	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x400a5bc	      0xe800000000	                          call 0x400a5c1	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x400a5c1	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5c3	            0x751e	                           jne 0x400a5e3	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400a5c5	      0xbf00000000	                              mov edi, 0	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5ca	      0xe8d85dffff	                               call sym.	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5cf	          0x4889c7	                            mov rdi, rax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5d2	      0xb800000000	                              mov eax, 0	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5d7	      0xe800000000	                          call 0x400a5dc	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5dc	      0xe85f5affff	                    call sym.const_error	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5e1	            0xeb11	                           jmp 0x400a5f4	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a5e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400a5e7	      0xbe02000000	                              mov esi, 2	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400a5ec	          0x4889c7	                            mov rdi, rax	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400a5ef	      0xe800000000	                          call 0x400a5f4	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400a5f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3249	sequencer.c	FUNCTION_88
0x400a5f8	    0x644833142528	                xor rdx, qword fs:[0x28]	      3249	sequencer.c	FUNCTION_88
0x400a601	            0x7405	                            je 0x400a608	      3249	sequencer.c	FUNCTION_88
0x400a603	      0xe800000000	                          call 0x400a608	      3249	sequencer.c	FUNCTION_88
0x400a608	              0xc9	                                   leave	      3249	sequencer.c	FUNCTION_88
0x400a609	              0xc3	                                     ret	      3249	sequencer.c	FUNCTION_88
try_to_commit	CALL,33:FOR,0:WHILE,0:ELSE,1:DO,0:IF,15:SWITCH,0:functions,0	281
0x40033e0	              0x55	                                push rbp	      1105	sequencer.c	FUNCTION_37
0x40033e1	          0x4889e5	                            mov rbp, rsp	      1105	sequencer.c	FUNCTION_37
0x40033e4	              0x53	                                push rbx	      1105	sequencer.c	FUNCTION_37
0x40033e5	    0x4881ece80000	                           sub rsp, 0xe8	      1105	sequencer.c	FUNCTION_37
0x40033ec	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1105	sequencer.c	FUNCTION_37
0x40033f3	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1105	sequencer.c	FUNCTION_37
0x40033fa	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1105	sequencer.c	FUNCTION_37
0x4003401	    0x898d24ffffff	             mov dword [rbp - 0xdc], ecx	      1105	sequencer.c	FUNCTION_37
0x4003407	    0x4c898518ffff	              mov qword [rbp - 0xe8], r8	      1105	sequencer.c	FUNCTION_37
0x400340e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	sequencer.c	FUNCTION_37
0x4003417	        0x488945e8	             mov qword [rbp - 0x18], rax	      1105	sequencer.c	FUNCTION_37
0x400341b	            0x31c0	                            xor eax, eax	      1105	sequencer.c	FUNCTION_37
0x400341d	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      1108	sequencer.c	FUNCTION_37
0x4003428	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1109	sequencer.c	FUNCTION_37
0x4003433	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1110	sequencer.c	FUNCTION_37
0x400343b	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1110	sequencer.c	FUNCTION_37
0x4003443	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1110	sequencer.c	FUNCTION_37
0x400344b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1111	sequencer.c	FUNCTION_37
0x4003453	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1111	sequencer.c	FUNCTION_37
0x400345b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1111	sequencer.c	FUNCTION_37
0x4003463	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1112	sequencer.c	FUNCTION_37
0x400346e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1113	sequencer.c	FUNCTION_37
0x4003479	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      1115	sequencer.c	FUNCTION_37
0x4003483	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x400348a	          0x4889c7	                            mov rdi, rax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x400348d	      0xe83bfeffff	                     call sym.parse_head	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4003492	            0x85c0	                           test eax, eax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4003494	            0x740a	                            je 0x40034a0	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4003496	      0xb8ffffffff	                     mov eax, 0xffffffff	      1118	sequencer.c	FUNCTION_37	IF_1
0x400349b	      0xe95b040000	                           jmp 0x40038fb	      1118	sequencer.c	FUNCTION_37	IF_1
0x40034a0	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1120	sequencer.c	FUNCTION_37	IF_2
0x40034a6	          0x83e004	                              and eax, 4	      1120	sequencer.c	FUNCTION_37	IF_2
0x40034a9	            0x85c0	                           test eax, eax	      1120	sequencer.c	FUNCTION_37	IF_2
0x40034ab	     0xf8430010000	                            je 0x40035e1	      1120	sequencer.c	FUNCTION_37	IF_2
0x40034b1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x40034b9	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x40034c1	      0xe800000000	                          call 0x40034c6	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x40034c6	        0x48894580	             mov qword [rbp - 0x80], rax	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x40034ca	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034d1	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034d5	      0xbe00000000	                              mov esi, 0	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034da	          0x4889c7	                            mov rdi, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034dd	      0xe800000000	                          call 0x40034e2	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034e2	        0x48894588	             mov qword [rbp - 0x78], rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40034e6	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x40034ee	            0x7550	                           jne 0x4003540	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x40034f0	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      1127	sequencer.c	FUNCTION_37	IF_2	IF_3
0x40034fb	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4003502	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4003506	          0x4889d6	                            mov rsi, rdx	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4003509	          0x4889c7	                            mov rdi, rax	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x400350c	      0xe800000000	                          call 0x4003511	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4003511	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1130	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4003515	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1130	sequencer.c	FUNCTION_37	IF_2	IF_3
0x400351c	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x4003523	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x400352a	          0x4889d6	                            mov rsi, rdx	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x400352d	          0x4889c7	                            mov rdi, rax	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x4003530	      0xe840cdffff	                  call sym.strbuf_addstr	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x4003535	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4003540	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4003544	          0x4889c7	                            mov rdi, rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4003547	      0xe802edffff	                     call sym.get_author	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x400354c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4003553	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x400355a	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1134	sequencer.c	FUNCTION_37	IF_2	CALL_6
0x4003561	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4003568	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x400356c	          0x4889d6	                            mov rsi, rdx	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x400356f	          0x4889c7	                            mov rdi, rax	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4003572	      0xe800000000	                          call 0x4003577	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4003577	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x400357f	            0x7527	                           jne 0x40035a8	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x4003581	      0xbf00000000	                              mov edi, 0	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4003586	      0xe81cceffff	                               call sym.	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x400358b	          0x4889c7	                            mov rdi, rax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x400358e	      0xb800000000	                              mov eax, 0	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4003593	      0xe800000000	                          call 0x4003598	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4003598	      0xe8a3caffff	                    call sym.const_error	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x400359d	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40035a3	      0xe917030000	                           jmp 0x40038bf	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x40035a8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40035af	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40035b3	          0x4889c7	                            mov rdi, rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40035b6	      0xe800000000	                          call 0x40035bb	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40035bb	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x40035c2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035c9	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035cd	          0x4889d6	                            mov rsi, rdx	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035d0	          0x4889c7	                            mov rdi, rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035d3	      0xe800000000	                          call 0x40035d8	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035d8	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035df	            0xeb25	                           jmp 0x4003606	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x40035e1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x40035e8	          0x4885c0	                           test rax, rax	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x40035eb	            0x7419	                            je 0x4003606	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x40035ed	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x40035f4	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x40035fb	          0x4889d6	                            mov rsi, rdx	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x40035fe	          0x4889c7	                            mov rdi, rax	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4003601	      0xe800000000	                          call 0x4003606	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4003606	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400360a	      0xba00000000	                              mov edx, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400360f	      0xbe00000000	                              mov esi, 0	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4003614	          0x4889c7	                            mov rdi, rax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4003617	      0xe800000000	                          call 0x400361c	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400361c	            0x85c0	                           test eax, eax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x400361e	            0x7427	                            je 0x4003647	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4003620	      0xbf00000000	                              mov edi, 0	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x4003625	      0xe87dcdffff	                               call sym.	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x400362a	          0x4889c7	                            mov rdi, rax	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x400362d	      0xb800000000	                              mov eax, 0	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x4003632	      0xe800000000	                          call 0x4003637	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x4003637	      0xe804caffff	                    call sym.const_error	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x400363c	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1147	sequencer.c	FUNCTION_37	IF_6	CALL_13
0x4003642	      0xe978020000	                           jmp 0x40038bf	      1148	sequencer.c	FUNCTION_37	IF_6
0x4003647	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400364d	          0x83e001	                              and eax, 1	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003650	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003652	            0x7547	                           jne 0x400369b	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003654	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400365b	          0x4885c0	                           test rax, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400365e	            0x7414	                            je 0x4003674	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003660	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1152	sequencer.c	FUNCTION_37	IF_7	CALL_15
0x4003667	          0x4889c7	                            mov rdi, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400366a	      0xe800000000	                          call 0x400366f	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400366f	          0x4889c2	                            mov rdx, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003672	            0xeb05	                           jmp 0x4003679	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003674	      0xba00000000	                              mov edx, 0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003679	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400367d	          0x4889c6	                            mov rsi, rax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003680	          0x4889d7	                            mov rdi, rdx	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003683	      0xe875cdffff	                         call sym.oidcmp	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4003688	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400368a	            0x750f	                           jne 0x400369b	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x400368c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      1154	sequencer.c	FUNCTION_37	IF_7
0x4003696	      0xe924020000	                           jmp 0x40038bf	      1155	sequencer.c	FUNCTION_37	IF_7
0x400369b	      0xbf00000000	                              mov edi, 0	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40036a0	      0xe800000000	                          call 0x40036a5	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40036a5	          0x4885c0	                           test rax, rax	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40036a8	     0xf848a000000	                            je 0x4003738	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x40036ae	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036b5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036bc	          0x4889d6	                            mov rsi, rdx	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036bf	          0x4889c7	                            mov rdi, rax	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036c2	      0xe86df5ffff	    call sym.run_prepare_commit_msg_hook	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036c7	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1159	sequencer.c	FUNCTION_37	IF_8	CALL_17
0x40036cd	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1160	sequencer.c	FUNCTION_37	IF_8	IF_9
0x40036d4	     0xf85e4010000	                           jne 0x40038be	      1160	sequencer.c	FUNCTION_37	IF_8	IF_9
0x40036da	      0xe800000000	                          call 0x40036df	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036df	          0x4889c1	                            mov rcx, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036e2	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036e6	      0xba00080000	                          mov edx, 0x800	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036eb	          0x4889ce	                            mov rsi, rcx	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036ee	          0x4889c7	                            mov rdi, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036f1	      0xe800000000	                          call 0x40036f6	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036f6	          0x4885c0	                           test rax, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036f9	            0x7932	                           jns 0x400372d	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x40036fb	      0xe800000000	                          call 0x4003700	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003700	          0x4889c3	                            mov rbx, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003703	      0xbf00000000	                              mov edi, 0	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003708	      0xe89accffff	                               call sym.	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x400370d	          0x4889de	                            mov rsi, rbx	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003710	          0x4889c7	                            mov rdi, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003713	      0xb800000000	                              mov eax, 0	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003718	      0xe800000000	                          call 0x400371d	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x400371d	      0xe81ec9ffff	                    call sym.const_error	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003722	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4003728	      0xe992010000	                           jmp 0x40038bf	      1167	sequencer.c	FUNCTION_37	IF_8	IF_10
0x400372d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1169	sequencer.c	FUNCTION_37	IF_8
0x4003731	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1169	sequencer.c	FUNCTION_37	IF_8
0x4003738	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1172	sequencer.c	FUNCTION_37
0x400373e	          0x83e008	                              and eax, 8	      1172	sequencer.c	FUNCTION_37
0x4003741	            0x85c0	                           test eax, eax	      1172	sequencer.c	FUNCTION_37
0x4003743	            0x750c	                           jne 0x4003751	      1172	sequencer.c	FUNCTION_37
0x4003745	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1172	sequencer.c	FUNCTION_37
0x400374c	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1172	sequencer.c	FUNCTION_37
0x400374f	            0xeb05	                           jmp 0x4003756	      1172	sequencer.c	FUNCTION_37
0x4003751	      0xb803000000	                              mov eax, 3	      1172	sequencer.c	FUNCTION_37
0x4003756	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      1172	sequencer.c	FUNCTION_37
0x400375c	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 1	      1175	sequencer.c	FUNCTION_37	IF_11
0x4003763	            0x741e	                            je 0x4003783	      1175	sequencer.c	FUNCTION_37	IF_11
0x4003765	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 3	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400376c	           0xf94c0	                                 sete al	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400376f	           0xfb6d0	                           movzx edx, al	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4003772	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4003779	            0x89d6	                            mov esi, edx	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400377b	          0x4889c7	                            mov rdi, rax	      1176	sequencer.c	FUNCTION_37	CALL_22
0x400377e	      0xe800000000	                          call 0x4003783	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4003783	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400378a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400378d	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400378f	            0x752a	                           jne 0x40037bb	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4003791	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4003797	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400379e	            0x89d6	                            mov esi, edx	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40037a0	          0x4889c7	                            mov rdi, rax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40037a3	      0xe800000000	                          call 0x40037a8	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40037a8	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40037aa	            0x740f	                            je 0x40037bb	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x40037ac	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      1178	sequencer.c	FUNCTION_37	IF_12
0x40037b6	      0xe904010000	                           jmp 0x40038bf	      1179	sequencer.c	FUNCTION_37	IF_12
0x40037bb	      0xe800000000	                          call 0x40037c0	      1182	sequencer.c	FUNCTION_37	CALL_24
0x40037c0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1185	sequencer.c	FUNCTION_37	IF_13
0x40037c7	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1185	sequencer.c	FUNCTION_37	IF_13
0x40037cb	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037d2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037d9	        0x488b7008	                mov rsi, qword [rax + 8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037dd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037e4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037e8	    0x4c8b8d30ffff	              mov r9, qword [rbp - 0xd0]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037ef	    0x4c8b8518ffff	              mov r8, qword [rbp - 0xe8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037f6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x40037fa	    0xffb568ffffff	                 push qword [rbp - 0x98]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4003800	              0x57	                                push rdi	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4003801	          0x4889c7	                            mov rdi, rax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4003804	      0xe800000000	                          call 0x4003809	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4003809	        0x4883c410	                           add rsp, 0x10	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400380d	            0x85c0	                           test eax, eax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400380f	            0x7427	                            je 0x4003838	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4003811	      0xbf00000000	                              mov edi, 0	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4003816	      0xe88ccbffff	                               call sym.	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400381b	          0x4889c7	                            mov rdi, rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400381e	      0xb800000000	                              mov eax, 0	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4003823	      0xe800000000	                          call 0x4003828	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4003828	      0xe813c8ffff	                    call sym.const_error	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x400382d	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x4003833	      0xe987000000	                           jmp 0x40038bf	      1187	sequencer.c	FUNCTION_37	IF_13
0x4003838	      0xbf00000000	                              mov edi, 0	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x400383d	      0xe800000000	                          call 0x4003842	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x4003842	          0x4889c7	                            mov rdi, rax	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x4003845	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400384c	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003850	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003857	    0x488bb518ffff	             mov rsi, qword [rbp - 0xe8]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400385e	          0x4989c8	                             mov r8, rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003861	          0x4889d1	                            mov rcx, rdx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003864	          0x4889fa	                            mov rdx, rdi	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003867	          0x4889c7	                            mov rdi, rax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400386a	      0xe800000000	                          call 0x400386f	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400386f	            0x85c0	                           test eax, eax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003871	            0x7423	                            je 0x4003896	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4003873	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1192	sequencer.c	FUNCTION_37	IF_14
0x4003877	          0x4889c6	                            mov rsi, rax	      1192	sequencer.c	FUNCTION_37	IF_14
0x400387a	      0xbf00000000	                              mov edi, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x400387f	      0xb800000000	                              mov eax, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x4003884	      0xe800000000	                          call 0x4003889	      1192	sequencer.c	FUNCTION_37	IF_14
0x4003889	      0xe8b2c7ffff	                    call sym.const_error	      1192	sequencer.c	FUNCTION_37	IF_14
0x400388e	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1192	sequencer.c	FUNCTION_37	IF_14
0x4003894	            0xeb29	                           jmp 0x40038bf	      1193	sequencer.c	FUNCTION_37	IF_14
0x4003896	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1196	sequencer.c	FUNCTION_37	IF_15
0x400389c	          0x83e004	                              and eax, 4	      1196	sequencer.c	FUNCTION_37	IF_15
0x400389f	            0x85c0	                           test eax, eax	      1196	sequencer.c	FUNCTION_37	IF_15
0x40038a1	            0x741c	                            je 0x40038bf	      1196	sequencer.c	FUNCTION_37	IF_15
0x40038a3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038aa	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038b1	          0x4889d6	                            mov rsi, rdx	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038b4	          0x4889c7	                            mov rdi, rax	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038b7	      0xe800000000	                          call 0x40038bc	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038bc	            0xeb01	                           jmp 0x40038bf	      1197	sequencer.c	FUNCTION_37	CALL_29
0x40038be	              0x90	                                     nop	      1161	sequencer.c	FUNCTION_37	IF_8	IF_9
0x40038bf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40038c6	          0x4889c7	                            mov rdi, rax	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40038c9	      0xe800000000	                          call 0x40038ce	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40038ce	        0x488d4590	                   lea rax, [rbp - 0x70]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40038d2	          0x4889c7	                            mov rdi, rax	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40038d5	      0xe800000000	                          call 0x40038da	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40038da	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40038de	          0x4889c7	                            mov rdi, rax	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40038e1	      0xe800000000	                          call 0x40038e6	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40038e6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40038ed	          0x4889c7	                            mov rdi, rax	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40038f0	      0xe800000000	                          call 0x40038f5	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40038f5	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1205	sequencer.c	FUNCTION_37
0x40038fb	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1206	sequencer.c	FUNCTION_37
0x40038ff	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1206	sequencer.c	FUNCTION_37
0x4003908	            0x7405	                            je 0x400390f	      1206	sequencer.c	FUNCTION_37
0x400390a	      0xe800000000	                          call 0x400390f	      1206	sequencer.c	FUNCTION_37
0x400390f	        0x488b5df8	                mov rbx, qword [rbp - 8]	      1206	sequencer.c	FUNCTION_37
0x4003913	              0xc9	                                   leave	      1206	sequencer.c	FUNCTION_37
0x4003914	              0xc3	                                     ret	      1206	sequencer.c	FUNCTION_37
