cmd_for_each_ref	SWITCH,0:CALL,46:ELSE,0:FOR,1:DO,0:functions,0:WHILE,0:IF,5	277
0x400004b	              0x55	                                push rbp	        18	for-each-ref.c	FUNCTION_1
0x400004c	          0x4889e5	                            mov rbp, rsp	        18	for-each-ref.c	FUNCTION_1
0x400004f	    0x4881ecf00400	                          sub rsp, 0x4f0	        18	for-each-ref.c	FUNCTION_1
0x4000056	    0x89bd2cfbffff	            mov dword [rbp - 0x4d4], edi	        18	for-each-ref.c	FUNCTION_1
0x400005c	    0x4889b520fbff	            mov qword [rbp - 0x4e0], rsi	        18	for-each-ref.c	FUNCTION_1
0x4000063	    0x48899518fbff	            mov qword [rbp - 0x4e8], rdx	        18	for-each-ref.c	FUNCTION_1
0x400006a	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	for-each-ref.c	FUNCTION_1
0x4000073	        0x488945f8	                mov qword [rbp - 8], rax	        18	for-each-ref.c	FUNCTION_1
0x4000077	            0x31c0	                            xor eax, eax	        18	for-each-ref.c	FUNCTION_1
0x4000079	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	        20	for-each-ref.c	FUNCTION_1
0x4000084	    0x488d8540fbff	                  lea rax, [rbp - 0x4c0]	        20	for-each-ref.c	FUNCTION_1
0x400008b	    0x48898548fbff	            mov qword [rbp - 0x4b8], rax	        20	for-each-ref.c	FUNCTION_1
0x4000092	    0xc78534fbffff	              mov dword [rbp - 0x4cc], 0	        21	for-each-ref.c	FUNCTION_1
0x400009c	    0xc78538fbffff	              mov dword [rbp - 0x4c8], 0	        21	for-each-ref.c	FUNCTION_1
0x40000a6	    0x48c78570fbff	              mov qword [rbp - 0x490], 0	        24	for-each-ref.c	FUNCTION_1
0x40000b1	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	        24	for-each-ref.c	FUNCTION_1
0x40000bc	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	        24	for-each-ref.c	FUNCTION_1
0x40000c7	    0xc7857cfbffff	    mov dword [rbp - 0x484], 0xffffffff 	        24	for-each-ref.c	FUNCTION_1
0x40000d1	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	        26	for-each-ref.c	FUNCTION_1
0x40000d8	      0xb800000000	                              mov eax, 0	        26	for-each-ref.c	FUNCTION_1
0x40000dd	      0xb980000000	                           mov ecx, 0x80	        26	for-each-ref.c	FUNCTION_1
0x40000e2	          0x4889d7	                            mov rdi, rdx	        26	for-each-ref.c	FUNCTION_1
0x40000e5	          0xf348ab	              rep stosq qword [rdi], rax	        26	for-each-ref.c	FUNCTION_1
0x40000e8	    0xc785f0fbffff	              mov dword [rbp - 0x410], 4	        26	for-each-ref.c	FUNCTION_1
0x40000f2	    0xc785f4fbffff	          mov dword [rbp - 0x40c], 0x73 	        26	for-each-ref.c	FUNCTION_1
0x40000fc	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	        26	for-each-ref.c	FUNCTION_1
0x4000107	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x400010e	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x4000112	    0x48898500fcff	            mov qword [rbp - 0x400], rax	        26	for-each-ref.c	FUNCTION_1
0x4000119	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000124	    0xc78518fcffff	              mov dword [rbp - 0x3e8], 2	        26	for-each-ref.c	FUNCTION_1
0x400012e	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 1	        26	for-each-ref.c	FUNCTION_1
0x4000139	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 4	        26	for-each-ref.c	FUNCTION_1
0x4000143	    0xc78534fcffff	          mov dword [rbp - 0x3cc], 0x70 	        26	for-each-ref.c	FUNCTION_1
0x400014d	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000158	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x400015f	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x4000163	    0x48898540fcff	            mov qword [rbp - 0x3c0], rax	        26	for-each-ref.c	FUNCTION_1
0x400016a	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000175	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 2	        26	for-each-ref.c	FUNCTION_1
0x400017f	    0x48c78568fcff	              mov qword [rbp - 0x398], 2	        26	for-each-ref.c	FUNCTION_1
0x400018a	    0xc78570fcffff	              mov dword [rbp - 0x390], 4	        26	for-each-ref.c	FUNCTION_1
0x4000194	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	        26	for-each-ref.c	FUNCTION_1
0x400019f	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x40001a6	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x40001aa	    0x48898580fcff	            mov qword [rbp - 0x380], rax	        26	for-each-ref.c	FUNCTION_1
0x40001b1	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	        26	for-each-ref.c	FUNCTION_1
0x40001bc	    0xc78598fcffff	              mov dword [rbp - 0x368], 2	        26	for-each-ref.c	FUNCTION_1
0x40001c6	    0x48c785a8fcff	              mov qword [rbp - 0x358], 4	        26	for-each-ref.c	FUNCTION_1
0x40001d1	    0xc785b0fcffff	              mov dword [rbp - 0x350], 4	        26	for-each-ref.c	FUNCTION_1
0x40001db	    0x48c785b8fcff	              mov qword [rbp - 0x348], 0	        26	for-each-ref.c	FUNCTION_1
0x40001e6	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x40001ed	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x40001f1	    0x488985c0fcff	            mov qword [rbp - 0x340], rax	        26	for-each-ref.c	FUNCTION_1
0x40001f8	    0x48c785d0fcff	              mov qword [rbp - 0x330], 0	        26	for-each-ref.c	FUNCTION_1
0x4000203	    0xc785d8fcffff	              mov dword [rbp - 0x328], 2	        26	for-each-ref.c	FUNCTION_1
0x400020d	    0x48c785e8fcff	              mov qword [rbp - 0x318], 8	        26	for-each-ref.c	FUNCTION_1
0x4000218	    0xc785f0fcffff	              mov dword [rbp - 0x310], 2	        26	for-each-ref.c	FUNCTION_1
0x4000222	    0x48c78510fdff	              mov qword [rbp - 0x2f0], 0	        26	for-each-ref.c	FUNCTION_1
0x400022d	    0xc78530fdffff	            mov dword [rbp - 0x2d0], 0xa	        26	for-each-ref.c	FUNCTION_1
0x4000237	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000242	    0x488d8534fbff	                  lea rax, [rbp - 0x4cc]	        26	for-each-ref.c	FUNCTION_1
0x4000249	    0x48898540fdff	            mov qword [rbp - 0x2c0], rax	        26	for-each-ref.c	FUNCTION_1
0x4000250	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        26	for-each-ref.c	FUNCTION_1
0x400025b	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000266	    0xc78570fdffff	              mov dword [rbp - 0x290], 9	        26	for-each-ref.c	FUNCTION_1
0x4000270	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	        26	for-each-ref.c	FUNCTION_1
0x400027b	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x4000282	    0x48898580fdff	            mov qword [rbp - 0x280], rax	        26	for-each-ref.c	FUNCTION_1
0x4000289	    0x48c78588fdff	              mov qword [rbp - 0x278], 0	        26	for-each-ref.c	FUNCTION_1
0x4000294	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	        26	for-each-ref.c	FUNCTION_1
0x400029f	    0xc785b0fdffff	           mov dword [rbp - 0x250], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x40002a9	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	        26	for-each-ref.c	FUNCTION_1
0x40002b4	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x40002bb	        0x4883c00c	                            add rax, 0xc	        26	for-each-ref.c	FUNCTION_1
0x40002bf	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	        26	for-each-ref.c	FUNCTION_1
0x40002c6	    0x48c785c8fdff	              mov qword [rbp - 0x238], 0	        26	for-each-ref.c	FUNCTION_1
0x40002d1	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	        26	for-each-ref.c	FUNCTION_1
0x40002dc	    0xc785d8fdffff	              mov dword [rbp - 0x228], 1	        26	for-each-ref.c	FUNCTION_1
0x40002e6	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	        26	for-each-ref.c	FUNCTION_1
0x40002f1	      0xb800000000	                              mov eax, 0	        39	for-each-ref.c	FUNCTION_1	CALL_16
0x40002f6	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	        26	for-each-ref.c	FUNCTION_1
0x40002fd	    0xc785f0fdffff	           mov dword [rbp - 0x210], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000307	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	        26	for-each-ref.c	FUNCTION_1
0x4000312	    0x488b8548fbff	            mov rax, qword [rbp - 0x4b8]	        26	for-each-ref.c	FUNCTION_1
0x4000319	    0x48898500feff	            mov qword [rbp - 0x200], rax	        26	for-each-ref.c	FUNCTION_1
0x4000320	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	        26	for-each-ref.c	FUNCTION_1
0x400032b	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000336	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000341	    0xc78530feffff	           mov dword [rbp - 0x1d0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x400034b	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000356	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x400035d	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x4000361	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	        26	for-each-ref.c	FUNCTION_1
0x4000368	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000373	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	        26	for-each-ref.c	FUNCTION_1
0x400037e	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000389	    0xc78570feffff	           mov dword [rbp - 0x190], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000393	    0x48c78578feff	              mov qword [rbp - 0x188], 0	        26	for-each-ref.c	FUNCTION_1
0x400039e	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x40003a5	    0x48898580feff	            mov qword [rbp - 0x180], rax	        26	for-each-ref.c	FUNCTION_1
0x40003ac	    0x48c78588feff	              mov qword [rbp - 0x178], 0	        26	for-each-ref.c	FUNCTION_1
0x40003b7	    0x48c78590feff	              mov qword [rbp - 0x170], 0	        26	for-each-ref.c	FUNCTION_1
0x40003c2	    0xc78598feffff	          mov dword [rbp - 0x168], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x40003cc	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	        26	for-each-ref.c	FUNCTION_1
0x40003d7	      0xb800000000	                              mov eax, 0	        45	for-each-ref.c	FUNCTION_1	CALL_24
0x40003dc	    0x488985a8feff	            mov qword [rbp - 0x158], rax	        26	for-each-ref.c	FUNCTION_1
0x40003e3	    0xc785b0feffff	           mov dword [rbp - 0x150], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x40003ed	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	        26	for-each-ref.c	FUNCTION_1
0x40003f8	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x40003ff	    0x488985c0feff	            mov qword [rbp - 0x140], rax	        26	for-each-ref.c	FUNCTION_1
0x4000406	    0x48c785c8feff	              mov qword [rbp - 0x138], 0	        26	for-each-ref.c	FUNCTION_1
0x4000411	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	        26	for-each-ref.c	FUNCTION_1
0x400041c	    0xc785d8feffff	          mov dword [rbp - 0x128], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x4000426	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	        26	for-each-ref.c	FUNCTION_1
0x4000431	      0xb800000000	                              mov eax, 0	        46	for-each-ref.c	FUNCTION_1	CALL_26
0x4000436	    0x488985e8feff	            mov qword [rbp - 0x118], rax	        26	for-each-ref.c	FUNCTION_1
0x400043d	    0xc785f0feffff	           mov dword [rbp - 0x110], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000447	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        26	for-each-ref.c	FUNCTION_1
0x4000452	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x4000459	        0x4883c020	                           add rax, 0x20	        26	for-each-ref.c	FUNCTION_1
0x400045d	    0x48898500ffff	            mov qword [rbp - 0x100], rax	        26	for-each-ref.c	FUNCTION_1
0x4000464	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	        26	for-each-ref.c	FUNCTION_1
0x400046f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        26	for-each-ref.c	FUNCTION_1
0x400047a	    0xc78518ffffff	           mov dword [rbp - 0xe8], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x4000484	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        26	for-each-ref.c	FUNCTION_1
0x400048f	      0xb800000000	                              mov eax, 0	        47	for-each-ref.c	FUNCTION_1	CALL_28
0x4000494	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        26	for-each-ref.c	FUNCTION_1
0x400049b	    0xc78530ffffff	            mov dword [rbp - 0xd0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x40004a5	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        26	for-each-ref.c	FUNCTION_1
0x40004b0	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x40004b7	        0x4883c028	                           add rax, 0x28	        26	for-each-ref.c	FUNCTION_1
0x40004bb	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        26	for-each-ref.c	FUNCTION_1
0x40004c2	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        26	for-each-ref.c	FUNCTION_1
0x40004cd	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        26	for-each-ref.c	FUNCTION_1
0x40004d8	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x40004e2	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        26	for-each-ref.c	FUNCTION_1
0x40004ed	      0xb800000000	                              mov eax, 0	        48	for-each-ref.c	FUNCTION_1	CALL_30
0x40004f2	    0x48898568ffff	             mov qword [rbp - 0x98], rax	        26	for-each-ref.c	FUNCTION_1
0x40004f9	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	        26	for-each-ref.c	FUNCTION_1
0x4000503	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        26	for-each-ref.c	FUNCTION_1
0x400050e	    0x488d8538fbff	                  lea rax, [rbp - 0x4c8]	        26	for-each-ref.c	FUNCTION_1
0x4000515	        0x48894580	             mov qword [rbp - 0x80], rax	        26	for-each-ref.c	FUNCTION_1
0x4000519	    0x48c745900000	               mov qword [rbp - 0x70], 0	        26	for-each-ref.c	FUNCTION_1
0x4000521	    0xc74598020000	               mov dword [rbp - 0x68], 2	        26	for-each-ref.c	FUNCTION_1
0x4000528	    0x48c745a80100	               mov qword [rbp - 0x58], 1	        26	for-each-ref.c	FUNCTION_1
0x4000530	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4000537	      0xba18000000	                           mov edx, 0x18	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x400053c	      0xbe00000000	                              mov esi, 0	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4000541	          0x4889c7	                            mov rdi, rax	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4000544	      0xe800000000	                          call 0x4000549	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4000549	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x4000550	      0xba58000000	                           mov edx, 0x58	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x4000555	      0xbe00000000	                              mov esi, 0	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x400055a	          0x4889c7	                            mov rdi, rax	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x400055d	      0xe800000000	                          call 0x4000562	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x4000562	    0x48c78570fbff	              mov qword [rbp - 0x490], 0	        56	for-each-ref.c	FUNCTION_1
0x400056d	      0xbe00000000	                              mov esi, 0	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x4000572	      0xbf00000000	                              mov edi, 0	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x4000577	      0xe800000000	                          call 0x400057c	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x400057c	    0x488d8df0fbff	                  lea rcx, [rbp - 0x410]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000583	    0x488b9518fbff	            mov rdx, qword [rbp - 0x4e8]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x400058a	    0x488bb520fbff	            mov rsi, qword [rbp - 0x4e0]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000591	    0x8b852cfbffff	            mov eax, dword [rbp - 0x4d4]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000597	    0x41b900000000	                              mov r9d, 0	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x400059d	    0x41b800000000	                              mov r8d, 0	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x40005a3	            0x89c7	                            mov edi, eax	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x40005a5	      0xe800000000	                          call 0x40005aa	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x40005aa	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        61	for-each-ref.c	FUNCTION_1	IF_1
0x40005b0	            0x85c0	                           test eax, eax	        61	for-each-ref.c	FUNCTION_1	IF_1
0x40005b2	            0x7930	                           jns 0x40005e4	        61	for-each-ref.c	FUNCTION_1	IF_1
0x40005b4	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005ba	            0x89c6	                            mov esi, eax	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005bc	      0xbf00000000	                              mov edi, 0	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005c1	      0xb800000000	                              mov eax, 0	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005c6	      0xe800000000	                          call 0x40005cb	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005cb	      0xe870faffff	                    call sym.const_error	        62	for-each-ref.c	FUNCTION_1	IF_1
0x40005d0	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x40005d7	          0x4889c6	                            mov rsi, rax	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x40005da	      0xbf00000000	                              mov edi, 0	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x40005df	      0xe800000000	                          call 0x40005e4	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x40005e4	    0x8b8578fbffff	            mov eax, dword [rbp - 0x488]	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005ea	    0x8b9578fbffff	            mov edx, dword [rbp - 0x488]	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005f0	          0x83ea01	                              sub edx, 1	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005f3	            0x21d0	                            and eax, edx	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005f5	            0x85c0	                           test eax, eax	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005f7	            0x7428	                            je 0x4000621	        65	for-each-ref.c	FUNCTION_1	IF_2
0x40005f9	      0xbf00000000	                              mov edi, 0	        66	for-each-ref.c	FUNCTION_1	IF_2
0x40005fe	      0xb800000000	                              mov eax, 0	        66	for-each-ref.c	FUNCTION_1	IF_2
0x4000603	      0xe800000000	                          call 0x4000608	        66	for-each-ref.c	FUNCTION_1	IF_2
0x4000608	      0xe833faffff	                    call sym.const_error	        66	for-each-ref.c	FUNCTION_1	IF_2
0x400060d	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_39
0x4000614	          0x4889c6	                            mov rsi, rax	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_39
0x4000617	      0xbf00000000	                              mov edi, 0	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_39
0x400061c	      0xe800000000	                          call 0x4000621	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_39
0x4000621	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_40
0x4000628	          0x4889c7	                            mov rdi, rax	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_40
0x400062b	      0xe800000000	                          call 0x4000630	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_40
0x4000630	            0x85c0	                           test eax, eax	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_40
0x4000632	            0x7414	                            je 0x4000648	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_40
0x4000634	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        70	for-each-ref.c	FUNCTION_1	CALL_41
0x400063b	          0x4889c6	                            mov rsi, rax	        70	for-each-ref.c	FUNCTION_1	CALL_41
0x400063e	      0xbf00000000	                              mov edi, 0	        70	for-each-ref.c	FUNCTION_1	CALL_41
0x4000643	      0xe800000000	                          call 0x4000648	        70	for-each-ref.c	FUNCTION_1	CALL_41
0x4000648	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        72	for-each-ref.c	FUNCTION_1	IF_4
0x400064f	          0x4885c0	                           test rax, rax	        72	for-each-ref.c	FUNCTION_1	IF_4
0x4000652	            0x750c	                           jne 0x4000660	        72	for-each-ref.c	FUNCTION_1	IF_4
0x4000654	      0xe800000000	                          call 0x4000659	        73	for-each-ref.c	FUNCTION_1	CALL_42
0x4000659	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	        73	for-each-ref.c	FUNCTION_1	CALL_42
0x4000660	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        74	for-each-ref.c	FUNCTION_1
0x4000667	    0x8b9538fbffff	            mov edx, dword [rbp - 0x4c8]	        74	for-each-ref.c	FUNCTION_1
0x400066d	          0x83e201	                              and edx, 1	        74	for-each-ref.c	FUNCTION_1
0x4000670	          0x83e201	                              and edx, 1	        74	for-each-ref.c	FUNCTION_1
0x4000673	          0x8d0c12	                    lea ecx, [rdx + rdx]	        74	for-each-ref.c	FUNCTION_1
0x4000676	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        74	for-each-ref.c	FUNCTION_1
0x400067a	          0x83e2fd	                     and edx, 0xfffffffd	        74	for-each-ref.c	FUNCTION_1
0x400067d	             0x9ca	                             or edx, ecx	        74	for-each-ref.c	FUNCTION_1
0x400067f	          0x88500c	                mov byte [rax + 0xc], dl	        74	for-each-ref.c	FUNCTION_1
0x4000682	    0x8b8538fbffff	            mov eax, dword [rbp - 0x4c8]	        75	for-each-ref.c	FUNCTION_1
0x4000688	          0x83e001	                              and eax, 1	        75	for-each-ref.c	FUNCTION_1
0x400068b	          0x83e001	                              and eax, 1	        75	for-each-ref.c	FUNCTION_1
0x400068e	    0x8d1485000000	                        lea edx, [rax*4]	        75	for-each-ref.c	FUNCTION_1
0x4000695	     0xfb685d0fbff	           movzx eax, byte [rbp - 0x430]	        75	for-each-ref.c	FUNCTION_1
0x400069c	          0x83e0fb	                     and eax, 0xfffffffb	        75	for-each-ref.c	FUNCTION_1
0x400069f	             0x9d0	                             or eax, edx	        75	for-each-ref.c	FUNCTION_1
0x40006a1	    0x8885d0fbffff	              mov byte [rbp - 0x430], al	        75	for-each-ref.c	FUNCTION_1
0x40006a7	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	        77	for-each-ref.c	FUNCTION_1
0x40006ae	    0x48898590fbff	            mov qword [rbp - 0x470], rax	        77	for-each-ref.c	FUNCTION_1
0x40006b5	     0xfb685d0fbff	           movzx eax, byte [rbp - 0x430]	        78	for-each-ref.c	FUNCTION_1
0x40006bc	          0x83c802	                               or eax, 2	        78	for-each-ref.c	FUNCTION_1
0x40006bf	    0x8885d0fbffff	              mov byte [rbp - 0x430], al	        78	for-each-ref.c	FUNCTION_1
0x40006c5	    0x488d8d90fbff	                  lea rcx, [rbp - 0x470]	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006cc	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006d3	      0xba1f000000	                           mov edx, 0x1f	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006d8	          0x4889ce	                            mov rsi, rcx	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006db	          0x4889c7	                            mov rdi, rax	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006de	      0xe800000000	                          call 0x40006e3	        79	for-each-ref.c	FUNCTION_1	CALL_43
0x40006e3	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        80	for-each-ref.c	FUNCTION_1	CALL_44
0x40006ea	    0x488d9550fbff	                  lea rdx, [rbp - 0x4b0]	        80	for-each-ref.c	FUNCTION_1	CALL_44
0x40006f1	          0x4889d6	                            mov rsi, rdx	        80	for-each-ref.c	FUNCTION_1	CALL_44
0x40006f4	          0x4889c7	                            mov rdi, rax	        80	for-each-ref.c	FUNCTION_1	CALL_44
0x40006f7	      0xe800000000	                          call 0x40006fc	        80	for-each-ref.c	FUNCTION_1	CALL_44
0x40006fc	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000702	            0x85c0	                           test eax, eax	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000704	            0x7410	                            je 0x4000716	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000706	    0x8b9550fbffff	            mov edx, dword [rbp - 0x4b0]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x400070c	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000712	            0x39c2	                            cmp edx, eax	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000714	            0x7d0c	                           jge 0x4000722	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000716	    0x8b8550fbffff	            mov eax, dword [rbp - 0x4b0]	        83	for-each-ref.c	FUNCTION_1	IF_5
0x400071c	    0x898534fbffff	            mov dword [rbp - 0x4cc], eax	        83	for-each-ref.c	FUNCTION_1	IF_5
0x4000722	    0xc7853cfbffff	              mov dword [rbp - 0x4c4], 0	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x400072c	            0xeb33	                           jmp 0x4000761	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x400072e	    0x488b8558fbff	            mov rax, qword [rbp - 0x4a8]	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000735	    0x8b953cfbffff	            mov edx, dword [rbp - 0x4c4]	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x400073b	          0x4863d2	                         movsxd rdx, edx	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x400073e	        0x48c1e203	                              shl rdx, 3	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000742	          0x4801d0	                            add rax, rdx	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000745	          0x488b00	                    mov rax, qword [rax]	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000748	    0x488d9570fbff	                  lea rdx, [rbp - 0x490]	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x400074f	          0x4889d6	                            mov rsi, rdx	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000752	          0x4889c7	                            mov rdi, rax	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x4000755	      0xe800000000	                          call 0x400075a	        85	for-each-ref.c	FUNCTION_1	CALL_45
0x400075a	    0x83853cfbffff	              add dword [rbp - 0x4c4], 1	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000761	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000767	    0x39853cfbffff	           cmp dword [rbp - 0x4c4], eax 	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x400076d	            0x7cbf	                            jl 0x400072e	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x400076f	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        86	for-each-ref.c	FUNCTION_1	CALL_46
0x4000776	          0x4889c7	                            mov rdi, rax	        86	for-each-ref.c	FUNCTION_1	CALL_46
0x4000779	      0xe800000000	                          call 0x400077e	        86	for-each-ref.c	FUNCTION_1	CALL_46
0x400077e	      0xb800000000	                              mov eax, 0	        87	for-each-ref.c	FUNCTION_1
0x4000783	        0x488b4df8	                mov rcx, qword [rbp - 8]	        88	for-each-ref.c	FUNCTION_1
0x4000787	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        88	for-each-ref.c	FUNCTION_1
0x4000790	            0x7405	                            je 0x4000797	        88	for-each-ref.c	FUNCTION_1
0x4000792	      0xe800000000	                          call 0x4000797	        88	for-each-ref.c	FUNCTION_1
0x4000797	              0xc9	                                   leave	        88	for-each-ref.c	FUNCTION_1
0x4000798	              0xc3	                                     ret	        88	for-each-ref.c	FUNCTION_1
const_error	SWITCH,0:CALL,0:ELSE,0:FOR,0:DO,0:functions,0:WHILE,0:IF,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_7
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_7
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_7
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_7
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_7
