has_sha1_file	IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:DO,0	10
0x4000040	              0x55	                                push rbp	      1250	cache.h	FUNCTION_23
0x4000041	          0x4889e5	                            mov rbp, rsp	      1250	cache.h	FUNCTION_23
0x4000044	        0x4883ec10	                           sub rsp, 0x10	      1250	cache.h	FUNCTION_23
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	      1250	cache.h	FUNCTION_23
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	cache.h	FUNCTION_23	CALL_1
0x4000050	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_23	CALL_1
0x4000055	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_23	CALL_1
0x4000058	      0xe800000000	                          call 0x400005d	      1251	cache.h	FUNCTION_23	CALL_1
0x400005d	              0xc9	                                   leave	      1252	cache.h	FUNCTION_23
0x400005e	              0xc3	                                     ret	      1252	cache.h	FUNCTION_23
show_ref	IF,8:CALL,7:SWITCH,0:functions,0:WHILE,1:FOR,0:ELSE,0:DO,0	123
0x400017a	              0x55	                                push rbp	        49	show-ref.c	FUNCTION_29
0x400017b	          0x4889e5	                            mov rbp, rsp	        49	show-ref.c	FUNCTION_29
0x400017e	        0x4883ec40	                           sub rsp, 0x40	        49	show-ref.c	FUNCTION_29
0x4000182	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        49	show-ref.c	FUNCTION_29
0x4000186	        0x488975d0	             mov qword [rbp - 0x30], rsi	        49	show-ref.c	FUNCTION_29
0x400018a	          0x8955cc	             mov dword [rbp - 0x34], edx	        49	show-ref.c	FUNCTION_29
0x400018d	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        49	show-ref.c	FUNCTION_29
0x4000191	    0x8b0500000000	            mov eax, dword [0x04000197] 	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x4000197	            0x85c0	                           test eax, eax	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x4000199	            0x7419	                            je 0x40001b4	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x400019b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x400019f	      0xbe00000000	                              mov esi, 0	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x40001a4	          0x4889c7	                            mov rdi, rax	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x40001a7	      0xe800000000	                          call 0x40001ac	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x40001ac	            0x85c0	                           test eax, eax	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x40001ae	     0xf843c010000	                            je 0x40002f0	        50	show-ref.c	FUNCTION_29	IF_1	CALL_1
0x40001b4	    0x8b0500000000	            mov eax, dword [0x040001ba] 	        53	show-ref.c	FUNCTION_29	IF_2
0x40001ba	            0x85c0	                           test eax, eax	        53	show-ref.c	FUNCTION_29	IF_2
0x40001bc	            0x750a	                           jne 0x40001c8	        53	show-ref.c	FUNCTION_29	IF_2
0x40001be	    0x8b0500000000	            mov eax, dword [0x040001c4] 	        53	show-ref.c	FUNCTION_29	IF_2
0x40001c4	            0x85c0	                           test eax, eax	        53	show-ref.c	FUNCTION_29	IF_2
0x40001c6	            0x746c	                            je 0x4000234	        53	show-ref.c	FUNCTION_29	IF_2
0x40001c8	    0x8b0500000000	            mov eax, dword [0x040001ce] 	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001ce	            0x85c0	                           test eax, eax	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001d0	            0x741c	                            je 0x40001ee	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001d6	      0xbe00000000	                              mov esi, 0	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001db	          0x4889c7	                            mov rdi, rax	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001de	      0xe800000000	                          call 0x40001e3	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001e3	            0x85c0	                           test eax, eax	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001e5	            0x7407	                            je 0x40001ee	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001e7	      0xb801000000	                              mov eax, 1	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001ec	            0xeb05	                           jmp 0x40001f3	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001ee	      0xb800000000	                              mov eax, 0	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001f3	          0x8945e4	             mov dword [rbp - 0x1c], eax	        56	show-ref.c	FUNCTION_29	IF_2	CALL_2
0x40001f6	    0x8b0500000000	            mov eax, dword [0x040001fc] 	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x40001fc	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x40001fe	            0x741c	                            je 0x400021c	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000200	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000204	      0xbe00000000	                              mov esi, 0	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000209	          0x4889c7	                            mov rdi, rax	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x400020c	      0xe800000000	                          call 0x4000211	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000211	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000213	            0x7407	                            je 0x400021c	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000215	      0xb801000000	                              mov eax, 1	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x400021a	            0xeb05	                           jmp 0x4000221	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x400021c	      0xb800000000	                              mov eax, 0	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000221	           0x945e4	              or dword [rbp - 0x1c], eax	        57	show-ref.c	FUNCTION_29	IF_2	CALL_3
0x4000224	        0x837de400	               cmp dword [rbp - 0x1c], 0	        58	show-ref.c	FUNCTION_29	IF_2	IF_3
0x4000228	            0x750a	                           jne 0x4000234	        58	show-ref.c	FUNCTION_29	IF_2	IF_3
0x400022a	      0xb800000000	                              mov eax, 0	        59	show-ref.c	FUNCTION_29	IF_2	IF_3
0x400022f	      0xe9ea000000	                           jmp 0x400031e	        59	show-ref.c	FUNCTION_29	IF_2	IF_3
0x4000234	    0x488b05000000	            mov rax, qword [0x0400023b] 	        61	show-ref.c	FUNCTION_29	IF_4
0x400023b	          0x4885c0	                           test rax, rax	        61	show-ref.c	FUNCTION_29	IF_4
0x400023e	     0xf84b3000000	                            je 0x40002f7	        61	show-ref.c	FUNCTION_29	IF_4
0x4000244	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        62	show-ref.c	FUNCTION_29	IF_4	CALL_4
0x4000248	          0x4889c7	                            mov rdi, rax	        62	show-ref.c	FUNCTION_29	IF_4	CALL_4
0x400024b	      0xe800000000	                          call 0x4000250	        62	show-ref.c	FUNCTION_29	IF_4	CALL_4
0x4000250	          0x8945e8	             mov dword [rbp - 0x18], eax	        62	show-ref.c	FUNCTION_29	IF_4	CALL_4
0x4000253	    0x488b05000000	            mov rax, qword [0x0400025a] 	        63	show-ref.c	FUNCTION_29	IF_4
0x400025a	        0x488945f0	             mov qword [rbp - 0x10], rax	        63	show-ref.c	FUNCTION_29	IF_4
0x400025e	            0xeb6b	                           jmp 0x40002cb	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x4000260	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	show-ref.c	FUNCTION_29	IF_4	WHILE_1	CALL_5
0x4000264	          0x4889c7	                            mov rdi, rax	        65	show-ref.c	FUNCTION_29	IF_4	WHILE_1	CALL_5
0x4000267	      0xe800000000	                          call 0x400026c	        65	show-ref.c	FUNCTION_29	IF_4	WHILE_1	CALL_5
0x400026c	          0x8945ec	             mov dword [rbp - 0x14], eax	        65	show-ref.c	FUNCTION_29	IF_4	WHILE_1	CALL_5
0x400026f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        66	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_5
0x4000272	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	        66	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_5
0x4000275	            0x7e02	                           jle 0x4000279	        66	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_5
0x4000277	            0xeb52	                           jmp 0x40002cb	        67	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_5
0x4000279	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400027c	          0x4863d0	                         movsxd rdx, eax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400027f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000282	          0x4863c8	                         movsxd rcx, eax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000285	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000288	            0x4898	                                    cdqe	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400028a	          0x4829c1	                            sub rcx, rax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400028d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000291	          0x4801c1	                            add rcx, rax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000294	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x4000298	          0x4889ce	                            mov rsi, rcx	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400029b	          0x4889c7	                            mov rdi, rax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x400029e	      0xe800000000	                          call 0x40002a3	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x40002a3	            0x85c0	                           test eax, eax	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x40002a5	            0x7402	                            je 0x40002a9	        68	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6	CALL_6
0x40002a7	            0xeb22	                           jmp 0x40002cb	        69	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_6
0x40002a9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        70	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_7
0x40002ac	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	        70	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_7
0x40002af	            0x7442	                            je 0x40002f3	        70	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_7
0x40002b1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002b4	          0x2b45ec	             sub eax, dword [rbp - 0x14]	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002b7	            0x4898	                                    cdqe	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002b9	        0x488d50ff	                      lea rdx, [rax - 1]	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002c1	          0x4801d0	                            add rax, rdx	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002c4	           0xfb600	                   movzx eax, byte [rax]	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002c7	            0x3c2f	                            cmp al, 0x2f	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002c9	            0x742b	                            je 0x40002f6	        72	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002cf	        0x488d5008	                      lea rdx, [rax + 8]	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002d3	        0x488955f0	             mov qword [rbp - 0x10], rdx	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002d7	          0x488b00	                    mov rax, qword [rax]	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002da	        0x488945f8	                mov qword [rbp - 8], rax	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002de	      0x48837df800	                  cmp qword [rbp - 8], 0	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002e3	     0xf8577ffffff	                           jne 0x4000260	        64	show-ref.c	FUNCTION_29	IF_4	WHILE_1
0x40002e9	      0xb800000000	                              mov eax, 0	        75	show-ref.c	FUNCTION_29	IF_4
0x40002ee	            0xeb2e	                           jmp 0x400031e	        75	show-ref.c	FUNCTION_29	IF_4
0x40002f0	              0x90	                                     nop	        51	show-ref.c	FUNCTION_29	IF_1
0x40002f1	            0xeb04	                           jmp 0x40002f7	        51	show-ref.c	FUNCTION_29	IF_1
0x40002f3	              0x90	                                     nop	        71	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_7
0x40002f4	            0xeb01	                           jmp 0x40002f7	        71	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_7
0x40002f6	              0x90	                                     nop	        73	show-ref.c	FUNCTION_29	IF_4	WHILE_1	IF_8
0x40002f7	    0x8b0500000000	            mov eax, dword [0x040002fd] 	        79	show-ref.c	FUNCTION_29
0x40002fd	          0x83c001	                              add eax, 1	        79	show-ref.c	FUNCTION_29
0x4000300	    0x890500000000	            mov dword [0x04000306], eax 	        79	show-ref.c	FUNCTION_29
0x4000306	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        81	show-ref.c	FUNCTION_29	CALL_7
0x400030a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        81	show-ref.c	FUNCTION_29	CALL_7
0x400030e	          0x4889d6	                            mov rsi, rdx	        81	show-ref.c	FUNCTION_29	CALL_7
0x4000311	          0x4889c7	                            mov rdi, rax	        81	show-ref.c	FUNCTION_29	CALL_7
0x4000314	      0xe846fdffff	                       call sym.show_one	        81	show-ref.c	FUNCTION_29	CALL_7
0x4000319	      0xb800000000	                              mov eax, 0	        83	show-ref.c	FUNCTION_29
0x400031e	              0xc9	                                   leave	        84	show-ref.c	FUNCTION_29
0x400031f	              0xc3	                                     ret	        84	show-ref.c	FUNCTION_29
hash_callback	IF,1:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:DO,0	19
0x40005a7	              0x55	                                push rbp	       142	show-ref.c	FUNCTION_32
0x40005a8	          0x4889e5	                            mov rbp, rsp	       142	show-ref.c	FUNCTION_32
0x40005ab	        0x4883ec20	                           sub rsp, 0x20	       142	show-ref.c	FUNCTION_32
0x40005af	        0x48897df8	                mov qword [rbp - 8], rdi	       142	show-ref.c	FUNCTION_32
0x40005b3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       142	show-ref.c	FUNCTION_32
0x40005b7	          0x8955ec	             mov dword [rbp - 0x14], edx	       142	show-ref.c	FUNCTION_32
0x40005ba	    0xc70500000000	               mov dword [0x040005c4], 1	       143	show-ref.c	FUNCTION_32
0x40005c4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       145	show-ref.c	FUNCTION_32	IF_1
0x40005c9	            0x7507	                           jne 0x40005d2	       145	show-ref.c	FUNCTION_32	IF_1
0x40005cb	      0xb800000000	                              mov eax, 0	       146	show-ref.c	FUNCTION_32	IF_1
0x40005d0	            0xeb16	                           jmp 0x40005e8	       146	show-ref.c	FUNCTION_32	IF_1
0x40005d2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005d5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005dd	          0x4889ce	                            mov rsi, rcx	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005e0	          0x4889c7	                            mov rdi, rax	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005e3	      0xe800000000	                          call 0x40005e8	       147	show-ref.c	FUNCTION_32	CALL_1
0x40005e8	              0xc9	                                   leave	       148	show-ref.c	FUNCTION_32
0x40005e9	              0xc3	                                     ret	       148	show-ref.c	FUNCTION_32
add_existing	IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:DO,0	17
0x4000320	              0x55	                                push rbp	        88	show-ref.c	FUNCTION_30
0x4000321	          0x4889e5	                            mov rbp, rsp	        88	show-ref.c	FUNCTION_30
0x4000324	        0x4883ec30	                           sub rsp, 0x30	        88	show-ref.c	FUNCTION_30
0x4000328	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	show-ref.c	FUNCTION_30
0x400032c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        88	show-ref.c	FUNCTION_30
0x4000330	          0x8955dc	             mov dword [rbp - 0x24], edx	        88	show-ref.c	FUNCTION_30
0x4000333	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        88	show-ref.c	FUNCTION_30
0x4000337	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        89	show-ref.c	FUNCTION_30
0x400033b	        0x488945f8	                mov qword [rbp - 8], rax	        89	show-ref.c	FUNCTION_30
0x400033f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        90	show-ref.c	FUNCTION_30	CALL_1
0x4000343	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	show-ref.c	FUNCTION_30	CALL_1
0x4000347	          0x4889d6	                            mov rsi, rdx	        90	show-ref.c	FUNCTION_30	CALL_1
0x400034a	          0x4889c7	                            mov rdi, rax	        90	show-ref.c	FUNCTION_30	CALL_1
0x400034d	      0xe800000000	                          call 0x4000352	        90	show-ref.c	FUNCTION_30	CALL_1
0x4000352	      0xb800000000	                              mov eax, 0	        91	show-ref.c	FUNCTION_30
0x4000357	              0xc9	                                   leave	        92	show-ref.c	FUNCTION_30
0x4000358	              0xc3	                                     ret	        92	show-ref.c	FUNCTION_30
exclude_existing	IF,8:CALL,11:SWITCH,0:functions,0:WHILE,1:FOR,1:ELSE,0:DO,0	133
0x4000359	              0x55	                                push rbp	       104	show-ref.c	FUNCTION_31
0x400035a	          0x4889e5	                            mov rbp, rsp	       104	show-ref.c	FUNCTION_31
0x400035d	    0x4881ec400400	                          sub rsp, 0x440	       104	show-ref.c	FUNCTION_31
0x4000364	    0x4889bdc8fbff	            mov qword [rbp - 0x438], rdi	       104	show-ref.c	FUNCTION_31
0x400036b	    0x64488b042528	                mov rax, qword fs:[0x28]	       104	show-ref.c	FUNCTION_31
0x4000374	        0x488945f8	                mov qword [rbp - 8], rax	       104	show-ref.c	FUNCTION_31
0x4000378	            0x31c0	                            xor eax, eax	       104	show-ref.c	FUNCTION_31
0x400037a	    0x4883bdc8fbff	              cmp qword [rbp - 0x438], 0	       107	show-ref.c	FUNCTION_31	CALL_1
0x4000382	            0x7411	                            je 0x4000395	       107	show-ref.c	FUNCTION_31	CALL_1
0x4000384	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	       107	show-ref.c	FUNCTION_31	CALL_1
0x400038b	          0x4889c7	                            mov rdi, rax	       107	show-ref.c	FUNCTION_31	CALL_1
0x400038e	      0xe800000000	                          call 0x4000393	       107	show-ref.c	FUNCTION_31	CALL_1
0x4000393	            0xeb05	                           jmp 0x400039a	       107	show-ref.c	FUNCTION_31	CALL_1
0x4000395	      0xb800000000	                              mov eax, 0	       107	show-ref.c	FUNCTION_31	CALL_1
0x400039a	    0x8985e0fbffff	            mov dword [rbp - 0x420], eax	       107	show-ref.c	FUNCTION_31	CALL_1
0x40003a0	      0xbe00000000	                              mov esi, 0	       109	show-ref.c	FUNCTION_31	CALL_2
0x40003a5	      0xbf00000000	                              mov edi, 0	       109	show-ref.c	FUNCTION_31	CALL_2
0x40003aa	      0xe800000000	                          call 0x40003af	       109	show-ref.c	FUNCTION_31	CALL_2
0x40003af	      0xe9b4010000	                           jmp 0x4000568	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x40003b4	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	       112	show-ref.c	FUNCTION_31	WHILE_1	CALL_4
0x40003bb	          0x4889c7	                            mov rdi, rax	       112	show-ref.c	FUNCTION_31	WHILE_1	CALL_4
0x40003be	      0xe800000000	                          call 0x40003c3	       112	show-ref.c	FUNCTION_31	WHILE_1	CALL_4
0x40003c3	    0x8985dcfbffff	            mov dword [rbp - 0x424], eax	       112	show-ref.c	FUNCTION_31	WHILE_1	CALL_4
0x40003c9	    0x83bddcfbffff	              cmp dword [rbp - 0x424], 0	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003d0	            0x7e2e	                           jle 0x4000400	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003d2	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003d8	          0x83e801	                              sub eax, 1	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003db	            0x4898	                                    cdqe	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003dd	     0xfb68405f0fb	     movzx eax, byte [rbp + rax - 0x410]	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003e5	            0x3c0a	                             cmp al, 0xa	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003e7	            0x7517	                           jne 0x4000400	       114	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003e9	    0x83addcfbffff	              sub dword [rbp - 0x424], 1	       115	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003f0	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       115	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003f6	            0x4898	                                    cdqe	       115	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x40003f8	    0xc68405f0fbff	         mov byte [rbp + rax - 0x410], 0	       115	show-ref.c	FUNCTION_31	WHILE_1	IF_1
0x4000400	    0x83bddcfbffff	              cmp dword [rbp - 0x424], 2	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000407	            0x7e3e	                           jle 0x4000447	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000409	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x400040f	            0x4898	                                    cdqe	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000411	        0x488d50fd	                      lea rdx, [rax - 3]	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000415	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x400041c	          0x4801d0	                            add rax, rdx	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x400041f	      0xbe00000000	                              mov esi, 0	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000424	          0x4889c7	                            mov rdi, rax	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000427	      0xe800000000	                          call 0x400042c	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x400042c	            0x85c0	                           test eax, eax	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x400042e	            0x7517	                           jne 0x4000447	       116	show-ref.c	FUNCTION_31	WHILE_1	IF_2	CALL_5
0x4000430	    0x83addcfbffff	              sub dword [rbp - 0x424], 3	       117	show-ref.c	FUNCTION_31	WHILE_1	IF_2
0x4000437	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       118	show-ref.c	FUNCTION_31	WHILE_1	IF_2
0x400043d	            0x4898	                                    cdqe	       118	show-ref.c	FUNCTION_31	WHILE_1	IF_2
0x400043f	    0xc68405f0fbff	         mov byte [rbp + rax - 0x410], 0	       118	show-ref.c	FUNCTION_31	WHILE_1	IF_2
0x4000447	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x400044d	            0x4898	                                    cdqe	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x400044f	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x4000456	          0x4801d0	                            add rax, rdx	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x4000459	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x4000460	            0xeb2c	                           jmp 0x400048e	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x4000462	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000469	        0x4883e801	                              sub rax, 1	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x400046d	           0xfb600	                   movzx eax, byte [rax]	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000470	           0xfb6c0	                           movzx eax, al	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000473	            0x4898	                                    cdqe	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000475	     0xfb680000000	                   movzx eax, byte [rax]	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x400047c	           0xfb6c0	                           movzx eax, al	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x400047f	          0x83e001	                              and eax, 1	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000482	            0x85c0	                           test eax, eax	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000484	            0x751a	                           jne 0x40004a0	       121	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3	CALL_6
0x4000486	    0x4883ade8fbff	              sub qword [rbp - 0x418], 1	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x400048e	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x4000495	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x400049c	            0x77c4	                            ja 0x4000462	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x400049e	            0xeb01	                           jmp 0x40004a1	       120	show-ref.c	FUNCTION_31	WHILE_1	FOR_1
0x40004a0	              0x90	                                     nop	       122	show-ref.c	FUNCTION_31	WHILE_1	FOR_1	IF_3
0x40004a1	    0x4883bdc8fbff	              cmp qword [rbp - 0x438], 0	       123	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004a9	            0x7463	                            je 0x400050e	       123	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004ab	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004b1	            0x4898	                                    cdqe	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004b3	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004ba	          0x4801d0	                            add rax, rdx	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004bd	          0x4889c2	                            mov rdx, rax	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004c0	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004c7	          0x4829c2	                            sub rdx, rax	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004ca	          0x4889d0	                            mov rax, rdx	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004cd	    0x8985e4fbffff	            mov dword [rbp - 0x41c], eax	       124	show-ref.c	FUNCTION_31	WHILE_1	IF_4
0x40004d3	    0x8b85e4fbffff	            mov eax, dword [rbp - 0x41c]	       125	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_5
0x40004d9	    0x3b85e0fbffff	            cmp eax, dword [rbp - 0x420]	       125	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_5
0x40004df	            0x7d05	                           jge 0x40004e6	       125	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_5
0x40004e1	      0xe982000000	                           jmp 0x4000568	       126	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_5
0x40004e6	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x40004ec	          0x4863d0	                         movsxd rdx, eax	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x40004ef	    0x488b8dc8fbff	            mov rcx, qword [rbp - 0x438]	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x40004f6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x40004fd	          0x4889ce	                            mov rsi, rcx	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x4000500	          0x4889c7	                            mov rdi, rax	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x4000503	      0xe800000000	                          call 0x4000508	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x4000508	            0x85c0	                           test eax, eax	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x400050a	            0x7402	                            je 0x400050e	       127	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6	CALL_7
0x400050c	            0xeb5a	                           jmp 0x4000568	       128	show-ref.c	FUNCTION_31	WHILE_1	IF_4	IF_6
0x400050e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x4000515	      0xbe00000000	                              mov esi, 0	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x400051a	          0x4889c7	                            mov rdi, rax	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x400051d	      0xe800000000	                          call 0x4000522	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x4000522	            0x85c0	                           test eax, eax	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x4000524	            0x741b	                            je 0x4000541	       130	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_8
0x4000526	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       131	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_9
0x400052d	          0x4889c6	                            mov rsi, rax	       131	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_9
0x4000530	      0xbf00000000	                              mov edi, 0	       131	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_9
0x4000535	      0xb800000000	                              mov eax, 0	       131	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_9
0x400053a	      0xe800000000	                          call 0x400053f	       131	show-ref.c	FUNCTION_31	WHILE_1	IF_7	CALL_9
0x400053f	            0xeb27	                           jmp 0x4000568	       132	show-ref.c	FUNCTION_31	WHILE_1	IF_7
0x4000541	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x4000548	          0x4889c6	                            mov rsi, rax	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x400054b	      0xbf00000000	                              mov edi, 0	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x4000550	      0xe800000000	                          call 0x4000555	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x4000555	            0x85c0	                           test eax, eax	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x4000557	            0x750f	                           jne 0x4000568	       134	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_10
0x4000559	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	       135	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_11
0x4000560	          0x4889c7	                            mov rdi, rax	       135	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_11
0x4000563	      0xe800000000	                          call 0x4000568	       135	show-ref.c	FUNCTION_31	WHILE_1	IF_8	CALL_11
0x4000568	    0x488b15000000	            mov rdx, qword [0x0400056f] 	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x400056f	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x4000576	      0xbe00040000	                          mov esi, 0x400	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x400057b	          0x4889c7	                            mov rdi, rax	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x400057e	      0xe800000000	                          call 0x4000583	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x4000583	          0x4885c0	                           test rax, rax	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x4000586	     0xf8528feffff	                           jne 0x40003b4	       110	show-ref.c	FUNCTION_31	WHILE_1	CALL_3
0x400058c	      0xb800000000	                              mov eax, 0	       138	show-ref.c	FUNCTION_31
0x4000591	        0x488b4df8	                mov rcx, qword [rbp - 8]	       139	show-ref.c	FUNCTION_31
0x4000595	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       139	show-ref.c	FUNCTION_31
0x400059e	            0x7405	                            je 0x40005a5	       139	show-ref.c	FUNCTION_31
0x40005a0	      0xe800000000	                          call 0x40005a5	       139	show-ref.c	FUNCTION_31
0x40005a5	              0xc9	                                   leave	       139	show-ref.c	FUNCTION_31
0x40005a6	              0xc3	                                     ret	       139	show-ref.c	FUNCTION_31
show_one	IF,5:CALL,9:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,1:DO,0	76
0x400005f	              0x55	                                push rbp	        21	show-ref.c	FUNCTION_28
0x4000060	          0x4889e5	                            mov rbp, rsp	        21	show-ref.c	FUNCTION_28
0x4000063	        0x4883ec40	                           sub rsp, 0x40	        21	show-ref.c	FUNCTION_28
0x4000067	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        21	show-ref.c	FUNCTION_28
0x400006b	        0x488975c0	             mov qword [rbp - 0x40], rsi	        21	show-ref.c	FUNCTION_28
0x400006f	    0x64488b042528	                mov rax, qword fs:[0x28]	        21	show-ref.c	FUNCTION_28
0x4000078	        0x488945f8	                mov qword [rbp - 8], rax	        21	show-ref.c	FUNCTION_28
0x400007c	            0x31c0	                            xor eax, eax	        21	show-ref.c	FUNCTION_28
0x400007e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        25	show-ref.c	FUNCTION_28	IF_1	CALL_1
0x4000082	          0x4889c7	                            mov rdi, rax	        25	show-ref.c	FUNCTION_28	IF_1	CALL_1
0x4000085	      0xe8b6ffffff	                  call sym.has_sha1_file	        25	show-ref.c	FUNCTION_28	IF_1	CALL_1
0x400008a	            0x85c0	                           test eax, eax	        25	show-ref.c	FUNCTION_28	IF_1	CALL_1
0x400008c	            0x7525	                           jne 0x40000b3	        25	show-ref.c	FUNCTION_28	IF_1	CALL_1
0x400008e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x4000092	          0x4889c7	                            mov rdi, rax	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x4000095	      0xe800000000	                          call 0x400009a	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x400009a	          0x4889c2	                            mov rdx, rax	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x400009d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x40000a1	          0x4889c6	                            mov rsi, rax	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x40000a4	      0xbf00000000	                              mov edi, 0	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x40000a9	      0xb800000000	                              mov eax, 0	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x40000ae	      0xe800000000	                          call 0x40000b3	        26	show-ref.c	FUNCTION_28	IF_1	CALL_2
0x40000b3	    0x8b0500000000	            mov eax, dword [0x040000b9] 	        29	show-ref.c	FUNCTION_28	IF_2
0x40000b9	            0x85c0	                           test eax, eax	        29	show-ref.c	FUNCTION_28	IF_2
0x40000bb	     0xf859f000000	                           jne 0x4000160	        29	show-ref.c	FUNCTION_28	IF_2
0x40000c1	    0x8b1500000000	            mov edx, dword [0x040000c7] 	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000c7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000cb	            0x89d6	                            mov esi, edx	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000cd	          0x4889c7	                            mov rdi, rax	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000d0	      0xe800000000	                          call 0x40000d5	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000d5	        0x488945d8	             mov qword [rbp - 0x28], rax	        32	show-ref.c	FUNCTION_28	CALL_4
0x40000d9	    0x8b0500000000	            mov eax, dword [0x040000df] 	        33	show-ref.c	FUNCTION_28	IF_3
0x40000df	            0x85c0	                           test eax, eax	        33	show-ref.c	FUNCTION_28	IF_3
0x40000e1	            0x740e	                            je 0x40000f1	        33	show-ref.c	FUNCTION_28	IF_3
0x40000e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        34	show-ref.c	FUNCTION_28	CALL_5
0x40000e7	          0x4889c7	                            mov rdi, rax	        34	show-ref.c	FUNCTION_28	CALL_5
0x40000ea	      0xe800000000	                          call 0x40000ef	        34	show-ref.c	FUNCTION_28	CALL_5
0x40000ef	            0xeb1a	                           jmp 0x400010b	        34	show-ref.c	FUNCTION_28	CALL_5
0x40000f1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        36	show-ref.c	FUNCTION_28	CALL_6
0x40000f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        36	show-ref.c	FUNCTION_28	CALL_6
0x40000f9	          0x4889c6	                            mov rsi, rax	        36	show-ref.c	FUNCTION_28	CALL_6
0x40000fc	      0xbf00000000	                              mov edi, 0	        36	show-ref.c	FUNCTION_28	CALL_6
0x4000101	      0xb800000000	                              mov eax, 0	        36	show-ref.c	FUNCTION_28	CALL_6
0x4000106	      0xe800000000	                          call 0x400010b	        36	show-ref.c	FUNCTION_28	CALL_6
0x400010b	    0x8b0500000000	            mov eax, dword [0x04000111] 	        38	show-ref.c	FUNCTION_28	IF_4
0x4000111	            0x85c0	                           test eax, eax	        38	show-ref.c	FUNCTION_28	IF_4
0x4000113	            0x744e	                            je 0x4000163	        38	show-ref.c	FUNCTION_28	IF_4
0x4000115	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x4000119	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x400011d	          0x4889d6	                            mov rsi, rdx	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x4000120	          0x4889c7	                            mov rdi, rax	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x4000123	      0xe800000000	                          call 0x4000128	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x4000128	            0x85c0	                           test eax, eax	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x400012a	            0x7538	                           jne 0x4000164	        41	show-ref.c	FUNCTION_28	IF_5	CALL_7
0x400012c	    0x8b1500000000	            mov edx, dword [0x04000132] 	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x4000132	        0x488d45e0	                   lea rax, [rbp - 0x20]	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x4000136	            0x89d6	                            mov esi, edx	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x4000138	          0x4889c7	                            mov rdi, rax	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x400013b	      0xe800000000	                          call 0x4000140	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x4000140	        0x488945d8	             mov qword [rbp - 0x28], rax	        42	show-ref.c	FUNCTION_28	IF_5	CALL_8
0x4000144	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x4000148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x400014c	          0x4889c6	                            mov rsi, rax	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x400014f	      0xbf00000000	                              mov edi, 0	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x4000154	      0xb800000000	                              mov eax, 0	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x4000159	      0xe800000000	                          call 0x400015e	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x400015e	            0xeb04	                           jmp 0x4000164	        43	show-ref.c	FUNCTION_28	IF_5	CALL_9
0x4000160	              0x90	                                     nop	        30	show-ref.c	FUNCTION_28	IF_2
0x4000161	            0xeb01	                           jmp 0x4000164	        30	show-ref.c	FUNCTION_28	IF_2
0x4000163	              0x90	                                     nop	        39	show-ref.c	FUNCTION_28	IF_4
0x4000164	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	show-ref.c	FUNCTION_28
0x4000168	    0x644833042528	                xor rax, qword fs:[0x28]	        45	show-ref.c	FUNCTION_28
0x4000171	            0x7405	                            je 0x4000178	        45	show-ref.c	FUNCTION_28
0x4000173	      0xe800000000	                          call 0x4000178	        45	show-ref.c	FUNCTION_28
0x4000178	              0xc9	                                   leave	        45	show-ref.c	FUNCTION_28
0x4000179	              0xc3	                                     ret	        45	show-ref.c	FUNCTION_28
cmd_show_ref	IF,9:CALL,11:SWITCH,0:functions,0:WHILE,1:FOR,0:ELSE,2:DO,0	120
0x4000619	              0x55	                                push rbp	       182	show-ref.c	FUNCTION_34
0x400061a	          0x4889e5	                            mov rbp, rsp	       182	show-ref.c	FUNCTION_34
0x400061d	        0x4883ec40	                           sub rsp, 0x40	       182	show-ref.c	FUNCTION_34
0x4000621	          0x897ddc	             mov dword [rbp - 0x24], edi	       182	show-ref.c	FUNCTION_34
0x4000624	        0x488975d0	             mov qword [rbp - 0x30], rsi	       182	show-ref.c	FUNCTION_34
0x4000628	        0x488955c8	             mov qword [rbp - 0x38], rdx	       182	show-ref.c	FUNCTION_34
0x400062c	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	show-ref.c	FUNCTION_34
0x4000635	        0x488945f8	                mov qword [rbp - 8], rax	       182	show-ref.c	FUNCTION_34
0x4000639	            0x31c0	                            xor eax, eax	       182	show-ref.c	FUNCTION_34
0x400063b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       183	show-ref.c	FUNCTION_34	CALL_1
0x400063f	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000643	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000646	    0x41b900000000	                              mov r9d, 0	       183	show-ref.c	FUNCTION_34	CALL_1
0x400064c	    0x41b800000000	                              mov r8d, 0	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000652	      0xb900000000	                              mov ecx, 0	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000657	            0x89c7	                            mov edi, eax	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000659	      0xe800000000	                          call 0x400065e	       183	show-ref.c	FUNCTION_34	CALL_1
0x400065e	          0x8945dc	             mov dword [rbp - 0x24], eax	       183	show-ref.c	FUNCTION_34	CALL_1
0x4000661	    0x8b0500000000	            mov eax, dword [0x04000667] 	       186	show-ref.c	FUNCTION_34	IF_1
0x4000667	            0x85c0	                           test eax, eax	       186	show-ref.c	FUNCTION_34	IF_1
0x4000669	            0x7414	                            je 0x400067f	       186	show-ref.c	FUNCTION_34	IF_1
0x400066b	    0x488b05000000	            mov rax, qword [0x04000672] 	       187	show-ref.c	FUNCTION_34	CALL_2
0x4000672	          0x4889c7	                            mov rdi, rax	       187	show-ref.c	FUNCTION_34	CALL_2
0x4000675	      0xe8dffcffff	               call sym.exclude_existing	       187	show-ref.c	FUNCTION_34	CALL_2
0x400067a	      0xe97a010000	                           jmp 0x40007f9	       187	show-ref.c	FUNCTION_34	CALL_2
0x400067f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	show-ref.c	FUNCTION_34
0x4000683	    0x488905000000	            mov qword [0x0400068a], rax 	       189	show-ref.c	FUNCTION_34
0x400068a	    0x488b05000000	            mov rax, qword [0x04000691] 	       190	show-ref.c	FUNCTION_34	IF_2
0x4000691	          0x488b00	                    mov rax, qword [rax]	       190	show-ref.c	FUNCTION_34	IF_2
0x4000694	          0x4885c0	                           test rax, rax	       190	show-ref.c	FUNCTION_34	IF_2
0x4000697	            0x750b	                           jne 0x40006a4	       190	show-ref.c	FUNCTION_34	IF_2
0x4000699	    0x48c705000000	               mov qword [0x040006a4], 0	       191	show-ref.c	FUNCTION_34	IF_2
0x40006a4	    0x8b0500000000	            mov eax, dword [0x040006aa] 	       193	show-ref.c	FUNCTION_34	IF_3
0x40006aa	            0x85c0	                           test eax, eax	       193	show-ref.c	FUNCTION_34	IF_3
0x40006ac	     0xf84e6000000	                            je 0x4000798	       193	show-ref.c	FUNCTION_34	IF_3
0x40006b2	    0x488b05000000	            mov rax, qword [0x040006b9] 	       194	show-ref.c	FUNCTION_34	IF_3	IF_4
0x40006b9	          0x4885c0	                           test rax, rax	       194	show-ref.c	FUNCTION_34	IF_3	IF_4
0x40006bc	     0xf85bc000000	                           jne 0x400077e	       194	show-ref.c	FUNCTION_34	IF_3	IF_4
0x40006c2	      0xbf00000000	                              mov edi, 0	       195	show-ref.c	FUNCTION_34	IF_3	CALL_3
0x40006c7	      0xb800000000	                              mov eax, 0	       195	show-ref.c	FUNCTION_34	IF_3	CALL_3
0x40006cc	      0xe800000000	                          call 0x40006d1	       195	show-ref.c	FUNCTION_34	IF_3	CALL_3
0x40006d1	    0x488b05000000	            mov rax, qword [0x040006d8] 	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006d8	          0x488b00	                    mov rax, qword [rax]	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006db	      0xbe00000000	                              mov esi, 0	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006e0	          0x4889c7	                            mov rdi, rax	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006e3	      0xe800000000	                          call 0x40006e8	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006e8	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006ea	            0x751b	                           jne 0x4000707	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006ec	    0x488b05000000	            mov rax, qword [0x040006f3] 	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006f3	          0x488b00	                    mov rax, qword [rax]	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006f6	      0xbe00000000	                              mov esi, 0	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006fb	          0x4889c7	                            mov rdi, rax	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x40006fe	      0xe800000000	                          call 0x4000703	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x4000703	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x4000705	            0x754a	                           jne 0x4000751	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x4000707	    0x488b05000000	            mov rax, qword [0x0400070e] 	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x400070e	          0x488b00	                    mov rax, qword [rax]	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x4000711	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x4000715	          0x4889d6	                            mov rsi, rdx	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x4000718	          0x4889c7	                            mov rdi, rax	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x400071b	      0xe800000000	                          call 0x4000720	       200	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_6
0x4000720	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x4000722	            0x752d	                           jne 0x4000751	       199	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_5
0x4000724	    0x488b05000000	            mov rax, qword [0x0400072b] 	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x400072b	          0x488b00	                    mov rax, qword [rax]	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x400072e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x4000732	          0x4889d6	                            mov rsi, rdx	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x4000735	          0x4889c7	                            mov rdi, rax	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x4000738	      0xe822f9ffff	                       call sym.show_one	       201	show-ref.c	FUNCTION_34	IF_3	WHILE_1	IF_5	CALL_7
0x400073d	    0x488b05000000	            mov rax, qword [0x04000744] 	       207	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000744	        0x4883c008	                              add rax, 8	       207	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000748	    0x488905000000	            mov qword [0x0400074f], rax 	       207	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x400074f	            0xeb2d	                           jmp 0x400077e	       207	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000751	    0x8b0500000000	            mov eax, dword [0x04000757] 	       203	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000757	            0x85c0	                           test eax, eax	       203	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000759	            0x751c	                           jne 0x4000777	       203	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x400075b	    0x488b05000000	            mov rax, qword [0x04000762] 	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000762	          0x488b00	                    mov rax, qword [rax]	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000765	          0x4889c6	                            mov rsi, rax	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000768	      0xbf00000000	                              mov edi, 0	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x400076d	      0xb800000000	                              mov eax, 0	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000772	      0xe800000000	                          call 0x4000777	       204	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_1	IF_6
0x4000777	      0xb801000000	                              mov eax, 1	       206	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_2
0x400077c	            0xeb7b	                           jmp 0x40007f9	       206	show-ref.c	FUNCTION_34	IF_3	WHILE_1	ELSE_2
0x400077e	    0x488b05000000	            mov rax, qword [0x04000785] 	       196	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000785	          0x488b00	                    mov rax, qword [rax]	       196	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000788	          0x4885c0	                           test rax, rax	       196	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x400078b	     0xf8540ffffff	                           jne 0x40006d1	       196	show-ref.c	FUNCTION_34	IF_3	WHILE_1
0x4000791	      0xb800000000	                              mov eax, 0	       209	show-ref.c	FUNCTION_34	IF_3
0x4000796	            0xeb61	                           jmp 0x40007f9	       209	show-ref.c	FUNCTION_34	IF_3
0x4000798	    0x8b0500000000	            mov eax, dword [0x0400079e] 	       212	show-ref.c	FUNCTION_34	IF_7
0x400079e	            0x85c0	                           test eax, eax	       212	show-ref.c	FUNCTION_34	IF_7
0x40007a0	            0x740f	                            je 0x40007b1	       212	show-ref.c	FUNCTION_34	IF_7
0x40007a2	      0xbe00000000	                              mov esi, 0	       213	show-ref.c	FUNCTION_34	CALL_9
0x40007a7	      0xbf00000000	                              mov edi, 0	       213	show-ref.c	FUNCTION_34	CALL_9
0x40007ac	      0xe800000000	                          call 0x40007b1	       213	show-ref.c	FUNCTION_34	CALL_9
0x40007b1	      0xbe00000000	                              mov esi, 0	       214	show-ref.c	FUNCTION_34	CALL_10
0x40007b6	      0xbf00000000	                              mov edi, 0	       214	show-ref.c	FUNCTION_34	CALL_10
0x40007bb	      0xe800000000	                          call 0x40007c0	       214	show-ref.c	FUNCTION_34	CALL_10
0x40007c0	    0x8b0500000000	            mov eax, dword [0x040007c6] 	       215	show-ref.c	FUNCTION_34	IF_8
0x40007c6	            0x85c0	                           test eax, eax	       215	show-ref.c	FUNCTION_34	IF_8
0x40007c8	            0x752a	                           jne 0x40007f4	       215	show-ref.c	FUNCTION_34	IF_8
0x40007ca	    0x8b0500000000	            mov eax, dword [0x040007d0] 	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007d0	            0x85c0	                           test eax, eax	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007d2	            0x7419	                            je 0x40007ed	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007d4	    0x8b0500000000	            mov eax, dword [0x040007da] 	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007da	            0x85c0	                           test eax, eax	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007dc	            0x750f	                           jne 0x40007ed	       216	show-ref.c	FUNCTION_34	IF_8	IF_9
0x40007de	      0xbf00000000	                              mov edi, 0	       217	show-ref.c	FUNCTION_34	IF_8	CALL_11
0x40007e3	      0xb800000000	                              mov eax, 0	       217	show-ref.c	FUNCTION_34	IF_8	CALL_11
0x40007e8	      0xe800000000	                          call 0x40007ed	       217	show-ref.c	FUNCTION_34	IF_8	CALL_11
0x40007ed	      0xb801000000	                              mov eax, 1	       218	show-ref.c	FUNCTION_34	IF_8
0x40007f2	            0xeb05	                           jmp 0x40007f9	       218	show-ref.c	FUNCTION_34	IF_8
0x40007f4	      0xb800000000	                              mov eax, 0	       220	show-ref.c	FUNCTION_34
0x40007f9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       221	show-ref.c	FUNCTION_34
0x40007fd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       221	show-ref.c	FUNCTION_34
0x4000806	            0x7405	                            je 0x400080d	       221	show-ref.c	FUNCTION_34
0x4000808	      0xe800000000	                          call 0x400080d	       221	show-ref.c	FUNCTION_34
0x400080d	              0xc9	                                   leave	       221	show-ref.c	FUNCTION_34
0x400080e	              0xc3	                                     ret	       221	show-ref.c	FUNCTION_34
exclude_existing_callback	IF,0:CALL,0:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:DO,0	13
0x40005ea	              0x55	                                push rbp	       152	show-ref.c	FUNCTION_33
0x40005eb	          0x4889e5	                            mov rbp, rsp	       152	show-ref.c	FUNCTION_33
0x40005ee	        0x48897df8	                mov qword [rbp - 8], rdi	       152	show-ref.c	FUNCTION_33
0x40005f2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       152	show-ref.c	FUNCTION_33
0x40005f6	          0x8955ec	             mov dword [rbp - 0x14], edx	       152	show-ref.c	FUNCTION_33
0x40005f9	    0xc70500000000	               mov dword [0x04000603], 1	       153	show-ref.c	FUNCTION_33
0x4000603	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	show-ref.c	FUNCTION_33
0x4000607	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	show-ref.c	FUNCTION_33
0x400060b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       154	show-ref.c	FUNCTION_33
0x400060f	          0x488910	                    mov qword [rax], rdx	       154	show-ref.c	FUNCTION_33
0x4000612	      0xb800000000	                              mov eax, 0	       155	show-ref.c	FUNCTION_33
0x4000617	              0x5d	                                 pop rbp	       156	show-ref.c	FUNCTION_33
0x4000618	              0xc3	                                     ret	       156	show-ref.c	FUNCTION_33
