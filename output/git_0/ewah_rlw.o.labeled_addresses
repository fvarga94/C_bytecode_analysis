rlwit_discharge_empty	ELSE,0:DO,0:CALL,5:functions,0:WHILE,1:FOR,0:IF,0:SWITCH,0	30
0x400040c	              0x55	                                push rbp	       109	ewah_rlw.c	FUNCTION_5
0x400040d	          0x4889e5	                            mov rbp, rsp	       109	ewah_rlw.c	FUNCTION_5
0x4000410	        0x4883ec10	                           sub rsp, 0x10	       109	ewah_rlw.c	FUNCTION_5
0x4000414	        0x48897df8	                mov qword [rbp - 8], rdi	       109	ewah_rlw.c	FUNCTION_5
0x4000418	        0x488975f0	             mov qword [rbp - 0x10], rsi	       109	ewah_rlw.c	FUNCTION_5
0x400041c	            0xeb3e	                           jmp 0x400045c	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x400041e	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x4000422	          0x4889c7	                            mov rdi, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x4000425	      0xe855fcffff	                call sym.rlwit_word_size	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x400042a	          0x4889c2	                            mov rdx, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x400042d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x4000431	      0xbe00000000	                              mov esi, 0	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x4000436	          0x4889c7	                            mov rdi, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x4000439	      0xe800000000	                          call 0x400043e	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x400043e	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x4000442	          0x4889c7	                            mov rdi, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x4000445	      0xe835fcffff	                call sym.rlwit_word_size	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x400044a	          0x4889c2	                            mov rdx, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x400044d	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x4000451	          0x4889d6	                            mov rsi, rdx	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x4000454	          0x4889c7	                            mov rdi, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x4000457	      0xe800000000	                          call 0x400045c	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x400045c	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x4000460	          0x4889c7	                            mov rdi, rax	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x4000463	      0xe817fcffff	                call sym.rlwit_word_size	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x4000468	          0x4885c0	                           test rax, rax	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x400046b	            0x75b1	                           jne 0x400041e	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x400046d	              0x90	                                     nop	       114	ewah_rlw.c	FUNCTION_5
0x400046e	              0xc9	                                   leave	       114	ewah_rlw.c	FUNCTION_5
0x400046f	              0xc3	                                     ret	       114	ewah_rlw.c	FUNCTION_5
next_word	ELSE,0:DO,0:CALL,4:functions,0:WHILE,0:FOR,0:IF,1:SWITCH,0	56
0x40000bc	              0x55	                                push rbp	        24	ewah_rlw.c	FUNCTION_1
0x40000bd	          0x4889e5	                            mov rbp, rsp	        24	ewah_rlw.c	FUNCTION_1
0x40000c0	        0x4883ec08	                              sub rsp, 8	        24	ewah_rlw.c	FUNCTION_1
0x40000c4	        0x48897df8	                mov qword [rbp - 8], rdi	        24	ewah_rlw.c	FUNCTION_1
0x40000c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000cc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000d4	        0x488b4008	                mov rax, qword [rax + 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000d8	          0x4839c2	                            cmp rdx, rax	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000db	            0x720a	                            jb 0x40000e7	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x40000dd	      0xb800000000	                              mov eax, 0	        26	ewah_rlw.c	FUNCTION_1	IF_1
0x40000e2	      0xe9a0000000	                           jmp 0x4000187	        26	ewah_rlw.c	FUNCTION_1	IF_1
0x40000e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0x40000eb	          0x488b10	                    mov rdx, qword [rax]	        28	ewah_rlw.c	FUNCTION_1
0x40000ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0x40000f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ewah_rlw.c	FUNCTION_1
0x40000f6	        0x48c1e003	                              shl rax, 3	        28	ewah_rlw.c	FUNCTION_1
0x40000fa	          0x4801c2	                            add rdx, rax	        28	ewah_rlw.c	FUNCTION_1
0x40000fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0x4000101	        0x48895020	             mov qword [rax + 0x20], rdx	        28	ewah_rlw.c	FUNCTION_1
0x4000105	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000109	        0x488b4020	            mov rax, qword [rax + 0x20] 	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x400010d	          0x4889c7	                            mov rdi, rax	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000110	      0xe855ffffff	          call sym.rlw_get_literal_words	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000115	        0x488d5001	                      lea rdx, [rax + 1]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000119	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x400011d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000121	          0x4801c2	                            add rdx, rax	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000124	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x4000128	        0x48895010	             mov qword [rax + 0x10], rdx	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x4000130	        0x488b4020	            mov rax, qword [rax + 0x20] 	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x4000134	          0x4889c7	                            mov rdi, rax	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x4000137	      0xe82effffff	          call sym.rlw_get_literal_words	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x400013c	            0x89c2	                            mov edx, eax	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x400013e	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x4000142	          0x895028	             mov dword [rax + 0x28], edx	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x4000149	        0x488b4020	            mov rax, qword [rax + 0x20] 	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x400014d	          0x4889c7	                            mov rdi, rax	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x4000150	      0xe8fffeffff	            call sym.rlw_get_running_len	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x4000155	            0x89c2	                            mov edx, eax	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x4000157	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x400015b	          0x89502c	             mov dword [rax + 0x2c], edx	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000162	        0x488b4020	            mov rax, qword [rax + 0x20] 	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000166	          0x4889c7	                            mov rdi, rax	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000169	      0xe8d2feffff	                call sym.rlw_get_run_bit	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x400016e	            0x89c2	                            mov edx, eax	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000174	          0x895034	             mov dword [rax + 0x34], edx	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x4000177	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewah_rlw.c	FUNCTION_1
0x400017b	    0xc74030000000	               mov dword [rax + 0x30], 0	        34	ewah_rlw.c	FUNCTION_1
0x4000182	      0xb801000000	                              mov eax, 1	        36	ewah_rlw.c	FUNCTION_1
0x4000187	              0xc9	                                   leave	        37	ewah_rlw.c	FUNCTION_1
0x4000188	              0xc3	                                     ret	        37	ewah_rlw.c	FUNCTION_1
rlwit_discard_first_words	ELSE,0:DO,0:CALL,3:functions,0:WHILE,1:FOR,0:IF,3:SWITCH,0	79
0x40001f5	              0x55	                                push rbp	        52	ewah_rlw.c	FUNCTION_3
0x40001f6	          0x4889e5	                            mov rbp, rsp	        52	ewah_rlw.c	FUNCTION_3
0x40001f9	        0x4883ec20	                           sub rsp, 0x20	        52	ewah_rlw.c	FUNCTION_3
0x40001fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        52	ewah_rlw.c	FUNCTION_3
0x4000201	        0x488975e0	             mov qword [rbp - 0x20], rsi	        52	ewah_rlw.c	FUNCTION_3
0x4000205	      0xe9e3000000	                           jmp 0x40002ed	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400020a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x400020e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000211	            0x4898	                                    cdqe	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000213	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000217	            0x761f	                           jbe 0x4000238	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000219	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x400021d	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000220	            0x89c2	                            mov edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000222	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000226	            0x29c2	                            sub edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000228	            0x89d0	                            mov eax, edx	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x400022a	            0x89c2	                            mov edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x400022c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000230	          0x89502c	             mov dword [rax + 0x2c], edx	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000233	      0xe9c3000000	                           jmp 0x40002fb	        58	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x4000238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400023c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400023f	            0x4898	                                    cdqe	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000241	        0x482945e0	             sub qword [rbp - 0x20], rax	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000249	    0xc7402c000000	               mov dword [rax + 0x2c], 0	        62	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000250	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000254	          0x8b4028	            mov eax, dword [rax + 0x28] 	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000257	          0x4863d0	                         movsxd rdx, eax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400025a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400025e	          0x4839c2	                            cmp rdx, rax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000261	        0x480f46c2	                         cmovbe rax, rdx	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000265	        0x488945f8	                mov qword [rbp - 8], rax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400026d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000271	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000275	          0x4801c2	                            add rdx, rax	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000278	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400027c	        0x48895018	             mov qword [rax + 0x18], rdx	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000280	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000284	          0x8b4028	            mov eax, dword [rax + 0x28] 	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000287	            0x89c2	                            mov edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000289	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400028d	            0x29c2	                            sub edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400028f	            0x89d0	                            mov eax, edx	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000291	            0x89c2	                            mov edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x4000297	          0x895028	             mov dword [rax + 0x28], edx	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400029a	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewah_rlw.c	FUNCTION_3	WHILE_1
0x400029e	        0x482945e0	             sub qword [rbp - 0x20], rax	        68	ewah_rlw.c	FUNCTION_3	WHILE_1
0x40002a2	      0x48837de000	               cmp qword [rbp - 0x20], 0	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002a7	            0x7511	                           jne 0x40002ba	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002ad	          0x4889c7	                            mov rdi, rax	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002b0	      0xe8cafdffff	                call sym.rlwit_word_size	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002b5	          0x4885c0	                           test rax, rax	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002b8	            0x7533	                           jne 0x40002ed	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x40002ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x40002be	          0x4889c7	                            mov rdi, rax	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x40002c1	      0xe8f6fdffff	                      call sym.next_word	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x40002c6	            0x85c0	                           test eax, eax	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x40002c8	            0x7430	                            je 0x40002fa	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x40002ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002ce	          0x4889c7	                            mov rdi, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002d1	      0xe8c5fdffff	            call sym.rlwit_literal_words	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002d6	          0x4889c2	                            mov rdx, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002dd	          0x8b4030	            mov eax, dword [rax + 0x30] 	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002e0	            0x4898	                                    cdqe	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002e2	          0x4801c2	                            add rdx, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x40002e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2
0x40002e9	        0x48895018	             mov qword [rax + 0x18], rdx	        74	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2
0x40002ed	      0x48837de000	               cmp qword [rbp - 0x20], 0	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x40002f2	     0xf8512ffffff	                           jne 0x400020a	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x40002f8	            0xeb01	                           jmp 0x40002fb	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x40002fa	              0x90	                                     nop	        72	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3
0x40002fb	              0xc9	                                   leave	        78	ewah_rlw.c	FUNCTION_3
0x40002fc	              0xc3	                                     ret	        78	ewah_rlw.c	FUNCTION_3
rlw_get_running_len	ELSE,0:DO,0:CALL,0:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	9
0x4000054	              0x55	                                push rbp	        62	ewok_rlw.h	FUNCTION_10
0x4000055	          0x4889e5	                            mov rbp, rsp	        62	ewok_rlw.h	FUNCTION_10
0x4000058	        0x48897df8	                mov qword [rbp - 8], rdi	        62	ewok_rlw.h	FUNCTION_10
0x400005c	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	ewok_rlw.h	FUNCTION_10
0x4000060	          0x488b00	                    mov rax, qword [rax]	        63	ewok_rlw.h	FUNCTION_10
0x4000063	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_10
0x4000066	            0x89c0	                            mov eax, eax	        63	ewok_rlw.h	FUNCTION_10
0x4000068	              0x5d	                                 pop rbp	        64	ewok_rlw.h	FUNCTION_10
0x4000069	              0xc3	                                     ret	        64	ewok_rlw.h	FUNCTION_10
rlwit_word_size	ELSE,0:DO,0:CALL,0:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	11
0x400007f	              0x55	                                push rbp	       104	ewok_rlw.h	FUNCTION_14
0x4000080	          0x4889e5	                            mov rbp, rsp	       104	ewok_rlw.h	FUNCTION_14
0x4000083	        0x48897df8	                mov qword [rbp - 8], rdi	       104	ewok_rlw.h	FUNCTION_14
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_14
0x400008b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       105	ewok_rlw.h	FUNCTION_14
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_14
0x4000092	          0x8b4028	            mov eax, dword [rax + 0x28] 	       105	ewok_rlw.h	FUNCTION_14
0x4000095	             0x1d0	                            add eax, edx	       105	ewok_rlw.h	FUNCTION_14
0x4000097	            0x4898	                                    cdqe	       105	ewok_rlw.h	FUNCTION_14
0x4000099	              0x5d	                                 pop rbp	       106	ewok_rlw.h	FUNCTION_14
0x400009a	              0xc3	                                     ret	       106	ewok_rlw.h	FUNCTION_14
rlw_get_literal_words	ELSE,0:DO,0:CALL,0:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	8
0x400006a	              0x55	                                push rbp	        67	ewok_rlw.h	FUNCTION_11
0x400006b	          0x4889e5	                            mov rbp, rsp	        67	ewok_rlw.h	FUNCTION_11
0x400006e	        0x48897df8	                mov qword [rbp - 8], rdi	        67	ewok_rlw.h	FUNCTION_11
0x4000072	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewok_rlw.h	FUNCTION_11
0x4000076	          0x488b00	                    mov rax, qword [rax]	        68	ewok_rlw.h	FUNCTION_11
0x4000079	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_11
0x400007d	              0x5d	                                 pop rbp	        69	ewok_rlw.h	FUNCTION_11
0x400007e	              0xc3	                                     ret	        69	ewok_rlw.h	FUNCTION_11
rlwit_literal_words	ELSE,0:DO,0:CALL,0:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	12
0x400009b	              0x55	                                push rbp	       109	ewok_rlw.h	FUNCTION_15
0x400009c	          0x4889e5	                            mov rbp, rsp	       109	ewok_rlw.h	FUNCTION_15
0x400009f	        0x48897df8	                mov qword [rbp - 8], rdi	       109	ewok_rlw.h	FUNCTION_15
0x40000a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewok_rlw.h	FUNCTION_15
0x40000a7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       110	ewok_rlw.h	FUNCTION_15
0x40000ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewok_rlw.h	FUNCTION_15
0x40000af	          0x8b4028	            mov eax, dword [rax + 0x28] 	       110	ewok_rlw.h	FUNCTION_15
0x40000b2	            0x4898	                                    cdqe	       110	ewok_rlw.h	FUNCTION_15
0x40000b4	          0x4829c2	                            sub rdx, rax	       110	ewok_rlw.h	FUNCTION_15
0x40000b7	          0x4889d0	                            mov rax, rdx	       110	ewok_rlw.h	FUNCTION_15
0x40000ba	              0x5d	                                 pop rbp	       111	ewok_rlw.h	FUNCTION_15
0x40000bb	              0xc3	                                     ret	       111	ewok_rlw.h	FUNCTION_15
rlwit_discharge	ELSE,0:DO,0:CALL,4:functions,0:WHILE,1:FOR,0:IF,2:SWITCH,0	75
0x40002fd	              0x55	                                push rbp	        82	ewah_rlw.c	FUNCTION_4
0x40002fe	          0x4889e5	                            mov rbp, rsp	        82	ewah_rlw.c	FUNCTION_4
0x4000301	        0x4883ec40	                           sub rsp, 0x40	        82	ewah_rlw.c	FUNCTION_4
0x4000305	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        82	ewah_rlw.c	FUNCTION_4
0x4000309	        0x488975d0	             mov qword [rbp - 0x30], rsi	        82	ewah_rlw.c	FUNCTION_4
0x400030d	        0x488955c8	             mov qword [rbp - 0x38], rdx	        82	ewah_rlw.c	FUNCTION_4
0x4000311	          0x894dc4	             mov dword [rbp - 0x3c], ecx	        82	ewah_rlw.c	FUNCTION_4
0x4000314	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        83	ewah_rlw.c	FUNCTION_4
0x400031c	      0xe9c6000000	                           jmp 0x40003e7	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x4000321	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x4000325	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x4000328	            0x4898	                                    cdqe	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400032a	        0x488945f8	                mov qword [rbp - 8], rax	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400032e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x4000332	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x4000336	          0x4801d0	                            add rax, rdx	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x4000339	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x400033d	            0x760c	                           jbe 0x400034b	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x400033f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x4000343	        0x482b45e8	             sub rax, qword [rbp - 0x18]	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x4000347	        0x488945f8	                mov qword [rbp - 8], rax	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x400034b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x400034f	          0x8b4034	            mov eax, dword [rax + 0x34] 	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000352	          0x3345c4	             xor eax, dword [rbp - 0x3c]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000355	            0x89c1	                            mov ecx, eax	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000357	        0x488b55f8	                mov rdx, qword [rbp - 8]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x400035b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x400035f	            0x89ce	                            mov esi, ecx	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000361	          0x4889c7	                            mov rdi, rax	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000364	      0xe800000000	                          call 0x4000369	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x4000369	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400036d	        0x480145e8	            add qword [rbp - 0x18], rax 	        92	ewah_rlw.c	FUNCTION_4	WHILE_1
0x4000371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x4000375	          0x8b4028	            mov eax, dword [rax + 0x28] 	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x4000378	            0x4898	                                    cdqe	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400037a	        0x488945f0	             mov qword [rbp - 0x10], rax	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400037e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x4000382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x4000386	          0x4801d0	                            add rax, rdx	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x4000389	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x400038d	            0x760c	                           jbe 0x400039b	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x400038f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x4000393	        0x482b45e8	             sub rax, qword [rbp - 0x18]	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x4000397	        0x488945f0	             mov qword [rbp - 0x10], rax	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x400039b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x400039f	          0x488b10	                    mov rdx, qword [rax]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003a6	        0x488b4018	            mov rax, qword [rax + 0x18] 	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003aa	        0x48c1e003	                              shl rax, 3	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003ae	        0x488d3402	                    lea rsi, [rdx + rax]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003b2	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003bd	          0x4889c7	                            mov rdi, rax	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003c0	      0xe800000000	                          call 0x40003c5	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x40003c5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003cd	          0x4801c2	                            add rdx, rax	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003d4	          0x4889d6	                            mov rsi, rdx	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003d7	          0x4889c7	                            mov rdi, rax	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003da	      0xe800000000	                          call 0x40003df	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x40003df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003e3	        0x480145e8	            add qword [rbp - 0x18], rax 	       102	ewah_rlw.c	FUNCTION_4	WHILE_1
0x40003e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003eb	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003ef	            0x7315	                           jae 0x4000406	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003f5	          0x4889c7	                            mov rdi, rax	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003f8	      0xe882fcffff	                call sym.rlwit_word_size	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x40003fd	          0x4885c0	                           test rax, rax	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x4000400	     0xf851bffffff	                           jne 0x4000321	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x4000406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       105	ewah_rlw.c	FUNCTION_4
0x400040a	              0xc9	                                   leave	       106	ewah_rlw.c	FUNCTION_4
0x400040b	              0xc3	                                     ret	       106	ewah_rlw.c	FUNCTION_4
rlwit_init	ELSE,0:DO,0:CALL,2:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	31
0x4000189	              0x55	                                push rbp	        40	ewah_rlw.c	FUNCTION_2
0x400018a	          0x4889e5	                            mov rbp, rsp	        40	ewah_rlw.c	FUNCTION_2
0x400018d	        0x4883ec10	                           sub rsp, 0x10	        40	ewah_rlw.c	FUNCTION_2
0x4000191	        0x48897df8	                mov qword [rbp - 8], rdi	        40	ewah_rlw.c	FUNCTION_2
0x4000195	        0x488975f0	             mov qword [rbp - 0x10], rsi	        40	ewah_rlw.c	FUNCTION_2
0x4000199	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	ewah_rlw.c	FUNCTION_2
0x400019d	          0x488b10	                    mov rdx, qword [rax]	        41	ewah_rlw.c	FUNCTION_2
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	ewah_rlw.c	FUNCTION_2
0x40001a4	          0x488910	                    mov qword [rax], rdx	        41	ewah_rlw.c	FUNCTION_2
0x40001a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        42	ewah_rlw.c	FUNCTION_2
0x40001ab	        0x488b5008	                mov rdx, qword [rax + 8]	        42	ewah_rlw.c	FUNCTION_2
0x40001af	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewah_rlw.c	FUNCTION_2
0x40001b3	        0x48895008	                mov qword [rax + 8], rdx	        42	ewah_rlw.c	FUNCTION_2
0x40001b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	ewah_rlw.c	FUNCTION_2
0x40001bb	    0x48c740100000	               mov qword [rax + 0x10], 0	        43	ewah_rlw.c	FUNCTION_2
0x40001c3	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x40001c7	          0x4889c7	                            mov rdi, rax	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x40001ca	      0xe8edfeffff	                      call sym.next_word	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x40001cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001d3	          0x4889c7	                            mov rdi, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001d6	      0xe8c0feffff	            call sym.rlwit_literal_words	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001db	          0x4889c2	                            mov rdx, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001de	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_rlw.c	FUNCTION_2
0x40001e2	          0x8b4030	            mov eax, dword [rax + 0x30] 	        48	ewah_rlw.c	FUNCTION_2
0x40001e5	            0x4898	                                    cdqe	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001e7	          0x4801c2	                            add rdx, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001ea	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001ee	        0x48895018	             mov qword [rax + 0x18], rdx	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x40001f2	              0x90	                                     nop	        49	ewah_rlw.c	FUNCTION_2
0x40001f3	              0xc9	                                   leave	        49	ewah_rlw.c	FUNCTION_2
0x40001f4	              0xc3	                                     ret	        49	ewah_rlw.c	FUNCTION_2
rlw_get_run_bit	ELSE,0:DO,0:CALL,0:functions,0:WHILE,0:FOR,0:IF,0:SWITCH,0	8
0x4000040	              0x55	                                push rbp	        33	ewok_rlw.h	FUNCTION_6
0x4000041	          0x4889e5	                            mov rbp, rsp	        33	ewok_rlw.h	FUNCTION_6
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok_rlw.h	FUNCTION_6
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewok_rlw.h	FUNCTION_6
0x400004c	          0x488b00	                    mov rax, qword [rax]	        34	ewok_rlw.h	FUNCTION_6
0x400004f	          0x83e001	                              and eax, 1	        34	ewok_rlw.h	FUNCTION_6
0x4000052	              0x5d	                                 pop rbp	        35	ewok_rlw.h	FUNCTION_6
0x4000053	              0xc3	                                     ret	        35	ewok_rlw.h	FUNCTION_6
