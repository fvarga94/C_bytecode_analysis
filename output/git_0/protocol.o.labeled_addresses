parse_protocol_version	IF,3:FOR,0:functions,0:WHILE,0:CALL,3:SWITCH,0:DO,0:ELSE,3	31
0x4000096	              0x55	                                push rbp	         6	protocol.c	FUNCTION_1
0x4000097	          0x4889e5	                            mov rbp, rsp	         6	protocol.c	FUNCTION_1
0x400009a	        0x4883ec10	                           sub rsp, 0x10	         6	protocol.c	FUNCTION_1
0x400009e	        0x48897df8	                mov qword [rbp - 8], rdi	         6	protocol.c	FUNCTION_1
0x40000a2	        0x488b45f8	                mov rax, qword [rbp - 8]	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000a6	      0xbe00000000	                              mov esi, 0	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000ab	          0x4889c7	                            mov rdi, rax	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000ae	      0xe800000000	                          call 0x40000b3	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000b3	            0x85c0	                           test eax, eax	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000b5	            0x7507	                           jne 0x40000be	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x40000b7	      0xb800000000	                              mov eax, 0	         8	protocol.c	FUNCTION_1	IF_1
0x40000bc	            0xeb3d	                           jmp 0x40000fb	         8	protocol.c	FUNCTION_1	IF_1
0x40000be	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000c2	      0xbe00000000	                              mov esi, 0	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000c7	          0x4889c7	                            mov rdi, rax	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000ca	      0xe800000000	                          call 0x40000cf	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000cf	            0x85c0	                           test eax, eax	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000d1	            0x7507	                           jne 0x40000da	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x40000d3	      0xb801000000	                              mov eax, 1	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x40000d8	            0xeb21	                           jmp 0x40000fb	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x40000da	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000de	      0xbe00000000	                              mov esi, 0	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000e3	          0x4889c7	                            mov rdi, rax	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000e6	      0xe800000000	                          call 0x40000eb	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000eb	            0x85c0	                           test eax, eax	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000ed	            0x7507	                           jne 0x40000f6	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x40000ef	      0xb802000000	                              mov eax, 2	        12	protocol.c	FUNCTION_1	ELSE_2	IF_3
0x40000f4	            0xeb05	                           jmp 0x40000fb	        12	protocol.c	FUNCTION_1	ELSE_2	IF_3
0x40000f6	      0xb8ffffffff	                     mov eax, 0xffffffff	        14	protocol.c	FUNCTION_1	ELSE_3
0x40000fb	              0xc9	                                   leave	        15	protocol.c	FUNCTION_1	ELSE_3
0x40000fc	              0xc3	                                     ret	        15	protocol.c	FUNCTION_1	ELSE_3
determine_protocol_version_server	IF,1:FOR,0:functions,1:WHILE,0:CALL,3:SWITCH,0:DO,0:ELSE,0	66
0x4000174	              0x55	                                push rbp	        34	protocol.c	FUNCTION_3
0x4000175	          0x4889e5	                            mov rbp, rsp	        34	protocol.c	FUNCTION_3
0x4000178	        0x4883ec50	                           sub rsp, 0x50	        34	protocol.c	FUNCTION_3
0x400017c	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	protocol.c	FUNCTION_3
0x4000185	        0x488945f8	                mov qword [rbp - 8], rax	        34	protocol.c	FUNCTION_3
0x4000189	            0x31c0	                            xor eax, eax	        34	protocol.c	FUNCTION_3
0x400018b	      0xbf00000000	                              mov edi, 0	        35	protocol.c	FUNCTION_3	CALL_1
0x4000190	      0xe800000000	                          call 0x4000195	        35	protocol.c	FUNCTION_3	CALL_1
0x4000195	        0x488945c8	             mov qword [rbp - 0x38], rax	        35	protocol.c	FUNCTION_3	CALL_1
0x4000199	    0xc745b0000000	               mov dword [rbp - 0x50], 0	        36	protocol.c	FUNCTION_3
0x40001a0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        45	protocol.c	FUNCTION_3	IF_1
0x40001a5	     0xf84b8000000	                            je 0x4000263	        45	protocol.c	FUNCTION_3	IF_1
0x40001ab	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        46	protocol.c	FUNCTION_3	IF_1
0x40001b3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	        46	protocol.c	FUNCTION_3	IF_1
0x40001ba	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        46	protocol.c	FUNCTION_3	IF_1
0x40001c1	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	        46	protocol.c	FUNCTION_3	IF_1
0x40001c5	          0x83c801	                               or eax, 1	        46	protocol.c	FUNCTION_3	IF_1
0x40001c8	          0x8845e0	               mov byte [rbp - 0x20], al	        46	protocol.c	FUNCTION_3	IF_1
0x40001cb	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        46	protocol.c	FUNCTION_3	IF_1
0x40001d3	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001d7	        0x488d45d0	                   lea rax, [rbp - 0x30]	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001db	      0xb9ffffffff	                     mov ecx, 0xffffffff	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001e0	      0xba3a000000	                           mov edx, 0x3a	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001e5	          0x4889c7	                            mov rdi, rax	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001e8	      0xe800000000	                          call 0x40001ed	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x40001ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x40001f1	        0x488945c0	             mov qword [rbp - 0x40], rax	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x40001f5	            0xeb3e	                           jmp 0x4000235	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x40001f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x40001fb	          0x488b00	                    mov rax, qword [rax]	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x40001fe	        0x488d55b8	                   lea rdx, [rbp - 0x48]	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000202	      0xbe00000000	                              mov esi, 0	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000207	          0x4889c7	                            mov rdi, rax	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x400020a	      0xe831feffff	                    call sym.skip_prefix	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x400020f	            0x85c0	                           test eax, eax	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000211	            0x741d	                            je 0x4000230	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000213	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x4000217	          0x4889c7	                            mov rdi, rax	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x400021a	      0xe877feffff	         call sym.parse_protocol_version	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x400021f	          0x8945b4	             mov dword [rbp - 0x4c], eax	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x4000222	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        56	protocol.c	FUNCTION_3	FUNCTION_1	IF_2
0x4000225	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	        56	protocol.c	FUNCTION_3	FUNCTION_1	IF_2
0x4000228	            0x7e06	                           jle 0x4000230	        56	protocol.c	FUNCTION_3	FUNCTION_1	IF_2
0x400022a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        57	protocol.c	FUNCTION_3	FUNCTION_1	IF_2
0x400022d	          0x8945b0	             mov dword [rbp - 0x50], eax	        57	protocol.c	FUNCTION_3	FUNCTION_1	IF_2
0x4000230	      0x488345c010	            add qword [rbp - 0x40], 0x10	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000235	      0x48837dc000	               cmp qword [rbp - 0x40], 0	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400023a	            0x7416	                            je 0x4000252	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400023c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000240	          0x8b55d8	             mov edx, dword [rbp - 0x28]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000243	            0x89d2	                            mov edx, edx	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000245	        0x48c1e204	                              shl rdx, 4	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000249	          0x4801d0	                            add rax, rdx	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400024c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000250	            0x77a5	                            ja 0x40001f7	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000252	        0x488d45d0	                   lea rax, [rbp - 0x30]	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x4000256	      0xbe00000000	                              mov esi, 0	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x400025b	          0x4889c7	                            mov rdi, rax	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x400025e	      0xe800000000	                          call 0x4000263	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x4000263	          0x8b45b0	             mov eax, dword [rbp - 0x50]	        64	protocol.c	FUNCTION_3
0x4000266	        0x488b4df8	                mov rcx, qword [rbp - 8]	        65	protocol.c	FUNCTION_3
0x400026a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        65	protocol.c	FUNCTION_3
0x4000273	            0x7405	                            je 0x400027a	        65	protocol.c	FUNCTION_3
0x4000275	      0xe800000000	                          call 0x400027a	        65	protocol.c	FUNCTION_3
0x400027a	              0xc9	                                   leave	        65	protocol.c	FUNCTION_3
0x400027b	              0xc3	                                     ret	        65	protocol.c	FUNCTION_3
skip_prefix	IF,1:FOR,0:functions,0:WHILE,0:CALL,0:SWITCH,0:DO,1:ELSE,0	27
0x4000040	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_11
0x4000041	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_11
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_11
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_11
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_11
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000054	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000057	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000059	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400005f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000063	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000066	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400006b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400006d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000071	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000075	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000079	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x400007c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000080	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000084	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000088	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x400008b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_11	DO_1
0x400008d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_11	DO_1
0x400008f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_11
0x4000094	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_11
0x4000095	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_11
get_protocol_version_config	IF,2:FOR,0:functions,0:WHILE,0:CALL,3:SWITCH,0:DO,0:ELSE,0	32
0x40000fd	              0x55	                                push rbp	        18	protocol.c	ELSE_3	FUNCTION_2
0x40000fe	          0x4889e5	                            mov rbp, rsp	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000101	        0x4883ec20	                           sub rsp, 0x20	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000105	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	protocol.c	ELSE_3	FUNCTION_2
0x400010e	        0x488945f8	                mov qword [rbp - 8], rax	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000112	            0x31c0	                            xor eax, eax	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000114	        0x488d45f0	                   lea rax, [rbp - 0x10]	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000118	          0x4889c6	                            mov rsi, rax	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x400011b	      0xbf00000000	                              mov edi, 0	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000120	      0xe800000000	                          call 0x4000125	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000125	            0x85c0	                           test eax, eax	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000127	            0x7530	                           jne 0x4000159	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000129	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x400012d	          0x4889c7	                            mov rdi, rax	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x4000130	      0xe861ffffff	         call sym.parse_protocol_version	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x4000135	          0x8945ec	             mov dword [rbp - 0x14], eax	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x4000138	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	        23	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2
0x400013c	            0x7516	                           jne 0x4000154	        23	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2
0x400013e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000142	          0x4889c6	                            mov rsi, rax	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000145	      0xbf00000000	                              mov edi, 0	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x400014a	      0xb800000000	                              mov eax, 0	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x400014f	      0xe800000000	                          call 0x4000154	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x4000154	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        27	protocol.c	ELSE_3	FUNCTION_2	IF_1
0x4000157	            0xeb05	                           jmp 0x400015e	        27	protocol.c	ELSE_3	FUNCTION_2	IF_1
0x4000159	      0xb800000000	                              mov eax, 0	        30	protocol.c	ELSE_3	FUNCTION_2
0x400015e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        31	protocol.c	ELSE_3	FUNCTION_2
0x4000162	    0x644833142528	                xor rdx, qword fs:[0x28]	        31	protocol.c	ELSE_3	FUNCTION_2
0x400016b	            0x7405	                            je 0x4000172	        31	protocol.c	ELSE_3	FUNCTION_2
0x400016d	      0xe800000000	                          call 0x4000172	        31	protocol.c	ELSE_3	FUNCTION_2
0x4000172	              0xc9	                                   leave	        31	protocol.c	ELSE_3	FUNCTION_2
0x4000173	              0xc3	                                     ret	        31	protocol.c	ELSE_3	FUNCTION_2
determine_protocol_version_client	IF,3:FOR,0:functions,0:WHILE,0:CALL,4:SWITCH,0:DO,0:ELSE,0	29
0x400027c	              0x55	                                push rbp	        68	protocol.c	FUNCTION_4
0x400027d	          0x4889e5	                            mov rbp, rsp	        68	protocol.c	FUNCTION_4
0x4000280	        0x4883ec20	                           sub rsp, 0x20	        68	protocol.c	FUNCTION_4
0x4000284	        0x48897de8	             mov qword [rbp - 0x18], rdi	        68	protocol.c	FUNCTION_4
0x4000288	    0xc745fc000000	                  mov dword [rbp - 4], 0	        69	protocol.c	FUNCTION_4
0x400028f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x4000293	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x4000297	      0xbe00000000	                              mov esi, 0	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x400029c	          0x4889c7	                            mov rdi, rax	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x400029f	      0xe89cfdffff	                    call sym.skip_prefix	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x40002a4	            0x85c0	                           test eax, eax	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x40002a6	            0x7439	                            je 0x40002e1	        71	protocol.c	FUNCTION_4	IF_1	CALL_1
0x40002a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	protocol.c	FUNCTION_4	IF_1	CALL_2
0x40002ac	          0x4889c7	                            mov rdi, rax	        72	protocol.c	FUNCTION_4	IF_1	CALL_2
0x40002af	      0xe8e2fdffff	         call sym.parse_protocol_version	        72	protocol.c	FUNCTION_4	IF_1	CALL_2
0x40002b4	          0x8945fc	                mov dword [rbp - 4], eax	        72	protocol.c	FUNCTION_4	IF_1	CALL_2
0x40002b7	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	        74	protocol.c	FUNCTION_4	IF_1	IF_2
0x40002bb	            0x750f	                           jne 0x40002cc	        74	protocol.c	FUNCTION_4	IF_1	IF_2
0x40002bd	      0xbf00000000	                              mov edi, 0	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x40002c2	      0xb800000000	                              mov eax, 0	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x40002c7	      0xe800000000	                          call 0x40002cc	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x40002cc	        0x837dfc00	                  cmp dword [rbp - 4], 0	        76	protocol.c	FUNCTION_4	IF_1	IF_3
0x40002d0	            0x750f	                           jne 0x40002e1	        76	protocol.c	FUNCTION_4	IF_1	IF_3
0x40002d2	      0xbf00000000	                              mov edi, 0	        77	protocol.c	FUNCTION_4	IF_1	CALL_4
0x40002d7	      0xb800000000	                              mov eax, 0	        77	protocol.c	FUNCTION_4	IF_1	CALL_4
0x40002dc	      0xe800000000	                          call 0x40002e1	        77	protocol.c	FUNCTION_4	IF_1	CALL_4
0x40002e1	          0x8b45fc	                mov eax, dword [rbp - 4]	        80	protocol.c	FUNCTION_4
0x40002e4	              0xc9	                                   leave	        81	protocol.c	FUNCTION_4
0x40002e5	              0xc3	                                     ret	        81	protocol.c	FUNCTION_4
