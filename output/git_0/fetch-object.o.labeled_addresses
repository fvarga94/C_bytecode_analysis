oidcpy	SWITCH,0:FOR,0:functions,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,1	13
0x4000097	              0x55	                                push rbp	       999	cache.h	FUNCTION_16
0x4000098	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_16
0x400009b	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_16
0x400009f	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_16
0x40000a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_16
0x40000a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_16	CALL_1
0x40000ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_16	CALL_1
0x40000af	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_16	CALL_1
0x40000b2	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_16	CALL_1
0x40000b5	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_16	CALL_1
0x40000ba	              0x90	                                     nop	      1001	cache.h	FUNCTION_16
0x40000bb	              0xc9	                                   leave	      1001	cache.h	FUNCTION_16
0x40000bc	              0xc3	                                     ret	      1001	cache.h	FUNCTION_16
hashcpy	SWITCH,0:FOR,0:functions,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,1	14
0x400006c	              0x55	                                push rbp	       994	cache.h	FUNCTION_15
0x400006d	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_15
0x4000070	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_15
0x4000074	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_15
0x4000078	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_15
0x400007c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_15	CALL_1
0x4000080	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_15	CALL_1
0x4000084	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_15	CALL_1
0x4000089	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_15	CALL_1
0x400008c	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_15	CALL_1
0x400008f	      0xe800000000	                          call 0x4000094	       995	cache.h	FUNCTION_15	CALL_1
0x4000094	              0x90	                                     nop	       996	cache.h	FUNCTION_15
0x4000095	              0xc9	                                   leave	       996	cache.h	FUNCTION_15
0x4000096	              0xc3	                                     ret	       996	cache.h	FUNCTION_15
fetch_refs	SWITCH,0:FOR,0:functions,0:IF,1:DO,0:WHILE,0:ELSE,0:CALL,7	50
0x40000bd	              0x55	                                push rbp	         9	fetch-object.c	FUNCTION_1
0x40000be	          0x4889e5	                            mov rbp, rsp	         9	fetch-object.c	FUNCTION_1
0x40000c1	        0x4883ec30	                           sub rsp, 0x30	         9	fetch-object.c	FUNCTION_1
0x40000c5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	         9	fetch-object.c	FUNCTION_1
0x40000c9	        0x488975d0	             mov qword [rbp - 0x30], rsi	         9	fetch-object.c	FUNCTION_1
0x40000cd	    0x8b0500000000	            mov eax, dword [0x040000d3] 	        12	fetch-object.c	FUNCTION_1
0x40000d3	          0x8945ec	             mov dword [rbp - 0x14], eax	        12	fetch-object.c	FUNCTION_1
0x40000d6	    0xc70500000000	               mov dword [0x040000e0], 0	        14	fetch-object.c	FUNCTION_1
0x40000e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        15	fetch-object.c	FUNCTION_1	CALL_1
0x40000e4	          0x4889c7	                            mov rdi, rax	        15	fetch-object.c	FUNCTION_1	CALL_1
0x40000e7	      0xe800000000	                          call 0x40000ec	        15	fetch-object.c	FUNCTION_1	CALL_1
0x40000ec	        0x488945f0	             mov qword [rbp - 0x10], rax	        15	fetch-object.c	FUNCTION_1	CALL_1
0x40000f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        16	fetch-object.c	FUNCTION_1	IF_1
0x40000f4	        0x488b4028	            mov rax, qword [rax + 0x28] 	        16	fetch-object.c	FUNCTION_1	IF_1
0x40000f8	          0x488b00	                    mov rax, qword [rax]	        16	fetch-object.c	FUNCTION_1	IF_1
0x40000fb	          0x4885c0	                           test rax, rax	        16	fetch-object.c	FUNCTION_1	IF_1
0x40000fe	            0x7517	                           jne 0x4000117	        16	fetch-object.c	FUNCTION_1	IF_1
0x4000100	      0xbf00000000	                              mov edi, 0	        17	fetch-object.c	FUNCTION_1	CALL_3
0x4000105	      0xe836ffffff	                          call 0x4000040	        17	fetch-object.c	FUNCTION_1	CALL_3
0x400010a	          0x4889c7	                            mov rdi, rax	        17	fetch-object.c	FUNCTION_1	CALL_3
0x400010d	      0xb800000000	                              mov eax, 0	        17	fetch-object.c	FUNCTION_1	CALL_3
0x4000112	      0xe800000000	                          call 0x4000117	        17	fetch-object.c	FUNCTION_1	CALL_3
0x4000117	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        18	fetch-object.c	FUNCTION_1	CALL_4
0x400011b	        0x488b4028	            mov rax, qword [rax + 0x28] 	        18	fetch-object.c	FUNCTION_1	CALL_4
0x400011f	          0x488b10	                    mov rdx, qword [rax]	        18	fetch-object.c	FUNCTION_1	CALL_4
0x4000122	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        18	fetch-object.c	FUNCTION_1	CALL_4
0x4000126	          0x4889d6	                            mov rsi, rdx	        18	fetch-object.c	FUNCTION_1	CALL_4
0x4000129	          0x4889c7	                            mov rdi, rax	        18	fetch-object.c	FUNCTION_1	CALL_4
0x400012c	      0xe800000000	                          call 0x4000131	        18	fetch-object.c	FUNCTION_1	CALL_4
0x4000131	        0x488945f8	                mov qword [rbp - 8], rax	        18	fetch-object.c	FUNCTION_1	CALL_4
0x4000135	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	fetch-object.c	FUNCTION_1	CALL_5
0x4000139	      0xba00000000	                              mov edx, 0	        20	fetch-object.c	FUNCTION_1	CALL_5
0x400013e	      0xbe00000000	                              mov esi, 0	        20	fetch-object.c	FUNCTION_1	CALL_5
0x4000143	          0x4889c7	                            mov rdi, rax	        20	fetch-object.c	FUNCTION_1	CALL_5
0x4000146	      0xe800000000	                          call 0x400014b	        20	fetch-object.c	FUNCTION_1	CALL_5
0x400014b	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	fetch-object.c	FUNCTION_1	CALL_6
0x400014f	      0xba00000000	                              mov edx, 0	        21	fetch-object.c	FUNCTION_1	CALL_6
0x4000154	      0xbe00000000	                              mov esi, 0	        21	fetch-object.c	FUNCTION_1	CALL_6
0x4000159	          0x4889c7	                            mov rdi, rax	        21	fetch-object.c	FUNCTION_1	CALL_6
0x400015c	      0xe800000000	                          call 0x4000161	        21	fetch-object.c	FUNCTION_1	CALL_6
0x4000161	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        22	fetch-object.c	FUNCTION_1	CALL_7
0x4000165	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	fetch-object.c	FUNCTION_1	CALL_7
0x4000169	          0x4889d6	                            mov rsi, rdx	        22	fetch-object.c	FUNCTION_1	CALL_7
0x400016c	          0x4889c7	                            mov rdi, rax	        22	fetch-object.c	FUNCTION_1	CALL_7
0x400016f	      0xe800000000	                          call 0x4000174	        22	fetch-object.c	FUNCTION_1	CALL_7
0x4000174	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        23	fetch-object.c	FUNCTION_1
0x4000177	    0x890500000000	            mov dword [0x0400017d], eax 	        23	fetch-object.c	FUNCTION_1
0x400017d	              0x90	                                     nop	        24	fetch-object.c	FUNCTION_1
0x400017e	              0xc9	                                   leave	        24	fetch-object.c	FUNCTION_1
0x400017f	              0xc3	                                     ret	        24	fetch-object.c	FUNCTION_1
fetch_objects	SWITCH,0:FOR,1:functions,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,4	54
0x40001d5	              0x55	                                push rbp	        34	fetch-object.c	FUNCTION_3
0x40001d6	          0x4889e5	                            mov rbp, rsp	        34	fetch-object.c	FUNCTION_3
0x40001d9	        0x4883ec30	                           sub rsp, 0x30	        34	fetch-object.c	FUNCTION_3
0x40001dd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        34	fetch-object.c	FUNCTION_3
0x40001e1	        0x488975d0	             mov qword [rbp - 0x30], rsi	        34	fetch-object.c	FUNCTION_3
0x40001e5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        35	fetch-object.c	FUNCTION_3
0x40001ed	    0xc745ec000000	               mov dword [rbp - 0x14], 0	        38	fetch-object.c	FUNCTION_3	FOR_1
0x40001f4	            0xeb7b	                           jmp 0x4000271	        38	fetch-object.c	FUNCTION_3	FOR_1
0x40001f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x40001fa	          0x488b08	                    mov rcx, qword [rax]	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x40001fd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000200	          0x4863d0	                         movsxd rdx, eax	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000203	          0x4889d0	                            mov rax, rdx	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000206	        0x48c1e002	                              shl rax, 2	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x400020a	          0x4801d0	                            add rax, rdx	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x400020d	        0x48c1e002	                              shl rax, 2	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000211	          0x4801c8	                            add rax, rcx	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000214	          0x4889c7	                            mov rdi, rax	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000217	      0xe800000000	                          call 0x400021c	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x400021c	          0x4889c7	                            mov rdi, rax	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x400021f	      0xe800000000	                          call 0x4000224	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000224	        0x488945f8	                mov qword [rbp - 8], rax	        39	fetch-object.c	FUNCTION_3	FOR_1	CALL_2
0x4000228	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400022c	          0x488b08	                    mov rcx, qword [rax]	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400022f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000232	          0x4863d0	                         movsxd rdx, eax	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000235	          0x4889d0	                            mov rax, rdx	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000238	        0x48c1e002	                              shl rax, 2	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400023c	          0x4801d0	                            add rax, rdx	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400023f	        0x48c1e002	                              shl rax, 2	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000243	        0x488d1401	                    lea rdx, [rcx + rax]	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000247	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400024b	        0x4883c008	                              add rax, 8	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400024f	          0x4889d6	                            mov rsi, rdx	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000252	          0x4889c7	                            mov rdi, rax	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x4000255	      0xe83dfeffff	                         call sym.oidcpy	        40	fetch-object.c	FUNCTION_3	FOR_1	CALL_3
0x400025a	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	fetch-object.c	FUNCTION_3	FOR_1
0x400025e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        41	fetch-object.c	FUNCTION_3	FOR_1
0x4000262	          0x488910	                    mov qword [rax], rdx	        41	fetch-object.c	FUNCTION_3	FOR_1
0x4000265	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	fetch-object.c	FUNCTION_3	FOR_1
0x4000269	        0x488945f0	             mov qword [rbp - 0x10], rax	        42	fetch-object.c	FUNCTION_3	FOR_1
0x400026d	        0x8345ec01	               add dword [rbp - 0x14], 1	        38	fetch-object.c	FUNCTION_3	FOR_1
0x4000271	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        38	fetch-object.c	FUNCTION_3	FOR_1
0x4000275	          0x8b4008	                mov eax, dword [rax + 8]	        38	fetch-object.c	FUNCTION_3	FOR_1
0x4000278	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        38	fetch-object.c	FUNCTION_3	FOR_1
0x400027b	     0xf8f75ffffff	                            jg 0x40001f6	        38	fetch-object.c	FUNCTION_3	FOR_1
0x4000281	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        44	fetch-object.c	FUNCTION_3	CALL_4
0x4000285	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        44	fetch-object.c	FUNCTION_3	CALL_4
0x4000289	          0x4889d6	                            mov rsi, rdx	        44	fetch-object.c	FUNCTION_3	CALL_4
0x400028c	          0x4889c7	                            mov rdi, rax	        44	fetch-object.c	FUNCTION_3	CALL_4
0x400028f	      0xe829feffff	                     call sym.fetch_refs	        44	fetch-object.c	FUNCTION_3	CALL_4
0x4000294	              0x90	                                     nop	        45	fetch-object.c	FUNCTION_3
0x4000295	              0xc9	                                   leave	        45	fetch-object.c	FUNCTION_3
0x4000296	              0xc3	                                     ret	        45	fetch-object.c	FUNCTION_3
fetch_object	SWITCH,0:FOR,0:functions,0:IF,0:DO,0:WHILE,0:ELSE,0:CALL,4	25
0x4000180	              0x55	                                push rbp	        27	fetch-object.c	FUNCTION_2
0x4000181	          0x4889e5	                            mov rbp, rsp	        27	fetch-object.c	FUNCTION_2
0x4000184	        0x4883ec20	                           sub rsp, 0x20	        27	fetch-object.c	FUNCTION_2
0x4000188	        0x48897de8	             mov qword [rbp - 0x18], rdi	        27	fetch-object.c	FUNCTION_2
0x400018c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        27	fetch-object.c	FUNCTION_2
0x4000190	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        28	fetch-object.c	FUNCTION_2	CALL_2
0x4000194	          0x4889c7	                            mov rdi, rax	        28	fetch-object.c	FUNCTION_2	CALL_2
0x4000197	      0xe800000000	                          call 0x400019c	        28	fetch-object.c	FUNCTION_2	CALL_2
0x400019c	          0x4889c7	                            mov rdi, rax	        28	fetch-object.c	FUNCTION_2	CALL_2
0x400019f	      0xe800000000	                          call 0x40001a4	        28	fetch-object.c	FUNCTION_2	CALL_2
0x40001a4	        0x488945f8	                mov qword [rbp - 8], rax	        28	fetch-object.c	FUNCTION_2	CALL_2
0x40001a8	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001ac	        0x488d5008	                      lea rdx, [rax + 8]	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001b4	          0x4889c6	                            mov rsi, rax	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001b7	          0x4889d7	                            mov rdi, rdx	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001ba	      0xe8adfeffff	                        call sym.hashcpy	        29	fetch-object.c	FUNCTION_2	CALL_3
0x40001bf	        0x488b55f8	                mov rdx, qword [rbp - 8]	        30	fetch-object.c	FUNCTION_2	CALL_4
0x40001c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        30	fetch-object.c	FUNCTION_2	CALL_4
0x40001c7	          0x4889d6	                            mov rsi, rdx	        30	fetch-object.c	FUNCTION_2	CALL_4
0x40001ca	          0x4889c7	                            mov rdi, rax	        30	fetch-object.c	FUNCTION_2	CALL_4
0x40001cd	      0xe8ebfeffff	                     call sym.fetch_refs	        30	fetch-object.c	FUNCTION_2	CALL_4
0x40001d2	              0x90	                                     nop	        31	fetch-object.c	FUNCTION_2
0x40001d3	              0xc9	                                   leave	        31	fetch-object.c	FUNCTION_2
0x40001d4	              0xc3	                                     ret	        31	fetch-object.c	FUNCTION_2
_	SWITCH,0:FOR,0:functions,0:IF,1:DO,0:WHILE,0:ELSE,0:CALL,0	15
0x4000040	              0x55	                                push rbp	        51	gettext.h	FUNCTION_33
0x4000041	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_33
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_33
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_33
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_33	IF_1
0x4000050	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_33	IF_1
0x4000053	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_33	IF_1
0x4000055	            0x7507	                           jne 0x400005e	        52	gettext.h	FUNCTION_33	IF_1
0x4000057	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_33	IF_1
0x400005c	            0xeb0c	                           jmp 0x400006a	        53	gettext.h	FUNCTION_33	IF_1
0x400005e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_33
0x4000062	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_33
0x4000065	      0xe800000000	                          call 0x400006a	        54	gettext.h	FUNCTION_33
0x400006a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_33
0x400006b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_33
