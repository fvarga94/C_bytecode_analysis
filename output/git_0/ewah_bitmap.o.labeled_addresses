add_literal	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,8	57
0x40005f8	              0x55	                                push rbp	       108	ewah_bitmap.c	FUNCTION_8
0x40005f9	          0x4889e5	                            mov rbp, rsp	       108	ewah_bitmap.c	FUNCTION_8
0x40005fc	        0x4883ec20	                           sub rsp, 0x20	       108	ewah_bitmap.c	FUNCTION_8
0x4000600	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	ewah_bitmap.c	FUNCTION_8
0x4000604	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	ewah_bitmap.c	FUNCTION_8
0x4000608	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x400060c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x4000610	          0x4889c7	                            mov rdi, rax	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x4000613	      0xe87afbffff	          call sym.rlw_get_literal_words	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x4000618	        0x488945f8	                mov qword [rbp - 8], rax	       109	ewah_bitmap.c	FUNCTION_8	CALL_1
0x400061c	    0x48817df8feff	        cmp qword [rbp - 8], 0x7ffffffe 	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000624	            0x7640	                           jbe 0x4000666	       111	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000626	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x400062a	      0xbe00000000	                              mov esi, 0	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x400062f	          0x4889c7	                            mov rdi, rax	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x4000632	      0xe860fdffff	                call sym.buffer_push_rlw	       112	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_2
0x4000637	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x400063b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x400063f	      0xbe01000000	                              mov esi, 1	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x4000644	          0x4889c7	                            mov rdi, rax	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x4000647	      0xe85bfbffff	          call sym.rlw_set_literal_words	       114	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_3
0x400064c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x4000650	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x4000654	          0x4889d6	                            mov rsi, rdx	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x4000657	          0x4889c7	                            mov rdi, rax	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x400065a	      0xe8bcfcffff	                    call sym.buffer_push	       115	ewah_bitmap.c	FUNCTION_8	IF_1	CALL_4
0x400065f	      0xb802000000	                              mov eax, 2	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000664	            0xeb6c	                           jmp 0x40006d2	       116	ewah_bitmap.c	FUNCTION_8	IF_1
0x4000666	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x400066a	        0x488d5001	                      lea rdx, [rax + 1]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x400066e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x4000672	        0x488b4020	            mov rax, qword [rax + 0x20] 	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x4000676	          0x4889d6	                            mov rsi, rdx	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x4000679	          0x4889c7	                            mov rdi, rax	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x400067c	      0xe826fbffff	          call sym.rlw_set_literal_words	       119	ewah_bitmap.c	FUNCTION_8	CALL_5
0x4000681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000685	        0x488b4020	            mov rax, qword [rax + 0x20] 	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000689	          0x4889c7	                            mov rdi, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400068c	      0xe801fbffff	          call sym.rlw_get_literal_words	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000691	          0x4889c2	                            mov rdx, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000694	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x4000698	        0x4883c001	                              add rax, 1	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400069c	          0x4839c2	                            cmp rdx, rax	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x400069f	            0x7419	                            je 0x40006ba	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006a1	      0xb900000000	                              mov ecx, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006a6	      0xba7a000000	                           mov edx, 0x7a	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006ab	      0xbe00000000	                              mov esi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006b0	      0xbf00000000	                              mov edi, 0	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006b5	      0xe800000000	                          call 0x40006ba	       122	ewah_bitmap.c	FUNCTION_8	CALL_7
0x40006ba	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x40006be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x40006c2	          0x4889d6	                            mov rsi, rdx	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x40006c5	          0x4889c7	                            mov rdi, rax	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x40006c8	      0xe84efcffff	                    call sym.buffer_push	       124	ewah_bitmap.c	FUNCTION_8	CALL_8
0x40006cd	      0xb801000000	                              mov eax, 1	       125	ewah_bitmap.c	FUNCTION_8
0x40006d2	              0xc9	                                   leave	       126	ewah_bitmap.c	FUNCTION_8
0x40006d3	              0xc3	                                     ret	       126	ewah_bitmap.c	FUNCTION_8
ewah_add_dirty_words	WHILE,1:ELSE,1:FOR,1:IF,3:DO,0:SWITCH,0:functions,0:CALL,6	116
0x40006d4	              0x55	                                push rbp	       131	ewah_bitmap.c	FUNCTION_9
0x40006d5	          0x4889e5	                            mov rbp, rsp	       131	ewah_bitmap.c	FUNCTION_9
0x40006d8	        0x4883ec40	                           sub rsp, 0x40	       131	ewah_bitmap.c	FUNCTION_9
0x40006dc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       131	ewah_bitmap.c	FUNCTION_9
0x40006e0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       131	ewah_bitmap.c	FUNCTION_9
0x40006e4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       131	ewah_bitmap.c	FUNCTION_9
0x40006e8	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       131	ewah_bitmap.c	FUNCTION_9
0x40006eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006ef	        0x488b4020	            mov rax, qword [rax + 0x20] 	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006f3	          0x4889c7	                            mov rdi, rax	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006f6	      0xe897faffff	          call sym.rlw_get_literal_words	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006fb	        0x488945f0	             mov qword [rbp - 0x10], rax	       135	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_1
0x40006ff	      0xb8ffffff7f	                     mov eax, 0x7fffffff	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x4000704	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x4000708	          0x4889c2	                            mov rdx, rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x400070b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x400070f	          0x4889d6	                            mov rsi, rdx	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x4000712	          0x4889c7	                            mov rdi, rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x4000715	      0xe82efbffff	                       call sym.min_size	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x400071a	        0x488945f8	                mov qword [rbp - 8], rax	       136	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_2
0x400071e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000722	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000726	          0x4801c2	                            add rdx, rax	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000729	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x400072d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000731	          0x4889d6	                            mov rsi, rdx	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000734	          0x4889c7	                            mov rdi, rax	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x4000737	      0xe86bfaffff	          call sym.rlw_set_literal_words	       138	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_3
0x400073c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000740	        0x488b5008	                mov rdx, qword [rax + 8]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000744	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000748	          0x4801c2	                            add rdx, rax	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x400074b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x400074f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000753	          0x4839c2	                            cmp rdx, rax	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000756	            0x722d	                            jb 0x4000785	       140	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_1
0x4000758	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400075c	        0x488b5008	                mov rdx, qword [rax + 8]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000760	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000764	          0x4801c2	                            add rdx, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000767	          0x4889d0	                            mov rax, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400076a	          0x4801c0	                            add rax, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400076d	          0x4801d0	                            add rax, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000770	          0x48d1e8	                              shr rax, 1	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000773	          0x4889c2	                            mov rdx, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000776	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400077a	          0x4889d6	                            mov rsi, rdx	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x400077d	          0x4889c7	                            mov rdi, rax	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000780	      0xe8f9faffff	                    call sym.buffer_grow	       141	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_4
0x4000785	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x4000789	            0x7459	                            je 0x40007e4	       143	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2
0x400078b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000793	            0xeb43	                           jmp 0x40007d8	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000795	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x4000799	          0x488b30	                    mov rsi, qword [rax]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x400079c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007a0	        0x488b4008	                mov rax, qword [rax + 8]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007a4	        0x488d4801	                      lea rcx, [rax + 1]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007a8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007ac	        0x48894a08	                mov qword [rdx + 8], rcx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b0	        0x48c1e003	                              shl rax, 3	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b4	          0x4801f0	                            add rax, rsi	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007b7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007bb	    0x488d0cd50000	                        lea rcx, [rdx*8]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007c3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007c7	          0x4801ca	                            add rdx, rcx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007ca	          0x488b12	                    mov rdx, qword [rdx]	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007cd	          0x48f7d2	                                 not rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007d0	          0x488910	                    mov qword [rax], rdx	       146	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007d3	      0x488345e801	               add qword [rbp - 0x18], 1	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007dc	        0x483b45f8	                cmp rax, qword [rbp - 8]	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007e0	            0x72b3	                            jb 0x4000795	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007e2	            0xeb48	                           jmp 0x400082c	       145	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_2	FOR_1
0x40007e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007e8	    0x488d14c50000	                        lea rdx, [rax*8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007f4	          0x488b08	                    mov rcx, qword [rax]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007fb	        0x488b4008	                mov rax, qword [rax + 8]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x40007ff	        0x48c1e003	                              shl rax, 3	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x4000803	          0x4801c1	                            add rcx, rax	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x4000806	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x400080a	          0x4889c6	                            mov rsi, rax	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x400080d	          0x4889cf	                            mov rdi, rcx	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x4000810	      0xe800000000	                          call 0x4000815	       148	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1	CALL_5
0x4000815	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x4000819	        0x488b5008	                mov rdx, qword [rax + 8]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x400081d	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x4000821	          0x4801c2	                            add rdx, rax	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x4000824	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x4000828	        0x48895008	                mov qword [rax + 8], rdx	       150	ewah_bitmap.c	FUNCTION_9	WHILE_1	ELSE_1
0x400082c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000830	        0x488b4018	            mov rax, qword [rax + 0x18] 	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000834	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000838	        0x48c1e206	                              shl rdx, 6	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x400083c	          0x4801c2	                            add rdx, rax	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x400083f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000843	        0x48895018	             mov qword [rax + 0x18], rdx	       153	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000847	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x400084b	        0x483b45f8	                cmp rax, qword [rbp - 8]	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x400084f	            0x742a	                            je 0x400087b	       155	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x4000851	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x4000855	      0xbe00000000	                              mov esi, 0	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x400085a	          0x4889c7	                            mov rdi, rax	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x400085d	      0xe835fbffff	                call sym.buffer_push_rlw	       158	ewah_bitmap.c	FUNCTION_9	WHILE_1	CALL_6
0x4000862	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000866	        0x48c1e003	                              shl rax, 3	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x400086a	        0x480145d0	            add qword [rbp - 0x30], rax 	       159	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x400086e	        0x488b45f8	                mov rax, qword [rbp - 8]	       160	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000872	        0x482945c8	             sub qword [rbp - 0x38], rax	       160	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x4000876	      0xe970feffff	                           jmp 0x40006eb	       161	ewah_bitmap.c	FUNCTION_9	WHILE_1
0x400087b	              0x90	                                     nop	       156	ewah_bitmap.c	FUNCTION_9	WHILE_1	IF_3
0x400087c	              0x90	                                     nop	       162	ewah_bitmap.c	FUNCTION_9
0x400087d	              0xc9	                                   leave	       162	ewah_bitmap.c	FUNCTION_9
0x400087e	              0xc3	                                     ret	       162	ewah_bitmap.c	FUNCTION_9
st_mult	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,1	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_42
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_42
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_42
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_42
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_42
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_42	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_42	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_42	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_42	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_42	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_42	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_42	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_42	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_42
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_42
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_42
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_42
ewah_iterator_next	WHILE,0:ELSE,1:FOR,0:IF,4:DO,0:SWITCH,0:functions,0:CALL,3	104
0x4001055	              0x55	                                push rbp	       337	ewah_bitmap.c	FUNCTION_18
0x4001056	          0x4889e5	                            mov rbp, rsp	       337	ewah_bitmap.c	FUNCTION_18
0x4001059	        0x4883ec10	                           sub rsp, 0x10	       337	ewah_bitmap.c	FUNCTION_18
0x400105d	        0x48897df8	                mov qword [rbp - 8], rdi	       337	ewah_bitmap.c	FUNCTION_18
0x4001061	        0x488975f0	             mov qword [rbp - 0x10], rsi	       337	ewah_bitmap.c	FUNCTION_18
0x4001065	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4001069	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x400106d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4001071	        0x488b4008	                mov rax, qword [rax + 8]	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4001075	          0x4839c2	                            cmp rdx, rax	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x4001078	            0x720a	                            jb 0x4001084	       338	ewah_bitmap.c	FUNCTION_18	IF_1
0x400107a	      0xb800000000	                              mov eax, 0	       339	ewah_bitmap.c	FUNCTION_18	IF_1
0x400107f	      0xe956010000	                           jmp 0x40011da	       339	ewah_bitmap.c	FUNCTION_18	IF_1
0x4001084	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4001088	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x400108c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4001090	        0x488b4028	            mov rax, qword [rax + 0x28] 	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4001094	          0x4839c2	                            cmp rdx, rax	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4001097	            0x7339	                           jae 0x40010d2	       341	ewah_bitmap.c	FUNCTION_18	IF_2
0x4001099	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x400109d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010a1	        0x488d5001	                      lea rdx, [rax + 1]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010a9	        0x48895018	             mov qword [rax + 0x18], rdx	       342	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010b1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010b4	            0x85c0	                           test eax, eax	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010b6	            0x7409	                            je 0x40010c1	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010b8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010bf	            0xeb05	                           jmp 0x40010c6	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010c1	      0xba00000000	                              mov edx, 0	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010ca	          0x488910	                    mov qword [rax], rdx	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010cd	      0xe9a4000000	                           jmp 0x4001176	       343	ewah_bitmap.c	FUNCTION_18	IF_2
0x40010d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010d6	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010de	        0x488b4030	            mov rax, qword [rax + 0x30] 	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010e2	          0x4839c2	                            cmp rdx, rax	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010e5	            0x7219	                            jb 0x4001100	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010e7	      0xb900000000	                              mov ecx, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010ec	      0xba59010000	                          mov edx, 0x159	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010f1	      0xbe00000000	                              mov esi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010f6	      0xbf00000000	                              mov edi, 0	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x40010fb	      0xe800000000	                          call 0x4001100	       345	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_1
0x4001100	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001104	        0x488b4020	            mov rax, qword [rax + 0x20] 	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001108	        0x488d5001	                      lea rdx, [rax + 1]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400110c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001110	        0x48895020	             mov qword [rax + 0x20], rdx	       347	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001114	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001118	        0x488b4010	            mov rax, qword [rax + 0x10] 	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400111c	        0x488d5001	                      lea rdx, [rax + 1]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001120	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001124	        0x48895010	             mov qword [rax + 0x10], rdx	       348	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001128	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x400112c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001130	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001134	        0x488b4008	                mov rax, qword [rax + 8]	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001138	          0x4839c2	                            cmp rdx, rax	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x400113b	            0x7219	                            jb 0x4001156	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x400113d	      0xb900000000	                              mov ecx, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001142	      0xba5e010000	                          mov edx, 0x15e	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001147	      0xbe00000000	                              mov esi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x400114c	      0xbf00000000	                              mov edi, 0	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001151	      0xe800000000	                          call 0x4001156	       350	ewah_bitmap.c	FUNCTION_18	ELSE_1	CALL_2
0x4001156	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400115a	          0x488b10	                    mov rdx, qword [rax]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400115d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001161	        0x488b4010	            mov rax, qword [rax + 0x10] 	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001165	        0x48c1e003	                              shl rax, 3	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001169	          0x4801d0	                            add rax, rdx	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400116c	          0x488b10	                    mov rdx, qword [rax]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x400116f	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001173	          0x488910	                    mov qword [rax], rdx	       352	ewah_bitmap.c	FUNCTION_18	ELSE_1
0x4001176	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400117a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400117e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4001182	        0x488b4028	            mov rax, qword [rax + 0x28] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4001186	          0x4839c2	                            cmp rdx, rax	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4001189	            0x754a	                           jne 0x40011d5	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400118b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400118f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4001193	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x4001197	        0x488b4030	            mov rax, qword [rax + 0x30] 	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400119b	          0x4839c2	                            cmp rdx, rax	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x400119e	            0x7535	                           jne 0x40011d5	       355	ewah_bitmap.c	FUNCTION_18	IF_3
0x40011a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011a8	        0x488d5001	                      lea rdx, [rax + 1]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011b0	        0x48895010	             mov qword [rax + 0x10], rdx	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011b8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011c0	        0x488b4008	                mov rax, qword [rax + 8]	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011c4	          0x4839c2	                            cmp rdx, rax	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011c7	            0x730c	                           jae 0x40011d5	       356	ewah_bitmap.c	FUNCTION_18	IF_3	IF_4
0x40011c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x40011cd	          0x4889c7	                            mov rdi, rax	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x40011d0	      0xe896fdffff	                   call sym.read_new_rlw	       357	ewah_bitmap.c	FUNCTION_18	IF_3	CALL_3
0x40011d5	      0xb801000000	                              mov eax, 1	       360	ewah_bitmap.c	FUNCTION_18
0x40011da	              0xc9	                                   leave	       361	ewah_bitmap.c	FUNCTION_18
0x40011db	              0xc3	                                     ret	       361	ewah_bitmap.c	FUNCTION_18
ewah_pool_new	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,1	14
0x4001f6c	              0x55	                                push rbp	       677	ewah_bitmap.c	FUNCTION_25
0x4001f6d	          0x4889e5	                            mov rbp, rsp	       677	ewah_bitmap.c	FUNCTION_25
0x4001f70	    0x488b05000000	            mov rax, qword [0x04001f77] 	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f77	          0x4885c0	                           test rax, rax	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f7a	            0x7423	                            je 0x4001f9f	       678	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f7c	    0x488b05000000	            mov rax, qword [0x04001f83] 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f83	        0x4883e801	                              sub rax, 1	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f87	    0x488905000000	            mov qword [0x04001f8e], rax 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f8e	    0x488b05000000	            mov rax, qword [0x04001f95] 	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f95	    0x488b04c50000	                  mov rax, qword [rax*8]	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f9d	            0xeb05	                           jmp 0x4001fa4	       679	ewah_bitmap.c	FUNCTION_25	IF_1
0x4001f9f	      0xe800000000	                          call 0x4001fa4	       681	ewah_bitmap.c	FUNCTION_25	CALL_1
0x4001fa4	              0x5d	                                 pop rbp	       682	ewah_bitmap.c	FUNCTION_25
0x4001fa5	              0xc3	                                     ret	       682	ewah_bitmap.c	FUNCTION_25
max_size	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	9
0x4000263	              0x55	                                push rbp	        29	ewah_bitmap.c	FUNCTION_2
0x4000264	          0x4889e5	                            mov rbp, rsp	        29	ewah_bitmap.c	FUNCTION_2
0x4000267	        0x48897df8	                mov qword [rbp - 8], rdi	        29	ewah_bitmap.c	FUNCTION_2
0x400026b	        0x488975f0	             mov qword [rbp - 0x10], rsi	        29	ewah_bitmap.c	FUNCTION_2
0x400026f	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	ewah_bitmap.c	FUNCTION_2
0x4000273	        0x483945f0	            cmp qword [rbp - 0x10], rax 	        30	ewah_bitmap.c	FUNCTION_2
0x4000277	      0x480f4345f0	          cmovae rax, qword [rbp - 0x10]	        30	ewah_bitmap.c	FUNCTION_2
0x400027c	              0x5d	                                 pop rbp	        31	ewah_bitmap.c	FUNCTION_2
0x400027d	              0xc3	                                     ret	        31	ewah_bitmap.c	FUNCTION_2
buffer_push	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,1	37
0x400031b	              0x55	                                push rbp	        46	ewah_bitmap.c	FUNCTION_4
0x400031c	          0x4889e5	                            mov rbp, rsp	        46	ewah_bitmap.c	FUNCTION_4
0x400031f	        0x4883ec10	                           sub rsp, 0x10	        46	ewah_bitmap.c	FUNCTION_4
0x4000323	        0x48897df8	                mov qword [rbp - 8], rdi	        46	ewah_bitmap.c	FUNCTION_4
0x4000327	        0x488975f0	             mov qword [rbp - 0x10], rsi	        46	ewah_bitmap.c	FUNCTION_4
0x400032b	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x400032f	        0x488b4008	                mov rax, qword [rax + 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000333	        0x488d5001	                      lea rdx, [rax + 1]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000337	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x400033b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x400033f	          0x4839c2	                            cmp rdx, rax	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000342	            0x7226	                            jb 0x400036a	        47	ewah_bitmap.c	FUNCTION_4	IF_1
0x4000344	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000348	        0x488b5008	                mov rdx, qword [rax + 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400034c	          0x4889d0	                            mov rax, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400034f	          0x4801c0	                            add rax, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000352	          0x4801d0	                            add rax, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000355	          0x48d1e8	                              shr rax, 1	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000358	          0x4889c2	                            mov rdx, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400035b	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400035f	          0x4889d6	                            mov rsi, rdx	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000362	          0x4889c7	                            mov rdi, rax	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x4000365	      0xe814ffffff	                    call sym.buffer_grow	        48	ewah_bitmap.c	FUNCTION_4	CALL_1
0x400036a	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x400036e	          0x488b30	                    mov rsi, qword [rax]	        50	ewah_bitmap.c	FUNCTION_4
0x4000371	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x4000375	        0x488b4008	                mov rax, qword [rax + 8]	        50	ewah_bitmap.c	FUNCTION_4
0x4000379	        0x488d4801	                      lea rcx, [rax + 1]	        50	ewah_bitmap.c	FUNCTION_4
0x400037d	        0x488b55f8	                mov rdx, qword [rbp - 8]	        50	ewah_bitmap.c	FUNCTION_4
0x4000381	        0x48894a08	                mov qword [rdx + 8], rcx	        50	ewah_bitmap.c	FUNCTION_4
0x4000385	        0x48c1e003	                              shl rax, 3	        50	ewah_bitmap.c	FUNCTION_4
0x4000389	        0x488d1406	                    lea rdx, [rsi + rax]	        50	ewah_bitmap.c	FUNCTION_4
0x400038d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        50	ewah_bitmap.c	FUNCTION_4
0x4000391	          0x488902	                    mov qword [rdx], rax	        50	ewah_bitmap.c	FUNCTION_4
0x4000394	              0x90	                                     nop	        51	ewah_bitmap.c	FUNCTION_4
0x4000395	              0xc9	                                   leave	        51	ewah_bitmap.c	FUNCTION_4
0x4000396	              0xc3	                                     ret	        51	ewah_bitmap.c	FUNCTION_4
ewah_add_empty_words	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,1	25
0x40005a5	              0x55	                                push rbp	        99	ewah_bitmap.c	FUNCTION_7
0x40005a6	          0x4889e5	                            mov rbp, rsp	        99	ewah_bitmap.c	FUNCTION_7
0x40005a9	        0x4883ec20	                           sub rsp, 0x20	        99	ewah_bitmap.c	FUNCTION_7
0x40005ad	        0x48897df8	                mov qword [rbp - 8], rdi	        99	ewah_bitmap.c	FUNCTION_7
0x40005b1	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	ewah_bitmap.c	FUNCTION_7
0x40005b4	        0x488955e8	             mov qword [rbp - 0x18], rdx	        99	ewah_bitmap.c	FUNCTION_7
0x40005b8	      0x48837de800	               cmp qword [rbp - 0x18], 0	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x40005bd	            0x7507	                           jne 0x40005c6	       100	ewah_bitmap.c	FUNCTION_7	IF_1
0x40005bf	      0xb800000000	                              mov eax, 0	       101	ewah_bitmap.c	FUNCTION_7	IF_1
0x40005c4	            0xeb30	                           jmp 0x40005f6	       101	ewah_bitmap.c	FUNCTION_7	IF_1
0x40005c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	ewah_bitmap.c	FUNCTION_7
0x40005ca	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	ewah_bitmap.c	FUNCTION_7
0x40005ce	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       103	ewah_bitmap.c	FUNCTION_7
0x40005d2	        0x48c1e206	                              shl rdx, 6	       103	ewah_bitmap.c	FUNCTION_7
0x40005d6	          0x4801c2	                            add rdx, rax	       103	ewah_bitmap.c	FUNCTION_7
0x40005d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	ewah_bitmap.c	FUNCTION_7
0x40005dd	        0x48895018	             mov qword [rax + 0x18], rdx	       103	ewah_bitmap.c	FUNCTION_7
0x40005e1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005e5	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005ec	            0x89ce	                            mov esi, ecx	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005ee	          0x4889c7	                            mov rdi, rax	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005f1	      0xe8e9fdffff	                call sym.add_empty_words	       104	ewah_bitmap.c	FUNCTION_7	CALL_1
0x40005f6	              0xc9	                                   leave	       105	ewah_bitmap.c	FUNCTION_7
0x40005f7	              0xc3	                                     ret	       105	ewah_bitmap.c	FUNCTION_7
rlw_size	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,2	17
0x40001fa	              0x55	                                push rbp	        78	ewok_rlw.h	FUNCTION_62
0x40001fb	          0x4889e5	                            mov rbp, rsp	        78	ewok_rlw.h	FUNCTION_62
0x40001fe	              0x53	                                push rbx	        78	ewok_rlw.h	FUNCTION_62
0x40001ff	        0x4883ec08	                              sub rsp, 8	        78	ewok_rlw.h	FUNCTION_62
0x4000203	        0x48897df0	             mov qword [rbp - 0x10], rdi	        78	ewok_rlw.h	FUNCTION_62
0x4000207	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x400020b	          0x4889c7	                            mov rdi, rax	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x400020e	      0xe869ffffff	            call sym.rlw_get_running_len	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x4000213	          0x4889c3	                            mov rbx, rax	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x4000216	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x400021a	          0x4889c7	                            mov rdi, rax	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x400021d	      0xe870ffffff	          call sym.rlw_get_literal_words	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x4000222	          0x4801d8	                            add rax, rbx	        79	ewok_rlw.h	FUNCTION_62	CALL_2
0x4000225	        0x4883c408	                              add rsp, 8	        80	ewok_rlw.h	FUNCTION_62
0x4000229	              0x5b	                                 pop rbx	        80	ewok_rlw.h	FUNCTION_62
0x400022a	              0x5d	                                 pop rbp	        80	ewok_rlw.h	FUNCTION_62
0x400022b	              0xc3	                                     ret	        80	ewok_rlw.h	FUNCTION_62
ewah_clear	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	17
0x4000eeb	              0x55	                                push rbp	       292	ewah_bitmap.c	FUNCTION_15
0x4000eec	          0x4889e5	                            mov rbp, rsp	       292	ewah_bitmap.c	FUNCTION_15
0x4000eef	        0x48897df8	                mov qword [rbp - 8], rdi	       292	ewah_bitmap.c	FUNCTION_15
0x4000ef3	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	ewah_bitmap.c	FUNCTION_15
0x4000ef7	    0x48c740080100	                  mov qword [rax + 8], 1	       293	ewah_bitmap.c	FUNCTION_15
0x4000eff	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	ewah_bitmap.c	FUNCTION_15
0x4000f03	          0x488b00	                    mov rax, qword [rax]	       294	ewah_bitmap.c	FUNCTION_15
0x4000f06	    0x48c700000000	                      mov qword [rax], 0	       294	ewah_bitmap.c	FUNCTION_15
0x4000f0d	        0x488b45f8	                mov rax, qword [rbp - 8]	       295	ewah_bitmap.c	FUNCTION_15
0x4000f11	    0x48c740180000	               mov qword [rax + 0x18], 0	       295	ewah_bitmap.c	FUNCTION_15
0x4000f19	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	ewah_bitmap.c	FUNCTION_15
0x4000f1d	          0x488b10	                    mov rdx, qword [rax]	       296	ewah_bitmap.c	FUNCTION_15
0x4000f20	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	ewah_bitmap.c	FUNCTION_15
0x4000f24	        0x48895020	             mov qword [rax + 0x20], rdx	       296	ewah_bitmap.c	FUNCTION_15
0x4000f28	              0x90	                                     nop	       297	ewah_bitmap.c	FUNCTION_15
0x4000f29	              0x5d	                                 pop rbp	       297	ewah_bitmap.c	FUNCTION_15
0x4000f2a	              0xc3	                                     ret	       297	ewah_bitmap.c	FUNCTION_15
buffer_push_rlw	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,1	22
0x4000397	              0x55	                                push rbp	        54	ewah_bitmap.c	FUNCTION_5
0x4000398	          0x4889e5	                            mov rbp, rsp	        54	ewah_bitmap.c	FUNCTION_5
0x400039b	        0x4883ec10	                           sub rsp, 0x10	        54	ewah_bitmap.c	FUNCTION_5
0x400039f	        0x48897df8	                mov qword [rbp - 8], rdi	        54	ewah_bitmap.c	FUNCTION_5
0x40003a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        54	ewah_bitmap.c	FUNCTION_5
0x40003a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x40003ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x40003af	          0x4889d6	                            mov rsi, rdx	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x40003b2	          0x4889c7	                            mov rdi, rax	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x40003b5	      0xe861ffffff	                    call sym.buffer_push	        55	ewah_bitmap.c	FUNCTION_5	CALL_1
0x40003ba	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x40003be	          0x488b10	                    mov rdx, qword [rax]	        56	ewah_bitmap.c	FUNCTION_5
0x40003c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x40003c5	        0x488b4008	                mov rax, qword [rax + 8]	        56	ewah_bitmap.c	FUNCTION_5
0x40003c9	        0x48c1e003	                              shl rax, 3	        56	ewah_bitmap.c	FUNCTION_5
0x40003cd	        0x4883e808	                              sub rax, 8	        56	ewah_bitmap.c	FUNCTION_5
0x40003d1	          0x4801c2	                            add rdx, rax	        56	ewah_bitmap.c	FUNCTION_5
0x40003d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	ewah_bitmap.c	FUNCTION_5
0x40003d8	        0x48895020	             mov qword [rax + 0x20], rdx	        56	ewah_bitmap.c	FUNCTION_5
0x40003dc	              0x90	                                     nop	        57	ewah_bitmap.c	FUNCTION_5
0x40003dd	              0xc9	                                   leave	        57	ewah_bitmap.c	FUNCTION_5
0x40003de	              0xc3	                                     ret	        57	ewah_bitmap.c	FUNCTION_5
ewah_set	WHILE,0:ELSE,0:FOR,0:IF,4:DO,0:SWITCH,0:functions,0:CALL,10	135
0x4000b55	              0x55	                                push rbp	       210	ewah_bitmap.c	FUNCTION_12
0x4000b56	          0x4889e5	                            mov rbp, rsp	       210	ewah_bitmap.c	FUNCTION_12
0x4000b59	        0x4883ec20	                           sub rsp, 0x20	       210	ewah_bitmap.c	FUNCTION_12
0x4000b5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       210	ewah_bitmap.c	FUNCTION_12
0x4000b61	        0x488975e0	             mov qword [rbp - 0x20], rsi	       210	ewah_bitmap.c	FUNCTION_12
0x4000b65	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	ewah_bitmap.c	FUNCTION_12
0x4000b69	        0x4883c040	                           add rax, 0x40	       212	ewah_bitmap.c	FUNCTION_12
0x4000b6d	        0x48c1e806	                              shr rax, 6	       212	ewah_bitmap.c	FUNCTION_12
0x4000b71	          0x4889c2	                            mov rdx, rax	       212	ewah_bitmap.c	FUNCTION_12
0x4000b74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	ewah_bitmap.c	FUNCTION_12
0x4000b78	        0x488b4018	            mov rax, qword [rax + 0x18] 	       213	ewah_bitmap.c	FUNCTION_12
0x4000b7c	        0x4883c03f	                           add rax, 0x3f	       213	ewah_bitmap.c	FUNCTION_12
0x4000b80	        0x48c1e806	                              shr rax, 6	       213	ewah_bitmap.c	FUNCTION_12
0x4000b84	          0x4829c2	                            sub rdx, rax	       211	ewah_bitmap.c	FUNCTION_12
0x4000b87	          0x4889d0	                            mov rax, rdx	       211	ewah_bitmap.c	FUNCTION_12
0x4000b8a	        0x488945f8	                mov qword [rbp - 8], rax	       211	ewah_bitmap.c	FUNCTION_12
0x4000b8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000b92	        0x488b4018	            mov rax, qword [rax + 0x18] 	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000b96	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000b9a	            0x7619	                           jbe 0x4000bb5	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000b9c	      0xb900000000	                              mov ecx, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000ba1	      0xbad7000000	                           mov edx, 0xd7	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000ba6	      0xbe00000000	                              mov esi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000bab	      0xbf00000000	                              mov edi, 0	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000bb0	      0xe800000000	                          call 0x4000bb5	       215	ewah_bitmap.c	FUNCTION_12	CALL_1
0x4000bb5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       217	ewah_bitmap.c	FUNCTION_12
0x4000bb9	        0x488d5001	                      lea rdx, [rax + 1]	       217	ewah_bitmap.c	FUNCTION_12
0x4000bbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       217	ewah_bitmap.c	FUNCTION_12
0x4000bc1	        0x48895018	             mov qword [rax + 0x18], rdx	       217	ewah_bitmap.c	FUNCTION_12
0x4000bc5	      0x48837df800	                  cmp qword [rbp - 8], 0	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0x4000bca	            0x7445	                            je 0x4000c11	       219	ewah_bitmap.c	FUNCTION_12	IF_1
0x4000bcc	      0x48837df801	                  cmp qword [rbp - 8], 1	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0x4000bd1	            0x7619	                           jbe 0x4000bec	       220	ewah_bitmap.c	FUNCTION_12	IF_1	IF_2
0x4000bd3	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000bd7	        0x488d50ff	                      lea rdx, [rax - 1]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000bdf	      0xbe00000000	                              mov esi, 0	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000be4	          0x4889c7	                            mov rdi, rax	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000be7	      0xe8f3f7ffff	                call sym.add_empty_words	       221	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_2
0x4000bec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000bf0	          0x83e03f	                           and eax, 0x3f	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000bf3	      0xba01000000	                              mov edx, 1	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000bf8	            0x89c1	                            mov ecx, eax	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000bfa	          0x48d3e2	                             shl rdx, cl	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000bfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000c01	          0x4889d6	                            mov rsi, rdx	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000c04	          0x4889c7	                            mov rdi, rax	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000c07	      0xe8ecf9ffff	                    call sym.add_literal	       223	ewah_bitmap.c	FUNCTION_12	IF_1	CALL_3
0x4000c0c	      0xe93c010000	                           jmp 0x4000d4d	       224	ewah_bitmap.c	FUNCTION_12	IF_1
0x4000c11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c15	        0x488b4020	            mov rax, qword [rax + 0x20] 	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c19	          0x4889c7	                            mov rdi, rax	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c1c	      0xe871f5ffff	          call sym.rlw_get_literal_words	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c21	          0x4885c0	                           test rax, rax	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c24	            0x754c	                           jne 0x4000c72	       227	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_4
0x4000c26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x4000c2a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x4000c2e	          0x4889c7	                            mov rdi, rax	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x4000c31	      0xe846f5ffff	            call sym.rlw_get_running_len	       229	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_6
0x4000c36	        0x488d50ff	                      lea rdx, [rax - 1]	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c3e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c42	          0x4889d6	                            mov rsi, rdx	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c45	          0x4889c7	                            mov rdi, rax	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c48	      0xe8dff4ffff	            call sym.rlw_set_running_len	       228	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_5
0x4000c4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c51	          0x83e03f	                           and eax, 0x3f	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c54	      0xba01000000	                              mov edx, 1	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c59	            0x89c1	                            mov ecx, eax	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c5b	          0x48d3e2	                             shl rdx, cl	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c62	          0x4889d6	                            mov rsi, rdx	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c65	          0x4889c7	                            mov rdi, rax	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c68	      0xe88bf9ffff	                    call sym.add_literal	       230	ewah_bitmap.c	FUNCTION_12	IF_3	CALL_7
0x4000c6d	      0xe9db000000	                           jmp 0x4000d4d	       231	ewah_bitmap.c	FUNCTION_12	IF_3
0x4000c72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c76	          0x488b10	                    mov rdx, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c7d	        0x488b4008	                mov rax, qword [rax + 8]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c81	        0x48c1e003	                              shl rax, 3	       234	ewah_bitmap.c	FUNCTION_12
0x4000c85	        0x4883e808	                              sub rax, 8	       234	ewah_bitmap.c	FUNCTION_12
0x4000c89	          0x4801c2	                            add rdx, rax	       234	ewah_bitmap.c	FUNCTION_12
0x4000c8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c90	          0x488b08	                    mov rcx, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c97	        0x488b4008	                mov rax, qword [rax + 8]	       234	ewah_bitmap.c	FUNCTION_12
0x4000c9b	        0x48c1e003	                              shl rax, 3	       234	ewah_bitmap.c	FUNCTION_12
0x4000c9f	        0x4883e808	                              sub rax, 8	       234	ewah_bitmap.c	FUNCTION_12
0x4000ca3	          0x4801c8	                            add rax, rcx	       234	ewah_bitmap.c	FUNCTION_12
0x4000ca6	          0x488b00	                    mov rax, qword [rax]	       234	ewah_bitmap.c	FUNCTION_12
0x4000ca9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       235	ewah_bitmap.c	FUNCTION_12
0x4000cad	          0x83e13f	                           and ecx, 0x3f	       235	ewah_bitmap.c	FUNCTION_12
0x4000cb0	      0xbe01000000	                              mov esi, 1	       235	ewah_bitmap.c	FUNCTION_12
0x4000cb5	          0x48d3e6	                             shl rsi, cl	       235	ewah_bitmap.c	FUNCTION_12
0x4000cb8	          0x4889f1	                            mov rcx, rsi	       235	ewah_bitmap.c	FUNCTION_12
0x4000cbb	          0x4809c8	                             or rax, rcx	       234	ewah_bitmap.c	FUNCTION_12
0x4000cbe	          0x488902	                    mov qword [rdx], rax	       234	ewah_bitmap.c	FUNCTION_12
0x4000cc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cc5	          0x488b10	                    mov rdx, qword [rax]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000ccc	        0x488b4008	                mov rax, qword [rax + 8]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cd0	        0x48c1e003	                              shl rax, 3	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cd4	        0x4883e808	                              sub rax, 8	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cd8	          0x4801d0	                            add rax, rdx	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cdb	          0x488b00	                    mov rax, qword [rax]	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cde	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000ce2	            0x7569	                           jne 0x4000d4d	       238	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000ce4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000ce8	          0x488b10	                    mov rdx, qword [rax]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000ceb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cef	        0x488b4008	                mov rax, qword [rax + 8]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cf3	        0x488d48ff	                      lea rcx, [rax - 1]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cfb	        0x48894808	                mov qword [rax + 8], rcx	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000cff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000d03	        0x488b4008	                mov rax, qword [rax + 8]	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000d07	        0x48c1e003	                              shl rax, 3	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000d0b	          0x4801d0	                            add rax, rdx	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000d0e	    0x48c700000000	                      mov qword [rax], 0	       239	ewah_bitmap.c	FUNCTION_12	IF_4
0x4000d15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_9
0x4000d19	        0x488b4020	            mov rax, qword [rax + 0x20] 	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_9
0x4000d1d	          0x4889c7	                            mov rdi, rax	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_9
0x4000d20	      0xe86df4ffff	          call sym.rlw_get_literal_words	       241	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_9
0x4000d25	        0x488d50ff	                      lea rdx, [rax - 1]	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d2d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d31	          0x4889d6	                            mov rsi, rdx	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d34	          0x4889c7	                            mov rdi, rax	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d37	      0xe86bf4ffff	          call sym.rlw_set_literal_words	       240	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_8
0x4000d3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0x4000d40	      0xbe01000000	                              mov esi, 1	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0x4000d45	          0x4889c7	                            mov rdi, rax	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0x4000d48	      0xe832fbffff	                 call sym.add_empty_word	       242	ewah_bitmap.c	FUNCTION_12	IF_4	CALL_10
0x4000d4d	              0xc9	                                   leave	       244	ewah_bitmap.c	FUNCTION_12
0x4000d4e	              0xc3	                                     ret	       244	ewah_bitmap.c	FUNCTION_12
rlw_xor_run_bit	WHILE,0:ELSE,1:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,0	24
0x40000e6	              0x55	                                push rbp	        47	ewok_rlw.h	FUNCTION_57
0x40000e7	          0x4889e5	                            mov rbp, rsp	        47	ewok_rlw.h	FUNCTION_57
0x40000ea	        0x48897df8	                mov qword [rbp - 8], rdi	        47	ewok_rlw.h	FUNCTION_57
0x40000ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewok_rlw.h	FUNCTION_57	IF_1
0x40000f2	          0x488b00	                    mov rax, qword [rax]	        48	ewok_rlw.h	FUNCTION_57	IF_1
0x40000f5	          0x83e001	                              and eax, 1	        48	ewok_rlw.h	FUNCTION_57	IF_1
0x40000f8	          0x4885c0	                           test rax, rax	        48	ewok_rlw.h	FUNCTION_57	IF_1
0x40000fb	            0x7417	                            je 0x4000114	        48	ewok_rlw.h	FUNCTION_57	IF_1
0x40000fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x4000101	          0x488b00	                    mov rax, qword [rax]	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x4000104	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x4000108	          0x4889c2	                            mov rdx, rax	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x400010b	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x400010f	          0x488910	                    mov qword [rax], rdx	        49	ewok_rlw.h	FUNCTION_57	IF_1
0x4000112	            0xeb15	                           jmp 0x4000129	        53	ewok_rlw.h	FUNCTION_57
0x4000114	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x4000118	          0x488b00	                    mov rax, qword [rax]	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x400011b	        0x4883c801	                               or rax, 1	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x400011f	          0x4889c2	                            mov rdx, rax	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x4000122	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x4000126	          0x488910	                    mov qword [rax], rdx	        51	ewok_rlw.h	FUNCTION_57	ELSE_1
0x4000129	              0x90	                                     nop	        53	ewok_rlw.h	FUNCTION_57
0x400012a	              0x5d	                                 pop rbp	        53	ewok_rlw.h	FUNCTION_57
0x400012b	              0xc3	                                     ret	        53	ewok_rlw.h	FUNCTION_57
rlw_get_running_len	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	9
0x400017c	              0x55	                                push rbp	        62	ewok_rlw.h	FUNCTION_59
0x400017d	          0x4889e5	                            mov rbp, rsp	        62	ewok_rlw.h	FUNCTION_59
0x4000180	        0x48897df8	                mov qword [rbp - 8], rdi	        62	ewok_rlw.h	FUNCTION_59
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	ewok_rlw.h	FUNCTION_59
0x4000188	          0x488b00	                    mov rax, qword [rax]	        63	ewok_rlw.h	FUNCTION_59
0x400018b	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_59
0x400018e	            0x89c0	                            mov eax, eax	        63	ewok_rlw.h	FUNCTION_59
0x4000190	              0x5d	                                 pop rbp	        64	ewok_rlw.h	FUNCTION_59
0x4000191	              0xc3	                                     ret	        64	ewok_rlw.h	FUNCTION_59
rlw_set_literal_words	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	23
0x40001a7	              0x55	                                push rbp	        72	ewok_rlw.h	FUNCTION_61
0x40001a8	          0x4889e5	                            mov rbp, rsp	        72	ewok_rlw.h	FUNCTION_61
0x40001ab	        0x48897df8	                mov qword [rbp - 8], rdi	        72	ewok_rlw.h	FUNCTION_61
0x40001af	        0x488975f0	             mov qword [rbp - 0x10], rsi	        72	ewok_rlw.h	FUNCTION_61
0x40001b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ewok_rlw.h	FUNCTION_61
0x40001b7	          0x488b10	                    mov rdx, qword [rax]	        73	ewok_rlw.h	FUNCTION_61
0x40001ba	    0x48b800000000	          movabs rax, 0xfffffffe00000000	        73	ewok_rlw.h	FUNCTION_61
0x40001c4	          0x4809c2	                             or rdx, rax	        73	ewok_rlw.h	FUNCTION_61
0x40001c7	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ewok_rlw.h	FUNCTION_61
0x40001cb	          0x488910	                    mov qword [rax], rdx	        73	ewok_rlw.h	FUNCTION_61
0x40001ce	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	ewok_rlw.h	FUNCTION_61
0x40001d2	          0x488b00	                    mov rax, qword [rax]	        74	ewok_rlw.h	FUNCTION_61
0x40001d5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        74	ewok_rlw.h	FUNCTION_61
0x40001d9	          0x4889d1	                            mov rcx, rdx	        74	ewok_rlw.h	FUNCTION_61
0x40001dc	        0x48c1e121	                           shl rcx, 0x21	        74	ewok_rlw.h	FUNCTION_61
0x40001e0	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	        74	ewok_rlw.h	FUNCTION_61
0x40001ea	          0x4809ca	                             or rdx, rcx	        74	ewok_rlw.h	FUNCTION_61
0x40001ed	          0x4821c2	                            and rdx, rax	        74	ewok_rlw.h	FUNCTION_61
0x40001f0	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	ewok_rlw.h	FUNCTION_61
0x40001f4	          0x488910	                    mov qword [rax], rdx	        74	ewok_rlw.h	FUNCTION_61
0x40001f7	              0x90	                                     nop	        75	ewok_rlw.h	FUNCTION_61
0x40001f8	              0x5d	                                 pop rbp	        75	ewok_rlw.h	FUNCTION_61
0x40001f9	              0xc3	                                     ret	        75	ewok_rlw.h	FUNCTION_61
ewah_add	WHILE,0:ELSE,0:FOR,0:IF,2:DO,0:SWITCH,0:functions,0:CALL,3	31
0x4000ae8	              0x55	                                push rbp	       197	ewah_bitmap.c	FUNCTION_11
0x4000ae9	          0x4889e5	                            mov rbp, rsp	       197	ewah_bitmap.c	FUNCTION_11
0x4000aec	        0x4883ec10	                           sub rsp, 0x10	       197	ewah_bitmap.c	FUNCTION_11
0x4000af0	        0x48897df8	                mov qword [rbp - 8], rdi	       197	ewah_bitmap.c	FUNCTION_11
0x4000af4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	ewah_bitmap.c	FUNCTION_11
0x4000af8	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	ewah_bitmap.c	FUNCTION_11
0x4000afc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       198	ewah_bitmap.c	FUNCTION_11
0x4000b00	        0x488d5040	                   lea rdx, [rax + 0x40]	       198	ewah_bitmap.c	FUNCTION_11
0x4000b04	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	ewah_bitmap.c	FUNCTION_11
0x4000b08	        0x48895018	             mov qword [rax + 0x18], rdx	       198	ewah_bitmap.c	FUNCTION_11
0x4000b0c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0x4000b11	            0x7513	                           jne 0x4000b26	       200	ewah_bitmap.c	FUNCTION_11	IF_1
0x4000b13	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000b17	      0xbe00000000	                              mov esi, 0	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000b1c	          0x4889c7	                            mov rdi, rax	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000b1f	      0xe85bfdffff	                 call sym.add_empty_word	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000b24	            0xeb2d	                           jmp 0x4000b53	       201	ewah_bitmap.c	FUNCTION_11	CALL_1
0x4000b26	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0x4000b2b	            0x7513	                           jne 0x4000b40	       203	ewah_bitmap.c	FUNCTION_11	IF_2
0x4000b2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000b31	      0xbe01000000	                              mov esi, 1	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000b36	          0x4889c7	                            mov rdi, rax	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000b39	      0xe841fdffff	                 call sym.add_empty_word	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000b3e	            0xeb13	                           jmp 0x4000b53	       204	ewah_bitmap.c	FUNCTION_11	CALL_2
0x4000b40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000b44	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000b48	          0x4889d6	                            mov rsi, rdx	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000b4b	          0x4889c7	                            mov rdi, rax	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000b4e	      0xe8a5faffff	                    call sym.add_literal	       206	ewah_bitmap.c	FUNCTION_11	CALL_3
0x4000b53	              0xc9	                                   leave	       207	ewah_bitmap.c	FUNCTION_11
0x4000b54	              0xc3	                                     ret	       207	ewah_bitmap.c	FUNCTION_11
rlw_set_run_bit	WHILE,0:ELSE,1:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,0	22
0x40000a6	              0x55	                                push rbp	        38	ewok_rlw.h	FUNCTION_56
0x40000a7	          0x4889e5	                            mov rbp, rsp	        38	ewok_rlw.h	FUNCTION_56
0x40000aa	        0x48897df8	                mov qword [rbp - 8], rdi	        38	ewok_rlw.h	FUNCTION_56
0x40000ae	          0x8975f4	              mov dword [rbp - 0xc], esi	        38	ewok_rlw.h	FUNCTION_56
0x40000b1	        0x837df400	                cmp dword [rbp - 0xc], 0	        39	ewok_rlw.h	FUNCTION_56	IF_1
0x40000b5	            0x7417	                            je 0x40000ce	        39	ewok_rlw.h	FUNCTION_56	IF_1
0x40000b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000bb	          0x488b00	                    mov rax, qword [rax]	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000be	        0x4883c801	                               or rax, 1	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000c2	          0x4889c2	                            mov rdx, rax	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000c9	          0x488910	                    mov qword [rax], rdx	        40	ewok_rlw.h	FUNCTION_56	IF_1
0x40000cc	            0xeb15	                           jmp 0x40000e3	        44	ewok_rlw.h	FUNCTION_56
0x40000ce	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000d2	          0x488b00	                    mov rax, qword [rax]	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000d5	        0x4883e0fe	             and rax, 0xfffffffffffffffe	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000d9	          0x4889c2	                            mov rdx, rax	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000dc	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000e0	          0x488910	                    mov qword [rax], rdx	        42	ewok_rlw.h	FUNCTION_56	ELSE_1
0x40000e3	              0x90	                                     nop	        44	ewok_rlw.h	FUNCTION_56
0x40000e4	              0x5d	                                 pop rbp	        44	ewok_rlw.h	FUNCTION_56
0x40000e5	              0xc3	                                     ret	        44	ewok_rlw.h	FUNCTION_56
add_empty_word	WHILE,0:ELSE,1:FOR,0:IF,2:DO,0:SWITCH,0:functions,0:CALL,24	157
0x400087f	              0x55	                                push rbp	       165	ewah_bitmap.c	FUNCTION_10
0x4000880	          0x4889e5	                            mov rbp, rsp	       165	ewah_bitmap.c	FUNCTION_10
0x4000883	        0x4883ec20	                           sub rsp, 0x20	       165	ewah_bitmap.c	FUNCTION_10
0x4000887	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	ewah_bitmap.c	FUNCTION_10
0x400088b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       165	ewah_bitmap.c	FUNCTION_10
0x400088e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x4000892	        0x488b4020	            mov rax, qword [rax + 0x20] 	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x4000896	          0x4889c7	                            mov rdi, rax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x4000899	      0xe8f4f8ffff	          call sym.rlw_get_literal_words	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x400089e	          0x4885c0	                           test rax, rax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x40008a1	           0xf94c0	                                 sete al	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x40008a4	           0xfb6c0	                           movzx eax, al	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x40008a7	          0x8945f4	              mov dword [rbp - 0xc], eax	       166	ewah_bitmap.c	FUNCTION_10	CALL_1
0x40008aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x40008ae	        0x488b4020	            mov rax, qword [rax + 0x20] 	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x40008b2	          0x4889c7	                            mov rdi, rax	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x40008b5	      0xe8c2f8ffff	            call sym.rlw_get_running_len	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x40008ba	        0x488945f8	                mov qword [rbp - 8], rax	       167	ewah_bitmap.c	FUNCTION_10	CALL_2
0x40008be	        0x837df400	                cmp dword [rbp - 0xc], 0	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x40008c2	            0x744a	                            je 0x400090e	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x40008c4	      0x48837df800	                  cmp qword [rbp - 8], 0	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x40008c9	            0x7543	                           jne 0x400090e	       169	ewah_bitmap.c	FUNCTION_10	IF_1
0x40008cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008cf	        0x488b4020	            mov rax, qword [rax + 0x20] 	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008d3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008d6	            0x89d6	                            mov esi, edx	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008d8	          0x4889c7	                            mov rdi, rax	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008db	      0xe8c6f7ffff	                call sym.rlw_set_run_bit	       170	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_3
0x40008e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008e4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008e8	          0x4889c7	                            mov rdi, rax	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008eb	      0xe8a2f7ffff	                call sym.rlw_get_run_bit	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008f0	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008f3	            0x7419	                            je 0x400090e	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008f5	      0xb900000000	                              mov ecx, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008fa	      0xbaab000000	                           mov edx, 0xab	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x40008ff	      0xbe00000000	                              mov esi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000904	      0xbf00000000	                              mov edi, 0	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x4000909	      0xe800000000	                          call 0x400090e	       171	ewah_bitmap.c	FUNCTION_10	IF_1	CALL_5
0x400090e	        0x837df400	                cmp dword [rbp - 0xc], 0	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000912	            0x747e	                            je 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000914	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000918	        0x488b4020	            mov rax, qword [rax + 0x20] 	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400091c	          0x4889c7	                            mov rdi, rax	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400091f	      0xe86ef7ffff	                call sym.rlw_get_run_bit	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000924	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000927	            0x7569	                           jne 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000929	      0xb8feffffff	                     mov eax, 0xfffffffe	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x400092e	        0x483945f8	                cmp qword [rbp - 8], rax	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000932	            0x775e	                            ja 0x4000992	       174	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_6
0x4000934	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x4000938	        0x488d5001	                      lea rdx, [rax + 1]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x400093c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x4000940	        0x488b4020	            mov rax, qword [rax + 0x20] 	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x4000944	          0x4889d6	                            mov rsi, rdx	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x4000947	          0x4889c7	                            mov rdi, rax	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x400094a	      0xe8ddf7ffff	            call sym.rlw_set_running_len	       176	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_7
0x400094f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000953	        0x488b4020	            mov rax, qword [rax + 0x20] 	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000957	          0x4889c7	                            mov rdi, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400095a	      0xe81df8ffff	            call sym.rlw_get_running_len	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400095f	          0x4889c2	                            mov rdx, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000962	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000966	        0x4883c001	                              add rax, 1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400096a	          0x4839c2	                            cmp rdx, rax	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400096d	            0x7419	                            je 0x4000988	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400096f	      0xb900000000	                              mov ecx, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000974	      0xbab1000000	                           mov edx, 0xb1	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000979	      0xbe00000000	                              mov esi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x400097e	      0xbf00000000	                              mov edi, 0	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000983	      0xe800000000	                          call 0x4000988	       177	ewah_bitmap.c	FUNCTION_10	IF_2	CALL_9
0x4000988	      0xb800000000	                              mov eax, 0	       178	ewah_bitmap.c	FUNCTION_10	IF_2
0x400098d	      0xe954010000	                           jmp 0x4000ae6	       178	ewah_bitmap.c	FUNCTION_10	IF_2
0x4000992	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x4000996	      0xbe00000000	                              mov esi, 0	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x400099b	          0x4889c7	                            mov rdi, rax	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x400099e	      0xe8f4f9ffff	                call sym.buffer_push_rlw	       180	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_10
0x40009a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009a7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009ab	          0x4889c7	                            mov rdi, rax	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009ae	      0xe8c9f7ffff	            call sym.rlw_get_running_len	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009b3	          0x4885c0	                           test rax, rax	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009b6	            0x7419	                            je 0x40009d1	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009b8	      0xb900000000	                              mov ecx, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009bd	      0xbab6000000	                           mov edx, 0xb6	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009c2	      0xbe00000000	                              mov esi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009c7	      0xbf00000000	                              mov edi, 0	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009cc	      0xe800000000	                          call 0x40009d1	       182	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_12
0x40009d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009d5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009d9	          0x4889c7	                            mov rdi, rax	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009dc	      0xe8b1f6ffff	                call sym.rlw_get_run_bit	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009e1	            0x85c0	                           test eax, eax	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009e3	            0x7419	                            je 0x40009fe	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009e5	      0xb900000000	                              mov ecx, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009ea	      0xbab7000000	                           mov edx, 0xb7	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009ef	      0xbe00000000	                              mov esi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009f4	      0xbf00000000	                              mov edi, 0	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009f9	      0xe800000000	                          call 0x40009fe	       183	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_14
0x40009fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a02	        0x488b4020	            mov rax, qword [rax + 0x20] 	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a06	          0x4889c7	                            mov rdi, rax	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a09	      0xe884f7ffff	          call sym.rlw_get_literal_words	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a0e	          0x4885c0	                           test rax, rax	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a11	            0x7419	                            je 0x4000a2c	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a13	      0xb900000000	                              mov ecx, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a18	      0xbab8000000	                           mov edx, 0xb8	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a1d	      0xbe00000000	                              mov esi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a22	      0xbf00000000	                              mov edi, 0	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a27	      0xe800000000	                          call 0x4000a2c	       184	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_16
0x4000a2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a30	        0x488b4020	            mov rax, qword [rax + 0x20] 	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a34	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a37	            0x89d6	                            mov esi, edx	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a39	          0x4889c7	                            mov rdi, rax	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a3c	      0xe865f6ffff	                call sym.rlw_set_run_bit	       186	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_17
0x4000a41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a45	        0x488b4020	            mov rax, qword [rax + 0x20] 	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a49	          0x4889c7	                            mov rdi, rax	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a4c	      0xe841f6ffff	                call sym.rlw_get_run_bit	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a51	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a54	            0x7419	                            je 0x4000a6f	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a56	      0xb900000000	                              mov ecx, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a5b	      0xbabb000000	                           mov edx, 0xbb	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a60	      0xbe00000000	                              mov esi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a65	      0xbf00000000	                              mov edi, 0	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       187	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_19
0x4000a6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0x4000a73	        0x488b4020	            mov rax, qword [rax + 0x20] 	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0x4000a77	      0xbe01000000	                              mov esi, 1	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0x4000a7c	          0x4889c7	                            mov rdi, rax	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0x4000a7f	      0xe8a8f6ffff	            call sym.rlw_set_running_len	       189	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_20
0x4000a84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a88	        0x488b4020	            mov rax, qword [rax + 0x20] 	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a8c	          0x4889c7	                            mov rdi, rax	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a8f	      0xe8e8f6ffff	            call sym.rlw_get_running_len	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a94	        0x4883f801	                              cmp rax, 1	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a98	            0x7419	                            je 0x4000ab3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a9a	      0xb900000000	                              mov ecx, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000a9f	      0xbabe000000	                           mov edx, 0xbe	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000aa4	      0xbe00000000	                              mov esi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000aa9	      0xbf00000000	                              mov edi, 0	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000aae	      0xe800000000	                          call 0x4000ab3	       190	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_22
0x4000ab3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ab7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000abb	          0x4889c7	                            mov rdi, rax	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000abe	      0xe8cff6ffff	          call sym.rlw_get_literal_words	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ac3	          0x4885c0	                           test rax, rax	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ac6	            0x7419	                            je 0x4000ae1	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ac8	      0xb900000000	                              mov ecx, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000acd	      0xbabf000000	                           mov edx, 0xbf	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ad2	      0xbe00000000	                              mov esi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ad7	      0xbf00000000	                              mov edi, 0	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000adc	      0xe800000000	                          call 0x4000ae1	       191	ewah_bitmap.c	FUNCTION_10	ELSE_1	CALL_24
0x4000ae1	      0xb801000000	                              mov eax, 1	       192	ewah_bitmap.c	FUNCTION_10	ELSE_1
0x4000ae6	              0xc9	                                   leave	       194	ewah_bitmap.c	FUNCTION_10
0x4000ae7	              0xc3	                                     ret	       194	ewah_bitmap.c	FUNCTION_10
min_size	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	9
0x4000248	              0x55	                                push rbp	        24	ewah_bitmap.c	FUNCTION_1
0x4000249	          0x4889e5	                            mov rbp, rsp	        24	ewah_bitmap.c	FUNCTION_1
0x400024c	        0x48897df8	                mov qword [rbp - 8], rdi	        24	ewah_bitmap.c	FUNCTION_1
0x4000250	        0x488975f0	             mov qword [rbp - 0x10], rsi	        24	ewah_bitmap.c	FUNCTION_1
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_bitmap.c	FUNCTION_1
0x4000258	        0x483945f0	            cmp qword [rbp - 0x10], rax 	        25	ewah_bitmap.c	FUNCTION_1
0x400025c	      0x480f4645f0	          cmovbe rax, qword [rbp - 0x10]	        25	ewah_bitmap.c	FUNCTION_1
0x4000261	              0x5d	                                 pop rbp	        26	ewah_bitmap.c	FUNCTION_1
0x4000262	              0xc3	                                     ret	        26	ewah_bitmap.c	FUNCTION_1
rlw_get_run_bit	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	8
0x4000092	              0x55	                                push rbp	        33	ewok_rlw.h	FUNCTION_55
0x4000093	          0x4889e5	                            mov rbp, rsp	        33	ewok_rlw.h	FUNCTION_55
0x4000096	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok_rlw.h	FUNCTION_55
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewok_rlw.h	FUNCTION_55
0x400009e	          0x488b00	                    mov rax, qword [rax]	        34	ewok_rlw.h	FUNCTION_55
0x40000a1	          0x83e001	                              and eax, 1	        34	ewok_rlw.h	FUNCTION_55
0x40000a4	              0x5d	                                 pop rbp	        35	ewok_rlw.h	FUNCTION_55
0x40000a5	              0xc3	                                     ret	        35	ewok_rlw.h	FUNCTION_55
ewah_xor	WHILE,2:ELSE,2:FOR,1:IF,3:DO,0:SWITCH,0:functions,0:CALL,15	161
0x4001325	              0x55	                                push rbp	       402	ewah_bitmap.c	FUNCTION_21
0x4001326	          0x4889e5	                            mov rbp, rsp	       402	ewah_bitmap.c	FUNCTION_21
0x4001329	    0x4881ecd00000	                           sub rsp, 0xd0	       402	ewah_bitmap.c	FUNCTION_21
0x4001330	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       402	ewah_bitmap.c	FUNCTION_21
0x4001337	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       402	ewah_bitmap.c	FUNCTION_21
0x400133e	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       402	ewah_bitmap.c	FUNCTION_21
0x4001345	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	ewah_bitmap.c	FUNCTION_21
0x400134e	        0x488945f8	                mov qword [rbp - 8], rax	       402	ewah_bitmap.c	FUNCTION_21
0x4001352	            0x31c0	                            xor eax, eax	       402	ewah_bitmap.c	FUNCTION_21
0x4001354	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x400135b	        0x488d4580	                   lea rax, [rbp - 0x80]	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x400135f	          0x4889d6	                            mov rsi, rdx	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x4001362	          0x4889c7	                            mov rdi, rax	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x4001365	      0xe800000000	                          call 0x400136a	       407	ewah_bitmap.c	FUNCTION_21	CALL_1
0x400136a	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4001371	        0x488d45c0	                   lea rax, [rbp - 0x40]	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4001375	          0x4889d6	                            mov rsi, rdx	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4001378	          0x4889c7	                            mov rdi, rax	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x400137b	      0xe800000000	                          call 0x4001380	       408	ewah_bitmap.c	FUNCTION_21	CALL_2
0x4001380	      0xe9ab010000	                           jmp 0x4001530	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001385	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4001388	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x400138b	            0x39c2	                            cmp edx, eax	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x400138d	            0x7d18	                           jge 0x40013a7	       416	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x400138f	        0x488d4580	                   lea rax, [rbp - 0x80]	       417	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x4001393	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       417	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x400139a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x400139e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x40013a5	            0xeb16	                           jmp 0x40013bd	       418	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	IF_1
0x40013a7	        0x488d45c0	                   lea rax, [rbp - 0x40]	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x40013ab	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       420	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x40013b2	        0x488d4580	                   lea rax, [rbp - 0x80]	       421	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x40013b6	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       421	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	ELSE_1
0x40013bd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013c4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013c7	            0x85c0	                           test eax, eax	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013c9	           0xf95c0	                                setne al	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013cc	           0xfb6c0	                           movzx eax, al	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013cf	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       424	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013d5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       426	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013dc	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       426	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x40013df	          0x4863d0	                         movsxd rdx, eax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013e2	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013e8	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013f6	          0x4889c7	                            mov rdi, rax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013f9	      0xe800000000	                          call 0x40013fe	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x40013fe	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       425	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_5
0x4001405	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       429	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x400140c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       429	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x400140f	            0x4898	                                    cdqe	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4001411	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4001418	          0x4889c2	                            mov rdx, rax	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x400141b	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4001421	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4001428	            0x89ce	                            mov esi, ecx	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x400142a	          0x4889c7	                            mov rdi, rax	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x400142d	      0xe800000000	                          call 0x4001432	       428	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_6
0x4001432	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       432	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4001439	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       432	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x400143c	          0x4863d0	                         movsxd rdx, eax	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x400143f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4001446	          0x4889d6	                            mov rsi, rdx	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4001449	          0x4889c7	                            mov rdi, rax	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x400144c	      0xe800000000	                          call 0x4001451	       431	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2	CALL_7
0x4001451	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4001454	            0x85c0	                           test eax, eax	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4001456	     0xf8f29ffffff	                            jg 0x4001385	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x400145c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x400145f	            0x85c0	                           test eax, eax	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4001461	     0xf8f1effffff	                            jg 0x4001385	       411	ewah_bitmap.c	FUNCTION_21	WHILE_1	WHILE_2
0x4001467	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       437	ewah_bitmap.c	FUNCTION_21	WHILE_1
0x400146a	          0x4863d0	                         movsxd rdx, eax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x400146d	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       436	ewah_bitmap.c	FUNCTION_21	WHILE_1
0x4001470	            0x4898	                                    cdqe	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x4001472	          0x4889d6	                            mov rsi, rdx	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x4001475	          0x4889c7	                            mov rdi, rax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x4001478	      0xe8cbedffff	                       call sym.min_size	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x400147d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       435	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_8
0x4001484	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x400148c	     0xf849e000000	                            je 0x4001530	       439	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2
0x4001492	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x400149d	            0xeb55	                           jmp 0x40014f4	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x400149f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014a3	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014a7	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014ae	          0x4801ca	                            add rdx, rcx	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014b1	        0x48c1e203	                              shl rdx, 3	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014b5	          0x4801d0	                            add rax, rdx	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014b8	          0x488b10	                    mov rdx, qword [rax]	       444	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014bf	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014c3	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014ca	          0x4801f1	                            add rcx, rsi	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014cd	        0x48c1e103	                              shl rcx, 3	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014d1	          0x4801c8	                            add rax, rcx	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014d4	          0x488b00	                    mov rax, qword [rax]	       445	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014d7	          0x4831c2	                            xor rdx, rax	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x40014da	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x40014e1	          0x4889d6	                            mov rsi, rdx	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x40014e4	          0x4889c7	                            mov rdi, rax	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x40014e7	      0xe800000000	                          call 0x40014ec	       443	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1	CALL_9
0x40014ec	    0x48838568ffff	               add qword [rbp - 0x98], 1	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014f4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x40014fb	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4001502	            0x729b	                            jb 0x400149f	       442	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	FOR_1
0x4001504	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x400150b	        0x488d4580	                   lea rax, [rbp - 0x80]	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x400150f	          0x4889d6	                            mov rsi, rdx	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x4001512	          0x4889c7	                            mov rdi, rax	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x4001515	      0xe800000000	                          call 0x400151a	       449	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_10
0x400151a	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4001521	        0x488d45c0	                   lea rax, [rbp - 0x40]	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4001525	          0x4889d6	                            mov rsi, rdx	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4001528	          0x4889c7	                            mov rdi, rax	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x400152b	      0xe800000000	                          call 0x4001530	       450	ewah_bitmap.c	FUNCTION_21	WHILE_1	IF_2	CALL_11
0x4001530	        0x488d4580	                   lea rax, [rbp - 0x80]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001534	          0x4889c7	                            mov rdi, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001537	      0xe8f0ecffff	                call sym.rlwit_word_size	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x400153c	          0x4885c0	                           test rax, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x400153f	            0x7415	                            je 0x4001556	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001541	        0x488d45c0	                   lea rax, [rbp - 0x40]	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001545	          0x4889c7	                            mov rdi, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001548	      0xe8dfecffff	                call sym.rlwit_word_size	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x400154d	          0x4885c0	                           test rax, rax	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001550	     0xf85fbfeffff	                           jne 0x4001451	       410	ewah_bitmap.c	FUNCTION_21	WHILE_1	CALL_4
0x4001556	        0x488d4580	                   lea rax, [rbp - 0x80]	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x400155a	          0x4889c7	                            mov rdi, rax	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x400155d	      0xe8caecffff	                call sym.rlwit_word_size	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x4001562	          0x4885c0	                           test rax, rax	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x4001565	            0x7421	                            je 0x4001588	       454	ewah_bitmap.c	FUNCTION_21	IF_3	CALL_12
0x4001567	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x400156e	        0x488d4580	                   lea rax, [rbp - 0x80]	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4001572	      0xb900000000	                              mov ecx, 0	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4001577	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x400157e	          0x4889c7	                            mov rdi, rax	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4001581	      0xe800000000	                          call 0x4001586	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4001586	            0xeb1f	                           jmp 0x40015a7	       455	ewah_bitmap.c	FUNCTION_21	CALL_13
0x4001588	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x400158f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4001593	      0xb900000000	                              mov ecx, 0	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x4001598	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x400159f	          0x4889c7	                            mov rdi, rax	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x40015a2	      0xe800000000	                          call 0x40015a7	       457	ewah_bitmap.c	FUNCTION_21	CALL_14
0x40015a7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015ae	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015b2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015b9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015bd	          0x4889d6	                            mov rsi, rdx	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015c0	          0x4889c7	                            mov rdi, rax	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015c3	      0xe89becffff	                       call sym.max_size	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015c8	          0x4889c2	                            mov rdx, rax	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015cb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015d2	        0x48895018	             mov qword [rax + 0x18], rdx	       459	ewah_bitmap.c	FUNCTION_21	CALL_15
0x40015d6	              0x90	                                     nop	       460	ewah_bitmap.c	FUNCTION_21
0x40015d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	ewah_bitmap.c	FUNCTION_21
0x40015db	    0x644833042528	                xor rax, qword fs:[0x28]	       460	ewah_bitmap.c	FUNCTION_21
0x40015e4	            0x7405	                            je 0x40015eb	       460	ewah_bitmap.c	FUNCTION_21
0x40015e6	      0xe800000000	                          call 0x40015eb	       460	ewah_bitmap.c	FUNCTION_21
0x40015eb	              0xc9	                                   leave	       460	ewah_bitmap.c	FUNCTION_21
0x40015ec	              0xc3	                                     ret	       460	ewah_bitmap.c	FUNCTION_21
ewah_and_not	WHILE,2:ELSE,3:FOR,1:IF,4:DO,0:SWITCH,0:functions,0:CALL,18	196
0x40018f6	              0x55	                                push rbp	       534	ewah_bitmap.c	FUNCTION_23
0x40018f7	          0x4889e5	                            mov rbp, rsp	       534	ewah_bitmap.c	FUNCTION_23
0x40018fa	    0x4881ecd00000	                           sub rsp, 0xd0	       534	ewah_bitmap.c	FUNCTION_23
0x4001901	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       534	ewah_bitmap.c	FUNCTION_23
0x4001908	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       534	ewah_bitmap.c	FUNCTION_23
0x400190f	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       534	ewah_bitmap.c	FUNCTION_23
0x4001916	    0x64488b042528	                mov rax, qword fs:[0x28]	       534	ewah_bitmap.c	FUNCTION_23
0x400191f	        0x488945f8	                mov qword [rbp - 8], rax	       534	ewah_bitmap.c	FUNCTION_23
0x4001923	            0x31c0	                            xor eax, eax	       534	ewah_bitmap.c	FUNCTION_23
0x4001925	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x400192c	        0x488d4580	                   lea rax, [rbp - 0x80]	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x4001930	          0x4889d6	                            mov rsi, rdx	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x4001933	          0x4889c7	                            mov rdi, rax	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x4001936	      0xe800000000	                          call 0x400193b	       539	ewah_bitmap.c	FUNCTION_23	CALL_1
0x400193b	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001942	        0x488d45c0	                   lea rax, [rbp - 0x40]	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001946	          0x4889d6	                            mov rsi, rdx	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001949	          0x4889c7	                            mov rdi, rax	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x400194c	      0xe800000000	                          call 0x4001951	       540	ewah_bitmap.c	FUNCTION_23	CALL_2
0x4001951	      0xe947020000	                           jmp 0x4001b9d	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001956	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001959	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400195c	            0x39c2	                            cmp edx, eax	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400195e	            0x7d18	                           jge 0x4001978	       546	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001960	        0x488d4580	                   lea rax, [rbp - 0x80]	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001964	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       547	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400196b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x400196f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001976	            0xeb16	                           jmp 0x400198e	       548	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_1
0x4001978	        0x488d45c0	                   lea rax, [rbp - 0x40]	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x400197c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       550	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x4001983	        0x488d4580	                   lea rax, [rbp - 0x80]	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x4001987	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       551	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_1
0x400198e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001995	          0x8b4034	            mov eax, dword [rax + 0x34] 	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001998	            0x85c0	                           test eax, eax	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x400199a	            0x740d	                            je 0x40019a9	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x400199c	        0x488d4580	                   lea rax, [rbp - 0x80]	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019a0	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019a7	            0x741b	                            je 0x40019c4	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019a9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019b0	          0x8b4034	            mov eax, dword [rax + 0x34] 	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019b3	            0x85c0	                           test eax, eax	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019b5	            0x7571	                           jne 0x4001a28	       554	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019b7	        0x488d4580	                   lea rax, [rbp - 0x80]	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019bb	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019c2	            0x7464	                            je 0x4001a28	       555	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019c4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       557	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019cb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       557	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019ce	          0x4863d0	                         movsxd rdx, eax	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x40019d1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x40019d8	      0xbe00000000	                              mov esi, 0	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x40019dd	          0x4889c7	                            mov rdi, rax	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x40019e0	      0xe800000000	                          call 0x40019e5	       556	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_5
0x40019e5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       559	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019ec	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       559	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x40019ef	          0x4863d0	                         movsxd rdx, eax	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x40019f2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x40019f9	          0x4889d6	                            mov rsi, rdx	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x40019fc	          0x4889c7	                            mov rdi, rax	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x40019ff	      0xe800000000	                          call 0x4001a04	       558	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001a04	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       561	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001a0b	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       561	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0x4001a0e	          0x4863d0	                         movsxd rdx, eax	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a11	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a18	          0x4889d6	                            mov rsi, rdx	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a1b	          0x4889c7	                            mov rdi, rax	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a1e	      0xe800000000	                          call 0x4001a23	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a23	      0xe993000000	                           jmp 0x4001abb	       560	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001a28	        0x488d4580	                   lea rax, [rbp - 0x80]	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a2c	    0x48398558ffff	            cmp qword [rbp - 0xa8], rax 	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a33	           0xf95c0	                                setne al	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a36	           0xfb6c0	                           movzx eax, al	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a39	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       566	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a3f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       568	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a46	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       568	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a49	          0x4863d0	                         movsxd rdx, eax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a4c	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a52	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a59	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a60	          0x4889c7	                            mov rdi, rax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a63	      0xe800000000	                          call 0x4001a68	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a68	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       567	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001a6f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       570	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a76	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       570	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001a79	            0x4898	                                    cdqe	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a7b	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a82	          0x4889c2	                            mov rdx, rax	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a85	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a8b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a92	            0x89ce	                            mov esi, ecx	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a94	          0x4889c7	                            mov rdi, rax	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a97	      0xe800000000	                          call 0x4001a9c	       569	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001a9c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       572	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001aa3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       572	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2
0x4001aa6	          0x4863d0	                         movsxd rdx, eax	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001aa9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001ab0	          0x4889d6	                            mov rsi, rdx	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001ab3	          0x4889c7	                            mov rdi, rax	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001ab6	      0xe800000000	                          call 0x4001abb	       571	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001abb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001abe	            0x85c0	                           test eax, eax	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001ac0	     0xf8f90feffff	                            jg 0x4001956	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001ac6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001ac9	            0x85c0	                           test eax, eax	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001acb	     0xf8f85feffff	                            jg 0x4001956	       543	ewah_bitmap.c	FUNCTION_23	WHILE_1	WHILE_2
0x4001ad1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       578	ewah_bitmap.c	FUNCTION_23	WHILE_1
0x4001ad4	          0x4863d0	                         movsxd rdx, eax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001ad7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       577	ewah_bitmap.c	FUNCTION_23	WHILE_1
0x4001ada	            0x4898	                                    cdqe	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001adc	          0x4889d6	                            mov rsi, rdx	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001adf	          0x4889c7	                            mov rdi, rax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001ae2	      0xe861e7ffff	                       call sym.min_size	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001ae7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       576	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_11
0x4001aee	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x4001af6	     0xf84a1000000	                            je 0x4001b9d	       580	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3
0x4001afc	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b07	            0xeb58	                           jmp 0x4001b61	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b09	        0x488b4580	             mov rax, qword [rbp - 0x80]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b0d	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b11	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b18	          0x4801ca	                            add rdx, rcx	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b1b	        0x48c1e203	                              shl rdx, 3	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b1f	          0x4801d0	                            add rax, rdx	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b22	          0x488b00	                    mov rax, qword [rax]	       585	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b25	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b29	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b2d	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b34	          0x4801f1	                            add rcx, rsi	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b37	        0x48c1e103	                              shl rcx, 3	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b3b	          0x4801ca	                            add rdx, rcx	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b3e	          0x488b12	                    mov rdx, qword [rdx]	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b41	          0x48f7d2	                                 not rdx	       586	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b44	          0x4821c2	                            and rdx, rax	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001b47	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001b4e	          0x4889d6	                            mov rsi, rdx	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001b51	          0x4889c7	                            mov rdi, rax	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001b54	      0xe800000000	                          call 0x4001b59	       584	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1	CALL_12
0x4001b59	    0x48838568ffff	               add qword [rbp - 0x98], 1	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b61	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b68	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b6f	            0x7298	                            jb 0x4001b09	       583	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	FOR_1
0x4001b71	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001b78	        0x488d4580	                   lea rax, [rbp - 0x80]	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001b7c	          0x4889d6	                            mov rsi, rdx	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001b7f	          0x4889c7	                            mov rdi, rax	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001b82	      0xe800000000	                          call 0x4001b87	       590	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_13
0x4001b87	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001b8e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001b92	          0x4889d6	                            mov rsi, rdx	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001b95	          0x4889c7	                            mov rdi, rax	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001b98	      0xe800000000	                          call 0x4001b9d	       591	ewah_bitmap.c	FUNCTION_23	WHILE_1	IF_3	CALL_14
0x4001b9d	        0x488d4580	                   lea rax, [rbp - 0x80]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001ba1	          0x4889c7	                            mov rdi, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001ba4	      0xe883e6ffff	                call sym.rlwit_word_size	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001ba9	          0x4885c0	                           test rax, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bac	            0x7415	                            je 0x4001bc3	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bae	        0x488d45c0	                   lea rax, [rbp - 0x40]	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bb2	          0x4889c7	                            mov rdi, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bb5	      0xe872e6ffff	                call sym.rlwit_word_size	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bba	          0x4885c0	                           test rax, rax	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bbd	     0xf85f8feffff	                           jne 0x4001abb	       542	ewah_bitmap.c	FUNCTION_23	WHILE_1	CALL_4
0x4001bc3	        0x488d4580	                   lea rax, [rbp - 0x80]	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x4001bc7	          0x4889c7	                            mov rdi, rax	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x4001bca	      0xe85de6ffff	                call sym.rlwit_word_size	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x4001bcf	          0x4885c0	                           test rax, rax	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x4001bd2	            0x7421	                            je 0x4001bf5	       595	ewah_bitmap.c	FUNCTION_23	IF_4	CALL_15
0x4001bd4	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001bdb	        0x488d4580	                   lea rax, [rbp - 0x80]	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001bdf	      0xb900000000	                              mov ecx, 0	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001be4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001beb	          0x4889c7	                            mov rdi, rax	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001bee	      0xe800000000	                          call 0x4001bf3	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001bf3	            0xeb16	                           jmp 0x4001c0b	       596	ewah_bitmap.c	FUNCTION_23	CALL_16
0x4001bf5	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001bfc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001c00	          0x4889d6	                            mov rsi, rdx	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001c03	          0x4889c7	                            mov rdi, rax	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001c06	      0xe800000000	                          call 0x4001c0b	       598	ewah_bitmap.c	FUNCTION_23	CALL_17
0x4001c0b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c12	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c16	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c1d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c21	          0x4889d6	                            mov rsi, rdx	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c24	          0x4889c7	                            mov rdi, rax	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c27	      0xe837e6ffff	                       call sym.max_size	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c2c	          0x4889c2	                            mov rdx, rax	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c2f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c36	        0x48895018	             mov qword [rax + 0x18], rdx	       600	ewah_bitmap.c	FUNCTION_23	CALL_18
0x4001c3a	              0x90	                                     nop	       601	ewah_bitmap.c	FUNCTION_23
0x4001c3b	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	ewah_bitmap.c	FUNCTION_23
0x4001c3f	    0x644833042528	                xor rax, qword fs:[0x28]	       601	ewah_bitmap.c	FUNCTION_23
0x4001c48	            0x7405	                            je 0x4001c4f	       601	ewah_bitmap.c	FUNCTION_23
0x4001c4a	      0xe800000000	                          call 0x4001c4f	       601	ewah_bitmap.c	FUNCTION_23
0x4001c4f	              0xc9	                                   leave	       601	ewah_bitmap.c	FUNCTION_23
0x4001c50	              0xc3	                                     ret	       601	ewah_bitmap.c	FUNCTION_23
ewah_iterator_init	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,1	37
0x40011dc	              0x55	                                push rbp	       364	ewah_bitmap.c	FUNCTION_19
0x40011dd	          0x4889e5	                            mov rbp, rsp	       364	ewah_bitmap.c	FUNCTION_19
0x40011e0	        0x4883ec10	                           sub rsp, 0x10	       364	ewah_bitmap.c	FUNCTION_19
0x40011e4	        0x48897df8	                mov qword [rbp - 8], rdi	       364	ewah_bitmap.c	FUNCTION_19
0x40011e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       364	ewah_bitmap.c	FUNCTION_19
0x40011ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       365	ewah_bitmap.c	FUNCTION_19
0x40011f0	          0x488b10	                    mov rdx, qword [rax]	       365	ewah_bitmap.c	FUNCTION_19
0x40011f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	ewah_bitmap.c	FUNCTION_19
0x40011f7	          0x488910	                    mov qword [rax], rdx	       365	ewah_bitmap.c	FUNCTION_19
0x40011fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	ewah_bitmap.c	FUNCTION_19
0x40011fe	        0x488b5008	                mov rdx, qword [rax + 8]	       366	ewah_bitmap.c	FUNCTION_19
0x4001202	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	ewah_bitmap.c	FUNCTION_19
0x4001206	        0x48895008	                mov qword [rax + 8], rdx	       366	ewah_bitmap.c	FUNCTION_19
0x400120a	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	ewah_bitmap.c	FUNCTION_19
0x400120e	    0x48c740100000	               mov qword [rax + 0x10], 0	       367	ewah_bitmap.c	FUNCTION_19
0x4001216	        0x488b45f8	                mov rax, qword [rbp - 8]	       369	ewah_bitmap.c	FUNCTION_19
0x400121a	    0x48c740300000	               mov qword [rax + 0x30], 0	       369	ewah_bitmap.c	FUNCTION_19
0x4001222	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	ewah_bitmap.c	FUNCTION_19
0x4001226	    0x48c740280000	               mov qword [rax + 0x28], 0	       370	ewah_bitmap.c	FUNCTION_19
0x400122e	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	ewah_bitmap.c	FUNCTION_19
0x4001232	    0x48c740180000	               mov qword [rax + 0x18], 0	       371	ewah_bitmap.c	FUNCTION_19
0x400123a	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	ewah_bitmap.c	FUNCTION_19
0x400123e	    0x48c740200000	               mov qword [rax + 0x20], 0	       372	ewah_bitmap.c	FUNCTION_19
0x4001246	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	ewah_bitmap.c	FUNCTION_19
0x400124a	    0xc74038000000	               mov dword [rax + 0x38], 0	       373	ewah_bitmap.c	FUNCTION_19
0x4001251	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4001255	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4001259	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x400125d	        0x488b4008	                mov rax, qword [rax + 8]	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4001261	          0x4839c2	                            cmp rdx, rax	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4001264	            0x730c	                           jae 0x4001272	       375	ewah_bitmap.c	FUNCTION_19	IF_1
0x4001266	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x400126a	          0x4889c7	                            mov rdi, rax	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x400126d	      0xe8f9fcffff	                   call sym.read_new_rlw	       376	ewah_bitmap.c	FUNCTION_19	CALL_1
0x4001272	              0x90	                                     nop	       377	ewah_bitmap.c	FUNCTION_19
0x4001273	              0xc9	                                   leave	       377	ewah_bitmap.c	FUNCTION_19
0x4001274	              0xc3	                                     ret	       377	ewah_bitmap.c	FUNCTION_19
ewah_and	WHILE,2:ELSE,3:FOR,1:IF,4:DO,0:SWITCH,0:functions,0:CALL,18	178
0x40015ed	              0x55	                                push rbp	       466	ewah_bitmap.c	FUNCTION_22
0x40015ee	          0x4889e5	                            mov rbp, rsp	       466	ewah_bitmap.c	FUNCTION_22
0x40015f1	    0x4881ecd00000	                           sub rsp, 0xd0	       466	ewah_bitmap.c	FUNCTION_22
0x40015f8	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       466	ewah_bitmap.c	FUNCTION_22
0x40015ff	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       466	ewah_bitmap.c	FUNCTION_22
0x4001606	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       466	ewah_bitmap.c	FUNCTION_22
0x400160d	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	ewah_bitmap.c	FUNCTION_22
0x4001616	        0x488945f8	                mov qword [rbp - 8], rax	       466	ewah_bitmap.c	FUNCTION_22
0x400161a	            0x31c0	                            xor eax, eax	       466	ewah_bitmap.c	FUNCTION_22
0x400161c	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4001623	        0x488d4580	                   lea rax, [rbp - 0x80]	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4001627	          0x4889d6	                            mov rsi, rdx	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x400162a	          0x4889c7	                            mov rdi, rax	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x400162d	      0xe800000000	                          call 0x4001632	       471	ewah_bitmap.c	FUNCTION_22	CALL_1
0x4001632	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4001639	        0x488d45c0	                   lea rax, [rbp - 0x40]	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x400163d	          0x4889d6	                            mov rsi, rdx	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4001640	          0x4889c7	                            mov rdi, rax	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4001643	      0xe800000000	                          call 0x4001648	       472	ewah_bitmap.c	FUNCTION_22	CALL_2
0x4001648	      0xe9fe010000	                           jmp 0x400184b	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x400164d	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001650	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001653	            0x39c2	                            cmp edx, eax	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001655	            0x7d18	                           jge 0x400166f	       478	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001657	        0x488d4580	                   lea rax, [rbp - 0x80]	       479	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x400165b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       479	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001662	        0x488d45c0	                   lea rax, [rbp - 0x40]	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x4001666	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x400166d	            0xeb16	                           jmp 0x4001685	       480	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_1
0x400166f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x4001673	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       482	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x400167a	        0x488d4580	                   lea rax, [rbp - 0x80]	       483	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x400167e	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       483	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_1
0x4001685	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x400168c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x400168f	            0x85c0	                           test eax, eax	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x4001691	            0x7561	                           jne 0x40016f4	       486	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x4001693	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       488	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x400169a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       488	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x400169d	          0x4863d0	                         movsxd rdx, eax	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x40016a0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x40016a7	      0xbe00000000	                              mov esi, 0	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x40016ac	          0x4889c7	                            mov rdi, rax	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x40016af	      0xe800000000	                          call 0x40016b4	       487	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_5
0x40016b4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       490	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x40016bb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       490	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x40016be	          0x4863d0	                         movsxd rdx, eax	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x40016c1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x40016c8	          0x4889d6	                            mov rsi, rdx	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x40016cb	          0x4889c7	                            mov rdi, rax	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x40016ce	      0xe800000000	                          call 0x40016d3	       489	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_6
0x40016d3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       492	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x40016da	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       492	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2
0x40016dd	          0x4863d0	                         movsxd rdx, eax	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016e0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016e7	          0x4889d6	                            mov rsi, rdx	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016ea	          0x4889c7	                            mov rdi, rax	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016ed	      0xe800000000	                          call 0x40016f2	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016f2	            0xeb78	                           jmp 0x400176c	       491	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	IF_2	CALL_7
0x40016f4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       495	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x40016fb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       495	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x40016fe	          0x4863d0	                         movsxd rdx, eax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001701	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001708	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x400170f	      0xb900000000	                              mov ecx, 0	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001714	          0x4889c7	                            mov rdi, rax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001717	      0xe800000000	                          call 0x400171c	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x400171c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       494	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001723	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       497	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x400172a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       497	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x400172d	            0x4898	                                    cdqe	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x400172f	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001736	          0x4889c2	                            mov rdx, rax	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001739	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001740	      0xbe00000000	                              mov esi, 0	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001745	          0x4889c7	                            mov rdi, rax	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001748	      0xe800000000	                          call 0x400174d	       496	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x400174d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       499	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x4001754	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       499	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2
0x4001757	          0x4863d0	                         movsxd rdx, eax	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x400175a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001761	          0x4889d6	                            mov rsi, rdx	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001764	          0x4889c7	                            mov rdi, rax	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001767	      0xe800000000	                          call 0x400176c	       498	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x400176c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x400176f	            0x85c0	                           test eax, eax	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4001771	     0xf8fd6feffff	                            jg 0x400164d	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4001777	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x400177a	            0x85c0	                           test eax, eax	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x400177c	     0xf8fcbfeffff	                            jg 0x400164d	       475	ewah_bitmap.c	FUNCTION_22	WHILE_1	WHILE_2
0x4001782	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       505	ewah_bitmap.c	FUNCTION_22	WHILE_1
0x4001785	          0x4863d0	                         movsxd rdx, eax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x4001788	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       504	ewah_bitmap.c	FUNCTION_22	WHILE_1
0x400178b	            0x4898	                                    cdqe	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x400178d	          0x4889d6	                            mov rsi, rdx	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x4001790	          0x4889c7	                            mov rdi, rax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x4001793	      0xe8b0eaffff	                       call sym.min_size	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x4001798	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       503	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_11
0x400179f	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x40017a7	     0xf849e000000	                            je 0x400184b	       507	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3
0x40017ad	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017b8	            0xeb55	                           jmp 0x400180f	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017ba	        0x488b4580	             mov rax, qword [rbp - 0x80]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017be	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017c2	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017c9	          0x4801ca	                            add rdx, rcx	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017cc	        0x48c1e203	                              shl rdx, 3	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017d0	          0x4801d0	                            add rax, rdx	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017d3	          0x488b10	                    mov rdx, qword [rax]	       512	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017da	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017de	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017e5	          0x4801f1	                            add rcx, rsi	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017e8	        0x48c1e103	                              shl rcx, 3	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017ec	          0x4801c8	                            add rax, rcx	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017ef	          0x488b00	                    mov rax, qword [rax]	       513	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x40017f2	          0x4821c2	                            and rdx, rax	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x40017f5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x40017fc	          0x4889d6	                            mov rsi, rdx	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x40017ff	          0x4889c7	                            mov rdi, rax	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4001802	      0xe800000000	                          call 0x4001807	       511	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1	CALL_12
0x4001807	    0x48838568ffff	               add qword [rbp - 0x98], 1	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x400180f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x4001816	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x400181d	            0x729b	                            jb 0x40017ba	       510	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	FOR_1
0x400181f	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4001826	        0x488d4580	                   lea rax, [rbp - 0x80]	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x400182a	          0x4889d6	                            mov rsi, rdx	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x400182d	          0x4889c7	                            mov rdi, rax	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4001830	      0xe800000000	                          call 0x4001835	       517	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_13
0x4001835	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x400183c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4001840	          0x4889d6	                            mov rsi, rdx	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4001843	          0x4889c7	                            mov rdi, rax	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x4001846	      0xe800000000	                          call 0x400184b	       518	ewah_bitmap.c	FUNCTION_22	WHILE_1	IF_3	CALL_14
0x400184b	        0x488d4580	                   lea rax, [rbp - 0x80]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x400184f	          0x4889c7	                            mov rdi, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001852	      0xe8d5e9ffff	                call sym.rlwit_word_size	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001857	          0x4885c0	                           test rax, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x400185a	            0x7415	                            je 0x4001871	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x400185c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001860	          0x4889c7	                            mov rdi, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001863	      0xe8c4e9ffff	                call sym.rlwit_word_size	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001868	          0x4885c0	                           test rax, rax	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x400186b	     0xf85fbfeffff	                           jne 0x400176c	       474	ewah_bitmap.c	FUNCTION_22	WHILE_1	CALL_4
0x4001871	        0x488d4580	                   lea rax, [rbp - 0x80]	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x4001875	          0x4889c7	                            mov rdi, rax	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x4001878	      0xe8afe9ffff	                call sym.rlwit_word_size	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x400187d	          0x4885c0	                           test rax, rax	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x4001880	            0x7418	                            je 0x400189a	       522	ewah_bitmap.c	FUNCTION_22	IF_4	CALL_15
0x4001882	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4001889	        0x488d4580	                   lea rax, [rbp - 0x80]	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x400188d	          0x4889d6	                            mov rsi, rdx	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4001890	          0x4889c7	                            mov rdi, rax	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4001893	      0xe800000000	                          call 0x4001898	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x4001898	            0xeb16	                           jmp 0x40018b0	       523	ewah_bitmap.c	FUNCTION_22	CALL_16
0x400189a	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x40018a1	        0x488d45c0	                   lea rax, [rbp - 0x40]	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x40018a5	          0x4889d6	                            mov rsi, rdx	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x40018a8	          0x4889c7	                            mov rdi, rax	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x40018ab	      0xe800000000	                          call 0x40018b0	       525	ewah_bitmap.c	FUNCTION_22	CALL_17
0x40018b0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018b7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018c6	          0x4889d6	                            mov rsi, rdx	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018c9	          0x4889c7	                            mov rdi, rax	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018cc	      0xe892e9ffff	                       call sym.max_size	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018d1	          0x4889c2	                            mov rdx, rax	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018d4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018db	        0x48895018	             mov qword [rax + 0x18], rdx	       527	ewah_bitmap.c	FUNCTION_22	CALL_18
0x40018df	              0x90	                                     nop	       528	ewah_bitmap.c	FUNCTION_22
0x40018e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	ewah_bitmap.c	FUNCTION_22
0x40018e4	    0x644833042528	                xor rax, qword fs:[0x28]	       528	ewah_bitmap.c	FUNCTION_22
0x40018ed	            0x7405	                            je 0x40018f4	       528	ewah_bitmap.c	FUNCTION_22
0x40018ef	      0xe800000000	                          call 0x40018f4	       528	ewah_bitmap.c	FUNCTION_22
0x40018f4	              0xc9	                                   leave	       528	ewah_bitmap.c	FUNCTION_22
0x40018f5	              0xc3	                                     ret	       528	ewah_bitmap.c	FUNCTION_22
ewah_pool_free	WHILE,0:ELSE,0:FOR,0:IF,2:DO,0:SWITCH,0:functions,0:CALL,2	29
0x4001fa6	              0x55	                                push rbp	       685	ewah_bitmap.c	FUNCTION_26
0x4001fa7	          0x4889e5	                            mov rbp, rsp	       685	ewah_bitmap.c	FUNCTION_26
0x4001faa	        0x4883ec10	                           sub rsp, 0x10	       685	ewah_bitmap.c	FUNCTION_26
0x4001fae	        0x48897df8	                mov qword [rbp - 8], rdi	       685	ewah_bitmap.c	FUNCTION_26
0x4001fb2	      0x48837df800	                  cmp qword [rbp - 8], 0	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x4001fb7	            0x7454	                            je 0x400200d	       686	ewah_bitmap.c	FUNCTION_26	IF_1
0x4001fb9	    0x488b05000000	            mov rax, qword [0x04001fc0] 	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fc0	        0x4883f810	                           cmp rax, 0x10	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fc4	            0x740d	                            je 0x4001fd3	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fc6	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fca	        0x488b4010	            mov rax, qword [rax + 0x10] 	       690	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fce	          0x4885c0	                           test rax, rax	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fd1	            0x750e	                           jne 0x4001fe1	       689	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fd3	        0x488b45f8	                mov rax, qword [rbp - 8]	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x4001fd7	          0x4889c7	                            mov rdi, rax	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x4001fda	      0xe800000000	                          call 0x4001fdf	       691	ewah_bitmap.c	FUNCTION_26	IF_2	CALL_1
0x4001fdf	            0xeb2d	                           jmp 0x400200e	       692	ewah_bitmap.c	FUNCTION_26	IF_2
0x4001fe1	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x4001fe5	          0x4889c7	                            mov rdi, rax	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x4001fe8	      0xe800000000	                          call 0x4001fed	       695	ewah_bitmap.c	FUNCTION_26	CALL_2
0x4001fed	    0x488b05000000	            mov rax, qword [0x04001ff4] 	       696	ewah_bitmap.c	FUNCTION_26
0x4001ff4	        0x488d5001	                      lea rdx, [rax + 1]	       696	ewah_bitmap.c	FUNCTION_26
0x4001ff8	    0x488915000000	            mov qword [0x04001fff], rdx 	       696	ewah_bitmap.c	FUNCTION_26
0x4001fff	        0x488b55f8	                mov rdx, qword [rbp - 8]	       696	ewah_bitmap.c	FUNCTION_26
0x4002003	    0x488914c50000	                  mov qword [rax*8], rdx	       696	ewah_bitmap.c	FUNCTION_26
0x400200b	            0xeb01	                           jmp 0x400200e	       696	ewah_bitmap.c	FUNCTION_26
0x400200d	              0x90	                                     nop	       687	ewah_bitmap.c	FUNCTION_26	IF_1
0x400200e	              0xc9	                                   leave	       697	ewah_bitmap.c	FUNCTION_26
0x400200f	              0xc3	                                     ret	       697	ewah_bitmap.c	FUNCTION_26
ewah_checksum	WHILE,1:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	33
0x4002010	              0x55	                                push rbp	       700	ewah_bitmap.c	FUNCTION_27
0x4002011	          0x4889e5	                            mov rbp, rsp	       700	ewah_bitmap.c	FUNCTION_27
0x4002014	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       700	ewah_bitmap.c	FUNCTION_27
0x4002018	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       701	ewah_bitmap.c	FUNCTION_27
0x400201c	          0x488b00	                    mov rax, qword [rax]	       701	ewah_bitmap.c	FUNCTION_27
0x400201f	        0x488945f0	             mov qword [rbp - 0x10], rax	       701	ewah_bitmap.c	FUNCTION_27
0x4002023	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       702	ewah_bitmap.c	FUNCTION_27
0x4002027	        0x488b4018	            mov rax, qword [rax + 0x18] 	       702	ewah_bitmap.c	FUNCTION_27
0x400202b	          0x8945ec	             mov dword [rbp - 0x14], eax	       702	ewah_bitmap.c	FUNCTION_27
0x400202e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	ewah_bitmap.c	FUNCTION_27
0x4002032	        0x488b4008	                mov rax, qword [rax + 8]	       703	ewah_bitmap.c	FUNCTION_27
0x4002036	        0x48c1e003	                              shl rax, 3	       703	ewah_bitmap.c	FUNCTION_27
0x400203a	        0x488945f8	                mov qword [rbp - 8], rax	       703	ewah_bitmap.c	FUNCTION_27
0x400203e	            0xeb22	                           jmp 0x4002062	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002040	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002043	          0xc1e005	                              shl eax, 5	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002046	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002049	            0x89c1	                            mov ecx, eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400204b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400204f	        0x488d5001	                      lea rdx, [rax + 1]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002053	        0x488955f0	             mov qword [rbp - 0x10], rdx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002057	           0xfb600	                   movzx eax, byte [rax]	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400205a	           0xfb6c0	                           movzx eax, al	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400205d	             0x1c8	                            add eax, ecx	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400205f	          0x8945ec	             mov dword [rbp - 0x14], eax	       706	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002062	        0x488b45f8	                mov rax, qword [rbp - 8]	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002066	        0x488d50ff	                      lea rdx, [rax - 1]	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400206a	        0x488955f8	                mov qword [rbp - 8], rdx	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x400206e	          0x4885c0	                           test rax, rax	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002071	            0x75cd	                           jne 0x4002040	       705	ewah_bitmap.c	FUNCTION_27	WHILE_1
0x4002073	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       708	ewah_bitmap.c	FUNCTION_27
0x4002076	              0x5d	                                 pop rbp	       709	ewah_bitmap.c	FUNCTION_27
0x4002077	              0xc3	                                     ret	       709	ewah_bitmap.c	FUNCTION_27
ewah_new	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,2	24
0x4000e90	              0x55	                                push rbp	       280	ewah_bitmap.c	FUNCTION_14
0x4000e91	          0x4889e5	                            mov rbp, rsp	       280	ewah_bitmap.c	FUNCTION_14
0x4000e94	        0x4883ec10	                           sub rsp, 0x10	       280	ewah_bitmap.c	FUNCTION_14
0x4000e98	      0xbf28000000	                           mov edi, 0x28	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000e9d	      0xe800000000	                          call 0x4000ea2	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000ea2	        0x488945f8	                mov qword [rbp - 8], rax	       283	ewah_bitmap.c	FUNCTION_14	CALL_1
0x4000ea6	        0x488b45f8	                mov rax, qword [rbp - 8]	       284	ewah_bitmap.c	FUNCTION_14
0x4000eaa	    0x48c740102000	           mov qword [rax + 0x10], 0x20 	       284	ewah_bitmap.c	FUNCTION_14
0x4000eb2	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	ewah_bitmap.c	FUNCTION_14
0x4000eb6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       285	ewah_bitmap.c	FUNCTION_14
0x4000eba	          0x4889c6	                            mov rsi, rax	       285	ewah_bitmap.c	FUNCTION_14
0x4000ebd	      0xbf08000000	                              mov edi, 8	       285	ewah_bitmap.c	FUNCTION_14
0x4000ec2	      0xe879f1ffff	                        call sym.st_mult	       285	ewah_bitmap.c	FUNCTION_14
0x4000ec7	          0x4889c7	                            mov rdi, rax	       285	ewah_bitmap.c	FUNCTION_14
0x4000eca	      0xe800000000	                          call 0x4000ecf	       285	ewah_bitmap.c	FUNCTION_14
0x4000ecf	          0x4889c2	                            mov rdx, rax	       285	ewah_bitmap.c	FUNCTION_14
0x4000ed2	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	ewah_bitmap.c	FUNCTION_14
0x4000ed6	          0x488910	                    mov qword [rax], rdx	       285	ewah_bitmap.c	FUNCTION_14
0x4000ed9	        0x488b45f8	                mov rax, qword [rbp - 8]	       287	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000edd	          0x4889c7	                            mov rdi, rax	       287	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000ee0	      0xe800000000	                          call 0x4000ee5	       287	ewah_bitmap.c	FUNCTION_14	CALL_2
0x4000ee5	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	ewah_bitmap.c	FUNCTION_14
0x4000ee9	              0xc9	                                   leave	       289	ewah_bitmap.c	FUNCTION_14
0x4000eea	              0xc3	                                     ret	       289	ewah_bitmap.c	FUNCTION_14
ewah_each_bit	WHILE,1:ELSE,1:FOR,3:IF,2:DO,0:SWITCH,0:functions,0:CALL,6	87
0x4000d4f	              0x55	                                push rbp	       247	ewah_bitmap.c	FUNCTION_13
0x4000d50	          0x4889e5	                            mov rbp, rsp	       247	ewah_bitmap.c	FUNCTION_13
0x4000d53	        0x4883ec50	                           sub rsp, 0x50	       247	ewah_bitmap.c	FUNCTION_13
0x4000d57	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       247	ewah_bitmap.c	FUNCTION_13
0x4000d5b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       247	ewah_bitmap.c	FUNCTION_13
0x4000d5f	        0x488955b8	             mov qword [rbp - 0x48], rdx	       247	ewah_bitmap.c	FUNCTION_13
0x4000d63	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       248	ewah_bitmap.c	FUNCTION_13
0x4000d6b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       249	ewah_bitmap.c	FUNCTION_13
0x4000d73	      0xe903010000	                           jmp 0x4000e7b	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d7c	          0x488b00	                    mov rax, qword [rax]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d7f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d83	        0x48c1e203	                              shl rdx, 3	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d87	          0x4801d0	                            add rax, rdx	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d8a	        0x488945f0	             mov qword [rbp - 0x10], rax	       253	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000d8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x4000d92	          0x4889c7	                            mov rdi, rax	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x4000d95	      0xe8f8f2ffff	                call sym.rlw_get_run_bit	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x4000d9a	            0x85c0	                           test eax, eax	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x4000d9c	            0x7448	                            je 0x4000de6	       255	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_1
0x4000d9e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x4000da2	          0x4889c7	                            mov rdi, rax	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x4000da5	      0xe8d2f3ffff	            call sym.rlw_get_running_len	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x4000daa	        0x48c1e006	                              shl rax, 6	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x4000dae	        0x488945f8	                mov qword [rbp - 8], rax	       256	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_2
0x4000db2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000dba	            0xeb1e	                           jmp 0x4000dda	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000dbc	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dc0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dc4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dc8	          0x4889ce	                            mov rsi, rcx	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dcb	          0x4889d7	                            mov rdi, rdx	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dce	            0xffd0	                                call rax	       258	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	CALL_3
0x4000dd0	      0x488345e801	               add qword [rbp - 0x18], 1	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000dd5	      0x488345d801	               add qword [rbp - 0x28], 1	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000dda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000dde	        0x483b45f8	                cmp rax, qword [rbp - 8]	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000de2	            0x72d8	                            jb 0x4000dbc	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000de4	            0xeb14	                           jmp 0x4000dfa	       257	ewah_bitmap.c	FUNCTION_13	WHILE_1	IF_1	FOR_1
0x4000de6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000dea	          0x4889c7	                            mov rdi, rax	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000ded	      0xe88af3ffff	            call sym.rlw_get_running_len	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000df2	        0x48c1e006	                              shl rax, 6	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000df6	        0x480145d8	            add qword [rbp - 0x28], rax 	       260	ewah_bitmap.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x4000dfa	      0x488345e001	               add qword [rbp - 0x20], 1	       263	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000dff	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e07	            0xeb60	                           jmp 0x4000e69	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e09	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e10	            0xeb45	                           jmp 0x4000e57	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e12	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e16	          0x488b00	                    mov rax, qword [rax]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e19	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e1d	        0x48c1e203	                              shl rdx, 3	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e21	          0x4801d0	                            add rax, rdx	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e24	          0x488b10	                    mov rdx, qword [rax]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e27	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e2a	            0x89c1	                            mov ecx, eax	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e2c	          0x48d3ea	                             shr rdx, cl	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e2f	          0x4889d0	                            mov rax, rdx	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e32	          0x83e001	                              and eax, 1	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e35	          0x4885c0	                           test rax, rax	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e38	            0x7414	                            je 0x4000e4e	       270	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	IF_2
0x4000e3a	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e3e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e42	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e46	          0x4889ce	                            mov rsi, rcx	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e49	          0x4889d7	                            mov rdi, rdx	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e4c	            0xffd0	                                call rax	       271	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3	CALL_6
0x4000e4e	        0x8345d401	               add dword [rbp - 0x2c], 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e52	      0x488345d801	               add qword [rbp - 0x28], 1	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e57	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e5a	          0x83f83f	                           cmp eax, 0x3f	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e5d	            0x76b3	                           jbe 0x4000e12	       269	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	FOR_3
0x4000e5f	      0x488345e001	               add qword [rbp - 0x20], 1	       274	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2
0x4000e64	      0x488345e801	               add qword [rbp - 0x18], 1	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e6d	          0x4889c7	                            mov rdi, rax	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e70	      0xe81df3ffff	          call sym.rlw_get_literal_words	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e75	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e79	            0x778e	                            ja 0x4000e09	       265	ewah_bitmap.c	FUNCTION_13	WHILE_1	FOR_2	CALL_5
0x4000e7b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000e7f	        0x488b4008	                mov rax, qword [rax + 8]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000e83	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000e87	     0xf87ebfeffff	                            ja 0x4000d78	       252	ewah_bitmap.c	FUNCTION_13	WHILE_1
0x4000e8d	              0x90	                                     nop	       277	ewah_bitmap.c	FUNCTION_13
0x4000e8e	              0xc9	                                   leave	       277	ewah_bitmap.c	FUNCTION_13
0x4000e8f	              0xc3	                                     ret	       277	ewah_bitmap.c	FUNCTION_13
rlw_get_literal_words	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	8
0x4000192	              0x55	                                push rbp	        67	ewok_rlw.h	FUNCTION_60
0x4000193	          0x4889e5	                            mov rbp, rsp	        67	ewok_rlw.h	FUNCTION_60
0x4000196	        0x48897df8	                mov qword [rbp - 8], rdi	        67	ewok_rlw.h	FUNCTION_60
0x400019a	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewok_rlw.h	FUNCTION_60
0x400019e	          0x488b00	                    mov rax, qword [rax]	        68	ewok_rlw.h	FUNCTION_60
0x40001a1	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_60
0x40001a5	              0x5d	                                 pop rbp	        69	ewok_rlw.h	FUNCTION_60
0x40001a6	              0xc3	                                     ret	        69	ewok_rlw.h	FUNCTION_60
buffer_grow	WHILE,0:ELSE,0:FOR,0:IF,1:DO,0:SWITCH,0:functions,0:CALL,0	46
0x400027e	              0x55	                                push rbp	        34	ewah_bitmap.c	FUNCTION_3
0x400027f	          0x4889e5	                            mov rbp, rsp	        34	ewah_bitmap.c	FUNCTION_3
0x4000282	        0x4883ec20	                           sub rsp, 0x20	        34	ewah_bitmap.c	FUNCTION_3
0x4000286	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	ewah_bitmap.c	FUNCTION_3
0x400028a	        0x488975e0	             mov qword [rbp - 0x20], rsi	        34	ewah_bitmap.c	FUNCTION_3
0x400028e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        35	ewah_bitmap.c	FUNCTION_3
0x4000292	        0x488b4020	            mov rax, qword [rax + 0x20] 	        35	ewah_bitmap.c	FUNCTION_3
0x4000296	          0x4889c2	                            mov rdx, rax	        35	ewah_bitmap.c	FUNCTION_3
0x4000299	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        35	ewah_bitmap.c	FUNCTION_3
0x400029d	          0x488b00	                    mov rax, qword [rax]	        35	ewah_bitmap.c	FUNCTION_3
0x40002a0	          0x4829c2	                            sub rdx, rax	        35	ewah_bitmap.c	FUNCTION_3
0x40002a3	          0x4889d0	                            mov rax, rdx	        35	ewah_bitmap.c	FUNCTION_3
0x40002a6	        0x488945f8	                mov qword [rbp - 8], rax	        35	ewah_bitmap.c	FUNCTION_3
0x40002aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002ae	        0x488b4010	            mov rax, qword [rax + 0x10] 	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002b2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002b6	            0x7360	                           jae 0x4000318	        37	ewah_bitmap.c	FUNCTION_3	IF_1
0x40002b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	ewah_bitmap.c	FUNCTION_3
0x40002bc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        40	ewah_bitmap.c	FUNCTION_3
0x40002c0	        0x48895010	             mov qword [rax + 0x10], rdx	        40	ewah_bitmap.c	FUNCTION_3
0x40002c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3
0x40002c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	        41	ewah_bitmap.c	FUNCTION_3
0x40002cc	          0x4889c6	                            mov rsi, rax	        41	ewah_bitmap.c	FUNCTION_3
0x40002cf	      0xbf08000000	                              mov edi, 8	        41	ewah_bitmap.c	FUNCTION_3
0x40002d4	      0xe867fdffff	                        call sym.st_mult	        41	ewah_bitmap.c	FUNCTION_3
0x40002d9	          0x4889c2	                            mov rdx, rax	        41	ewah_bitmap.c	FUNCTION_3
0x40002dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3
0x40002e0	          0x488b00	                    mov rax, qword [rax]	        41	ewah_bitmap.c	FUNCTION_3
0x40002e3	          0x4889d6	                            mov rsi, rdx	        41	ewah_bitmap.c	FUNCTION_3
0x40002e6	          0x4889c7	                            mov rdi, rax	        41	ewah_bitmap.c	FUNCTION_3
0x40002e9	      0xe800000000	                          call 0x40002ee	        41	ewah_bitmap.c	FUNCTION_3
0x40002ee	          0x4889c2	                            mov rdx, rax	        41	ewah_bitmap.c	FUNCTION_3
0x40002f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	ewah_bitmap.c	FUNCTION_3
0x40002f5	          0x488910	                    mov qword [rax], rdx	        41	ewah_bitmap.c	FUNCTION_3
0x40002f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	ewah_bitmap.c	FUNCTION_3
0x40002fc	          0x488b00	                    mov rax, qword [rax]	        42	ewah_bitmap.c	FUNCTION_3
0x40002ff	        0x488b55f8	                mov rdx, qword [rbp - 8]	        42	ewah_bitmap.c	FUNCTION_3
0x4000303	        0x48c1ea03	                              shr rdx, 3	        42	ewah_bitmap.c	FUNCTION_3
0x4000307	        0x48c1e203	                              shl rdx, 3	        42	ewah_bitmap.c	FUNCTION_3
0x400030b	          0x4801c2	                            add rdx, rax	        42	ewah_bitmap.c	FUNCTION_3
0x400030e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	ewah_bitmap.c	FUNCTION_3
0x4000312	        0x48895020	             mov qword [rax + 0x20], rdx	        42	ewah_bitmap.c	FUNCTION_3
0x4000316	            0xeb01	                           jmp 0x4000319	        42	ewah_bitmap.c	FUNCTION_3
0x4000318	              0x90	                                     nop	        38	ewah_bitmap.c	FUNCTION_3	IF_1
0x4000319	              0xc9	                                   leave	        43	ewah_bitmap.c	FUNCTION_3
0x400031a	              0xc3	                                     ret	        43	ewah_bitmap.c	FUNCTION_3
rlw_set_running_len	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	22
0x400012c	              0x55	                                push rbp	        56	ewok_rlw.h	FUNCTION_58
0x400012d	          0x4889e5	                            mov rbp, rsp	        56	ewok_rlw.h	FUNCTION_58
0x4000130	        0x48897df8	                mov qword [rbp - 8], rdi	        56	ewok_rlw.h	FUNCTION_58
0x4000134	        0x488975f0	             mov qword [rbp - 0x10], rsi	        56	ewok_rlw.h	FUNCTION_58
0x4000138	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	ewok_rlw.h	FUNCTION_58
0x400013c	          0x488b10	                    mov rdx, qword [rax]	        57	ewok_rlw.h	FUNCTION_58
0x400013f	    0x48b8feffffff	                 movabs rax, 0x1fffffffe	        57	ewok_rlw.h	FUNCTION_58
0x4000149	          0x4809c2	                             or rdx, rax	        57	ewok_rlw.h	FUNCTION_58
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	        57	ewok_rlw.h	FUNCTION_58
0x4000150	          0x488910	                    mov qword [rax], rdx	        57	ewok_rlw.h	FUNCTION_58
0x4000153	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	ewok_rlw.h	FUNCTION_58
0x4000157	          0x488b00	                    mov rax, qword [rax]	        58	ewok_rlw.h	FUNCTION_58
0x400015a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        58	ewok_rlw.h	FUNCTION_58
0x400015e	        0x488d0c12	                    lea rcx, [rdx + rdx]	        58	ewok_rlw.h	FUNCTION_58
0x4000162	    0x48ba01000000	          movabs rdx, 0xfffffffe00000001	        58	ewok_rlw.h	FUNCTION_58
0x400016c	          0x4809ca	                             or rdx, rcx	        58	ewok_rlw.h	FUNCTION_58
0x400016f	          0x4821c2	                            and rdx, rax	        58	ewok_rlw.h	FUNCTION_58
0x4000172	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	ewok_rlw.h	FUNCTION_58
0x4000176	          0x488910	                    mov qword [rax], rdx	        58	ewok_rlw.h	FUNCTION_58
0x4000179	              0x90	                                     nop	        59	ewok_rlw.h	FUNCTION_58
0x400017a	              0x5d	                                 pop rbp	        59	ewok_rlw.h	FUNCTION_58
0x400017b	              0xc3	                                     ret	        59	ewok_rlw.h	FUNCTION_58
rlwit_word_size	WHILE,0:ELSE,0:FOR,0:IF,0:DO,0:SWITCH,0:functions,0:CALL,0	11
0x400022c	              0x55	                                push rbp	       104	ewok_rlw.h	FUNCTION_63
0x400022d	          0x4889e5	                            mov rbp, rsp	       104	ewok_rlw.h	FUNCTION_63
0x4000230	        0x48897df8	                mov qword [rbp - 8], rdi	       104	ewok_rlw.h	FUNCTION_63
0x4000234	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_63
0x4000238	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       105	ewok_rlw.h	FUNCTION_63
0x400023b	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_63
0x400023f	          0x8b4028	            mov eax, dword [rax + 0x28] 	       105	ewok_rlw.h	FUNCTION_63
0x4000242	             0x1d0	                            add eax, edx	       105	ewok_rlw.h	FUNCTION_63
0x4000244	            0x4898	                                    cdqe	       105	ewok_rlw.h	FUNCTION_63
0x4000246	              0x5d	                                 pop rbp	       106	ewok_rlw.h	FUNCTION_63
0x4000247	              0xc3	                                     ret	       106	ewok_rlw.h	FUNCTION_63
ewah_or	WHILE,2:ELSE,3:FOR,1:IF,4:DO,0:SWITCH,0:functions,0:CALL,18	180
0x4001c51	              0x55	                                push rbp	       607	ewah_bitmap.c	FUNCTION_24
0x4001c52	          0x4889e5	                            mov rbp, rsp	       607	ewah_bitmap.c	FUNCTION_24
0x4001c55	    0x4881ecd00000	                           sub rsp, 0xd0	       607	ewah_bitmap.c	FUNCTION_24
0x4001c5c	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       607	ewah_bitmap.c	FUNCTION_24
0x4001c63	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       607	ewah_bitmap.c	FUNCTION_24
0x4001c6a	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       607	ewah_bitmap.c	FUNCTION_24
0x4001c71	    0x64488b042528	                mov rax, qword fs:[0x28]	       607	ewah_bitmap.c	FUNCTION_24
0x4001c7a	        0x488945f8	                mov qword [rbp - 8], rax	       607	ewah_bitmap.c	FUNCTION_24
0x4001c7e	            0x31c0	                            xor eax, eax	       607	ewah_bitmap.c	FUNCTION_24
0x4001c80	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001c87	        0x488d4580	                   lea rax, [rbp - 0x80]	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001c8b	          0x4889d6	                            mov rsi, rdx	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001c8e	          0x4889c7	                            mov rdi, rax	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001c91	      0xe800000000	                          call 0x4001c96	       612	ewah_bitmap.c	FUNCTION_24	CALL_1
0x4001c96	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001c9d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001ca1	          0x4889d6	                            mov rsi, rdx	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001ca4	          0x4889c7	                            mov rdi, rax	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001ca7	      0xe800000000	                          call 0x4001cac	       613	ewah_bitmap.c	FUNCTION_24	CALL_2
0x4001cac	      0xe9fe010000	                           jmp 0x4001eaf	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001cb1	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cb4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cb7	            0x39c2	                            cmp edx, eax	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cb9	            0x7d18	                           jge 0x4001cd3	       619	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cbb	        0x488d4580	                   lea rax, [rbp - 0x80]	       620	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cbf	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       620	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cc6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cca	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cd1	            0xeb16	                           jmp 0x4001ce9	       621	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_1
0x4001cd3	        0x488d45c0	                   lea rax, [rbp - 0x40]	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x4001cd7	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       623	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x4001cde	        0x488d4580	                   lea rax, [rbp - 0x80]	       624	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x4001ce2	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       624	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_1
0x4001ce9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001cf0	          0x8b4034	            mov eax, dword [rax + 0x34] 	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001cf3	            0x85c0	                           test eax, eax	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001cf5	            0x7461	                            je 0x4001d58	       627	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001cf7	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       629	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001cfe	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       629	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001d01	          0x4863d0	                         movsxd rdx, eax	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001d04	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001d0b	      0xbe00000000	                              mov esi, 0	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001d10	          0x4889c7	                            mov rdi, rax	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001d13	      0xe800000000	                          call 0x4001d18	       628	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_5
0x4001d18	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       631	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001d1f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       631	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001d22	          0x4863d0	                         movsxd rdx, eax	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001d25	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001d2c	          0x4889d6	                            mov rsi, rdx	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001d2f	          0x4889c7	                            mov rdi, rax	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001d32	      0xe800000000	                          call 0x4001d37	       630	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_6
0x4001d37	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       633	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001d3e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       633	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2
0x4001d41	          0x4863d0	                         movsxd rdx, eax	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d44	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d4b	          0x4889d6	                            mov rsi, rdx	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d4e	          0x4889c7	                            mov rdi, rax	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d51	      0xe800000000	                          call 0x4001d56	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d56	            0xeb78	                           jmp 0x4001dd0	       632	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	IF_2	CALL_7
0x4001d58	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       636	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001d5f	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       636	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001d62	          0x4863d0	                         movsxd rdx, eax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d65	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d6c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d73	      0xb900000000	                              mov ecx, 0	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d78	          0x4889c7	                            mov rdi, rax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d7b	      0xe800000000	                          call 0x4001d80	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d80	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       635	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_8
0x4001d87	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       638	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001d8e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       638	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001d91	            0x4898	                                    cdqe	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001d93	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001d9a	          0x4889c2	                            mov rdx, rax	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001d9d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001da4	      0xbe00000000	                              mov esi, 0	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001da9	          0x4889c7	                            mov rdi, rax	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001dac	      0xe800000000	                          call 0x4001db1	       637	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_9
0x4001db1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       640	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001db8	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       640	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2
0x4001dbb	          0x4863d0	                         movsxd rdx, eax	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001dbe	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001dc5	          0x4889d6	                            mov rsi, rdx	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001dc8	          0x4889c7	                            mov rdi, rax	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001dcb	      0xe800000000	                          call 0x4001dd0	       639	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2	ELSE_2	CALL_10
0x4001dd0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001dd3	            0x85c0	                           test eax, eax	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001dd5	     0xf8fd6feffff	                            jg 0x4001cb1	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001ddb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001dde	            0x85c0	                           test eax, eax	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001de0	     0xf8fcbfeffff	                            jg 0x4001cb1	       616	ewah_bitmap.c	FUNCTION_24	WHILE_1	WHILE_2
0x4001de6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       646	ewah_bitmap.c	FUNCTION_24	WHILE_1
0x4001de9	          0x4863d0	                         movsxd rdx, eax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001dec	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       645	ewah_bitmap.c	FUNCTION_24	WHILE_1
0x4001def	            0x4898	                                    cdqe	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001df1	          0x4889d6	                            mov rsi, rdx	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001df4	          0x4889c7	                            mov rdi, rax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001df7	      0xe84ce4ffff	                       call sym.min_size	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001dfc	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       644	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_11
0x4001e03	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x4001e0b	     0xf849e000000	                            je 0x4001eaf	       648	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3
0x4001e11	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e1c	            0xeb55	                           jmp 0x4001e73	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e1e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e22	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e26	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e2d	          0x4801ca	                            add rdx, rcx	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e30	        0x48c1e203	                              shl rdx, 3	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e34	          0x4801d0	                            add rax, rdx	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e37	          0x488b10	                    mov rdx, qword [rax]	       653	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e3a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e3e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e42	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e49	          0x4801f1	                            add rcx, rsi	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e4c	        0x48c1e103	                              shl rcx, 3	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e50	          0x4801c8	                            add rax, rcx	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e53	          0x488b00	                    mov rax, qword [rax]	       654	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e56	          0x4809c2	                             or rdx, rax	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001e59	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001e60	          0x4889d6	                            mov rsi, rdx	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001e63	          0x4889c7	                            mov rdi, rax	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001e66	      0xe800000000	                          call 0x4001e6b	       652	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1	CALL_12
0x4001e6b	    0x48838568ffff	               add qword [rbp - 0x98], 1	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e73	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e7a	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e81	            0x729b	                            jb 0x4001e1e	       651	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	FOR_1
0x4001e83	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001e8a	        0x488d4580	                   lea rax, [rbp - 0x80]	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001e8e	          0x4889d6	                            mov rsi, rdx	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001e91	          0x4889c7	                            mov rdi, rax	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001e94	      0xe800000000	                          call 0x4001e99	       658	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_13
0x4001e99	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001ea0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001ea4	          0x4889d6	                            mov rsi, rdx	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001ea7	          0x4889c7	                            mov rdi, rax	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001eaa	      0xe800000000	                          call 0x4001eaf	       659	ewah_bitmap.c	FUNCTION_24	WHILE_1	IF_3	CALL_14
0x4001eaf	        0x488d4580	                   lea rax, [rbp - 0x80]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001eb3	          0x4889c7	                            mov rdi, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001eb6	      0xe871e3ffff	                call sym.rlwit_word_size	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ebb	          0x4885c0	                           test rax, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ebe	            0x7415	                            je 0x4001ed5	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ec0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ec4	          0x4889c7	                            mov rdi, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ec7	      0xe860e3ffff	                call sym.rlwit_word_size	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ecc	          0x4885c0	                           test rax, rax	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ecf	     0xf85fbfeffff	                           jne 0x4001dd0	       615	ewah_bitmap.c	FUNCTION_24	WHILE_1	CALL_4
0x4001ed5	        0x488d4580	                   lea rax, [rbp - 0x80]	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x4001ed9	          0x4889c7	                            mov rdi, rax	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x4001edc	      0xe84be3ffff	                call sym.rlwit_word_size	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x4001ee1	          0x4885c0	                           test rax, rax	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x4001ee4	            0x7421	                            je 0x4001f07	       663	ewah_bitmap.c	FUNCTION_24	IF_4	CALL_15
0x4001ee6	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001eed	        0x488d4580	                   lea rax, [rbp - 0x80]	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001ef1	      0xb900000000	                              mov ecx, 0	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001ef6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001efd	          0x4889c7	                            mov rdi, rax	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001f00	      0xe800000000	                          call 0x4001f05	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001f05	            0xeb1f	                           jmp 0x4001f26	       664	ewah_bitmap.c	FUNCTION_24	CALL_16
0x4001f07	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f0e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f12	      0xb900000000	                              mov ecx, 0	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f17	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f1e	          0x4889c7	                            mov rdi, rax	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f21	      0xe800000000	                          call 0x4001f26	       666	ewah_bitmap.c	FUNCTION_24	CALL_17
0x4001f26	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f2d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f31	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f38	        0x488b4018	            mov rax, qword [rax + 0x18] 	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f3c	          0x4889d6	                            mov rsi, rdx	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f3f	          0x4889c7	                            mov rdi, rax	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f42	      0xe81ce3ffff	                       call sym.max_size	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f47	          0x4889c2	                            mov rdx, rax	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f4a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f51	        0x48895018	             mov qword [rax + 0x18], rdx	       668	ewah_bitmap.c	FUNCTION_24	CALL_18
0x4001f55	              0x90	                                     nop	       669	ewah_bitmap.c	FUNCTION_24
0x4001f56	        0x488b45f8	                mov rax, qword [rbp - 8]	       669	ewah_bitmap.c	FUNCTION_24
0x4001f5a	    0x644833042528	                xor rax, qword fs:[0x28]	       669	ewah_bitmap.c	FUNCTION_24
0x4001f63	            0x7405	                            je 0x4001f6a	       669	ewah_bitmap.c	FUNCTION_24
0x4001f65	      0xe800000000	                          call 0x4001f6a	       669	ewah_bitmap.c	FUNCTION_24
0x4001f6a	              0xc9	                                   leave	       669	ewah_bitmap.c	FUNCTION_24
0x4001f6b	              0xc3	                                     ret	       669	ewah_bitmap.c	FUNCTION_24
add_empty_words	WHILE,1:ELSE,1:FOR,0:IF,6:DO,0:SWITCH,0:functions,0:CALL,16	122
0x40003df	              0x55	                                push rbp	        60	ewah_bitmap.c	FUNCTION_6
0x40003e0	          0x4889e5	                            mov rbp, rsp	        60	ewah_bitmap.c	FUNCTION_6
0x40003e3	        0x4883ec40	                           sub rsp, 0x40	        60	ewah_bitmap.c	FUNCTION_6
0x40003e7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        60	ewah_bitmap.c	FUNCTION_6
0x40003eb	          0x8975d4	             mov dword [rbp - 0x2c], esi	        60	ewah_bitmap.c	FUNCTION_6
0x40003ee	        0x488955c8	             mov qword [rbp - 0x38], rdx	        60	ewah_bitmap.c	FUNCTION_6
0x40003f2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        61	ewah_bitmap.c	FUNCTION_6
0x40003fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x40003fe	        0x488b4020	            mov rax, qword [rax + 0x20] 	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000402	          0x4889c7	                            mov rdi, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000405	      0xe888fcffff	                call sym.rlw_get_run_bit	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400040a	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400040d	            0x742c	                            je 0x400043b	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400040f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000413	        0x488b4020	            mov rax, qword [rax + 0x20] 	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000417	          0x4889c7	                            mov rdi, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400041a	      0xe8dbfdffff	                       call sym.rlw_size	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x400041f	          0x4885c0	                           test rax, rax	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000422	            0x7517	                           jne 0x400043b	        64	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_2
0x4000424	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x4000428	        0x488b4020	            mov rax, qword [rax + 0x20] 	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x400042c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x400042f	            0x89d6	                            mov esi, edx	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x4000431	          0x4889c7	                            mov rdi, rax	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x4000434	      0xe86dfcffff	                call sym.rlw_set_run_bit	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x4000439	            0xeb5b	                           jmp 0x4000496	        65	ewah_bitmap.c	FUNCTION_6	IF_1	CALL_3
0x400043b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x400043f	        0x488b4020	            mov rax, qword [rax + 0x20] 	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000443	          0x4889c7	                            mov rdi, rax	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000446	      0xe847fdffff	          call sym.rlw_get_literal_words	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x400044b	          0x4885c0	                           test rax, rax	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x400044e	            0x7515	                           jne 0x4000465	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000450	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000454	        0x488b4020	            mov rax, qword [rax + 0x20] 	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000458	          0x4889c7	                            mov rdi, rax	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x400045b	      0xe832fcffff	                call sym.rlw_get_run_bit	        67	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000460	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000463	            0x7431	                            je 0x4000496	        66	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000465	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000469	      0xbe00000000	                              mov esi, 0	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x400046e	          0x4889c7	                            mov rdi, rax	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000471	      0xe821ffffff	                call sym.buffer_push_rlw	        68	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000476	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400047a	            0x7415	                            je 0x4000491	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400047c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000480	        0x488b4020	            mov rax, qword [rax + 0x20] 	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000484	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000487	            0x89d6	                            mov esi, edx	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000489	          0x4889c7	                            mov rdi, rax	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x400048c	      0xe815fcffff	                call sym.rlw_set_run_bit	        69	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000491	      0x488345e801	               add qword [rbp - 0x18], 1	        70	ewah_bitmap.c	FUNCTION_6	ELSE_1	IF_2
0x4000496	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x400049a	        0x488b4020	            mov rax, qword [rax + 0x20] 	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x400049e	          0x4889c7	                            mov rdi, rax	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x40004a1	      0xe8d6fcffff	            call sym.rlw_get_running_len	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x40004a6	        0x488945f0	             mov qword [rbp - 0x10], rax	        73	ewah_bitmap.c	FUNCTION_6	CALL_8
0x40004aa	      0xb8ffffffff	                     mov eax, 0xffffffff	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004af	        0x482b45f0	             sub rax, qword [rbp - 0x10]	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004b3	          0x4889c2	                            mov rdx, rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004ba	          0x4889d6	                            mov rsi, rdx	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004bd	          0x4889c7	                            mov rdi, rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004c0	      0xe883fdffff	                       call sym.min_size	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004c5	        0x488945f8	                mov qword [rbp - 8], rax	        74	ewah_bitmap.c	FUNCTION_6	CALL_9
0x40004c9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004d1	          0x4801c2	                            add rdx, rax	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004d8	        0x488b4020	            mov rax, qword [rax + 0x20] 	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004dc	          0x4889d6	                            mov rsi, rdx	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004df	          0x4889c7	                            mov rdi, rax	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004e2	      0xe845fcffff	            call sym.rlw_set_running_len	        76	ewah_bitmap.c	FUNCTION_6	CALL_10
0x40004e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	ewah_bitmap.c	FUNCTION_6
0x40004eb	        0x482945c8	             sub qword [rbp - 0x38], rax	        77	ewah_bitmap.c	FUNCTION_6
0x40004ef	            0xeb54	                           jmp 0x4000545	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x40004f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x40004f5	      0xbe00000000	                              mov esi, 0	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x40004fa	          0x4889c7	                            mov rdi, rax	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x40004fd	      0xe895feffff	                call sym.buffer_push_rlw	        80	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_11
0x4000502	      0x488345e801	               add qword [rbp - 0x18], 1	        81	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000507	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x400050b	            0x7415	                            je 0x4000522	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x400050d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000511	        0x488b4020	            mov rax, qword [rax + 0x20] 	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000515	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000518	            0x89d6	                            mov esi, edx	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x400051a	          0x4889c7	                            mov rdi, rax	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x400051d	      0xe884fbffff	                call sym.rlw_set_run_bit	        82	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_12
0x4000522	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4000526	        0x488b4020	            mov rax, qword [rax + 0x20] 	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x400052a	      0xbeffffffff	                     mov esi, 0xffffffff	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x400052f	          0x4889c7	                            mov rdi, rax	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4000532	      0xe8f5fbffff	            call sym.rlw_set_running_len	        83	ewah_bitmap.c	FUNCTION_6	WHILE_1	CALL_13
0x4000537	    0x48b801000000	          movabs rax, 0xffffffff00000001	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000541	        0x480145c8	            add qword [rbp - 0x38], rax 	        84	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000545	      0xb8feffffff	                     mov eax, 0xfffffffe	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x400054a	        0x483945c8	            cmp qword [rbp - 0x38], rax 	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x400054e	            0x77a1	                            ja 0x40004f1	        79	ewah_bitmap.c	FUNCTION_6	WHILE_1
0x4000550	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x4000555	            0x7448	                            je 0x400059f	        87	ewah_bitmap.c	FUNCTION_6	IF_5
0x4000557	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x400055b	      0xbe00000000	                              mov esi, 0	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x4000560	          0x4889c7	                            mov rdi, rax	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x4000563	      0xe82ffeffff	                call sym.buffer_push_rlw	        88	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_14
0x4000568	      0x488345e801	               add qword [rbp - 0x18], 1	        89	ewah_bitmap.c	FUNCTION_6	IF_5
0x400056d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000571	            0x7415	                            je 0x4000588	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000573	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000577	        0x488b4020	            mov rax, qword [rax + 0x20] 	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x400057b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x400057e	            0x89d6	                            mov esi, edx	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000580	          0x4889c7	                            mov rdi, rax	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000583	      0xe81efbffff	                call sym.rlw_set_run_bit	        91	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_15
0x4000588	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x400058c	        0x488b4020	            mov rax, qword [rax + 0x20] 	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x4000590	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x4000594	          0x4889d6	                            mov rsi, rdx	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x4000597	          0x4889c7	                            mov rdi, rax	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x400059a	      0xe88dfbffff	            call sym.rlw_set_running_len	        92	ewah_bitmap.c	FUNCTION_6	IF_5	CALL_16
0x400059f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	ewah_bitmap.c	FUNCTION_6
0x40005a3	              0xc9	                                   leave	        96	ewah_bitmap.c	FUNCTION_6
0x40005a4	              0xc3	                                     ret	        96	ewah_bitmap.c	FUNCTION_6
ewah_not	WHILE,1:ELSE,0:FOR,1:IF,0:DO,0:SWITCH,0:functions,0:CALL,2	47
0x4001275	              0x55	                                push rbp	       380	ewah_bitmap.c	FUNCTION_20
0x4001276	          0x4889e5	                            mov rbp, rsp	       380	ewah_bitmap.c	FUNCTION_20
0x4001279	        0x4883ec28	                           sub rsp, 0x28	       380	ewah_bitmap.c	FUNCTION_20
0x400127d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       380	ewah_bitmap.c	FUNCTION_20
0x4001281	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       381	ewah_bitmap.c	FUNCTION_20
0x4001289	      0xe982000000	                           jmp 0x4001310	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x400128e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001292	          0x488b00	                    mov rax, qword [rax]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001295	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001299	        0x48c1e203	                              shl rdx, 3	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x400129d	          0x4801d0	                            add rax, rdx	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x40012a0	        0x488945f0	             mov qword [rbp - 0x10], rax	       384	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x40012a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x40012a8	          0x4889c7	                            mov rdi, rax	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x40012ab	      0xe836eeffff	                call sym.rlw_xor_run_bit	       387	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_1
0x40012b0	      0x488345e001	               add qword [rbp - 0x20], 1	       388	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x40012b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x40012b9	          0x4889c7	                            mov rdi, rax	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x40012bc	      0xe8d1eeffff	          call sym.rlw_get_literal_words	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x40012c1	        0x488945f8	                mov qword [rbp - 8], rax	       390	ewah_bitmap.c	FUNCTION_20	WHILE_1	CALL_2
0x40012c5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012cd	            0xeb37	                           jmp 0x4001306	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012d3	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012d6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012da	        0x48c1e203	                              shl rdx, 3	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012de	          0x4801c2	                            add rdx, rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012e5	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012e8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012ec	        0x48c1e103	                              shl rcx, 3	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012f0	          0x4801c8	                            add rax, rcx	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012f3	          0x488b00	                    mov rax, qword [rax]	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012f6	          0x48f7d0	                                 not rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012f9	          0x488902	                    mov qword [rdx], rax	       392	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x40012fc	      0x488345e001	               add qword [rbp - 0x20], 1	       393	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4001301	      0x488345e801	               add qword [rbp - 0x18], 1	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4001306	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x400130a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x400130e	            0x72bf	                            jb 0x40012cf	       391	ewah_bitmap.c	FUNCTION_20	WHILE_1	FOR_1
0x4001310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001314	        0x488b4008	                mov rax, qword [rax + 8]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001318	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x400131c	     0xf876cffffff	                            ja 0x400128e	       383	ewah_bitmap.c	FUNCTION_20	WHILE_1
0x4001322	              0x90	                                     nop	       396	ewah_bitmap.c	FUNCTION_20
0x4001323	              0xc9	                                   leave	       396	ewah_bitmap.c	FUNCTION_20
0x4001324	              0xc3	                                     ret	       396	ewah_bitmap.c	FUNCTION_20
ewah_free	WHILE,0:ELSE,0:FOR,0:IF,2:DO,0:SWITCH,0:functions,0:CALL,2	21
0x4000f2b	              0x55	                                push rbp	       300	ewah_bitmap.c	FUNCTION_16
0x4000f2c	          0x4889e5	                            mov rbp, rsp	       300	ewah_bitmap.c	FUNCTION_16
0x4000f2f	        0x4883ec10	                           sub rsp, 0x10	       300	ewah_bitmap.c	FUNCTION_16
0x4000f33	        0x48897df8	                mov qword [rbp - 8], rdi	       300	ewah_bitmap.c	FUNCTION_16
0x4000f37	      0x48837df800	                  cmp qword [rbp - 8], 0	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0x4000f3c	            0x742a	                            je 0x4000f68	       301	ewah_bitmap.c	FUNCTION_16	IF_1
0x4000f3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000f42	        0x488b4010	            mov rax, qword [rax + 0x10] 	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000f46	          0x4885c0	                           test rax, rax	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000f49	            0x740f	                            je 0x4000f5a	       304	ewah_bitmap.c	FUNCTION_16	IF_2
0x4000f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000f4f	          0x488b00	                    mov rax, qword [rax]	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000f52	          0x4889c7	                            mov rdi, rax	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000f55	      0xe800000000	                          call 0x4000f5a	       305	ewah_bitmap.c	FUNCTION_16	CALL_1
0x4000f5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000f5e	          0x4889c7	                            mov rdi, rax	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000f61	      0xe800000000	                          call 0x4000f66	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000f66	            0xeb01	                           jmp 0x4000f69	       307	ewah_bitmap.c	FUNCTION_16	CALL_2
0x4000f68	              0x90	                                     nop	       302	ewah_bitmap.c	FUNCTION_16	IF_1
0x4000f69	              0xc9	                                   leave	       308	ewah_bitmap.c	FUNCTION_16
0x4000f6a	              0xc3	                                     ret	       308	ewah_bitmap.c	FUNCTION_16
read_new_rlw	WHILE,1:ELSE,1:FOR,0:IF,2:DO,0:SWITCH,0:functions,0:CALL,3	63
0x4000f6b	              0x55	                                push rbp	       311	ewah_bitmap.c	FUNCTION_17
0x4000f6c	          0x4889e5	                            mov rbp, rsp	       311	ewah_bitmap.c	FUNCTION_17
0x4000f6f	        0x4883ec18	                           sub rsp, 0x18	       311	ewah_bitmap.c	FUNCTION_17
0x4000f73	        0x48897de8	             mov qword [rbp - 0x18], rdi	       311	ewah_bitmap.c	FUNCTION_17
0x4000f77	    0x48c745f80000	                  mov qword [rbp - 8], 0	       312	ewah_bitmap.c	FUNCTION_17
0x4000f7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       314	ewah_bitmap.c	FUNCTION_17
0x4000f83	    0x48c740200000	               mov qword [rax + 0x20], 0	       314	ewah_bitmap.c	FUNCTION_17
0x4000f8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	ewah_bitmap.c	FUNCTION_17
0x4000f8f	    0x48c740180000	               mov qword [rax + 0x18], 0	       315	ewah_bitmap.c	FUNCTION_17
0x4000f97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000f9b	          0x488b10	                    mov rdx, qword [rax]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000f9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000fa2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000fa6	        0x48c1e003	                              shl rax, 3	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000faa	          0x4801d0	                            add rax, rdx	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000fad	        0x488945f8	                mov qword [rbp - 8], rax	       318	ewah_bitmap.c	FUNCTION_17	WHILE_1
0x4000fb1	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fb5	          0x4889c7	                            mov rdi, rax	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fb8	      0xe8bff1ffff	            call sym.rlw_get_running_len	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fbd	          0x4889c2	                            mov rdx, rax	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fc4	        0x48895028	             mov qword [rax + 0x28], rdx	       320	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_1
0x4000fc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fcc	          0x4889c7	                            mov rdi, rax	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fcf	      0xe8bef1ffff	          call sym.rlw_get_literal_words	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fd4	          0x4889c2	                            mov rdx, rax	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fdb	        0x48895030	             mov qword [rax + 0x30], rdx	       321	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_2
0x4000fdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000fe3	          0x4889c7	                            mov rdi, rax	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000fe6	      0xe8a7f0ffff	                call sym.rlw_get_run_bit	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000feb	            0x89c2	                            mov edx, eax	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000fed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000ff1	          0x895038	             mov dword [rax + 0x38], edx	       322	ewah_bitmap.c	FUNCTION_17	WHILE_1	CALL_3
0x4000ff4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4000ff8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4000ffc	          0x4885c0	                           test rax, rax	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4000fff	            0x7551	                           jne 0x4001052	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4001001	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4001005	        0x488b4030	            mov rax, qword [rax + 0x30] 	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4001009	          0x4885c0	                           test rax, rax	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x400100c	            0x7544	                           jne 0x4001052	       324	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x400100e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001012	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001016	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400101a	        0x488b4008	                mov rax, qword [rax + 8]	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400101e	        0x4883e801	                              sub rax, 1	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001022	          0x4839c2	                            cmp rdx, rax	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001025	            0x7319	                           jae 0x4001040	       327	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001027	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400102b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400102f	        0x488d5001	                      lea rdx, [rax + 1]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001033	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001037	        0x48895010	             mov qword [rax + 0x10], rdx	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x400103b	      0xe957ffffff	                           jmp 0x4000f97	       328	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_2
0x4001040	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x4001044	        0x488b5008	                mov rdx, qword [rax + 8]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x4001048	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x400104c	        0x48895010	             mov qword [rax + 0x10], rdx	       330	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x4001050	            0xeb01	                           jmp 0x4001053	       331	ewah_bitmap.c	FUNCTION_17	WHILE_1	ELSE_1
0x4001052	              0x90	                                     nop	       325	ewah_bitmap.c	FUNCTION_17	WHILE_1	IF_1
0x4001053	              0xc9	                                   leave	       334	ewah_bitmap.c	FUNCTION_17
0x4001054	              0xc3	                                     ret	       334	ewah_bitmap.c	FUNCTION_17
