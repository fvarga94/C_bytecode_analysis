strbuf_avail	DO,0:CALL,0:ELSE,0:FOR,0:functions,0:SWITCH,0:IF,0:WHILE,0	18
0x400004b	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x400004c	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x4000053	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000057	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400005a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x400005d	            0x741b	                            je 0x400007a	       141	strbuf.h	FUNCTION_2
0x400005f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000063	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x4000066	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400006a	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x400006e	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x4000071	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x4000074	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x4000078	            0xeb05	                           jmp 0x400007f	       141	strbuf.h	FUNCTION_2
0x400007a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x400007f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x4000080	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
split_maildir	DO,0:CALL,11:ELSE,0:FOR,1:functions,0:SWITCH,0:IF,4:WHILE,0	123
0x4000841	              0x55	                                push rbp	       173	mailsplit.c	FUNCTION_17
0x4000842	          0x4889e5	                            mov rbp, rsp	       173	mailsplit.c	FUNCTION_17
0x4000845	        0x4883ec70	                           sub rsp, 0x70	       173	mailsplit.c	FUNCTION_17
0x4000849	        0x48897da8	             mov qword [rbp - 0x58], rdi	       173	mailsplit.c	FUNCTION_17
0x400084d	        0x488975a0	             mov qword [rbp - 0x60], rsi	       173	mailsplit.c	FUNCTION_17
0x4000851	          0x89559c	             mov dword [rbp - 0x64], edx	       173	mailsplit.c	FUNCTION_17
0x4000854	          0x894d98	             mov dword [rbp - 0x68], ecx	       173	mailsplit.c	FUNCTION_17
0x4000857	    0x64488b042528	                mov rax, qword fs:[0x28]	       173	mailsplit.c	FUNCTION_17
0x4000860	        0x488945f8	                mov qword [rbp - 8], rax	       173	mailsplit.c	FUNCTION_17
0x4000864	            0x31c0	                            xor eax, eax	       173	mailsplit.c	FUNCTION_17
0x4000866	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       174	mailsplit.c	FUNCTION_17
0x400086e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       175	mailsplit.c	FUNCTION_17
0x4000876	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	       176	mailsplit.c	FUNCTION_17
0x400087d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       178	mailsplit.c	FUNCTION_17
0x4000885	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       178	mailsplit.c	FUNCTION_17
0x400088c	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       178	mailsplit.c	FUNCTION_17
0x4000893	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       178	mailsplit.c	FUNCTION_17
0x4000897	          0x83c801	                               or eax, 1	       178	mailsplit.c	FUNCTION_17
0x400089a	          0x8845e0	               mov byte [rbp - 0x20], al	       178	mailsplit.c	FUNCTION_17
0x400089d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       178	mailsplit.c	FUNCTION_17
0x40008a5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       180	mailsplit.c	FUNCTION_17
0x40008ad	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008b1	        0x488d45d0	                   lea rax, [rbp - 0x30]	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008b5	          0x4889d6	                            mov rsi, rdx	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008b8	          0x4889c7	                            mov rdi, rax	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008bb	      0xe8e4fcffff	          call sym.populate_maildir_list	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008c0	            0x85c0	                           test eax, eax	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008c2	     0xf882f010000	                            js 0x40009f7	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x40008c8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40008cf	      0xe90d010000	                           jmp 0x40009e1	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40008d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x40008d8	          0x4889c7	                            mov rdi, rax	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x40008db	      0xe800000000	                          call 0x40008e0	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x40008e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008e4	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008e7	          0x4863d2	                         movsxd rdx, edx	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008ea	        0x48c1e204	                              shl rdx, 4	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008ee	          0x4801d0	                            add rax, rdx	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008f1	          0x488b10	                    mov rdx, qword [rax]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008f8	          0x4889c6	                            mov rsi, rax	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x40008fb	      0xbf00000000	                              mov edi, 0	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x4000900	      0xb800000000	                              mov eax, 0	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x4000905	      0xe800000000	                          call 0x400090a	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x400090a	        0x488945b8	             mov qword [rbp - 0x48], rax	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x400090e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	mailsplit.c	FUNCTION_17	FOR_1
0x4000912	      0xbe00000000	                              mov esi, 0	       191	mailsplit.c	FUNCTION_17	FOR_1
0x4000917	          0x4889c7	                            mov rdi, rax	       191	mailsplit.c	FUNCTION_17	FOR_1
0x400091a	      0xe800000000	                          call 0x400091f	       191	mailsplit.c	FUNCTION_17	FOR_1
0x400091f	        0x488945c0	             mov qword [rbp - 0x40], rax	       191	mailsplit.c	FUNCTION_17	FOR_1
0x4000923	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       192	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x4000928	            0x7520	                           jne 0x400094a	       192	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x400092a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x400092e	          0x4889c6	                            mov rsi, rax	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x4000931	      0xbf00000000	                              mov edi, 0	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x4000936	      0xb800000000	                              mov eax, 0	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x400093b	      0xe800000000	                          call 0x4000940	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x4000940	      0xe8fbf6ffff	                    call sym.const_error	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x4000945	      0xe9ae000000	                           jmp 0x40009f8	       194	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x400094a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x400094e	      0xba0a000000	                            mov edx, 0xa	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x4000953	          0x4889c6	                            mov rsi, rax	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x4000956	      0xbf00000000	                              mov edi, 0	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x400095b	      0xe800000000	                          call 0x4000960	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x4000960	            0x85c0	                           test eax, eax	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x4000962	            0x741d	                            je 0x4000981	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_4
0x4000964	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x4000968	          0x4889c6	                            mov rsi, rax	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x400096b	      0xbf00000000	                              mov edi, 0	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x4000970	      0xb800000000	                              mov eax, 0	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x4000975	      0xe800000000	                          call 0x400097a	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x400097a	      0xe8c1f6ffff	                    call sym.const_error	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x400097f	            0xeb77	                           jmp 0x40009f8	       199	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x4000981	        0x83459801	               add dword [rbp - 0x68], 1	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x4000985	          0x8b4d98	             mov ecx, dword [rbp - 0x68]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x4000988	          0x8b559c	             mov edx, dword [rbp - 0x64]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x400098b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x400098f	          0x4889c6	                            mov rsi, rax	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x4000992	      0xbf00000000	                              mov edi, 0	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x4000997	      0xb800000000	                              mov eax, 0	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x400099c	      0xe800000000	                          call 0x40009a1	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x40009a1	        0x488945c8	             mov qword [rbp - 0x38], rax	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_5
0x40009a5	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009ad	      0xba01000000	                              mov edx, 1	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009b2	          0x4889ce	                            mov rsi, rcx	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009b5	          0x4889c7	                            mov rdi, rax	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009b8	      0xe8c7f9ffff	                      call sym.split_one	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_6
0x40009bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_7
0x40009c1	          0x4889c7	                            mov rdi, rax	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_7
0x40009c4	      0xe800000000	                          call 0x40009c9	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_7
0x40009c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x40009cd	          0x4889c7	                            mov rdi, rax	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x40009d0	      0xe800000000	                          call 0x40009d5	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x40009d5	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       207	mailsplit.c	FUNCTION_17	FOR_1
0x40009dd	        0x8345b401	               add dword [rbp - 0x4c], 1	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40009e1	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40009e4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40009e7	            0x39c2	                            cmp edx, eax	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40009e9	     0xf87e5feffff	                            ja 0x40008d4	       185	mailsplit.c	FUNCTION_17	FOR_1
0x40009ef	          0x8b4598	             mov eax, dword [rbp - 0x68]	       210	mailsplit.c	FUNCTION_17
0x40009f2	          0x8945b0	             mov dword [rbp - 0x50], eax	       210	mailsplit.c	FUNCTION_17
0x40009f5	            0xeb01	                           jmp 0x40009f8	       210	mailsplit.c	FUNCTION_17
0x40009f7	              0x90	                                     nop	       183	mailsplit.c	FUNCTION_17	IF_1
0x40009f8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       212	mailsplit.c	FUNCTION_17	IF_4
0x40009fd	            0x740c	                            je 0x4000a0b	       212	mailsplit.c	FUNCTION_17	IF_4
0x40009ff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       213	mailsplit.c	FUNCTION_17	CALL_9
0x4000a03	          0x4889c7	                            mov rdi, rax	       213	mailsplit.c	FUNCTION_17	CALL_9
0x4000a06	      0xe800000000	                          call 0x4000a0b	       213	mailsplit.c	FUNCTION_17	CALL_9
0x4000a0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	mailsplit.c	FUNCTION_17	CALL_10
0x4000a0f	          0x4889c7	                            mov rdi, rax	       214	mailsplit.c	FUNCTION_17	CALL_10
0x4000a12	      0xe800000000	                          call 0x4000a17	       214	mailsplit.c	FUNCTION_17	CALL_10
0x4000a17	        0x488d45d0	                   lea rax, [rbp - 0x30]	       215	mailsplit.c	FUNCTION_17	CALL_11
0x4000a1b	      0xbe01000000	                              mov esi, 1	       215	mailsplit.c	FUNCTION_17	CALL_11
0x4000a20	          0x4889c7	                            mov rdi, rax	       215	mailsplit.c	FUNCTION_17	CALL_11
0x4000a23	      0xe800000000	                          call 0x4000a28	       215	mailsplit.c	FUNCTION_17	CALL_11
0x4000a28	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       216	mailsplit.c	FUNCTION_17
0x4000a2b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       217	mailsplit.c	FUNCTION_17
0x4000a2f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       217	mailsplit.c	FUNCTION_17
0x4000a38	            0x7405	                            je 0x4000a3f	       217	mailsplit.c	FUNCTION_17
0x4000a3a	      0xe800000000	                          call 0x4000a3f	       217	mailsplit.c	FUNCTION_17
0x4000a3f	              0xc9	                                   leave	       217	mailsplit.c	FUNCTION_17
0x4000a40	              0xc3	                                     ret	       217	mailsplit.c	FUNCTION_17
strbuf_setlen	DO,0:CALL,2:ELSE,1:FOR,0:functions,0:SWITCH,0:IF,2:WHILE,0	43
0x4000081	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x4000082	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x4000085	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x4000089	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x400008d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x4000091	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000095	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000098	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x400009b	            0x740d	                            je 0x40000aa	       162	strbuf.h	FUNCTION_3	IF_1
0x400009d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a1	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a4	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a8	            0xeb05	                           jmp 0x40000af	       162	strbuf.h	FUNCTION_3	IF_1
0x40000aa	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x40000af	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000b3	            0x730f	                           jae 0x40000c4	       162	strbuf.h	FUNCTION_3	IF_1
0x40000b5	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000ba	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000bf	      0xe800000000	                          call 0x40000c4	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x40000c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x40000cc	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x40000de	            0x7414	                            je 0x40000f4	       165	strbuf.h	FUNCTION_3	IF_2
0x40000e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000ec	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x40000ef	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x40000f2	            0xeb24	                           jmp 0x4000118	       169	strbuf.h	FUNCTION_3
0x40000f4	     0xfb605000000	           movzx eax, byte [0x040000fb] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000fb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000fd	            0x7419	                            je 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000ff	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000104	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000109	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400010e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000113	      0xe800000000	                          call 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000118	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x4000119	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x400011a	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
maildir_filename_cmp	DO,0:CALL,2:ELSE,1:FOR,0:functions,0:SWITCH,0:IF,3:WHILE,1	86
0x4000728	              0x55	                                push rbp	       151	mailsplit.c	FUNCTION_16
0x4000729	          0x4889e5	                            mov rbp, rsp	       151	mailsplit.c	FUNCTION_16
0x400072c	        0x4883ec20	                           sub rsp, 0x20	       151	mailsplit.c	FUNCTION_16
0x4000730	        0x48897de8	             mov qword [rbp - 0x18], rdi	       151	mailsplit.c	FUNCTION_16
0x4000734	        0x488975e0	             mov qword [rbp - 0x20], rsi	       151	mailsplit.c	FUNCTION_16
0x4000738	      0xe9d0000000	                           jmp 0x400080d	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x400073d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000741	           0xfb600	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000744	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000747	            0x4898	                                    cdqe	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000749	     0xfb680000000	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000750	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000753	          0x83e002	                              and eax, 2	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000756	            0x85c0	                           test eax, eax	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000758	            0x746f	                            je 0x40007c9	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x400075a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x400075e	           0xfb600	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000761	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000764	            0x4898	                                    cdqe	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000766	     0xfb680000000	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x400076d	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000770	          0x83e002	                              and eax, 2	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000773	            0x85c0	                           test eax, eax	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000775	            0x7452	                            je 0x40007c9	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1
0x4000777	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x400077b	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x400077f	      0xba0a000000	                            mov edx, 0xa	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x4000784	          0x4889ce	                            mov rsi, rcx	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x4000787	          0x4889c7	                            mov rdi, rax	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x400078a	      0xe800000000	                          call 0x400078f	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x400078f	        0x488945f0	             mov qword [rbp - 0x10], rax	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_1
0x4000793	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x4000797	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x400079b	      0xba0a000000	                            mov edx, 0xa	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x40007a0	          0x4889ce	                            mov rsi, rcx	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x40007a3	          0x4889c7	                            mov rdi, rax	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x40007a6	      0xe800000000	                          call 0x40007ab	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x40007ab	        0x488945f8	                mov qword [rbp - 8], rax	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x40007af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007b3	        0x483b45f8	                cmp rax, qword [rbp - 8]	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007b7	            0x7454	                            je 0x400080d	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007bd	            0x89c2	                            mov edx, eax	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007c3	            0x29c2	                            sub edx, eax	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007c5	            0x89d0	                            mov eax, edx	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007c7	            0xeb76	                           jmp 0x400083f	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x40007c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007cd	           0xfb610	                   movzx edx, byte [rax]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007d4	           0xfb600	                   movzx eax, byte [rax]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007d7	            0x38c2	                              cmp dl, al	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007d9	            0x741a	                            je 0x40007f5	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007df	           0xfb600	                   movzx eax, byte [rax]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007e2	           0xfb6d0	                           movzx edx, al	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007e9	           0xfb600	                   movzx eax, byte [rax]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007ec	           0xfb6c0	                           movzx eax, al	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007ef	            0x29c2	                            sub edx, eax	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007f1	            0x89d0	                            mov eax, edx	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007f3	            0xeb4a	                           jmp 0x400083f	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x40007f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x40007f9	        0x4883c001	                              add rax, 1	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x40007fd	        0x488945e8	             mov qword [rbp - 0x18], rax	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x4000801	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x4000805	        0x4883c001	                              add rax, 1	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x4000809	        0x488945e0	             mov qword [rbp - 0x20], rax	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x400080d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000811	           0xfb600	                   movzx eax, byte [rax]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000814	            0x84c0	                             test al, al	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000816	            0x740f	                            je 0x4000827	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000818	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x400081c	           0xfb600	                   movzx eax, byte [rax]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x400081f	            0x84c0	                             test al, al	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000821	     0xf8516ffffff	                           jne 0x400073d	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x4000827	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	mailsplit.c	FUNCTION_16
0x400082b	           0xfb600	                   movzx eax, byte [rax]	       168	mailsplit.c	FUNCTION_16
0x400082e	           0xfb6d0	                           movzx edx, al	       168	mailsplit.c	FUNCTION_16
0x4000831	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       168	mailsplit.c	FUNCTION_16
0x4000835	           0xfb600	                   movzx eax, byte [rax]	       168	mailsplit.c	FUNCTION_16
0x4000838	           0xfb6c0	                           movzx eax, al	       168	mailsplit.c	FUNCTION_16
0x400083b	            0x29c2	                            sub edx, eax	       168	mailsplit.c	FUNCTION_16
0x400083d	            0x89d0	                            mov eax, edx	       168	mailsplit.c	FUNCTION_16
0x400083f	              0xc9	                                   leave	       169	mailsplit.c	FUNCTION_16
0x4000840	              0xc3	                                     ret	       169	mailsplit.c	FUNCTION_16
split_one	DO,0:CALL,17:ELSE,0:FOR,1:functions,0:SWITCH,0:IF,8:WHILE,0	135
0x4000384	              0x55	                                push rbp	        68	mailsplit.c	FUNCTION_14
0x4000385	          0x4889e5	                            mov rbp, rsp	        68	mailsplit.c	FUNCTION_14
0x4000388	        0x4883ec40	                           sub rsp, 0x40	        68	mailsplit.c	FUNCTION_14
0x400038c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        68	mailsplit.c	FUNCTION_14
0x4000390	        0x488975d0	             mov qword [rbp - 0x30], rsi	        68	mailsplit.c	FUNCTION_14
0x4000394	          0x8955cc	             mov dword [rbp - 0x34], edx	        68	mailsplit.c	FUNCTION_14
0x4000397	    0xc745ec000000	               mov dword [rbp - 0x14], 0	        71	mailsplit.c	FUNCTION_14
0x400039e	    0x488b05000000	            mov rax, qword [0x040003a5] 	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003a5	            0x89c2	                            mov edx, eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003a7	    0x488b05000000	            mov rax, qword [0x040003ae] 	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003ae	            0x89d6	                            mov esi, edx	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003b0	          0x4889c7	                            mov rdi, rax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003b3	      0xe8fdfdffff	                   call sym.is_from_line	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003b8	            0x85c0	                           test eax, eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003ba	           0xf94c0	                                 sete al	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003bd	           0xfb6c0	                           movzx eax, al	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003c0	          0x8945f0	             mov dword [rbp - 0x10], eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x40003c3	        0x837df000	               cmp dword [rbp - 0x10], 0	        74	mailsplit.c	FUNCTION_14	IF_1
0x40003c7	            0x742e	                            je 0x40003f7	        74	mailsplit.c	FUNCTION_14	IF_1
0x40003c9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        74	mailsplit.c	FUNCTION_14	IF_1
0x40003cd	            0x7528	                           jne 0x40003f7	        74	mailsplit.c	FUNCTION_14	IF_1
0x40003cf	    0x488b05000000	            mov rax, qword [0x040003d6] 	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003d6	          0x4889c1	                            mov rcx, rax	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003d9	      0xba10000000	                           mov edx, 0x10	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003de	      0xbe01000000	                              mov esi, 1	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003e3	      0xbf00000000	                              mov edi, 0	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003e8	      0xe800000000	                          call 0x40003ed	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x40003ed	      0xbf01000000	                              mov edi, 1	        76	mailsplit.c	FUNCTION_14	IF_1	CALL_3
0x40003f2	      0xe800000000	                          call 0x40003f7	        76	mailsplit.c	FUNCTION_14	IF_1	CALL_3
0x40003f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        78	mailsplit.c	FUNCTION_14	CALL_4
0x40003fb	      0xbab6010000	                          mov edx, 0x1b6	        78	mailsplit.c	FUNCTION_14	CALL_4
0x4000400	      0xbec1000000	                           mov esi, 0xc1	        78	mailsplit.c	FUNCTION_14	CALL_4
0x4000405	          0x4889c7	                            mov rdi, rax	        78	mailsplit.c	FUNCTION_14	CALL_4
0x4000408	      0xb800000000	                              mov eax, 0	        78	mailsplit.c	FUNCTION_14	CALL_4
0x400040d	      0xe800000000	                          call 0x4000412	        78	mailsplit.c	FUNCTION_14	CALL_4
0x4000412	          0x8945f4	              mov dword [rbp - 0xc], eax	        78	mailsplit.c	FUNCTION_14	CALL_4
0x4000415	        0x837df400	                cmp dword [rbp - 0xc], 0	        79	mailsplit.c	FUNCTION_14	IF_2
0x4000419	            0x7916	                           jns 0x4000431	        79	mailsplit.c	FUNCTION_14	IF_2
0x400041b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	mailsplit.c	FUNCTION_14	CALL_5
0x400041f	          0x4889c6	                            mov rsi, rax	        80	mailsplit.c	FUNCTION_14	CALL_5
0x4000422	      0xbf00000000	                              mov edi, 0	        80	mailsplit.c	FUNCTION_14	CALL_5
0x4000427	      0xb800000000	                              mov eax, 0	        80	mailsplit.c	FUNCTION_14	CALL_5
0x400042c	      0xe800000000	                          call 0x4000431	        80	mailsplit.c	FUNCTION_14	CALL_5
0x4000431	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	mailsplit.c	FUNCTION_14	CALL_6
0x4000434	      0xbe00000000	                              mov esi, 0	        81	mailsplit.c	FUNCTION_14	CALL_6
0x4000439	            0x89c7	                            mov edi, eax	        81	mailsplit.c	FUNCTION_14	CALL_6
0x400043b	      0xe800000000	                          call 0x4000440	        81	mailsplit.c	FUNCTION_14	CALL_6
0x4000440	        0x488945f8	                mov qword [rbp - 8], rax	        81	mailsplit.c	FUNCTION_14	CALL_6
0x4000444	    0x8b0500000000	            mov eax, dword [0x0400044a] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400044a	            0x85c0	                           test eax, eax	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400044c	            0x756c	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400044e	    0x488b05000000	            mov rax, qword [0x04000455] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000455	        0x4883f801	                              cmp rax, 1	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000459	            0x765f	                           jbe 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400045b	    0x488b05000000	            mov rax, qword [0x04000462] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000462	    0x488b15000000	            mov rdx, qword [0x04000469] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000469	        0x4883ea01	                              sub rdx, 1	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400046d	          0x4801d0	                            add rax, rdx	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000470	           0xfb600	                   movzx eax, byte [rax]	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000473	            0x3c0a	                             cmp al, 0xa	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000475	            0x7543	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000477	    0x488b05000000	            mov rax, qword [0x0400047e] 	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400047e	    0x488b15000000	            mov rdx, qword [0x04000485] 	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000485	        0x4883ea02	                              sub rdx, 2	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000489	          0x4801d0	                            add rax, rdx	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400048c	           0xfb600	                   movzx eax, byte [rax]	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x400048f	            0x3c0d	                             cmp al, 0xd	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000491	            0x7527	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x4000493	    0x488b05000000	            mov rax, qword [0x0400049a] 	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x400049a	        0x4883e802	                              sub rax, 2	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x400049e	          0x4889c6	                            mov rsi, rax	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x40004a1	      0xbf00000000	                              mov edi, 0	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x40004a6	      0xe8d6fbffff	                  call sym.strbuf_setlen	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x40004ab	      0xbe0a000000	                            mov esi, 0xa	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x40004b0	      0xbf00000000	                              mov edi, 0	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x40004b5	      0xe861fcffff	                   call sym.strbuf_addch	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x40004ba	    0x8b0500000000	            mov eax, dword [0x040004c0] 	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004c0	            0x85c0	                           test eax, eax	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004c2	            0x7422	                            je 0x40004e6	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004c4	      0xbf00000000	                              mov edi, 0	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004c9	      0xe83efeffff	                      call sym.is_gtfrom	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004ce	            0x85c0	                           test eax, eax	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004d0	            0x7414	                            je 0x40004e6	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x40004d2	      0xba01000000	                              mov edx, 1	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x40004d7	      0xbe00000000	                              mov esi, 0	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x40004dc	      0xbf00000000	                              mov edi, 0	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x40004e1	      0xe800000000	                          call 0x40004e6	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x40004e6	    0x488b15000000	            mov rdx, qword [0x040004ed] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x40004ed	    0x488b05000000	            mov rax, qword [0x040004f4] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x40004f4	        0x488b4df8	                mov rcx, qword [rbp - 8]	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x40004f8	      0xbe01000000	                              mov esi, 1	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x40004fd	          0x4889c7	                            mov rdi, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4000500	      0xe800000000	                          call 0x4000505	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4000505	          0x4889c2	                            mov rdx, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4000508	    0x488b05000000	            mov rax, qword [0x0400050f] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x400050f	          0x4839c2	                            cmp rdx, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4000512	            0x740f	                            je 0x4000523	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4000514	      0xbf00000000	                              mov edi, 0	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x4000519	      0xb800000000	                              mov eax, 0	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x400051e	      0xe800000000	                          call 0x4000523	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x4000523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4000527	      0xba0a000000	                            mov edx, 0xa	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x400052c	          0x4889c6	                            mov rsi, rax	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x400052f	      0xbf00000000	                              mov edi, 0	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4000534	      0xe800000000	                          call 0x4000539	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4000539	            0x85c0	                           test eax, eax	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x400053b	            0x7428	                            je 0x4000565	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x400053d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x4000541	          0x4889c7	                            mov rdi, rax	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x4000544	      0xe800000000	                          call 0x4000549	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x4000549	            0x85c0	                           test eax, eax	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x400054b	            0x7409	                            je 0x4000556	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x400054d	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       101	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7
0x4000554	            0xeb3d	                           jmp 0x4000593	       102	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7
0x4000556	      0xbf00000000	                              mov edi, 0	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x400055b	      0xb800000000	                              mov eax, 0	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x4000560	      0xe800000000	                          call 0x4000565	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x4000565	        0x837df000	               cmp dword [rbp - 0x10], 0	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000569	     0xf85d5feffff	                           jne 0x4000444	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x400056f	    0x488b05000000	            mov rax, qword [0x04000576] 	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000576	            0x89c2	                            mov edx, eax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000578	    0x488b05000000	            mov rax, qword [0x0400057f] 	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x400057f	            0x89d6	                            mov esi, edx	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000581	          0x4889c7	                            mov rdi, rax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000584	      0xe82cfcffff	                   call sym.is_from_line	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x4000589	            0x85c0	                           test eax, eax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x400058b	            0x7505	                           jne 0x4000592	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x400058d	      0xe9b2feffff	                           jmp 0x4000444	       108	mailsplit.c	FUNCTION_14	FOR_1
0x4000592	              0x90	                                     nop	       107	mailsplit.c	FUNCTION_14	FOR_1	IF_8
0x4000593	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	mailsplit.c	FUNCTION_14	CALL_17
0x4000597	          0x4889c7	                            mov rdi, rax	       109	mailsplit.c	FUNCTION_14	CALL_17
0x400059a	      0xe800000000	                          call 0x400059f	       109	mailsplit.c	FUNCTION_14	CALL_17
0x400059f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       110	mailsplit.c	FUNCTION_14
0x40005a2	              0xc9	                                   leave	       111	mailsplit.c	FUNCTION_14
0x40005a3	              0xc3	                                     ret	       111	mailsplit.c	FUNCTION_14
_	DO,0:CALL,0:ELSE,0:FOR,0:functions,0:SWITCH,0:IF,1:WHILE,0	15
0x4000189	              0x55	                                push rbp	        51	gettext.h	FUNCTION_22
0x400018a	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_22
0x400018d	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_22
0x4000191	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_22
0x4000195	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_22	IF_1
0x4000199	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_22	IF_1
0x400019c	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_22	IF_1
0x400019e	            0x7507	                           jne 0x40001a7	        52	gettext.h	FUNCTION_22	IF_1
0x40001a0	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_22	IF_1
0x40001a5	            0xeb0c	                           jmp 0x40001b3	        53	gettext.h	FUNCTION_22	IF_1
0x40001a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_22
0x40001ab	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_22
0x40001ae	      0xe800000000	                          call 0x40001b3	        54	gettext.h	FUNCTION_22
0x40001b3	              0xc9	                                   leave	        55	gettext.h	FUNCTION_22
0x40001b4	              0xc3	                                     ret	        55	gettext.h	FUNCTION_22
cmd_mailsplit	DO,0:CALL,13:ELSE,10:FOR,1:functions,0:SWITCH,1:IF,17:WHILE,1	271
0x4000c11	              0x55	                                push rbp	       272	mailsplit.c	FUNCTION_19
0x4000c12	          0x4889e5	                            mov rbp, rsp	       272	mailsplit.c	FUNCTION_19
0x4000c15	    0x4881ec000100	                          sub rsp, 0x100	       272	mailsplit.c	FUNCTION_19
0x4000c1c	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	       272	mailsplit.c	FUNCTION_19
0x4000c22	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       272	mailsplit.c	FUNCTION_19
0x4000c29	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       272	mailsplit.c	FUNCTION_19
0x4000c30	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	mailsplit.c	FUNCTION_19
0x4000c39	        0x488945f8	                mov qword [rbp - 8], rax	       272	mailsplit.c	FUNCTION_19
0x4000c3d	            0x31c0	                            xor eax, eax	       272	mailsplit.c	FUNCTION_19
0x4000c3f	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       273	mailsplit.c	FUNCTION_19
0x4000c49	    0xc78530ffffff	               mov dword [rbp - 0xd0], 4	       273	mailsplit.c	FUNCTION_19
0x4000c53	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	       273	mailsplit.c	FUNCTION_19
0x4000c5d	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       274	mailsplit.c	FUNCTION_19
0x4000c67	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       275	mailsplit.c	FUNCTION_19
0x4000c72	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000c79	        0x4883c008	                              add rax, 8	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000c7d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000c84	      0xe9d4010000	                           jmp 0x4000e5d	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000c89	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       280	mailsplit.c	FUNCTION_19	FOR_1
0x4000c90	          0x488b00	                    mov rax, qword [rax]	       280	mailsplit.c	FUNCTION_19	FOR_1
0x4000c93	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       280	mailsplit.c	FUNCTION_19	FOR_1
0x4000c9a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0x4000ca1	           0xfb600	                   movzx eax, byte [rax]	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0x4000ca4	            0x3c2d	                            cmp al, 0x2d	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0x4000ca6	     0xf85c6010000	                           jne 0x4000e72	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0x4000cac	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000cb3	        0x4883c001	                              add rax, 1	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000cb7	           0xfb600	                   movzx eax, byte [rax]	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000cba	            0x3c64	                            cmp al, 0x64	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000cbc	            0x7543	                           jne 0x4000d01	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000cbe	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cc5	        0x4883c002	                              add rax, 2	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cc9	      0xba0a000000	                            mov edx, 0xa	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cce	      0xbe00000000	                              mov esi, 0	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cd3	          0x4889c7	                            mov rdi, rax	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cd6	      0xe800000000	                          call 0x4000cdb	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000cdb	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0x4000ce1	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 2	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000ce8	            0x7e0d	                           jle 0x4000cf7	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000cea	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 9	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000cf1	     0xf8e5d010000	                           jle 0x4000e54	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0x4000cf7	      0xbf00000000	                              mov edi, 0	       288	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000cfc	      0xe800000000	                          call 0x4000d01	       288	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000d01	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0x4000d08	        0x4883c001	                              add rax, 1	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0x4000d0c	           0xfb600	                   movzx eax, byte [rax]	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0x4000d0f	            0x3c66	                            cmp al, 0x66	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0x4000d11	            0x7528	                           jne 0x4000d3b	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0x4000d13	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d1a	        0x4883c002	                              add rax, 2	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d1e	      0xba0a000000	                            mov edx, 0xa	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d23	      0xbe00000000	                              mov esi, 0	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d28	          0x4889c7	                            mov rdi, rax	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d2b	      0xe800000000	                          call 0x4000d30	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d30	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d36	      0xe91a010000	                           jmp 0x4000e55	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0x4000d3b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000d42	        0x4883c001	                              add rax, 1	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000d46	           0xfb600	                   movzx eax, byte [rax]	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000d49	            0x3c68	                            cmp al, 0x68	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000d4b	            0x750a	                           jne 0x4000d57	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0x4000d4d	      0xbf00000000	                              mov edi, 0	       293	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	CALL_4
0x4000d52	      0xe800000000	                          call 0x4000d57	       293	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	CALL_4
0x4000d57	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d5e	        0x4883c001	                              add rax, 1	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d62	           0xfb600	                   movzx eax, byte [rax]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d65	            0x3c62	                            cmp al, 0x62	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d67	            0x7521	                           jne 0x4000d8a	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d69	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d70	        0x4883c002	                              add rax, 2	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d74	           0xfb600	                   movzx eax, byte [rax]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d77	            0x84c0	                             test al, al	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d79	            0x750f	                           jne 0x4000d8a	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d7b	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	       295	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d85	      0xe9cb000000	                           jmp 0x4000e55	       295	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0x4000d8a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000d91	      0xbe00000000	                              mov esi, 0	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000d96	          0x4889c7	                            mov rdi, rax	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000d99	      0xe800000000	                          call 0x4000d9e	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000d9e	            0x85c0	                           test eax, eax	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000da0	            0x750f	                           jne 0x4000db1	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0x4000da2	    0xc70500000000	               mov dword [0x04000dac], 1	       297	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7
0x4000dac	      0xe9a4000000	                           jmp 0x4000e55	       297	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7
0x4000db1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000db8	        0x4883c001	                              add rax, 1	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dbc	           0xfb600	                   movzx eax, byte [rax]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dbf	            0x3c6f	                            cmp al, 0x6f	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dc1	            0x7526	                           jne 0x4000de9	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dc3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dca	        0x4883c002	                              add rax, 2	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dce	           0xfb600	                   movzx eax, byte [rax]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dd1	            0x84c0	                             test al, al	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dd3	            0x7414	                            je 0x4000de9	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000dd5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000ddc	        0x4883c002	                              add rax, 2	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000de0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000de7	            0xeb6c	                           jmp 0x4000e55	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0x4000de9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000df0	      0xbe00000000	                              mov esi, 0	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000df5	          0x4889c7	                            mov rdi, rax	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000df8	      0xe800000000	                          call 0x4000dfd	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000dfd	            0x85c0	                           test eax, eax	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000dff	            0x750c	                           jne 0x4000e0d	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0x4000e01	    0xc70500000000	               mov dword [0x04000e0b], 1	       301	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9
0x4000e0b	            0xeb48	                           jmp 0x4000e55	       301	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9
0x4000e0d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e14	        0x4883c001	                              add rax, 1	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e18	           0xfb600	                   movzx eax, byte [rax]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e1b	            0x3c2d	                            cmp al, 0x2d	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e1d	            0x751c	                           jne 0x4000e3b	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e1f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e26	        0x4883c002	                              add rax, 2	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e2a	           0xfb600	                   movzx eax, byte [rax]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e2d	            0x84c0	                             test al, al	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e2f	            0x750a	                           jne 0x4000e3b	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e31	    0x48838548ffff	               add qword [rbp - 0xb8], 8	       303	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e39	            0xeb38	                           jmp 0x4000e73	       304	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0x4000e3b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0x4000e42	          0x4889c6	                            mov rsi, rax	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0x4000e45	      0xbf00000000	                              mov edi, 0	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0x4000e4a	      0xb800000000	                              mov eax, 0	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0x4000e4f	      0xe800000000	                          call 0x4000e54	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0x4000e54	              0x90	                                     nop	       289	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0x4000e55	    0x48838548ffff	               add qword [rbp - 0xb8], 8	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e64	          0x488b00	                    mov rax, qword [rax]	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e67	          0x4885c0	                           test rax, rax	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e6a	     0xf8519feffff	                           jne 0x4000c89	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e70	            0xeb01	                           jmp 0x4000e73	       279	mailsplit.c	FUNCTION_19	FOR_1
0x4000e72	              0x90	                                     nop	       283	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0x4000e73	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       310	mailsplit.c	FUNCTION_19	IF_11
0x4000e7b	     0xf8589000000	                           jne 0x4000f0a	       310	mailsplit.c	FUNCTION_19	IF_11
0x4000e81	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e87	            0x4898	                                    cdqe	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e89	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e90	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e97	          0x4829d1	                            sub rcx, rdx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e9a	          0x4889ca	                            mov rdx, rcx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000e9d	        0x48c1fa03	                              sar rdx, 3	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ea1	          0x4829d0	                            sub rax, rdx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ea4	        0x4883f801	                              cmp rax, 1	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ea8	            0x7408	                            je 0x4000eb2	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eaa	        0x4883f802	                              cmp rax, 2	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eae	            0x7420	                            je 0x4000ed0	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eb0	            0xeb4e	                           jmp 0x4000f00	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eb2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eb9	          0x488b00	                    mov rax, qword [rax]	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ebc	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ec3	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       316	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ece	            0xeb58	                           jmp 0x4000f28	       317	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ed0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ed7	          0x488b00	                    mov rax, qword [rax]	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eda	    0x488905000000	            mov qword [0x04000ee1], rax 	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ee1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ee8	        0x488b4008	                mov rax, qword [rax + 8]	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000eec	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000ef3	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       321	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000efe	            0xeb28	                           jmp 0x4000f28	       322	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0x4000f00	      0xbf00000000	                              mov edi, 0	       324	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1	CALL_8
0x4000f05	      0xe800000000	                          call 0x4000f0a	       324	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1	CALL_8
0x4000f0a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0x4000f11	          0x488b00	                    mov rax, qword [rax]	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0x4000f14	          0x4885c0	                           test rax, rax	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0x4000f17	     0xf85d4010000	                           jne 0x40010f1	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0x4000f1d	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       329	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0x4000f28	      0xe9c4010000	                           jmp 0x40010f1	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f2d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f34	        0x488d5008	                      lea rdx, [rax + 8]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f38	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       333	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f3f	          0x488b00	                    mov rax, qword [rax]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f42	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       333	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f49	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	       335	mailsplit.c	FUNCTION_19	WHILE_1
0x4000f53	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f5a	           0xfb600	                   movzx eax, byte [rax]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f5d	            0x3c2d	                            cmp al, 0x2d	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f5f	     0xf858d000000	                           jne 0x4000ff2	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f6c	        0x4883c001	                              add rax, 1	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f70	           0xfb600	                   movzx eax, byte [rax]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f73	            0x84c0	                             test al, al	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f75	            0x757b	                           jne 0x4000ff2	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000f77	    0x8bbd2cffffff	             mov edi, dword [rbp - 0xd4]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f7d	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f83	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f89	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f90	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f97	          0x4189f8	                            mov r8d, edi	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f9a	          0x4889c7	                            mov rdi, rax	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000f9d	      0xe89ffaffff	                     call sym.split_mbox	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000fa2	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0x4000fa8	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       339	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000faf	            0x791e	                           jns 0x4000fcf	       339	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fb1	      0xbf00000000	                              mov edi, 0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fb6	      0xb800000000	                              mov eax, 0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fc0	      0xe87bf0ffff	                    call sym.const_error	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fc5	      0xb801000000	                              mov eax, 1	       341	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fca	      0xe951010000	                           jmp 0x4001120	       341	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0x4000fcf	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000fd5	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000fdb	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000fe1	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000fe7	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000fed	      0xe9ff000000	                           jmp 0x40010f1	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0x4000ff2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4000ff9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001000	          0x4889d6	                            mov rsi, rdx	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001003	          0x4889c7	                            mov rdi, rax	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001006	      0xe800000000	                          call 0x400100b	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x400100b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x400100e	            0x7528	                           jne 0x4001038	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001010	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001017	          0x4889c6	                            mov rsi, rax	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x400101a	      0xbf00000000	                              mov edi, 0	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x400101f	      0xb800000000	                              mov eax, 0	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001024	      0xe800000000	                          call 0x4001029	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001029	      0xe812f0ffff	                    call sym.const_error	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x400102e	      0xb801000000	                              mov eax, 1	       350	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001033	      0xe9e8000000	                           jmp 0x4001120	       350	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0x4001038	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_10
0x400103e	      0x2500f00000	                         and eax, 0xf000	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_10
0x4001043	      0x3d00400000	                         cmp eax, 0x4000	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_10
0x4001048	            0x752a	                           jne 0x4001074	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_10
0x400104a	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001050	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001056	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x400105d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001064	          0x4889c7	                            mov rdi, rax	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001067	      0xe8d5f7ffff	                  call sym.split_maildir	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x400106c	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001072	            0xeb31	                           jmp 0x40010a5	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_11
0x4001074	    0x8bbd2cffffff	             mov edi, dword [rbp - 0xd4]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x400107a	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x4001080	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x4001086	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x400108d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x4001094	          0x4189f8	                            mov r8d, edi	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x4001097	          0x4889c7	                            mov rdi, rax	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x400109a	      0xe8a2f9ffff	                     call sym.split_mbox	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x400109f	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_12
0x40010a5	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       358	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010ac	            0x7925	                           jns 0x40010d3	       358	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010ae	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010b5	          0x4889c6	                            mov rsi, rax	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010b8	      0xbf00000000	                              mov edi, 0	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010bd	      0xb800000000	                              mov eax, 0	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010c2	      0xe800000000	                          call 0x40010c7	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010c7	      0xe874efffff	                    call sym.const_error	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010cc	      0xb801000000	                              mov eax, 1	       360	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010d1	            0xeb4d	                           jmp 0x4001120	       360	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x40010d3	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x40010d9	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x40010df	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x40010e5	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       363	mailsplit.c	FUNCTION_19	WHILE_1
0x40010eb	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       363	mailsplit.c	FUNCTION_19	WHILE_1
0x40010f1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x40010f8	          0x488b00	                    mov rax, qword [rax]	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x40010fb	          0x4885c0	                           test rax, rax	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x40010fe	     0xf8529feffff	                           jne 0x4000f2d	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x4001104	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       366	mailsplit.c	FUNCTION_19	CALL_13
0x400110a	            0x89c6	                            mov esi, eax	       366	mailsplit.c	FUNCTION_19	CALL_13
0x400110c	      0xbf00000000	                              mov edi, 0	       366	mailsplit.c	FUNCTION_19	CALL_13
0x4001111	      0xb800000000	                              mov eax, 0	       366	mailsplit.c	FUNCTION_19	CALL_13
0x4001116	      0xe800000000	                          call 0x400111b	       366	mailsplit.c	FUNCTION_19	CALL_13
0x400111b	      0xb800000000	                              mov eax, 0	       368	mailsplit.c	FUNCTION_19
0x4001120	        0x488b4df8	                mov rcx, qword [rbp - 8]	       369	mailsplit.c	FUNCTION_19
0x4001124	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       369	mailsplit.c	FUNCTION_19
0x400112d	            0x7405	                            je 0x4001134	       369	mailsplit.c	FUNCTION_19
0x400112f	      0xe800000000	                          call 0x4001134	       369	mailsplit.c	FUNCTION_19
0x4001134	              0xc9	                                   leave	       369	mailsplit.c	FUNCTION_19
0x4001135	              0xc3	                                     ret	       369	mailsplit.c	FUNCTION_19
const_error	DO,0:CALL,0:ELSE,0:FOR,0:functions,0:SWITCH,0:IF,0:WHILE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_29
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_29
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_29
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_29
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_29
is_gtfrom	DO,0:CALL,3:ELSE,0:FOR,0:functions,0:SWITCH,0:IF,1:WHILE,0	34
0x400030c	              0x55	                                push rbp	        51	mailsplit.c	FUNCTION_13
0x400030d	          0x4889e5	                            mov rbp, rsp	        51	mailsplit.c	FUNCTION_13
0x4000310	        0x4883ec20	                           sub rsp, 0x20	        51	mailsplit.c	FUNCTION_13
0x4000314	        0x48897de8	             mov qword [rbp - 0x18], rdi	        51	mailsplit.c	FUNCTION_13
0x4000318	    0x48c745f00600	               mov qword [rbp - 0x10], 6	        52	mailsplit.c	FUNCTION_13	CALL_1
0x4000320	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	mailsplit.c	FUNCTION_13	IF_1
0x4000324	        0x488b4008	                mov rax, qword [rax + 8]	        55	mailsplit.c	FUNCTION_13	IF_1
0x4000328	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        55	mailsplit.c	FUNCTION_13	IF_1
0x400032c	            0x7307	                           jae 0x4000335	        55	mailsplit.c	FUNCTION_13	IF_1
0x400032e	      0xb800000000	                              mov eax, 0	        56	mailsplit.c	FUNCTION_13	IF_1
0x4000333	            0xeb4d	                           jmp 0x4000382	        56	mailsplit.c	FUNCTION_13	IF_1
0x4000335	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	mailsplit.c	FUNCTION_13	CALL_2
0x4000339	        0x488b4010	            mov rax, qword [rax + 0x10] 	        58	mailsplit.c	FUNCTION_13	CALL_2
0x400033d	      0xbe00000000	                              mov esi, 0	        58	mailsplit.c	FUNCTION_13	CALL_2
0x4000342	          0x4889c7	                            mov rdi, rax	        58	mailsplit.c	FUNCTION_13	CALL_2
0x4000345	      0xe800000000	                          call 0x400034a	        58	mailsplit.c	FUNCTION_13	CALL_2
0x400034a	        0x488945f8	                mov qword [rbp - 8], rax	        58	mailsplit.c	FUNCTION_13	CALL_2
0x400034e	      0x48837df800	                  cmp qword [rbp - 8], 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000353	            0x7427	                            je 0x400037c	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000355	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000359	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        59	mailsplit.c	FUNCTION_13	CALL_3
0x400035d	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000361	          0x4801d0	                            add rax, rdx	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000364	      0xbe00000000	                              mov esi, 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000369	          0x4889c7	                            mov rdi, rax	        59	mailsplit.c	FUNCTION_13	CALL_3
0x400036c	      0xe800000000	                          call 0x4000371	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000371	            0x85c0	                           test eax, eax	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000373	            0x7407	                            je 0x400037c	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000375	      0xb801000000	                              mov eax, 1	        59	mailsplit.c	FUNCTION_13	CALL_3
0x400037a	            0xeb05	                           jmp 0x4000381	        59	mailsplit.c	FUNCTION_13	CALL_3
0x400037c	      0xb800000000	                              mov eax, 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000381	              0x90	                                     nop	        59	mailsplit.c	FUNCTION_13	CALL_3
0x4000382	              0xc9	                                   leave	        60	mailsplit.c	FUNCTION_13
0x4000383	              0xc3	                                     ret	        60	mailsplit.c	FUNCTION_13
is_from_line	DO,0:CALL,2:ELSE,0:FOR,1:functions,0:SWITCH,0:IF,5:WHILE,0	100
0x40001b5	              0x55	                                push rbp	        16	mailsplit.c	FUNCTION_12
0x40001b6	          0x4889e5	                            mov rbp, rsp	        16	mailsplit.c	FUNCTION_12
0x40001b9	        0x4883ec20	                           sub rsp, 0x20	        16	mailsplit.c	FUNCTION_12
0x40001bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	mailsplit.c	FUNCTION_12
0x40001c1	          0x8975e4	             mov dword [rbp - 0x1c], esi	        16	mailsplit.c	FUNCTION_12
0x40001c4	        0x837de413	           cmp dword [rbp - 0x1c], 0x13 	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001c8	            0x7e1a	                           jle 0x40001e4	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001ce	      0xba05000000	                              mov edx, 5	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001d3	          0x4889c6	                            mov rsi, rax	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001d6	      0xbf00000000	                              mov edi, 0	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001db	      0xe800000000	                          call 0x40001e0	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001e0	            0x85c0	                           test eax, eax	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001e2	            0x740a	                            je 0x40001ee	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x40001e4	      0xb800000000	                              mov eax, 0	        20	mailsplit.c	FUNCTION_12	IF_1
0x40001e9	      0xe91c010000	                           jmp 0x400030a	        20	mailsplit.c	FUNCTION_12	IF_1
0x40001ee	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        22	mailsplit.c	FUNCTION_12
0x40001f1	            0x4898	                                    cdqe	        22	mailsplit.c	FUNCTION_12
0x40001f3	        0x488d50fe	                      lea rdx, [rax - 2]	        22	mailsplit.c	FUNCTION_12
0x40001f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        22	mailsplit.c	FUNCTION_12
0x40001fb	          0x4801d0	                            add rax, rdx	        22	mailsplit.c	FUNCTION_12
0x40001fe	        0x488945f8	                mov qword [rbp - 8], rax	        22	mailsplit.c	FUNCTION_12
0x4000202	      0x488345e805	               add qword [rbp - 0x18], 5	        23	mailsplit.c	FUNCTION_12
0x4000207	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x400020b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x400020f	            0x730a	                           jae 0x400021b	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x4000211	      0xb800000000	                              mov eax, 0	        26	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x4000216	      0xe9ef000000	                           jmp 0x400030a	        26	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x400021b	      0x48836df801	                  sub qword [rbp - 8], 1	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x4000224	           0xfb600	                   movzx eax, byte [rax]	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x4000227	            0x3c3a	                            cmp al, 0x3a	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x4000229	            0x7402	                            je 0x400022d	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x400022b	            0xebda	                           jmp 0x4000207	        29	mailsplit.c	FUNCTION_12	FOR_1
0x400022d	              0x90	                                     nop	        28	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x400022e	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000232	        0x4883e804	                              sub rax, 4	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000236	           0xfb600	                   movzx eax, byte [rax]	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000239	           0xfb6c0	                           movzx eax, al	        31	mailsplit.c	FUNCTION_12	IF_4
0x400023c	            0x4898	                                    cdqe	        31	mailsplit.c	FUNCTION_12	IF_4
0x400023e	     0xfb680000000	                   movzx eax, byte [rax]	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000245	           0xfb6c0	                           movzx eax, al	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000248	          0x83e002	                              and eax, 2	        31	mailsplit.c	FUNCTION_12	IF_4
0x400024b	            0x85c0	                           test eax, eax	        31	mailsplit.c	FUNCTION_12	IF_4
0x400024d	     0xf8484000000	                            je 0x40002d7	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000253	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000257	        0x4883e802	                              sub rax, 2	        32	mailsplit.c	FUNCTION_12	IF_4
0x400025b	           0xfb600	                   movzx eax, byte [rax]	        32	mailsplit.c	FUNCTION_12	IF_4
0x400025e	           0xfb6c0	                           movzx eax, al	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000261	            0x4898	                                    cdqe	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000263	     0xfb680000000	                   movzx eax, byte [rax]	        32	mailsplit.c	FUNCTION_12	IF_4
0x400026a	           0xfb6c0	                           movzx eax, al	        32	mailsplit.c	FUNCTION_12	IF_4
0x400026d	          0x83e002	                              and eax, 2	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000270	            0x85c0	                           test eax, eax	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000272	            0x7463	                            je 0x40002d7	        31	mailsplit.c	FUNCTION_12	IF_4
0x4000274	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	mailsplit.c	FUNCTION_12	IF_4
0x4000278	        0x4883e801	                              sub rax, 1	        33	mailsplit.c	FUNCTION_12	IF_4
0x400027c	           0xfb600	                   movzx eax, byte [rax]	        33	mailsplit.c	FUNCTION_12	IF_4
0x400027f	           0xfb6c0	                           movzx eax, al	        33	mailsplit.c	FUNCTION_12	IF_4
0x4000282	            0x4898	                                    cdqe	        33	mailsplit.c	FUNCTION_12	IF_4
0x4000284	     0xfb680000000	                   movzx eax, byte [rax]	        33	mailsplit.c	FUNCTION_12	IF_4
0x400028b	           0xfb6c0	                           movzx eax, al	        33	mailsplit.c	FUNCTION_12	IF_4
0x400028e	          0x83e002	                              and eax, 2	        33	mailsplit.c	FUNCTION_12	IF_4
0x4000291	            0x85c0	                           test eax, eax	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000293	            0x7442	                            je 0x40002d7	        32	mailsplit.c	FUNCTION_12	IF_4
0x4000295	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	mailsplit.c	FUNCTION_12	IF_4
0x4000299	        0x4883c001	                              add rax, 1	        34	mailsplit.c	FUNCTION_12	IF_4
0x400029d	           0xfb600	                   movzx eax, byte [rax]	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002a0	           0xfb6c0	                           movzx eax, al	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002a3	            0x4898	                                    cdqe	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002a5	     0xfb680000000	                   movzx eax, byte [rax]	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002ac	           0xfb6c0	                           movzx eax, al	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002af	          0x83e002	                              and eax, 2	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002b2	            0x85c0	                           test eax, eax	        33	mailsplit.c	FUNCTION_12	IF_4
0x40002b4	            0x7421	                            je 0x40002d7	        33	mailsplit.c	FUNCTION_12	IF_4
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002ba	        0x4883c002	                              add rax, 2	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002be	           0xfb600	                   movzx eax, byte [rax]	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002c1	           0xfb6c0	                           movzx eax, al	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002c4	            0x4898	                                    cdqe	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002c6	     0xfb680000000	                   movzx eax, byte [rax]	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002cd	           0xfb6c0	                           movzx eax, al	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002d0	          0x83e002	                              and eax, 2	        35	mailsplit.c	FUNCTION_12	IF_4
0x40002d3	            0x85c0	                           test eax, eax	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002d5	            0x7507	                           jne 0x40002de	        34	mailsplit.c	FUNCTION_12	IF_4
0x40002d7	      0xb800000000	                              mov eax, 0	        36	mailsplit.c	FUNCTION_12	IF_4
0x40002dc	            0xeb2c	                           jmp 0x400030a	        36	mailsplit.c	FUNCTION_12	IF_4
0x40002de	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002e2	        0x4883c003	                              add rax, 3	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002e6	      0xba0a000000	                            mov edx, 0xa	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002eb	      0xbe00000000	                              mov esi, 0	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002f0	          0x4889c7	                            mov rdi, rax	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002f3	      0xe800000000	                          call 0x40002f8	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002f8	        0x4883f85a	                           cmp rax, 0x5a	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002fc	            0x7f07	                            jg 0x4000305	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_2
0x40002fe	      0xb800000000	                              mov eax, 0	        40	mailsplit.c	FUNCTION_12	IF_5
0x4000303	            0xeb05	                           jmp 0x400030a	        40	mailsplit.c	FUNCTION_12	IF_5
0x4000305	      0xb801000000	                              mov eax, 1	        43	mailsplit.c	FUNCTION_12
0x400030a	              0xc9	                                   leave	        44	mailsplit.c	FUNCTION_12
0x400030b	              0xc3	                                     ret	        44	mailsplit.c	FUNCTION_12
populate_maildir_list	DO,0:CALL,9:ELSE,0:FOR,1:functions,0:SWITCH,0:IF,3:WHILE,1	93
0x40005a4	              0x55	                                push rbp	       114	mailsplit.c	FUNCTION_15
0x40005a5	          0x4889e5	                            mov rbp, rsp	       114	mailsplit.c	FUNCTION_15
0x40005a8	        0x4883ec60	                           sub rsp, 0x60	       114	mailsplit.c	FUNCTION_15
0x40005ac	        0x48897da8	             mov qword [rbp - 0x58], rdi	       114	mailsplit.c	FUNCTION_15
0x40005b0	        0x488975a0	             mov qword [rbp - 0x60], rsi	       114	mailsplit.c	FUNCTION_15
0x40005b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       114	mailsplit.c	FUNCTION_15
0x40005bd	        0x488945f8	                mov qword [rbp - 8], rax	       114	mailsplit.c	FUNCTION_15
0x40005c1	            0x31c0	                            xor eax, eax	       114	mailsplit.c	FUNCTION_15
0x40005c3	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       117	mailsplit.c	FUNCTION_15
0x40005cb	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	mailsplit.c	FUNCTION_15
0x40005d3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       118	mailsplit.c	FUNCTION_15
0x40005db	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       118	mailsplit.c	FUNCTION_15
0x40005e3	    0xc745bcffffff	     mov dword [rbp - 0x44], 0xffffffff 	       120	mailsplit.c	FUNCTION_15
0x40005ea	        0x488d45e0	                   lea rax, [rbp - 0x20]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40005ee	        0x488945c8	             mov qword [rbp - 0x38], rax	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40005f2	      0xe9f5000000	                           jmp 0x40006ec	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40005f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x40005fb	          0x4889c7	                            mov rdi, rax	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x40005fe	      0xe800000000	                          call 0x4000603	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x4000603	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x4000607	          0x488b10	                    mov rdx, qword [rax]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x400060a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x400060e	          0x4889c6	                            mov rsi, rax	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x4000611	      0xbf00000000	                              mov edi, 0	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x4000616	      0xb800000000	                              mov eax, 0	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x400061b	      0xe800000000	                          call 0x4000620	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x4000620	        0x488945c0	             mov qword [rbp - 0x40], rax	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x4000624	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000628	          0x4889c7	                            mov rdi, rax	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x400062b	      0xe800000000	                          call 0x4000630	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000630	        0x488945d0	             mov qword [rbp - 0x30], rax	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000634	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000639	     0xf8582000000	                           jne 0x40006c1	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x400063f	      0xe800000000	                          call 0x4000644	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x4000644	            0x8b00	                    mov eax, dword [rax]	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x4000646	          0x83f802	                              cmp eax, 2	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x4000649	     0xf8497000000	                            je 0x40006e6	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x400064f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x4000653	          0x4889c6	                            mov rsi, rax	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x4000656	      0xbf00000000	                              mov edi, 0	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x400065b	      0xb800000000	                              mov eax, 0	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x4000660	      0xe800000000	                          call 0x4000665	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x4000665	      0xe8d6f9ffff	                    call sym.const_error	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x400066a	      0xe994000000	                           jmp 0x4000703	       129	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x400066f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x4000673	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x4000677	            0x3c2e	                            cmp al, 0x2e	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x4000679	            0x7502	                           jne 0x400067d	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x400067b	            0xeb44	                           jmp 0x40006c1	       134	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x400067d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x4000681	          0x4889c7	                            mov rdi, rax	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x4000684	      0xe800000000	                          call 0x4000689	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x4000689	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x400068d	        0x488d5013	                   lea rdx, [rax + 0x13]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x4000691	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x4000695	          0x488b00	                    mov rax, qword [rax]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x4000698	          0x4889c6	                            mov rsi, rax	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x400069b	      0xbf00000000	                              mov edi, 0	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x40006a0	      0xb800000000	                              mov eax, 0	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x40006a5	      0xe800000000	                          call 0x40006aa	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x40006aa	        0x488945c0	             mov qword [rbp - 0x40], rax	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x40006ae	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x40006b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x40006b6	          0x4889d6	                            mov rsi, rdx	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x40006b9	          0x4889c7	                            mov rdi, rax	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x40006bc	      0xe800000000	                          call 0x40006c1	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x40006c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006c5	          0x4889c7	                            mov rdi, rax	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006c8	      0xe800000000	                          call 0x40006cd	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006cd	        0x488945d8	             mov qword [rbp - 0x28], rax	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006d1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006d6	            0x7597	                           jne 0x400066f	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_4
0x40006d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_8
0x40006dc	          0x4889c7	                            mov rdi, rax	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_8
0x40006df	      0xe800000000	                          call 0x40006e4	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_8
0x40006e4	            0xeb01	                           jmp 0x40006e7	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_8
0x40006e6	              0x90	                                     nop	       127	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x40006e7	      0x488345c808	               add qword [rbp - 0x38], 8	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40006ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40006f0	          0x488b00	                    mov rax, qword [rax]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40006f3	          0x4885c0	                           test rax, rax	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40006f6	     0xf85fbfeffff	                           jne 0x40005f7	       122	mailsplit.c	FUNCTION_15	FOR_1
0x40006fc	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       143	mailsplit.c	FUNCTION_15
0x4000703	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       146	mailsplit.c	FUNCTION_15	CALL_9
0x4000707	          0x4889c7	                            mov rdi, rax	       146	mailsplit.c	FUNCTION_15	CALL_9
0x400070a	      0xe800000000	                          call 0x400070f	       146	mailsplit.c	FUNCTION_15	CALL_9
0x400070f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       147	mailsplit.c	FUNCTION_15
0x4000712	        0x488b4df8	                mov rcx, qword [rbp - 8]	       148	mailsplit.c	FUNCTION_15
0x4000716	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       148	mailsplit.c	FUNCTION_15
0x400071f	            0x7405	                            je 0x4000726	       148	mailsplit.c	FUNCTION_15
0x4000721	      0xe800000000	                          call 0x4000726	       148	mailsplit.c	FUNCTION_15
0x4000726	              0xc9	                                   leave	       148	mailsplit.c	FUNCTION_15
0x4000727	              0xc3	                                     ret	       148	mailsplit.c	FUNCTION_15
strbuf_addch	DO,0:CALL,2:ELSE,0:FOR,0:functions,0:SWITCH,0:IF,1:WHILE,0	33
0x400011b	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x400011c	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x400011f	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x4000123	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x4000127	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400012e	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000131	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000136	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000139	            0x7511	                           jne 0x400014c	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400013b	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x400013f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000144	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000147	      0xe800000000	                          call 0x400014c	       228	strbuf.h	FUNCTION_4	CALL_2
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000150	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x4000154	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000158	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x400015c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x4000160	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000164	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x4000168	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x400016b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x400016e	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000174	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x4000178	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x400017c	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x4000180	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x4000183	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x4000186	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x4000187	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x4000188	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
split_mbox	DO,1:CALL,10:ELSE,1:FOR,0:functions,0:SWITCH,0:IF,6:WHILE,1	121
0x4000a41	              0x55	                                push rbp	       221	mailsplit.c	FUNCTION_18
0x4000a42	          0x4889e5	                            mov rbp, rsp	       221	mailsplit.c	FUNCTION_18
0x4000a45	        0x4883ec40	                           sub rsp, 0x40	       221	mailsplit.c	FUNCTION_18
0x4000a49	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       221	mailsplit.c	FUNCTION_18
0x4000a4d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       221	mailsplit.c	FUNCTION_18
0x4000a51	          0x8955cc	             mov dword [rbp - 0x34], edx	       221	mailsplit.c	FUNCTION_18
0x4000a54	          0x894dc8	             mov dword [rbp - 0x38], ecx	       221	mailsplit.c	FUNCTION_18
0x4000a57	        0x448945c4	             mov dword [rbp - 0x3c], r8d	       221	mailsplit.c	FUNCTION_18
0x4000a5b	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       222	mailsplit.c	FUNCTION_18
0x4000a62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a66	      0xbe00000000	                              mov esi, 0	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a6b	          0x4889c7	                            mov rdi, rax	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a6e	      0xe800000000	                          call 0x4000a73	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a73	            0x85c0	                           test eax, eax	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a75	            0x7413	                            je 0x4000a8a	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a7b	      0xbe00000000	                              mov esi, 0	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a80	          0x4889c7	                            mov rdi, rax	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a83	      0xe800000000	                          call 0x4000a88	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a88	            0xeb07	                           jmp 0x4000a91	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a8a	    0x488b05000000	            mov rax, qword [0x04000a91] 	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a91	        0x488945f0	             mov qword [rbp - 0x10], rax	       225	mailsplit.c	FUNCTION_18	CALL_1
0x4000a95	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       226	mailsplit.c	FUNCTION_18
0x4000a9c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       228	mailsplit.c	FUNCTION_18	IF_1
0x4000aa1	            0x7520	                           jne 0x4000ac3	       228	mailsplit.c	FUNCTION_18	IF_1
0x4000aa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000aa7	          0x4889c6	                            mov rsi, rax	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000aaa	      0xbf00000000	                              mov edi, 0	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000aaf	      0xb800000000	                              mov eax, 0	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000ab9	      0xe882f5ffff	                    call sym.const_error	       229	mailsplit.c	FUNCTION_18	IF_1
0x4000abe	      0xe949010000	                           jmp 0x4000c0c	       230	mailsplit.c	FUNCTION_18	IF_1
0x4000ac3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_2
0x4000ac7	          0x4889c7	                            mov rdi, rax	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_2
0x4000aca	      0xe800000000	                          call 0x4000acf	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_2
0x4000acf	          0x8945ec	             mov dword [rbp - 0x14], eax	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_2
0x4000ad2	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       235	mailsplit.c	FUNCTION_18	DO_1	IF_2
0x4000ad6	            0x754f	                           jne 0x4000b27	       235	mailsplit.c	FUNCTION_18	DO_1	IF_2
0x4000ad8	    0x488b05000000	            mov rax, qword [0x04000adf] 	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0x4000adf	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0x4000ae3	            0x750b	                           jne 0x4000af0	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0x4000ae5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       238	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0x4000ae8	          0x8945e4	             mov dword [rbp - 0x1c], eax	       238	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0x4000aeb	      0xe91c010000	                           jmp 0x4000c0c	       243	mailsplit.c	FUNCTION_18	DO_1	IF_2
0x4000af0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_3
0x4000af4	          0x4889c7	                            mov rdi, rax	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_3
0x4000af7	      0xe800000000	                          call 0x4000afc	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_3
0x4000afc	      0xbf00000000	                              mov edi, 0	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b01	      0xe883f6ffff	                               call sym.	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b06	          0x4889c2	                            mov rdx, rax	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b0d	          0x4889c6	                            mov rsi, rax	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b10	          0x4889d7	                            mov rdi, rdx	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b13	      0xb800000000	                              mov eax, 0	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b18	      0xe800000000	                          call 0x4000b1d	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b1d	      0xe81ef5ffff	                    call sym.const_error	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_4
0x4000b22	      0xe9e5000000	                           jmp 0x4000c0c	       243	mailsplit.c	FUNCTION_18	DO_1	IF_2
0x4000b27	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b2a	           0xfb6c0	                           movzx eax, al	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b2d	            0x4898	                                    cdqe	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b2f	     0xfb680000000	                   movzx eax, byte [rax]	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b36	           0xfb6c0	                           movzx eax, al	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b39	          0x83e001	                              and eax, 1	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b3c	            0x85c0	                           test eax, eax	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b3e	            0x7583	                           jne 0x4000ac3	       245	mailsplit.c	FUNCTION_18	DO_1
0x4000b40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       246	mailsplit.c	FUNCTION_18	CALL_5
0x4000b44	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       246	mailsplit.c	FUNCTION_18	CALL_5
0x4000b47	          0x4889d6	                            mov rsi, rdx	       246	mailsplit.c	FUNCTION_18	CALL_5
0x4000b4a	            0x89c7	                            mov edi, eax	       246	mailsplit.c	FUNCTION_18	CALL_5
0x4000b4c	      0xe800000000	                          call 0x4000b51	       246	mailsplit.c	FUNCTION_18	CALL_5
0x4000b51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b55	      0xba0a000000	                            mov edx, 0xa	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b5a	          0x4889c6	                            mov rsi, rax	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b5d	      0xbf00000000	                              mov edi, 0	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b62	      0xe800000000	                          call 0x4000b67	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b67	            0x85c0	                           test eax, eax	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b69	            0x747c	                            je 0x4000be7	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_6
0x4000b6b	    0x488b05000000	            mov rax, qword [0x04000b72] 	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b72	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b76	            0x741d	                            je 0x4000b95	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b78	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b7c	          0x4889c6	                            mov rsi, rax	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b7f	      0xbf00000000	                              mov edi, 0	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b84	      0xb800000000	                              mov eax, 0	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b89	      0xe800000000	                          call 0x4000b8e	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b8e	      0xe8adf4ffff	                    call sym.const_error	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b93	            0xeb77	                           jmp 0x4000c0c	       252	mailsplit.c	FUNCTION_18	IF_4	IF_5
0x4000b95	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       254	mailsplit.c	FUNCTION_18	IF_4
0x4000b9c	            0xeb49	                           jmp 0x4000be7	       257	mailsplit.c	FUNCTION_18	WHILE_1
0x4000b9e	        0x8345c401	               add dword [rbp - 0x3c], 1	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000ba2	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000ba5	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000ba8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000bac	          0x4889c6	                            mov rsi, rax	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000baf	      0xbf00000000	                              mov edi, 0	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000bb4	      0xb800000000	                              mov eax, 0	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000bb9	      0xe800000000	                          call 0x4000bbe	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000bbe	        0x488945f8	                mov qword [rbp - 8], rax	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_7
0x4000bc2	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bc5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bc9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bcd	          0x4889ce	                            mov rsi, rcx	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bd0	          0x4889c7	                            mov rdi, rax	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bd3	      0xe8acf7ffff	                      call sym.split_one	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bd8	          0x8945e8	             mov dword [rbp - 0x18], eax	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_8
0x4000bdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_9
0x4000bdf	          0x4889c7	                            mov rdi, rax	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_9
0x4000be2	      0xe800000000	                          call 0x4000be7	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_9
0x4000be7	        0x837de800	               cmp dword [rbp - 0x18], 0	       257	mailsplit.c	FUNCTION_18	WHILE_1
0x4000beb	            0x74b1	                            je 0x4000b9e	       257	mailsplit.c	FUNCTION_18	WHILE_1
0x4000bed	    0x488b05000000	            mov rax, qword [0x04000bf4] 	       263	mailsplit.c	FUNCTION_18	IF_6
0x4000bf4	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       263	mailsplit.c	FUNCTION_18	IF_6
0x4000bf8	            0x740c	                            je 0x4000c06	       263	mailsplit.c	FUNCTION_18	IF_6
0x4000bfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	mailsplit.c	FUNCTION_18	CALL_10
0x4000bfe	          0x4889c7	                            mov rdi, rax	       264	mailsplit.c	FUNCTION_18	CALL_10
0x4000c01	      0xe800000000	                          call 0x4000c06	       264	mailsplit.c	FUNCTION_18	CALL_10
0x4000c06	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       266	mailsplit.c	FUNCTION_18
0x4000c09	          0x8945e4	             mov dword [rbp - 0x1c], eax	       266	mailsplit.c	FUNCTION_18
0x4000c0c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       268	mailsplit.c	FUNCTION_18
0x4000c0f	              0xc9	                                   leave	       269	mailsplit.c	FUNCTION_18
0x4000c10	              0xc3	                                     ret	       269	mailsplit.c	FUNCTION_18
