const_error	CALL,0:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	5
0x4000072	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_6
0x4000073	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_6
0x4000076	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_6
0x400007b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_6
0x400007c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_6
print_preparing_worktree_line	CALL,19:IF,5:ELSE,4:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	121
0x4001535	              0x55	                                push rbp	       369	worktree.c	FUNCTION_36
0x4001536	          0x4889e5	                            mov rbp, rsp	       369	worktree.c	FUNCTION_36
0x4001539	              0x53	                                push rbx	       369	worktree.c	FUNCTION_36
0x400153a	        0x4883ec58	                           sub rsp, 0x58	       369	worktree.c	FUNCTION_36
0x400153e	          0x897dbc	             mov dword [rbp - 0x44], edi	       369	worktree.c	FUNCTION_36
0x4001541	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	worktree.c	FUNCTION_36
0x4001545	        0x488955a8	             mov qword [rbp - 0x58], rdx	       369	worktree.c	FUNCTION_36
0x4001549	          0x894db8	             mov dword [rbp - 0x48], ecx	       369	worktree.c	FUNCTION_36
0x400154c	    0x64488b042528	                mov rax, qword fs:[0x28]	       369	worktree.c	FUNCTION_36
0x4001555	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	worktree.c	FUNCTION_36
0x4001559	            0x31c0	                            xor eax, eax	       369	worktree.c	FUNCTION_36
0x400155b	        0x837db800	               cmp dword [rbp - 0x48], 0	       370	worktree.c	FUNCTION_36	IF_1
0x400155f	     0xf8481000000	                            je 0x40015e6	       370	worktree.c	FUNCTION_36	IF_1
0x4001565	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       371	worktree.c	FUNCTION_36	IF_1	CALL_1
0x4001569	          0x4889c7	                            mov rdi, rax	       371	worktree.c	FUNCTION_36	IF_1	CALL_1
0x400156c	      0xe800000000	                          call 0x4001571	       371	worktree.c	FUNCTION_36	IF_1	CALL_1
0x4001571	        0x488945c0	             mov qword [rbp - 0x40], rax	       371	worktree.c	FUNCTION_36	IF_1	CALL_1
0x4001575	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       372	worktree.c	FUNCTION_36	IF_1	IF_2
0x400157a	            0x7526	                           jne 0x40015a2	       372	worktree.c	FUNCTION_36	IF_1	IF_2
0x400157c	      0xbf00000000	                              mov edi, 0	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001581	      0xe8f9ebffff	                               call sym.	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001586	          0x4889c2	                            mov rdx, rax	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001589	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x400158d	          0x4889c6	                            mov rsi, rax	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001590	          0x4889d7	                            mov rdi, rdx	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001593	      0xb800000000	                              mov eax, 0	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x4001598	      0xe800000000	                          call 0x400159d	       373	worktree.c	FUNCTION_36	IF_1	CALL_3
0x400159d	      0xe952010000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_36
0x40015a2	    0x8b0500000000	            mov eax, dword [0x040015a8] 	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015a8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       377	worktree.c	FUNCTION_36	IF_1	CALL_6
0x40015ac	        0x4883c204	                              add rdx, 4	       377	worktree.c	FUNCTION_36	IF_1	CALL_6
0x40015b0	            0x89c6	                            mov esi, eax	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015b2	          0x4889d7	                            mov rdi, rdx	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015b5	      0xe800000000	                          call 0x40015ba	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015ba	          0x4889c3	                            mov rbx, rax	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015bd	      0xbf00000000	                              mov edi, 0	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015c2	      0xe8b8ebffff	                               call sym.	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015c7	          0x4889c1	                            mov rcx, rax	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015ca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015ce	          0x4889da	                            mov rdx, rbx	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015d1	          0x4889c6	                            mov rsi, rax	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015d4	          0x4889cf	                            mov rdi, rcx	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015d7	      0xb800000000	                              mov eax, 0	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015dc	      0xe800000000	                          call 0x40015e1	       375	worktree.c	FUNCTION_36	IF_1	ELSE_1	CALL_5
0x40015e1	      0xe90e010000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_36
0x40015e6	      0x48837da800	               cmp qword [rbp - 0x58], 0	       378	worktree.c	FUNCTION_36	ELSE_2	IF_3
0x40015eb	            0x7426	                            je 0x4001613	       378	worktree.c	FUNCTION_36	ELSE_2	IF_3
0x40015ed	      0xbf00000000	                              mov edi, 0	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x40015f2	      0xe888ebffff	                               call sym.	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x40015f7	          0x4889c2	                            mov rdx, rax	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x40015fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x40015fe	          0x4889c6	                            mov rsi, rax	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x4001601	          0x4889d7	                            mov rdi, rdx	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x4001604	      0xb800000000	                              mov eax, 0	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x4001609	      0xe800000000	                          call 0x400160e	       379	worktree.c	FUNCTION_36	ELSE_2	IF_3	CALL_8
0x400160e	      0xe9e1000000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_36
0x4001613	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       381	worktree.c	FUNCTION_36	ELSE_3
0x400161b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       381	worktree.c	FUNCTION_36	ELSE_3
0x4001623	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       381	worktree.c	FUNCTION_36	ELSE_3
0x400162b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x400162f	            0x754a	                           jne 0x400167b	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001631	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001635	        0x488d45d0	                   lea rax, [rbp - 0x30]	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001639	          0x4889d6	                            mov rsi, rdx	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x400163c	          0x4889c7	                            mov rdi, rax	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x400163f	      0xe800000000	                          call 0x4001644	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001644	            0x85c0	                           test eax, eax	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001646	            0x7533	                           jne 0x400167b	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001648	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_10
0x400164c	          0x4889c7	                            mov rdi, rax	       383	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_10
0x400164f	      0xe800000000	                          call 0x4001654	       383	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_10
0x4001654	            0x85c0	                           test eax, eax	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001656	            0x7423	                            je 0x400167b	       382	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_9
0x4001658	      0xbf00000000	                              mov edi, 0	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x400165d	      0xe81debffff	                               call sym.	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x4001662	          0x4889c2	                            mov rdx, rax	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x4001665	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x4001669	          0x4889c6	                            mov rsi, rax	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x400166c	          0x4889d7	                            mov rdi, rdx	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x400166f	      0xb800000000	                              mov eax, 0	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x4001674	      0xe800000000	                          call 0x4001679	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x4001679	            0xeb6d	                           jmp 0x40016e8	       384	worktree.c	FUNCTION_36	ELSE_3	IF_4	CALL_12
0x400167b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_13
0x400167f	          0x4889c7	                            mov rdi, rax	       387	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_13
0x4001682	      0xe800000000	                          call 0x4001687	       387	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_13
0x4001687	        0x488945c8	             mov qword [rbp - 0x38], rax	       387	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_13
0x400168b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       388	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	IF_5
0x4001690	            0x7521	                           jne 0x40016b3	       388	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	IF_5
0x4001692	      0xbf00000000	                              mov edi, 0	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x4001697	      0xe8e3eaffff	                               call sym.	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x400169c	          0x4889c2	                            mov rdx, rax	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x400169f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x40016a3	          0x4889c6	                            mov rsi, rax	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x40016a6	          0x4889d7	                            mov rdi, rdx	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x40016a9	      0xb800000000	                              mov eax, 0	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x40016ae	      0xe800000000	                          call 0x40016b3	       389	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_15
0x40016b3	    0x8b0500000000	            mov eax, dword [0x040016b9] 	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016b9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       391	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_18
0x40016bd	        0x4883c204	                              add rdx, 4	       391	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_18
0x40016c1	            0x89c6	                            mov esi, eax	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016c3	          0x4889d7	                            mov rdi, rdx	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016c6	      0xe800000000	                          call 0x40016cb	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016cb	          0x4889c3	                            mov rbx, rax	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016ce	      0xbf00000000	                              mov edi, 0	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016d3	      0xe8a7eaffff	                               call sym.	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016d8	          0x4889de	                            mov rsi, rbx	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016db	          0x4889c7	                            mov rdi, rax	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016de	      0xb800000000	                              mov eax, 0	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016e3	      0xe800000000	                          call 0x40016e8	       390	worktree.c	FUNCTION_36	ELSE_3	ELSE_4	CALL_17
0x40016e8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       393	worktree.c	FUNCTION_36	ELSE_3	CALL_19
0x40016ec	          0x4889c7	                            mov rdi, rax	       393	worktree.c	FUNCTION_36	ELSE_3	CALL_19
0x40016ef	      0xe800000000	                          call 0x40016f4	       393	worktree.c	FUNCTION_36	ELSE_3	CALL_19
0x40016f4	              0x90	                                     nop	       395	worktree.c	FUNCTION_36
0x40016f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	worktree.c	FUNCTION_36
0x40016f9	    0x644833042528	                xor rax, qword fs:[0x28]	       395	worktree.c	FUNCTION_36
0x4001702	            0x7405	                            je 0x4001709	       395	worktree.c	FUNCTION_36
0x4001704	      0xe800000000	                          call 0x4001709	       395	worktree.c	FUNCTION_36
0x4001709	        0x4883c458	                           add rsp, 0x58	       395	worktree.c	FUNCTION_36
0x400170d	              0x5b	                                 pop rbx	       395	worktree.c	FUNCTION_36
0x400170e	              0x5d	                                 pop rbp	       395	worktree.c	FUNCTION_36
0x400170f	              0xc3	                                     ret	       395	worktree.c	FUNCTION_36
move_worktree	CALL,37:IF,10:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	210
0x40028cf	              0x55	                                push rbp	       689	worktree.c	FUNCTION_46
0x40028d0	          0x4889e5	                            mov rbp, rsp	       689	worktree.c	FUNCTION_46
0x40028d3	            0x4154	                                push r12	       689	worktree.c	FUNCTION_46
0x40028d5	              0x53	                                push rbx	       689	worktree.c	FUNCTION_46
0x40028d6	    0x4881ece00000	                           sub rsp, 0xe0	       689	worktree.c	FUNCTION_46
0x40028dd	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	       689	worktree.c	FUNCTION_46
0x40028e3	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       689	worktree.c	FUNCTION_46
0x40028ea	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       689	worktree.c	FUNCTION_46
0x40028f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       689	worktree.c	FUNCTION_46
0x40028fa	        0x488945e8	             mov qword [rbp - 0x18], rax	       689	worktree.c	FUNCTION_46
0x40028fe	            0x31c0	                            xor eax, eax	       689	worktree.c	FUNCTION_46
0x4002900	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       690	worktree.c	FUNCTION_46
0x4002904	      0xb800000000	                              mov eax, 0	       690	worktree.c	FUNCTION_46
0x4002909	      0xb908000000	                              mov ecx, 8	       690	worktree.c	FUNCTION_46
0x400290e	          0x4889d7	                            mov rdi, rdx	       690	worktree.c	FUNCTION_46
0x4002911	          0xf348ab	              rep stosq qword [rdi], rax	       690	worktree.c	FUNCTION_46
0x4002914	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       694	worktree.c	FUNCTION_46
0x400291f	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       694	worktree.c	FUNCTION_46
0x400292a	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       694	worktree.c	FUNCTION_46
0x4002935	    0x48c745800000	               mov qword [rbp - 0x80], 0	       695	worktree.c	FUNCTION_46
0x400293d	    0x48c745880000	               mov qword [rbp - 0x78], 0	       695	worktree.c	FUNCTION_46
0x4002945	    0x48c745900000	               mov qword [rbp - 0x70], 0	       695	worktree.c	FUNCTION_46
0x400294d	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       699	worktree.c	FUNCTION_46	CALL_2
0x4002951	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       699	worktree.c	FUNCTION_46	CALL_2
0x4002958	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       699	worktree.c	FUNCTION_46	CALL_2
0x400295f	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       699	worktree.c	FUNCTION_46	CALL_2
0x4002965	    0x41b900000000	                              mov r9d, 0	       699	worktree.c	FUNCTION_46	CALL_2
0x400296b	    0x41b800000000	                              mov r8d, 0	       699	worktree.c	FUNCTION_46	CALL_2
0x4002971	            0x89c7	                            mov edi, eax	       699	worktree.c	FUNCTION_46	CALL_2
0x4002973	      0xe800000000	                          call 0x4002978	       699	worktree.c	FUNCTION_46	CALL_2
0x4002978	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       699	worktree.c	FUNCTION_46	CALL_2
0x400297e	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 2	       700	worktree.c	FUNCTION_46	IF_1
0x4002985	            0x7411	                            je 0x4002998	       700	worktree.c	FUNCTION_46	IF_1
0x4002987	        0x488d45a0	                   lea rax, [rbp - 0x60]	       701	worktree.c	FUNCTION_46	CALL_3
0x400298b	          0x4889c6	                            mov rsi, rax	       701	worktree.c	FUNCTION_46	CALL_3
0x400298e	      0xbf00000000	                              mov edi, 0	       701	worktree.c	FUNCTION_46	CALL_3
0x4002993	      0xe800000000	                          call 0x4002998	       701	worktree.c	FUNCTION_46	CALL_3
0x4002998	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       703	worktree.c	FUNCTION_46	CALL_4
0x400299f	        0x4883c008	                              add rax, 8	       703	worktree.c	FUNCTION_46	CALL_4
0x40029a3	          0x488b10	                    mov rdx, qword [rax]	       703	worktree.c	FUNCTION_46	CALL_4
0x40029a6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       703	worktree.c	FUNCTION_46	CALL_4
0x40029ad	          0x4889d6	                            mov rsi, rdx	       703	worktree.c	FUNCTION_46	CALL_4
0x40029b0	          0x4889c7	                            mov rdi, rax	       703	worktree.c	FUNCTION_46	CALL_4
0x40029b3	      0xe800000000	                          call 0x40029b8	       703	worktree.c	FUNCTION_46	CALL_4
0x40029b8	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       703	worktree.c	FUNCTION_46	CALL_4
0x40029bf	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       704	worktree.c	FUNCTION_46	CALL_5
0x40029c6	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       704	worktree.c	FUNCTION_46	CALL_5
0x40029cd	          0x4889d6	                            mov rsi, rdx	       704	worktree.c	FUNCTION_46	CALL_5
0x40029d0	          0x4889c7	                            mov rdi, rax	       704	worktree.c	FUNCTION_46	CALL_5
0x40029d3	      0xe872d7ffff	                  call sym.strbuf_addstr	       704	worktree.c	FUNCTION_46	CALL_5
0x40029d8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       705	worktree.c	FUNCTION_46	CALL_6
0x40029df	          0x4889c7	                            mov rdi, rax	       705	worktree.c	FUNCTION_46	CALL_6
0x40029e2	      0xe800000000	                          call 0x40029e7	       705	worktree.c	FUNCTION_46	CALL_6
0x40029e7	      0xbf00000000	                              mov edi, 0	       707	worktree.c	FUNCTION_46	CALL_7
0x40029ec	      0xe800000000	                          call 0x40029f1	       707	worktree.c	FUNCTION_46	CALL_7
0x40029f1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       707	worktree.c	FUNCTION_46	CALL_7
0x40029f8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       708	worktree.c	FUNCTION_46	CALL_8
0x40029ff	          0x488b10	                    mov rdx, qword [rax]	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a02	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a09	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a10	          0x4889ce	                            mov rsi, rcx	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a13	          0x4889c7	                            mov rdi, rax	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a16	      0xe800000000	                          call 0x4002a1b	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a1b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       708	worktree.c	FUNCTION_46	CALL_8
0x4002a22	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       709	worktree.c	FUNCTION_46	IF_2
0x4002a2a	            0x7524	                           jne 0x4002a50	       709	worktree.c	FUNCTION_46	IF_2
0x4002a2c	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a33	          0x488b18	                    mov rbx, qword [rax]	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a36	      0xbf00000000	                              mov edi, 0	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a3b	      0xe83fd7ffff	                               call sym.	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a40	          0x4889de	                            mov rsi, rbx	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a43	          0x4889c7	                            mov rdi, rax	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a46	      0xb800000000	                              mov eax, 0	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a4b	      0xe800000000	                          call 0x4002a50	       710	worktree.c	FUNCTION_46	CALL_10
0x4002a50	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       711	worktree.c	FUNCTION_46	IF_3	CALL_11
0x4002a57	          0x4889c7	                            mov rdi, rax	       711	worktree.c	FUNCTION_46	IF_3	CALL_11
0x4002a5a	      0xe800000000	                          call 0x4002a5f	       711	worktree.c	FUNCTION_46	IF_3	CALL_11
0x4002a5f	            0x85c0	                           test eax, eax	       711	worktree.c	FUNCTION_46	IF_3	CALL_11
0x4002a61	            0x7424	                            je 0x4002a87	       711	worktree.c	FUNCTION_46	IF_3	CALL_11
0x4002a63	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a6a	          0x488b18	                    mov rbx, qword [rax]	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a6d	      0xbf00000000	                              mov edi, 0	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a72	      0xe808d7ffff	                               call sym.	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a77	          0x4889de	                            mov rsi, rbx	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a7a	          0x4889c7	                            mov rdi, rax	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a7d	      0xb800000000	                              mov eax, 0	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a82	      0xe800000000	                          call 0x4002a87	       712	worktree.c	FUNCTION_46	CALL_13
0x4002a87	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       713	worktree.c	FUNCTION_46	IF_4	CALL_14
0x4002a8e	          0x4889c7	                            mov rdi, rax	       713	worktree.c	FUNCTION_46	IF_4	CALL_14
0x4002a91	      0xe800000000	                          call 0x4002a96	       713	worktree.c	FUNCTION_46	IF_4	CALL_14
0x4002a96	            0x85c0	                           test eax, eax	       713	worktree.c	FUNCTION_46	IF_4	CALL_14
0x4002a98	            0x746f	                            je 0x4002b09	       713	worktree.c	FUNCTION_46	IF_4	CALL_14
0x4002a9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       714	worktree.c	FUNCTION_46	IF_4
0x4002aa1	          0x488b00	                    mov rax, qword [rax]	       714	worktree.c	FUNCTION_46	IF_4
0x4002aa4	          0x4889c7	                            mov rdi, rax	       714	worktree.c	FUNCTION_46	IF_4
0x4002aa7	      0xe8a7d5ffff	          call sym.git_find_last_dir_sep	       714	worktree.c	FUNCTION_46	IF_4
0x4002aac	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       714	worktree.c	FUNCTION_46	IF_4
0x4002ab3	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       716	worktree.c	FUNCTION_46	IF_4	IF_5
0x4002abb	            0x7524	                           jne 0x4002ae1	       716	worktree.c	FUNCTION_46	IF_4	IF_5
0x4002abd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ac4	          0x488b18	                    mov rbx, qword [rax]	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ac7	      0xbf00000000	                              mov edi, 0	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002acc	      0xe8aed6ffff	                               call sym.	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ad1	          0x4889de	                            mov rsi, rbx	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ad4	          0x4889c7	                            mov rdi, rax	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ad7	      0xb800000000	                              mov eax, 0	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002adc	      0xe800000000	                          call 0x4002ae1	       717	worktree.c	FUNCTION_46	IF_4	IF_5	CALL_16
0x4002ae1	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       719	worktree.c	FUNCTION_46	IF_4	CALL_17
0x4002ae8	          0x4889c7	                            mov rdi, rax	       719	worktree.c	FUNCTION_46	IF_4	CALL_17
0x4002aeb	      0xe800000000	                          call 0x4002af0	       719	worktree.c	FUNCTION_46	IF_4	CALL_17
0x4002af0	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       720	worktree.c	FUNCTION_46	IF_4	CALL_18
0x4002af7	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       720	worktree.c	FUNCTION_46	IF_4	CALL_18
0x4002afe	          0x4889d6	                            mov rsi, rdx	       720	worktree.c	FUNCTION_46	IF_4	CALL_18
0x4002b01	          0x4889c7	                            mov rdi, rax	       720	worktree.c	FUNCTION_46	IF_4	CALL_18
0x4002b04	      0xe841d6ffff	                  call sym.strbuf_addstr	       720	worktree.c	FUNCTION_46	IF_4	CALL_18
0x4002b09	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       722	worktree.c	FUNCTION_46	IF_6	CALL_19
0x4002b10	          0x4889c7	                            mov rdi, rax	       722	worktree.c	FUNCTION_46	IF_6	CALL_19
0x4002b13	      0xe800000000	                          call 0x4002b18	       722	worktree.c	FUNCTION_46	IF_6	CALL_19
0x4002b18	            0x85c0	                           test eax, eax	       722	worktree.c	FUNCTION_46	IF_6	CALL_19
0x4002b1a	            0x7421	                            je 0x4002b3d	       722	worktree.c	FUNCTION_46	IF_6	CALL_19
0x4002b1c	    0x488b9d70ffff	             mov rbx, qword [rbp - 0x90]	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b23	      0xbf00000000	                              mov edi, 0	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b28	      0xe852d6ffff	                               call sym.	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b2d	          0x4889de	                            mov rsi, rbx	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b30	          0x4889c7	                            mov rdi, rax	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b33	      0xb800000000	                              mov eax, 0	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b38	      0xe800000000	                          call 0x4002b3d	       723	worktree.c	FUNCTION_46	CALL_21
0x4002b3d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       725	worktree.c	FUNCTION_46	CALL_22
0x4002b44	          0x4889c7	                            mov rdi, rax	       725	worktree.c	FUNCTION_46	CALL_22
0x4002b47	      0xe845fcffff	         call sym.validate_no_submodules	       725	worktree.c	FUNCTION_46	CALL_22
0x4002b4c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       727	worktree.c	FUNCTION_46	CALL_23
0x4002b53	          0x4889c7	                            mov rdi, rax	       727	worktree.c	FUNCTION_46	CALL_23
0x4002b56	      0xe800000000	                          call 0x4002b5b	       727	worktree.c	FUNCTION_46	CALL_23
0x4002b5b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       727	worktree.c	FUNCTION_46	CALL_23
0x4002b62	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       728	worktree.c	FUNCTION_46	IF_7
0x4002b6a	            0x7449	                            je 0x4002bb5	       728	worktree.c	FUNCTION_46	IF_7
0x4002b6c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       729	worktree.c	FUNCTION_46	IF_7	IF_8
0x4002b73	           0xfb600	                   movzx eax, byte [rax]	       729	worktree.c	FUNCTION_46	IF_7	IF_8
0x4002b76	            0x84c0	                             test al, al	       729	worktree.c	FUNCTION_46	IF_7	IF_8
0x4002b78	            0x7424	                            je 0x4002b9e	       729	worktree.c	FUNCTION_46	IF_7	IF_8
0x4002b7a	      0xbf00000000	                              mov edi, 0	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b7f	      0xe8fbd5ffff	                               call sym.	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b84	          0x4889c2	                            mov rdx, rax	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b87	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b8e	          0x4889c6	                            mov rsi, rax	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b91	          0x4889d7	                            mov rdi, rdx	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b94	      0xb800000000	                              mov eax, 0	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b99	      0xe800000000	                          call 0x4002b9e	       730	worktree.c	FUNCTION_46	IF_7	IF_8	CALL_25
0x4002b9e	      0xbf00000000	                              mov edi, 0	       732	worktree.c	FUNCTION_46	IF_7	CALL_27
0x4002ba3	      0xe8d7d5ffff	                               call sym.	       732	worktree.c	FUNCTION_46	IF_7	CALL_27
0x4002ba8	          0x4889c7	                            mov rdi, rax	       732	worktree.c	FUNCTION_46	IF_7	CALL_27
0x4002bab	      0xb800000000	                              mov eax, 0	       732	worktree.c	FUNCTION_46	IF_7	CALL_27
0x4002bb0	      0xe800000000	                          call 0x4002bb5	       732	worktree.c	FUNCTION_46	IF_7	CALL_27
0x4002bb5	        0x488d4d80	                   lea rcx, [rbp - 0x80]	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bb9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bc0	      0xba00000000	                              mov edx, 0	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bc5	          0x4889ce	                            mov rsi, rcx	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bc8	          0x4889c7	                            mov rdi, rax	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bcb	      0xe800000000	                          call 0x4002bd0	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bd0	            0x85c0	                           test eax, eax	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bd2	            0x741e	                            je 0x4002bf2	       734	worktree.c	FUNCTION_46	IF_9	CALL_28
0x4002bd4	        0x488b5d90	             mov rbx, qword [rbp - 0x70]	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002bd8	      0xbf00000000	                              mov edi, 0	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002bdd	      0xe89dd5ffff	                               call sym.	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002be2	          0x4889de	                            mov rsi, rbx	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002be5	          0x4889c7	                            mov rdi, rax	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002be8	      0xb800000000	                              mov eax, 0	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002bed	      0xe800000000	                          call 0x4002bf2	       735	worktree.c	FUNCTION_46	IF_9	CALL_30
0x4002bf2	        0x488d4580	                   lea rax, [rbp - 0x80]	       737	worktree.c	FUNCTION_46	CALL_31
0x4002bf6	          0x4889c7	                            mov rdi, rax	       737	worktree.c	FUNCTION_46	CALL_31
0x4002bf9	      0xe800000000	                          call 0x4002bfe	       737	worktree.c	FUNCTION_46	CALL_31
0x4002bfe	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c05	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c0c	          0x488b00	                    mov rax, qword [rax]	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c0f	          0x4889d6	                            mov rsi, rdx	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c12	          0x4889c7	                            mov rdi, rax	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c15	      0xe800000000	                          call 0x4002c1a	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c1a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c1d	            0x752e	                           jne 0x4002c4d	       739	worktree.c	FUNCTION_46	IF_10	CALL_32
0x4002c1f	    0x4c8ba570ffff	             mov r12, qword [rbp - 0x90]	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c26	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c2d	          0x488b18	                    mov rbx, qword [rax]	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c30	      0xbf00000000	                              mov edi, 0	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c35	      0xe845d5ffff	                               call sym.	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c3a	          0x4c89e2	                            mov rdx, r12	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c3d	          0x4889de	                            mov rsi, rbx	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c40	          0x4889c7	                            mov rdi, rax	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c43	      0xb800000000	                              mov eax, 0	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c48	      0xe800000000	                          call 0x4002c4d	       740	worktree.c	FUNCTION_46	CALL_34
0x4002c4d	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       742	worktree.c	FUNCTION_46	CALL_35
0x4002c54	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       742	worktree.c	FUNCTION_46	CALL_35
0x4002c5b	          0x4889d6	                            mov rsi, rdx	       742	worktree.c	FUNCTION_46	CALL_35
0x4002c5e	          0x4889c7	                            mov rdi, rax	       742	worktree.c	FUNCTION_46	CALL_35
0x4002c61	      0xe800000000	                          call 0x4002c66	       742	worktree.c	FUNCTION_46	CALL_35
0x4002c66	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       744	worktree.c	FUNCTION_46	CALL_36
0x4002c6d	          0x4889c7	                            mov rdi, rax	       744	worktree.c	FUNCTION_46	CALL_36
0x4002c70	      0xe800000000	                          call 0x4002c75	       744	worktree.c	FUNCTION_46	CALL_36
0x4002c75	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       745	worktree.c	FUNCTION_46	CALL_37
0x4002c7c	          0x4889c7	                            mov rdi, rax	       745	worktree.c	FUNCTION_46	CALL_37
0x4002c7f	      0xe800000000	                          call 0x4002c84	       745	worktree.c	FUNCTION_46	CALL_37
0x4002c84	      0xb800000000	                              mov eax, 0	       746	worktree.c	FUNCTION_46
0x4002c89	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       747	worktree.c	FUNCTION_46
0x4002c8d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       747	worktree.c	FUNCTION_46
0x4002c96	            0x7405	                            je 0x4002c9d	       747	worktree.c	FUNCTION_46
0x4002c98	      0xe800000000	                          call 0x4002c9d	       747	worktree.c	FUNCTION_46
0x4002c9d	    0x4881c4e00000	                           add rsp, 0xe0	       747	worktree.c	FUNCTION_46
0x4002ca4	              0x5b	                                 pop rbx	       747	worktree.c	FUNCTION_46
0x4002ca5	            0x415c	                                 pop r12	       747	worktree.c	FUNCTION_46
0x4002ca7	              0x5d	                                 pop rbp	       747	worktree.c	FUNCTION_46
0x4002ca8	              0xc3	                                     ret	       747	worktree.c	FUNCTION_46
prune_worktree	CALL,35:IF,9:ELSE,1:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,0	239
0x400025b	              0x55	                                push rbp	        50	worktree.c	FUNCTION_29
0x400025c	          0x4889e5	                            mov rbp, rsp	        50	worktree.c	FUNCTION_29
0x400025f	              0x53	                                push rbx	        50	worktree.c	FUNCTION_29
0x4000260	    0x4881ecd80000	                           sub rsp, 0xd8	        50	worktree.c	FUNCTION_29
0x4000267	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        50	worktree.c	FUNCTION_29
0x400026e	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	        50	worktree.c	FUNCTION_29
0x4000275	    0x64488b042528	                mov rax, qword fs:[0x28]	        50	worktree.c	FUNCTION_29
0x400027e	        0x488945e8	             mov qword [rbp - 0x18], rax	        50	worktree.c	FUNCTION_29
0x4000282	            0x31c0	                            xor eax, eax	        50	worktree.c	FUNCTION_29
0x4000284	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x400028b	          0x4889c6	                            mov rsi, rax	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x400028e	      0xbf00000000	                              mov edi, 0	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x4000293	      0xb800000000	                              mov eax, 0	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x4000298	      0xe800000000	                          call 0x400029d	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x400029d	          0x4889c7	                            mov rdi, rax	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x40002a0	      0xe800000000	                          call 0x40002a5	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x40002a5	            0x85c0	                           test eax, eax	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x40002a7	            0x7535	                           jne 0x40002de	        57	worktree.c	FUNCTION_29	IF_1	CALL_2
0x40002a9	      0xbf00000000	                              mov edi, 0	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002ae	      0xe8ccfeffff	                               call sym.	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002b3	          0x4889c1	                            mov rcx, rax	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002b6	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002bd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002c4	          0x4889ce	                            mov rsi, rcx	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002c7	          0x4889c7	                            mov rdi, rax	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002ca	      0xb800000000	                              mov eax, 0	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002cf	      0xe800000000	                          call 0x40002d4	        58	worktree.c	FUNCTION_29	IF_1	CALL_4
0x40002d4	      0xb801000000	                              mov eax, 1	        59	worktree.c	FUNCTION_29	IF_1
0x40002d9	      0xe9a3030000	                           jmp 0x4000681	        59	worktree.c	FUNCTION_29	IF_1
0x40002de	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002e5	          0x4889c6	                            mov rsi, rax	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002e8	      0xbf00000000	                              mov edi, 0	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002ed	      0xb800000000	                              mov eax, 0	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002f2	      0xe800000000	                          call 0x40002f7	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002f7	          0x4889c7	                            mov rdi, rax	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002fa	      0xe800000000	                          call 0x40002ff	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x40002ff	            0x85c0	                           test eax, eax	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x4000301	            0x740a	                            je 0x400030d	        61	worktree.c	FUNCTION_29	IF_2	CALL_6
0x4000303	      0xb800000000	                              mov eax, 0	        62	worktree.c	FUNCTION_29	IF_2
0x4000308	      0xe974030000	                           jmp 0x4000681	        62	worktree.c	FUNCTION_29	IF_2
0x400030d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000314	          0x4889c6	                            mov rsi, rax	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000317	      0xbf00000000	                              mov edi, 0	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x400031c	      0xb800000000	                              mov eax, 0	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000321	      0xe800000000	                          call 0x4000326	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000326	          0x4889c2	                            mov rdx, rax	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000329	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000330	          0x4889c6	                            mov rsi, rax	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000333	          0x4889d7	                            mov rdi, rdx	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x4000336	      0xe800000000	                          call 0x400033b	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x400033b	            0x85c0	                           test eax, eax	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x400033d	            0x7435	                            je 0x4000374	        63	worktree.c	FUNCTION_29	IF_3	CALL_7
0x400033f	      0xbf00000000	                              mov edi, 0	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x4000344	      0xe836feffff	                               call sym.	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x4000349	          0x4889c1	                            mov rcx, rax	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x400034c	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x4000353	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x400035a	          0x4889ce	                            mov rsi, rcx	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x400035d	          0x4889c7	                            mov rdi, rax	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x4000360	      0xb800000000	                              mov eax, 0	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x4000365	      0xe800000000	                          call 0x400036a	        64	worktree.c	FUNCTION_29	IF_3	CALL_9
0x400036a	      0xb801000000	                              mov eax, 1	        65	worktree.c	FUNCTION_29	IF_3
0x400036f	      0xe90d030000	                           jmp 0x4000681	        65	worktree.c	FUNCTION_29	IF_3
0x4000374	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        67	worktree.c	FUNCTION_29	CALL_11
0x400037b	          0x4889c6	                            mov rsi, rax	        67	worktree.c	FUNCTION_29	CALL_11
0x400037e	      0xbf00000000	                              mov edi, 0	        67	worktree.c	FUNCTION_29	CALL_11
0x4000383	      0xb800000000	                              mov eax, 0	        67	worktree.c	FUNCTION_29	CALL_11
0x4000388	      0xe800000000	                          call 0x400038d	        67	worktree.c	FUNCTION_29	CALL_11
0x400038d	      0xbe00000000	                              mov esi, 0	        67	worktree.c	FUNCTION_29	CALL_11
0x4000392	          0x4889c7	                            mov rdi, rax	        67	worktree.c	FUNCTION_29	CALL_11
0x4000395	      0xb800000000	                              mov eax, 0	        67	worktree.c	FUNCTION_29	CALL_11
0x400039a	      0xe800000000	                          call 0x400039f	        67	worktree.c	FUNCTION_29	CALL_11
0x400039f	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	        67	worktree.c	FUNCTION_29	CALL_11
0x40003a5	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	        68	worktree.c	FUNCTION_29	IF_4
0x40003ac	            0x7946	                           jns 0x40003f4	        68	worktree.c	FUNCTION_29	IF_4
0x40003ae	      0xe800000000	                          call 0x40003b3	        70	worktree.c	FUNCTION_29	IF_4	CALL_14
0x40003b3	            0x8b00	                    mov eax, dword [rax]	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003b5	            0x89c7	                            mov edi, eax	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003b7	      0xe800000000	                          call 0x40003bc	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003bc	          0x4889c3	                            mov rbx, rax	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003bf	      0xbf00000000	                              mov edi, 0	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003c4	      0xe8b6fdffff	                               call sym.	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003c9	          0x4889c6	                            mov rsi, rax	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003cc	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003d3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003da	          0x4889d9	                            mov rcx, rbx	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003dd	          0x4889c7	                            mov rdi, rax	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003e0	      0xb800000000	                              mov eax, 0	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003e5	      0xe800000000	                          call 0x40003ea	        69	worktree.c	FUNCTION_29	IF_4	CALL_13
0x40003ea	      0xb801000000	                              mov eax, 1	        71	worktree.c	FUNCTION_29	IF_4
0x40003ef	      0xe98d020000	                           jmp 0x4000681	        71	worktree.c	FUNCTION_29	IF_4
0x40003f4	        0x488b4580	             mov rax, qword [rbp - 0x80]	        73	worktree.c	FUNCTION_29	CALL_15
0x40003f8	          0x4889c7	                            mov rdi, rax	        73	worktree.c	FUNCTION_29	CALL_15
0x40003fb	      0xe87dfcffff	                        call sym.xsize_t	        73	worktree.c	FUNCTION_29	CALL_15
0x4000400	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        73	worktree.c	FUNCTION_29	CALL_15
0x4000407	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        74	worktree.c	FUNCTION_29	CALL_16
0x400040e	          0x4889c7	                            mov rdi, rax	        74	worktree.c	FUNCTION_29	CALL_16
0x4000411	      0xe800000000	                          call 0x4000416	        74	worktree.c	FUNCTION_29	CALL_16
0x4000416	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        74	worktree.c	FUNCTION_29	CALL_16
0x400041d	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	        76	worktree.c	FUNCTION_29	CALL_17
0x4000424	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	        76	worktree.c	FUNCTION_29	CALL_17
0x400042b	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        76	worktree.c	FUNCTION_29	CALL_17
0x4000431	          0x4889ce	                            mov rsi, rcx	        76	worktree.c	FUNCTION_29	CALL_17
0x4000434	            0x89c7	                            mov edi, eax	        76	worktree.c	FUNCTION_29	CALL_17
0x4000436	      0xe800000000	                          call 0x400043b	        76	worktree.c	FUNCTION_29	CALL_17
0x400043b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        76	worktree.c	FUNCTION_29	CALL_17
0x4000442	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	        77	worktree.c	FUNCTION_29	IF_5
0x400044a	            0x7962	                           jns 0x40004ae	        77	worktree.c	FUNCTION_29	IF_5
0x400044c	      0xe800000000	                          call 0x4000451	        79	worktree.c	FUNCTION_29	IF_5	CALL_20
0x4000451	            0x8b00	                    mov eax, dword [rax]	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000453	            0x89c7	                            mov edi, eax	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000455	      0xe800000000	                          call 0x400045a	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x400045a	          0x4889c3	                            mov rbx, rax	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x400045d	      0xbf00000000	                              mov edi, 0	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000462	      0xe818fdffff	                               call sym.	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000467	          0x4889c6	                            mov rsi, rax	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x400046a	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000471	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000478	          0x4889d9	                            mov rcx, rbx	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x400047b	          0x4889c7	                            mov rdi, rax	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x400047e	      0xb800000000	                              mov eax, 0	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000483	      0xe800000000	                          call 0x4000488	        78	worktree.c	FUNCTION_29	IF_5	CALL_19
0x4000488	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        80	worktree.c	FUNCTION_29	IF_5	CALL_21
0x400048e	            0x89c7	                            mov edi, eax	        80	worktree.c	FUNCTION_29	IF_5	CALL_21
0x4000490	      0xe800000000	                          call 0x4000495	        80	worktree.c	FUNCTION_29	IF_5	CALL_21
0x4000495	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        81	worktree.c	FUNCTION_29	IF_5	CALL_22
0x400049c	          0x4889c7	                            mov rdi, rax	        81	worktree.c	FUNCTION_29	IF_5	CALL_22
0x400049f	      0xe800000000	                          call 0x40004a4	        81	worktree.c	FUNCTION_29	IF_5	CALL_22
0x40004a4	      0xb801000000	                              mov eax, 1	        82	worktree.c	FUNCTION_29	IF_5
0x40004a9	      0xe9d3010000	                           jmp 0x4000681	        82	worktree.c	FUNCTION_29	IF_5
0x40004ae	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        84	worktree.c	FUNCTION_29	CALL_23
0x40004b4	            0x89c7	                            mov edi, eax	        84	worktree.c	FUNCTION_29	CALL_23
0x40004b6	      0xe800000000	                          call 0x40004bb	        84	worktree.c	FUNCTION_29	CALL_23
0x40004bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        86	worktree.c	FUNCTION_29	IF_6
0x40004c2	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	        86	worktree.c	FUNCTION_29	IF_6
0x40004c9	            0x745a	                            je 0x4000525	        86	worktree.c	FUNCTION_29	IF_6
0x40004cb	    0x488b9d48ffff	             mov rbx, qword [rbp - 0xb8]	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004d2	      0xbf00000000	                              mov edi, 0	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004d7	      0xe8a3fcffff	                               call sym.	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004dc	          0x4889c6	                            mov rsi, rax	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004df	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004e6	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004ed	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004f4	          0x4989d8	                             mov r8, rbx	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004f7	          0x4889c7	                            mov rdi, rax	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004fa	      0xb800000000	                              mov eax, 0	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x40004ff	      0xe800000000	                          call 0x4000504	        87	worktree.c	FUNCTION_29	IF_6	CALL_24
0x4000504	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        90	worktree.c	FUNCTION_29	IF_6	CALL_26
0x400050b	          0x4889c7	                            mov rdi, rax	        90	worktree.c	FUNCTION_29	IF_6	CALL_26
0x400050e	      0xe800000000	                          call 0x4000513	        90	worktree.c	FUNCTION_29	IF_6	CALL_26
0x4000513	      0xb801000000	                              mov eax, 1	        91	worktree.c	FUNCTION_29	IF_6
0x4000518	      0xe964010000	                           jmp 0x4000681	        91	worktree.c	FUNCTION_29	IF_6
0x400051d	    0x4883ad38ffff	               sub qword [rbp - 0xc8], 1	        94	worktree.c	FUNCTION_29	WHILE_1
0x4000525	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	        93	worktree.c	FUNCTION_29	WHILE_1
0x400052d	            0x7438	                            je 0x4000567	        93	worktree.c	FUNCTION_29	WHILE_1
0x400052f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000536	        0x488d50ff	                      lea rdx, [rax - 1]	        93	worktree.c	FUNCTION_29	WHILE_1
0x400053a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000541	          0x4801d0	                            add rax, rdx	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000544	           0xfb600	                   movzx eax, byte [rax]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000547	            0x3c0a	                             cmp al, 0xa	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000549	            0x74d2	                            je 0x400051d	        93	worktree.c	FUNCTION_29	WHILE_1
0x400054b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000552	        0x488d50ff	                      lea rdx, [rax - 1]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000556	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        93	worktree.c	FUNCTION_29	WHILE_1
0x400055d	          0x4801d0	                            add rax, rdx	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000560	           0xfb600	                   movzx eax, byte [rax]	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000563	            0x3c0d	                             cmp al, 0xd	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000565	            0x74b6	                            je 0x400051d	        93	worktree.c	FUNCTION_29	WHILE_1
0x4000567	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	        95	worktree.c	FUNCTION_29	IF_7
0x400056f	            0x7544	                           jne 0x40005b5	        95	worktree.c	FUNCTION_29	IF_7
0x4000571	      0xbf00000000	                              mov edi, 0	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x4000576	      0xe804fcffff	                               call sym.	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x400057b	          0x4889c1	                            mov rcx, rax	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x400057e	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x4000585	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x400058c	          0x4889ce	                            mov rsi, rcx	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x400058f	          0x4889c7	                            mov rdi, rax	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x4000592	      0xb800000000	                              mov eax, 0	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x4000597	      0xe800000000	                          call 0x400059c	        96	worktree.c	FUNCTION_29	IF_7	CALL_28
0x400059c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        97	worktree.c	FUNCTION_29	IF_7	CALL_29
0x40005a3	          0x4889c7	                            mov rdi, rax	        97	worktree.c	FUNCTION_29	IF_7	CALL_29
0x40005a6	      0xe800000000	                          call 0x40005ab	        97	worktree.c	FUNCTION_29	IF_7	CALL_29
0x40005ab	      0xb801000000	                              mov eax, 1	        98	worktree.c	FUNCTION_29	IF_7
0x40005b0	      0xe9cc000000	                           jmp 0x4000681	        98	worktree.c	FUNCTION_29	IF_7
0x40005b5	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       100	worktree.c	FUNCTION_29
0x40005bc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       100	worktree.c	FUNCTION_29
0x40005c3	          0x4801d0	                            add rax, rdx	       100	worktree.c	FUNCTION_29
0x40005c6	          0xc60000	                       mov byte [rax], 0	       100	worktree.c	FUNCTION_29
0x40005c9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       101	worktree.c	FUNCTION_29	IF_8	CALL_30
0x40005d0	          0x4889c7	                            mov rdi, rax	       101	worktree.c	FUNCTION_29	IF_8	CALL_30
0x40005d3	      0xe800000000	                          call 0x40005d8	       101	worktree.c	FUNCTION_29	IF_8	CALL_30
0x40005d8	            0x85c0	                           test eax, eax	       101	worktree.c	FUNCTION_29	IF_8	CALL_30
0x40005da	     0xf858d000000	                           jne 0x400066d	       101	worktree.c	FUNCTION_29	IF_8	CALL_30
0x40005e0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       102	worktree.c	FUNCTION_29	IF_8	CALL_31
0x40005e7	          0x4889c7	                            mov rdi, rax	       102	worktree.c	FUNCTION_29	IF_8	CALL_31
0x40005ea	      0xe800000000	                          call 0x40005ef	       102	worktree.c	FUNCTION_29	IF_8	CALL_31
0x40005ef	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x40005f6	          0x4889c6	                            mov rsi, rax	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x40005f9	      0xbf00000000	                              mov edi, 0	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x40005fe	      0xb800000000	                              mov eax, 0	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000603	      0xe800000000	                          call 0x4000608	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000608	          0x4889c2	                            mov rdx, rax	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x400060b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000612	          0x4889c6	                            mov rsi, rax	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000615	          0x4889d7	                            mov rdi, rdx	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000618	      0xe800000000	                          call 0x400061d	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x400061d	            0x85c0	                           test eax, eax	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x400061f	            0x7513	                           jne 0x4000634	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000621	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       104	worktree.c	FUNCTION_29	IF_8	IF_9
0x4000625	          0x4889c2	                            mov rdx, rax	       104	worktree.c	FUNCTION_29	IF_8	IF_9
0x4000628	    0x488b05000000	            mov rax, qword [0x0400062f] 	       104	worktree.c	FUNCTION_29	IF_8	IF_9
0x400062f	          0x4839c2	                            cmp rdx, rax	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000632	            0x7732	                            ja 0x4000666	       103	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_32
0x4000634	      0xbf00000000	                              mov edi, 0	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x4000639	      0xe841fbffff	                               call sym.	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x400063e	          0x4889c1	                            mov rcx, rax	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x4000641	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x4000648	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x400064f	          0x4889ce	                            mov rsi, rcx	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x4000652	          0x4889c7	                            mov rdi, rax	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x4000655	      0xb800000000	                              mov eax, 0	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x400065a	      0xe800000000	                          call 0x400065f	       105	worktree.c	FUNCTION_29	IF_8	IF_9	CALL_34
0x400065f	      0xb801000000	                              mov eax, 1	       106	worktree.c	FUNCTION_29	IF_8	IF_9
0x4000664	            0xeb1b	                           jmp 0x4000681	       106	worktree.c	FUNCTION_29	IF_8	IF_9
0x4000666	      0xb800000000	                              mov eax, 0	       108	worktree.c	FUNCTION_29	IF_8	ELSE_1
0x400066b	            0xeb14	                           jmp 0x4000681	       108	worktree.c	FUNCTION_29	IF_8	ELSE_1
0x400066d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       111	worktree.c	FUNCTION_29	CALL_35
0x4000674	          0x4889c7	                            mov rdi, rax	       111	worktree.c	FUNCTION_29	CALL_35
0x4000677	      0xe800000000	                          call 0x400067c	       111	worktree.c	FUNCTION_29	CALL_35
0x400067c	      0xb800000000	                              mov eax, 0	       112	worktree.c	FUNCTION_29
0x4000681	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       113	worktree.c	FUNCTION_29
0x4000685	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       113	worktree.c	FUNCTION_29
0x400068e	            0x7405	                            je 0x4000695	       113	worktree.c	FUNCTION_29
0x4000690	      0xe800000000	                          call 0x4000695	       113	worktree.c	FUNCTION_29
0x4000695	    0x4881c4d80000	                           add rsp, 0xd8	       113	worktree.c	FUNCTION_29
0x400069c	              0x5b	                                 pop rbx	       113	worktree.c	FUNCTION_29
0x400069d	              0x5d	                                 pop rbp	       113	worktree.c	FUNCTION_29
0x400069e	              0xc3	                                     ret	       113	worktree.c	FUNCTION_29
prune	CALL,7:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	57
0x4000882	              0x55	                                push rbp	       149	worktree.c	FUNCTION_31
0x4000883	          0x4889e5	                            mov rbp, rsp	       149	worktree.c	FUNCTION_31
0x4000886	    0x4881ec300100	                          sub rsp, 0x130	       149	worktree.c	FUNCTION_31
0x400088d	    0x89bdecfeffff	            mov dword [rbp - 0x114], edi	       149	worktree.c	FUNCTION_31
0x4000893	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	       149	worktree.c	FUNCTION_31
0x400089a	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       149	worktree.c	FUNCTION_31
0x40008a1	    0x64488b042528	                mov rax, qword fs:[0x28]	       149	worktree.c	FUNCTION_31
0x40008aa	        0x488945f8	                mov qword [rbp - 8], rax	       149	worktree.c	FUNCTION_31
0x40008ae	            0x31c0	                            xor eax, eax	       149	worktree.c	FUNCTION_31
0x40008b0	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       150	worktree.c	FUNCTION_31
0x40008b7	      0xb800000000	                              mov eax, 0	       150	worktree.c	FUNCTION_31
0x40008bc	      0xb920000000	                           mov ecx, 0x20	       150	worktree.c	FUNCTION_31
0x40008c1	          0x4889d7	                            mov rdi, rdx	       150	worktree.c	FUNCTION_31
0x40008c4	          0xf348ab	              rep stosq qword [rdi], rax	       150	worktree.c	FUNCTION_31
0x40008c7	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       150	worktree.c	FUNCTION_31
0x40008d1	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x6e 	       150	worktree.c	FUNCTION_31
0x40008db	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       150	worktree.c	FUNCTION_31
0x40008e6	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       150	worktree.c	FUNCTION_31
0x40008f1	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       150	worktree.c	FUNCTION_31
0x40008fc	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       150	worktree.c	FUNCTION_31
0x4000906	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       150	worktree.c	FUNCTION_31
0x4000911	    0xc78530ffffff	               mov dword [rbp - 0xd0], 6	       150	worktree.c	FUNCTION_31
0x400091b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x76 	       150	worktree.c	FUNCTION_31
0x4000925	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       150	worktree.c	FUNCTION_31
0x4000930	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       150	worktree.c	FUNCTION_31
0x400093b	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       150	worktree.c	FUNCTION_31
0x4000946	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       150	worktree.c	FUNCTION_31
0x4000950	    0xc78570ffffff	            mov dword [rbp - 0x90], 0xc 	       150	worktree.c	FUNCTION_31
0x400095a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       150	worktree.c	FUNCTION_31
0x4000965	    0x48c745800000	               mov qword [rbp - 0x80], 0	       150	worktree.c	FUNCTION_31
0x400096d	    0x48c745880000	               mov qword [rbp - 0x78], 0	       150	worktree.c	FUNCTION_31
0x4000975	    0x48c745900000	               mov qword [rbp - 0x70], 0	       150	worktree.c	FUNCTION_31
0x400097d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       150	worktree.c	FUNCTION_31
0x4000985	    0x48c705000000	mov qword [0x04000990], 0xffffffffffffffff 	       158	worktree.c	FUNCTION_31
0x4000990	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       159	worktree.c	FUNCTION_31	CALL_5
0x4000997	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       159	worktree.c	FUNCTION_31	CALL_5
0x400099e	    0x488bb5e0feff	            mov rsi, qword [rbp - 0x120]	       159	worktree.c	FUNCTION_31	CALL_5
0x40009a5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       159	worktree.c	FUNCTION_31	CALL_5
0x40009ab	    0x41b900000000	                              mov r9d, 0	       159	worktree.c	FUNCTION_31	CALL_5
0x40009b1	    0x41b800000000	                              mov r8d, 0	       159	worktree.c	FUNCTION_31	CALL_5
0x40009b7	            0x89c7	                            mov edi, eax	       159	worktree.c	FUNCTION_31	CALL_5
0x40009b9	      0xe800000000	                          call 0x40009be	       159	worktree.c	FUNCTION_31	CALL_5
0x40009be	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       159	worktree.c	FUNCTION_31	CALL_5
0x40009c4	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       160	worktree.c	FUNCTION_31	IF_1
0x40009cb	            0x7414	                            je 0x40009e1	       160	worktree.c	FUNCTION_31	IF_1
0x40009cd	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       161	worktree.c	FUNCTION_31	CALL_6
0x40009d4	          0x4889c6	                            mov rsi, rax	       161	worktree.c	FUNCTION_31	CALL_6
0x40009d7	      0xbf00000000	                              mov edi, 0	       161	worktree.c	FUNCTION_31	CALL_6
0x40009dc	      0xe800000000	                          call 0x40009e1	       161	worktree.c	FUNCTION_31	CALL_6
0x40009e1	      0xe8b9fcffff	                call sym.prune_worktrees	       162	worktree.c	FUNCTION_31	CALL_7
0x40009e6	      0xb800000000	                              mov eax, 0	       163	worktree.c	FUNCTION_31
0x40009eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       164	worktree.c	FUNCTION_31
0x40009ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       164	worktree.c	FUNCTION_31
0x40009f8	            0x7405	                            je 0x40009ff	       164	worktree.c	FUNCTION_31
0x40009fa	      0xe800000000	                          call 0x40009ff	       164	worktree.c	FUNCTION_31
0x40009ff	              0xc9	                                   leave	       164	worktree.c	FUNCTION_31
0x4000a00	              0xc3	                                     ret	       164	worktree.c	FUNCTION_31
strbuf_setlen	CALL,2:IF,2:ELSE,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	43
0x40000b0	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_54
0x40000b1	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_54
0x40000b4	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_54
0x40000b8	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_54
0x40000bc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_54
0x40000c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_54	IF_1
0x40000c4	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_54	IF_1
0x40000c7	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_54	IF_1
0x40000ca	            0x740d	                            je 0x40000d9	       162	strbuf.h	FUNCTION_54	IF_1
0x40000cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_54	IF_1
0x40000d0	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_54	IF_1
0x40000d3	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_54	IF_1
0x40000d7	            0xeb05	                           jmp 0x40000de	       162	strbuf.h	FUNCTION_54	IF_1
0x40000d9	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_54	IF_1
0x40000de	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_54	IF_1
0x40000e2	            0x730f	                           jae 0x40000f3	       162	strbuf.h	FUNCTION_54	IF_1
0x40000e4	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_54	CALL_1
0x40000e9	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_54	CALL_1
0x40000ee	      0xe800000000	                          call 0x40000f3	       163	strbuf.h	FUNCTION_54	CALL_1
0x40000f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_54
0x40000f7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_54
0x40000fb	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_54
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_54	IF_2
0x4000103	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_54	IF_2
0x4000107	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_54	IF_2
0x400010d	            0x7414	                            je 0x4000123	       165	strbuf.h	FUNCTION_54	IF_2
0x400010f	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_54	IF_2
0x4000113	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_54	IF_2
0x4000117	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_54	IF_2
0x400011b	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_54	IF_2
0x400011e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_54	IF_2
0x4000121	            0xeb24	                           jmp 0x4000147	       169	strbuf.h	FUNCTION_54
0x4000123	     0xfb605000000	           movzx eax, byte [0x0400012a] 	       168	strbuf.h	FUNCTION_54	CALL_2
0x400012a	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_54	CALL_2
0x400012c	            0x7419	                            je 0x4000147	       168	strbuf.h	FUNCTION_54	CALL_2
0x400012e	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_54	CALL_2
0x4000133	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_54	CALL_2
0x4000138	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_54	CALL_2
0x400013d	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_54	CALL_2
0x4000142	      0xe800000000	                          call 0x4000147	       168	strbuf.h	FUNCTION_54	CALL_2
0x4000147	              0x90	                                     nop	       169	strbuf.h	FUNCTION_54
0x4000148	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_54
0x4000149	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_54
show_worktree	CALL,13:IF,3:ELSE,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	106
0x4001f52	              0x55	                                push rbp	       535	worktree.c	FUNCTION_40
0x4001f53	          0x4889e5	                            mov rbp, rsp	       535	worktree.c	FUNCTION_40
0x4001f56	        0x4883ec40	                           sub rsp, 0x40	       535	worktree.c	FUNCTION_40
0x4001f5a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       535	worktree.c	FUNCTION_40
0x4001f5e	          0x8975c4	             mov dword [rbp - 0x3c], esi	       535	worktree.c	FUNCTION_40
0x4001f61	          0x8955c0	             mov dword [rbp - 0x40], edx	       535	worktree.c	FUNCTION_40
0x4001f64	    0x64488b042528	                mov rax, qword fs:[0x28]	       535	worktree.c	FUNCTION_40
0x4001f6d	        0x488945f8	                mov qword [rbp - 8], rax	       535	worktree.c	FUNCTION_40
0x4001f71	            0x31c0	                            xor eax, eax	       535	worktree.c	FUNCTION_40
0x4001f73	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       536	worktree.c	FUNCTION_40
0x4001f7b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       536	worktree.c	FUNCTION_40
0x4001f83	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       536	worktree.c	FUNCTION_40
0x4001f8b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       537	worktree.c	FUNCTION_40	CALL_1
0x4001f8f	          0x488b00	                    mov rax, qword [rax]	       537	worktree.c	FUNCTION_40	CALL_1
0x4001f92	          0x4889c7	                            mov rdi, rax	       537	worktree.c	FUNCTION_40	CALL_1
0x4001f95	      0xe800000000	                          call 0x4001f9a	       537	worktree.c	FUNCTION_40	CALL_1
0x4001f9a	          0x8945d0	             mov dword [rbp - 0x30], eax	       537	worktree.c	FUNCTION_40	CALL_1
0x4001f9d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fa1	          0x488b00	                    mov rax, qword [rax]	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fa4	          0x4889c7	                            mov rdi, rax	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fa7	      0xe800000000	                          call 0x4001fac	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fac	            0x89c2	                            mov edx, eax	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fae	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fb1	            0x29d0	                            sub eax, edx	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fb3	          0x8945d4	             mov dword [rbp - 0x2c], eax	       538	worktree.c	FUNCTION_40	CALL_2
0x4001fb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fba	          0x488b10	                    mov rdx, qword [rax]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fbd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fc0	          0x8d4801	                      lea ecx, [rax + 1]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fc3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fc6	          0x8d3401	                    lea esi, [rcx + rax]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fc9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fcd	          0x4889d1	                            mov rcx, rdx	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fd0	            0x89f2	                            mov edx, esi	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fd2	      0xbe00000000	                              mov esi, 0	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fd7	          0x4889c7	                            mov rdi, rax	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fda	      0xb800000000	                              mov eax, 0	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fdf	      0xe800000000	                          call 0x4001fe4	       540	worktree.c	FUNCTION_40	CALL_3
0x4001fe4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       541	worktree.c	FUNCTION_40	IF_1
0x4001fe8	          0x8b4038	            mov eax, dword [rax + 0x38] 	       541	worktree.c	FUNCTION_40	IF_1
0x4001feb	            0x85c0	                           test eax, eax	       541	worktree.c	FUNCTION_40	IF_1
0x4001fed	            0x7416	                            je 0x4002005	       541	worktree.c	FUNCTION_40	IF_1
0x4001fef	        0x488d45e0	                   lea rax, [rbp - 0x20]	       542	worktree.c	FUNCTION_40	CALL_4
0x4001ff3	      0xbe00000000	                              mov esi, 0	       542	worktree.c	FUNCTION_40	CALL_4
0x4001ff8	          0x4889c7	                            mov rdi, rax	       542	worktree.c	FUNCTION_40	CALL_4
0x4001ffb	      0xe84ae1ffff	                  call sym.strbuf_addstr	       542	worktree.c	FUNCTION_40	CALL_4
0x4002000	      0xe9b1000000	                           jmp 0x40020b6	       542	worktree.c	FUNCTION_40	CALL_4
0x4002005	    0x8b0500000000	            mov eax, dword [0x0400200b] 	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x400200b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       545	worktree.c	FUNCTION_40	ELSE_1	CALL_6
0x400200f	        0x4883c220	                           add rdx, 0x20	       545	worktree.c	FUNCTION_40	ELSE_1	CALL_6
0x4002013	            0x89c6	                            mov esi, eax	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002015	          0x4889d7	                            mov rdi, rdx	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002018	      0xe800000000	                          call 0x400201d	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x400201d	          0x4889c1	                            mov rcx, rax	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002020	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002023	        0x488d45e0	                   lea rax, [rbp - 0x20]	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002027	      0xbe00000000	                              mov esi, 0	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x400202c	          0x4889c7	                            mov rdi, rax	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x400202f	      0xb800000000	                              mov eax, 0	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002034	      0xe800000000	                          call 0x4002039	       544	worktree.c	FUNCTION_40	ELSE_1	CALL_5
0x4002039	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       546	worktree.c	FUNCTION_40	ELSE_1	IF_2
0x400203d	          0x8b4034	            mov eax, dword [rax + 0x34] 	       546	worktree.c	FUNCTION_40	ELSE_1	IF_2
0x4002040	            0x85c0	                           test eax, eax	       546	worktree.c	FUNCTION_40	ELSE_1	IF_2
0x4002042	            0x7413	                            je 0x4002057	       546	worktree.c	FUNCTION_40	ELSE_1	IF_2
0x4002044	        0x488d45e0	                   lea rax, [rbp - 0x20]	       547	worktree.c	FUNCTION_40	ELSE_1	CALL_7
0x4002048	      0xbe00000000	                              mov esi, 0	       547	worktree.c	FUNCTION_40	ELSE_1	CALL_7
0x400204d	          0x4889c7	                            mov rdi, rax	       547	worktree.c	FUNCTION_40	ELSE_1	CALL_7
0x4002050	      0xe8f5e0ffff	                  call sym.strbuf_addstr	       547	worktree.c	FUNCTION_40	ELSE_1	CALL_7
0x4002055	            0xeb5f	                           jmp 0x40020b6	       547	worktree.c	FUNCTION_40	ELSE_1	CALL_7
0x4002057	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       548	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x400205b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       548	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x400205f	          0x4885c0	                           test rax, rax	       548	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4002062	            0x7441	                            je 0x40020a5	       548	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4002064	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x4002068	        0x488b4010	            mov rax, qword [rax + 0x10] 	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x400206c	      0xbe00000000	                              mov esi, 0	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x4002071	          0x4889c7	                            mov rdi, rax	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x4002074	      0xe800000000	                          call 0x4002079	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x4002079	        0x488945d8	             mov qword [rbp - 0x28], rax	       549	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_8
0x400207d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x4002081	        0x488d45e0	                   lea rax, [rbp - 0x20]	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x4002085	      0xbe00000000	                              mov esi, 0	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x400208a	          0x4889c7	                            mov rdi, rax	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x400208d	      0xb800000000	                              mov eax, 0	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x4002092	      0xe800000000	                          call 0x4002097	       550	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_9
0x4002097	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       551	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_10
0x400209b	          0x4889c7	                            mov rdi, rax	       551	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_10
0x400209e	      0xe800000000	                          call 0x40020a3	       551	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_10
0x40020a3	            0xeb11	                           jmp 0x40020b6	       551	worktree.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_10
0x40020a5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       553	worktree.c	FUNCTION_40	ELSE_1	CALL_11
0x40020a9	      0xbe00000000	                              mov esi, 0	       553	worktree.c	FUNCTION_40	ELSE_1	CALL_11
0x40020ae	          0x4889c7	                            mov rdi, rax	       553	worktree.c	FUNCTION_40	ELSE_1	CALL_11
0x40020b1	      0xe894e0ffff	                  call sym.strbuf_addstr	       553	worktree.c	FUNCTION_40	ELSE_1	CALL_11
0x40020b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       555	worktree.c	FUNCTION_40	CALL_12
0x40020ba	          0x4889c7	                            mov rdi, rax	       555	worktree.c	FUNCTION_40	CALL_12
0x40020bd	      0xe800000000	                          call 0x40020c2	       555	worktree.c	FUNCTION_40	CALL_12
0x40020c2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       557	worktree.c	FUNCTION_40	CALL_13
0x40020c6	          0x4889c7	                            mov rdi, rax	       557	worktree.c	FUNCTION_40	CALL_13
0x40020c9	      0xe800000000	                          call 0x40020ce	       557	worktree.c	FUNCTION_40	CALL_13
0x40020ce	              0x90	                                     nop	       558	worktree.c	FUNCTION_40
0x40020cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	worktree.c	FUNCTION_40
0x40020d3	    0x644833042528	                xor rax, qword fs:[0x28]	       558	worktree.c	FUNCTION_40
0x40020dc	            0x7405	                            je 0x40020e3	       558	worktree.c	FUNCTION_40
0x40020de	      0xe800000000	                          call 0x40020e3	       558	worktree.c	FUNCTION_40
0x40020e3	              0xc9	                                   leave	       558	worktree.c	FUNCTION_40
0x40020e4	              0xc3	                                     ret	       558	worktree.c	FUNCTION_40
unlock_worktree	CALL,16:IF,4:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	95
0x40025f8	              0x55	                                push rbp	       642	worktree.c	FUNCTION_44
0x40025f9	          0x4889e5	                            mov rbp, rsp	       642	worktree.c	FUNCTION_44
0x40025fc	              0x53	                                push rbx	       642	worktree.c	FUNCTION_44
0x40025fd	    0x4881ec980000	                           sub rsp, 0x98	       642	worktree.c	FUNCTION_44
0x4002604	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       642	worktree.c	FUNCTION_44
0x400260a	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       642	worktree.c	FUNCTION_44
0x4002611	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       642	worktree.c	FUNCTION_44
0x4002618	    0x64488b042528	                mov rax, qword fs:[0x28]	       642	worktree.c	FUNCTION_44
0x4002621	        0x488945e8	             mov qword [rbp - 0x18], rax	       642	worktree.c	FUNCTION_44
0x4002625	            0x31c0	                            xor eax, eax	       642	worktree.c	FUNCTION_44
0x4002627	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       643	worktree.c	FUNCTION_44
0x400262b	      0xb800000000	                              mov eax, 0	       643	worktree.c	FUNCTION_44
0x4002630	      0xb908000000	                              mov ecx, 8	       643	worktree.c	FUNCTION_44
0x4002635	          0x4889d7	                            mov rdi, rdx	       643	worktree.c	FUNCTION_44
0x4002638	          0xf348ab	              rep stosq qword [rdi], rax	       643	worktree.c	FUNCTION_44
0x400263b	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       649	worktree.c	FUNCTION_44	CALL_2
0x400263f	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       649	worktree.c	FUNCTION_44	CALL_2
0x4002646	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       649	worktree.c	FUNCTION_44	CALL_2
0x400264d	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       649	worktree.c	FUNCTION_44	CALL_2
0x4002653	    0x41b900000000	                              mov r9d, 0	       649	worktree.c	FUNCTION_44	CALL_2
0x4002659	    0x41b800000000	                              mov r8d, 0	       649	worktree.c	FUNCTION_44	CALL_2
0x400265f	            0x89c7	                            mov edi, eax	       649	worktree.c	FUNCTION_44	CALL_2
0x4002661	      0xe800000000	                          call 0x4002666	       649	worktree.c	FUNCTION_44	CALL_2
0x4002666	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       649	worktree.c	FUNCTION_44	CALL_2
0x400266c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 1	       650	worktree.c	FUNCTION_44	IF_1
0x4002673	            0x7411	                            je 0x4002686	       650	worktree.c	FUNCTION_44	IF_1
0x4002675	        0x488d45a0	                   lea rax, [rbp - 0x60]	       651	worktree.c	FUNCTION_44	CALL_3
0x4002679	          0x4889c6	                            mov rsi, rax	       651	worktree.c	FUNCTION_44	CALL_3
0x400267c	      0xbf00000000	                              mov edi, 0	       651	worktree.c	FUNCTION_44	CALL_3
0x4002681	      0xe800000000	                          call 0x4002686	       651	worktree.c	FUNCTION_44	CALL_3
0x4002686	      0xbf00000000	                              mov edi, 0	       653	worktree.c	FUNCTION_44	CALL_4
0x400268b	      0xe800000000	                          call 0x4002690	       653	worktree.c	FUNCTION_44	CALL_4
0x4002690	        0x48894590	             mov qword [rbp - 0x70], rax	       653	worktree.c	FUNCTION_44	CALL_4
0x4002694	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       654	worktree.c	FUNCTION_44	CALL_5
0x400269b	          0x488b10	                    mov rdx, qword [rax]	       654	worktree.c	FUNCTION_44	CALL_5
0x400269e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       654	worktree.c	FUNCTION_44	CALL_5
0x40026a5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       654	worktree.c	FUNCTION_44	CALL_5
0x40026a9	          0x4889ce	                            mov rsi, rcx	       654	worktree.c	FUNCTION_44	CALL_5
0x40026ac	          0x4889c7	                            mov rdi, rax	       654	worktree.c	FUNCTION_44	CALL_5
0x40026af	      0xe800000000	                          call 0x40026b4	       654	worktree.c	FUNCTION_44	CALL_5
0x40026b4	        0x48894598	             mov qword [rbp - 0x68], rax	       654	worktree.c	FUNCTION_44	CALL_5
0x40026b8	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       655	worktree.c	FUNCTION_44	IF_2
0x40026bd	            0x7524	                           jne 0x40026e3	       655	worktree.c	FUNCTION_44	IF_2
0x40026bf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       656	worktree.c	FUNCTION_44	CALL_7
0x40026c6	          0x488b18	                    mov rbx, qword [rax]	       656	worktree.c	FUNCTION_44	CALL_7
0x40026c9	      0xbf00000000	                              mov edi, 0	       656	worktree.c	FUNCTION_44	CALL_7
0x40026ce	      0xe8acdaffff	                               call sym.	       656	worktree.c	FUNCTION_44	CALL_7
0x40026d3	          0x4889de	                            mov rsi, rbx	       656	worktree.c	FUNCTION_44	CALL_7
0x40026d6	          0x4889c7	                            mov rdi, rax	       656	worktree.c	FUNCTION_44	CALL_7
0x40026d9	      0xb800000000	                              mov eax, 0	       656	worktree.c	FUNCTION_44	CALL_7
0x40026de	      0xe800000000	                          call 0x40026e3	       656	worktree.c	FUNCTION_44	CALL_7
0x40026e3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       657	worktree.c	FUNCTION_44	IF_3	CALL_8
0x40026e7	          0x4889c7	                            mov rdi, rax	       657	worktree.c	FUNCTION_44	IF_3	CALL_8
0x40026ea	      0xe800000000	                          call 0x40026ef	       657	worktree.c	FUNCTION_44	IF_3	CALL_8
0x40026ef	            0x85c0	                           test eax, eax	       657	worktree.c	FUNCTION_44	IF_3	CALL_8
0x40026f1	            0x7417	                            je 0x400270a	       657	worktree.c	FUNCTION_44	IF_3	CALL_8
0x40026f3	      0xbf00000000	                              mov edi, 0	       658	worktree.c	FUNCTION_44	CALL_10
0x40026f8	      0xe882daffff	                               call sym.	       658	worktree.c	FUNCTION_44	CALL_10
0x40026fd	          0x4889c7	                            mov rdi, rax	       658	worktree.c	FUNCTION_44	CALL_10
0x4002700	      0xb800000000	                              mov eax, 0	       658	worktree.c	FUNCTION_44	CALL_10
0x4002705	      0xe800000000	                          call 0x400270a	       658	worktree.c	FUNCTION_44	CALL_10
0x400270a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       659	worktree.c	FUNCTION_44	IF_4	CALL_11
0x400270e	          0x4889c7	                            mov rdi, rax	       659	worktree.c	FUNCTION_44	IF_4	CALL_11
0x4002711	      0xe800000000	                          call 0x4002716	       659	worktree.c	FUNCTION_44	IF_4	CALL_11
0x4002716	          0x4885c0	                           test rax, rax	       659	worktree.c	FUNCTION_44	IF_4	CALL_11
0x4002719	            0x7524	                           jne 0x400273f	       659	worktree.c	FUNCTION_44	IF_4	CALL_11
0x400271b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       660	worktree.c	FUNCTION_44	CALL_13
0x4002722	          0x488b18	                    mov rbx, qword [rax]	       660	worktree.c	FUNCTION_44	CALL_13
0x4002725	      0xbf00000000	                              mov edi, 0	       660	worktree.c	FUNCTION_44	CALL_13
0x400272a	      0xe850daffff	                               call sym.	       660	worktree.c	FUNCTION_44	CALL_13
0x400272f	          0x4889de	                            mov rsi, rbx	       660	worktree.c	FUNCTION_44	CALL_13
0x4002732	          0x4889c7	                            mov rdi, rax	       660	worktree.c	FUNCTION_44	CALL_13
0x4002735	      0xb800000000	                              mov eax, 0	       660	worktree.c	FUNCTION_44	CALL_13
0x400273a	      0xe800000000	                          call 0x400273f	       660	worktree.c	FUNCTION_44	CALL_13
0x400273f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       661	worktree.c	FUNCTION_44	CALL_15
0x4002743	        0x488b4008	                mov rax, qword [rax + 8]	       661	worktree.c	FUNCTION_44	CALL_15
0x4002747	          0x4889c6	                            mov rsi, rax	       661	worktree.c	FUNCTION_44	CALL_15
0x400274a	      0xbf00000000	                              mov edi, 0	       661	worktree.c	FUNCTION_44	CALL_15
0x400274f	      0xb800000000	                              mov eax, 0	       661	worktree.c	FUNCTION_44	CALL_15
0x4002754	      0xe800000000	                          call 0x4002759	       661	worktree.c	FUNCTION_44	CALL_15
0x4002759	          0x4889c7	                            mov rdi, rax	       661	worktree.c	FUNCTION_44	CALL_15
0x400275c	      0xe800000000	                          call 0x4002761	       661	worktree.c	FUNCTION_44	CALL_15
0x4002761	          0x89458c	             mov dword [rbp - 0x74], eax	       661	worktree.c	FUNCTION_44	CALL_15
0x4002764	        0x488b4590	             mov rax, qword [rbp - 0x70]	       662	worktree.c	FUNCTION_44	CALL_16
0x4002768	          0x4889c7	                            mov rdi, rax	       662	worktree.c	FUNCTION_44	CALL_16
0x400276b	      0xe800000000	                          call 0x4002770	       662	worktree.c	FUNCTION_44	CALL_16
0x4002770	          0x8b458c	             mov eax, dword [rbp - 0x74]	       663	worktree.c	FUNCTION_44
0x4002773	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       664	worktree.c	FUNCTION_44
0x4002777	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       664	worktree.c	FUNCTION_44
0x4002780	            0x7405	                            je 0x4002787	       664	worktree.c	FUNCTION_44
0x4002782	      0xe800000000	                          call 0x4002787	       664	worktree.c	FUNCTION_44
0x4002787	    0x4881c4980000	                           add rsp, 0x98	       664	worktree.c	FUNCTION_44
0x400278e	              0x5b	                                 pop rbx	       664	worktree.c	FUNCTION_44
0x400278f	              0x5d	                                 pop rbp	       664	worktree.c	FUNCTION_44
0x4002790	              0xc3	                                     ret	       664	worktree.c	FUNCTION_44
show_worktree_porcelain	CALL,7:IF,3:ELSE,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	47
0x4001ea9	              0x55	                                push rbp	       520	worktree.c	FUNCTION_39
0x4001eaa	          0x4889e5	                            mov rbp, rsp	       520	worktree.c	FUNCTION_39
0x4001ead	        0x4883ec10	                           sub rsp, 0x10	       520	worktree.c	FUNCTION_39
0x4001eb1	        0x48897df8	                mov qword [rbp - 8], rdi	       520	worktree.c	FUNCTION_39
0x4001eb5	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	worktree.c	FUNCTION_39	CALL_1
0x4001eb9	          0x488b00	                    mov rax, qword [rax]	       521	worktree.c	FUNCTION_39	CALL_1
0x4001ebc	          0x4889c6	                            mov rsi, rax	       521	worktree.c	FUNCTION_39	CALL_1
0x4001ebf	      0xbf00000000	                              mov edi, 0	       521	worktree.c	FUNCTION_39	CALL_1
0x4001ec4	      0xb800000000	                              mov eax, 0	       521	worktree.c	FUNCTION_39	CALL_1
0x4001ec9	      0xe800000000	                          call 0x4001ece	       521	worktree.c	FUNCTION_39	CALL_1
0x4001ece	        0x488b45f8	                mov rax, qword [rbp - 8]	       522	worktree.c	FUNCTION_39	IF_1
0x4001ed2	          0x8b4038	            mov eax, dword [rax + 0x38] 	       522	worktree.c	FUNCTION_39	IF_1
0x4001ed5	            0x85c0	                           test eax, eax	       522	worktree.c	FUNCTION_39	IF_1
0x4001ed7	            0x740c	                            je 0x4001ee5	       522	worktree.c	FUNCTION_39	IF_1
0x4001ed9	      0xbf00000000	                              mov edi, 0	       523	worktree.c	FUNCTION_39	CALL_2
0x4001ede	      0xe800000000	                          call 0x4001ee3	       523	worktree.c	FUNCTION_39	CALL_2
0x4001ee3	            0xeb60	                           jmp 0x4001f45	       523	worktree.c	FUNCTION_39	CALL_2
0x4001ee5	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001ee9	        0x4883c020	                           add rax, 0x20	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001eed	          0x4889c7	                            mov rdi, rax	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001ef0	      0xe800000000	                          call 0x4001ef5	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001ef5	          0x4889c6	                            mov rsi, rax	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001ef8	      0xbf00000000	                              mov edi, 0	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001efd	      0xb800000000	                              mov eax, 0	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001f02	      0xe800000000	                          call 0x4001f07	       525	worktree.c	FUNCTION_39	ELSE_1	CALL_4
0x4001f07	        0x488b45f8	                mov rax, qword [rbp - 8]	       526	worktree.c	FUNCTION_39	ELSE_1	IF_2
0x4001f0b	          0x8b4034	            mov eax, dword [rax + 0x34] 	       526	worktree.c	FUNCTION_39	ELSE_1	IF_2
0x4001f0e	            0x85c0	                           test eax, eax	       526	worktree.c	FUNCTION_39	ELSE_1	IF_2
0x4001f10	            0x740c	                            je 0x4001f1e	       526	worktree.c	FUNCTION_39	ELSE_1	IF_2
0x4001f12	      0xbf00000000	                              mov edi, 0	       527	worktree.c	FUNCTION_39	ELSE_1	CALL_5
0x4001f17	      0xe800000000	                          call 0x4001f1c	       527	worktree.c	FUNCTION_39	ELSE_1	CALL_5
0x4001f1c	            0xeb27	                           jmp 0x4001f45	       527	worktree.c	FUNCTION_39	ELSE_1	CALL_5
0x4001f1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f22	        0x488b4010	            mov rax, qword [rax + 0x10] 	       528	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f26	          0x4885c0	                           test rax, rax	       528	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f29	            0x741a	                            je 0x4001f45	       528	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f2b	        0x488b45f8	                mov rax, qword [rbp - 8]	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f2f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f33	          0x4889c6	                            mov rsi, rax	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f36	      0xbf00000000	                              mov edi, 0	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f3b	      0xb800000000	                              mov eax, 0	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f40	      0xe800000000	                          call 0x4001f45	       529	worktree.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001f45	      0xbf0a000000	                            mov edi, 0xa	       531	worktree.c	FUNCTION_39	CALL_7
0x4001f4a	      0xe800000000	                          call 0x4001f4f	       531	worktree.c	FUNCTION_39	CALL_7
0x4001f4f	              0x90	                                     nop	       532	worktree.c	FUNCTION_39
0x4001f50	              0xc9	                                   leave	       532	worktree.c	FUNCTION_39
0x4001f51	              0xc3	                                     ret	       532	worktree.c	FUNCTION_39
git_find_last_dir_sep	CALL,1:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	10
0x4000053	              0x55	                                push rbp	       379	git-compat-util.h	FUNCTION_5
0x4000054	          0x4889e5	                            mov rbp, rsp	       379	git-compat-util.h	FUNCTION_5
0x4000057	        0x4883ec10	                           sub rsp, 0x10	       379	git-compat-util.h	FUNCTION_5
0x400005b	        0x48897df8	                mov qword [rbp - 8], rdi	       379	git-compat-util.h	FUNCTION_5
0x400005f	        0x488b45f8	                mov rax, qword [rbp - 8]	       380	git-compat-util.h	FUNCTION_5	CALL_1
0x4000063	      0xbe2f000000	                           mov esi, 0x2f	       380	git-compat-util.h	FUNCTION_5	CALL_1
0x4000068	          0x4889c7	                            mov rdi, rax	       380	git-compat-util.h	FUNCTION_5	CALL_1
0x400006b	      0xe800000000	                          call 0x4000070	       380	git-compat-util.h	FUNCTION_5	CALL_1
0x4000070	              0xc9	                                   leave	       381	git-compat-util.h	FUNCTION_5
0x4000071	              0xc3	                                     ret	       381	git-compat-util.h	FUNCTION_5
git_is_dir_sep	CALL,0:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	8
0x4000040	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_3
0x4000041	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_3
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_3
0x4000047	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_3
0x400004b	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_3
0x400004e	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_3
0x4000051	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_3
0x4000052	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_3
add_worktree	CALL,64:IF,15:ELSE,2:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,0	475
0x4000bb2	              0x55	                                push rbp	       216	worktree.c	FUNCTION_35
0x4000bb3	          0x4889e5	                            mov rbp, rsp	       216	worktree.c	FUNCTION_35
0x4000bb6	            0x4154	                                push r12	       216	worktree.c	FUNCTION_35
0x4000bb8	              0x53	                                push rbx	       216	worktree.c	FUNCTION_35
0x4000bb9	    0x4881ec000200	                          sub rsp, 0x200	       216	worktree.c	FUNCTION_35
0x4000bc0	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	       216	worktree.c	FUNCTION_35
0x4000bc7	    0x4889b500feff	            mov qword [rbp - 0x200], rsi	       216	worktree.c	FUNCTION_35
0x4000bce	    0x488995f8fdff	            mov qword [rbp - 0x208], rdx	       216	worktree.c	FUNCTION_35
0x4000bd5	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	worktree.c	FUNCTION_35
0x4000bde	        0x488945e8	             mov qword [rbp - 0x18], rax	       216	worktree.c	FUNCTION_35
0x4000be2	            0x31c0	                            xor eax, eax	       216	worktree.c	FUNCTION_35
0x4000be4	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       217	worktree.c	FUNCTION_35
0x4000bef	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	       217	worktree.c	FUNCTION_35
0x4000bfa	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	       217	worktree.c	FUNCTION_35
0x4000c05	    0x48c78570feff	              mov qword [rbp - 0x190], 0	       217	worktree.c	FUNCTION_35
0x4000c10	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       217	worktree.c	FUNCTION_35
0x4000c1b	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       217	worktree.c	FUNCTION_35
0x4000c26	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       218	worktree.c	FUNCTION_35
0x4000c31	    0x48c78598feff	              mov qword [rbp - 0x168], 0	       218	worktree.c	FUNCTION_35
0x4000c3c	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       218	worktree.c	FUNCTION_35
0x4000c47	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       221	worktree.c	FUNCTION_35
0x4000c4e	      0xb800000000	                              mov eax, 0	       221	worktree.c	FUNCTION_35
0x4000c53	      0xb90c000000	                            mov ecx, 0xc	       221	worktree.c	FUNCTION_35
0x4000c58	          0x4889d7	                            mov rdi, rdx	       221	worktree.c	FUNCTION_35
0x4000c5b	          0xf348ab	              rep stosq qword [rdi], rax	       221	worktree.c	FUNCTION_35
0x4000c5e	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	       221	worktree.c	FUNCTION_35
0x4000c69	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       221	worktree.c	FUNCTION_35
0x4000c74	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       222	worktree.c	FUNCTION_35
0x4000c7f	    0xc78548feffff	              mov dword [rbp - 0x1b8], 0	       222	worktree.c	FUNCTION_35
0x4000c89	    0xc7854cfeffff	              mov dword [rbp - 0x1b4], 0	       222	worktree.c	FUNCTION_35
0x4000c93	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	       223	worktree.c	FUNCTION_35
0x4000c9d	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       224	worktree.c	FUNCTION_35
0x4000ca8	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       224	worktree.c	FUNCTION_35
0x4000cb3	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       224	worktree.c	FUNCTION_35
0x4000cbe	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       225	worktree.c	FUNCTION_35
0x4000cc9	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	       226	worktree.c	FUNCTION_35
0x4000cd3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cda	          0x4889c7	                            mov rdi, rax	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cdd	      0xe800000000	                          call 0x4000ce2	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000ce2	            0x85c0	                           test eax, eax	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000ce4	            0x7437	                            je 0x4000d1d	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000ce6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000ced	          0x4889c7	                            mov rdi, rax	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cf0	      0xe800000000	                          call 0x4000cf5	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cf5	            0x85c0	                           test eax, eax	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cf7	            0x7524	                           jne 0x4000d1d	       228	worktree.c	FUNCTION_35	IF_1	CALL_2
0x4000cf9	      0xbf00000000	                              mov edi, 0	       229	worktree.c	FUNCTION_35	CALL_4
0x4000cfe	      0xe87cf4ffff	                               call sym.	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d03	          0x4889c2	                            mov rdx, rax	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d06	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d0d	          0x4889c6	                            mov rsi, rax	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d10	          0x4889d7	                            mov rdi, rdx	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d13	      0xb800000000	                              mov eax, 0	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d18	      0xe800000000	                          call 0x4000d1d	       229	worktree.c	FUNCTION_35	CALL_4
0x4000d1d	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d24	          0x8b4004	                mov eax, dword [rax + 4]	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d27	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d29	            0x755b	                           jne 0x4000d86	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d2b	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d32	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d39	          0x4889d6	                            mov rsi, rdx	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d3c	          0x4889c7	                            mov rdi, rax	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d3f	      0xe800000000	                          call 0x4000d44	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d44	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d46	            0x753e	                           jne 0x4000d86	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d48	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       233	worktree.c	FUNCTION_35	IF_2	CALL_6
0x4000d4f	          0x4889c7	                            mov rdi, rax	       233	worktree.c	FUNCTION_35	IF_2	CALL_6
0x4000d52	      0xe800000000	                          call 0x4000d57	       233	worktree.c	FUNCTION_35	IF_2	CALL_6
0x4000d57	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d59	            0x742b	                            je 0x4000d86	       232	worktree.c	FUNCTION_35	IF_2	CALL_5
0x4000d5b	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	       234	worktree.c	FUNCTION_35	IF_2
0x4000d65	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       235	worktree.c	FUNCTION_35	IF_2	IF_3
0x4000d6c	            0x8b00	                    mov eax, dword [rax]	       235	worktree.c	FUNCTION_35	IF_2	IF_3
0x4000d6e	            0x85c0	                           test eax, eax	       235	worktree.c	FUNCTION_35	IF_2	IF_3
0x4000d70	            0x7514	                           jne 0x4000d86	       235	worktree.c	FUNCTION_35	IF_2	IF_3
0x4000d72	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       236	worktree.c	FUNCTION_35	IF_2	CALL_7
0x4000d79	      0xbe00000000	                              mov esi, 0	       236	worktree.c	FUNCTION_35	IF_2	CALL_7
0x4000d7e	          0x4889c7	                            mov rdi, rax	       236	worktree.c	FUNCTION_35	IF_2	CALL_7
0x4000d81	      0xe800000000	                          call 0x4000d86	       236	worktree.c	FUNCTION_35	IF_2	CALL_7
0x4000d86	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	       238	worktree.c	FUNCTION_35	CALL_8
0x4000d8d	          0x4889c7	                            mov rdi, rax	       238	worktree.c	FUNCTION_35	CALL_8
0x4000d90	      0xe800000000	                          call 0x4000d95	       238	worktree.c	FUNCTION_35	CALL_8
0x4000d95	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	       238	worktree.c	FUNCTION_35	CALL_8
0x4000d9c	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	       239	worktree.c	FUNCTION_35	IF_4
0x4000da4	            0x7524	                           jne 0x4000dca	       239	worktree.c	FUNCTION_35	IF_4
0x4000da6	      0xbf00000000	                              mov edi, 0	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dab	      0xe8cff3ffff	                               call sym.	       240	worktree.c	FUNCTION_35	CALL_10
0x4000db0	          0x4889c2	                            mov rdx, rax	       240	worktree.c	FUNCTION_35	CALL_10
0x4000db3	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dba	          0x4889c6	                            mov rsi, rax	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dbd	          0x4889d7	                            mov rdi, rdx	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dc0	      0xb800000000	                              mov eax, 0	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dc5	      0xe800000000	                          call 0x4000dca	       240	worktree.c	FUNCTION_35	CALL_10
0x4000dca	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	       242	worktree.c	FUNCTION_35	CALL_11
0x4000dd1	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       242	worktree.c	FUNCTION_35	CALL_11
0x4000dd8	          0x4889d6	                            mov rsi, rdx	       242	worktree.c	FUNCTION_35	CALL_11
0x4000ddb	          0x4889c7	                            mov rdi, rax	       242	worktree.c	FUNCTION_35	CALL_11
0x4000dde	      0xe833fdffff	              call sym.worktree_basename	       242	worktree.c	FUNCTION_35	CALL_11
0x4000de3	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       242	worktree.c	FUNCTION_35	CALL_11
0x4000dea	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	       243	worktree.c	FUNCTION_35	CALL_12
0x4000df0	          0x4863d0	                         movsxd rdx, eax	       243	worktree.c	FUNCTION_35	CALL_12
0x4000df3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       243	worktree.c	FUNCTION_35	CALL_12
0x4000dfa	          0x4801d0	                            add rax, rdx	       243	worktree.c	FUNCTION_35	CALL_12
0x4000dfd	          0x4889c2	                            mov rdx, rax	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e00	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e07	          0x4829c2	                            sub rdx, rax	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e0a	          0x4889d0	                            mov rax, rdx	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e0d	            0x89c6	                            mov esi, eax	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e0f	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e16	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e1d	          0x4889d1	                            mov rcx, rdx	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e20	            0x89f2	                            mov edx, esi	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e22	      0xbe00000000	                              mov esi, 0	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e27	          0x4889c7	                            mov rdi, rax	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e2a	      0xb800000000	                              mov eax, 0	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e2f	      0xe800000000	                          call 0x4000e34	       243	worktree.c	FUNCTION_35	CALL_12
0x4000e34	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	       244	worktree.c	FUNCTION_35
0x4000e3b	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	       244	worktree.c	FUNCTION_35
0x4000e41	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       245	worktree.c	FUNCTION_35	IF_5	CALL_13
0x4000e48	          0x4889c7	                            mov rdi, rax	       245	worktree.c	FUNCTION_35	IF_5	CALL_13
0x4000e4b	      0xe800000000	                          call 0x4000e50	       245	worktree.c	FUNCTION_35	IF_5	CALL_13
0x4000e50	            0x85c0	                           test eax, eax	       245	worktree.c	FUNCTION_35	IF_5	CALL_13
0x4000e52	            0x7462	                            je 0x4000eb6	       245	worktree.c	FUNCTION_35	IF_5	CALL_13
0x4000e54	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e5b	      0xbf00000000	                              mov edi, 0	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e60	      0xe81af3ffff	                               call sym.	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e65	          0x4889de	                            mov rsi, rbx	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e68	          0x4889c7	                            mov rdi, rax	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e6b	      0xb800000000	                              mov eax, 0	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e70	      0xe800000000	                          call 0x4000e75	       246	worktree.c	FUNCTION_35	IF_5	CALL_15
0x4000e75	    0x83851cfeffff	              add dword [rbp - 0x1e4], 1	       249	worktree.c	FUNCTION_35	WHILE_1
0x4000e7c	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e82	          0x4863d0	                         movsxd rdx, eax	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e85	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e8c	          0x4889d6	                            mov rsi, rdx	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e8f	          0x4889c7	                            mov rdi, rax	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e92	      0xe819f2ffff	                  call sym.strbuf_setlen	       250	worktree.c	FUNCTION_35	WHILE_1	CALL_16
0x4000e97	    0x8b951cfeffff	            mov edx, dword [rbp - 0x1e4]	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000e9d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000ea4	      0xbe00000000	                              mov esi, 0	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000ea9	          0x4889c7	                            mov rdi, rax	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000eac	      0xb800000000	                              mov eax, 0	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000eb1	      0xe800000000	                          call 0x4000eb6	       251	worktree.c	FUNCTION_35	WHILE_1	CALL_17
0x4000eb6	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ebd	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ec4	          0x4889d6	                            mov rsi, rdx	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ec7	          0x4889c7	                            mov rdi, rax	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000eca	      0xe800000000	                          call 0x4000ecf	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ecf	            0x85c0	                           test eax, eax	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ed1	            0x74a2	                            je 0x4000e75	       248	worktree.c	FUNCTION_35	WHILE_1
0x4000ed3	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       253	worktree.c	FUNCTION_35	CALL_18
0x4000eda	      0xbe2f000000	                           mov esi, 0x2f	       253	worktree.c	FUNCTION_35	CALL_18
0x4000edf	          0x4889c7	                            mov rdi, rax	       253	worktree.c	FUNCTION_35	CALL_18
0x4000ee2	      0xe800000000	                          call 0x4000ee7	       253	worktree.c	FUNCTION_35	CALL_18
0x4000ee7	        0x4883c001	                              add rax, 1	       253	worktree.c	FUNCTION_35	CALL_18
0x4000eeb	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       253	worktree.c	FUNCTION_35	CALL_18
0x4000ef2	      0xe800000000	                          call 0x4000ef7	       255	worktree.c	FUNCTION_35	CALL_19
0x4000ef7	    0x890500000000	            mov dword [0x04000efd], eax 	       255	worktree.c	FUNCTION_35	CALL_19
0x4000efd	      0xbf00000000	                              mov edi, 0	       256	worktree.c	FUNCTION_35
0x4000f02	      0xe800000000	                          call 0x4000f07	       256	worktree.c	FUNCTION_35
0x4000f07	      0xbf00000000	                              mov edi, 0	       257	worktree.c	FUNCTION_35	CALL_20
0x4000f0c	      0xe800000000	                          call 0x4000f11	       257	worktree.c	FUNCTION_35	CALL_20
0x4000f11	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       259	worktree.c	FUNCTION_35	IF_6
0x4000f18	      0xbeff010000	                          mov esi, 0x1ff	       259	worktree.c	FUNCTION_35	IF_6
0x4000f1d	          0x4889c7	                            mov rdi, rax	       259	worktree.c	FUNCTION_35	IF_6
0x4000f20	      0xe800000000	                          call 0x4000f25	       259	worktree.c	FUNCTION_35	IF_6
0x4000f25	            0x85c0	                           test eax, eax	       259	worktree.c	FUNCTION_35	IF_6
0x4000f27	            0x7421	                            je 0x4000f4a	       259	worktree.c	FUNCTION_35	IF_6
0x4000f29	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f30	      0xbf00000000	                              mov edi, 0	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f35	      0xe845f2ffff	                               call sym.	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f3a	          0x4889de	                            mov rsi, rbx	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f3d	          0x4889c7	                            mov rdi, rax	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f40	      0xb800000000	                              mov eax, 0	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f45	      0xe800000000	                          call 0x4000f4a	       260	worktree.c	FUNCTION_35	CALL_22
0x4000f4a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       261	worktree.c	FUNCTION_35	CALL_23
0x4000f51	          0x4889c7	                            mov rdi, rax	       261	worktree.c	FUNCTION_35	CALL_23
0x4000f54	      0xe800000000	                          call 0x4000f59	       261	worktree.c	FUNCTION_35	CALL_23
0x4000f59	    0x488905000000	            mov qword [0x04000f60], rax 	       261	worktree.c	FUNCTION_35	CALL_23
0x4000f60	    0xc70500000000	               mov dword [0x04000f6a], 1	       262	worktree.c	FUNCTION_35
0x4000f6a	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f71	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f78	      0xbe00000000	                              mov esi, 0	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f7d	          0x4889c7	                            mov rdi, rax	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f80	      0xb800000000	                              mov eax, 0	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f85	      0xe800000000	                          call 0x4000f8a	       268	worktree.c	FUNCTION_35	CALL_24
0x4000f8a	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       269	worktree.c	FUNCTION_35	IF_7
0x4000f91	          0x8b400c	              mov eax, dword [rax + 0xc]	       269	worktree.c	FUNCTION_35	IF_7
0x4000f94	            0x85c0	                           test eax, eax	       269	worktree.c	FUNCTION_35	IF_7
0x4000f96	            0x751b	                           jne 0x4000fb3	       269	worktree.c	FUNCTION_35	IF_7
0x4000f98	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       270	worktree.c	FUNCTION_35	CALL_25
0x4000f9f	      0xbe00000000	                              mov esi, 0	       270	worktree.c	FUNCTION_35	CALL_25
0x4000fa4	          0x4889c7	                            mov rdi, rax	       270	worktree.c	FUNCTION_35	CALL_25
0x4000fa7	      0xb800000000	                              mov eax, 0	       270	worktree.c	FUNCTION_35	CALL_25
0x4000fac	      0xe800000000	                          call 0x4000fb1	       270	worktree.c	FUNCTION_35	CALL_25
0x4000fb1	            0xeb19	                           jmp 0x4000fcc	       270	worktree.c	FUNCTION_35	CALL_25
0x4000fb3	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       272	worktree.c	FUNCTION_35	CALL_26
0x4000fba	      0xbe00000000	                              mov esi, 0	       272	worktree.c	FUNCTION_35	CALL_26
0x4000fbf	          0x4889c7	                            mov rdi, rax	       272	worktree.c	FUNCTION_35	CALL_26
0x4000fc2	      0xb800000000	                              mov eax, 0	       272	worktree.c	FUNCTION_35	CALL_26
0x4000fc7	      0xe800000000	                          call 0x4000fcc	       272	worktree.c	FUNCTION_35	CALL_26
0x4000fcc	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fd3	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fda	      0xbe00000000	                              mov esi, 0	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fdf	          0x4889c7	                            mov rdi, rax	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fe2	      0xb800000000	                              mov eax, 0	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fe7	      0xe800000000	                          call 0x4000fec	       274	worktree.c	FUNCTION_35	CALL_27
0x4000fec	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       275	worktree.c	FUNCTION_35	IF_8	CALL_28
0x4000ff3	          0x4889c7	                            mov rdi, rax	       275	worktree.c	FUNCTION_35	IF_8	CALL_28
0x4000ff6	      0xe800000000	                          call 0x4000ffb	       275	worktree.c	FUNCTION_35	IF_8	CALL_28
0x4000ffb	            0x85c0	                           test eax, eax	       275	worktree.c	FUNCTION_35	IF_8	CALL_28
0x4000ffd	            0x7421	                            je 0x4001020	       275	worktree.c	FUNCTION_35	IF_8	CALL_28
0x4000fff	    0x488b9d60feff	            mov rbx, qword [rbp - 0x1a0]	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x4001006	      0xbf00000000	                              mov edi, 0	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x400100b	      0xe86ff1ffff	                               call sym.	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x4001010	          0x4889de	                            mov rsi, rbx	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x4001013	          0x4889c7	                            mov rdi, rax	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x4001016	      0xb800000000	                              mov eax, 0	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x400101b	      0xe800000000	                          call 0x4001020	       276	worktree.c	FUNCTION_35	IF_8	CALL_30
0x4001020	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       278	worktree.c	FUNCTION_35	CALL_31
0x4001027	          0x4889c7	                            mov rdi, rax	       278	worktree.c	FUNCTION_35	CALL_31
0x400102a	      0xe800000000	                          call 0x400102f	       278	worktree.c	FUNCTION_35	CALL_31
0x400102f	    0x488905000000	            mov qword [0x04001036], rax 	       278	worktree.c	FUNCTION_35	CALL_31
0x4001036	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       280	worktree.c	FUNCTION_35
0x400103d	      0xbe00000000	                              mov esi, 0	       280	worktree.c	FUNCTION_35
0x4001042	          0x4889c7	                            mov rdi, rax	       280	worktree.c	FUNCTION_35
0x4001045	      0xe866f0ffff	                  call sym.strbuf_setlen	       280	worktree.c	FUNCTION_35
0x400104a	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       281	worktree.c	FUNCTION_35	CALL_32
0x4001051	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       281	worktree.c	FUNCTION_35	CALL_32
0x4001058	      0xbe00000000	                              mov esi, 0	       281	worktree.c	FUNCTION_35	CALL_32
0x400105d	          0x4889c7	                            mov rdi, rax	       281	worktree.c	FUNCTION_35	CALL_32
0x4001060	      0xb800000000	                              mov eax, 0	       281	worktree.c	FUNCTION_35	CALL_32
0x4001065	      0xe800000000	                          call 0x400106a	       281	worktree.c	FUNCTION_35	CALL_32
0x400106a	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       282	worktree.c	FUNCTION_35	CALL_34
0x4001071	          0x4889c7	                            mov rdi, rax	       282	worktree.c	FUNCTION_35	CALL_34
0x4001074	      0xe800000000	                          call 0x4001079	       282	worktree.c	FUNCTION_35	CALL_34
0x4001079	          0x4889c2	                            mov rdx, rax	       282	worktree.c	FUNCTION_35	CALL_34
0x400107c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       282	worktree.c	FUNCTION_35	CALL_34
0x4001083	      0xbe00000000	                              mov esi, 0	       282	worktree.c	FUNCTION_35	CALL_34
0x4001088	          0x4889c7	                            mov rdi, rax	       282	worktree.c	FUNCTION_35	CALL_34
0x400108b	      0xb800000000	                              mov eax, 0	       282	worktree.c	FUNCTION_35	CALL_34
0x4001090	      0xe800000000	                          call 0x4001095	       282	worktree.c	FUNCTION_35	CALL_34
0x4001095	      0xe800000000	                          call 0x400109a	       283	worktree.c	FUNCTION_35	CALL_35
0x400109a	          0x4889c7	                            mov rdi, rax	       283	worktree.c	FUNCTION_35	CALL_35
0x400109d	      0xe800000000	                          call 0x40010a2	       283	worktree.c	FUNCTION_35	CALL_35
0x40010a2	          0x4889c6	                            mov rsi, rax	       283	worktree.c	FUNCTION_35	CALL_35
0x40010a5	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       283	worktree.c	FUNCTION_35	CALL_35
0x40010ac	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	       283	worktree.c	FUNCTION_35	CALL_35
0x40010b3	          0x4889d1	                            mov rcx, rdx	       283	worktree.c	FUNCTION_35	CALL_35
0x40010b6	          0x4889f2	                            mov rdx, rsi	       283	worktree.c	FUNCTION_35	CALL_35
0x40010b9	      0xbe00000000	                              mov esi, 0	       283	worktree.c	FUNCTION_35	CALL_35
0x40010be	          0x4889c7	                            mov rdi, rax	       283	worktree.c	FUNCTION_35	CALL_35
0x40010c1	      0xb800000000	                              mov eax, 0	       283	worktree.c	FUNCTION_35	CALL_35
0x40010c6	      0xe800000000	                          call 0x40010cb	       283	worktree.c	FUNCTION_35	CALL_35
0x40010cb	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       292	worktree.c	FUNCTION_35
0x40010d2	      0xbe00000000	                              mov esi, 0	       292	worktree.c	FUNCTION_35
0x40010d7	          0x4889c7	                            mov rdi, rax	       292	worktree.c	FUNCTION_35
0x40010da	      0xe8d1efffff	                  call sym.strbuf_setlen	       292	worktree.c	FUNCTION_35
0x40010df	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       293	worktree.c	FUNCTION_35	CALL_38
0x40010e6	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       293	worktree.c	FUNCTION_35	CALL_38
0x40010ed	      0xbe00000000	                              mov esi, 0	       293	worktree.c	FUNCTION_35	CALL_38
0x40010f2	          0x4889c7	                            mov rdi, rax	       293	worktree.c	FUNCTION_35	CALL_38
0x40010f5	      0xb800000000	                              mov eax, 0	       293	worktree.c	FUNCTION_35	CALL_38
0x40010fa	      0xe800000000	                          call 0x40010ff	       293	worktree.c	FUNCTION_35	CALL_38
0x40010ff	      0xbf00000000	                              mov edi, 0	       294	worktree.c	FUNCTION_35	CALL_40
0x4001104	      0xe800000000	                          call 0x4001109	       294	worktree.c	FUNCTION_35	CALL_40
0x4001109	          0x4889c2	                            mov rdx, rax	       294	worktree.c	FUNCTION_35	CALL_40
0x400110c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       294	worktree.c	FUNCTION_35	CALL_40
0x4001113	      0xbe00000000	                              mov esi, 0	       294	worktree.c	FUNCTION_35	CALL_40
0x4001118	          0x4889c7	                            mov rdi, rax	       294	worktree.c	FUNCTION_35	CALL_40
0x400111b	      0xb800000000	                              mov eax, 0	       294	worktree.c	FUNCTION_35	CALL_40
0x4001120	      0xe800000000	                          call 0x4001125	       294	worktree.c	FUNCTION_35	CALL_40
0x4001125	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       295	worktree.c	FUNCTION_35
0x400112c	      0xbe00000000	                              mov esi, 0	       295	worktree.c	FUNCTION_35
0x4001131	          0x4889c7	                            mov rdi, rax	       295	worktree.c	FUNCTION_35
0x4001134	      0xe877efffff	                  call sym.strbuf_setlen	       295	worktree.c	FUNCTION_35
0x4001139	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       296	worktree.c	FUNCTION_35	CALL_41
0x4001140	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       296	worktree.c	FUNCTION_35	CALL_41
0x4001147	      0xbe00000000	                              mov esi, 0	       296	worktree.c	FUNCTION_35	CALL_41
0x400114c	          0x4889c7	                            mov rdi, rax	       296	worktree.c	FUNCTION_35	CALL_41
0x400114f	      0xb800000000	                              mov eax, 0	       296	worktree.c	FUNCTION_35	CALL_41
0x4001154	      0xe800000000	                          call 0x4001159	       296	worktree.c	FUNCTION_35	CALL_41
0x4001159	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       297	worktree.c	FUNCTION_35	CALL_42
0x4001160	      0xbe00000000	                              mov esi, 0	       297	worktree.c	FUNCTION_35	CALL_42
0x4001165	          0x4889c7	                            mov rdi, rax	       297	worktree.c	FUNCTION_35	CALL_42
0x4001168	      0xb800000000	                              mov eax, 0	       297	worktree.c	FUNCTION_35	CALL_42
0x400116d	      0xe800000000	                          call 0x4001172	       297	worktree.c	FUNCTION_35	CALL_42
0x4001172	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	       299	worktree.c	FUNCTION_35	CALL_43
0x4001179	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       299	worktree.c	FUNCTION_35	CALL_43
0x4001180	          0x4889d1	                            mov rcx, rdx	       299	worktree.c	FUNCTION_35	CALL_43
0x4001183	      0xba00000000	                              mov edx, 0	       299	worktree.c	FUNCTION_35	CALL_43
0x4001188	      0xbe00000000	                              mov esi, 0	       299	worktree.c	FUNCTION_35	CALL_43
0x400118d	          0x4889c7	                            mov rdi, rax	       299	worktree.c	FUNCTION_35	CALL_43
0x4001190	      0xb800000000	                              mov eax, 0	       299	worktree.c	FUNCTION_35	CALL_43
0x4001195	      0xe800000000	                          call 0x400119a	       299	worktree.c	FUNCTION_35	CALL_43
0x400119a	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	       300	worktree.c	FUNCTION_35	CALL_44
0x40011a1	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       300	worktree.c	FUNCTION_35	CALL_44
0x40011a8	          0x4889d1	                            mov rcx, rdx	       300	worktree.c	FUNCTION_35	CALL_44
0x40011ab	      0xba00000000	                              mov edx, 0	       300	worktree.c	FUNCTION_35	CALL_44
0x40011b0	      0xbe00000000	                              mov esi, 0	       300	worktree.c	FUNCTION_35	CALL_44
0x40011b5	          0x4889c7	                            mov rdi, rax	       300	worktree.c	FUNCTION_35	CALL_44
0x40011b8	      0xb800000000	                              mov eax, 0	       300	worktree.c	FUNCTION_35	CALL_44
0x40011bd	      0xe800000000	                          call 0x40011c2	       300	worktree.c	FUNCTION_35	CALL_44
0x40011c2	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       301	worktree.c	FUNCTION_35
0x40011c9	          0x83c808	                               or eax, 8	       301	worktree.c	FUNCTION_35
0x40011cc	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       301	worktree.c	FUNCTION_35
0x40011d2	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	       303	worktree.c	FUNCTION_35	IF_9
0x40011d9	            0x7543	                           jne 0x400121e	       303	worktree.c	FUNCTION_35	IF_9
0x40011db	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       305	worktree.c	FUNCTION_35	CALL_46
0x40011e2	        0x4883c004	                              add rax, 4	       305	worktree.c	FUNCTION_35	CALL_46
0x40011e6	          0x4889c7	                            mov rdi, rax	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x40011e9	      0xe800000000	                          call 0x40011ee	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x40011ee	          0x4889c2	                            mov rdx, rax	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x40011f1	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x40011f8	        0x4883c008	                              add rax, 8	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x40011fc	    0x41b800000000	                              mov r8d, 0	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x4001202	          0x4889d1	                            mov rcx, rdx	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x4001205	      0xba00000000	                              mov edx, 0	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x400120a	      0xbe00000000	                              mov esi, 0	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x400120f	          0x4889c7	                            mov rdi, rax	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x4001212	      0xb800000000	                              mov eax, 0	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x4001217	      0xe800000000	                          call 0x400121c	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x400121c	            0xeb2f	                           jmp 0x400124d	       304	worktree.c	FUNCTION_35	IF_9	CALL_45
0x400121e	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001225	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x400122c	        0x488d7a08	                      lea rdi, [rdx + 8]	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001230	    0x41b800000000	                              mov r8d, 0	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001236	          0x4889c1	                            mov rcx, rax	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001239	      0xba00000000	                              mov edx, 0	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x400123e	      0xbe00000000	                              mov esi, 0	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001243	      0xb800000000	                              mov eax, 0	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x4001248	      0xe800000000	                          call 0x400124d	       307	worktree.c	FUNCTION_35	ELSE_2	CALL_47
0x400124d	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       309	worktree.c	FUNCTION_35
0x4001254	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       309	worktree.c	FUNCTION_35
0x400125b	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       310	worktree.c	FUNCTION_35	CALL_48
0x4001262	          0x4889c7	                            mov rdi, rax	       310	worktree.c	FUNCTION_35	CALL_48
0x4001265	      0xe800000000	                          call 0x400126a	       310	worktree.c	FUNCTION_35	CALL_48
0x400126a	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       310	worktree.c	FUNCTION_35	CALL_48
0x4001270	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       311	worktree.c	FUNCTION_35	IF_10
0x4001277	     0xf85bf000000	                           jne 0x400133c	       311	worktree.c	FUNCTION_35	IF_10
0x400127d	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       314	worktree.c	FUNCTION_35	IF_11
0x4001284	          0x8b4008	                mov eax, dword [rax + 8]	       314	worktree.c	FUNCTION_35	IF_11
0x4001287	            0x85c0	                           test eax, eax	       314	worktree.c	FUNCTION_35	IF_11
0x4001289	            0x7471	                            je 0x40012fc	       314	worktree.c	FUNCTION_35	IF_11
0x400128b	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       315	worktree.c	FUNCTION_35	IF_11
0x4001296	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       316	worktree.c	FUNCTION_35	IF_11	CALL_49
0x400129d	        0x4883c008	                              add rax, 8	       316	worktree.c	FUNCTION_35	IF_11	CALL_49
0x40012a1	          0x4889c7	                            mov rdi, rax	       316	worktree.c	FUNCTION_35	IF_11	CALL_49
0x40012a4	      0xe800000000	                          call 0x40012a9	       316	worktree.c	FUNCTION_35	IF_11	CALL_49
0x40012a9	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012b0	        0x4883c008	                              add rax, 8	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012b4	      0xb900000000	                              mov ecx, 0	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012b9	      0xba00000000	                              mov edx, 0	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012be	      0xbe00000000	                              mov esi, 0	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012c3	          0x4889c7	                            mov rdi, rax	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012c6	      0xb800000000	                              mov eax, 0	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012cb	      0xe800000000	                          call 0x40012d0	       317	worktree.c	FUNCTION_35	IF_11	CALL_50
0x40012d0	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       318	worktree.c	FUNCTION_35	IF_11
0x40012d7	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       318	worktree.c	FUNCTION_35	IF_11
0x40012de	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       319	worktree.c	FUNCTION_35	IF_11	CALL_51
0x40012e5	          0x4889c7	                            mov rdi, rax	       319	worktree.c	FUNCTION_35	IF_11	CALL_51
0x40012e8	      0xe800000000	                          call 0x40012ed	       319	worktree.c	FUNCTION_35	IF_11	CALL_51
0x40012ed	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       319	worktree.c	FUNCTION_35	IF_11	CALL_51
0x40012f3	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       320	worktree.c	FUNCTION_35	IF_11	IF_12
0x40012fa	            0x7543	                           jne 0x400133f	       320	worktree.c	FUNCTION_35	IF_11	IF_12
0x40012fc	    0xc70500000000	               mov dword [0x04001306], 0	       324	worktree.c	FUNCTION_35
0x4001306	    0x488b05000000	            mov rax, qword [0x0400130d] 	       325	worktree.c	FUNCTION_35
0x400130d	          0x4889c7	                            mov rdi, rax	       325	worktree.c	FUNCTION_35
0x4001310	      0xe800000000	                          call 0x4001315	       325	worktree.c	FUNCTION_35
0x4001315	    0x48c705000000	               mov qword [0x04001320], 0	       325	worktree.c	FUNCTION_35
0x4001320	    0x488b05000000	            mov rax, qword [0x04001327] 	       326	worktree.c	FUNCTION_35
0x4001327	          0x4889c7	                            mov rdi, rax	       326	worktree.c	FUNCTION_35
0x400132a	      0xe800000000	                          call 0x400132f	       326	worktree.c	FUNCTION_35
0x400132f	    0x48c705000000	               mov qword [0x0400133a], 0	       326	worktree.c	FUNCTION_35
0x400133a	            0xeb04	                           jmp 0x4001340	       326	worktree.c	FUNCTION_35
0x400133c	              0x90	                                     nop	       312	worktree.c	FUNCTION_35	IF_10
0x400133d	            0xeb01	                           jmp 0x4001340	       312	worktree.c	FUNCTION_35	IF_10
0x400133f	              0x90	                                     nop	       321	worktree.c	FUNCTION_35	IF_11	IF_12
0x4001340	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       329	worktree.c	FUNCTION_35	IF_13
0x4001347	            0x750e	                           jne 0x4001357	       329	worktree.c	FUNCTION_35	IF_13
0x4001349	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       329	worktree.c	FUNCTION_35	IF_13
0x4001350	          0x8b400c	              mov eax, dword [rax + 0xc]	       329	worktree.c	FUNCTION_35	IF_13
0x4001353	            0x85c0	                           test eax, eax	       329	worktree.c	FUNCTION_35	IF_13
0x4001355	            0x7543	                           jne 0x400139a	       329	worktree.c	FUNCTION_35	IF_13
0x4001357	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       330	worktree.c	FUNCTION_35	IF_13
0x400135e	      0xbe00000000	                              mov esi, 0	       330	worktree.c	FUNCTION_35	IF_13
0x4001363	          0x4889c7	                            mov rdi, rax	       330	worktree.c	FUNCTION_35	IF_13
0x4001366	      0xe845edffff	                  call sym.strbuf_setlen	       330	worktree.c	FUNCTION_35	IF_13
0x400136b	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x4001372	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x4001379	      0xbe00000000	                              mov esi, 0	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x400137e	          0x4889c7	                            mov rdi, rax	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x4001381	      0xb800000000	                              mov eax, 0	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x4001386	      0xe800000000	                          call 0x400138b	       331	worktree.c	FUNCTION_35	IF_13	CALL_52
0x400138b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       332	worktree.c	FUNCTION_35	IF_13	CALL_53
0x4001392	          0x4889c7	                            mov rdi, rax	       332	worktree.c	FUNCTION_35	IF_13	CALL_53
0x4001395	      0xe800000000	                          call 0x400139a	       332	worktree.c	FUNCTION_35	IF_13	CALL_53
0x400139a	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       339	worktree.c	FUNCTION_35	IF_14
0x40013a1	     0xf851d010000	                           jne 0x40014c4	       339	worktree.c	FUNCTION_35	IF_14
0x40013a7	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       339	worktree.c	FUNCTION_35	IF_14
0x40013ae	          0x8b4008	                mov eax, dword [rax + 8]	       339	worktree.c	FUNCTION_35	IF_14
0x40013b1	            0x85c0	                           test eax, eax	       339	worktree.c	FUNCTION_35	IF_14
0x40013b3	     0xf840b010000	                            je 0x40014c4	       339	worktree.c	FUNCTION_35	IF_14
0x40013b9	      0xbf00000000	                              mov edi, 0	       340	worktree.c	FUNCTION_35	IF_14	CALL_54
0x40013be	      0xe800000000	                          call 0x40013c3	       340	worktree.c	FUNCTION_35	IF_14	CALL_54
0x40013c3	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       340	worktree.c	FUNCTION_35	IF_14	CALL_54
0x40013ca	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	       341	worktree.c	FUNCTION_35	IF_14	IF_15
0x40013d2	     0xf84ec000000	                            je 0x40014c4	       341	worktree.c	FUNCTION_35	IF_14	IF_15
0x40013d8	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       342	worktree.c	FUNCTION_35	IF_14	IF_15
0x40013e3	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       342	worktree.c	FUNCTION_35	IF_14	IF_15
0x40013ee	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       342	worktree.c	FUNCTION_35	IF_14	IF_15
0x40013f9	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       343	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001400	          0x83e0f7	                     and eax, 0xfffffff7	       343	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001403	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       343	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001409	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       344	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001410	          0x83c801	                               or eax, 1	       344	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001413	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       344	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001419	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       345	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001420	          0x83c820	                            or eax, 0x20	       345	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001423	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       345	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001429	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       346	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001430	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       346	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001437	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       347	worktree.c	FUNCTION_35	IF_14	IF_15
0x400143e	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       347	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001445	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       348	worktree.c	FUNCTION_35	IF_14	IF_15
0x4001450	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       351	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_58
0x4001457	        0x4883c004	                              add rax, 4	       351	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_58
0x400145b	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400145e	      0xe800000000	                          call 0x4001463	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001463	          0x4989c4	                            mov r12, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001466	      0xbf00000000	                              mov edi, 0	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400146b	      0xe800000000	                          call 0x4001470	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001470	          0x4889c3	                            mov rbx, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001473	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400147a	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400147d	      0xe800000000	                          call 0x4001482	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001482	          0x4889c6	                            mov rsi, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001485	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400148c	        0x4883c008	                              add rax, 8	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001490	    0x41b900000000	                              mov r9d, 0	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x4001496	    0x41b800000000	                              mov r8d, 0	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400149c	          0x4c89e1	                            mov rcx, r12	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x400149f	          0x4889da	                            mov rdx, rbx	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x40014a2	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x40014a5	      0xb800000000	                              mov eax, 0	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x40014aa	      0xe800000000	                          call 0x40014af	       349	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_56
0x40014af	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       353	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_59
0x40014b6	          0x4889c7	                            mov rdi, rax	       353	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_59
0x40014b9	      0xe800000000	                          call 0x40014be	       353	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_59
0x40014be	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       353	worktree.c	FUNCTION_35	IF_14	IF_15	CALL_59
0x40014c4	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       357	worktree.c	FUNCTION_35	CALL_60
0x40014cb	          0x4889c7	                            mov rdi, rax	       357	worktree.c	FUNCTION_35	CALL_60
0x40014ce	      0xe800000000	                          call 0x40014d3	       357	worktree.c	FUNCTION_35	CALL_60
0x40014d3	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       358	worktree.c	FUNCTION_35	CALL_61
0x40014da	          0x4889c7	                            mov rdi, rax	       358	worktree.c	FUNCTION_35	CALL_61
0x40014dd	      0xe800000000	                          call 0x40014e2	       358	worktree.c	FUNCTION_35	CALL_61
0x40014e2	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       359	worktree.c	FUNCTION_35	CALL_62
0x40014e9	          0x4889c7	                            mov rdi, rax	       359	worktree.c	FUNCTION_35	CALL_62
0x40014ec	      0xe800000000	                          call 0x40014f1	       359	worktree.c	FUNCTION_35	CALL_62
0x40014f1	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       360	worktree.c	FUNCTION_35	CALL_63
0x40014f8	          0x4889c7	                            mov rdi, rax	       360	worktree.c	FUNCTION_35	CALL_63
0x40014fb	      0xe800000000	                          call 0x4001500	       360	worktree.c	FUNCTION_35	CALL_63
0x4001500	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	       361	worktree.c	FUNCTION_35	CALL_64
0x4001507	          0x4889c7	                            mov rdi, rax	       361	worktree.c	FUNCTION_35	CALL_64
0x400150a	      0xe800000000	                          call 0x400150f	       361	worktree.c	FUNCTION_35	CALL_64
0x400150f	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	       362	worktree.c	FUNCTION_35
0x4001515	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       363	worktree.c	FUNCTION_35
0x4001519	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       363	worktree.c	FUNCTION_35
0x4001522	            0x7405	                            je 0x4001529	       363	worktree.c	FUNCTION_35
0x4001524	      0xe800000000	                          call 0x4001529	       363	worktree.c	FUNCTION_35
0x4001529	    0x4881c4000200	                          add rsp, 0x200	       363	worktree.c	FUNCTION_35
0x4001530	              0x5b	                                 pop rbx	       363	worktree.c	FUNCTION_35
0x4001531	            0x415c	                                 pop r12	       363	worktree.c	FUNCTION_35
0x4001533	              0x5d	                                 pop rbp	       363	worktree.c	FUNCTION_35
0x4001534	              0xc3	                                     ret	       363	worktree.c	FUNCTION_35
git_worktree_config	CALL,3:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	28
0x40001f9	              0x55	                                push rbp	        40	worktree.c	FUNCTION_28
0x40001fa	          0x4889e5	                            mov rbp, rsp	        40	worktree.c	FUNCTION_28
0x40001fd	        0x4883ec20	                           sub rsp, 0x20	        40	worktree.c	FUNCTION_28
0x4000201	        0x48897df8	                mov qword [rbp - 8], rdi	        40	worktree.c	FUNCTION_28
0x4000205	        0x488975f0	             mov qword [rbp - 0x10], rsi	        40	worktree.c	FUNCTION_28
0x4000209	        0x488955e8	             mov qword [rbp - 0x18], rdx	        40	worktree.c	FUNCTION_28
0x400020d	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x4000211	      0xbe00000000	                              mov esi, 0	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x4000216	          0x4889c7	                            mov rdi, rax	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x4000219	      0xe800000000	                          call 0x400021e	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x400021e	            0x85c0	                           test eax, eax	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x4000220	            0x7520	                           jne 0x4000242	        41	worktree.c	FUNCTION_28	IF_1	CALL_1
0x4000222	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x4000226	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x400022a	          0x4889d6	                            mov rsi, rdx	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x400022d	          0x4889c7	                            mov rdi, rax	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x4000230	      0xe800000000	                          call 0x4000235	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x4000235	    0x890500000000	            mov dword [0x0400023b], eax 	        42	worktree.c	FUNCTION_28	IF_1	CALL_2
0x400023b	      0xb800000000	                              mov eax, 0	        43	worktree.c	FUNCTION_28	IF_1
0x4000240	            0xeb17	                           jmp 0x4000259	        43	worktree.c	FUNCTION_28	IF_1
0x4000242	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        46	worktree.c	FUNCTION_28	CALL_3
0x4000246	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        46	worktree.c	FUNCTION_28	CALL_3
0x400024a	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	worktree.c	FUNCTION_28	CALL_3
0x400024e	          0x4889ce	                            mov rsi, rcx	        46	worktree.c	FUNCTION_28	CALL_3
0x4000251	          0x4889c7	                            mov rdi, rax	        46	worktree.c	FUNCTION_28	CALL_3
0x4000254	      0xe800000000	                          call 0x4000259	        46	worktree.c	FUNCTION_28	CALL_3
0x4000259	              0xc9	                                   leave	        47	worktree.c	FUNCTION_28
0x400025a	              0xc3	                                     ret	        47	worktree.c	FUNCTION_28
prune_worktrees	CALL,15:IF,8:ELSE,0:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,0	120
0x400069f	              0x55	                                push rbp	       116	worktree.c	FUNCTION_30
0x40006a0	          0x4889e5	                            mov rbp, rsp	       116	worktree.c	FUNCTION_30
0x40006a3	              0x53	                                push rbx	       116	worktree.c	FUNCTION_30
0x40006a4	        0x4883ec68	                           sub rsp, 0x68	       116	worktree.c	FUNCTION_30
0x40006a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       116	worktree.c	FUNCTION_30
0x40006b1	        0x488945e8	             mov qword [rbp - 0x18], rax	       116	worktree.c	FUNCTION_30
0x40006b5	            0x31c0	                            xor eax, eax	       116	worktree.c	FUNCTION_30
0x40006b7	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       117	worktree.c	FUNCTION_30
0x40006bf	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       117	worktree.c	FUNCTION_30
0x40006c7	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       117	worktree.c	FUNCTION_30
0x40006cf	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       118	worktree.c	FUNCTION_30
0x40006d7	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       118	worktree.c	FUNCTION_30
0x40006df	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	worktree.c	FUNCTION_30
0x40006e7	      0xbf00000000	                              mov edi, 0	       119	worktree.c	FUNCTION_30	CALL_2
0x40006ec	      0xb800000000	                              mov eax, 0	       119	worktree.c	FUNCTION_30	CALL_2
0x40006f1	      0xe800000000	                          call 0x40006f6	       119	worktree.c	FUNCTION_30	CALL_2
0x40006f6	          0x4889c7	                            mov rdi, rax	       119	worktree.c	FUNCTION_30	CALL_2
0x40006f9	      0xe800000000	                          call 0x40006fe	       119	worktree.c	FUNCTION_30	CALL_2
0x40006fe	        0x488945a0	             mov qword [rbp - 0x60], rax	       119	worktree.c	FUNCTION_30	CALL_2
0x4000702	      0x48837da000	               cmp qword [rbp - 0x60], 0	       122	worktree.c	FUNCTION_30	IF_1
0x4000707	     0xf8459010000	                            je 0x4000866	       122	worktree.c	FUNCTION_30	IF_1
0x400070d	      0xe9f2000000	                           jmp 0x4000804	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x4000712	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x4000716	        0x4883c013	                           add rax, 0x13	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x400071a	          0x4889c7	                            mov rdi, rax	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x400071d	      0xe889faffff	               call sym.is_dot_or_dotdot	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x4000722	            0x85c0	                           test eax, eax	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x4000724	            0x7405	                            je 0x400072b	       125	worktree.c	FUNCTION_30	WHILE_1	IF_2	CALL_4
0x4000726	      0xe9d9000000	                           jmp 0x4000804	       126	worktree.c	FUNCTION_30	WHILE_1	IF_2
0x400072b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       127	worktree.c	FUNCTION_30	WHILE_1
0x400072f	      0xbe00000000	                              mov esi, 0	       127	worktree.c	FUNCTION_30	WHILE_1
0x4000734	          0x4889c7	                            mov rdi, rax	       127	worktree.c	FUNCTION_30	WHILE_1
0x4000737	      0xe874f9ffff	                  call sym.strbuf_setlen	       127	worktree.c	FUNCTION_30	WHILE_1
0x400073c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000740	        0x488d5013	                   lea rdx, [rax + 0x13]	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000744	        0x488d45b0	                   lea rax, [rbp - 0x50]	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000748	          0x4889c6	                            mov rsi, rax	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x400074b	          0x4889d7	                            mov rdi, rdx	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x400074e	      0xe808fbffff	                 call sym.prune_worktree	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000753	            0x85c0	                           test eax, eax	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000755	            0x7505	                           jne 0x400075c	       128	worktree.c	FUNCTION_30	WHILE_1	IF_3	CALL_5
0x4000757	      0xe9a8000000	                           jmp 0x4000804	       129	worktree.c	FUNCTION_30	WHILE_1	IF_3
0x400075c	    0x8b0500000000	            mov eax, dword [0x04000762] 	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x4000762	            0x85c0	                           test eax, eax	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x4000764	            0x750a	                           jne 0x4000770	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x4000766	    0x8b0500000000	            mov eax, dword [0x0400076c] 	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x400076c	            0x85c0	                           test eax, eax	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x400076e	            0x740c	                            je 0x400077c	       130	worktree.c	FUNCTION_30	WHILE_1	IF_4
0x4000770	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       131	worktree.c	FUNCTION_30	WHILE_1	CALL_6
0x4000774	          0x4889c7	                            mov rdi, rax	       131	worktree.c	FUNCTION_30	WHILE_1	CALL_6
0x4000777	      0xe800000000	                          call 0x400077c	       131	worktree.c	FUNCTION_30	WHILE_1	CALL_6
0x400077c	    0x8b0500000000	            mov eax, dword [0x04000782] 	       132	worktree.c	FUNCTION_30	WHILE_1	IF_5
0x4000782	            0x85c0	                           test eax, eax	       132	worktree.c	FUNCTION_30	WHILE_1	IF_5
0x4000784	            0x7402	                            je 0x4000788	       132	worktree.c	FUNCTION_30	WHILE_1	IF_5
0x4000786	            0xeb7c	                           jmp 0x4000804	       133	worktree.c	FUNCTION_30	WHILE_1	IF_5
0x4000788	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x400078c	        0x488d5013	                   lea rdx, [rax + 0x13]	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x4000790	        0x488d45d0	                   lea rax, [rbp - 0x30]	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x4000794	      0xbe00000000	                              mov esi, 0	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x4000799	          0x4889c7	                            mov rdi, rax	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x400079c	      0xb800000000	                              mov eax, 0	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x40007a1	      0xe800000000	                          call 0x40007a6	       134	worktree.c	FUNCTION_30	WHILE_1	CALL_7
0x40007a6	        0x488d45d0	                   lea rax, [rbp - 0x30]	       135	worktree.c	FUNCTION_30	WHILE_1	CALL_8
0x40007aa	      0xbe00000000	                              mov esi, 0	       135	worktree.c	FUNCTION_30	WHILE_1	CALL_8
0x40007af	          0x4889c7	                            mov rdi, rax	       135	worktree.c	FUNCTION_30	WHILE_1	CALL_8
0x40007b2	      0xe800000000	                          call 0x40007b7	       135	worktree.c	FUNCTION_30	WHILE_1	CALL_8
0x40007b7	          0x89459c	             mov dword [rbp - 0x64], eax	       135	worktree.c	FUNCTION_30	WHILE_1	CALL_8
0x40007ba	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007be	            0x791b	                           jns 0x40007db	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007c0	      0xe800000000	                          call 0x40007c5	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007c5	            0x8b00	                    mov eax, dword [rax]	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007c7	          0x83f814	                           cmp eax, 0x14	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007ca	            0x750f	                           jne 0x40007db	       136	worktree.c	FUNCTION_30	WHILE_1	IF_6
0x40007cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	worktree.c	FUNCTION_30	WHILE_1	CALL_9
0x40007d0	          0x4889c7	                            mov rdi, rax	       137	worktree.c	FUNCTION_30	WHILE_1	CALL_9
0x40007d3	      0xe800000000	                          call 0x40007d8	       137	worktree.c	FUNCTION_30	WHILE_1	CALL_9
0x40007d8	          0x89459c	             mov dword [rbp - 0x64], eax	       137	worktree.c	FUNCTION_30	WHILE_1	CALL_9
0x40007db	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       138	worktree.c	FUNCTION_30	WHILE_1	IF_7
0x40007df	            0x7423	                            je 0x4000804	       138	worktree.c	FUNCTION_30	WHILE_1	IF_7
0x40007e1	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007e5	      0xbf00000000	                              mov edi, 0	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007ea	      0xe890f9ffff	                               call sym.	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007ef	          0x4889de	                            mov rsi, rbx	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007f2	          0x4889c7	                            mov rdi, rax	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007f5	      0xb800000000	                              mov eax, 0	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007fa	      0xe800000000	                          call 0x40007ff	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x40007ff	      0xe86ef8ffff	                    call sym.const_error	       139	worktree.c	FUNCTION_30	WHILE_1	CALL_10
0x4000804	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x4000808	          0x4889c7	                            mov rdi, rax	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x400080b	      0xe800000000	                          call 0x4000810	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x4000810	        0x488945a8	             mov qword [rbp - 0x58], rax	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x4000814	      0x48837da800	               cmp qword [rbp - 0x58], 0	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x4000819	     0xf85f3feffff	                           jne 0x4000712	       124	worktree.c	FUNCTION_30	WHILE_1	CALL_3
0x400081f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       141	worktree.c	FUNCTION_30	CALL_11
0x4000823	          0x4889c7	                            mov rdi, rax	       141	worktree.c	FUNCTION_30	CALL_11
0x4000826	      0xe800000000	                          call 0x400082b	       141	worktree.c	FUNCTION_30	CALL_11
0x400082b	    0x8b0500000000	            mov eax, dword [0x04000831] 	       142	worktree.c	FUNCTION_30	IF_8
0x4000831	            0x85c0	                           test eax, eax	       142	worktree.c	FUNCTION_30	IF_8
0x4000833	            0x7517	                           jne 0x400084c	       142	worktree.c	FUNCTION_30	IF_8
0x4000835	      0xbf00000000	                              mov edi, 0	       143	worktree.c	FUNCTION_30	CALL_13
0x400083a	      0xb800000000	                              mov eax, 0	       143	worktree.c	FUNCTION_30	CALL_13
0x400083f	      0xe800000000	                          call 0x4000844	       143	worktree.c	FUNCTION_30	CALL_13
0x4000844	          0x4889c7	                            mov rdi, rax	       143	worktree.c	FUNCTION_30	CALL_13
0x4000847	      0xe800000000	                          call 0x400084c	       143	worktree.c	FUNCTION_30	CALL_13
0x400084c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       144	worktree.c	FUNCTION_30	CALL_14
0x4000850	          0x4889c7	                            mov rdi, rax	       144	worktree.c	FUNCTION_30	CALL_14
0x4000853	      0xe800000000	                          call 0x4000858	       144	worktree.c	FUNCTION_30	CALL_14
0x4000858	        0x488d45d0	                   lea rax, [rbp - 0x30]	       145	worktree.c	FUNCTION_30	CALL_15
0x400085c	          0x4889c7	                            mov rdi, rax	       145	worktree.c	FUNCTION_30	CALL_15
0x400085f	      0xe800000000	                          call 0x4000864	       145	worktree.c	FUNCTION_30	CALL_15
0x4000864	            0xeb01	                           jmp 0x4000867	       145	worktree.c	FUNCTION_30	CALL_15
0x4000866	              0x90	                                     nop	       123	worktree.c	FUNCTION_30	IF_1
0x4000867	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	worktree.c	FUNCTION_30
0x400086b	    0x644833042528	                xor rax, qword fs:[0x28]	       146	worktree.c	FUNCTION_30
0x4000874	            0x7405	                            je 0x400087b	       146	worktree.c	FUNCTION_30
0x4000876	      0xe800000000	                          call 0x400087b	       146	worktree.c	FUNCTION_30
0x400087b	        0x4883c468	                           add rsp, 0x68	       146	worktree.c	FUNCTION_30
0x400087f	              0x5b	                                 pop rbx	       146	worktree.c	FUNCTION_30
0x4000880	              0x5d	                                 pop rbp	       146	worktree.c	FUNCTION_30
0x4000881	              0xc3	                                     ret	       146	worktree.c	FUNCTION_30
_	CALL,0:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	15
0x400017f	              0x55	                                push rbp	        51	gettext.h	FUNCTION_65
0x4000180	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_65
0x4000183	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_65
0x4000187	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_65
0x400018b	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_65	IF_1
0x400018f	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_65	IF_1
0x4000192	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_65	IF_1
0x4000194	            0x7507	                           jne 0x400019d	        52	gettext.h	FUNCTION_65	IF_1
0x4000196	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_65	IF_1
0x400019b	            0xeb0c	                           jmp 0x40001a9	        53	gettext.h	FUNCTION_65	IF_1
0x400019d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_65
0x40001a1	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_65
0x40001a4	      0xe800000000	                          call 0x40001a9	        54	gettext.h	FUNCTION_65
0x40001a9	              0xc9	                                   leave	        55	gettext.h	FUNCTION_65
0x40001aa	              0xc3	                                     ret	        55	gettext.h	FUNCTION_65
xsize_t	CALL,1:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	15
0x400007d	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_20
0x400007e	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_20
0x4000081	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_20
0x4000085	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_20
0x4000089	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_20
0x400008d	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_20
0x4000091	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_20	IF_1
0x4000095	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_20	IF_1
0x4000099	            0x740f	                            je 0x40000aa	       931	git-compat-util.h	FUNCTION_20	IF_1
0x400009b	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_20	CALL_1
0x40000a0	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_20	CALL_1
0x40000a5	      0xe800000000	                          call 0x40000aa	       932	git-compat-util.h	FUNCTION_20	CALL_1
0x40000aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_20
0x40000ae	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_20
0x40000af	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_20
remove_junk_on_signal	CALL,3:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	14
0x4000aef	              0x55	                                push rbp	       189	worktree.c	FUNCTION_33
0x4000af0	          0x4889e5	                            mov rbp, rsp	       189	worktree.c	FUNCTION_33
0x4000af3	        0x4883ec10	                           sub rsp, 0x10	       189	worktree.c	FUNCTION_33
0x4000af7	          0x897dfc	                mov dword [rbp - 4], edi	       189	worktree.c	FUNCTION_33
0x4000afa	      0xe802ffffff	                    call sym.remove_junk	       190	worktree.c	FUNCTION_33	CALL_1
0x4000aff	          0x8b45fc	                mov eax, dword [rbp - 4]	       191	worktree.c	FUNCTION_33	CALL_2
0x4000b02	            0x89c7	                            mov edi, eax	       191	worktree.c	FUNCTION_33	CALL_2
0x4000b04	      0xe800000000	                          call 0x4000b09	       191	worktree.c	FUNCTION_33	CALL_2
0x4000b09	          0x8b45fc	                mov eax, dword [rbp - 4]	       192	worktree.c	FUNCTION_33	CALL_3
0x4000b0c	            0x89c7	                            mov edi, eax	       192	worktree.c	FUNCTION_33	CALL_3
0x4000b0e	      0xe800000000	                          call 0x4000b13	       192	worktree.c	FUNCTION_33	CALL_3
0x4000b13	              0x90	                                     nop	       193	worktree.c	FUNCTION_33
0x4000b14	              0xc9	                                   leave	       193	worktree.c	FUNCTION_33
0x4000b15	              0xc3	                                     ret	       193	worktree.c	FUNCTION_33
measure_widths	CALL,3:IF,2:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	59
0x40020e5	              0x55	                                push rbp	       561	worktree.c	FUNCTION_41
0x40020e6	          0x4889e5	                            mov rbp, rsp	       561	worktree.c	FUNCTION_41
0x40020e9	        0x4883ec30	                           sub rsp, 0x30	       561	worktree.c	FUNCTION_41
0x40020ed	        0x48897de8	             mov qword [rbp - 0x18], rdi	       561	worktree.c	FUNCTION_41
0x40020f1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       561	worktree.c	FUNCTION_41
0x40020f5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       561	worktree.c	FUNCTION_41
0x40020f9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       564	worktree.c	FUNCTION_41	FOR_1
0x4002100	      0xe988000000	                           jmp 0x400218d	       564	worktree.c	FUNCTION_41	FOR_1
0x4002105	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002108	            0x4898	                                    cdqe	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x400210a	    0x488d14c50000	                        lea rdx, [rax*8]	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002112	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002116	          0x4801d0	                            add rax, rdx	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002119	          0x488b00	                    mov rax, qword [rax]	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x400211c	          0x488b00	                    mov rax, qword [rax]	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x400211f	          0x4889c7	                            mov rdi, rax	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002122	      0xe800000000	                          call 0x4002127	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x4002127	          0x8945f8	                mov dword [rbp - 8], eax	       566	worktree.c	FUNCTION_41	FOR_1	CALL_1
0x400212a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       568	worktree.c	FUNCTION_41	FOR_1	IF_1
0x400212e	            0x8b00	                    mov eax, dword [rax]	       568	worktree.c	FUNCTION_41	FOR_1	IF_1
0x4002130	          0x3b45f8	                cmp eax, dword [rbp - 8]	       568	worktree.c	FUNCTION_41	FOR_1	IF_1
0x4002133	            0x7d09	                           jge 0x400213e	       568	worktree.c	FUNCTION_41	FOR_1	IF_1
0x4002135	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       569	worktree.c	FUNCTION_41	FOR_1	IF_1
0x4002139	          0x8b55f8	                mov edx, dword [rbp - 8]	       569	worktree.c	FUNCTION_41	FOR_1	IF_1
0x400213c	            0x8910	                    mov dword [rax], edx	       569	worktree.c	FUNCTION_41	FOR_1	IF_1
0x400213e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002142	            0x8b00	                    mov eax, dword [rax]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002144	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002147	          0x4863d2	                         movsxd rdx, edx	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x400214a	    0x488d0cd50000	                        lea rcx, [rdx*8]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002152	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002156	          0x4801ca	                            add rdx, rcx	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002159	          0x488b12	                    mov rdx, qword [rdx]	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x400215c	        0x4883c220	                           add rdx, 0x20	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002160	            0x89c6	                            mov esi, eax	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002162	          0x4889d7	                            mov rdi, rdx	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002165	      0xe800000000	                          call 0x400216a	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x400216a	          0x4889c7	                            mov rdi, rax	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x400216d	      0xe800000000	                          call 0x4002172	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002172	          0x8945fc	                mov dword [rbp - 4], eax	       570	worktree.c	FUNCTION_41	FOR_1	CALL_3
0x4002175	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	worktree.c	FUNCTION_41	FOR_1	IF_2
0x4002179	            0x8b00	                    mov eax, dword [rax]	       571	worktree.c	FUNCTION_41	FOR_1	IF_2
0x400217b	          0x3b45fc	                cmp eax, dword [rbp - 4]	       571	worktree.c	FUNCTION_41	FOR_1	IF_2
0x400217e	            0x7d09	                           jge 0x4002189	       571	worktree.c	FUNCTION_41	FOR_1	IF_2
0x4002180	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       572	worktree.c	FUNCTION_41	FOR_1	IF_2
0x4002184	          0x8b55fc	                mov edx, dword [rbp - 4]	       572	worktree.c	FUNCTION_41	FOR_1	IF_2
0x4002187	            0x8910	                    mov dword [rax], edx	       572	worktree.c	FUNCTION_41	FOR_1	IF_2
0x4002189	        0x8345f401	                add dword [rbp - 0xc], 1	       564	worktree.c	FUNCTION_41	FOR_1
0x400218d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       564	worktree.c	FUNCTION_41	FOR_1
0x4002190	            0x4898	                                    cdqe	       564	worktree.c	FUNCTION_41	FOR_1
0x4002192	    0x488d14c50000	                        lea rdx, [rax*8]	       564	worktree.c	FUNCTION_41	FOR_1
0x400219a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       564	worktree.c	FUNCTION_41	FOR_1
0x400219e	          0x4801d0	                            add rax, rdx	       564	worktree.c	FUNCTION_41	FOR_1
0x40021a1	          0x488b00	                    mov rax, qword [rax]	       564	worktree.c	FUNCTION_41	FOR_1
0x40021a4	          0x4885c0	                           test rax, rax	       564	worktree.c	FUNCTION_41	FOR_1
0x40021a7	     0xf8558ffffff	                           jne 0x4002105	       564	worktree.c	FUNCTION_41	FOR_1
0x40021ad	              0x90	                                     nop	       574	worktree.c	FUNCTION_41
0x40021ae	              0xc9	                                   leave	       574	worktree.c	FUNCTION_41
0x40021af	              0xc3	                                     ret	       574	worktree.c	FUNCTION_41
worktree_basename	CALL,1:IF,1:ELSE,0:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,1	50
0x4000b16	              0x55	                                push rbp	       196	worktree.c	FUNCTION_34
0x4000b17	          0x4889e5	                            mov rbp, rsp	       196	worktree.c	FUNCTION_34
0x4000b1a	        0x4883ec20	                           sub rsp, 0x20	       196	worktree.c	FUNCTION_34
0x4000b1e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       196	worktree.c	FUNCTION_34
0x4000b22	        0x488975e0	             mov qword [rbp - 0x20], rsi	       196	worktree.c	FUNCTION_34
0x4000b26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       200	worktree.c	FUNCTION_34	CALL_1
0x4000b2a	          0x4889c7	                            mov rdi, rax	       200	worktree.c	FUNCTION_34	CALL_1
0x4000b2d	      0xe800000000	                          call 0x4000b32	       200	worktree.c	FUNCTION_34	CALL_1
0x4000b32	          0x8945f4	              mov dword [rbp - 0xc], eax	       200	worktree.c	FUNCTION_34	CALL_1
0x4000b35	            0xeb04	                           jmp 0x4000b3b	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b37	        0x836df401	                sub dword [rbp - 0xc], 1	       202	worktree.c	FUNCTION_34	WHILE_1
0x4000b3b	        0x837df400	                cmp dword [rbp - 0xc], 0	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b3f	            0x7421	                            je 0x4000b62	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b41	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b44	            0x4898	                                    cdqe	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b46	        0x488d50ff	                      lea rdx, [rax - 1]	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b4e	          0x4801d0	                            add rax, rdx	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b51	           0xfb600	                   movzx eax, byte [rax]	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b54	           0xfbec0	                           movsx eax, al	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b57	            0x89c7	                            mov edi, eax	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b59	      0xe8e2f4ffff	                 call sym.git_is_dir_sep	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b5e	            0x85c0	                           test eax, eax	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b60	            0x75d5	                           jne 0x4000b37	       201	worktree.c	FUNCTION_34	WHILE_1
0x4000b62	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b65	            0x4898	                                    cdqe	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b67	        0x488d50ff	                      lea rdx, [rax - 1]	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b6f	          0x4801d0	                            add rax, rdx	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b72	        0x488945f8	                mov qword [rbp - 8], rax	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b76	            0xeb21	                           jmp 0x4000b99	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b78	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b7c	           0xfb600	                   movzx eax, byte [rax]	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b7f	           0xfbec0	                           movsx eax, al	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b82	            0x89c7	                            mov edi, eax	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b84	      0xe8b7f4ffff	                 call sym.git_is_dir_sep	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b89	            0x85c0	                           test eax, eax	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b8b	            0x7407	                            je 0x4000b94	       205	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b8d	      0x488345f801	                  add qword [rbp - 8], 1	       206	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b92	            0xeb0f	                           jmp 0x4000ba3	       207	worktree.c	FUNCTION_34	FOR_1	IF_1
0x4000b94	      0x48836df801	                  sub qword [rbp - 8], 1	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b99	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	worktree.c	FUNCTION_34	FOR_1
0x4000b9d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       204	worktree.c	FUNCTION_34	FOR_1
0x4000ba1	            0x77d5	                            ja 0x4000b78	       204	worktree.c	FUNCTION_34	FOR_1
0x4000ba3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       210	worktree.c	FUNCTION_34
0x4000ba7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       210	worktree.c	FUNCTION_34
0x4000baa	            0x8910	                    mov dword [rax], edx	       210	worktree.c	FUNCTION_34
0x4000bac	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	worktree.c	FUNCTION_34
0x4000bb0	              0xc9	                                   leave	       212	worktree.c	FUNCTION_34
0x4000bb1	              0xc3	                                     ret	       212	worktree.c	FUNCTION_34
delete_git_work_tree	CALL,4:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	45
0x4002e9b	              0x55	                                push rbp	       802	worktree.c	FUNCTION_48
0x4002e9c	          0x4889e5	                            mov rbp, rsp	       802	worktree.c	FUNCTION_48
0x4002e9f	              0x53	                                push rbx	       802	worktree.c	FUNCTION_48
0x4002ea0	        0x4883ec48	                           sub rsp, 0x48	       802	worktree.c	FUNCTION_48
0x4002ea4	        0x48897db8	             mov qword [rbp - 0x48], rdi	       802	worktree.c	FUNCTION_48
0x4002ea8	    0x64488b042528	                mov rax, qword fs:[0x28]	       802	worktree.c	FUNCTION_48
0x4002eb1	        0x488945e8	             mov qword [rbp - 0x18], rax	       802	worktree.c	FUNCTION_48
0x4002eb5	            0x31c0	                            xor eax, eax	       802	worktree.c	FUNCTION_48
0x4002eb7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       803	worktree.c	FUNCTION_48
0x4002ebf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       803	worktree.c	FUNCTION_48
0x4002ec7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       803	worktree.c	FUNCTION_48
0x4002ecf	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       804	worktree.c	FUNCTION_48
0x4002ed6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       806	worktree.c	FUNCTION_48	CALL_1
0x4002eda	          0x488b10	                    mov rdx, qword [rax]	       806	worktree.c	FUNCTION_48	CALL_1
0x4002edd	        0x488d45d0	                   lea rax, [rbp - 0x30]	       806	worktree.c	FUNCTION_48	CALL_1
0x4002ee1	          0x4889d6	                            mov rsi, rdx	       806	worktree.c	FUNCTION_48	CALL_1
0x4002ee4	          0x4889c7	                            mov rdi, rax	       806	worktree.c	FUNCTION_48	CALL_1
0x4002ee7	      0xe85ed2ffff	                  call sym.strbuf_addstr	       806	worktree.c	FUNCTION_48	CALL_1
0x4002eec	        0x488d45d0	                   lea rax, [rbp - 0x30]	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002ef0	      0xbe00000000	                              mov esi, 0	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002ef5	          0x4889c7	                            mov rdi, rax	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002ef8	      0xe800000000	                          call 0x4002efd	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002efd	            0x85c0	                           test eax, eax	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002eff	            0x742a	                            je 0x4002f2b	       807	worktree.c	FUNCTION_48	IF_1	CALL_2
0x4002f01	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f05	      0xbf00000000	                              mov edi, 0	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f0a	      0xe870d2ffff	                               call sym.	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f0f	          0x4889de	                            mov rsi, rbx	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f12	          0x4889c7	                            mov rdi, rax	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f15	      0xb800000000	                              mov eax, 0	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f1a	      0xe800000000	                          call 0x4002f1f	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f1f	      0xe84ed1ffff	                    call sym.const_error	       808	worktree.c	FUNCTION_48	IF_1	CALL_3
0x4002f24	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       809	worktree.c	FUNCTION_48	IF_1
0x4002f2b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       811	worktree.c	FUNCTION_48	CALL_4
0x4002f2f	          0x4889c7	                            mov rdi, rax	       811	worktree.c	FUNCTION_48	CALL_4
0x4002f32	      0xe800000000	                          call 0x4002f37	       811	worktree.c	FUNCTION_48	CALL_4
0x4002f37	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       812	worktree.c	FUNCTION_48
0x4002f3a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       813	worktree.c	FUNCTION_48
0x4002f3e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       813	worktree.c	FUNCTION_48
0x4002f47	            0x7405	                            je 0x4002f4e	       813	worktree.c	FUNCTION_48
0x4002f49	      0xe800000000	                          call 0x4002f4e	       813	worktree.c	FUNCTION_48
0x4002f4e	        0x4883c448	                           add rsp, 0x48	       813	worktree.c	FUNCTION_48
0x4002f52	              0x5b	                                 pop rbx	       813	worktree.c	FUNCTION_48
0x4002f53	              0x5d	                                 pop rbp	       813	worktree.c	FUNCTION_48
0x4002f54	              0xc3	                                     ret	       813	worktree.c	FUNCTION_48
is_dot_or_dotdot	CALL,0:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	27
0x40001ab	              0x55	                                push rbp	       276	dir.h	FUNCTION_67
0x40001ac	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_67
0x40001af	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_67
0x40001b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_67
0x40001b7	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_67
0x40001ba	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_67
0x40001bc	            0x7534	                           jne 0x40001f2	       277	dir.h	FUNCTION_67
0x40001be	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_67
0x40001c2	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_67
0x40001c6	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_67
0x40001c9	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_67
0x40001cb	            0x741e	                            je 0x40001eb	       277	dir.h	FUNCTION_67
0x40001cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_67
0x40001d1	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_67
0x40001d5	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_67
0x40001d8	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_67
0x40001da	            0x7516	                           jne 0x40001f2	       278	dir.h	FUNCTION_67
0x40001dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_67
0x40001e0	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_67
0x40001e4	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_67
0x40001e7	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_67
0x40001e9	            0x7507	                           jne 0x40001f2	       279	dir.h	FUNCTION_67
0x40001eb	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_67
0x40001f0	            0xeb05	                           jmp 0x40001f7	       277	dir.h	FUNCTION_67
0x40001f2	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_67
0x40001f7	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_67
0x40001f8	              0xc3	                                     ret	       280	dir.h	FUNCTION_67
list	CALL,9:IF,3:ELSE,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	96
0x40021b0	              0x55	                                push rbp	       577	worktree.c	FUNCTION_42
0x40021b1	          0x4889e5	                            mov rbp, rsp	       577	worktree.c	FUNCTION_42
0x40021b4	    0x4881ecd00000	                           sub rsp, 0xd0	       577	worktree.c	FUNCTION_42
0x40021bb	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	       577	worktree.c	FUNCTION_42
0x40021c1	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       577	worktree.c	FUNCTION_42
0x40021c8	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       577	worktree.c	FUNCTION_42
0x40021cf	    0x64488b042528	                mov rax, qword fs:[0x28]	       577	worktree.c	FUNCTION_42
0x40021d8	        0x488945f8	                mov qword [rbp - 8], rax	       577	worktree.c	FUNCTION_42
0x40021dc	            0x31c0	                            xor eax, eax	       577	worktree.c	FUNCTION_42
0x40021de	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       578	worktree.c	FUNCTION_42
0x40021e8	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       580	worktree.c	FUNCTION_42
0x40021ef	      0xb800000000	                              mov eax, 0	       580	worktree.c	FUNCTION_42
0x40021f4	      0xb910000000	                           mov ecx, 0x10	       580	worktree.c	FUNCTION_42
0x40021f9	          0x4889d7	                            mov rdi, rdx	       580	worktree.c	FUNCTION_42
0x40021fc	          0xf348ab	              rep stosq qword [rdi], rax	       580	worktree.c	FUNCTION_42
0x40021ff	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       580	worktree.c	FUNCTION_42
0x4002209	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       580	worktree.c	FUNCTION_42
0x4002214	    0x488d8558ffff	                   lea rax, [rbp - 0xa8]	       580	worktree.c	FUNCTION_42
0x400221b	        0x48894580	             mov qword [rbp - 0x80], rax	       580	worktree.c	FUNCTION_42
0x400221f	    0x48c745900000	               mov qword [rbp - 0x70], 0	       580	worktree.c	FUNCTION_42
0x4002227	    0xc74598020000	               mov dword [rbp - 0x68], 2	       580	worktree.c	FUNCTION_42
0x400222e	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       580	worktree.c	FUNCTION_42
0x4002236	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       585	worktree.c	FUNCTION_42	CALL_3
0x400223d	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       585	worktree.c	FUNCTION_42	CALL_3
0x4002244	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       585	worktree.c	FUNCTION_42	CALL_3
0x400224b	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       585	worktree.c	FUNCTION_42	CALL_3
0x4002251	    0x41b900000000	                              mov r9d, 0	       585	worktree.c	FUNCTION_42	CALL_3
0x4002257	    0x41b800000000	                              mov r8d, 0	       585	worktree.c	FUNCTION_42	CALL_3
0x400225d	            0x89c7	                            mov edi, eax	       585	worktree.c	FUNCTION_42	CALL_3
0x400225f	      0xe800000000	                          call 0x4002264	       585	worktree.c	FUNCTION_42	CALL_3
0x4002264	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       585	worktree.c	FUNCTION_42	CALL_3
0x400226a	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       586	worktree.c	FUNCTION_42	IF_1
0x4002271	            0x7414	                            je 0x4002287	       586	worktree.c	FUNCTION_42	IF_1
0x4002273	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       587	worktree.c	FUNCTION_42	CALL_4
0x400227a	          0x4889c6	                            mov rsi, rax	       587	worktree.c	FUNCTION_42	CALL_4
0x400227d	      0xbf00000000	                              mov edi, 0	       587	worktree.c	FUNCTION_42	CALL_4
0x4002282	      0xe800000000	                          call 0x4002287	       587	worktree.c	FUNCTION_42	CALL_4
0x4002287	      0xbf01000000	                              mov edi, 1	       589	worktree.c	FUNCTION_42	ELSE_1	CALL_5
0x400228c	      0xe800000000	                          call 0x4002291	       589	worktree.c	FUNCTION_42	ELSE_1	CALL_5
0x4002291	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       589	worktree.c	FUNCTION_42	ELSE_1	CALL_5
0x4002298	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       590	worktree.c	FUNCTION_42	ELSE_1
0x40022a2	    0x8b0500000000	            mov eax, dword [0x040022a8] 	       590	worktree.c	FUNCTION_42	ELSE_1
0x40022a8	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       590	worktree.c	FUNCTION_42	ELSE_1
0x40022ae	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       592	worktree.c	FUNCTION_42	ELSE_1	IF_2
0x40022b4	            0x85c0	                           test eax, eax	       592	worktree.c	FUNCTION_42	ELSE_1	IF_2
0x40022b6	            0x7520	                           jne 0x40022d8	       592	worktree.c	FUNCTION_42	ELSE_1	IF_2
0x40022b8	    0x488d955cffff	                   lea rdx, [rbp - 0xa4]	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022bf	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022c6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022cd	          0x4889ce	                            mov rsi, rcx	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022d0	          0x4889c7	                            mov rdi, rax	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022d3	      0xe80dfeffff	                 call sym.measure_widths	       593	worktree.c	FUNCTION_42	ELSE_1	CALL_6
0x40022d8	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x40022e2	            0xeb6b	                           jmp 0x400234f	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x40022e4	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       596	worktree.c	FUNCTION_42	ELSE_1	FOR_1	IF_3
0x40022ea	            0x85c0	                           test eax, eax	       596	worktree.c	FUNCTION_42	ELSE_1	FOR_1	IF_3
0x40022ec	            0x7427	                            je 0x4002315	       596	worktree.c	FUNCTION_42	ELSE_1	FOR_1	IF_3
0x40022ee	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x40022f4	            0x4898	                                    cdqe	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x40022f6	    0x488d14c50000	                        lea rdx, [rax*8]	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x40022fe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x4002305	          0x4801d0	                            add rax, rdx	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x4002308	          0x488b00	                    mov rax, qword [rax]	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x400230b	          0x4889c7	                            mov rdi, rax	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x400230e	      0xe896fbffff	        call sym.show_worktree_porcelain	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x4002313	            0xeb33	                           jmp 0x4002348	       597	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_7
0x4002315	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x400231b	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002321	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002327	            0x4898	                                    cdqe	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002329	    0x488d34c50000	                        lea rsi, [rax*8]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002331	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002338	          0x4801f0	                            add rax, rsi	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x400233b	          0x488b00	                    mov rax, qword [rax]	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x400233e	            0x89ce	                            mov esi, ecx	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002340	          0x4889c7	                            mov rdi, rax	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002343	      0xe80afcffff	                  call sym.show_worktree	       599	worktree.c	FUNCTION_42	ELSE_1	FOR_1	CALL_8
0x4002348	    0x838564ffffff	               add dword [rbp - 0x9c], 1	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x400234f	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x4002355	            0x4898	                                    cdqe	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x4002357	    0x488d14c50000	                        lea rdx, [rax*8]	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x400235f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x4002366	          0x4801d0	                            add rax, rdx	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x4002369	          0x488b00	                    mov rax, qword [rax]	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x400236c	          0x4885c0	                           test rax, rax	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x400236f	     0xf856fffffff	                           jne 0x40022e4	       595	worktree.c	FUNCTION_42	ELSE_1	FOR_1
0x4002375	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       601	worktree.c	FUNCTION_42	ELSE_1	CALL_9
0x400237c	          0x4889c7	                            mov rdi, rax	       601	worktree.c	FUNCTION_42	ELSE_1	CALL_9
0x400237f	      0xe800000000	                          call 0x4002384	       601	worktree.c	FUNCTION_42	ELSE_1	CALL_9
0x4002384	      0xb800000000	                              mov eax, 0	       603	worktree.c	FUNCTION_42
0x4002389	        0x488b4df8	                mov rcx, qword [rbp - 8]	       604	worktree.c	FUNCTION_42
0x400238d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       604	worktree.c	FUNCTION_42
0x4002396	            0x7405	                            je 0x400239d	       604	worktree.c	FUNCTION_42
0x4002398	      0xe800000000	                          call 0x400239d	       604	worktree.c	FUNCTION_42
0x400239d	              0xc9	                                   leave	       604	worktree.c	FUNCTION_42
0x400239e	              0xc3	                                     ret	       604	worktree.c	FUNCTION_42
validate_no_submodules	CALL,7:IF,3:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	71
0x4002791	              0x55	                                push rbp	       667	worktree.c	FUNCTION_45
0x4002792	          0x4889e5	                            mov rbp, rsp	       667	worktree.c	FUNCTION_45
0x4002795	              0x53	                                push rbx	       667	worktree.c	FUNCTION_45
0x4002796	    0x4881ec080100	                          sub rsp, 0x108	       667	worktree.c	FUNCTION_45
0x400279d	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       667	worktree.c	FUNCTION_45
0x40027a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       667	worktree.c	FUNCTION_45
0x40027ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       667	worktree.c	FUNCTION_45
0x40027b1	            0x31c0	                            xor eax, eax	       667	worktree.c	FUNCTION_45
0x40027b3	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	       668	worktree.c	FUNCTION_45
0x40027ba	      0xb800000000	                              mov eax, 0	       668	worktree.c	FUNCTION_45
0x40027bf	      0xb91a000000	                           mov ecx, 0x1a	       668	worktree.c	FUNCTION_45
0x40027c4	          0x4889d7	                            mov rdi, rdx	       668	worktree.c	FUNCTION_45
0x40027c7	          0xf348ab	              rep stosq qword [rdi], rax	       668	worktree.c	FUNCTION_45
0x40027ca	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	       669	worktree.c	FUNCTION_45
0x40027d4	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027db	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027de	      0xe800000000	                          call 0x40027e3	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027e3	          0x4889c3	                            mov rbx, rax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027e6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027ed	      0xbe00000000	                              mov esi, 0	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027f2	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027f5	      0xb800000000	                              mov eax, 0	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027fa	      0xe800000000	                          call 0x40027ff	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x40027ff	          0x4889c1	                            mov rcx, rax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x4002802	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x4002809	          0x4889da	                            mov rdx, rbx	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x400280c	          0x4889ce	                            mov rsi, rcx	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x400280f	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x4002812	      0xe800000000	                          call 0x4002817	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x4002817	            0x85c0	                           test eax, eax	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x4002819	            0x7e66	                           jle 0x4002881	       671	worktree.c	FUNCTION_45	IF_1	CALL_2
0x400281b	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002825	            0xeb4a	                           jmp 0x4002871	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002827	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x400282e	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002834	          0x4863d2	                         movsxd rdx, edx	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002837	        0x48c1e203	                              shl rdx, 3	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x400283b	          0x4801d0	                            add rax, rdx	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x400283e	          0x488b00	                    mov rax, qword [rax]	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002841	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       674	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002848	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       676	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2	CALL_4
0x400284f	          0x8b4034	            mov eax, dword [rax + 0x34] 	       676	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2	CALL_4
0x4002852	      0x2500f00000	                         and eax, 0xf000	       676	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2	CALL_4
0x4002857	      0x3d00e00000	                         cmp eax, 0xe000	       676	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2	CALL_4
0x400285c	            0x750c	                           jne 0x400286a	       676	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2	CALL_4
0x400285e	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	       677	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002868	            0xeb17	                           jmp 0x4002881	       678	worktree.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400286a	    0x838500ffffff	              add dword [rbp - 0x100], 1	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002871	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002877	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x400287d	            0x39c2	                            cmp edx, eax	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x400287f	            0x77a6	                            ja 0x4002827	       673	worktree.c	FUNCTION_45	IF_1	FOR_1
0x4002881	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       682	worktree.c	FUNCTION_45	CALL_5
0x4002888	          0x4889c7	                            mov rdi, rax	       682	worktree.c	FUNCTION_45	CALL_5
0x400288b	      0xe800000000	                          call 0x4002890	       682	worktree.c	FUNCTION_45	CALL_5
0x4002890	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	       684	worktree.c	FUNCTION_45	IF_3
0x4002897	            0x7417	                            je 0x40028b0	       684	worktree.c	FUNCTION_45	IF_3
0x4002899	      0xbf00000000	                              mov edi, 0	       685	worktree.c	FUNCTION_45	CALL_7
0x400289e	      0xe8dcd8ffff	                               call sym.	       685	worktree.c	FUNCTION_45	CALL_7
0x40028a3	          0x4889c7	                            mov rdi, rax	       685	worktree.c	FUNCTION_45	CALL_7
0x40028a6	      0xb800000000	                              mov eax, 0	       685	worktree.c	FUNCTION_45	CALL_7
0x40028ab	      0xe800000000	                          call 0x40028b0	       685	worktree.c	FUNCTION_45	CALL_7
0x40028b0	              0x90	                                     nop	       686	worktree.c	FUNCTION_45
0x40028b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       686	worktree.c	FUNCTION_45
0x40028b5	    0x644833042528	                xor rax, qword fs:[0x28]	       686	worktree.c	FUNCTION_45
0x40028be	            0x7405	                            je 0x40028c5	       686	worktree.c	FUNCTION_45
0x40028c0	      0xe800000000	                          call 0x40028c5	       686	worktree.c	FUNCTION_45
0x40028c5	    0x4881c4080100	                          add rsp, 0x108	       686	worktree.c	FUNCTION_45
0x40028cc	              0x5b	                                 pop rbx	       686	worktree.c	FUNCTION_45
0x40028cd	              0x5d	                                 pop rbp	       686	worktree.c	FUNCTION_45
0x40028ce	              0xc3	                                     ret	       686	worktree.c	FUNCTION_45
remove_worktree	CALL,25:IF,8:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	152
0x4003025	              0x55	                                push rbp	       830	worktree.c	FUNCTION_50
0x4003026	          0x4889e5	                            mov rbp, rsp	       830	worktree.c	FUNCTION_50
0x4003029	              0x53	                                push rbx	       830	worktree.c	FUNCTION_50
0x400302a	    0x4881ecf80000	                           sub rsp, 0xf8	       830	worktree.c	FUNCTION_50
0x4003031	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	       830	worktree.c	FUNCTION_50
0x4003037	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       830	worktree.c	FUNCTION_50
0x400303e	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       830	worktree.c	FUNCTION_50
0x4003045	    0x64488b042528	                mov rax, qword fs:[0x28]	       830	worktree.c	FUNCTION_50
0x400304e	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	worktree.c	FUNCTION_50
0x4003052	            0x31c0	                            xor eax, eax	       830	worktree.c	FUNCTION_50
0x4003054	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       831	worktree.c	FUNCTION_50
0x400305e	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       832	worktree.c	FUNCTION_50
0x4003065	      0xb800000000	                              mov eax, 0	       832	worktree.c	FUNCTION_50
0x400306a	      0xb910000000	                           mov ecx, 0x10	       832	worktree.c	FUNCTION_50
0x400306f	          0x4889d7	                            mov rdi, rdx	       832	worktree.c	FUNCTION_50
0x4003072	          0xf348ab	              rep stosq qword [rdi], rax	       832	worktree.c	FUNCTION_50
0x4003075	    0xc78560ffffff	               mov dword [rbp - 0xa0], 6	       832	worktree.c	FUNCTION_50
0x400307f	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x66 	       832	worktree.c	FUNCTION_50
0x4003089	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       832	worktree.c	FUNCTION_50
0x4003094	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       832	worktree.c	FUNCTION_50
0x400309b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       832	worktree.c	FUNCTION_50
0x40030a2	    0x48c745800000	               mov qword [rbp - 0x80], 0	       832	worktree.c	FUNCTION_50
0x40030aa	    0xc74588020200	          mov dword [rbp - 0x78], 0x202 	       832	worktree.c	FUNCTION_50
0x40030b1	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       839	worktree.c	FUNCTION_50
0x40030bc	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       839	worktree.c	FUNCTION_50
0x40030c7	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       839	worktree.c	FUNCTION_50
0x40030d2	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	       841	worktree.c	FUNCTION_50
0x40030dc	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       843	worktree.c	FUNCTION_50	CALL_3
0x40030e3	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       843	worktree.c	FUNCTION_50	CALL_3
0x40030ea	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       843	worktree.c	FUNCTION_50	CALL_3
0x40030f1	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       843	worktree.c	FUNCTION_50	CALL_3
0x40030f7	    0x41b900000000	                              mov r9d, 0	       843	worktree.c	FUNCTION_50	CALL_3
0x40030fd	    0x41b800000000	                              mov r8d, 0	       843	worktree.c	FUNCTION_50	CALL_3
0x4003103	            0x89c7	                            mov edi, eax	       843	worktree.c	FUNCTION_50	CALL_3
0x4003105	      0xe800000000	                          call 0x400310a	       843	worktree.c	FUNCTION_50	CALL_3
0x400310a	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	       843	worktree.c	FUNCTION_50	CALL_3
0x4003110	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	       844	worktree.c	FUNCTION_50	IF_1
0x4003117	            0x7414	                            je 0x400312d	       844	worktree.c	FUNCTION_50	IF_1
0x4003119	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       845	worktree.c	FUNCTION_50	CALL_4
0x4003120	          0x4889c6	                            mov rsi, rax	       845	worktree.c	FUNCTION_50	CALL_4
0x4003123	      0xbf00000000	                              mov edi, 0	       845	worktree.c	FUNCTION_50	CALL_4
0x4003128	      0xe800000000	                          call 0x400312d	       845	worktree.c	FUNCTION_50	CALL_4
0x400312d	      0xbf00000000	                              mov edi, 0	       847	worktree.c	FUNCTION_50	CALL_5
0x4003132	      0xe800000000	                          call 0x4003137	       847	worktree.c	FUNCTION_50	CALL_5
0x4003137	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       847	worktree.c	FUNCTION_50	CALL_5
0x400313e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       848	worktree.c	FUNCTION_50	CALL_6
0x4003145	          0x488b10	                    mov rdx, qword [rax]	       848	worktree.c	FUNCTION_50	CALL_6
0x4003148	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       848	worktree.c	FUNCTION_50	CALL_6
0x400314f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       848	worktree.c	FUNCTION_50	CALL_6
0x4003156	          0x4889ce	                            mov rsi, rcx	       848	worktree.c	FUNCTION_50	CALL_6
0x4003159	          0x4889c7	                            mov rdi, rax	       848	worktree.c	FUNCTION_50	CALL_6
0x400315c	      0xe800000000	                          call 0x4003161	       848	worktree.c	FUNCTION_50	CALL_6
0x4003161	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       848	worktree.c	FUNCTION_50	CALL_6
0x4003168	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	       849	worktree.c	FUNCTION_50	IF_2
0x4003170	            0x7524	                           jne 0x4003196	       849	worktree.c	FUNCTION_50	IF_2
0x4003172	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       850	worktree.c	FUNCTION_50	CALL_8
0x4003179	          0x488b18	                    mov rbx, qword [rax]	       850	worktree.c	FUNCTION_50	CALL_8
0x400317c	      0xbf00000000	                              mov edi, 0	       850	worktree.c	FUNCTION_50	CALL_8
0x4003181	      0xe8f9cfffff	                               call sym.	       850	worktree.c	FUNCTION_50	CALL_8
0x4003186	          0x4889de	                            mov rsi, rbx	       850	worktree.c	FUNCTION_50	CALL_8
0x4003189	          0x4889c7	                            mov rdi, rax	       850	worktree.c	FUNCTION_50	CALL_8
0x400318c	      0xb800000000	                              mov eax, 0	       850	worktree.c	FUNCTION_50	CALL_8
0x4003191	      0xe800000000	                          call 0x4003196	       850	worktree.c	FUNCTION_50	CALL_8
0x4003196	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       851	worktree.c	FUNCTION_50	IF_3	CALL_9
0x400319d	          0x4889c7	                            mov rdi, rax	       851	worktree.c	FUNCTION_50	IF_3	CALL_9
0x40031a0	      0xe800000000	                          call 0x40031a5	       851	worktree.c	FUNCTION_50	IF_3	CALL_9
0x40031a5	            0x85c0	                           test eax, eax	       851	worktree.c	FUNCTION_50	IF_3	CALL_9
0x40031a7	            0x7424	                            je 0x40031cd	       851	worktree.c	FUNCTION_50	IF_3	CALL_9
0x40031a9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       852	worktree.c	FUNCTION_50	CALL_11
0x40031b0	          0x488b18	                    mov rbx, qword [rax]	       852	worktree.c	FUNCTION_50	CALL_11
0x40031b3	      0xbf00000000	                              mov edi, 0	       852	worktree.c	FUNCTION_50	CALL_11
0x40031b8	      0xe8c2cfffff	                               call sym.	       852	worktree.c	FUNCTION_50	CALL_11
0x40031bd	          0x4889de	                            mov rsi, rbx	       852	worktree.c	FUNCTION_50	CALL_11
0x40031c0	          0x4889c7	                            mov rdi, rax	       852	worktree.c	FUNCTION_50	CALL_11
0x40031c3	      0xb800000000	                              mov eax, 0	       852	worktree.c	FUNCTION_50	CALL_11
0x40031c8	      0xe800000000	                          call 0x40031cd	       852	worktree.c	FUNCTION_50	CALL_11
0x40031cd	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       853	worktree.c	FUNCTION_50	CALL_12
0x40031d4	          0x4889c7	                            mov rdi, rax	       853	worktree.c	FUNCTION_50	CALL_12
0x40031d7	      0xe800000000	                          call 0x40031dc	       853	worktree.c	FUNCTION_50	CALL_12
0x40031dc	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       853	worktree.c	FUNCTION_50	CALL_12
0x40031e3	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       854	worktree.c	FUNCTION_50	IF_4
0x40031eb	            0x7449	                            je 0x4003236	       854	worktree.c	FUNCTION_50	IF_4
0x40031ed	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       855	worktree.c	FUNCTION_50	IF_4	IF_5
0x40031f4	           0xfb600	                   movzx eax, byte [rax]	       855	worktree.c	FUNCTION_50	IF_4	IF_5
0x40031f7	            0x84c0	                             test al, al	       855	worktree.c	FUNCTION_50	IF_4	IF_5
0x40031f9	            0x7424	                            je 0x400321f	       855	worktree.c	FUNCTION_50	IF_4	IF_5
0x40031fb	      0xbf00000000	                              mov edi, 0	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x4003200	      0xe87acfffff	                               call sym.	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x4003205	          0x4889c2	                            mov rdx, rax	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x4003208	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x400320f	          0x4889c6	                            mov rsi, rax	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x4003212	          0x4889d7	                            mov rdi, rdx	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x4003215	      0xb800000000	                              mov eax, 0	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x400321a	      0xe800000000	                          call 0x400321f	       856	worktree.c	FUNCTION_50	IF_4	IF_5	CALL_14
0x400321f	      0xbf00000000	                              mov edi, 0	       858	worktree.c	FUNCTION_50	IF_4	CALL_16
0x4003224	      0xe856cfffff	                               call sym.	       858	worktree.c	FUNCTION_50	IF_4	CALL_16
0x4003229	          0x4889c7	                            mov rdi, rax	       858	worktree.c	FUNCTION_50	IF_4	CALL_16
0x400322c	      0xb800000000	                              mov eax, 0	       858	worktree.c	FUNCTION_50	IF_4	CALL_16
0x4003231	      0xe800000000	                          call 0x4003236	       858	worktree.c	FUNCTION_50	IF_4	CALL_16
0x4003236	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x400323d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x4003244	      0xba01000000	                              mov edx, 1	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x4003249	          0x4889ce	                            mov rsi, rcx	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x400324c	          0x4889c7	                            mov rdi, rax	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x400324f	      0xe800000000	                          call 0x4003254	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x4003254	            0x85c0	                           test eax, eax	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x4003256	            0x7421	                            je 0x4003279	       860	worktree.c	FUNCTION_50	IF_6	CALL_17
0x4003258	    0x488b9d50ffff	             mov rbx, qword [rbp - 0xb0]	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x400325f	      0xbf00000000	                              mov edi, 0	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x4003264	      0xe816cfffff	                               call sym.	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x4003269	          0x4889de	                            mov rsi, rbx	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x400326c	          0x4889c7	                            mov rdi, rax	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x400326f	      0xb800000000	                              mov eax, 0	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x4003274	      0xe800000000	                          call 0x4003279	       861	worktree.c	FUNCTION_50	IF_6	CALL_19
0x4003279	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       863	worktree.c	FUNCTION_50	CALL_20
0x4003280	          0x4889c7	                            mov rdi, rax	       863	worktree.c	FUNCTION_50	CALL_20
0x4003283	      0xe800000000	                          call 0x4003288	       863	worktree.c	FUNCTION_50	CALL_20
0x4003288	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x400328f	          0x488b00	                    mov rax, qword [rax]	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x4003292	          0x4889c7	                            mov rdi, rax	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x4003295	      0xe800000000	                          call 0x400329a	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x400329a	            0x85c0	                           test eax, eax	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x400329c	            0x743b	                            je 0x40032d9	       865	worktree.c	FUNCTION_50	IF_7	CALL_21
0x400329e	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       866	worktree.c	FUNCTION_50	IF_7	IF_8
0x40032a4	            0x85c0	                           test eax, eax	       866	worktree.c	FUNCTION_50	IF_7	IF_8
0x40032a6	            0x751c	                           jne 0x40032c4	       866	worktree.c	FUNCTION_50	IF_7	IF_8
0x40032a8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032af	          0x488b10	                    mov rdx, qword [rax]	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032b2	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032b9	          0x4889d6	                            mov rsi, rdx	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032bc	          0x4889c7	                            mov rdi, rax	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032bf	      0xe8e5f9ffff	           call sym.check_clean_worktree	       867	worktree.c	FUNCTION_50	IF_7	CALL_22
0x40032c4	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       869	worktree.c	FUNCTION_50	IF_7	CALL_23
0x40032cb	          0x4889c7	                            mov rdi, rax	       869	worktree.c	FUNCTION_50	IF_7	CALL_23
0x40032ce	      0xe8c8fbffff	           call sym.delete_git_work_tree	       869	worktree.c	FUNCTION_50	IF_7	CALL_23
0x40032d3	     0x98524ffffff	              or dword [rbp - 0xdc], eax	       869	worktree.c	FUNCTION_50	IF_7	CALL_23
0x40032d9	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       875	worktree.c	FUNCTION_50	CALL_24
0x40032e0	          0x4889c7	                            mov rdi, rax	       875	worktree.c	FUNCTION_50	CALL_24
0x40032e3	      0xe86dfcffff	                 call sym.delete_git_dir	       875	worktree.c	FUNCTION_50	CALL_24
0x40032e8	     0x98524ffffff	              or dword [rbp - 0xdc], eax	       875	worktree.c	FUNCTION_50	CALL_24
0x40032ee	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       877	worktree.c	FUNCTION_50	CALL_25
0x40032f5	          0x4889c7	                            mov rdi, rax	       877	worktree.c	FUNCTION_50	CALL_25
0x40032f8	      0xe800000000	                          call 0x40032fd	       877	worktree.c	FUNCTION_50	CALL_25
0x40032fd	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       878	worktree.c	FUNCTION_50
0x4003303	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       879	worktree.c	FUNCTION_50
0x4003307	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	worktree.c	FUNCTION_50
0x4003310	            0x7405	                            je 0x4003317	       879	worktree.c	FUNCTION_50
0x4003312	      0xe800000000	                          call 0x4003317	       879	worktree.c	FUNCTION_50
0x4003317	    0x4881c4f80000	                           add rsp, 0xf8	       879	worktree.c	FUNCTION_50
0x400331e	              0x5b	                                 pop rbx	       879	worktree.c	FUNCTION_50
0x400331f	              0x5d	                                 pop rbp	       879	worktree.c	FUNCTION_50
0x4003320	              0xc3	                                     ret	       879	worktree.c	FUNCTION_50
cmd_worktree	CALL,18:IF,9:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	155
0x4003321	              0x55	                                push rbp	       882	worktree.c	FUNCTION_51
0x4003322	          0x4889e5	                            mov rbp, rsp	       882	worktree.c	FUNCTION_51
0x4003325	        0x4883ec70	                           sub rsp, 0x70	       882	worktree.c	FUNCTION_51
0x4003329	          0x897dac	             mov dword [rbp - 0x54], edi	       882	worktree.c	FUNCTION_51
0x400332c	        0x488975a0	             mov qword [rbp - 0x60], rsi	       882	worktree.c	FUNCTION_51
0x4003330	        0x48895598	             mov qword [rbp - 0x68], rdx	       882	worktree.c	FUNCTION_51
0x4003334	    0x64488b042528	                mov rax, qword fs:[0x28]	       882	worktree.c	FUNCTION_51
0x400333d	        0x488945f8	                mov qword [rbp - 8], rax	       882	worktree.c	FUNCTION_51
0x4003341	            0x31c0	                            xor eax, eax	       882	worktree.c	FUNCTION_51
0x4003343	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       883	worktree.c	FUNCTION_51
0x4003347	      0xb800000000	                              mov eax, 0	       883	worktree.c	FUNCTION_51
0x400334c	      0xb908000000	                              mov ecx, 8	       883	worktree.c	FUNCTION_51
0x4003351	          0x4889d7	                            mov rdi, rdx	       883	worktree.c	FUNCTION_51
0x4003354	          0xf348ab	              rep stosq qword [rdi], rax	       883	worktree.c	FUNCTION_51
0x4003357	      0xbe00000000	                              mov esi, 0	       887	worktree.c	FUNCTION_51	CALL_2
0x400335c	      0xbf00000000	                              mov edi, 0	       887	worktree.c	FUNCTION_51	CALL_2
0x4003361	      0xe800000000	                          call 0x4003366	       887	worktree.c	FUNCTION_51	CALL_2
0x4003366	        0x837dac01	               cmp dword [rbp - 0x54], 1	       889	worktree.c	FUNCTION_51	IF_1
0x400336a	            0x7f11	                            jg 0x400337d	       889	worktree.c	FUNCTION_51	IF_1
0x400336c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       890	worktree.c	FUNCTION_51	CALL_3
0x4003370	          0x4889c6	                            mov rsi, rax	       890	worktree.c	FUNCTION_51	CALL_3
0x4003373	      0xbf00000000	                              mov edi, 0	       890	worktree.c	FUNCTION_51	CALL_3
0x4003378	      0xe800000000	                          call 0x400337d	       890	worktree.c	FUNCTION_51	CALL_3
0x400337d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       891	worktree.c	FUNCTION_51	IF_2
0x4003382	            0x7508	                           jne 0x400338c	       891	worktree.c	FUNCTION_51	IF_2
0x4003384	    0x48c745980000	               mov qword [rbp - 0x68], 0	       892	worktree.c	FUNCTION_51	IF_2
0x400338c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x4003390	        0x4883c008	                              add rax, 8	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x4003394	          0x488b00	                    mov rax, qword [rax]	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x4003397	      0xbe00000000	                              mov esi, 0	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x400339c	          0x4889c7	                            mov rdi, rax	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x400339f	      0xe800000000	                          call 0x40033a4	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x40033a4	            0x85c0	                           test eax, eax	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x40033a6	            0x7521	                           jne 0x40033c9	       893	worktree.c	FUNCTION_51	IF_3	CALL_4
0x40033a8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       894	worktree.c	FUNCTION_51	CALL_5
0x40033ac	        0x488d7008	                      lea rsi, [rax + 8]	       894	worktree.c	FUNCTION_51	CALL_5
0x40033b0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       894	worktree.c	FUNCTION_51	CALL_5
0x40033b3	          0x8d48ff	                      lea ecx, [rax - 1]	       894	worktree.c	FUNCTION_51	CALL_5
0x40033b6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       894	worktree.c	FUNCTION_51	CALL_5
0x40033ba	          0x4889c2	                            mov rdx, rax	       894	worktree.c	FUNCTION_51	CALL_5
0x40033bd	            0x89cf	                            mov edi, ecx	       894	worktree.c	FUNCTION_51	CALL_5
0x40033bf	      0xe83ce4ffff	                            call sym.add	       894	worktree.c	FUNCTION_51	CALL_5
0x40033c4	      0xe979010000	                           jmp 0x4003542	       894	worktree.c	FUNCTION_51	CALL_5
0x40033c9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033cd	        0x4883c008	                              add rax, 8	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033d1	          0x488b00	                    mov rax, qword [rax]	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033d4	      0xbe00000000	                              mov esi, 0	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033d9	          0x4889c7	                            mov rdi, rax	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033dc	      0xe800000000	                          call 0x40033e1	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033e1	            0x85c0	                           test eax, eax	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033e3	            0x7521	                           jne 0x4003406	       895	worktree.c	FUNCTION_51	IF_4	CALL_6
0x40033e5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       896	worktree.c	FUNCTION_51	CALL_7
0x40033e9	        0x488d7008	                      lea rsi, [rax + 8]	       896	worktree.c	FUNCTION_51	CALL_7
0x40033ed	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       896	worktree.c	FUNCTION_51	CALL_7
0x40033f0	          0x8d48ff	                      lea ecx, [rax - 1]	       896	worktree.c	FUNCTION_51	CALL_7
0x40033f3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       896	worktree.c	FUNCTION_51	CALL_7
0x40033f7	          0x4889c2	                            mov rdx, rax	       896	worktree.c	FUNCTION_51	CALL_7
0x40033fa	            0x89cf	                            mov edi, ecx	       896	worktree.c	FUNCTION_51	CALL_7
0x40033fc	      0xe881d4ffff	                          call sym.prune	       896	worktree.c	FUNCTION_51	CALL_7
0x4003401	      0xe93c010000	                           jmp 0x4003542	       896	worktree.c	FUNCTION_51	CALL_7
0x4003406	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x400340a	        0x4883c008	                              add rax, 8	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x400340e	          0x488b00	                    mov rax, qword [rax]	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x4003411	      0xbe00000000	                              mov esi, 0	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x4003416	          0x4889c7	                            mov rdi, rax	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x4003419	      0xe800000000	                          call 0x400341e	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x400341e	            0x85c0	                           test eax, eax	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x4003420	            0x7521	                           jne 0x4003443	       897	worktree.c	FUNCTION_51	IF_5	CALL_8
0x4003422	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       898	worktree.c	FUNCTION_51	CALL_9
0x4003426	        0x488d7008	                      lea rsi, [rax + 8]	       898	worktree.c	FUNCTION_51	CALL_9
0x400342a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       898	worktree.c	FUNCTION_51	CALL_9
0x400342d	          0x8d48ff	                      lea ecx, [rax - 1]	       898	worktree.c	FUNCTION_51	CALL_9
0x4003430	        0x488b4598	             mov rax, qword [rbp - 0x68]	       898	worktree.c	FUNCTION_51	CALL_9
0x4003434	          0x4889c2	                            mov rdx, rax	       898	worktree.c	FUNCTION_51	CALL_9
0x4003437	            0x89cf	                            mov edi, ecx	       898	worktree.c	FUNCTION_51	CALL_9
0x4003439	      0xe872edffff	                           call sym.list	       898	worktree.c	FUNCTION_51	CALL_9
0x400343e	      0xe9ff000000	                           jmp 0x4003542	       898	worktree.c	FUNCTION_51	CALL_9
0x4003443	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x4003447	        0x4883c008	                              add rax, 8	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x400344b	          0x488b00	                    mov rax, qword [rax]	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x400344e	      0xbe00000000	                              mov esi, 0	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x4003453	          0x4889c7	                            mov rdi, rax	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x4003456	      0xe800000000	                          call 0x400345b	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x400345b	            0x85c0	                           test eax, eax	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x400345d	            0x7521	                           jne 0x4003480	       899	worktree.c	FUNCTION_51	IF_6	CALL_10
0x400345f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       900	worktree.c	FUNCTION_51	CALL_11
0x4003463	        0x488d7008	                      lea rsi, [rax + 8]	       900	worktree.c	FUNCTION_51	CALL_11
0x4003467	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       900	worktree.c	FUNCTION_51	CALL_11
0x400346a	          0x8d48ff	                      lea ecx, [rax - 1]	       900	worktree.c	FUNCTION_51	CALL_11
0x400346d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       900	worktree.c	FUNCTION_51	CALL_11
0x4003471	          0x4889c2	                            mov rdx, rax	       900	worktree.c	FUNCTION_51	CALL_11
0x4003474	            0x89cf	                            mov edi, ecx	       900	worktree.c	FUNCTION_51	CALL_11
0x4003476	      0xe824efffff	                  call sym.lock_worktree	       900	worktree.c	FUNCTION_51	CALL_11
0x400347b	      0xe9c2000000	                           jmp 0x4003542	       900	worktree.c	FUNCTION_51	CALL_11
0x4003480	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x4003484	        0x4883c008	                              add rax, 8	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x4003488	          0x488b00	                    mov rax, qword [rax]	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x400348b	      0xbe00000000	                              mov esi, 0	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x4003490	          0x4889c7	                            mov rdi, rax	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x4003493	      0xe800000000	                          call 0x4003498	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x4003498	            0x85c0	                           test eax, eax	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x400349a	            0x7521	                           jne 0x40034bd	       901	worktree.c	FUNCTION_51	IF_7	CALL_12
0x400349c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       902	worktree.c	FUNCTION_51	CALL_13
0x40034a0	        0x488d7008	                      lea rsi, [rax + 8]	       902	worktree.c	FUNCTION_51	CALL_13
0x40034a4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       902	worktree.c	FUNCTION_51	CALL_13
0x40034a7	          0x8d48ff	                      lea ecx, [rax - 1]	       902	worktree.c	FUNCTION_51	CALL_13
0x40034aa	        0x488b4598	             mov rax, qword [rbp - 0x68]	       902	worktree.c	FUNCTION_51	CALL_13
0x40034ae	          0x4889c2	                            mov rdx, rax	       902	worktree.c	FUNCTION_51	CALL_13
0x40034b1	            0x89cf	                            mov edi, ecx	       902	worktree.c	FUNCTION_51	CALL_13
0x40034b3	      0xe840f1ffff	                call sym.unlock_worktree	       902	worktree.c	FUNCTION_51	CALL_13
0x40034b8	      0xe985000000	                           jmp 0x4003542	       902	worktree.c	FUNCTION_51	CALL_13
0x40034bd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034c1	        0x4883c008	                              add rax, 8	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034c5	          0x488b00	                    mov rax, qword [rax]	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034c8	      0xbe00000000	                              mov esi, 0	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034cd	          0x4889c7	                            mov rdi, rax	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034d0	      0xe800000000	                          call 0x40034d5	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034d5	            0x85c0	                           test eax, eax	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034d7	            0x751e	                           jne 0x40034f7	       903	worktree.c	FUNCTION_51	IF_8	CALL_14
0x40034d9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       904	worktree.c	FUNCTION_51	CALL_15
0x40034dd	        0x488d7008	                      lea rsi, [rax + 8]	       904	worktree.c	FUNCTION_51	CALL_15
0x40034e1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       904	worktree.c	FUNCTION_51	CALL_15
0x40034e4	          0x8d48ff	                      lea ecx, [rax - 1]	       904	worktree.c	FUNCTION_51	CALL_15
0x40034e7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       904	worktree.c	FUNCTION_51	CALL_15
0x40034eb	          0x4889c2	                            mov rdx, rax	       904	worktree.c	FUNCTION_51	CALL_15
0x40034ee	            0x89cf	                            mov edi, ecx	       904	worktree.c	FUNCTION_51	CALL_15
0x40034f0	      0xe8daf3ffff	                  call sym.move_worktree	       904	worktree.c	FUNCTION_51	CALL_15
0x40034f5	            0xeb4b	                           jmp 0x4003542	       904	worktree.c	FUNCTION_51	CALL_15
0x40034f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x40034fb	        0x4883c008	                              add rax, 8	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x40034ff	          0x488b00	                    mov rax, qword [rax]	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x4003502	      0xbe00000000	                              mov esi, 0	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x4003507	          0x4889c7	                            mov rdi, rax	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x400350a	      0xe800000000	                          call 0x400350f	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x400350f	            0x85c0	                           test eax, eax	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x4003511	            0x751e	                           jne 0x4003531	       905	worktree.c	FUNCTION_51	IF_9	CALL_16
0x4003513	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       906	worktree.c	FUNCTION_51	CALL_17
0x4003517	        0x488d7008	                      lea rsi, [rax + 8]	       906	worktree.c	FUNCTION_51	CALL_17
0x400351b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       906	worktree.c	FUNCTION_51	CALL_17
0x400351e	          0x8d48ff	                      lea ecx, [rax - 1]	       906	worktree.c	FUNCTION_51	CALL_17
0x4003521	        0x488b4598	             mov rax, qword [rbp - 0x68]	       906	worktree.c	FUNCTION_51	CALL_17
0x4003525	          0x4889c2	                            mov rdx, rax	       906	worktree.c	FUNCTION_51	CALL_17
0x4003528	            0x89cf	                            mov edi, ecx	       906	worktree.c	FUNCTION_51	CALL_17
0x400352a	      0xe8f6faffff	                call sym.remove_worktree	       906	worktree.c	FUNCTION_51	CALL_17
0x400352f	            0xeb11	                           jmp 0x4003542	       906	worktree.c	FUNCTION_51	CALL_17
0x4003531	        0x488d45b0	                   lea rax, [rbp - 0x50]	       907	worktree.c	FUNCTION_51	CALL_18
0x4003535	          0x4889c6	                            mov rsi, rax	       907	worktree.c	FUNCTION_51	CALL_18
0x4003538	      0xbf00000000	                              mov edi, 0	       907	worktree.c	FUNCTION_51	CALL_18
0x400353d	      0xe800000000	                          call 0x4003542	       907	worktree.c	FUNCTION_51	CALL_18
0x4003542	        0x488b55f8	                mov rdx, qword [rbp - 8]	       908	worktree.c	FUNCTION_51
0x4003546	    0x644833142528	                xor rdx, qword fs:[0x28]	       908	worktree.c	FUNCTION_51
0x400354f	            0x7405	                            je 0x4003556	       908	worktree.c	FUNCTION_51
0x4003551	      0xe800000000	                          call 0x4003556	       908	worktree.c	FUNCTION_51
0x4003556	              0xc9	                                   leave	       908	worktree.c	FUNCTION_51
0x4003557	              0xc3	                                     ret	       908	worktree.c	FUNCTION_51
add	CALL,33:IF,15:ELSE,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	298
0x4001800	              0x55	                                push rbp	       422	worktree.c	FUNCTION_38
0x4001801	          0x4889e5	                            mov rbp, rsp	       422	worktree.c	FUNCTION_38
0x4001804	    0x4881ec400300	                          sub rsp, 0x340	       422	worktree.c	FUNCTION_38
0x400180b	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	       422	worktree.c	FUNCTION_38
0x4001811	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	       422	worktree.c	FUNCTION_38
0x4001818	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	       422	worktree.c	FUNCTION_38
0x400181f	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	worktree.c	FUNCTION_38
0x4001828	        0x488945f8	                mov qword [rbp - 8], rax	       422	worktree.c	FUNCTION_38
0x400182c	            0x31c0	                            xor eax, eax	       422	worktree.c	FUNCTION_38
0x400182e	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       424	worktree.c	FUNCTION_38
0x4001839	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	       427	worktree.c	FUNCTION_38
0x4001844	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       428	worktree.c	FUNCTION_38
0x400184f	    0x488d95b0fdff	                  lea rdx, [rbp - 0x250]	       429	worktree.c	FUNCTION_38
0x4001856	      0xb800000000	                              mov eax, 0	       429	worktree.c	FUNCTION_38
0x400185b	      0xb948000000	                           mov ecx, 0x48	       429	worktree.c	FUNCTION_38
0x4001860	          0x4889d7	                            mov rdi, rdx	       429	worktree.c	FUNCTION_38
0x4001863	          0xf348ab	              rep stosq qword [rdi], rax	       429	worktree.c	FUNCTION_38
0x4001866	    0xc785b0fdffff	              mov dword [rbp - 0x250], 6	       429	worktree.c	FUNCTION_38
0x4001870	    0xc785b4fdffff	          mov dword [rbp - 0x24c], 0x66 	       429	worktree.c	FUNCTION_38
0x400187a	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       429	worktree.c	FUNCTION_38
0x4001885	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_38
0x400188c	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       429	worktree.c	FUNCTION_38
0x4001893	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       429	worktree.c	FUNCTION_38
0x400189e	    0xc785d8fdffff	         mov dword [rbp - 0x228], 0x202 	       429	worktree.c	FUNCTION_38
0x40018a8	    0xc785f0fdffff	              mov dword [rbp - 0x210], 9	       429	worktree.c	FUNCTION_38
0x40018b2	    0xc785f4fdffff	          mov dword [rbp - 0x20c], 0x62 	       429	worktree.c	FUNCTION_38
0x40018bc	    0x488d85e8fcff	                  lea rax, [rbp - 0x318]	       429	worktree.c	FUNCTION_38
0x40018c3	    0x48898500feff	            mov qword [rbp - 0x200], rax	       429	worktree.c	FUNCTION_38
0x40018ca	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	       429	worktree.c	FUNCTION_38
0x40018d5	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       429	worktree.c	FUNCTION_38
0x40018e0	    0xc78530feffff	              mov dword [rbp - 0x1d0], 9	       429	worktree.c	FUNCTION_38
0x40018ea	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x42 	       429	worktree.c	FUNCTION_38
0x40018f4	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       429	worktree.c	FUNCTION_38
0x40018fb	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       429	worktree.c	FUNCTION_38
0x4001902	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	       429	worktree.c	FUNCTION_38
0x400190d	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       429	worktree.c	FUNCTION_38
0x4001918	    0xc78570feffff	              mov dword [rbp - 0x190], 7	       429	worktree.c	FUNCTION_38
0x4001922	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       429	worktree.c	FUNCTION_38
0x400192d	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_38
0x4001934	        0x4883c004	                              add rax, 4	       429	worktree.c	FUNCTION_38
0x4001938	    0x48898580feff	            mov qword [rbp - 0x180], rax	       429	worktree.c	FUNCTION_38
0x400193f	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       429	worktree.c	FUNCTION_38
0x400194a	    0xc78598feffff	              mov dword [rbp - 0x168], 2	       429	worktree.c	FUNCTION_38
0x4001954	    0x48c785a8feff	              mov qword [rbp - 0x158], 1	       429	worktree.c	FUNCTION_38
0x400195f	    0xc785b0feffff	              mov dword [rbp - 0x150], 7	       429	worktree.c	FUNCTION_38
0x4001969	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       429	worktree.c	FUNCTION_38
0x4001974	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_38
0x400197b	        0x4883c008	                              add rax, 8	       429	worktree.c	FUNCTION_38
0x400197f	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       429	worktree.c	FUNCTION_38
0x4001986	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       429	worktree.c	FUNCTION_38
0x4001991	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       429	worktree.c	FUNCTION_38
0x400199b	    0x48c785e8feff	              mov qword [rbp - 0x118], 1	       429	worktree.c	FUNCTION_38
0x40019a6	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       429	worktree.c	FUNCTION_38
0x40019b0	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       429	worktree.c	FUNCTION_38
0x40019bb	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_38
0x40019c2	        0x4883c00c	                            add rax, 0xc	       429	worktree.c	FUNCTION_38
0x40019c6	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       429	worktree.c	FUNCTION_38
0x40019cd	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       429	worktree.c	FUNCTION_38
0x40019d8	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       429	worktree.c	FUNCTION_38
0x40019e2	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       429	worktree.c	FUNCTION_38
0x40019ed	    0xc78530ffffff	            mov dword [rbp - 0xd0], 0xc 	       429	worktree.c	FUNCTION_38
0x40019f7	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       429	worktree.c	FUNCTION_38
0x4001a02	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	       429	worktree.c	FUNCTION_38
0x4001a09	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       429	worktree.c	FUNCTION_38
0x4001a10	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       429	worktree.c	FUNCTION_38
0x4001a1b	    0xc78558ffffff	               mov dword [rbp - 0xa8], 3	       429	worktree.c	FUNCTION_38
0x4001a25	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       429	worktree.c	FUNCTION_38
0x4001a30	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       429	worktree.c	FUNCTION_38
0x4001a3a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       429	worktree.c	FUNCTION_38
0x4001a45	    0x48c745800000	               mov qword [rbp - 0x80], 0	       429	worktree.c	FUNCTION_38
0x4001a4d	    0x48c745900000	               mov qword [rbp - 0x70], 0	       429	worktree.c	FUNCTION_38
0x4001a55	    0xc74598020000	               mov dword [rbp - 0x68], 2	       429	worktree.c	FUNCTION_38
0x4001a5c	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       429	worktree.c	FUNCTION_38
0x4001a64	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       448	worktree.c	FUNCTION_38	CALL_10
0x4001a6b	      0xba10000000	                           mov edx, 0x10	       448	worktree.c	FUNCTION_38	CALL_10
0x4001a70	      0xbe00000000	                              mov esi, 0	       448	worktree.c	FUNCTION_38	CALL_10
0x4001a75	          0x4889c7	                            mov rdi, rax	       448	worktree.c	FUNCTION_38	CALL_10
0x4001a78	      0xe800000000	                          call 0x4001a7d	       448	worktree.c	FUNCTION_38	CALL_10
0x4001a7d	    0xc78528fdffff	              mov dword [rbp - 0x2d8], 1	       449	worktree.c	FUNCTION_38
0x4001a87	    0x488d8db0fdff	                  lea rcx, [rbp - 0x250]	       450	worktree.c	FUNCTION_38	CALL_11
0x4001a8e	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       450	worktree.c	FUNCTION_38	CALL_11
0x4001a95	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       450	worktree.c	FUNCTION_38	CALL_11
0x4001a9c	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	       450	worktree.c	FUNCTION_38	CALL_11
0x4001aa2	    0x41b900000000	                              mov r9d, 0	       450	worktree.c	FUNCTION_38	CALL_11
0x4001aa8	    0x41b800000000	                              mov r8d, 0	       450	worktree.c	FUNCTION_38	CALL_11
0x4001aae	            0x89c7	                            mov edi, eax	       450	worktree.c	FUNCTION_38	CALL_11
0x4001ab0	      0xe800000000	                          call 0x4001ab5	       450	worktree.c	FUNCTION_38	CALL_11
0x4001ab5	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	       450	worktree.c	FUNCTION_38	CALL_11
0x4001abb	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       451	worktree.c	FUNCTION_38	IF_1
0x4001ac1	            0x85c0	                           test eax, eax	       451	worktree.c	FUNCTION_38	IF_1
0x4001ac3	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_38	IF_1
0x4001ac6	           0xfb6d0	                           movzx edx, al	       451	worktree.c	FUNCTION_38	IF_1
0x4001ac9	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       451	worktree.c	FUNCTION_38	IF_1
0x4001ad0	          0x4885c0	                           test rax, rax	       451	worktree.c	FUNCTION_38	IF_1
0x4001ad3	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_38	IF_1
0x4001ad6	           0xfb6c0	                           movzx eax, al	       451	worktree.c	FUNCTION_38	IF_1
0x4001ad9	             0x1c2	                            add edx, eax	       451	worktree.c	FUNCTION_38	IF_1
0x4001adb	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       451	worktree.c	FUNCTION_38	IF_1
0x4001ae2	          0x4885c0	                           test rax, rax	       451	worktree.c	FUNCTION_38	IF_1
0x4001ae5	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_38	IF_1
0x4001ae8	           0xfb6c0	                           movzx eax, al	       451	worktree.c	FUNCTION_38	IF_1
0x4001aeb	             0x1d0	                            add eax, edx	       451	worktree.c	FUNCTION_38	IF_1
0x4001aed	          0x83f801	                              cmp eax, 1	       451	worktree.c	FUNCTION_38	IF_1
0x4001af0	            0x7e17	                           jle 0x4001b09	       451	worktree.c	FUNCTION_38	IF_1
0x4001af2	      0xbf00000000	                              mov edi, 0	       452	worktree.c	FUNCTION_38	CALL_13
0x4001af7	      0xe883e6ffff	                               call sym.	       452	worktree.c	FUNCTION_38	CALL_13
0x4001afc	          0x4889c7	                            mov rdi, rax	       452	worktree.c	FUNCTION_38	CALL_13
0x4001aff	      0xb800000000	                              mov eax, 0	       452	worktree.c	FUNCTION_38	CALL_13
0x4001b04	      0xe800000000	                          call 0x4001b09	       452	worktree.c	FUNCTION_38	CALL_13
0x4001b09	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	       453	worktree.c	FUNCTION_38	IF_2
0x4001b10	            0x7e09	                           jle 0x4001b1b	       453	worktree.c	FUNCTION_38	IF_2
0x4001b12	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 2	       453	worktree.c	FUNCTION_38	IF_2
0x4001b19	            0x7e14	                           jle 0x4001b2f	       453	worktree.c	FUNCTION_38	IF_2
0x4001b1b	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       454	worktree.c	FUNCTION_38	CALL_14
0x4001b22	          0x4889c6	                            mov rsi, rax	       454	worktree.c	FUNCTION_38	CALL_14
0x4001b25	      0xbf00000000	                              mov edi, 0	       454	worktree.c	FUNCTION_38	CALL_14
0x4001b2a	      0xe800000000	                          call 0x4001b2f	       454	worktree.c	FUNCTION_38	CALL_14
0x4001b2f	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b36	          0x488b10	                    mov rdx, qword [rax]	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b39	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b40	          0x4889d6	                            mov rsi, rdx	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b43	          0x4889c7	                            mov rdi, rax	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b46	      0xe800000000	                          call 0x4001b4b	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b4b	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       456	worktree.c	FUNCTION_38	CALL_15
0x4001b52	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 1	       457	worktree.c	FUNCTION_38
0x4001b59	            0x7e0d	                           jle 0x4001b68	       457	worktree.c	FUNCTION_38
0x4001b5b	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       457	worktree.c	FUNCTION_38
0x4001b62	        0x488b4008	                mov rax, qword [rax + 8]	       457	worktree.c	FUNCTION_38
0x4001b66	            0xeb05	                           jmp 0x4001b6d	       457	worktree.c	FUNCTION_38
0x4001b68	      0xb800000000	                              mov eax, 0	       457	worktree.c	FUNCTION_38
0x4001b6d	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       457	worktree.c	FUNCTION_38
0x4001b74	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b7b	      0xbe00000000	                              mov esi, 0	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b80	          0x4889c7	                            mov rdi, rax	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b83	      0xe800000000	                          call 0x4001b88	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b88	            0x85c0	                           test eax, eax	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b8a	            0x750b	                           jne 0x4001b97	       459	worktree.c	FUNCTION_38	IF_3	CALL_16
0x4001b8c	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       460	worktree.c	FUNCTION_38	IF_3
0x4001b97	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       462	worktree.c	FUNCTION_38	IF_4
0x4001b9e	          0x4885c0	                           test rax, rax	       462	worktree.c	FUNCTION_38	IF_4
0x4001ba1	     0xf848c000000	                            je 0x4001c33	       462	worktree.c	FUNCTION_38	IF_4
0x4001ba7	    0x48c78530fdff	              mov qword [rbp - 0x2d0], 0	       463	worktree.c	FUNCTION_38	IF_4
0x4001bb2	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       463	worktree.c	FUNCTION_38	IF_4
0x4001bbd	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       463	worktree.c	FUNCTION_38	IF_4
0x4001bc8	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       465	worktree.c	FUNCTION_38	IF_4
0x4001bcf	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       465	worktree.c	FUNCTION_38	IF_4
0x4001bd6	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       467	worktree.c	FUNCTION_38	IF_4	IF_5
0x4001bdc	            0x85c0	                           test eax, eax	       467	worktree.c	FUNCTION_38	IF_4	IF_5
0x4001bde	            0x7544	                           jne 0x4001c24	       467	worktree.c	FUNCTION_38	IF_4	IF_5
0x4001be0	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001be7	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001bee	          0x4889d6	                            mov rsi, rdx	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001bf1	          0x4889c7	                            mov rdi, rax	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001bf4	      0xe800000000	                          call 0x4001bf9	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001bf9	            0x85c0	                           test eax, eax	       467	worktree.c	FUNCTION_38	IF_4	IF_5
0x4001bfb	            0x7527	                           jne 0x4001c24	       467	worktree.c	FUNCTION_38	IF_4	IF_5
0x4001bfd	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       469	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_18
0x4001c04	          0x4889c7	                            mov rdi, rax	       469	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_18
0x4001c07	      0xe800000000	                          call 0x4001c0c	       469	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_18
0x4001c0c	            0x85c0	                           test eax, eax	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001c0e	            0x7414	                            je 0x4001c24	       468	worktree.c	FUNCTION_38	IF_4	IF_5	CALL_17
0x4001c10	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       470	worktree.c	FUNCTION_38	IF_4	CALL_19
0x4001c17	      0xbe00000000	                              mov esi, 0	       470	worktree.c	FUNCTION_38	IF_4	CALL_19
0x4001c1c	          0x4889c7	                            mov rdi, rax	       470	worktree.c	FUNCTION_38	IF_4	CALL_19
0x4001c1f	      0xe800000000	                          call 0x4001c24	       470	worktree.c	FUNCTION_38	IF_4	CALL_19
0x4001c24	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       471	worktree.c	FUNCTION_38	IF_4	CALL_20
0x4001c2b	          0x4889c7	                            mov rdi, rax	       471	worktree.c	FUNCTION_38	IF_4	CALL_20
0x4001c2e	      0xe800000000	                          call 0x4001c33	       471	worktree.c	FUNCTION_38	IF_4	CALL_20
0x4001c33	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 1	       474	worktree.c	FUNCTION_38	IF_6
0x4001c3a	            0x7f4e	                            jg 0x4001c8a	       474	worktree.c	FUNCTION_38	IF_6
0x4001c3c	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       474	worktree.c	FUNCTION_38	IF_6
0x4001c43	          0x4885c0	                           test rax, rax	       474	worktree.c	FUNCTION_38	IF_6
0x4001c46	            0x7542	                           jne 0x4001c8a	       474	worktree.c	FUNCTION_38	IF_6
0x4001c48	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       474	worktree.c	FUNCTION_38	IF_6
0x4001c4e	            0x85c0	                           test eax, eax	       474	worktree.c	FUNCTION_38	IF_6
0x4001c50	            0x7538	                           jne 0x4001c8a	       474	worktree.c	FUNCTION_38	IF_6
0x4001c52	    0x488d95e8fcff	                  lea rdx, [rbp - 0x318]	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c59	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c60	          0x4889d6	                            mov rsi, rdx	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c63	          0x4889c7	                            mov rdi, rax	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c66	      0xe8a5faffff	                    call sym.dwim_branch	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c6b	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	       475	worktree.c	FUNCTION_38	IF_6	CALL_21
0x4001c72	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	       476	worktree.c	FUNCTION_38	IF_6	IF_7
0x4001c7a	            0x740e	                            je 0x4001c8a	       476	worktree.c	FUNCTION_38	IF_6	IF_7
0x4001c7c	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       477	worktree.c	FUNCTION_38	IF_6	IF_7
0x4001c83	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       477	worktree.c	FUNCTION_38	IF_6	IF_7
0x4001c8a	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 2	       480	worktree.c	FUNCTION_38	IF_8
0x4001c91	            0x757c	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_38	IF_8
0x4001c93	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       480	worktree.c	FUNCTION_38	IF_8
0x4001c9a	          0x4885c0	                           test rax, rax	       480	worktree.c	FUNCTION_38	IF_8
0x4001c9d	            0x7570	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_38	IF_8
0x4001c9f	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       480	worktree.c	FUNCTION_38	IF_8
0x4001ca5	            0x85c0	                           test eax, eax	       480	worktree.c	FUNCTION_38	IF_8
0x4001ca7	            0x7566	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_38	IF_8
0x4001ca9	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       485	worktree.c	FUNCTION_38	IF_8	CALL_22
0x4001cb0	          0x4889c7	                            mov rdi, rax	       485	worktree.c	FUNCTION_38	IF_8	CALL_22
0x4001cb3	      0xe800000000	                          call 0x4001cb8	       485	worktree.c	FUNCTION_38	IF_8	CALL_22
0x4001cb8	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       485	worktree.c	FUNCTION_38	IF_8	CALL_22
0x4001cbf	    0x4883bd10fdff	              cmp qword [rbp - 0x2f0], 0	       486	worktree.c	FUNCTION_38	IF_8	IF_9
0x4001cc7	            0x7546	                           jne 0x4001d0f	       486	worktree.c	FUNCTION_38	IF_8	IF_9
0x4001cc9	    0x488d9590fdff	                  lea rdx, [rbp - 0x270]	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001cd0	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001cd7	          0x4889d6	                            mov rsi, rdx	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001cda	          0x4889c7	                            mov rdi, rax	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001cdd	      0xe800000000	                          call 0x4001ce2	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001ce2	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       487	worktree.c	FUNCTION_38	IF_8	IF_9	CALL_23
0x4001ce9	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	       488	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001cf1	            0x741c	                            je 0x4001d0f	       488	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001cf3	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       489	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001cfa	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       489	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001d01	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       490	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001d08	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       490	worktree.c	FUNCTION_38	IF_8	IF_9	IF_10
0x4001d0f	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d16	          0x4885c0	                           test rax, rax	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d19	           0xf95c0	                                setne al	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d1c	           0xfb6c8	                           movzx ecx, al	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d1f	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d26	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d2c	    0x488bb5f8fcff	            mov rsi, qword [rbp - 0x308]	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d33	            0x89c7	                            mov edi, eax	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d35	      0xe8fbf7ffff	  call sym.print_preparing_worktree_line	       495	worktree.c	FUNCTION_38	CALL_24
0x4001d3a	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       497	worktree.c	FUNCTION_38	IF_11
0x4001d41	          0x4885c0	                           test rax, rax	       497	worktree.c	FUNCTION_38	IF_11
0x4001d44	     0xf8406010000	                            je 0x4001e50	       497	worktree.c	FUNCTION_38	IF_11
0x4001d4a	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       498	worktree.c	FUNCTION_38	IF_11
0x4001d51	      0xb800000000	                              mov eax, 0	       498	worktree.c	FUNCTION_38	IF_11
0x4001d56	      0xb90c000000	                            mov ecx, 0xc	       498	worktree.c	FUNCTION_38	IF_11
0x4001d5b	          0x4889d7	                            mov rdi, rdx	       498	worktree.c	FUNCTION_38	IF_11
0x4001d5e	          0xf348ab	              rep stosq qword [rdi], rax	       498	worktree.c	FUNCTION_38	IF_11
0x4001d61	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       498	worktree.c	FUNCTION_38	IF_11
0x4001d6c	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	       498	worktree.c	FUNCTION_38	IF_11
0x4001d77	     0xfb68578fdff	           movzx eax, byte [rbp - 0x288]	       499	worktree.c	FUNCTION_38	IF_11
0x4001d7e	          0x83c808	                               or eax, 8	       499	worktree.c	FUNCTION_38	IF_11
0x4001d81	    0x888578fdffff	              mov byte [rbp - 0x288], al	       499	worktree.c	FUNCTION_38	IF_11
0x4001d87	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       500	worktree.c	FUNCTION_38	IF_11	CALL_25
0x4001d8e	        0x4883c008	                              add rax, 8	       500	worktree.c	FUNCTION_38	IF_11	CALL_25
0x4001d92	      0xbe00000000	                              mov esi, 0	       500	worktree.c	FUNCTION_38	IF_11	CALL_25
0x4001d97	          0x4889c7	                            mov rdi, rax	       500	worktree.c	FUNCTION_38	IF_11	CALL_25
0x4001d9a	      0xe800000000	                          call 0x4001d9f	       500	worktree.c	FUNCTION_38	IF_11	CALL_25
0x4001d9f	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       501	worktree.c	FUNCTION_38	IF_11	IF_12
0x4001da6	          0x4885c0	                           test rax, rax	       501	worktree.c	FUNCTION_38	IF_11	IF_12
0x4001da9	            0x7418	                            je 0x4001dc3	       501	worktree.c	FUNCTION_38	IF_11	IF_12
0x4001dab	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       502	worktree.c	FUNCTION_38	IF_11	CALL_26
0x4001db2	        0x4883c008	                              add rax, 8	       502	worktree.c	FUNCTION_38	IF_11	CALL_26
0x4001db6	      0xbe00000000	                              mov esi, 0	       502	worktree.c	FUNCTION_38	IF_11	CALL_26
0x4001dbb	          0x4889c7	                            mov rdi, rax	       502	worktree.c	FUNCTION_38	IF_11	CALL_26
0x4001dbe	      0xe800000000	                          call 0x4001dc3	       502	worktree.c	FUNCTION_38	IF_11	CALL_26
0x4001dc3	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001dca	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001dd1	        0x4883c208	                              add rdx, 8	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001dd5	          0x4889c6	                            mov rsi, rax	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001dd8	          0x4889d7	                            mov rdi, rdx	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001ddb	      0xe800000000	                          call 0x4001de0	       503	worktree.c	FUNCTION_38	IF_11	CALL_27
0x4001de0	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001de7	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001dee	        0x4883c208	                              add rdx, 8	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001df2	          0x4889c6	                            mov rsi, rax	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001df5	          0x4889d7	                            mov rdi, rdx	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001df8	      0xe800000000	                          call 0x4001dfd	       504	worktree.c	FUNCTION_38	IF_11	CALL_28
0x4001dfd	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       505	worktree.c	FUNCTION_38	IF_11	IF_13
0x4001e04	          0x4885c0	                           test rax, rax	       505	worktree.c	FUNCTION_38	IF_11	IF_13
0x4001e07	            0x741d	                            je 0x4001e26	       505	worktree.c	FUNCTION_38	IF_11	IF_13
0x4001e09	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e10	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e17	        0x4883c208	                              add rdx, 8	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e1b	          0x4889c6	                            mov rsi, rax	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e1e	          0x4889d7	                            mov rdi, rdx	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e21	      0xe800000000	                          call 0x4001e26	       506	worktree.c	FUNCTION_38	IF_11	CALL_29
0x4001e26	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       507	worktree.c	FUNCTION_38	IF_11	IF_14	CALL_30
0x4001e2d	          0x4889c7	                            mov rdi, rax	       507	worktree.c	FUNCTION_38	IF_11	IF_14	CALL_30
0x4001e30	      0xe800000000	                          call 0x4001e35	       507	worktree.c	FUNCTION_38	IF_11	IF_14	CALL_30
0x4001e35	            0x85c0	                           test eax, eax	       507	worktree.c	FUNCTION_38	IF_11	IF_14	CALL_30
0x4001e37	            0x7407	                            je 0x4001e40	       507	worktree.c	FUNCTION_38	IF_11	IF_14	CALL_30
0x4001e39	      0xb8ffffffff	                     mov eax, 0xffffffff	       508	worktree.c	FUNCTION_38	IF_11	IF_14
0x4001e3e	            0xeb53	                           jmp 0x4001e93	       508	worktree.c	FUNCTION_38	IF_11	IF_14
0x4001e40	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       509	worktree.c	FUNCTION_38	IF_11
0x4001e47	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       509	worktree.c	FUNCTION_38	IF_11
0x4001e4e	            0xeb23	                           jmp 0x4001e73	       509	worktree.c	FUNCTION_38	IF_11
0x4001e50	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       510	worktree.c	FUNCTION_38	ELSE_1	IF_15
0x4001e57	          0x4885c0	                           test rax, rax	       510	worktree.c	FUNCTION_38	ELSE_1	IF_15
0x4001e5a	            0x7417	                            je 0x4001e73	       510	worktree.c	FUNCTION_38	ELSE_1	IF_15
0x4001e5c	      0xbf00000000	                              mov edi, 0	       511	worktree.c	FUNCTION_38	ELSE_1	IF_15	CALL_32
0x4001e61	      0xe819e3ffff	                               call sym.	       511	worktree.c	FUNCTION_38	ELSE_1	IF_15	CALL_32
0x4001e66	          0x4889c7	                            mov rdi, rax	       511	worktree.c	FUNCTION_38	ELSE_1	IF_15	CALL_32
0x4001e69	      0xb800000000	                              mov eax, 0	       511	worktree.c	FUNCTION_38	ELSE_1	IF_15	CALL_32
0x4001e6e	      0xe800000000	                          call 0x4001e73	       511	worktree.c	FUNCTION_38	ELSE_1	IF_15	CALL_32
0x4001e73	    0x488d9520fdff	                  lea rdx, [rbp - 0x2e0]	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e7a	    0x488b8df8fcff	            mov rcx, qword [rbp - 0x308]	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e81	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e88	          0x4889ce	                            mov rsi, rcx	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e8b	          0x4889c7	                            mov rdi, rax	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e8e	      0xe81fedffff	                   call sym.add_worktree	       516	worktree.c	FUNCTION_38	CALL_33
0x4001e93	        0x488b4df8	                mov rcx, qword [rbp - 8]	       517	worktree.c	FUNCTION_38
0x4001e97	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       517	worktree.c	FUNCTION_38
0x4001ea0	            0x7405	                            je 0x4001ea7	       517	worktree.c	FUNCTION_38
0x4001ea2	      0xe800000000	                          call 0x4001ea7	       517	worktree.c	FUNCTION_38
0x4001ea7	              0xc9	                                   leave	       517	worktree.c	FUNCTION_38
0x4001ea8	              0xc3	                                     ret	       517	worktree.c	FUNCTION_38
dwim_branch	CALL,6:IF,2:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	63
0x4001710	              0x55	                                push rbp	       398	worktree.c	FUNCTION_37
0x4001711	          0x4889e5	                            mov rbp, rsp	       398	worktree.c	FUNCTION_37
0x4001714	        0x4883ec70	                           sub rsp, 0x70	       398	worktree.c	FUNCTION_37
0x4001718	        0x48897d98	             mov qword [rbp - 0x68], rdi	       398	worktree.c	FUNCTION_37
0x400171c	        0x48897590	             mov qword [rbp - 0x70], rsi	       398	worktree.c	FUNCTION_37
0x4001720	    0x64488b042528	                mov rax, qword fs:[0x28]	       398	worktree.c	FUNCTION_37
0x4001729	        0x488945f8	                mov qword [rbp - 8], rax	       398	worktree.c	FUNCTION_37
0x400172d	            0x31c0	                            xor eax, eax	       398	worktree.c	FUNCTION_37
0x400172f	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       400	worktree.c	FUNCTION_37	CALL_1
0x4001733	        0x488b4598	             mov rax, qword [rbp - 0x68]	       400	worktree.c	FUNCTION_37	CALL_1
0x4001737	          0x4889d6	                            mov rsi, rdx	       400	worktree.c	FUNCTION_37	CALL_1
0x400173a	          0x4889c7	                            mov rdi, rax	       400	worktree.c	FUNCTION_37	CALL_1
0x400173d	      0xe8d4f3ffff	              call sym.worktree_basename	       400	worktree.c	FUNCTION_37	CALL_1
0x4001742	        0x488945a8	             mov qword [rbp - 0x58], rax	       400	worktree.c	FUNCTION_37	CALL_1
0x4001746	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       401	worktree.c	FUNCTION_37	CALL_2
0x4001749	          0x4863d0	                         movsxd rdx, eax	       401	worktree.c	FUNCTION_37	CALL_2
0x400174c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       401	worktree.c	FUNCTION_37	CALL_2
0x4001750	          0x4889d6	                            mov rsi, rdx	       401	worktree.c	FUNCTION_37	CALL_2
0x4001753	          0x4889c7	                            mov rdi, rax	       401	worktree.c	FUNCTION_37	CALL_2
0x4001756	      0xe800000000	                          call 0x400175b	       401	worktree.c	FUNCTION_37	CALL_2
0x400175b	        0x488945b0	             mov qword [rbp - 0x50], rax	       401	worktree.c	FUNCTION_37	CALL_2
0x400175f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       402	worktree.c	FUNCTION_37
0x4001767	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       402	worktree.c	FUNCTION_37
0x400176f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       402	worktree.c	FUNCTION_37
0x4001777	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400177b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400177f	          0x4889d6	                            mov rsi, rdx	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x4001782	          0x4889c7	                            mov rdi, rax	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x4001785	      0xe800000000	                          call 0x400178a	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400178a	            0x85c0	                           test eax, eax	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400178c	            0x7522	                           jne 0x40017b0	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400178e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       406	worktree.c	FUNCTION_37	IF_1	CALL_4
0x4001792	          0x4889c7	                            mov rdi, rax	       406	worktree.c	FUNCTION_37	IF_1	CALL_4
0x4001795	      0xe800000000	                          call 0x400179a	       406	worktree.c	FUNCTION_37	IF_1	CALL_4
0x400179a	            0x85c0	                           test eax, eax	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400179c	            0x7412	                            je 0x40017b0	       405	worktree.c	FUNCTION_37	IF_1	CALL_3
0x400179e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       407	worktree.c	FUNCTION_37	IF_1	CALL_5
0x40017a2	          0x4889c7	                            mov rdi, rax	       407	worktree.c	FUNCTION_37	IF_1	CALL_5
0x40017a5	      0xe800000000	                          call 0x40017aa	       407	worktree.c	FUNCTION_37	IF_1	CALL_5
0x40017aa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       408	worktree.c	FUNCTION_37	IF_1
0x40017ae	            0xeb3a	                           jmp 0x40017ea	       408	worktree.c	FUNCTION_37	IF_1
0x40017b0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       411	worktree.c	FUNCTION_37
0x40017b4	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       411	worktree.c	FUNCTION_37
0x40017b8	          0x488910	                    mov qword [rax], rdx	       411	worktree.c	FUNCTION_37
0x40017bb	    0x8b0500000000	            mov eax, dword [0x040017c1] 	       412	worktree.c	FUNCTION_37	IF_2
0x40017c1	            0x85c0	                           test eax, eax	       412	worktree.c	FUNCTION_37	IF_2
0x40017c3	            0x7420	                            je 0x40017e5	       412	worktree.c	FUNCTION_37	IF_2
0x40017c5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       415	worktree.c	FUNCTION_37	IF_2	CALL_6
0x40017c9	          0x488b00	                    mov rax, qword [rax]	       415	worktree.c	FUNCTION_37	IF_2	CALL_6
0x40017cc	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       414	worktree.c	FUNCTION_37	IF_2
0x40017d0	          0x4889d6	                            mov rsi, rdx	       414	worktree.c	FUNCTION_37	IF_2
0x40017d3	          0x4889c7	                            mov rdi, rax	       414	worktree.c	FUNCTION_37	IF_2
0x40017d6	      0xe800000000	                          call 0x40017db	       414	worktree.c	FUNCTION_37	IF_2
0x40017db	        0x488945b8	             mov qword [rbp - 0x48], rax	       414	worktree.c	FUNCTION_37	IF_2
0x40017df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       416	worktree.c	FUNCTION_37	IF_2
0x40017e3	            0xeb05	                           jmp 0x40017ea	       416	worktree.c	FUNCTION_37	IF_2
0x40017e5	      0xb800000000	                              mov eax, 0	       418	worktree.c	FUNCTION_37
0x40017ea	        0x488b4df8	                mov rcx, qword [rbp - 8]	       419	worktree.c	FUNCTION_37
0x40017ee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       419	worktree.c	FUNCTION_37
0x40017f7	            0x7405	                            je 0x40017fe	       419	worktree.c	FUNCTION_37
0x40017f9	      0xe800000000	                          call 0x40017fe	       419	worktree.c	FUNCTION_37
0x40017fe	              0xc9	                                   leave	       419	worktree.c	FUNCTION_37
0x40017ff	              0xc3	                                     ret	       419	worktree.c	FUNCTION_37
delete_git_dir	CALL,5:IF,1:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	50
0x4002f55	              0x55	                                push rbp	       816	worktree.c	FUNCTION_49
0x4002f56	          0x4889e5	                            mov rbp, rsp	       816	worktree.c	FUNCTION_49
0x4002f59	              0x53	                                push rbx	       816	worktree.c	FUNCTION_49
0x4002f5a	        0x4883ec48	                           sub rsp, 0x48	       816	worktree.c	FUNCTION_49
0x4002f5e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       816	worktree.c	FUNCTION_49
0x4002f62	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	worktree.c	FUNCTION_49
0x4002f6b	        0x488945e8	             mov qword [rbp - 0x18], rax	       816	worktree.c	FUNCTION_49
0x4002f6f	            0x31c0	                            xor eax, eax	       816	worktree.c	FUNCTION_49
0x4002f71	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       817	worktree.c	FUNCTION_49
0x4002f79	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       817	worktree.c	FUNCTION_49
0x4002f81	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       817	worktree.c	FUNCTION_49
0x4002f89	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       818	worktree.c	FUNCTION_49
0x4002f90	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       820	worktree.c	FUNCTION_49	CALL_2
0x4002f94	        0x488b4008	                mov rax, qword [rax + 8]	       820	worktree.c	FUNCTION_49	CALL_2
0x4002f98	          0x4889c6	                            mov rsi, rax	       820	worktree.c	FUNCTION_49	CALL_2
0x4002f9b	      0xbf00000000	                              mov edi, 0	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fa0	      0xb800000000	                              mov eax, 0	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fa5	      0xe800000000	                          call 0x4002faa	       820	worktree.c	FUNCTION_49	CALL_2
0x4002faa	          0x4889c2	                            mov rdx, rax	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fad	        0x488d45d0	                   lea rax, [rbp - 0x30]	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fb1	          0x4889d6	                            mov rsi, rdx	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fb4	          0x4889c7	                            mov rdi, rax	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fb7	      0xe88ed1ffff	                  call sym.strbuf_addstr	       820	worktree.c	FUNCTION_49	CALL_2
0x4002fbc	        0x488d45d0	                   lea rax, [rbp - 0x30]	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fc0	      0xbe00000000	                              mov esi, 0	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fc5	          0x4889c7	                            mov rdi, rax	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fc8	      0xe800000000	                          call 0x4002fcd	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fcd	            0x85c0	                           test eax, eax	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fcf	            0x742a	                            je 0x4002ffb	       821	worktree.c	FUNCTION_49	IF_1	CALL_3
0x4002fd1	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fd5	      0xbf00000000	                              mov edi, 0	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fda	      0xe8a0d1ffff	                               call sym.	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fdf	          0x4889de	                            mov rsi, rbx	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fe2	          0x4889c7	                            mov rdi, rax	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fe5	      0xb800000000	                              mov eax, 0	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fea	      0xe800000000	                          call 0x4002fef	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002fef	      0xe87ed0ffff	                    call sym.const_error	       822	worktree.c	FUNCTION_49	IF_1	CALL_4
0x4002ff4	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       823	worktree.c	FUNCTION_49	IF_1
0x4002ffb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       825	worktree.c	FUNCTION_49	CALL_5
0x4002fff	          0x4889c7	                            mov rdi, rax	       825	worktree.c	FUNCTION_49	CALL_5
0x4003002	      0xe800000000	                          call 0x4003007	       825	worktree.c	FUNCTION_49	CALL_5
0x4003007	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       826	worktree.c	FUNCTION_49
0x400300a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       827	worktree.c	FUNCTION_49
0x400300e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       827	worktree.c	FUNCTION_49
0x4003017	            0x7405	                            je 0x400301e	       827	worktree.c	FUNCTION_49
0x4003019	      0xe800000000	                          call 0x400301e	       827	worktree.c	FUNCTION_49
0x400301e	        0x4883c448	                           add rsp, 0x48	       827	worktree.c	FUNCTION_49
0x4003022	              0x5b	                                 pop rbx	       827	worktree.c	FUNCTION_49
0x4003023	              0x5d	                                 pop rbp	       827	worktree.c	FUNCTION_49
0x4003024	              0xc3	                                     ret	       827	worktree.c	FUNCTION_49
strbuf_addstr	CALL,2:IF,0:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	17
0x400014a	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_56
0x400014b	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_56
0x400014e	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_56
0x4000152	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_56
0x4000156	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_56
0x400015a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_56	CALL_2
0x400015e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000161	      0xe800000000	                          call 0x4000166	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000166	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000169	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_56	CALL_2
0x400016d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000171	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000174	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_56	CALL_2
0x4000177	      0xe800000000	                          call 0x400017c	       279	strbuf.h	FUNCTION_56	CALL_2
0x400017c	              0x90	                                     nop	       280	strbuf.h	FUNCTION_56
0x400017d	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_56
0x400017e	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_56
lock_worktree	CALL,19:IF,5:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	121
0x400239f	              0x55	                                push rbp	       607	worktree.c	FUNCTION_43
0x40023a0	          0x4889e5	                            mov rbp, rsp	       607	worktree.c	FUNCTION_43
0x40023a3	              0x53	                                push rbx	       607	worktree.c	FUNCTION_43
0x40023a4	    0x4881ecd80000	                           sub rsp, 0xd8	       607	worktree.c	FUNCTION_43
0x40023ab	    0x89bd3cffffff	             mov dword [rbp - 0xc4], edi	       607	worktree.c	FUNCTION_43
0x40023b1	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       607	worktree.c	FUNCTION_43
0x40023b8	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	       607	worktree.c	FUNCTION_43
0x40023bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       607	worktree.c	FUNCTION_43
0x40023c8	        0x488945e8	             mov qword [rbp - 0x18], rax	       607	worktree.c	FUNCTION_43
0x40023cc	            0x31c0	                            xor eax, eax	       607	worktree.c	FUNCTION_43
0x40023ce	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       608	worktree.c	FUNCTION_43
0x40023d9	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       609	worktree.c	FUNCTION_43
0x40023e0	      0xb800000000	                              mov eax, 0	       609	worktree.c	FUNCTION_43
0x40023e5	      0xb910000000	                           mov ecx, 0x10	       609	worktree.c	FUNCTION_43
0x40023ea	          0x4889d7	                            mov rdi, rdx	       609	worktree.c	FUNCTION_43
0x40023ed	          0xf348ab	              rep stosq qword [rdi], rax	       609	worktree.c	FUNCTION_43
0x40023f0	    0xc78560ffffff	               mov dword [rbp - 0xa0], 9	       609	worktree.c	FUNCTION_43
0x40023fa	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       609	worktree.c	FUNCTION_43
0x4002405	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       609	worktree.c	FUNCTION_43
0x400240c	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       609	worktree.c	FUNCTION_43
0x4002413	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       609	worktree.c	FUNCTION_43
0x400241e	    0x48c745800000	               mov qword [rbp - 0x80], 0	       609	worktree.c	FUNCTION_43
0x4002426	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       616	worktree.c	FUNCTION_43	CALL_3
0x400242d	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       616	worktree.c	FUNCTION_43	CALL_3
0x4002434	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	       616	worktree.c	FUNCTION_43	CALL_3
0x400243b	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       616	worktree.c	FUNCTION_43	CALL_3
0x4002441	    0x41b900000000	                              mov r9d, 0	       616	worktree.c	FUNCTION_43	CALL_3
0x4002447	    0x41b800000000	                              mov r8d, 0	       616	worktree.c	FUNCTION_43	CALL_3
0x400244d	            0x89c7	                            mov edi, eax	       616	worktree.c	FUNCTION_43	CALL_3
0x400244f	      0xe800000000	                          call 0x4002454	       616	worktree.c	FUNCTION_43	CALL_3
0x4002454	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       616	worktree.c	FUNCTION_43	CALL_3
0x400245a	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 1	       617	worktree.c	FUNCTION_43	IF_1
0x4002461	            0x7414	                            je 0x4002477	       617	worktree.c	FUNCTION_43	IF_1
0x4002463	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       618	worktree.c	FUNCTION_43	CALL_4
0x400246a	          0x4889c6	                            mov rsi, rax	       618	worktree.c	FUNCTION_43	CALL_4
0x400246d	      0xbf00000000	                              mov edi, 0	       618	worktree.c	FUNCTION_43	CALL_4
0x4002472	      0xe800000000	                          call 0x4002477	       618	worktree.c	FUNCTION_43	CALL_4
0x4002477	      0xbf00000000	                              mov edi, 0	       620	worktree.c	FUNCTION_43	CALL_5
0x400247c	      0xe800000000	                          call 0x4002481	       620	worktree.c	FUNCTION_43	CALL_5
0x4002481	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       620	worktree.c	FUNCTION_43	CALL_5
0x4002488	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       621	worktree.c	FUNCTION_43	CALL_6
0x400248f	          0x488b10	                    mov rdx, qword [rax]	       621	worktree.c	FUNCTION_43	CALL_6
0x4002492	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       621	worktree.c	FUNCTION_43	CALL_6
0x4002499	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       621	worktree.c	FUNCTION_43	CALL_6
0x40024a0	          0x4889ce	                            mov rsi, rcx	       621	worktree.c	FUNCTION_43	CALL_6
0x40024a3	          0x4889c7	                            mov rdi, rax	       621	worktree.c	FUNCTION_43	CALL_6
0x40024a6	      0xe800000000	                          call 0x40024ab	       621	worktree.c	FUNCTION_43	CALL_6
0x40024ab	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       621	worktree.c	FUNCTION_43	CALL_6
0x40024b2	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       622	worktree.c	FUNCTION_43	IF_2
0x40024ba	            0x7524	                           jne 0x40024e0	       622	worktree.c	FUNCTION_43	IF_2
0x40024bc	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       623	worktree.c	FUNCTION_43	CALL_8
0x40024c3	          0x488b18	                    mov rbx, qword [rax]	       623	worktree.c	FUNCTION_43	CALL_8
0x40024c6	      0xbf00000000	                              mov edi, 0	       623	worktree.c	FUNCTION_43	CALL_8
0x40024cb	      0xe8afdcffff	                               call sym.	       623	worktree.c	FUNCTION_43	CALL_8
0x40024d0	          0x4889de	                            mov rsi, rbx	       623	worktree.c	FUNCTION_43	CALL_8
0x40024d3	          0x4889c7	                            mov rdi, rax	       623	worktree.c	FUNCTION_43	CALL_8
0x40024d6	      0xb800000000	                              mov eax, 0	       623	worktree.c	FUNCTION_43	CALL_8
0x40024db	      0xe800000000	                          call 0x40024e0	       623	worktree.c	FUNCTION_43	CALL_8
0x40024e0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       624	worktree.c	FUNCTION_43	IF_3	CALL_9
0x40024e7	          0x4889c7	                            mov rdi, rax	       624	worktree.c	FUNCTION_43	IF_3	CALL_9
0x40024ea	      0xe800000000	                          call 0x40024ef	       624	worktree.c	FUNCTION_43	IF_3	CALL_9
0x40024ef	            0x85c0	                           test eax, eax	       624	worktree.c	FUNCTION_43	IF_3	CALL_9
0x40024f1	            0x7417	                            je 0x400250a	       624	worktree.c	FUNCTION_43	IF_3	CALL_9
0x40024f3	      0xbf00000000	                              mov edi, 0	       625	worktree.c	FUNCTION_43	CALL_11
0x40024f8	      0xe882dcffff	                               call sym.	       625	worktree.c	FUNCTION_43	CALL_11
0x40024fd	          0x4889c7	                            mov rdi, rax	       625	worktree.c	FUNCTION_43	CALL_11
0x4002500	      0xb800000000	                              mov eax, 0	       625	worktree.c	FUNCTION_43	CALL_11
0x4002505	      0xe800000000	                          call 0x400250a	       625	worktree.c	FUNCTION_43	CALL_11
0x400250a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       627	worktree.c	FUNCTION_43	CALL_12
0x4002511	          0x4889c7	                            mov rdi, rax	       627	worktree.c	FUNCTION_43	CALL_12
0x4002514	      0xe800000000	                          call 0x4002519	       627	worktree.c	FUNCTION_43	CALL_12
0x4002519	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       627	worktree.c	FUNCTION_43	CALL_12
0x4002520	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       628	worktree.c	FUNCTION_43	IF_4
0x4002528	            0x7463	                            je 0x400258d	       628	worktree.c	FUNCTION_43	IF_4
0x400252a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       629	worktree.c	FUNCTION_43	IF_4	IF_5
0x4002531	           0xfb600	                   movzx eax, byte [rax]	       629	worktree.c	FUNCTION_43	IF_4	IF_5
0x4002534	            0x84c0	                             test al, al	       629	worktree.c	FUNCTION_43	IF_4	IF_5
0x4002536	            0x7431	                            je 0x4002569	       629	worktree.c	FUNCTION_43	IF_4	IF_5
0x4002538	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x400253f	          0x488b18	                    mov rbx, qword [rax]	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002542	      0xbf00000000	                              mov edi, 0	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002547	      0xe833dcffff	                               call sym.	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x400254c	          0x4889c1	                            mov rcx, rax	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x400254f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002556	          0x4889c2	                            mov rdx, rax	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002559	          0x4889de	                            mov rsi, rbx	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x400255c	          0x4889cf	                            mov rdi, rcx	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x400255f	      0xb800000000	                              mov eax, 0	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002564	      0xe800000000	                          call 0x4002569	       630	worktree.c	FUNCTION_43	IF_4	IF_5	CALL_14
0x4002569	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002570	          0x488b18	                    mov rbx, qword [rax]	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002573	      0xbf00000000	                              mov edi, 0	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002578	      0xe802dcffff	                               call sym.	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x400257d	          0x4889de	                            mov rsi, rbx	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002580	          0x4889c7	                            mov rdi, rax	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002583	      0xb800000000	                              mov eax, 0	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x4002588	      0xe800000000	                          call 0x400258d	       632	worktree.c	FUNCTION_43	IF_4	CALL_16
0x400258d	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	       635	worktree.c	FUNCTION_43	CALL_18
0x4002594	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       635	worktree.c	FUNCTION_43	CALL_18
0x400259b	        0x488b4008	                mov rax, qword [rax + 8]	       635	worktree.c	FUNCTION_43	CALL_18
0x400259f	          0x4889c6	                            mov rsi, rax	       635	worktree.c	FUNCTION_43	CALL_18
0x40025a2	      0xbf00000000	                              mov edi, 0	       635	worktree.c	FUNCTION_43	CALL_18
0x40025a7	      0xb800000000	                              mov eax, 0	       635	worktree.c	FUNCTION_43	CALL_18
0x40025ac	      0xe800000000	                          call 0x40025b1	       635	worktree.c	FUNCTION_43	CALL_18
0x40025b1	          0x4889da	                            mov rdx, rbx	       635	worktree.c	FUNCTION_43	CALL_18
0x40025b4	      0xbe00000000	                              mov esi, 0	       635	worktree.c	FUNCTION_43	CALL_18
0x40025b9	          0x4889c7	                            mov rdi, rax	       635	worktree.c	FUNCTION_43	CALL_18
0x40025bc	      0xb800000000	                              mov eax, 0	       635	worktree.c	FUNCTION_43	CALL_18
0x40025c1	      0xe800000000	                          call 0x40025c6	       635	worktree.c	FUNCTION_43	CALL_18
0x40025c6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       637	worktree.c	FUNCTION_43	CALL_19
0x40025cd	          0x4889c7	                            mov rdi, rax	       637	worktree.c	FUNCTION_43	CALL_19
0x40025d0	      0xe800000000	                          call 0x40025d5	       637	worktree.c	FUNCTION_43	CALL_19
0x40025d5	      0xb800000000	                              mov eax, 0	       638	worktree.c	FUNCTION_43
0x40025da	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       639	worktree.c	FUNCTION_43
0x40025de	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       639	worktree.c	FUNCTION_43
0x40025e7	            0x7405	                            je 0x40025ee	       639	worktree.c	FUNCTION_43
0x40025e9	      0xe800000000	                          call 0x40025ee	       639	worktree.c	FUNCTION_43
0x40025ee	    0x4881c4d80000	                           add rsp, 0xd8	       639	worktree.c	FUNCTION_43
0x40025f5	              0x5b	                                 pop rbx	       639	worktree.c	FUNCTION_43
0x40025f6	              0x5d	                                 pop rbp	       639	worktree.c	FUNCTION_43
0x40025f7	              0xc3	                                     ret	       639	worktree.c	FUNCTION_43
check_clean_worktree	CALL,15:IF,3:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	111
0x4002ca9	              0x55	                                push rbp	       762	worktree.c	FUNCTION_47
0x4002caa	          0x4889e5	                            mov rbp, rsp	       762	worktree.c	FUNCTION_47
0x4002cad	    0x4881eca00000	                           sub rsp, 0xa0	       762	worktree.c	FUNCTION_47
0x4002cb4	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       762	worktree.c	FUNCTION_47
0x4002cbb	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       762	worktree.c	FUNCTION_47
0x4002cc2	    0x64488b042528	                mov rax, qword fs:[0x28]	       762	worktree.c	FUNCTION_47
0x4002ccb	        0x488945f8	                mov qword [rbp - 8], rax	       762	worktree.c	FUNCTION_47
0x4002ccf	            0x31c0	                            xor eax, eax	       762	worktree.c	FUNCTION_47
0x4002cd1	    0x48c745800000	               mov qword [rbp - 0x80], 0	       763	worktree.c	FUNCTION_47
0x4002cd9	    0xc74588000000	               mov dword [rbp - 0x78], 0	       763	worktree.c	FUNCTION_47
0x4002ce0	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       763	worktree.c	FUNCTION_47
0x4002ce7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       772	worktree.c	FUNCTION_47	CALL_1
0x4002cee	          0x4889c7	                            mov rdi, rax	       772	worktree.c	FUNCTION_47	CALL_1
0x4002cf1	      0xe89bfaffff	         call sym.validate_no_submodules	       772	worktree.c	FUNCTION_47	CALL_1
0x4002cf6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       774	worktree.c	FUNCTION_47	CALL_2
0x4002cfd	          0x488b10	                    mov rdx, qword [rax]	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d00	        0x488d4580	                   lea rax, [rbp - 0x80]	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d04	          0x4889d1	                            mov rcx, rdx	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d07	      0xba00000000	                              mov edx, 0	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d0c	      0xbe00000000	                              mov esi, 0	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d11	          0x4889c7	                            mov rdi, rax	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d14	      0xb800000000	                              mov eax, 0	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d19	      0xe800000000	                          call 0x4002d1e	       774	worktree.c	FUNCTION_47	CALL_2
0x4002d1e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d25	          0x488b10	                    mov rdx, qword [rax]	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d28	        0x488d4580	                   lea rax, [rbp - 0x80]	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d2c	          0x4889d1	                            mov rcx, rdx	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d2f	      0xba00000000	                              mov edx, 0	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d34	      0xbe00000000	                              mov esi, 0	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d39	          0x4889c7	                            mov rdi, rax	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d3c	      0xb800000000	                              mov eax, 0	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d41	      0xe800000000	                          call 0x4002d46	       776	worktree.c	FUNCTION_47	CALL_3
0x4002d46	        0x488d4590	                   lea rax, [rbp - 0x70]	       778	worktree.c	FUNCTION_47	CALL_4
0x4002d4a	      0xba60000000	                           mov edx, 0x60	       778	worktree.c	FUNCTION_47	CALL_4
0x4002d4f	      0xbe00000000	                              mov esi, 0	       778	worktree.c	FUNCTION_47	CALL_4
0x4002d54	          0x4889c7	                            mov rdi, rax	       778	worktree.c	FUNCTION_47	CALL_4
0x4002d57	      0xe800000000	                          call 0x4002d5c	       778	worktree.c	FUNCTION_47	CALL_4
0x4002d5c	        0x488d4590	                   lea rax, [rbp - 0x70]	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d60	        0x4883c008	                              add rax, 8	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d64	    0x41b800000000	                              mov r8d, 0	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d6a	      0xb900000000	                              mov ecx, 0	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d6f	      0xba00000000	                              mov edx, 0	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d74	      0xbe00000000	                              mov esi, 0	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d79	          0x4889c7	                            mov rdi, rax	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d7c	      0xb800000000	                              mov eax, 0	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d81	      0xe800000000	                          call 0x4002d86	       779	worktree.c	FUNCTION_47	CALL_5
0x4002d86	        0x488b4580	             mov rax, qword [rbp - 0x80]	       782	worktree.c	FUNCTION_47
0x4002d8a	        0x488945d0	             mov qword [rbp - 0x30], rax	       782	worktree.c	FUNCTION_47
0x4002d8e	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       783	worktree.c	FUNCTION_47
0x4002d92	          0x83c808	                               or eax, 8	       783	worktree.c	FUNCTION_47
0x4002d95	          0x8845d8	               mov byte [rbp - 0x28], al	       783	worktree.c	FUNCTION_47
0x4002d98	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       784	worktree.c	FUNCTION_47
0x4002d9f	          0x488b00	                    mov rax, qword [rax]	       784	worktree.c	FUNCTION_47
0x4002da2	        0x488945c8	             mov qword [rbp - 0x38], rax	       784	worktree.c	FUNCTION_47
0x4002da6	    0xc745c0ffffff	     mov dword [rbp - 0x40], 0xffffffff 	       785	worktree.c	FUNCTION_47
0x4002dad	        0x488d4590	                   lea rax, [rbp - 0x70]	       786	worktree.c	FUNCTION_47	CALL_6
0x4002db1	          0x4889c7	                            mov rdi, rax	       786	worktree.c	FUNCTION_47	CALL_6
0x4002db4	      0xe800000000	                          call 0x4002db9	       786	worktree.c	FUNCTION_47	CALL_6
0x4002db9	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       786	worktree.c	FUNCTION_47	CALL_6
0x4002dbf	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       787	worktree.c	FUNCTION_47	IF_1
0x4002dc6	            0x7424	                            je 0x4002dec	       787	worktree.c	FUNCTION_47	IF_1
0x4002dc8	      0xbf00000000	                              mov edi, 0	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002dcd	      0xe8add3ffff	                               call sym.	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002dd2	          0x4889c2	                            mov rdx, rax	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002dd5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002ddc	          0x4889c6	                            mov rsi, rax	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002ddf	          0x4889d7	                            mov rdi, rdx	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002de2	      0xb800000000	                              mov eax, 0	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002de7	      0xe800000000	                          call 0x4002dec	       788	worktree.c	FUNCTION_47	IF_1	CALL_8
0x4002dec	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       790	worktree.c	FUNCTION_47	CALL_9
0x4002def	        0x488d4df7	                      lea rcx, [rbp - 9]	       790	worktree.c	FUNCTION_47	CALL_9
0x4002df3	      0xba01000000	                              mov edx, 1	       790	worktree.c	FUNCTION_47	CALL_9
0x4002df8	          0x4889ce	                            mov rsi, rcx	       790	worktree.c	FUNCTION_47	CALL_9
0x4002dfb	            0x89c7	                            mov edi, eax	       790	worktree.c	FUNCTION_47	CALL_9
0x4002dfd	      0xe800000000	                          call 0x4002e02	       790	worktree.c	FUNCTION_47	CALL_9
0x4002e02	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       790	worktree.c	FUNCTION_47	CALL_9
0x4002e08	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       791	worktree.c	FUNCTION_47	IF_2
0x4002e0f	            0x7424	                            je 0x4002e35	       791	worktree.c	FUNCTION_47	IF_2
0x4002e11	      0xbf00000000	                              mov edi, 0	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e16	      0xe864d3ffff	                               call sym.	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e1b	          0x4889c2	                            mov rdx, rax	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e1e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e25	          0x4889c6	                            mov rsi, rax	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e28	          0x4889d7	                            mov rdi, rdx	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e2b	      0xb800000000	                              mov eax, 0	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e30	      0xe800000000	                          call 0x4002e35	       792	worktree.c	FUNCTION_47	IF_2	CALL_11
0x4002e35	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       794	worktree.c	FUNCTION_47	CALL_12
0x4002e38	            0x89c7	                            mov edi, eax	       794	worktree.c	FUNCTION_47	CALL_12
0x4002e3a	      0xe800000000	                          call 0x4002e3f	       794	worktree.c	FUNCTION_47	CALL_12
0x4002e3f	        0x488d4590	                   lea rax, [rbp - 0x70]	       795	worktree.c	FUNCTION_47	CALL_13
0x4002e43	          0x4889c7	                            mov rdi, rax	       795	worktree.c	FUNCTION_47	CALL_13
0x4002e46	      0xe800000000	                          call 0x4002e4b	       795	worktree.c	FUNCTION_47	CALL_13
0x4002e4b	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       795	worktree.c	FUNCTION_47	CALL_13
0x4002e51	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       796	worktree.c	FUNCTION_47	IF_3
0x4002e58	            0x742a	                            je 0x4002e84	       796	worktree.c	FUNCTION_47	IF_3
0x4002e5a	      0xbf00000000	                              mov edi, 0	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e5f	      0xe81bd3ffff	                               call sym.	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e64	          0x4889c1	                            mov rcx, rax	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e67	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e6d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e74	          0x4889c6	                            mov rsi, rax	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e77	          0x4889cf	                            mov rdi, rcx	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e7a	      0xb800000000	                              mov eax, 0	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e7f	      0xe800000000	                          call 0x4002e84	       797	worktree.c	FUNCTION_47	IF_3	CALL_15
0x4002e84	              0x90	                                     nop	       799	worktree.c	FUNCTION_47
0x4002e85	        0x488b45f8	                mov rax, qword [rbp - 8]	       799	worktree.c	FUNCTION_47
0x4002e89	    0x644833042528	                xor rax, qword fs:[0x28]	       799	worktree.c	FUNCTION_47
0x4002e92	            0x7405	                            je 0x4002e99	       799	worktree.c	FUNCTION_47
0x4002e94	      0xe800000000	                          call 0x4002e99	       799	worktree.c	FUNCTION_47
0x4002e99	              0xc9	                                   leave	       799	worktree.c	FUNCTION_47
0x4002e9a	              0xc3	                                     ret	       799	worktree.c	FUNCTION_47
remove_junk	CALL,6:IF,3:ELSE,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	56
0x4000a01	              0x55	                                push rbp	       172	worktree.c	FUNCTION_32
0x4000a02	          0x4889e5	                            mov rbp, rsp	       172	worktree.c	FUNCTION_32
0x4000a05	        0x4883ec20	                           sub rsp, 0x20	       172	worktree.c	FUNCTION_32
0x4000a09	    0x64488b042528	                mov rax, qword fs:[0x28]	       172	worktree.c	FUNCTION_32
0x4000a12	        0x488945f8	                mov qword [rbp - 8], rax	       172	worktree.c	FUNCTION_32
0x4000a16	            0x31c0	                            xor eax, eax	       172	worktree.c	FUNCTION_32
0x4000a18	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       173	worktree.c	FUNCTION_32
0x4000a20	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       173	worktree.c	FUNCTION_32
0x4000a28	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       173	worktree.c	FUNCTION_32
0x4000a30	    0x8b0500000000	            mov eax, dword [0x04000a36] 	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a36	            0x85c0	                           test eax, eax	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a38	     0xf849a000000	                            je 0x4000ad8	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a3e	      0xe800000000	                          call 0x4000a43	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a43	            0x89c2	                            mov edx, eax	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a45	    0x8b0500000000	            mov eax, dword [0x04000a4b] 	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a4b	            0x39c2	                            cmp edx, eax	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a4d	     0xf8585000000	                           jne 0x4000ad8	       174	worktree.c	FUNCTION_32	IF_1	CALL_1
0x4000a53	    0x488b05000000	            mov rax, qword [0x04000a5a] 	       176	worktree.c	FUNCTION_32	IF_2
0x4000a5a	          0x4885c0	                           test rax, rax	       176	worktree.c	FUNCTION_32	IF_2
0x4000a5d	            0x7438	                            je 0x4000a97	       176	worktree.c	FUNCTION_32	IF_2
0x4000a5f	    0x488b15000000	            mov rdx, qword [0x04000a66] 	       177	worktree.c	FUNCTION_32	IF_2	CALL_2
0x4000a66	        0x488d45e0	                   lea rax, [rbp - 0x20]	       177	worktree.c	FUNCTION_32	IF_2	CALL_2
0x4000a6a	          0x4889d6	                            mov rsi, rdx	       177	worktree.c	FUNCTION_32	IF_2	CALL_2
0x4000a6d	          0x4889c7	                            mov rdi, rax	       177	worktree.c	FUNCTION_32	IF_2	CALL_2
0x4000a70	      0xe8d5f6ffff	                  call sym.strbuf_addstr	       177	worktree.c	FUNCTION_32	IF_2	CALL_2
0x4000a75	        0x488d45e0	                   lea rax, [rbp - 0x20]	       178	worktree.c	FUNCTION_32	IF_2	CALL_3
0x4000a79	      0xbe00000000	                              mov esi, 0	       178	worktree.c	FUNCTION_32	IF_2	CALL_3
0x4000a7e	          0x4889c7	                            mov rdi, rax	       178	worktree.c	FUNCTION_32	IF_2	CALL_3
0x4000a81	      0xe800000000	                          call 0x4000a86	       178	worktree.c	FUNCTION_32	IF_2	CALL_3
0x4000a86	        0x488d45e0	                   lea rax, [rbp - 0x20]	       179	worktree.c	FUNCTION_32	IF_2
0x4000a8a	      0xbe00000000	                              mov esi, 0	       179	worktree.c	FUNCTION_32	IF_2
0x4000a8f	          0x4889c7	                            mov rdi, rax	       179	worktree.c	FUNCTION_32	IF_2
0x4000a92	      0xe819f6ffff	                  call sym.strbuf_setlen	       179	worktree.c	FUNCTION_32	IF_2
0x4000a97	    0x488b05000000	            mov rax, qword [0x04000a9e] 	       181	worktree.c	FUNCTION_32	IF_3
0x4000a9e	          0x4885c0	                           test rax, rax	       181	worktree.c	FUNCTION_32	IF_3
0x4000aa1	            0x7427	                            je 0x4000aca	       181	worktree.c	FUNCTION_32	IF_3
0x4000aa3	    0x488b15000000	            mov rdx, qword [0x04000aaa] 	       182	worktree.c	FUNCTION_32	IF_3	CALL_4
0x4000aaa	        0x488d45e0	                   lea rax, [rbp - 0x20]	       182	worktree.c	FUNCTION_32	IF_3	CALL_4
0x4000aae	          0x4889d6	                            mov rsi, rdx	       182	worktree.c	FUNCTION_32	IF_3	CALL_4
0x4000ab1	          0x4889c7	                            mov rdi, rax	       182	worktree.c	FUNCTION_32	IF_3	CALL_4
0x4000ab4	      0xe891f6ffff	                  call sym.strbuf_addstr	       182	worktree.c	FUNCTION_32	IF_3	CALL_4
0x4000ab9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       183	worktree.c	FUNCTION_32	IF_3	CALL_5
0x4000abd	      0xbe00000000	                              mov esi, 0	       183	worktree.c	FUNCTION_32	IF_3	CALL_5
0x4000ac2	          0x4889c7	                            mov rdi, rax	       183	worktree.c	FUNCTION_32	IF_3	CALL_5
0x4000ac5	      0xe800000000	                          call 0x4000aca	       183	worktree.c	FUNCTION_32	IF_3	CALL_5
0x4000aca	        0x488d45e0	                   lea rax, [rbp - 0x20]	       185	worktree.c	FUNCTION_32	CALL_6
0x4000ace	          0x4889c7	                            mov rdi, rax	       185	worktree.c	FUNCTION_32	CALL_6
0x4000ad1	      0xe800000000	                          call 0x4000ad6	       185	worktree.c	FUNCTION_32	CALL_6
0x4000ad6	            0xeb01	                           jmp 0x4000ad9	       185	worktree.c	FUNCTION_32	CALL_6
0x4000ad8	              0x90	                                     nop	       175	worktree.c	FUNCTION_32	IF_1
0x4000ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	worktree.c	FUNCTION_32
0x4000add	    0x644833042528	                xor rax, qword fs:[0x28]	       186	worktree.c	FUNCTION_32
0x4000ae6	            0x7405	                            je 0x4000aed	       186	worktree.c	FUNCTION_32
0x4000ae8	      0xe800000000	                          call 0x4000aed	       186	worktree.c	FUNCTION_32
0x4000aed	              0xc9	                                   leave	       186	worktree.c	FUNCTION_32
0x4000aee	              0xc3	                                     ret	       186	worktree.c	FUNCTION_32
