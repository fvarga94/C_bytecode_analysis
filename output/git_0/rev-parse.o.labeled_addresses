anti_reference	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,1:IF,0:functions,0:FOR,0	15
0x40006e1	              0x55	                                push rbp	       204	rev-parse.c	FUNCTION_8
0x40006e2	          0x4889e5	                            mov rbp, rsp	       204	rev-parse.c	FUNCTION_8
0x40006e5	        0x4883ec20	                           sub rsp, 0x20	       204	rev-parse.c	FUNCTION_8
0x40006e9	        0x48897df8	                mov qword [rbp - 8], rdi	       204	rev-parse.c	FUNCTION_8
0x40006ed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       204	rev-parse.c	FUNCTION_8
0x40006f1	          0x8955ec	             mov dword [rbp - 0x14], edx	       204	rev-parse.c	FUNCTION_8
0x40006f4	        0x48894de0	             mov qword [rbp - 0x20], rcx	       204	rev-parse.c	FUNCTION_8
0x40006f8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       205	rev-parse.c	FUNCTION_8	CALL_1
0x40006fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	rev-parse.c	FUNCTION_8	CALL_1
0x4000700	          0x4889c6	                            mov rsi, rax	       205	rev-parse.c	FUNCTION_8	CALL_1
0x4000703	      0xbf01000000	                              mov edi, 1	       205	rev-parse.c	FUNCTION_8	CALL_1
0x4000708	      0xe81dfdffff	                       call sym.show_rev	       205	rev-parse.c	FUNCTION_8	CALL_1
0x400070d	      0xb800000000	                              mov eax, 0	       206	rev-parse.c	FUNCTION_8
0x4000712	              0xc9	                                   leave	       207	rev-parse.c	FUNCTION_8
0x4000713	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
show_abbrev	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,1:IF,0:functions,0:FOR,0	13
0x4000714	              0x55	                                push rbp	       210	rev-parse.c	FUNCTION_9
0x4000715	          0x4889e5	                            mov rbp, rsp	       210	rev-parse.c	FUNCTION_9
0x4000718	        0x4883ec10	                           sub rsp, 0x10	       210	rev-parse.c	FUNCTION_9
0x400071c	        0x48897df8	                mov qword [rbp - 8], rdi	       210	rev-parse.c	FUNCTION_9
0x4000720	        0x488975f0	             mov qword [rbp - 0x10], rsi	       210	rev-parse.c	FUNCTION_9
0x4000724	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	rev-parse.c	FUNCTION_9	CALL_1
0x4000728	      0xba00000000	                              mov edx, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x400072d	          0x4889c6	                            mov rsi, rax	       211	rev-parse.c	FUNCTION_9	CALL_1
0x4000730	      0xbf00000000	                              mov edi, 0	       211	rev-parse.c	FUNCTION_9	CALL_1
0x4000735	      0xe8f0fcffff	                       call sym.show_rev	       211	rev-parse.c	FUNCTION_9	CALL_1
0x400073a	      0xb800000000	                              mov eax, 0	       212	rev-parse.c	FUNCTION_9
0x400073f	              0xc9	                                   leave	       213	rev-parse.c	FUNCTION_9
0x4000740	              0xc3	                                     ret	       213	rev-parse.c	FUNCTION_9
strbuf_avail	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,0:IF,0:functions,0:FOR,0	18
0x40000f3	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_24
0x40000f4	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_24
0x40000f7	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_24
0x40000fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0x40000ff	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_24
0x4000102	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000105	            0x741b	                            je 0x4000122	       141	strbuf.h	FUNCTION_24
0x4000107	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0x400010b	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_24
0x400010e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_24
0x4000112	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_24
0x4000116	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_24
0x4000119	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_24
0x400011c	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_24
0x4000120	            0xeb05	                           jmp 0x4000127	       141	strbuf.h	FUNCTION_24
0x4000122	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_24
0x4000127	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_24
0x4000128	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_24
opt_with_value	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,1:IF,3:functions,0:FOR,0	36
0x40015ad	              0x55	                                push rbp	       556	rev-parse.c	FUNCTION_20
0x40015ae	          0x4889e5	                            mov rbp, rsp	       556	rev-parse.c	FUNCTION_20
0x40015b1	        0x4883ec18	                           sub rsp, 0x18	       556	rev-parse.c	FUNCTION_20
0x40015b5	        0x48897df8	                mov qword [rbp - 8], rdi	       556	rev-parse.c	FUNCTION_20
0x40015b9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       556	rev-parse.c	FUNCTION_20
0x40015bd	        0x488955e8	             mov qword [rbp - 0x18], rdx	       556	rev-parse.c	FUNCTION_20
0x40015c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015c5	        0x488d55f8	                      lea rdx, [rbp - 8]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015c9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015cd	          0x4889ce	                            mov rsi, rcx	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015d0	          0x4889c7	                            mov rdi, rax	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015d3	      0xe873eaffff	                    call sym.skip_prefix	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015d8	            0x85c0	                           test eax, eax	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015da	            0x7442	                            je 0x400161e	       557	rev-parse.c	FUNCTION_20	IF_1	CALL_1
0x40015dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015e0	           0xfb600	                   movzx eax, byte [rax]	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015e3	            0x84c0	                             test al, al	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015e5	            0x7512	                           jne 0x40015f9	       558	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015eb	    0x48c700000000	                      mov qword [rax], 0	       559	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015f2	      0xb801000000	                              mov eax, 1	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015f7	            0xeb2a	                           jmp 0x4001623	       560	rev-parse.c	FUNCTION_20	IF_1	IF_2
0x40015f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x40015fd	        0x488d5001	                      lea rdx, [rax + 1]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001601	        0x488955f8	                mov qword [rbp - 8], rdx	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001605	           0xfb600	                   movzx eax, byte [rax]	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001608	            0x3c3d	                            cmp al, 0x3d	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400160a	            0x7512	                           jne 0x400161e	       562	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400160c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001610	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001614	          0x488910	                    mov qword [rax], rdx	       563	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x4001617	      0xb801000000	                              mov eax, 1	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400161c	            0xeb05	                           jmp 0x4001623	       564	rev-parse.c	FUNCTION_20	IF_1	IF_3
0x400161e	      0xb800000000	                              mov eax, 0	       567	rev-parse.c	FUNCTION_20
0x4001623	              0xc9	                                   leave	       568	rev-parse.c	FUNCTION_20
0x4001624	              0xc3	                                     ret	       568	rev-parse.c	FUNCTION_20
parseopt_dump	SWITCH,0:WHILE,0:ELSE,3:DO,0:CALL,6:IF,5:functions,0:FOR,0	71
0x4000c83	              0x55	                                push rbp	       365	rev-parse.c	FUNCTION_14
0x4000c84	          0x4889e5	                            mov rbp, rsp	       365	rev-parse.c	FUNCTION_14
0x4000c87	        0x4883ec30	                           sub rsp, 0x30	       365	rev-parse.c	FUNCTION_14
0x4000c8b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       365	rev-parse.c	FUNCTION_14
0x4000c8f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       365	rev-parse.c	FUNCTION_14
0x4000c93	          0x8955dc	             mov dword [rbp - 0x24], edx	       365	rev-parse.c	FUNCTION_14
0x4000c96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	rev-parse.c	FUNCTION_14
0x4000c9a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       366	rev-parse.c	FUNCTION_14
0x4000c9e	        0x488945f8	                mov qword [rbp - 8], rax	       366	rev-parse.c	FUNCTION_14
0x4000ca2	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       367	rev-parse.c	FUNCTION_14	IF_1
0x4000ca6	            0x7420	                            je 0x4000cc8	       367	rev-parse.c	FUNCTION_14	IF_1
0x4000ca8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cac	        0x488b5008	                mov rdx, qword [rax + 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cb4	      0xbe00000000	                              mov esi, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cb9	          0x4889c7	                            mov rdi, rax	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cbc	      0xb800000000	                              mov eax, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cc1	      0xe800000000	                          call 0x4000cc6	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cc6	            0xeb5f	                           jmp 0x4000d27	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000cc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000ccc	          0x8b4004	                mov eax, dword [rax + 4]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000ccf	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cd1	            0x7436	                            je 0x4000d09	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cd7	        0x488b4008	                mov rax, qword [rax + 8]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cdb	          0x4885c0	                           test rax, rax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cde	            0x740a	                            je 0x4000cea	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000ce0	    0x8b0500000000	            mov eax, dword [0x04000ce6] 	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000ce6	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000ce8	            0x751f	                           jne 0x4000d09	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cee	          0x8b5004	                mov edx, dword [rax + 4]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cf5	      0xbe00000000	                              mov esi, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cfa	          0x4889c7	                            mov rdi, rax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000cfd	      0xb800000000	                              mov eax, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000d02	      0xe800000000	                          call 0x4000d07	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000d07	            0xeb1e	                           jmp 0x4000d27	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000d09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d0d	        0x488b5008	                mov rdx, qword [rax + 8]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d11	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d15	      0xbe00000000	                              mov esi, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d1a	          0x4889c7	                            mov rdi, rax	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d1d	      0xb800000000	                              mov eax, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d22	      0xe800000000	                          call 0x4000d27	       372	rev-parse.c	FUNCTION_14	CALL_3
0x4000d27	      0x48837de000	               cmp qword [rbp - 0x20], 0	       373	rev-parse.c	FUNCTION_14	IF_3
0x4000d2c	            0x744e	                            je 0x4000d7c	       373	rev-parse.c	FUNCTION_14	IF_3
0x4000d2e	    0x8b0500000000	            mov eax, dword [0x04000d34] 	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000d34	            0x85c0	                           test eax, eax	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000d36	            0x7513	                           jne 0x4000d4b	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000d38	        0x488b45f8	                mov rax, qword [rbp - 8]	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0x4000d3c	      0xbe20000000	                           mov esi, 0x20	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0x4000d41	          0x4889c7	                            mov rdi, rax	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0x4000d44	      0xe87af4ffff	                   call sym.strbuf_addch	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0x4000d49	            0xeb1e	                           jmp 0x4000d69	       375	rev-parse.c	FUNCTION_14	IF_3	CALL_4
0x4000d4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d4f	        0x488b4008	                mov rax, qword [rax + 8]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d53	          0x4885c0	                           test rax, rax	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d56	            0x7411	                            je 0x4000d69	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d58	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d5c	      0xbe3d000000	                           mov esi, 0x3d	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d61	          0x4889c7	                            mov rdi, rax	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d64	      0xe85af4ffff	                   call sym.strbuf_addch	       377	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000d69	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000d6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000d71	          0x4889d6	                            mov rsi, rdx	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000d74	          0x4889c7	                            mov rdi, rax	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000d77	      0xe800000000	                          call 0x4000d7c	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x4000d7c	      0xb800000000	                              mov eax, 0	       380	rev-parse.c	FUNCTION_14
0x4000d81	              0xc9	                                   leave	       381	rev-parse.c	FUNCTION_14
0x4000d82	              0xc3	                                     ret	       381	rev-parse.c	FUNCTION_14
cmd_sq_quote	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,3:IF,1:functions,0:FOR,0	31
0x4001501	              0x55	                                push rbp	       525	rev-parse.c	FUNCTION_18
0x4001502	          0x4889e5	                            mov rbp, rsp	       525	rev-parse.c	FUNCTION_18
0x4001505	        0x4883ec30	                           sub rsp, 0x30	       525	rev-parse.c	FUNCTION_18
0x4001509	          0x897ddc	             mov dword [rbp - 0x24], edi	       525	rev-parse.c	FUNCTION_18
0x400150c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       525	rev-parse.c	FUNCTION_18
0x4001510	    0x64488b042528	                mov rax, qword fs:[0x28]	       525	rev-parse.c	FUNCTION_18
0x4001519	        0x488945f8	                mov qword [rbp - 8], rax	       525	rev-parse.c	FUNCTION_18
0x400151d	            0x31c0	                            xor eax, eax	       525	rev-parse.c	FUNCTION_18
0x400151f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       526	rev-parse.c	FUNCTION_18
0x4001527	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       526	rev-parse.c	FUNCTION_18
0x400152f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       526	rev-parse.c	FUNCTION_18
0x4001537	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       528	rev-parse.c	FUNCTION_18	IF_1
0x400153b	            0x7413	                            je 0x4001550	       528	rev-parse.c	FUNCTION_18	IF_1
0x400153d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       529	rev-parse.c	FUNCTION_18	CALL_1
0x4001541	        0x488d45e0	                   lea rax, [rbp - 0x20]	       529	rev-parse.c	FUNCTION_18	CALL_1
0x4001545	          0x4889d6	                            mov rsi, rdx	       529	rev-parse.c	FUNCTION_18	CALL_1
0x4001548	          0x4889c7	                            mov rdi, rax	       529	rev-parse.c	FUNCTION_18	CALL_1
0x400154b	      0xe800000000	                          call 0x4001550	       529	rev-parse.c	FUNCTION_18	CALL_1
0x4001550	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       530	rev-parse.c	FUNCTION_18	CALL_2
0x4001554	          0x4889c7	                            mov rdi, rax	       530	rev-parse.c	FUNCTION_18	CALL_2
0x4001557	      0xe800000000	                          call 0x400155c	       530	rev-parse.c	FUNCTION_18	CALL_2
0x400155c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       531	rev-parse.c	FUNCTION_18	CALL_3
0x4001560	          0x4889c7	                            mov rdi, rax	       531	rev-parse.c	FUNCTION_18	CALL_3
0x4001563	      0xe800000000	                          call 0x4001568	       531	rev-parse.c	FUNCTION_18	CALL_3
0x4001568	      0xb800000000	                              mov eax, 0	       533	rev-parse.c	FUNCTION_18
0x400156d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       534	rev-parse.c	FUNCTION_18
0x4001571	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       534	rev-parse.c	FUNCTION_18
0x400157a	            0x7405	                            je 0x4001581	       534	rev-parse.c	FUNCTION_18
0x400157c	      0xe800000000	                          call 0x4001581	       534	rev-parse.c	FUNCTION_18
0x4001581	              0xc9	                                   leave	       534	rev-parse.c	FUNCTION_18
0x4001582	              0xc3	                                     ret	       534	rev-parse.c	FUNCTION_18
show_rev	SWITCH,1:WHILE,0:ELSE,3:DO,0:CALL,10:IF,5:functions,0:FOR,0	105
0x400042a	              0x55	                                push rbp	       126	rev-parse.c	FUNCTION_4
0x400042b	          0x4889e5	                            mov rbp, rsp	       126	rev-parse.c	FUNCTION_4
0x400042e	        0x4883ec50	                           sub rsp, 0x50	       126	rev-parse.c	FUNCTION_4
0x4000432	          0x897dcc	             mov dword [rbp - 0x34], edi	       126	rev-parse.c	FUNCTION_4
0x4000435	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	rev-parse.c	FUNCTION_4
0x4000439	        0x488955b8	             mov qword [rbp - 0x48], rdx	       126	rev-parse.c	FUNCTION_4
0x400043d	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	rev-parse.c	FUNCTION_4
0x4000446	        0x488945f8	                mov qword [rbp - 8], rax	       126	rev-parse.c	FUNCTION_4
0x400044a	            0x31c0	                            xor eax, eax	       126	rev-parse.c	FUNCTION_4
0x400044c	    0x8b0500000000	            mov eax, dword [0x04000452] 	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000452	          0x83e001	                              and eax, 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000455	            0x85c0	                           test eax, eax	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000457	     0xf8435010000	                            je 0x4000592	       127	rev-parse.c	FUNCTION_4	IF_1
0x400045d	    0x48c705000000	               mov qword [0x04000468], 0	       129	rev-parse.c	FUNCTION_4
0x4000468	    0x8b0500000000	            mov eax, dword [0x0400046e] 	       131	rev-parse.c	FUNCTION_4	IF_2
0x400046e	            0x85c0	                           test eax, eax	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000470	            0x750e	                           jne 0x4000480	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000472	    0x8b0500000000	            mov eax, dword [0x04000478] 	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000478	            0x85c0	                           test eax, eax	       131	rev-parse.c	FUNCTION_4	IF_2
0x400047a	     0xf84c4000000	                            je 0x4000544	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000480	      0x48837db800	               cmp qword [rbp - 0x48], 0	       131	rev-parse.c	FUNCTION_4	IF_2
0x4000485	     0xf84b9000000	                            je 0x4000544	       131	rev-parse.c	FUNCTION_4	IF_2
0x400048b	    0x8b0500000000	            mov eax, dword [0x04000491] 	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000491	          0x83f802	                              cmp eax, 2	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000494	            0x740e	                            je 0x40004a4	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000496	    0x8b0500000000	            mov eax, dword [0x0400049c] 	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x400049c	            0x85c0	                           test eax, eax	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x400049e	     0xf848d000000	                            je 0x4000531	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x40004a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004a8	          0x4889c7	                            mov rdi, rax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004ab	      0xe800000000	                          call 0x40004b0	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004b0	            0x89c6	                            mov esi, eax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004b2	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004b6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004be	          0x4889c7	                            mov rdi, rax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004c1	      0xe800000000	                          call 0x40004c6	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004c6	            0x85c0	                           test eax, eax	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004c8	            0x7457	                            je 0x4000521	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004ca	          0x83f801	                              cmp eax, 1	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004cd	            0x7535	                           jne 0x4000504	       136	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_2
0x40004cf	    0x8b0500000000	            mov eax, dword [0x040004d5] 	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x40004d5	            0x85c0	                           test eax, eax	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x40004d7	            0x7418	                            je 0x40004f1	       147	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4
0x40004d9	    0x8b1500000000	            mov edx, dword [0x040004df] 	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004e3	            0x89d6	                            mov esi, edx	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004e5	          0x4889c7	                            mov rdi, rax	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004e8	      0xe800000000	                          call 0x40004ed	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004ed	        0x488945d8	             mov qword [rbp - 0x28], rax	       148	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	IF_4	CALL_3
0x40004f1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40004f5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40004f8	          0x4889d6	                            mov rsi, rdx	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40004fb	            0x89c7	                            mov edi, eax	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x40004fd	      0xe8f5feffff	                 call sym.show_with_type	       150	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1	CALL_4
0x4000502	            0xeb1e	                           jmp 0x4000522	       151	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000504	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000508	          0x4889c6	                            mov rsi, rax	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x400050b	      0xbf00000000	                              mov edi, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000510	      0xb800000000	                              mov eax, 0	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000515	      0xe800000000	                          call 0x400051a	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x400051a	      0xe821fbffff	                    call sym.const_error	       153	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x400051f	            0xeb01	                           jmp 0x4000522	       154	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000521	              0x90	                                     nop	       145	rev-parse.c	FUNCTION_4	IF_2	IF_3	SWITCH_1
0x4000522	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000526	          0x4889c7	                            mov rdi, rax	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000529	      0xe800000000	                          call 0x400052e	       156	rev-parse.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400052e	              0x90	                                     nop	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x400052f	            0xeb62	                           jmp 0x4000593	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000531	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x4000535	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x4000538	          0x4889d6	                            mov rsi, rdx	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x400053b	            0x89c7	                            mov edi, eax	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x400053d	      0xe8b5feffff	                 call sym.show_with_type	       158	rev-parse.c	FUNCTION_4	IF_2	ELSE_1	CALL_6
0x4000542	            0xeb4f	                           jmp 0x4000593	       132	rev-parse.c	FUNCTION_4	IF_2	IF_3
0x4000544	    0x8b0500000000	            mov eax, dword [0x0400054a] 	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400054a	            0x85c0	                           test eax, eax	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400054c	            0x7426	                            je 0x4000574	       161	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400054e	    0x8b1500000000	            mov edx, dword [0x04000554] 	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000554	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000558	            0x89d6	                            mov esi, edx	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400055a	          0x4889c7	                            mov rdi, rax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400055d	      0xe800000000	                          call 0x4000562	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000562	          0x4889c2	                            mov rdx, rax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000565	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000568	          0x4889d6	                            mov rsi, rdx	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400056b	            0x89c7	                            mov edi, eax	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x400056d	      0xe885feffff	                 call sym.show_with_type	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000572	            0xeb1f	                           jmp 0x4000593	       162	rev-parse.c	FUNCTION_4	ELSE_2	IF_5
0x4000574	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000578	          0x4889c7	                            mov rdi, rax	       164	rev-parse.c	FUNCTION_4	CALL_10
0x400057b	      0xe800000000	                          call 0x4000580	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000580	          0x4889c2	                            mov rdx, rax	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000583	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000586	          0x4889d6	                            mov rsi, rdx	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000589	            0x89c7	                            mov edi, eax	       164	rev-parse.c	FUNCTION_4	CALL_10
0x400058b	      0xe867feffff	                 call sym.show_with_type	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000590	            0xeb01	                           jmp 0x4000593	       164	rev-parse.c	FUNCTION_4	CALL_10
0x4000592	              0x90	                                     nop	       128	rev-parse.c	FUNCTION_4	IF_1
0x4000593	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	rev-parse.c	FUNCTION_4
0x4000597	    0x644833042528	                xor rax, qword fs:[0x28]	       165	rev-parse.c	FUNCTION_4
0x40005a0	            0x7405	                            je 0x40005a7	       165	rev-parse.c	FUNCTION_4
0x40005a2	      0xe800000000	                          call 0x40005a7	       165	rev-parse.c	FUNCTION_4
0x40005a7	              0xc9	                                   leave	       165	rev-parse.c	FUNCTION_4
0x40005a8	              0xc3	                                     ret	       165	rev-parse.c	FUNCTION_4
try_difference	SWITCH,0:WHILE,1:ELSE,0:DO,0:CALL,10:IF,6:functions,0:FOR,0	121
0x400082c	              0x55	                                push rbp	       244	rev-parse.c	FUNCTION_12
0x400082d	          0x4889e5	                            mov rbp, rsp	       244	rev-parse.c	FUNCTION_12
0x4000830	    0x4881ec900000	                           sub rsp, 0x90	       244	rev-parse.c	FUNCTION_12
0x4000837	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       244	rev-parse.c	FUNCTION_12
0x400083e	    0x64488b042528	                mov rax, qword fs:[0x28]	       244	rev-parse.c	FUNCTION_12
0x4000847	        0x488945f8	                mov qword [rbp - 8], rax	       244	rev-parse.c	FUNCTION_12
0x400084b	            0x31c0	                            xor eax, eax	       244	rev-parse.c	FUNCTION_12
0x400084d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x4000854	      0xbe00000000	                              mov esi, 0	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x4000859	          0x4889c7	                            mov rdi, rax	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x400085c	      0xe800000000	                          call 0x4000861	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x4000861	        0x488945a0	             mov qword [rbp - 0x60], rax	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x4000865	      0x48837da000	               cmp qword [rbp - 0x60], 0	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x400086a	            0x750a	                           jne 0x4000876	       253	rev-parse.c	FUNCTION_12	IF_1	CALL_1
0x400086c	      0xb800000000	                              mov eax, 0	       254	rev-parse.c	FUNCTION_12	IF_1
0x4000871	      0xe97f010000	                           jmp 0x40009f5	       254	rev-parse.c	FUNCTION_12	IF_1
0x4000876	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       255	rev-parse.c	FUNCTION_12
0x400087a	        0x4883c002	                              add rax, 2	       255	rev-parse.c	FUNCTION_12
0x400087e	        0x48894590	             mov qword [rbp - 0x70], rax	       255	rev-parse.c	FUNCTION_12
0x4000882	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       256	rev-parse.c	FUNCTION_12
0x4000889	        0x48894598	             mov qword [rbp - 0x68], rax	       256	rev-parse.c	FUNCTION_12
0x400088d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       257	rev-parse.c	FUNCTION_12
0x4000891	           0xfb600	                   movzx eax, byte [rax]	       257	rev-parse.c	FUNCTION_12
0x4000894	            0x3c2e	                            cmp al, 0x2e	       257	rev-parse.c	FUNCTION_12
0x4000896	           0xf94c0	                                 sete al	       257	rev-parse.c	FUNCTION_12
0x4000899	           0xfb6c0	                           movzx eax, al	       257	rev-parse.c	FUNCTION_12
0x400089c	          0x894584	             mov dword [rbp - 0x7c], eax	       257	rev-parse.c	FUNCTION_12
0x400089f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       259	rev-parse.c	FUNCTION_12
0x40008a3	          0xc60000	                       mov byte [rax], 0	       259	rev-parse.c	FUNCTION_12
0x40008a6	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       260	rev-parse.c	FUNCTION_12
0x40008a9	            0x4898	                                    cdqe	       260	rev-parse.c	FUNCTION_12
0x40008ab	        0x48014590	            add qword [rbp - 0x70], rax 	       260	rev-parse.c	FUNCTION_12
0x40008af	        0x488b4590	             mov rax, qword [rbp - 0x70]	       262	rev-parse.c	FUNCTION_12	IF_2
0x40008b3	           0xfb600	                   movzx eax, byte [rax]	       262	rev-parse.c	FUNCTION_12	IF_2
0x40008b6	            0x84c0	                             test al, al	       262	rev-parse.c	FUNCTION_12	IF_2
0x40008b8	            0x7508	                           jne 0x40008c2	       262	rev-parse.c	FUNCTION_12	IF_2
0x40008ba	    0x48c745900000	               mov qword [rbp - 0x70], 0	       263	rev-parse.c	FUNCTION_12	IF_2
0x40008c2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       264	rev-parse.c	FUNCTION_12	IF_3
0x40008c6	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       264	rev-parse.c	FUNCTION_12	IF_3
0x40008cd	            0x7508	                           jne 0x40008d7	       264	rev-parse.c	FUNCTION_12	IF_3
0x40008cf	    0x48c745980000	               mov qword [rbp - 0x68], 0	       265	rev-parse.c	FUNCTION_12	IF_3
0x40008d7	    0x48817d980000	               cmp qword [rbp - 0x68], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008df	            0x7521	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008e1	    0x48817d900000	               cmp qword [rbp - 0x70], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008e9	            0x7517	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008eb	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008ef	            0x7511	                           jne 0x4000902	       267	rev-parse.c	FUNCTION_12	IF_4
0x40008f1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       273	rev-parse.c	FUNCTION_12	IF_4
0x40008f5	          0xc6002e	                    mov byte [rax], 0x2e	       273	rev-parse.c	FUNCTION_12	IF_4
0x40008f8	      0xb800000000	                              mov eax, 0	       274	rev-parse.c	FUNCTION_12	IF_4
0x40008fd	      0xe9f3000000	                           jmp 0x40009f5	       274	rev-parse.c	FUNCTION_12	IF_4
0x4000902	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000906	        0x488b4598	             mov rax, qword [rbp - 0x68]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x400090a	          0x4889d6	                            mov rsi, rdx	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x400090d	          0x4889c7	                            mov rdi, rax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000910	      0xe800000000	                          call 0x4000915	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000915	            0x85c0	                           test eax, eax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000917	     0xf85cc000000	                           jne 0x40009e9	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x400091d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000921	        0x488b4590	             mov rax, qword [rbp - 0x70]	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000925	          0x4889d6	                            mov rsi, rdx	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000928	          0x4889c7	                            mov rdi, rax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x400092b	      0xe800000000	                          call 0x4000930	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000930	            0x85c0	                           test eax, eax	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000932	     0xf85b1000000	                           jne 0x40009e9	       277	rev-parse.c	FUNCTION_12	IF_5	CALL_3
0x4000938	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x400093c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x4000940	          0x4889c6	                            mov rsi, rax	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x4000943	      0xbf00000000	                              mov edi, 0	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x4000948	      0xe8ddfaffff	                       call sym.show_rev	       278	rev-parse.c	FUNCTION_12	IF_5	CALL_4
0x400094d	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000951	           0xf94c0	                                 sete al	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000954	           0xfb6c0	                           movzx eax, al	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000957	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x400095b	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x400095f	          0x4889ce	                            mov rsi, rcx	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000962	            0x89c7	                            mov edi, eax	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000964	      0xe8c1faffff	                       call sym.show_rev	       279	rev-parse.c	FUNCTION_12	IF_5	CALL_5
0x4000969	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       280	rev-parse.c	FUNCTION_12	IF_5	IF_6
0x400096d	            0x746c	                            je 0x40009db	       280	rev-parse.c	FUNCTION_12	IF_5	IF_6
0x400096f	        0x488d45c0	                   lea rax, [rbp - 0x40]	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x4000973	          0x4889c7	                            mov rdi, rax	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x4000976	      0xe800000000	                          call 0x400097b	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x400097b	        0x488945a8	             mov qword [rbp - 0x58], rax	       283	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_6
0x400097f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x4000983	          0x4889c7	                            mov rdi, rax	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x4000986	      0xe800000000	                          call 0x400098b	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x400098b	        0x488945b0	             mov qword [rbp - 0x50], rax	       284	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_7
0x400098f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x4000993	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x4000997	          0x4889d6	                            mov rsi, rdx	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x400099a	          0x4889c7	                            mov rdi, rax	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x400099d	      0xe800000000	                          call 0x40009a2	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x40009a2	        0x48894588	             mov qword [rbp - 0x78], rax	       285	rev-parse.c	FUNCTION_12	IF_5	IF_6	CALL_8
0x40009a6	            0xeb2a	                           jmp 0x40009d2	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x40009a8	        0x488d4588	                   lea rax, [rbp - 0x78]	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x40009ac	          0x4889c7	                            mov rdi, rax	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x40009af	      0xe800000000	                          call 0x40009b4	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x40009b4	        0x488945b8	             mov qword [rbp - 0x48], rax	       287	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_9
0x40009b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009bc	        0x4883c004	                              add rax, 4	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009c0	      0xba00000000	                              mov edx, 0	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009c5	          0x4889c6	                            mov rsi, rax	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009c8	      0xbf01000000	                              mov edi, 1	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009cd	      0xe858faffff	                       call sym.show_rev	       288	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1	CALL_10
0x40009d2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x40009d6	          0x4885c0	                           test rax, rax	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x40009d9	            0x75cd	                           jne 0x40009a8	       286	rev-parse.c	FUNCTION_12	IF_5	IF_6	WHILE_1
0x40009db	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       291	rev-parse.c	FUNCTION_12	IF_5
0x40009df	          0xc6002e	                    mov byte [rax], 0x2e	       291	rev-parse.c	FUNCTION_12	IF_5
0x40009e2	      0xb801000000	                              mov eax, 1	       292	rev-parse.c	FUNCTION_12	IF_5
0x40009e7	            0xeb0c	                           jmp 0x40009f5	       292	rev-parse.c	FUNCTION_12	IF_5
0x40009e9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       294	rev-parse.c	FUNCTION_12
0x40009ed	          0xc6002e	                    mov byte [rax], 0x2e	       294	rev-parse.c	FUNCTION_12
0x40009f0	      0xb800000000	                              mov eax, 0	       295	rev-parse.c	FUNCTION_12
0x40009f5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       296	rev-parse.c	FUNCTION_12
0x40009f9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       296	rev-parse.c	FUNCTION_12
0x4000a02	            0x7405	                            je 0x4000a09	       296	rev-parse.c	FUNCTION_12
0x4000a04	      0xe800000000	                          call 0x4000a09	       296	rev-parse.c	FUNCTION_12
0x4000a09	              0xc9	                                   leave	       296	rev-parse.c	FUNCTION_12
0x4000a0a	              0xc3	                                     ret	       296	rev-parse.c	FUNCTION_12
is_rev_argument	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,3:IF,3:functions,0:FOR,1	61
0x4000292	              0x55	                                push rbp	        47	rev-parse.c	FUNCTION_1
0x4000293	          0x4889e5	                            mov rbp, rsp	        47	rev-parse.c	FUNCTION_1
0x4000296	        0x4883ec30	                           sub rsp, 0x30	        47	rev-parse.c	FUNCTION_1
0x400029a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        47	rev-parse.c	FUNCTION_1
0x400029e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        79	rev-parse.c	FUNCTION_1
0x40002a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002aa	           0xfb600	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002ad	            0x3c2d	                            cmp al, 0x2d	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002af	            0x752b	                           jne 0x40002dc	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002b5	        0x4883c001	                              add rax, 1	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002b9	           0xfb600	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002bc	           0xfb6c0	                           movzx eax, al	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002bf	            0x4898	                                    cdqe	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002c1	     0xfb680000000	                   movzx eax, byte [rax]	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002c8	           0xfb6c0	                           movzx eax, al	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002cb	          0x83e002	                              and eax, 2	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002ce	            0x85c0	                           test eax, eax	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002d0	            0x740a	                            je 0x40002dc	        82	rev-parse.c	FUNCTION_1	IF_1
0x40002d2	      0xb801000000	                              mov eax, 1	        83	rev-parse.c	FUNCTION_1	IF_1
0x40002d7	      0xe980000000	                           jmp 0x400035c	        83	rev-parse.c	FUNCTION_1	IF_1
0x40002dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x40002e0	        0x488d5008	                      lea rdx, [rax + 8]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x40002e4	        0x488955f0	             mov qword [rbp - 0x10], rdx	        86	rev-parse.c	FUNCTION_1	FOR_1
0x40002e8	          0x488b00	                    mov rax, qword [rax]	        86	rev-parse.c	FUNCTION_1	FOR_1
0x40002eb	        0x488945f8	                mov qword [rbp - 8], rax	        86	rev-parse.c	FUNCTION_1	FOR_1
0x40002ef	      0x48837df800	                  cmp qword [rbp - 8], 0	        88	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x40002f4	            0x7507	                           jne 0x40002fd	        88	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x40002f6	      0xb800000000	                              mov eax, 0	        89	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x40002fb	            0xeb5f	                           jmp 0x400035c	        89	rev-parse.c	FUNCTION_1	FOR_1	IF_2
0x40002fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_1
0x4000301	          0x4889c7	                            mov rdi, rax	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_1
0x4000304	      0xe800000000	                          call 0x4000309	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_1
0x4000309	          0x8945ec	             mov dword [rbp - 0x14], eax	        90	rev-parse.c	FUNCTION_1	FOR_1	CALL_1
0x400030c	        0x488b55f8	                mov rdx, qword [rbp - 8]	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000314	          0x4889d6	                            mov rsi, rdx	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000317	          0x4889c7	                            mov rdi, rax	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x400031a	      0xe800000000	                          call 0x400031f	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x400031f	            0x85c0	                           test eax, eax	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000321	            0x7434	                            je 0x4000357	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000323	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000326	            0x4898	                                    cdqe	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000328	        0x488d50ff	                      lea rdx, [rax - 1]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x400032c	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000330	          0x4801d0	                            add rax, rdx	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000333	           0xfb600	                   movzx eax, byte [rax]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000336	            0x3c3d	                            cmp al, 0x3d	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x4000338	            0x75a2	                           jne 0x40002dc	        91	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_2
0x400033a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x400033d	          0x4863d0	                         movsxd rdx, eax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000340	        0x488b4df8	                mov rcx, qword [rbp - 8]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000344	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000348	          0x4889ce	                            mov rsi, rcx	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x400034b	          0x4889c7	                            mov rdi, rax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x400034e	      0xe800000000	                          call 0x4000353	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000353	            0x85c0	                           test eax, eax	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000355	            0x7585	                           jne 0x40002dc	        92	rev-parse.c	FUNCTION_1	FOR_1	IF_3	CALL_3
0x4000357	      0xb801000000	                              mov eax, 1	        93	rev-parse.c	FUNCTION_1	FOR_1	IF_3
0x400035c	              0xc9	                                   leave	        95	rev-parse.c	FUNCTION_1
0x400035d	              0xc3	                                     ret	        95	rev-parse.c	FUNCTION_1
skip_prefix	SWITCH,0:WHILE,0:ELSE,0:DO,1:CALL,0:IF,1:functions,0:FOR,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_40
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_40
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_40
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_40
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_40
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_40	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_40	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_40	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_40
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_40
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_40
show	SWITCH,0:WHILE,1:ELSE,1:DO,0:CALL,6:IF,2:functions,0:FOR,0	44
0x400035e	              0x55	                                push rbp	        99	rev-parse.c	FUNCTION_2
0x400035f	          0x4889e5	                            mov rbp, rsp	        99	rev-parse.c	FUNCTION_2
0x4000362	        0x4883ec20	                           sub rsp, 0x20	        99	rev-parse.c	FUNCTION_2
0x4000366	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	rev-parse.c	FUNCTION_2
0x400036a	    0x8b0500000000	            mov eax, dword [0x04000370] 	       100	rev-parse.c	FUNCTION_2	IF_1
0x4000370	            0x85c0	                           test eax, eax	       100	rev-parse.c	FUNCTION_2	IF_1
0x4000372	            0x7474	                            je 0x40003e8	       100	rev-parse.c	FUNCTION_2	IF_1
0x4000374	    0xc745f8270000	               mov dword [rbp - 8], 0x27	       101	rev-parse.c	FUNCTION_2	IF_1
0x400037b	          0x8b45f8	                mov eax, dword [rbp - 8]	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x400037e	            0x89c7	                            mov edi, eax	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x4000380	      0xe800000000	                          call 0x4000385	       103	rev-parse.c	FUNCTION_2	IF_1	CALL_1
0x4000385	            0xeb30	                           jmp 0x40003b7	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x4000387	          0x8b45fc	                mov eax, dword [rbp - 4]	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x400038a	          0x3b45f8	                cmp eax, dword [rbp - 8]	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x400038d	            0x751e	                           jne 0x40003ad	       105	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	IF_2
0x400038f	    0x488b05000000	            mov rax, qword [0x04000396] 	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x4000396	          0x4889c1	                            mov rcx, rax	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x4000399	      0xba03000000	                              mov edx, 3	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x400039e	      0xbe01000000	                              mov esi, 1	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x40003a3	      0xbf00000000	                              mov edi, 0	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x40003a8	      0xe800000000	                          call 0x40003ad	       106	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_2
0x40003ad	          0x8b45fc	                mov eax, dword [rbp - 4]	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x40003b0	            0x89c7	                            mov edi, eax	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x40003b2	      0xe800000000	                          call 0x40003b7	       107	rev-parse.c	FUNCTION_2	IF_1	WHILE_1	CALL_3
0x40003b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003bb	        0x488d5001	                      lea rdx, [rax + 1]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003bf	        0x488955e8	             mov qword [rbp - 0x18], rdx	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003c3	           0xfb600	                   movzx eax, byte [rax]	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003c6	           0xfbec0	                           movsx eax, al	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003c9	          0x8945fc	                mov dword [rbp - 4], eax	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003cc	        0x837dfc00	                  cmp dword [rbp - 4], 0	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003d0	            0x75b5	                           jne 0x4000387	       104	rev-parse.c	FUNCTION_2	IF_1	WHILE_1
0x40003d2	          0x8b45f8	                mov eax, dword [rbp - 8]	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x40003d5	            0x89c7	                            mov edi, eax	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x40003d7	      0xe800000000	                          call 0x40003dc	       109	rev-parse.c	FUNCTION_2	IF_1	CALL_4
0x40003dc	      0xbf20000000	                           mov edi, 0x20	       110	rev-parse.c	FUNCTION_2	IF_1	CALL_5
0x40003e1	      0xe800000000	                          call 0x40003e6	       110	rev-parse.c	FUNCTION_2	IF_1	CALL_5
0x40003e6	            0xeb0c	                           jmp 0x40003f4	       114	rev-parse.c	FUNCTION_2
0x40003e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	rev-parse.c	FUNCTION_2	CALL_6
0x40003ec	          0x4889c7	                            mov rdi, rax	       113	rev-parse.c	FUNCTION_2	CALL_6
0x40003ef	      0xe800000000	                          call 0x40003f4	       113	rev-parse.c	FUNCTION_2	CALL_6
0x40003f4	              0x90	                                     nop	       114	rev-parse.c	FUNCTION_2
0x40003f5	              0xc9	                                   leave	       114	rev-parse.c	FUNCTION_2
0x40003f6	              0xc3	                                     ret	       114	rev-parse.c	FUNCTION_2
show_file	SWITCH,0:WHILE,0:ELSE,1:DO,0:CALL,5:IF,2:functions,0:FOR,0	36
0x40007aa	              0x55	                                push rbp	       228	rev-parse.c	FUNCTION_11
0x40007ab	          0x4889e5	                            mov rbp, rsp	       228	rev-parse.c	FUNCTION_11
0x40007ae	        0x4883ec20	                           sub rsp, 0x20	       228	rev-parse.c	FUNCTION_11
0x40007b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       228	rev-parse.c	FUNCTION_11
0x40007b6	          0x8975e4	             mov dword [rbp - 0x1c], esi	       228	rev-parse.c	FUNCTION_11
0x40007b9	      0xe84dfeffff	                   call sym.show_default	       229	rev-parse.c	FUNCTION_11	CALL_1
0x40007be	    0x8b0500000000	            mov eax, dword [0x040007c4] 	       230	rev-parse.c	FUNCTION_11	IF_1
0x40007c4	          0x83e00a	                            and eax, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x40007c7	          0x83f80a	                            cmp eax, 0xa	       230	rev-parse.c	FUNCTION_11	IF_1
0x40007ca	            0x7559	                           jne 0x4000825	       230	rev-parse.c	FUNCTION_11	IF_1
0x40007cc	        0x837de400	               cmp dword [rbp - 0x1c], 0	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40007d0	            0x7440	                            je 0x4000812	       231	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40007d2	    0x488b05000000	            mov rax, qword [0x040007d9] 	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40007d9	        0x488b4008	                mov rax, qword [rax + 8]	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40007dd	        0x488945f0	             mov qword [rbp - 0x10], rax	       232	rev-parse.c	FUNCTION_11	IF_1	IF_2
0x40007e1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007e9	          0x4889d6	                            mov rsi, rdx	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007ec	          0x4889c7	                            mov rdi, rax	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007ef	      0xe800000000	                          call 0x40007f4	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007f4	        0x488945f8	                mov qword [rbp - 8], rax	       233	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x40007f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007fc	          0x4889c7	                            mov rdi, rax	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007ff	      0xe85afbffff	                           call sym.show	       234	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000804	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000808	          0x4889c7	                            mov rdi, rax	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x400080b	      0xe800000000	                          call 0x4000810	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000810	            0xeb0c	                           jmp 0x400081e	       235	rev-parse.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000812	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x4000816	          0x4889c7	                            mov rdi, rax	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x4000819	      0xe840fbffff	                           call sym.show	       237	rev-parse.c	FUNCTION_11	IF_1	CALL_5
0x400081e	      0xb801000000	                              mov eax, 1	       238	rev-parse.c	FUNCTION_11	IF_1
0x4000823	            0xeb05	                           jmp 0x400082a	       238	rev-parse.c	FUNCTION_11	IF_1
0x4000825	      0xb800000000	                              mov eax, 0	       240	rev-parse.c	FUNCTION_11
0x400082a	              0xc9	                                   leave	       241	rev-parse.c	FUNCTION_11
0x400082b	              0xc3	                                     ret	       241	rev-parse.c	FUNCTION_11
strbuf_addch	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,1:functions,0:FOR,0	33
0x40001c3	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_26
0x40001c4	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_26
0x40001c7	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_26
0x40001cb	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_26
0x40001cf	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_26
0x40001d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40001d6	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40001d9	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40001de	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40001e1	            0x7511	                           jne 0x40001f4	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x40001e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001e7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001ec	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001ef	      0xe800000000	                          call 0x40001f4	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x40001f8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_26
0x40001fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x4000200	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_26
0x4000204	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_26
0x4000208	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_26
0x400020c	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000210	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_26
0x4000213	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_26
0x4000216	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_26
0x4000218	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_26
0x400021c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_26
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_26
0x4000224	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_26
0x4000228	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_26
0x400022b	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_26
0x400022e	              0x90	                                     nop	       231	strbuf.h	FUNCTION_26
0x400022f	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_26
0x4000230	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_26
strbuf_setlen	SWITCH,0:WHILE,0:ELSE,1:DO,0:CALL,2:IF,2:functions,0:FOR,0	43
0x4000129	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_25
0x400012a	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_25
0x400012d	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_25
0x4000131	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_25
0x4000135	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_25
0x4000139	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_25	IF_1
0x400013d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_25	IF_1
0x4000140	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_25	IF_1
0x4000143	            0x740d	                            je 0x4000152	       162	strbuf.h	FUNCTION_25	IF_1
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_25	IF_1
0x4000149	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_25	IF_1
0x400014c	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_25	IF_1
0x4000150	            0xeb05	                           jmp 0x4000157	       162	strbuf.h	FUNCTION_25	IF_1
0x4000152	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_25	IF_1
0x4000157	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_25	IF_1
0x400015b	            0x730f	                           jae 0x400016c	       162	strbuf.h	FUNCTION_25	IF_1
0x400015d	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_25	CALL_1
0x4000162	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_25	CALL_1
0x4000167	      0xe800000000	                          call 0x400016c	       163	strbuf.h	FUNCTION_25	CALL_1
0x400016c	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_25
0x4000170	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_25
0x4000174	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_25
0x4000178	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_25	IF_2
0x400017c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_25	IF_2
0x4000180	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_25	IF_2
0x4000186	            0x7414	                            je 0x400019c	       165	strbuf.h	FUNCTION_25	IF_2
0x4000188	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_25	IF_2
0x400018c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_25	IF_2
0x4000190	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_25	IF_2
0x4000194	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_25	IF_2
0x4000197	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_25	IF_2
0x400019a	            0xeb24	                           jmp 0x40001c0	       169	strbuf.h	FUNCTION_25
0x400019c	     0xfb605000000	           movzx eax, byte [0x040001a3] 	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001a3	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001a5	            0x7419	                            je 0x40001c0	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001a7	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001ac	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001b1	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001b6	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001bb	      0xe800000000	                          call 0x40001c0	       168	strbuf.h	FUNCTION_25	CALL_2
0x40001c0	              0x90	                                     nop	       169	strbuf.h	FUNCTION_25
0x40001c1	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_25
0x40001c2	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_25
handle_ref_opt	SWITCH,0:WHILE,0:ELSE,1:DO,0:CALL,3:IF,1:functions,0:FOR,0	24
0x4001625	              0x55	                                push rbp	       571	rev-parse.c	FUNCTION_21
0x4001626	          0x4889e5	                            mov rbp, rsp	       571	rev-parse.c	FUNCTION_21
0x4001629	        0x4883ec10	                           sub rsp, 0x10	       571	rev-parse.c	FUNCTION_21
0x400162d	        0x48897df8	                mov qword [rbp - 8], rdi	       571	rev-parse.c	FUNCTION_21
0x4001631	        0x488975f0	             mov qword [rbp - 0x10], rsi	       571	rev-parse.c	FUNCTION_21
0x4001635	      0x48837df800	                  cmp qword [rbp - 8], 0	       572	rev-parse.c	FUNCTION_21	IF_1
0x400163a	            0x741c	                            je 0x4001658	       572	rev-parse.c	FUNCTION_21	IF_1
0x400163c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001640	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001644	      0xb900000000	                              mov ecx, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001649	          0x4889c6	                            mov rsi, rax	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400164c	      0xbf00000000	                              mov edi, 0	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001651	      0xe800000000	                          call 0x4001656	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001656	            0xeb16	                           jmp 0x400166e	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4001658	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	rev-parse.c	FUNCTION_21	CALL_2
0x400165c	      0xba00000000	                              mov edx, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x4001661	      0xbe00000000	                              mov esi, 0	       575	rev-parse.c	FUNCTION_21	CALL_2
0x4001666	          0x4889c7	                            mov rdi, rax	       575	rev-parse.c	FUNCTION_21	CALL_2
0x4001669	      0xe800000000	                          call 0x400166e	       575	rev-parse.c	FUNCTION_21	CALL_2
0x400166e	      0xbf00000000	                              mov edi, 0	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4001673	      0xe800000000	                          call 0x4001678	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4001678	              0x90	                                     nop	       577	rev-parse.c	FUNCTION_21
0x4001679	              0xc9	                                   leave	       577	rev-parse.c	FUNCTION_21
0x400167a	              0xc3	                                     ret	       577	rev-parse.c	FUNCTION_21
cmd_parseopt	SWITCH,1:WHILE,2:ELSE,2:DO,0:CALL,33:IF,10:functions,0:FOR,1	473
0x4000df9	              0x55	                                push rbp	       399	rev-parse.c	FUNCTION_17
0x4000dfa	          0x4889e5	                            mov rbp, rsp	       399	rev-parse.c	FUNCTION_17
0x4000dfd	              0x53	                                push rbx	       399	rev-parse.c	FUNCTION_17
0x4000dfe	    0x4881eca80000	                           sub rsp, 0xa8	       399	rev-parse.c	FUNCTION_17
0x4000e05	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       399	rev-parse.c	FUNCTION_17
0x4000e0b	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       399	rev-parse.c	FUNCTION_17
0x4000e12	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       399	rev-parse.c	FUNCTION_17
0x4000e19	    0x64488b042528	                mov rax, qword fs:[0x28]	       399	rev-parse.c	FUNCTION_17
0x4000e22	        0x488945e8	             mov qword [rbp - 0x18], rax	       399	rev-parse.c	FUNCTION_17
0x4000e26	            0x31c0	                            xor eax, eax	       399	rev-parse.c	FUNCTION_17
0x4000e28	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       417	rev-parse.c	FUNCTION_17
0x4000e30	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       417	rev-parse.c	FUNCTION_17
0x4000e38	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       417	rev-parse.c	FUNCTION_17
0x4000e40	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       417	rev-parse.c	FUNCTION_17
0x4000e48	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       417	rev-parse.c	FUNCTION_17
0x4000e50	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       417	rev-parse.c	FUNCTION_17
0x4000e58	    0x48c745880000	               mov qword [rbp - 0x78], 0	       418	rev-parse.c	FUNCTION_17
0x4000e60	    0x48c745900000	               mov qword [rbp - 0x70], 0	       419	rev-parse.c	FUNCTION_17
0x4000e68	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	       420	rev-parse.c	FUNCTION_17
0x4000e72	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       420	rev-parse.c	FUNCTION_17
0x4000e7c	    0xc74580000000	               mov dword [rbp - 0x80], 0	       420	rev-parse.c	FUNCTION_17
0x4000e83	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       420	rev-parse.c	FUNCTION_17
0x4000e8a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       422	rev-parse.c	FUNCTION_17	CALL_5
0x4000e8e	      0xbe00000000	                              mov esi, 0	       422	rev-parse.c	FUNCTION_17	CALL_5
0x4000e93	          0x4889c7	                            mov rdi, rax	       422	rev-parse.c	FUNCTION_17	CALL_5
0x4000e96	      0xe896f3ffff	                  call sym.strbuf_addstr	       422	rev-parse.c	FUNCTION_17	CALL_5
0x4000e9b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ea2	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ea9	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000eaf	    0x41b901000000	                              mov r9d, 1	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000eb5	    0x41b800000000	                              mov r8d, 0	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ebb	      0xb900000000	                              mov ecx, 0	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ec0	            0x89c7	                            mov edi, eax	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ec2	      0xe800000000	                          call 0x4000ec7	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ec7	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       423	rev-parse.c	FUNCTION_17	CALL_6
0x4000ecd	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ed4	            0x7e1b	                           jle 0x4000ef1	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ed6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000edd	          0x488b00	                    mov rax, qword [rax]	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ee0	      0xbe00000000	                              mov esi, 0	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ee5	          0x4889c7	                            mov rdi, rax	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ee8	      0xe800000000	                          call 0x4000eed	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000eed	            0x85c0	                           test eax, eax	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000eef	            0x740f	                            je 0x4000f00	       425	rev-parse.c	FUNCTION_17	IF_1	CALL_7
0x4000ef1	      0xbe00000000	                              mov esi, 0	       426	rev-parse.c	FUNCTION_17	CALL_8
0x4000ef6	      0xbf00000000	                              mov edi, 0	       426	rev-parse.c	FUNCTION_17	CALL_8
0x4000efb	      0xe800000000	                          call 0x4000f00	       426	rev-parse.c	FUNCTION_17	CALL_8
0x4000f00	    0x488b15000000	            mov rdx, qword [0x04000f07] 	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f07	        0x488d45b0	                   lea rax, [rbp - 0x50]	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f0b	          0x4889d6	                            mov rsi, rdx	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f0e	          0x4889c7	                            mov rdi, rax	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f11	      0xe800000000	                          call 0x4000f16	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f16	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f19	            0x750f	                           jne 0x4000f2a	       430	rev-parse.c	FUNCTION_17	FOR_1	IF_2	CALL_9
0x4000f1b	      0xbf00000000	                              mov edi, 0	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_10
0x4000f20	      0xb800000000	                              mov eax, 0	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_10
0x4000f25	      0xe800000000	                          call 0x4000f2a	       431	rev-parse.c	FUNCTION_17	FOR_1	CALL_10
0x4000f2a	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f2d	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f30	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f33	            0x7e6c	                           jle 0x4000fa1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f35	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f38	          0x8d5010	                   lea edx, [rax + 0x10]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f3b	            0x89d0	                            mov eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f3d	             0x1c0	                            add eax, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f3f	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f41	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f43	          0xc1ea1f	                           shr edx, 0x1f	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f46	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f48	            0xd1f8	                              sar eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f4a	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f4c	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f4f	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f52	            0x39c2	                            cmp edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f54	            0x7d0b	                           jge 0x4000f61	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f56	          0x8b4580	             mov eax, dword [rbp - 0x80]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f59	          0x83c001	                              add eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f5c	          0x894584	             mov dword [rbp - 0x7c], eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f5f	            0xeb18	                           jmp 0x4000f79	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f61	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f64	          0x8d5010	                   lea edx, [rax + 0x10]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f67	            0x89d0	                            mov eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f69	             0x1c0	                            add eax, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f6b	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f6d	            0x89c2	                            mov edx, eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f6f	          0xc1ea1f	                           shr edx, 0x1f	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f72	             0x1d0	                            add eax, edx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f74	            0xd1f8	                              sar eax, 1	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f76	          0x894584	             mov dword [rbp - 0x7c], eax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f79	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f7c	            0x4898	                                    cdqe	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f7e	          0x4889c6	                            mov rsi, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f81	      0xbf08000000	                              mov edi, 8	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f86	      0xe816f1ffff	                        call sym.st_mult	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f8b	          0x4889c2	                            mov rdx, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f8e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f92	          0x4889d6	                            mov rsi, rdx	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f95	          0x4889c7	                            mov rdi, rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f98	      0xe800000000	                          call 0x4000f9d	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000f9d	        0x48894588	             mov qword [rbp - 0x78], rax	       432	rev-parse.c	FUNCTION_17	FOR_1	CALL_11
0x4000fa1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fa5	          0x4889c6	                            mov rsi, rax	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fa8	      0xbf00000000	                              mov edi, 0	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fad	      0xe800000000	                          call 0x4000fb2	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fb2	            0x85c0	                           test eax, eax	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fb4	            0x7536	                           jne 0x4000fec	       433	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_12
0x4000fb6	        0x837d8000	               cmp dword [rbp - 0x80], 0	       434	rev-parse.c	FUNCTION_17	FOR_1	IF_3	IF_4
0x4000fba	            0x7f0f	                            jg 0x4000fcb	       434	rev-parse.c	FUNCTION_17	FOR_1	IF_3	IF_4
0x4000fbc	      0xbf00000000	                              mov edi, 0	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_13
0x4000fc1	      0xb800000000	                              mov eax, 0	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_13
0x4000fc6	      0xe800000000	                          call 0x4000fcb	       435	rev-parse.c	FUNCTION_17	FOR_1	IF_3	CALL_13
0x4000fcb	          0x8b4580	             mov eax, dword [rbp - 0x80]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fce	            0x4898	                                    cdqe	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fd0	    0x488d14c50000	                        lea rdx, [rax*8]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fd8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fdc	          0x4801d0	                            add rax, rdx	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fdf	    0x48c700000000	                      mov qword [rax], 0	       436	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fe6	              0x90	                                     nop	       437	rev-parse.c	FUNCTION_17	FOR_1	IF_3
0x4000fe7	      0xe97b030000	                           jmp 0x4001367	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4000fec	          0x8b4580	             mov eax, dword [rbp - 0x80]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4000fef	          0x8d5001	                      lea edx, [rax + 1]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4000ff2	          0x895580	             mov dword [rbp - 0x80], edx	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4000ff5	            0x4898	                                    cdqe	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4000ff7	    0x488d14c50000	                        lea rdx, [rax*8]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4000fff	        0x488b4588	             mov rax, qword [rbp - 0x78]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4001003	        0x488d1c02	                    lea rbx, [rdx + rax]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4001007	        0x488d45b0	                   lea rax, [rbp - 0x50]	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x400100b	      0xbe00000000	                              mov esi, 0	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4001010	          0x4889c7	                            mov rdi, rax	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4001013	      0xe800000000	                          call 0x4001018	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x4001018	          0x488903	                    mov qword [rbx], rax	       439	rev-parse.c	FUNCTION_17	FOR_1	CALL_14
0x400101b	      0xe9e0feffff	                           jmp 0x4000f00	       440	rev-parse.c	FUNCTION_17	FOR_1
0x4001020	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0x4001024	          0x4885c0	                           test rax, rax	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0x4001027	            0x7505	                           jne 0x400102e	       448	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0x4001029	      0xe939030000	                           jmp 0x4001367	       449	rev-parse.c	FUNCTION_17	WHILE_1	IF_5
0x400102e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001034	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001037	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400103d	     0xf8e81000000	                           jle 0x40010c4	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001043	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001049	          0x8d5010	                   lea edx, [rax + 0x10]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400104c	            0x89d0	                            mov eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400104e	             0x1c0	                            add eax, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001050	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001052	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001054	          0xc1ea1f	                           shr edx, 0x1f	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001057	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001059	            0xd1f8	                              sar eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400105b	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400105d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001063	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001066	            0x39c2	                            cmp edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001068	            0x7d11	                           jge 0x400107b	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400106a	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001070	          0x83c001	                              add eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001073	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001079	            0xeb1e	                           jmp 0x4001099	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400107b	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001081	          0x8d5010	                   lea edx, [rax + 0x10]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001084	            0x89d0	                            mov eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001086	             0x1c0	                            add eax, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001088	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400108a	            0x89c2	                            mov edx, eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400108c	          0xc1ea1f	                           shr edx, 0x1f	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400108f	             0x1d0	                            add eax, edx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001091	            0xd1f8	                              sar eax, 1	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001093	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x4001099	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x400109f	            0x4898	                                    cdqe	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010a1	          0x4889c6	                            mov rsi, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010a4	      0xbf40000000	                           mov edi, 0x40	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010a9	      0xe8f3efffff	                        call sym.st_mult	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010ae	          0x4889c2	                            mov rdx, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010b1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010b5	          0x4889d6	                            mov rsi, rdx	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010b8	          0x4889c7	                            mov rdi, rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010bb	      0xe800000000	                          call 0x40010c0	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010c0	        0x48894590	             mov qword [rbp - 0x70], rax	       451	rev-parse.c	FUNCTION_17	WHILE_1	CALL_16
0x40010c4	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010ca	            0x4898	                                    cdqe	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010cc	        0x48c1e006	                              shl rax, 6	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010d0	          0x4889c2	                            mov rdx, rax	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010d3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010d7	          0x4801d0	                            add rax, rdx	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010da	      0xba40000000	                           mov edx, 0x40	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010df	      0xbe00000000	                              mov esi, 0	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010e4	          0x4889c7	                            mov rdi, rax	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010e7	      0xe800000000	                          call 0x40010ec	       452	rev-parse.c	FUNCTION_17	WHILE_1	CALL_17
0x40010ec	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x40010f2	          0x8d5001	                      lea edx, [rax + 1]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x40010f5	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x40010fb	            0x4898	                                    cdqe	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x40010fd	        0x48c1e006	                              shl rax, 6	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x4001101	          0x4889c2	                            mov rdx, rax	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x4001104	        0x488b4590	             mov rax, qword [rbp - 0x70]	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x4001108	          0x4801d0	                            add rax, rdx	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x400110b	        0x488945a0	             mov qword [rbp - 0x60], rax	       454	rev-parse.c	FUNCTION_17	WHILE_1
0x400110f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_18
0x4001113	          0x4889c7	                            mov rdi, rax	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_18
0x4001116	      0xe89afcffff	                      call sym.findspace	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_18
0x400111b	        0x488945a8	             mov qword [rbp - 0x58], rax	       455	rev-parse.c	FUNCTION_17	WHILE_1	CALL_18
0x400111f	      0x48837da800	               cmp qword [rbp - 0x58], 0	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x4001124	            0x740a	                            je 0x4001130	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x4001126	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x400112a	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x400112e	            0x752e	                           jne 0x400115e	       456	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x4001130	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       457	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x4001134	    0xc70002000000	                      mov dword [rax], 2	       457	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x400113a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x400113e	          0x4889c7	                            mov rdi, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001141	      0xe83dfcffff	                     call sym.skipspaces	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001146	          0x4889c7	                            mov rdi, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001149	      0xe800000000	                          call 0x400114e	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x400114e	          0x4889c2	                            mov rdx, rax	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001151	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001155	        0x48895020	             mov qword [rax + 0x20], rdx	       458	rev-parse.c	FUNCTION_17	WHILE_1	IF_6	CALL_20
0x4001159	      0xe909020000	                           jmp 0x4001367	       459	rev-parse.c	FUNCTION_17	WHILE_1	IF_6
0x400115e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       462	rev-parse.c	FUNCTION_17	WHILE_1
0x4001162	          0xc60000	                       mov byte [rax], 0	       462	rev-parse.c	FUNCTION_17	WHILE_1
0x4001165	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       464	rev-parse.c	FUNCTION_17	WHILE_1
0x4001169	    0xc7000c000000	                    mov dword [rax], 0xc	       464	rev-parse.c	FUNCTION_17	WHILE_1
0x400116f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x4001173	        0x4883c001	                              add rax, 1	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x4001177	          0x4889c7	                            mov rdi, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x400117a	      0xe804fcffff	                     call sym.skipspaces	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x400117f	          0x4889c7	                            mov rdi, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x4001182	      0xe800000000	                          call 0x4001187	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x4001187	          0x4889c2	                            mov rdx, rax	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x400118a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x400118e	        0x48895020	             mov qword [rax + 0x20], rdx	       465	rev-parse.c	FUNCTION_17	WHILE_1	CALL_22
0x4001192	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x4001196	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x400119a	        0x48895010	             mov qword [rax + 0x10], rdx	       466	rev-parse.c	FUNCTION_17	WHILE_1
0x400119e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       467	rev-parse.c	FUNCTION_17	WHILE_1
0x40011a2	    0xc74028020000	               mov dword [rax + 0x28], 2	       467	rev-parse.c	FUNCTION_17	WHILE_1
0x40011a9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       468	rev-parse.c	FUNCTION_17	WHILE_1
0x40011ad	    0x48c740300000	               mov qword [rax + 0x30], 0	       468	rev-parse.c	FUNCTION_17	WHILE_1
0x40011b5	    0x488b15000000	            mov rdx, qword [0x040011bc] 	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011bc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011c0	          0x4889d6	                            mov rsi, rdx	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011c3	          0x4889c7	                            mov rdi, rax	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011c6	      0xe800000000	                          call 0x40011cb	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011cb	        0x48894598	             mov qword [rbp - 0x68], rax	       471	rev-parse.c	FUNCTION_17	WHILE_1	CALL_23
0x40011cf	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       472	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x40011d4	            0x7508	                           jne 0x40011de	       472	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x40011d6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       473	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x40011da	        0x48894598	             mov qword [rbp - 0x68], rax	       473	rev-parse.c	FUNCTION_17	WHILE_1	IF_7
0x40011de	        0x488b4598	             mov rax, qword [rbp - 0x68]	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011e2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011e6	          0x4829d0	                            sub rax, rdx	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011e9	        0x4883f801	                              cmp rax, 1	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011ed	            0x7516	                           jne 0x4001205	       475	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011f3	           0xfb600	                   movzx eax, byte [rax]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011f6	           0xfbed0	                           movsx edx, al	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x40011fd	          0x895004	                mov dword [rax + 4], edx	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x4001200	      0xe91f010000	                           jmp 0x4001324	       476	rev-parse.c	FUNCTION_17	WHILE_1	IF_8
0x4001205	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001209	        0x4883c001	                              add rax, 1	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x400120d	           0xfb600	                   movzx eax, byte [rax]	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001210	            0x3c2c	                            cmp al, 0x2c	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001212	            0x742d	                            je 0x4001241	       477	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001214	        0x488b4598	             mov rax, qword [rbp - 0x68]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001218	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x400121c	          0x4829d0	                            sub rax, rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x400121f	          0x4889c2	                            mov rdx, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001222	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001226	          0x4889d6	                            mov rsi, rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001229	          0x4889c7	                            mov rdi, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x400122c	      0xe800000000	                          call 0x4001231	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001231	          0x4889c2	                            mov rdx, rax	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001234	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001238	        0x48895008	                mov qword [rax + 8], rdx	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x400123c	      0xe9e3000000	                           jmp 0x4001324	       478	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x4001241	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x4001245	           0xfb600	                   movzx eax, byte [rax]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x4001248	           0xfbed0	                           movsx edx, al	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x400124b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x400124f	          0x895004	                mov dword [rax + 4], edx	       480	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2
0x4001252	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001256	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400125a	          0x4829d0	                            sub rax, rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400125d	        0x4883e802	                              sub rax, 2	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001261	          0x4889c2	                            mov rdx, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001264	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001268	        0x4883c002	                              add rax, 2	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400126c	          0x4889d6	                            mov rsi, rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400126f	          0x4889c7	                            mov rdi, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001272	      0xe800000000	                          call 0x4001277	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001277	          0x4889c2	                            mov rdx, rax	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400127a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x400127e	        0x48895008	                mov qword [rax + 8], rdx	       481	rev-parse.c	FUNCTION_17	WHILE_1	ELSE_2	CALL_25
0x4001282	      0xe99d000000	                           jmp 0x4001324	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x4001287	        0x488b4598	             mov rax, qword [rbp - 0x68]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400128b	        0x488d5001	                      lea rdx, [rax + 1]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400128f	        0x48895598	             mov qword [rbp - 0x68], rdx	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001293	           0xfb600	                   movzx eax, byte [rax]	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001296	           0xfbec0	                           movsx eax, al	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001299	          0x83f82a	                           cmp eax, 0x2a	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400129c	            0x746a	                            je 0x4001308	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400129e	          0x83f82a	                           cmp eax, 0x2a	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012a1	            0x7f07	                            jg 0x40012aa	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012a3	          0x83f821	                           cmp eax, 0x21	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012a6	            0x744b	                            je 0x40012f3	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012a8	            0xeb73	                           jmp 0x400131d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012aa	          0x83f83d	                           cmp eax, 0x3d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012ad	            0x7407	                            je 0x40012b6	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012af	          0x83f83f	                           cmp eax, 0x3f	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012b2	            0x7417	                            je 0x40012cb	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012b4	            0xeb67	                           jmp 0x400131d	       486	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012ba	          0x8b4028	            mov eax, dword [rax + 0x28] 	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012bd	          0x83e0fd	                     and eax, 0xfffffffd	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012c0	            0x89c2	                            mov edx, eax	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012c2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012c6	          0x895028	             mov dword [rax + 0x28], edx	       488	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012c9	            0xeb59	                           jmp 0x4001324	       489	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012cb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012cf	          0x8b4028	            mov eax, dword [rax + 0x28] 	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012d2	          0x83e0fd	                     and eax, 0xfffffffd	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012d5	            0x89c2	                            mov edx, eax	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012d7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012db	          0x895028	             mov dword [rax + 0x28], edx	       491	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012e2	          0x8b4028	            mov eax, dword [rax + 0x28] 	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012e5	          0x83c801	                               or eax, 1	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012e8	            0x89c2	                            mov edx, eax	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012ee	          0x895028	             mov dword [rax + 0x28], edx	       492	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012f1	            0xeb31	                           jmp 0x4001324	       493	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012f3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012f7	          0x8b4028	            mov eax, dword [rax + 0x28] 	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012fa	          0x83c804	                               or eax, 4	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012fd	            0x89c2	                            mov edx, eax	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x40012ff	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001303	          0x895028	             mov dword [rax + 0x28], edx	       495	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001306	            0xeb1c	                           jmp 0x4001324	       496	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001308	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400130c	          0x8b4028	            mov eax, dword [rax + 0x28] 	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400130f	          0x83c808	                               or eax, 8	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001312	            0x89c2	                            mov edx, eax	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001314	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x4001318	          0x895028	             mov dword [rax + 0x28], edx	       498	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400131b	            0xeb07	                           jmp 0x4001324	       499	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2	SWITCH_1
0x400131d	      0x48836d9801	               sub qword [rbp - 0x68], 1	       501	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x4001322	            0xeb0e	                           jmp 0x4001332	       502	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x4001324	        0x488b4598	             mov rax, qword [rbp - 0x68]	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x4001328	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x400132c	     0xf8255ffffff	                            jb 0x4001287	       485	rev-parse.c	FUNCTION_17	WHILE_1	WHILE_2
0x4001332	        0x488b4598	             mov rax, qword [rbp - 0x68]	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x4001336	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x400133a	            0x732b	                           jae 0x4001367	       505	rev-parse.c	FUNCTION_17	WHILE_1	IF_10
0x400133c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001340	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001344	          0x4829c2	                            sub rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001347	          0x4889d0	                            mov rax, rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x400134a	          0x4889c2	                            mov rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x400134d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001351	          0x4889d6	                            mov rsi, rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001354	          0x4889c7	                            mov rdi, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001357	      0xe800000000	                          call 0x400135c	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x400135c	          0x4889c2	                            mov rdx, rax	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x400135f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001363	        0x48895018	             mov qword [rax + 0x18], rdx	       506	rev-parse.c	FUNCTION_17	WHILE_1	CALL_26
0x4001367	    0x488b15000000	            mov rdx, qword [0x0400136e] 	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x400136e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4001372	          0x4889d6	                            mov rsi, rdx	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4001375	          0x4889c7	                            mov rdi, rax	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4001378	      0xe800000000	                          call 0x400137d	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x400137d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4001380	     0xf859afcffff	                           jne 0x4001020	       443	rev-parse.c	FUNCTION_17	WHILE_1	CALL_15
0x4001386	        0x488d45b0	                   lea rax, [rbp - 0x50]	       508	rev-parse.c	FUNCTION_17	CALL_27
0x400138a	          0x4889c7	                            mov rdi, rax	       508	rev-parse.c	FUNCTION_17	CALL_27
0x400138d	      0xe800000000	                          call 0x4001392	       508	rev-parse.c	FUNCTION_17	CALL_27
0x4001392	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001398	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_28
0x400139b	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013a1	     0xf8e81000000	                           jle 0x4001428	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013a7	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ad	          0x8d5010	                   lea edx, [rax + 0x10]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013b0	            0x89d0	                            mov eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013b2	             0x1c0	                            add eax, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013b4	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013b6	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013b8	          0xc1ea1f	                           shr edx, 0x1f	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013bb	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013bd	            0xd1f8	                              sar eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013bf	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013c1	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013c7	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ca	            0x39c2	                            cmp edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013cc	            0x7d11	                           jge 0x40013df	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ce	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013d4	          0x83c001	                              add eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013d7	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013dd	            0xeb1e	                           jmp 0x40013fd	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013df	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013e5	          0x8d5010	                   lea edx, [rax + 0x10]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013e8	            0x89d0	                            mov eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ea	             0x1c0	                            add eax, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ec	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013ee	            0x89c2	                            mov edx, eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013f0	          0xc1ea1f	                           shr edx, 0x1f	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013f3	             0x1d0	                            add eax, edx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013f5	            0xd1f8	                              sar eax, 1	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013f7	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x40013fd	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001403	            0x4898	                                    cdqe	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001405	          0x4889c6	                            mov rsi, rax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001408	      0xbf40000000	                           mov edi, 0x40	       511	rev-parse.c	FUNCTION_17	CALL_28
0x400140d	      0xe88fecffff	                        call sym.st_mult	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001412	          0x4889c2	                            mov rdx, rax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001415	        0x488b4590	             mov rax, qword [rbp - 0x70]	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001419	          0x4889d6	                            mov rsi, rdx	       511	rev-parse.c	FUNCTION_17	CALL_28
0x400141c	          0x4889c7	                            mov rdi, rax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x400141f	      0xe800000000	                          call 0x4001424	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001424	        0x48894590	             mov qword [rbp - 0x70], rax	       511	rev-parse.c	FUNCTION_17	CALL_28
0x4001428	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       512	rev-parse.c	FUNCTION_17	CALL_29
0x400142e	            0x4898	                                    cdqe	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001430	        0x48c1e006	                              shl rax, 6	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001434	          0x4889c2	                            mov rdx, rax	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001437	        0x488b4590	             mov rax, qword [rbp - 0x70]	       512	rev-parse.c	FUNCTION_17	CALL_29
0x400143b	          0x4801d0	                            add rax, rdx	       512	rev-parse.c	FUNCTION_17	CALL_29
0x400143e	      0xba40000000	                           mov edx, 0x40	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001443	      0xbe00000000	                              mov esi, 0	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001448	          0x4889c7	                            mov rdi, rax	       512	rev-parse.c	FUNCTION_17	CALL_29
0x400144b	      0xe800000000	                          call 0x4001450	       512	rev-parse.c	FUNCTION_17	CALL_29
0x4001450	    0x8b0500000000	            mov eax, dword [0x04001456] 	       514	rev-parse.c	FUNCTION_17
0x4001456	            0x85c0	                           test eax, eax	       514	rev-parse.c	FUNCTION_17
0x4001458	           0xf95c0	                                setne al	       514	rev-parse.c	FUNCTION_17
0x400145b	           0xfb6d0	                           movzx edx, al	       514	rev-parse.c	FUNCTION_17
0x400145e	    0x8b0500000000	            mov eax, dword [0x04001464] 	       515	rev-parse.c	FUNCTION_17
0x4001464	            0x85c0	                           test eax, eax	       515	rev-parse.c	FUNCTION_17
0x4001466	            0x7407	                            je 0x400146f	       515	rev-parse.c	FUNCTION_17
0x4001468	      0xb802000000	                              mov eax, 2	       515	rev-parse.c	FUNCTION_17
0x400146d	            0xeb05	                           jmp 0x4001474	       515	rev-parse.c	FUNCTION_17
0x400146f	      0xb800000000	                              mov eax, 0	       515	rev-parse.c	FUNCTION_17
0x4001474	             0x9d0	                             or eax, edx	       514	rev-parse.c	FUNCTION_17
0x4001476	          0x80cc01	                                or ah, 1	       513	rev-parse.c	FUNCTION_17	CALL_30
0x4001479	          0x4189c0	                            mov r8d, eax	       513	rev-parse.c	FUNCTION_17	CALL_30
0x400147c	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	       513	rev-parse.c	FUNCTION_17	CALL_30
0x4001480	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       513	rev-parse.c	FUNCTION_17	CALL_30
0x4001484	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       513	rev-parse.c	FUNCTION_17	CALL_30
0x400148b	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       513	rev-parse.c	FUNCTION_17	CALL_30
0x4001492	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       513	rev-parse.c	FUNCTION_17	CALL_30
0x4001498	          0x4589c1	                            mov r9d, r8d	       513	rev-parse.c	FUNCTION_17	CALL_30
0x400149b	          0x4989f8	                             mov r8, rdi	       513	rev-parse.c	FUNCTION_17	CALL_30
0x400149e	            0x89c7	                            mov edi, eax	       513	rev-parse.c	FUNCTION_17	CALL_30
0x40014a0	      0xe800000000	                          call 0x40014a5	       513	rev-parse.c	FUNCTION_17	CALL_30
0x40014a5	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       513	rev-parse.c	FUNCTION_17	CALL_30
0x40014ab	        0x488d45d0	                   lea rax, [rbp - 0x30]	       518	rev-parse.c	FUNCTION_17	CALL_31
0x40014af	      0xbe00000000	                              mov esi, 0	       518	rev-parse.c	FUNCTION_17	CALL_31
0x40014b4	          0x4889c7	                            mov rdi, rax	       518	rev-parse.c	FUNCTION_17	CALL_31
0x40014b7	      0xe875edffff	                  call sym.strbuf_addstr	       518	rev-parse.c	FUNCTION_17	CALL_31
0x40014bc	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       519	rev-parse.c	FUNCTION_17	CALL_32
0x40014c3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       519	rev-parse.c	FUNCTION_17	CALL_32
0x40014c7	          0x4889d6	                            mov rsi, rdx	       519	rev-parse.c	FUNCTION_17	CALL_32
0x40014ca	          0x4889c7	                            mov rdi, rax	       519	rev-parse.c	FUNCTION_17	CALL_32
0x40014cd	      0xe800000000	                          call 0x40014d2	       519	rev-parse.c	FUNCTION_17	CALL_32
0x40014d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       520	rev-parse.c	FUNCTION_17	CALL_33
0x40014d6	          0x4889c7	                            mov rdi, rax	       520	rev-parse.c	FUNCTION_17	CALL_33
0x40014d9	      0xe800000000	                          call 0x40014de	       520	rev-parse.c	FUNCTION_17	CALL_33
0x40014de	      0xb800000000	                              mov eax, 0	       521	rev-parse.c	FUNCTION_17
0x40014e3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       522	rev-parse.c	FUNCTION_17
0x40014e7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       522	rev-parse.c	FUNCTION_17
0x40014f0	            0x7405	                            je 0x40014f7	       522	rev-parse.c	FUNCTION_17
0x40014f2	      0xe800000000	                          call 0x40014f7	       522	rev-parse.c	FUNCTION_17
0x40014f7	    0x4881c4a80000	                           add rsp, 0xa8	       522	rev-parse.c	FUNCTION_17
0x40014fe	              0x5b	                                 pop rbx	       522	rev-parse.c	FUNCTION_17
0x40014ff	              0x5d	                                 pop rbp	       522	rev-parse.c	FUNCTION_17
0x4001500	              0xc3	                                     ret	       522	rev-parse.c	FUNCTION_17
show_reference	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,1:functions,0:FOR,0	24
0x400068d	              0x55	                                push rbp	       196	rev-parse.c	FUNCTION_7
0x400068e	          0x4889e5	                            mov rbp, rsp	       196	rev-parse.c	FUNCTION_7
0x4000691	        0x4883ec20	                           sub rsp, 0x20	       196	rev-parse.c	FUNCTION_7
0x4000695	        0x48897df8	                mov qword [rbp - 8], rdi	       196	rev-parse.c	FUNCTION_7
0x4000699	        0x488975f0	             mov qword [rbp - 0x10], rsi	       196	rev-parse.c	FUNCTION_7
0x400069d	          0x8955ec	             mov dword [rbp - 0x14], edx	       196	rev-parse.c	FUNCTION_7
0x40006a0	        0x48894de0	             mov qword [rbp - 0x20], rcx	       196	rev-parse.c	FUNCTION_7
0x40006a4	    0x488b05000000	            mov rax, qword [0x040006ab] 	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006ab	        0x488b55f8	                mov rdx, qword [rbp - 8]	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006af	          0x4889d6	                            mov rsi, rdx	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006b2	          0x4889c7	                            mov rdi, rax	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006b5	      0xe800000000	                          call 0x40006ba	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006ba	            0x85c0	                           test eax, eax	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006bc	            0x7407	                            je 0x40006c5	       197	rev-parse.c	FUNCTION_7	IF_1	CALL_1
0x40006be	      0xb800000000	                              mov eax, 0	       198	rev-parse.c	FUNCTION_7	IF_1
0x40006c3	            0xeb1a	                           jmp 0x40006df	       198	rev-parse.c	FUNCTION_7	IF_1
0x40006c5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40006c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40006cd	          0x4889c6	                            mov rsi, rax	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40006d0	      0xbf00000000	                              mov edi, 0	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40006d5	      0xe850fdffff	                       call sym.show_rev	       199	rev-parse.c	FUNCTION_7	CALL_2
0x40006da	      0xb800000000	                              mov eax, 0	       200	rev-parse.c	FUNCTION_7
0x40006df	              0xc9	                                   leave	       201	rev-parse.c	FUNCTION_7
0x40006e0	              0xc3	                                     ret	       201	rev-parse.c	FUNCTION_7
strbuf_addstr	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,0:functions,0:FOR,0	17
0x4000231	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_27
0x4000232	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_27
0x4000235	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_27
0x4000239	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_27
0x400023d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_27
0x4000241	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000245	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000248	      0xe800000000	                          call 0x400024d	       279	strbuf.h	FUNCTION_27	CALL_2
0x400024d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000250	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000258	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_27	CALL_2
0x400025b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x400025e	      0xe800000000	                          call 0x4000263	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000263	              0x90	                                     nop	       280	strbuf.h	FUNCTION_27
0x4000264	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_27
0x4000265	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_27
cmd_rev_parse	SWITCH,0:WHILE,1:ELSE,8:DO,0:CALL,145:IF,92:functions,0:FOR,3	1083
0x400167b	              0x55	                                push rbp	       580	rev-parse.c	FUNCTION_22
0x400167c	          0x4889e5	                            mov rbp, rsp	       580	rev-parse.c	FUNCTION_22
0x400167f	    0x4881ec300100	                          sub rsp, 0x130	       580	rev-parse.c	FUNCTION_22
0x4001686	    0x89bdecfeffff	            mov dword [rbp - 0x114], edi	       580	rev-parse.c	FUNCTION_22
0x400168c	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	       580	rev-parse.c	FUNCTION_22
0x4001693	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       580	rev-parse.c	FUNCTION_22
0x400169a	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	rev-parse.c	FUNCTION_22
0x40016a3	        0x488945f8	                mov qword [rbp - 8], rax	       580	rev-parse.c	FUNCTION_22
0x40016a7	            0x31c0	                            xor eax, eax	       580	rev-parse.c	FUNCTION_22
0x40016a9	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	       581	rev-parse.c	FUNCTION_22
0x40016b3	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	       581	rev-parse.c	FUNCTION_22
0x40016bd	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	       581	rev-parse.c	FUNCTION_22
0x40016c7	    0xc78508ffffff	               mov dword [rbp - 0xf8], 0	       581	rev-parse.c	FUNCTION_22
0x40016d1	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	       581	rev-parse.c	FUNCTION_22
0x40016db	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	       582	rev-parse.c	FUNCTION_22
0x40016e5	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	       583	rev-parse.c	FUNCTION_22
0x40016ef	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       584	rev-parse.c	FUNCTION_22
0x40016f9	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	       586	rev-parse.c	FUNCTION_22
0x4001703	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       587	rev-parse.c	FUNCTION_22
0x400170e	    0x48c745800000	               mov qword [rbp - 0x80], 0	       589	rev-parse.c	FUNCTION_22
0x4001716	    0x48c745880000	               mov qword [rbp - 0x78], 0	       589	rev-parse.c	FUNCTION_22
0x400171e	    0x48c745900000	               mov qword [rbp - 0x70], 0	       589	rev-parse.c	FUNCTION_22
0x4001726	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400172d	            0x7e49	                           jle 0x4001778	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400172f	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x4001736	        0x4883c008	                              add rax, 8	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400173a	          0x488b00	                    mov rax, qword [rax]	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400173d	          0x4889c6	                            mov rsi, rax	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x4001740	      0xbf00000000	                              mov edi, 0	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x4001745	      0xe800000000	                          call 0x400174a	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400174a	            0x85c0	                           test eax, eax	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400174c	            0x752a	                           jne 0x4001778	       591	rev-parse.c	FUNCTION_22	IF_1	CALL_1
0x400174e	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001755	        0x488d7008	                      lea rsi, [rax + 8]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001759	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x400175f	          0x8d48ff	                      lea ecx, [rax - 1]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001762	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001769	          0x4889c2	                            mov rdx, rax	       592	rev-parse.c	FUNCTION_22	CALL_2
0x400176c	            0x89cf	                            mov edi, ecx	       592	rev-parse.c	FUNCTION_22	CALL_2
0x400176e	      0xe886f6ffff	                   call sym.cmd_parseopt	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001773	      0xe9a4120000	                           jmp 0x4002a1c	       592	rev-parse.c	FUNCTION_22	CALL_2
0x4001778	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x400177f	            0x7e42	                           jle 0x40017c3	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x4001781	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x4001788	        0x4883c008	                              add rax, 8	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x400178c	          0x488b00	                    mov rax, qword [rax]	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x400178f	          0x4889c6	                            mov rsi, rax	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x4001792	      0xbf00000000	                              mov edi, 0	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x4001797	      0xe800000000	                          call 0x400179c	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x400179c	            0x85c0	                           test eax, eax	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x400179e	            0x7523	                           jne 0x40017c3	       594	rev-parse.c	FUNCTION_22	IF_2	CALL_3
0x40017a0	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017a7	        0x488d5010	                   lea rdx, [rax + 0x10]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017ab	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017b1	          0x83e802	                              sub eax, 2	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017b4	          0x4889d6	                            mov rsi, rdx	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017b7	            0x89c7	                            mov edi, eax	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017b9	      0xe843fdffff	                   call sym.cmd_sq_quote	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017be	      0xe959120000	                           jmp 0x4002a1c	       595	rev-parse.c	FUNCTION_22	CALL_4
0x40017c3	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017ca	            0x7e29	                           jle 0x40017f5	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017cc	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017d3	        0x4883c008	                              add rax, 8	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017d7	          0x488b00	                    mov rax, qword [rax]	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017da	          0x4889c6	                            mov rsi, rax	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017dd	      0xbf00000000	                              mov edi, 0	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017e2	      0xe800000000	                          call 0x40017e7	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017e7	            0x85c0	                           test eax, eax	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017e9	            0x750a	                           jne 0x40017f5	       597	rev-parse.c	FUNCTION_22	IF_3	CALL_5
0x40017eb	      0xbf00000000	                              mov edi, 0	       598	rev-parse.c	FUNCTION_22	CALL_6
0x40017f0	      0xe800000000	                          call 0x40017f5	       598	rev-parse.c	FUNCTION_22	CALL_6
0x40017f5	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	       600	rev-parse.c	FUNCTION_22	FOR_1
0x40017ff	            0xeb41	                           jmp 0x4001842	       600	rev-parse.c	FUNCTION_22	FOR_1
0x4001801	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001807	            0x4898	                                    cdqe	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001809	    0x488d14c50000	                        lea rdx, [rax*8]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001811	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001818	          0x4801d0	                            add rax, rdx	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x400181b	          0x488b00	                    mov rax, qword [rax]	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x400181e	      0xbe00000000	                              mov esi, 0	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001823	          0x4889c7	                            mov rdi, rax	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x4001826	      0xe800000000	                          call 0x400182b	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x400182b	            0x85c0	                           test eax, eax	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x400182d	            0x750c	                           jne 0x400183b	       601	rev-parse.c	FUNCTION_22	FOR_1	IF_4	CALL_7
0x400182f	    0xc78514ffffff	               mov dword [rbp - 0xec], 1	       602	rev-parse.c	FUNCTION_22	FOR_1	IF_4
0x4001839	            0xeb15	                           jmp 0x4001850	       603	rev-parse.c	FUNCTION_22	FOR_1	IF_4
0x400183b	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       600	rev-parse.c	FUNCTION_22	FOR_1
0x4001842	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       600	rev-parse.c	FUNCTION_22	FOR_1
0x4001848	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       600	rev-parse.c	FUNCTION_22	FOR_1
0x400184e	            0x7cb1	                            jl 0x4001801	       600	rev-parse.c	FUNCTION_22	FOR_1
0x4001850	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 1	       608	rev-parse.c	FUNCTION_22	IF_5
0x4001857	            0x751e	                           jne 0x4001877	       608	rev-parse.c	FUNCTION_22	IF_5
0x4001859	      0xe800000000	                          call 0x400185e	       609	rev-parse.c	FUNCTION_22	IF_5	CALL_8
0x400185e	      0xbe00000000	                              mov esi, 0	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x4001863	      0xbf00000000	                              mov edi, 0	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x4001868	      0xe800000000	                          call 0x400186d	       610	rev-parse.c	FUNCTION_22	IF_5	CALL_9
0x400186d	      0xb800000000	                              mov eax, 0	       611	rev-parse.c	FUNCTION_22	IF_5
0x4001872	      0xe9a5110000	                           jmp 0x4002a1c	       611	rev-parse.c	FUNCTION_22	IF_5
0x4001877	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	       614	rev-parse.c	FUNCTION_22	FOR_2
0x4001881	      0xe912110000	                           jmp 0x4002998	       614	rev-parse.c	FUNCTION_22	FOR_2
0x4001886	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x400188c	            0x4898	                                    cdqe	       615	rev-parse.c	FUNCTION_22	FOR_2
0x400188e	    0x488d14c50000	                        lea rdx, [rax*8]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x4001896	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x400189d	          0x4801d0	                            add rax, rdx	       615	rev-parse.c	FUNCTION_22	FOR_2
0x40018a0	          0x488b00	                    mov rax, qword [rax]	       615	rev-parse.c	FUNCTION_22	FOR_2
0x40018a3	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       615	rev-parse.c	FUNCTION_22	FOR_2
0x40018aa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018b1	      0xbe00000000	                              mov esi, 0	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018b6	          0x4889c7	                            mov rdi, rax	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018b9	      0xe800000000	                          call 0x40018be	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018be	            0x85c0	                           test eax, eax	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018c0	            0x7545	                           jne 0x4001907	       617	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_10
0x40018c2	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018cc	            0xeb1f	                           jmp 0x40018ed	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018ce	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x40018d4	            0x4898	                                    cdqe	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x40018d6	    0x488b04c50000	                  mov rax, qword [rax*8]	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x40018de	          0x4889c7	                            mov rdi, rax	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x40018e1	      0xe800000000	                          call 0x40018e6	       620	rev-parse.c	FUNCTION_22	FOR_2	IF_6	CALL_11
0x40018e6	    0x838520ffffff	               add dword [rbp - 0xe0], 1	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018ed	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018f3	            0x4898	                                    cdqe	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018f5	    0x488b04c50000	                  mov rax, qword [rax*8]	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x40018fd	          0x4885c0	                           test rax, rax	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x4001900	            0x75cc	                           jne 0x40018ce	       619	rev-parse.c	FUNCTION_22	FOR_2	IF_6	FOR_3
0x4001902	      0xe98a100000	                           jmp 0x4002991	       621	rev-parse.c	FUNCTION_22	FOR_2	IF_6
0x4001907	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x400190e	      0xbe00000000	                              mov esi, 0	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x4001913	          0x4889c7	                            mov rdi, rax	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x4001916	      0xe800000000	                          call 0x400191b	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x400191b	            0x85c0	                           test eax, eax	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x400191d	     0xf85ac000000	                           jne 0x40019cf	       623	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_12
0x4001923	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x400192a	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x4001930	            0x4898	                                    cdqe	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x4001932	    0x488d14c50000	                        lea rdx, [rax*8]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x400193a	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x4001941	          0x4801d0	                            add rax, rdx	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x4001944	          0x488b00	                    mov rax, qword [rax]	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x4001947	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       624	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x400194e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       625	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_8
0x4001956	            0x750f	                           jne 0x4001967	       625	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_8
0x4001958	      0xbf00000000	                              mov edi, 0	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x400195d	      0xb800000000	                              mov eax, 0	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x4001962	      0xe800000000	                          call 0x4001967	       626	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_13
0x4001967	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x400196e	      0xbe00000000	                              mov esi, 0	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x4001973	          0x4889c7	                            mov rdi, rax	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x4001976	      0xe800000000	                          call 0x400197b	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x400197b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       627	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_14
0x4001982	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       628	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_9
0x400198a	            0x752f	                           jne 0x40019bb	       628	rev-parse.c	FUNCTION_22	FOR_2	IF_7	IF_9
0x400198c	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x4001992	            0x4898	                                    cdqe	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x4001994	    0x488d14c50000	                        lea rdx, [rax*8]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x400199c	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019a3	          0x4801d0	                            add rax, rdx	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019a6	          0x488b00	                    mov rax, qword [rax]	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019a9	          0x4889c6	                            mov rsi, rax	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019ac	      0xbf00000000	                              mov edi, 0	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019b1	      0xb800000000	                              mov eax, 0	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019b6	      0xe800000000	                          call 0x40019bb	       629	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_15
0x40019bb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x40019c2	          0x4889c7	                            mov rdi, rax	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x40019c5	      0xe800000000	                          call 0x40019ca	       630	rev-parse.c	FUNCTION_22	FOR_2	IF_7	CALL_16
0x40019ca	      0xe9c20f0000	                           jmp 0x4002991	       631	rev-parse.c	FUNCTION_22	FOR_2	IF_7
0x40019cf	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 0	       635	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x40019d6	            0x7525	                           jne 0x40019fd	       635	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x40019d8	      0xe800000000	                          call 0x40019dd	       636	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_17
0x40019dd	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       636	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_17
0x40019e4	      0xbe00000000	                              mov esi, 0	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x40019e9	      0xbf00000000	                              mov edi, 0	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x40019ee	      0xe800000000	                          call 0x40019f3	       637	rev-parse.c	FUNCTION_22	FOR_2	IF_10	CALL_18
0x40019f3	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	       638	rev-parse.c	FUNCTION_22	FOR_2	IF_10
0x40019fd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a04	      0xbe00000000	                              mov esi, 0	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a09	          0x4889c7	                            mov rdi, rax	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a0c	      0xe800000000	                          call 0x4001a11	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a11	            0x85c0	                           test eax, eax	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a13	     0xf85a6000000	                           jne 0x4001abf	       641	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_19
0x4001a19	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a1f	            0x4898	                                    cdqe	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a21	        0x4883c001	                              add rax, 1	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a25	    0x488d14c50000	                        lea rdx, [rax*8]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a2d	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a34	          0x4801d0	                            add rax, rdx	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a37	          0x488b00	                    mov rax, qword [rax]	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a3a	          0x4885c0	                           test rax, rax	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a3d	            0x750f	                           jne 0x4001a4e	       642	rev-parse.c	FUNCTION_22	FOR_2	IF_11	IF_12
0x4001a3f	      0xbf00000000	                              mov edi, 0	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x4001a44	      0xb800000000	                              mov eax, 0	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x4001a49	      0xe800000000	                          call 0x4001a4e	       643	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_20
0x4001a4e	        0x488d4580	                   lea rax, [rbp - 0x80]	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001a52	      0xbe00000000	                              mov esi, 0	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001a57	          0x4889c7	                            mov rdi, rax	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001a5a	      0xe8cae6ffff	                  call sym.strbuf_setlen	       644	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001a5f	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a65	            0x4898	                                    cdqe	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a67	        0x4883c001	                              add rax, 1	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a6b	    0x488d14c50000	                        lea rdx, [rax*8]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a73	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a7a	          0x4801d0	                            add rax, rdx	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a7d	          0x488b00	                    mov rax, qword [rax]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a80	          0x4889c6	                            mov rsi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a83	      0xbf00000000	                              mov edi, 0	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a88	      0xb800000000	                              mov eax, 0	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a8d	      0xe800000000	                          call 0x4001a92	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a92	          0x4889c1	                            mov rcx, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a95	        0x488d5580	                   lea rdx, [rbp - 0x80]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001a99	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001aa0	          0x4889c6	                            mov rsi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001aa3	          0x4889cf	                            mov rdi, rcx	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001aa6	      0xe800000000	                          call 0x4001aab	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001aab	          0x4889c7	                            mov rdi, rax	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001aae	      0xe800000000	                          call 0x4001ab3	       645	rev-parse.c	FUNCTION_22	FOR_2	IF_11	CALL_23
0x4001ab3	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       647	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001aba	      0xe9d20e0000	                           jmp 0x4002991	       648	rev-parse.c	FUNCTION_22	FOR_2	IF_11
0x4001abf	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	       650	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x4001ac6	            0x744f	                            je 0x4001b17	       650	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x4001ac8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001acf	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001ad5	            0x89d6	                            mov esi, edx	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001ad7	          0x4889c7	                            mov rdi, rax	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001ada	      0xe8cbecffff	                      call sym.show_file	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001adf	            0x85c0	                           test eax, eax	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001ae1	     0xf847c0e0000	                            je 0x4002963	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001ae7	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 1	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001aee	     0xf8f6f0e0000	                            jg 0x4002963	       651	rev-parse.c	FUNCTION_22	FOR_2	IF_13	IF_14	CALL_24
0x4001af4	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001afb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001b02	      0xba00000000	                              mov edx, 0	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001b07	          0x4889ce	                            mov rsi, rcx	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001b0a	          0x4889c7	                            mov rdi, rax	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001b0d	      0xe800000000	                          call 0x4001b12	       652	rev-parse.c	FUNCTION_22	FOR_2	IF_13	CALL_25
0x4001b12	      0xe94c0e0000	                           jmp 0x4002963	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x4001b17	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b1e	      0xbe00000000	                              mov esi, 0	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b23	          0x4889c7	                            mov rdi, rax	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b26	      0xe800000000	                          call 0x4001b2b	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b2b	            0x85c0	                           test eax, eax	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b2d	            0x757f	                           jne 0x4001bae	       655	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_26
0x4001b2f	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x4001b36	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x4001b3c	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x4001b42	            0x7c0f	                            jl 0x4001b53	       656	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_16
0x4001b44	      0xbf00000000	                              mov edi, 0	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x4001b49	      0xb800000000	                              mov eax, 0	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x4001b4e	      0xe800000000	                          call 0x4001b53	       657	rev-parse.c	FUNCTION_22	FOR_2	IF_15	CALL_27
0x4001b53	    0x8b0500000000	            mov eax, dword [0x04001b59] 	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b59	          0x83e004	                              and eax, 4	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b5c	            0x85c0	                           test eax, eax	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b5e	     0xf84020e0000	                            je 0x4002966	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b64	    0x8b0500000000	            mov eax, dword [0x04001b6a] 	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b6a	          0x83e001	                              and eax, 1	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b6d	            0x85c0	                           test eax, eax	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b6f	     0xf84f10d0000	                            je 0x4002966	       658	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17
0x4001b75	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_28
0x4001b7c	          0x4889c7	                            mov rdi, rax	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_28
0x4001b7f	      0xe8dae7ffff	                           call sym.show	       659	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_28
0x4001b84	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001b8a	            0x4898	                                    cdqe	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001b8c	    0x488d14c50000	                        lea rdx, [rax*8]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001b94	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001b9b	          0x4801d0	                            add rax, rdx	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001b9e	          0x488b00	                    mov rax, qword [rax]	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001ba1	          0x4889c7	                            mov rdi, rax	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001ba4	      0xe8b5e7ffff	                           call sym.show	       660	rev-parse.c	FUNCTION_22	FOR_2	IF_15	IF_17	CALL_29
0x4001ba9	      0xe9b80d0000	                           jmp 0x4002966	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x4001bae	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bb5	      0xbe00000000	                              mov esi, 0	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bba	          0x4889c7	                            mov rdi, rax	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bbd	      0xe800000000	                          call 0x4001bc2	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bc2	            0x85c0	                           test eax, eax	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bc4	            0x7436	                            je 0x4001bfc	       664	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_30
0x4001bc6	    0x8b0500000000	            mov eax, dword [0x04001bcc] 	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001bcc	          0x83e004	                              and eax, 4	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001bcf	            0x85c0	                           test eax, eax	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001bd1	     0xf84920d0000	                            je 0x4002969	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001bd7	    0x8b0500000000	            mov eax, dword [0x04001bdd] 	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001bdd	          0x83e001	                              and eax, 1	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001be0	            0x85c0	                           test eax, eax	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001be2	     0xf84810d0000	                            je 0x4002969	       665	rev-parse.c	FUNCTION_22	FOR_2	IF_18	IF_19
0x4001be8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x4001bef	          0x4889c7	                            mov rdi, rax	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x4001bf2	      0xe867e7ffff	                           call sym.show	       666	rev-parse.c	FUNCTION_22	FOR_2	IF_18	CALL_31
0x4001bf7	      0xe96d0d0000	                           jmp 0x4002969	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x4001bfc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x4001c03	           0xfb600	                   movzx eax, byte [rax]	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x4001c06	            0x3c2d	                            cmp al, 0x2d	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x4001c08	     0xf851c0c0000	                           jne 0x400282a	       670	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x4001c0e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c15	      0xbe00000000	                              mov esi, 0	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c1a	          0x4889c7	                            mov rdi, rax	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c1d	      0xe800000000	                          call 0x4001c22	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c22	            0x85c0	                           test eax, eax	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c24	            0x7534	                           jne 0x4001c5a	       671	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_32
0x4001c26	    0xc785fcfeffff	              mov dword [rbp - 0x104], 2	       672	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x4001c30	    0x8b0500000000	            mov eax, dword [0x04001c36] 	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x4001c36	          0x83e005	                              and eax, 5	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x4001c39	            0x85c0	                           test eax, eax	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x4001c3b	     0xf842b0d0000	                            je 0x400296c	       674	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	IF_22
0x4001c41	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x4001c48	      0xbe00000000	                              mov esi, 0	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x4001c4d	          0x4889c7	                            mov rdi, rax	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x4001c50	      0xe855ebffff	                      call sym.show_file	       675	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21	CALL_33
0x4001c55	      0xe9120d0000	                           jmp 0x400296c	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x4001c5a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c61	      0xbe00000000	                              mov esi, 0	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c66	          0x4889c7	                            mov rdi, rax	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c69	      0xe800000000	                          call 0x4001c6e	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c6e	            0x85c0	                           test eax, eax	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c70	            0x754a	                           jne 0x4001cbc	       678	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_34
0x4001c72	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c79	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c7f	            0x4898	                                    cdqe	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c81	    0x488d14c50000	                        lea rdx, [rax*8]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c89	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c90	          0x4801d0	                            add rax, rdx	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c93	          0x488b00	                    mov rax, qword [rax]	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c96	    0x488905000000	            mov qword [0x04001c9d], rax 	       679	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4001c9d	    0x488b05000000	            mov rax, qword [0x04001ca4] 	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x4001ca4	          0x4885c0	                           test rax, rax	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x4001ca7	     0xf85c20c0000	                           jne 0x400296f	       680	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	IF_24
0x4001cad	      0xbf00000000	                              mov edi, 0	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x4001cb2	      0xb800000000	                              mov eax, 0	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x4001cb7	      0xe800000000	                          call 0x4001cbc	       681	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23	CALL_35
0x4001cbc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001cc3	      0xbe00000000	                              mov esi, 0	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001cc8	          0x4889c7	                            mov rdi, rax	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001ccb	      0xe800000000	                          call 0x4001cd0	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001cd0	            0x85c0	                           test eax, eax	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001cd2	            0x7565	                           jne 0x4001d39	       684	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_36
0x4001cd4	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001cdb	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001ce1	            0x4898	                                    cdqe	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001ce3	    0x488d14c50000	                        lea rdx, [rax*8]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001ceb	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001cf2	          0x4801d0	                            add rax, rdx	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001cf5	          0x488b00	                    mov rax, qword [rax]	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001cf8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       685	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001cff	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       686	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	IF_26
0x4001d07	            0x750f	                           jne 0x4001d18	       686	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	IF_26
0x4001d09	      0xbf00000000	                              mov edi, 0	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x4001d0e	      0xb800000000	                              mov eax, 0	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x4001d13	      0xe800000000	                          call 0x4001d18	       687	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25	CALL_37
0x4001d18	    0x488b05000000	            mov rax, qword [0x04001d1f] 	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001d1f	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001d26	        0x48895008	                mov qword [rax + 8], rdx	       688	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001d2a	    0xc78518ffffff	               mov dword [rbp - 0xe8], 1	       689	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001d34	      0xe9580c0000	                           jmp 0x4002991	       690	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_25
0x4001d39	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d40	      0xbe00000000	                              mov esi, 0	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d45	          0x4889c7	                            mov rdi, rax	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d48	      0xe800000000	                          call 0x4001d4d	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d4d	            0x85c0	                           test eax, eax	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d4f	            0x7514	                           jne 0x4001d65	       692	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27	CALL_38
0x4001d51	    0x8b0500000000	            mov eax, dword [0x04001d57] 	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x4001d57	          0x83e0fd	                     and eax, 0xfffffffd	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x4001d5a	    0x890500000000	            mov dword [0x04001d60], eax 	       693	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x4001d60	      0xe92c0c0000	                           jmp 0x4002991	       694	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_27
0x4001d65	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d6c	      0xbe00000000	                              mov esi, 0	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d71	          0x4889c7	                            mov rdi, rax	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d74	      0xe800000000	                          call 0x4001d79	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d79	            0x85c0	                           test eax, eax	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d7b	            0x7514	                           jne 0x4001d91	       696	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28	CALL_39
0x4001d7d	    0x8b0500000000	            mov eax, dword [0x04001d83] 	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x4001d83	          0x83e0fe	                     and eax, 0xfffffffe	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x4001d86	    0x890500000000	            mov dword [0x04001d8c], eax 	       697	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x4001d8c	      0xe9000c0000	                           jmp 0x4002991	       698	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_28
0x4001d91	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001d98	      0xbe00000000	                              mov esi, 0	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001d9d	          0x4889c7	                            mov rdi, rax	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001da0	      0xe800000000	                          call 0x4001da5	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001da5	            0x85c0	                           test eax, eax	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001da7	            0x7514	                           jne 0x4001dbd	       700	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29	CALL_40
0x4001da9	    0x8b0500000000	            mov eax, dword [0x04001daf] 	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x4001daf	          0x83e0f7	                     and eax, 0xfffffff7	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x4001db2	    0x890500000000	            mov dword [0x04001db8], eax 	       701	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x4001db8	      0xe9d40b0000	                           jmp 0x4002991	       702	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_29
0x4001dbd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dc4	      0xbe00000000	                              mov esi, 0	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dc9	          0x4889c7	                            mov rdi, rax	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dcc	      0xe800000000	                          call 0x4001dd1	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dd1	            0x85c0	                           test eax, eax	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dd3	            0x7514	                           jne 0x4001de9	       704	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30	CALL_41
0x4001dd5	    0x8b0500000000	            mov eax, dword [0x04001ddb] 	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x4001ddb	          0x83e0fb	                     and eax, 0xfffffffb	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x4001dde	    0x890500000000	            mov dword [0x04001de4], eax 	       705	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x4001de4	      0xe9a80b0000	                           jmp 0x4002991	       706	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_30
0x4001de9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001df0	      0xbe00000000	                              mov esi, 0	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001df5	          0x4889c7	                            mov rdi, rax	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001df8	      0xe800000000	                          call 0x4001dfd	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001dfd	            0x85c0	                           test eax, eax	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001dff	            0x751e	                           jne 0x4001e1f	       708	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31	CALL_42
0x4001e01	    0x8b0500000000	            mov eax, dword [0x04001e07] 	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x4001e07	          0x83e0f9	                     and eax, 0xfffffff9	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x4001e0a	    0x890500000000	            mov dword [0x04001e10], eax 	       709	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x4001e10	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	       710	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x4001e1a	      0xe9720b0000	                           jmp 0x4002991	       711	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_31
0x4001e1f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e26	      0xbe00000000	                              mov esi, 0	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e2b	          0x4889c7	                            mov rdi, rax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e2e	      0xe800000000	                          call 0x4001e33	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e33	            0x85c0	                           test eax, eax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e35	            0x7418	                            je 0x4001e4f	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e37	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e3e	      0xbe00000000	                              mov esi, 0	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e43	          0x4889c7	                            mov rdi, rax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e46	      0xe800000000	                          call 0x4001e4b	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e4b	            0x85c0	                           test eax, eax	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e4d	            0x7516	                           jne 0x4001e65	       713	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32	CALL_44
0x4001e4f	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	       714	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x4001e59	    0x838d1cffffff	                or dword [rbp - 0xe4], 1	       715	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x4001e60	      0xe92c0b0000	                           jmp 0x4002991	       716	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_32
0x4001e65	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e6c	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e73	      0xbe00000000	                              mov esi, 0	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e78	          0x4889c7	                            mov rdi, rax	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e7b	      0xe82df7ffff	                 call sym.opt_with_value	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e80	            0x85c0	                           test eax, eax	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e82	     0xf8493000000	                            je 0x4001f1b	       718	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_45
0x4001e88	    0x8b0500000000	            mov eax, dword [0x04001e8e] 	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001e8e	          0x83e0f9	                     and eax, 0xfffffff9	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001e91	    0x890500000000	            mov dword [0x04001e97], eax 	       719	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001e97	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	       720	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001ea1	    0x8b0500000000	            mov eax, dword [0x04001ea7] 	       721	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001ea7	    0x890500000000	            mov dword [0x04001ead], eax 	       721	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001ead	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x4001eb4	          0x4885c0	                           test rax, rax	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x4001eb7	     0xf84b50a0000	                            je 0x4002972	       722	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x4001ebd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001ec4	      0xba0a000000	                            mov edx, 0xa	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001ec9	      0xbe00000000	                              mov esi, 0	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001ece	          0x4889c7	                            mov rdi, rax	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001ed1	      0xe800000000	                          call 0x4001ed6	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001ed6	    0x890500000000	            mov dword [0x04001edc], eax 	       724	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	CALL_46
0x4001edc	    0x8b1500000000	            mov edx, dword [0x04001ee2] 	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001ee2	    0x8b0500000000	            mov eax, dword [0x04001ee8] 	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001ee8	            0x39c2	                            cmp edx, eax	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001eea	            0x7d11	                           jge 0x4001efd	       725	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001eec	    0x8b0500000000	            mov eax, dword [0x04001ef2] 	       726	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001ef2	    0x890500000000	            mov dword [0x04001ef8], eax 	       726	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_35
0x4001ef8	      0xe9780a0000	                           jmp 0x4002975	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001efd	    0x8b0500000000	            mov eax, dword [0x04001f03] 	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x4001f03	          0x83f827	                           cmp eax, 0x27	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x4001f06	     0xf8e690a0000	                           jle 0x4002975	       727	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x4001f0c	    0xc70500000000	           mov dword [0x04001f16], 0x28 	       728	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	ELSE_1	IF_36
0x4001f16	      0xe95a0a0000	                           jmp 0x4002975	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4001f1b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f22	      0xbe00000000	                              mov esi, 0	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f27	          0x4889c7	                            mov rdi, rax	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f2a	      0xe800000000	                          call 0x4001f2f	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f2f	            0x85c0	                           test eax, eax	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f31	            0x750f	                           jne 0x4001f42	       731	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37	CALL_47
0x4001f33	    0xc70500000000	               mov dword [0x04001f3d], 1	       732	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37
0x4001f3d	      0xe94f0a0000	                           jmp 0x4002991	       733	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_37
0x4001f42	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f49	      0xbe00000000	                              mov esi, 0	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f4e	          0x4889c7	                            mov rdi, rax	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f51	      0xe800000000	                          call 0x4001f56	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f56	            0x85c0	                           test eax, eax	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f58	            0x7514	                           jne 0x4001f6e	       735	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38	CALL_48
0x4001f5a	    0x8b0500000000	            mov eax, dword [0x04001f60] 	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x4001f60	          0x83f001	                              xor eax, 1	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x4001f63	    0x890500000000	            mov dword [0x04001f69], eax 	       736	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x4001f69	      0xe9230a0000	                           jmp 0x4002991	       737	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_38
0x4001f6e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f75	      0xbe00000000	                              mov esi, 0	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f7a	          0x4889c7	                            mov rdi, rax	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f7d	      0xe800000000	                          call 0x4001f82	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f82	            0x85c0	                           test eax, eax	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f84	            0x750f	                           jne 0x4001f95	       739	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39	CALL_49
0x4001f86	    0xc70500000000	               mov dword [0x04001f90], 1	       740	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39
0x4001f90	      0xe9fc090000	                           jmp 0x4002991	       741	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_39
0x4001f95	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001f9c	      0xbe00000000	                              mov esi, 0	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001fa1	          0x4889c7	                            mov rdi, rax	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001fa4	      0xe800000000	                          call 0x4001fa9	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001fa9	            0x85c0	                           test eax, eax	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001fab	            0x750f	                           jne 0x4001fbc	       743	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40	CALL_50
0x4001fad	    0xc70500000000	               mov dword [0x04001fb7], 2	       744	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40
0x4001fb7	      0xe9d5090000	                           jmp 0x4002991	       745	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_40
0x4001fbc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fc3	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fca	      0xbe00000000	                              mov esi, 0	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fcf	          0x4889c7	                            mov rdi, rax	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fd2	      0xe8d6f5ffff	                 call sym.opt_with_value	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fd7	            0x85c0	                           test eax, eax	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fd9	     0xf848d000000	                            je 0x400206c	       747	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	CALL_51
0x4001fdf	    0xc70500000000	               mov dword [0x04001fe9], 1	       748	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x4001fe9	    0x8b0500000000	            mov eax, dword [0x04001fef] 	       749	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x4001fef	    0x890500000000	            mov dword [0x04001ff5], eax 	       749	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x4001ff5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x4001ffc	          0x4885c0	                           test rax, rax	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x4001fff	     0xf8473090000	                            je 0x4002978	       750	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42
0x4002005	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x400200c	      0xbe00000000	                              mov esi, 0	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x4002011	          0x4889c7	                            mov rdi, rax	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x4002014	      0xe800000000	                          call 0x4002019	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x4002019	            0x85c0	                           test eax, eax	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x400201b	            0x750f	                           jne 0x400202c	       751	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43	CALL_52
0x400201d	    0xc70500000000	               mov dword [0x04002027], 1	       752	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	IF_43
0x4002027	      0xe94c090000	                           jmp 0x4002978	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x400202c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x4002033	      0xbe00000000	                              mov esi, 0	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x4002038	          0x4889c7	                            mov rdi, rax	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x400203b	      0xe800000000	                          call 0x4002040	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x4002040	            0x85c0	                           test eax, eax	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x4002042	            0x750f	                           jne 0x4002053	       753	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44	CALL_53
0x4002044	    0xc70500000000	               mov dword [0x0400204e], 0	       754	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_2	IF_44
0x400204e	      0xe925090000	                           jmp 0x4002978	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x4002053	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_54
0x400205a	          0x4889c6	                            mov rsi, rax	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_54
0x400205d	      0xbf00000000	                              mov edi, 0	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_54
0x4002062	      0xb800000000	                              mov eax, 0	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_54
0x4002067	      0xe800000000	                          call 0x400206c	       756	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41	IF_42	ELSE_3	CALL_54
0x400206c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x4002073	      0xbe00000000	                              mov esi, 0	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x4002078	          0x4889c7	                            mov rdi, rax	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x400207b	      0xe800000000	                          call 0x4002080	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x4002080	            0x85c0	                           test eax, eax	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x4002082	            0x7514	                           jne 0x4002098	       761	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_55
0x4002084	      0xbe00000000	                              mov esi, 0	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x4002089	      0xbf00000000	                              mov edi, 0	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x400208e	      0xe800000000	                          call 0x4002093	       762	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45	CALL_56
0x4002093	      0xe9f9080000	                           jmp 0x4002991	       763	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_45
0x4002098	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x400209f	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020a6	      0xbe00000000	                              mov esi, 0	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020ab	          0x4889c7	                            mov rdi, rax	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020ae	      0xe898dfffff	                    call sym.skip_prefix	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020b3	            0x85c0	                           test eax, eax	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020b5	            0x741e	                            je 0x40020d5	       765	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_57
0x40020b7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x40020be	      0xba00000000	                              mov edx, 0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x40020c3	      0xbe00000000	                              mov esi, 0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x40020c8	          0x4889c7	                            mov rdi, rax	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x40020cb	      0xe800000000	                          call 0x40020d0	       766	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46	CALL_58
0x40020d0	      0xe9bc080000	                           jmp 0x4002991	       767	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_46
0x40020d5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020dc	      0xbe00000000	                              mov esi, 0	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020e1	          0x4889c7	                            mov rdi, rax	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020e4	      0xe800000000	                          call 0x40020e9	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020e9	            0x85c0	                           test eax, eax	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020eb	            0x7537	                           jne 0x4002124	       769	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_59
0x40020ed	      0xb900000000	                              mov ecx, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x40020f2	      0xba00000000	                              mov edx, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x40020f7	      0xbe00000000	                              mov esi, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x40020fc	      0xbf00000000	                              mov edi, 0	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x4002101	      0xe800000000	                          call 0x4002106	       770	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_60
0x4002106	      0xb900000000	                              mov ecx, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x400210b	      0xba00000000	                              mov edx, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x4002110	      0xbe00000000	                              mov esi, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x4002115	      0xbf00000000	                              mov edi, 0	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x400211a	      0xe800000000	                          call 0x400211f	       771	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47	CALL_61
0x400211f	      0xe96d080000	                           jmp 0x4002991	       772	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_47
0x4002124	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x400212b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x4002132	      0xbe00000000	                              mov esi, 0	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x4002137	          0x4889c7	                            mov rdi, rax	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x400213a	      0xe86ef4ffff	                 call sym.opt_with_value	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x400213f	            0x85c0	                           test eax, eax	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x4002141	            0x7419	                            je 0x400215c	       774	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_62
0x4002143	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x400214a	      0xbe00000000	                              mov esi, 0	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x400214f	          0x4889c7	                            mov rdi, rax	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x4002152	      0xe8cef4ffff	                 call sym.handle_ref_opt	       775	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48	CALL_63
0x4002157	      0xe935080000	                           jmp 0x4002991	       776	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_48
0x400215c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x4002163	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x400216a	      0xbe00000000	                              mov esi, 0	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x400216f	          0x4889c7	                            mov rdi, rax	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x4002172	      0xe836f4ffff	                 call sym.opt_with_value	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x4002177	            0x85c0	                           test eax, eax	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x4002179	            0x7419	                            je 0x4002194	       778	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_64
0x400217b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x4002182	      0xbe00000000	                              mov esi, 0	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x4002187	          0x4889c7	                            mov rdi, rax	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x400218a	      0xe896f4ffff	                 call sym.handle_ref_opt	       779	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49	CALL_65
0x400218f	      0xe9fd070000	                           jmp 0x4002991	       780	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_49
0x4002194	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x400219b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021a2	      0xbe00000000	                              mov esi, 0	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021a7	          0x4889c7	                            mov rdi, rax	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021aa	      0xe89cdeffff	                    call sym.skip_prefix	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021af	            0x85c0	                           test eax, eax	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021b1	            0x7419	                            je 0x40021cc	       782	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_66
0x40021b3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x40021ba	      0xbe00000000	                              mov esi, 0	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x40021bf	          0x4889c7	                            mov rdi, rax	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x40021c2	      0xe85ef4ffff	                 call sym.handle_ref_opt	       783	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50	CALL_67
0x40021c7	      0xe9c5070000	                           jmp 0x4002991	       784	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_50
0x40021cc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021d3	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021da	      0xbe00000000	                              mov esi, 0	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021df	          0x4889c7	                            mov rdi, rax	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021e2	      0xe8c6f3ffff	                 call sym.opt_with_value	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021e7	            0x85c0	                           test eax, eax	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021e9	            0x7419	                            je 0x4002204	       786	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_68
0x40021eb	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x40021f2	      0xbe00000000	                              mov esi, 0	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x40021f7	          0x4889c7	                            mov rdi, rax	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x40021fa	      0xe826f4ffff	                 call sym.handle_ref_opt	       787	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51	CALL_69
0x40021ff	      0xe98d070000	                           jmp 0x4002991	       788	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_51
0x4002204	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x400220b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x4002212	      0xbe00000000	                              mov esi, 0	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x4002217	          0x4889c7	                            mov rdi, rax	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x400221a	      0xe82cdeffff	                    call sym.skip_prefix	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x400221f	            0x85c0	                           test eax, eax	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x4002221	            0x7419	                            je 0x400223c	       790	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_70
0x4002223	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x400222a	          0x4889c6	                            mov rsi, rax	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x400222d	      0xbf00000000	                              mov edi, 0	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x4002232	      0xe800000000	                          call 0x4002237	       791	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52	CALL_71
0x4002237	      0xe955070000	                           jmp 0x4002991	       792	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_52
0x400223c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x4002243	      0xbe00000000	                              mov esi, 0	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x4002248	          0x4889c7	                            mov rdi, rax	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x400224b	      0xe800000000	                          call 0x4002250	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x4002250	            0x85c0	                           test eax, eax	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x4002252	            0x752e	                           jne 0x4002282	       794	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_72
0x4002254	      0xe800000000	                          call 0x4002259	       795	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x4002259	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       795	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_73
0x4002260	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       796	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	IF_54
0x4002268	     0xf840d070000	                            je 0x400297b	       796	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	IF_54
0x400226e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_74
0x4002275	          0x4889c7	                            mov rdi, rax	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_74
0x4002278	      0xe800000000	                          call 0x400227d	       797	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53	CALL_74
0x400227d	      0xe9f9060000	                           jmp 0x400297b	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x4002282	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x4002289	      0xbe00000000	                              mov esi, 0	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x400228e	          0x4889c7	                            mov rdi, rax	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x4002291	      0xe800000000	                          call 0x4002296	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x4002296	            0x85c0	                           test eax, eax	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x4002298	            0x752e	                           jne 0x40022c8	       800	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_75
0x400229a	      0xe800000000	                          call 0x400229f	       801	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x400229f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       801	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_76
0x40022a6	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       802	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	IF_56
0x40022ae	     0xf84ca060000	                            je 0x400297e	       802	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	IF_56
0x40022b4	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_77
0x40022bb	          0x4889c7	                            mov rdi, rax	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_77
0x40022be	      0xe800000000	                          call 0x40022c3	       803	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55	CALL_77
0x40022c3	      0xe9b6060000	                           jmp 0x400297e	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x40022c8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022cf	      0xbe00000000	                              mov esi, 0	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022d4	          0x4889c7	                            mov rdi, rax	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022d7	      0xe800000000	                          call 0x40022dc	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022dc	            0x85c0	                           test eax, eax	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022de	            0x752d	                           jne 0x400230d	       806	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_78
0x40022e0	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       807	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	IF_58
0x40022e8	            0x7414	                            je 0x40022fe	       807	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	IF_58
0x40022ea	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x40022f1	          0x4889c7	                            mov rdi, rax	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x40022f4	      0xe800000000	                          call 0x40022f9	       808	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_79
0x40022f9	      0xe993060000	                           jmp 0x4002991	       811	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57
0x40022fe	      0xbf0a000000	                            mov edi, 0xa	       810	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_80
0x4002303	      0xe800000000	                          call 0x4002308	       810	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57	CALL_80
0x4002308	      0xe984060000	                           jmp 0x4002991	       811	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_57
0x400230d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x4002314	      0xbe00000000	                              mov esi, 0	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x4002319	          0x4889c7	                            mov rdi, rax	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x400231c	      0xe800000000	                          call 0x4002321	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x4002321	            0x85c0	                           test eax, eax	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x4002323	     0xf859a000000	                           jne 0x40023c3	       813	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_81
0x4002329	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       814	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x4002330	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       814	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x4002337	      0xe800000000	                          call 0x400233c	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_82
0x400233c	            0x85c0	                           test eax, eax	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_82
0x400233e	            0x756a	                           jne 0x40023aa	       815	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_82
0x4002340	      0xe800000000	                          call 0x4002345	       816	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x4002345	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       816	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x400234c	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       818	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	IF_61
0x4002354	     0xf8427060000	                            je 0x4002981	       818	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	IF_61
0x400235a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_84
0x4002361	          0x4889c7	                            mov rdi, rax	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_84
0x4002364	      0xe800000000	                          call 0x4002369	       819	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60	CALL_84
0x4002369	      0xe913060000	                           jmp 0x4002981	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x400236e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_85
0x4002375	      0xbe2f000000	                           mov esi, 0x2f	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_85
0x400237a	          0x4889c7	                            mov rdi, rax	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_85
0x400237d	      0xe800000000	                          call 0x4002382	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_85
0x4002382	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       823	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	CALL_85
0x4002389	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       824	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x4002391	            0x7417	                            je 0x40023aa	       824	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x4002393	    0x48838538ffff	               add qword [rbp - 0xc8], 1	       825	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62
0x400239b	      0xbf00000000	                              mov edi, 0	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_86
0x40023a0	      0xb800000000	                              mov eax, 0	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_86
0x40023a5	      0xe800000000	                          call 0x40023aa	       826	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1	IF_62	CALL_86
0x40023aa	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       822	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1
0x40023b2	            0x75ba	                           jne 0x400236e	       822	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	WHILE_1
0x40023b4	      0xbf0a000000	                            mov edi, 0xa	       829	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_87
0x40023b9	      0xe800000000	                          call 0x40023be	       829	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	CALL_87
0x40023be	      0xe9ce050000	                           jmp 0x4002991	       830	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59
0x40023c3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023ca	      0xbe00000000	                              mov esi, 0	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023cf	          0x4889c7	                            mov rdi, rax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023d2	      0xe800000000	                          call 0x40023d7	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023d7	            0x85c0	                           test eax, eax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023d9	            0x741c	                            je 0x40023f7	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023db	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x40023e2	      0xbe00000000	                              mov esi, 0	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x40023e7	          0x4889c7	                            mov rdi, rax	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x40023ea	      0xe800000000	                          call 0x40023ef	       833	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_89
0x40023ef	            0x85c0	                           test eax, eax	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023f1	     0xf851f010000	                           jne 0x4002516	       832	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_88
0x40023f7	      0xbf00000000	                              mov edi, 0	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x40023fc	      0xe800000000	                          call 0x4002401	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x4002401	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       834	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_90
0x4002408	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x400240f	        0x4883c002	                              add rax, 2	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x4002413	           0xfb600	                   movzx eax, byte [rax]	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x4002416	            0x3c67	                            cmp al, 0x67	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x4002418	            0x7537	                           jne 0x4002451	       837	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64
0x400241a	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       838	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x4002422	            0x7414	                            je 0x4002438	       838	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x4002424	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_91
0x400242b	          0x4889c7	                            mov rdi, rax	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_91
0x400242e	      0xe800000000	                          call 0x4002433	       839	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65	CALL_91
0x4002433	      0xe959050000	                           jmp 0x4002991	       840	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_65
0x4002438	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       842	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x4002440	            0x7554	                           jne 0x4002496	       842	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x4002442	      0xbf00000000	                              mov edi, 0	       843	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66	CALL_92
0x4002447	      0xe800000000	                          call 0x400244c	       843	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66	CALL_92
0x400244c	      0xe940050000	                           jmp 0x4002991	       844	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	IF_64	IF_66
0x4002451	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x4002459	            0x7515	                           jne 0x4002470	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x400245b	    0x4883bdd8feff	              cmp qword [rbp - 0x128], 0	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x4002463	            0x750b	                           jne 0x4002470	       847	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x4002465	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       848	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_67
0x4002470	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       849	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x4002478	            0x741c	                            je 0x4002496	       849	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x400247a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_94
0x4002481	          0x4889c7	                            mov rdi, rax	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_94
0x4002484	      0xe800000000	                          call 0x4002489	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_94
0x4002489	          0x4889c7	                            mov rdi, rax	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_94
0x400248c	      0xe800000000	                          call 0x4002491	       850	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68	CALL_94
0x4002491	      0xe9fb040000	                           jmp 0x4002991	       851	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	ELSE_5	IF_68
0x4002496	      0xe800000000	                          call 0x400249b	       854	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_95
0x400249b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       854	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_95
0x40024a2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x40024a9	          0x4889c7	                            mov rdi, rax	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x40024ac	      0xe800000000	                          call 0x40024b1	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x40024b1	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	       855	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_96
0x40024b7	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024be	            0x7424	                            je 0x40024e4	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024c0	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024c6	            0x4898	                                    cdqe	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024c8	        0x488d50ff	                      lea rdx, [rax - 1]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024cc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024d3	          0x4801d0	                            add rax, rdx	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024d6	           0xfb600	                   movzx eax, byte [rax]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024d9	            0x3c2f	                            cmp al, 0x2f	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024db	            0x7407	                            je 0x40024e4	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024dd	      0xba00000000	                              mov edx, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024e2	            0xeb05	                           jmp 0x40024e9	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024e4	      0xba00000000	                              mov edx, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024e9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024f0	          0x4889c6	                            mov rsi, rax	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024f3	      0xbf00000000	                              mov edi, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024f8	      0xb800000000	                              mov eax, 0	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x40024fd	      0xe800000000	                          call 0x4002502	       856	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_97
0x4002502	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x4002509	          0x4889c7	                            mov rdi, rax	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x400250c	      0xe800000000	                          call 0x4002511	       857	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63	CALL_98
0x4002511	      0xe97b040000	                           jmp 0x4002991	       858	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_63
0x4002516	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x400251d	      0xbe00000000	                              mov esi, 0	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x4002522	          0x4889c7	                            mov rdi, rax	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x4002525	      0xe800000000	                          call 0x400252a	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x400252a	            0x85c0	                           test eax, eax	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x400252c	            0x753c	                           jne 0x400256a	       860	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_99
0x400252e	        0x488d4580	                   lea rax, [rbp - 0x80]	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x4002532	      0xbe00000000	                              mov esi, 0	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x4002537	          0x4889c7	                            mov rdi, rax	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x400253a	      0xe8eadbffff	                  call sym.strbuf_setlen	       861	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x400253f	      0xe800000000	                          call 0x4002544	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002544	          0x4889c1	                            mov rcx, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002547	        0x488d5580	                   lea rdx, [rbp - 0x80]	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x400254b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002552	          0x4889c6	                            mov rsi, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002555	          0x4889cf	                            mov rdi, rcx	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002558	      0xe800000000	                          call 0x400255d	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x400255d	          0x4889c7	                            mov rdi, rax	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002560	      0xe800000000	                          call 0x4002565	       862	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69	CALL_102
0x4002565	      0xe927040000	                           jmp 0x4002991	       864	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_69
0x400256a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x4002571	      0xbe00000000	                              mov esi, 0	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x4002576	          0x4889c7	                            mov rdi, rax	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x4002579	      0xe800000000	                          call 0x400257e	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x400257e	            0x85c0	                           test eax, eax	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x4002580	            0x7522	                           jne 0x40025a4	       866	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_103
0x4002582	      0xe800000000	                          call 0x4002587	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x4002587	            0x85c0	                           test eax, eax	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x4002589	            0x7407	                            je 0x4002592	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x400258b	      0xb800000000	                              mov eax, 0	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x4002590	            0xeb05	                           jmp 0x4002597	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x4002592	      0xb800000000	                              mov eax, 0	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x4002597	          0x4889c7	                            mov rdi, rax	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x400259a	      0xe800000000	                          call 0x400259f	       867	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70	CALL_105
0x400259f	      0xe9ed030000	                           jmp 0x4002991	       869	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_70
0x40025a4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025ab	      0xbe00000000	                              mov esi, 0	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025b0	          0x4889c7	                            mov rdi, rax	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025b3	      0xe800000000	                          call 0x40025b8	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025b8	            0x85c0	                           test eax, eax	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025ba	            0x7522	                           jne 0x40025de	       871	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_106
0x40025bc	      0xe800000000	                          call 0x40025c1	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025c1	            0x85c0	                           test eax, eax	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025c3	            0x7407	                            je 0x40025cc	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025c5	      0xb800000000	                              mov eax, 0	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025ca	            0xeb05	                           jmp 0x40025d1	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025cc	      0xb800000000	                              mov eax, 0	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025d1	          0x4889c7	                            mov rdi, rax	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025d4	      0xe800000000	                          call 0x40025d9	       872	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71	CALL_108
0x40025d9	      0xe9b3030000	                           jmp 0x4002991	       874	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_71
0x40025de	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025e5	      0xbe00000000	                              mov esi, 0	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025ea	          0x4889c7	                            mov rdi, rax	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025ed	      0xe800000000	                          call 0x40025f2	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025f2	            0x85c0	                           test eax, eax	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025f4	            0x7522	                           jne 0x4002618	       876	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_109
0x40025f6	      0xe800000000	                          call 0x40025fb	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x40025fb	            0x85c0	                           test eax, eax	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x40025fd	            0x7407	                            je 0x4002606	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x40025ff	      0xb800000000	                              mov eax, 0	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x4002604	            0xeb05	                           jmp 0x400260b	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x4002606	      0xb800000000	                              mov eax, 0	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x400260b	          0x4889c7	                            mov rdi, rax	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x400260e	      0xe800000000	                          call 0x4002613	       877	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72	CALL_111
0x4002613	      0xe979030000	                           jmp 0x4002991	       879	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_72
0x4002618	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x400261f	      0xbe00000000	                              mov esi, 0	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x4002624	          0x4889c7	                            mov rdi, rax	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x4002627	      0xe800000000	                          call 0x400262c	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x400262c	            0x85c0	                           test eax, eax	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x400262e	            0x7522	                           jne 0x4002652	       881	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_112
0x4002630	      0xe800000000	                          call 0x4002635	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002635	            0x85c0	                           test eax, eax	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002637	            0x7407	                            je 0x4002640	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002639	      0xb800000000	                              mov eax, 0	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x400263e	            0xeb05	                           jmp 0x4002645	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002640	      0xb800000000	                              mov eax, 0	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002645	          0x4889c7	                            mov rdi, rax	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x4002648	      0xe800000000	                          call 0x400264d	       882	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73	CALL_114
0x400264d	      0xe93f030000	                           jmp 0x4002991	       884	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_73
0x4002652	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x4002659	      0xbe00000000	                              mov esi, 0	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x400265e	          0x4889c7	                            mov rdi, rax	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x4002661	      0xe800000000	                          call 0x4002666	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x4002666	            0x85c0	                           test eax, eax	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x4002668	     0xf85a6000000	                           jne 0x4002714	       886	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_115
0x400266e	      0xbf00000000	                              mov edi, 0	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_116
0x4002673	      0xe800000000	                          call 0x4002678	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_116
0x4002678	            0x85c0	                           test eax, eax	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_116
0x400267a	            0x7917	                           jns 0x4002693	       887	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_75	CALL_116
0x400267c	      0xbf00000000	                              mov edi, 0	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_118
0x4002681	      0xe8e0dbffff	                               call sym.	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_118
0x4002686	          0x4889c7	                            mov rdi, rax	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_118
0x4002689	      0xb800000000	                              mov eax, 0	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_118
0x400268e	      0xe800000000	                          call 0x4002693	       888	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	CALL_118
0x4002693	    0x488b05000000	            mov rax, qword [0x0400269a] 	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x400269a	          0x4885c0	                           test rax, rax	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x400269d	     0xf84e1020000	                            je 0x4002984	       889	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026a3	    0x488b05000000	            mov rax, qword [0x040026aa] 	       890	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026aa	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       890	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026b1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026b8	          0x4889c7	                            mov rdi, rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026bb	      0xe800000000	                          call 0x40026c0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026c0	          0x4889c6	                            mov rsi, rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026c3	      0xbf00000000	                              mov edi, 0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026c8	      0xb800000000	                              mov eax, 0	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026cd	      0xe800000000	                          call 0x40026d2	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026d2	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       891	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_120
0x40026d9	        0x488d4580	                   lea rax, [rbp - 0x80]	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026dd	      0xbe00000000	                              mov esi, 0	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026e2	          0x4889c7	                            mov rdi, rax	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026e5	      0xe83fdaffff	                  call sym.strbuf_setlen	       892	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76
0x40026ea	        0x488d5580	                   lea rdx, [rbp - 0x80]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x40026ee	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x40026f5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x40026fc	          0x4889ce	                            mov rsi, rcx	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x40026ff	          0x4889c7	                            mov rdi, rax	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x4002702	      0xe800000000	                          call 0x4002707	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x4002707	          0x4889c7	                            mov rdi, rax	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x400270a	      0xe800000000	                          call 0x400270f	       893	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74	IF_76	CALL_122
0x400270f	      0xe970020000	                           jmp 0x4002984	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x4002714	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x400271b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x4002722	      0xbe00000000	                              mov esi, 0	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x4002727	          0x4889c7	                            mov rdi, rax	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x400272a	      0xe81cd9ffff	                    call sym.skip_prefix	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x400272f	            0x85c0	                           test eax, eax	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x4002731	            0x7419	                            je 0x400274c	       897	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_123
0x4002733	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_124
0x400273a	          0x4889c6	                            mov rsi, rax	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_124
0x400273d	      0xbf00000000	                              mov edi, 0	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_124
0x4002742	      0xe8fadfffff	                call sym.show_datestring	       898	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77	CALL_124
0x4002747	      0xe945020000	                           jmp 0x4002991	       899	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_77
0x400274c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x4002753	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x400275a	      0xbe00000000	                              mov esi, 0	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x400275f	          0x4889c7	                            mov rdi, rax	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x4002762	      0xe8e4d8ffff	                    call sym.skip_prefix	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x4002767	            0x85c0	                           test eax, eax	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x4002769	            0x7419	                            je 0x4002784	       901	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_125
0x400276b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_126
0x4002772	          0x4889c6	                            mov rsi, rax	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_126
0x4002775	      0xbf00000000	                              mov edi, 0	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_126
0x400277a	      0xe8c2dfffff	                call sym.show_datestring	       902	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78	CALL_126
0x400277f	      0xe90d020000	                           jmp 0x4002991	       903	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_78
0x4002784	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x400278b	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x4002792	      0xbe00000000	                              mov esi, 0	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x4002797	          0x4889c7	                            mov rdi, rax	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x400279a	      0xe8acd8ffff	                    call sym.skip_prefix	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x400279f	            0x85c0	                           test eax, eax	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x40027a1	            0x7419	                            je 0x40027bc	       905	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_127
0x40027a3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_128
0x40027aa	          0x4889c6	                            mov rsi, rax	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_128
0x40027ad	      0xbf00000000	                              mov edi, 0	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_128
0x40027b2	      0xe88adfffff	                call sym.show_datestring	       906	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79	CALL_128
0x40027b7	      0xe9d5010000	                           jmp 0x4002991	       907	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_79
0x40027bc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027c3	    0x488d9528ffff	                   lea rdx, [rbp - 0xd8]	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027ca	      0xbe00000000	                              mov esi, 0	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027cf	          0x4889c7	                            mov rdi, rax	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027d2	      0xe874d8ffff	                    call sym.skip_prefix	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027d7	            0x85c0	                           test eax, eax	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027d9	            0x7419	                            je 0x40027f4	       909	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_129
0x40027db	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_130
0x40027e2	          0x4889c6	                            mov rsi, rax	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_130
0x40027e5	      0xbf00000000	                              mov edi, 0	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_130
0x40027ea	      0xe852dfffff	                call sym.show_datestring	       910	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80	CALL_130
0x40027ef	      0xe99d010000	                           jmp 0x4002991	       911	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_80
0x40027f4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x40027fb	          0x4889c7	                            mov rdi, rax	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x40027fe	      0xe8a6ddffff	                      call sym.show_flag	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x4002803	            0x85c0	                           test eax, eax	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x4002805	     0xf847c010000	                            je 0x4002987	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x400280b	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x4002812	     0xf846f010000	                            je 0x4002987	       913	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_81	CALL_131
0x4002818	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_132
0x400281e	            0x89c7	                            mov edi, eax	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_132
0x4002820	      0xe85eedffff	              call sym.die_no_single_rev	       914	rev-parse.c	FUNCTION_22	FOR_2	IF_20	CALL_132
0x4002825	      0xe95d010000	                           jmp 0x4002987	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x400282a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_133
0x4002831	          0x4889c7	                            mov rdi, rax	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_133
0x4002834	      0xe8f3dfffff	                 call sym.try_difference	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_133
0x4002839	            0x85c0	                           test eax, eax	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_133
0x400283b	     0xf8549010000	                           jne 0x400298a	       919	rev-parse.c	FUNCTION_22	FOR_2	IF_82	CALL_133
0x4002841	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_134
0x4002848	          0x4889c7	                            mov rdi, rax	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_134
0x400284b	      0xe8bbe1ffff	          call sym.try_parent_shorthands	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_134
0x4002850	            0x85c0	                           test eax, eax	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_134
0x4002852	     0xf8535010000	                           jne 0x400298d	       921	rev-parse.c	FUNCTION_22	FOR_2	IF_83	CALL_134
0x4002858	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       923	rev-parse.c	FUNCTION_22	FOR_2
0x400285f	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       923	rev-parse.c	FUNCTION_22	FOR_2
0x4002866	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	       924	rev-parse.c	FUNCTION_22	FOR_2
0x4002870	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x4002877	           0xfb600	                   movzx eax, byte [rax]	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x400287a	            0x3c5e	                            cmp al, 0x5e	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x400287c	            0x7512	                           jne 0x4002890	       925	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x400287e	    0x48838530ffff	               add qword [rbp - 0xd0], 1	       926	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x4002886	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	       927	rev-parse.c	FUNCTION_22	FOR_2	IF_84
0x4002890	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x4002894	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x4002898	    0x8bb51cffffff	             mov esi, dword [rbp - 0xe4]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x400289e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x40028a5	          0x4889c7	                            mov rdi, rax	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x40028a8	      0xe800000000	                          call 0x40028ad	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x40028ad	            0x85c0	                           test eax, eax	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x40028af	            0x7535	                           jne 0x40028e6	       929	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_135
0x40028b1	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       930	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x40028b8	            0x740c	                            je 0x40028c6	       930	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x40028ba	    0x838508ffffff	               add dword [rbp - 0xf8], 1	       931	rev-parse.c	FUNCTION_22	FOR_2	IF_85	IF_86
0x40028c1	      0xe9cb000000	                           jmp 0x4002991	       934	rev-parse.c	FUNCTION_22	FOR_2	IF_85
0x40028c6	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028cd	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028d1	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028d7	          0x4889ce	                            mov rsi, rcx	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028da	            0x89c7	                            mov edi, eax	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028dc	      0xe849dbffff	                       call sym.show_rev	       933	rev-parse.c	FUNCTION_22	FOR_2	IF_85	CALL_136
0x40028e1	      0xe9ab000000	                           jmp 0x4002991	       934	rev-parse.c	FUNCTION_22	FOR_2	IF_85
0x40028e6	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       936	rev-parse.c	FUNCTION_22	FOR_2	IF_87
0x40028ed	            0x740d	                            je 0x40028fc	       936	rev-parse.c	FUNCTION_22	FOR_2	IF_87
0x40028ef	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_137
0x40028f5	            0x89c7	                            mov edi, eax	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_137
0x40028f7	      0xe887ecffff	              call sym.die_no_single_rev	       937	rev-parse.c	FUNCTION_22	FOR_2	CALL_137
0x40028fc	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	       938	rev-parse.c	FUNCTION_22	FOR_2	IF_88
0x4002903	            0x7419	                            je 0x400291e	       938	rev-parse.c	FUNCTION_22	FOR_2	IF_88
0x4002905	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_138
0x400290c	          0x4889c6	                            mov rsi, rax	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_138
0x400290f	      0xbf00000000	                              mov edi, 0	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_138
0x4002914	      0xb800000000	                              mov eax, 0	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_138
0x4002919	      0xe800000000	                          call 0x400291e	       939	rev-parse.c	FUNCTION_22	FOR_2	CALL_138
0x400291e	    0xc785fcfeffff	              mov dword [rbp - 0x104], 1	       940	rev-parse.c	FUNCTION_22	FOR_2
0x4002928	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x400292f	    0x8b9518ffffff	             mov edx, dword [rbp - 0xe8]	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x4002935	            0x89d6	                            mov esi, edx	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x4002937	          0x4889c7	                            mov rdi, rax	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x400293a	      0xe86bdeffff	                      call sym.show_file	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x400293f	            0x85c0	                           test eax, eax	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x4002941	            0x744d	                            je 0x4002990	       941	rev-parse.c	FUNCTION_22	FOR_2	IF_89	CALL_139
0x4002943	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x400294a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x4002951	      0xba01000000	                              mov edx, 1	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x4002956	          0x4889ce	                            mov rsi, rcx	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x4002959	          0x4889c7	                            mov rdi, rax	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x400295c	      0xe800000000	                          call 0x4002961	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x4002961	            0xeb2e	                           jmp 0x4002991	       943	rev-parse.c	FUNCTION_22	FOR_2	CALL_140
0x4002963	              0x90	                                     nop	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x4002964	            0xeb2b	                           jmp 0x4002991	       653	rev-parse.c	FUNCTION_22	FOR_2	IF_13
0x4002966	              0x90	                                     nop	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x4002967	            0xeb28	                           jmp 0x4002991	       662	rev-parse.c	FUNCTION_22	FOR_2	IF_15
0x4002969	              0x90	                                     nop	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x400296a	            0xeb25	                           jmp 0x4002991	       667	rev-parse.c	FUNCTION_22	FOR_2	IF_18
0x400296c	              0x90	                                     nop	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x400296d	            0xeb22	                           jmp 0x4002991	       676	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_21
0x400296f	              0x90	                                     nop	       682	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4002970	            0xeb1f	                           jmp 0x4002991	       682	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_23
0x4002972	              0x90	                                     nop	       723	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x4002973	            0xeb1c	                           jmp 0x4002991	       723	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33	IF_34
0x4002975	              0x90	                                     nop	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4002976	            0xeb19	                           jmp 0x4002991	       729	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_33
0x4002978	              0x90	                                     nop	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x4002979	            0xeb16	                           jmp 0x4002991	       759	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_41
0x400297b	              0x90	                                     nop	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x400297c	            0xeb13	                           jmp 0x4002991	       798	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_53
0x400297e	              0x90	                                     nop	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x400297f	            0xeb10	                           jmp 0x4002991	       804	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_55
0x4002981	              0x90	                                     nop	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x4002982	            0xeb0d	                           jmp 0x4002991	       820	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_59	IF_60
0x4002984	              0x90	                                     nop	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x4002985	            0xeb0a	                           jmp 0x4002991	       895	rev-parse.c	FUNCTION_22	FOR_2	IF_20	IF_74
0x4002987	              0x90	                                     nop	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x4002988	            0xeb07	                           jmp 0x4002991	       915	rev-parse.c	FUNCTION_22	FOR_2	IF_20
0x400298a	              0x90	                                     nop	       920	rev-parse.c	FUNCTION_22	FOR_2	IF_82
0x400298b	            0xeb04	                           jmp 0x4002991	       920	rev-parse.c	FUNCTION_22	FOR_2	IF_82
0x400298d	              0x90	                                     nop	       922	rev-parse.c	FUNCTION_22	FOR_2	IF_83
0x400298e	            0xeb01	                           jmp 0x4002991	       922	rev-parse.c	FUNCTION_22	FOR_2	IF_83
0x4002990	              0x90	                                     nop	       942	rev-parse.c	FUNCTION_22	FOR_2	IF_89
0x4002991	    0x8385f8feffff	              add dword [rbp - 0x108], 1	       614	rev-parse.c	FUNCTION_22	FOR_2
0x4002998	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       614	rev-parse.c	FUNCTION_22	FOR_2
0x400299e	    0x3b85ecfeffff	            cmp eax, dword [rbp - 0x114]	       614	rev-parse.c	FUNCTION_22	FOR_2
0x40029a4	     0xf8cdceeffff	                            jl 0x4001886	       614	rev-parse.c	FUNCTION_22	FOR_2
0x40029aa	        0x488d4580	                   lea rax, [rbp - 0x80]	       945	rev-parse.c	FUNCTION_22	CALL_141
0x40029ae	          0x4889c7	                            mov rdi, rax	       945	rev-parse.c	FUNCTION_22	CALL_141
0x40029b1	      0xe800000000	                          call 0x40029b6	       945	rev-parse.c	FUNCTION_22	CALL_141
0x40029b6	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	       946	rev-parse.c	FUNCTION_22	IF_90
0x40029bd	            0x7453	                            je 0x4002a12	       946	rev-parse.c	FUNCTION_22	IF_90
0x40029bf	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 1	       947	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x40029c6	            0x7522	                           jne 0x40029ea	       947	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x40029c8	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029cf	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029d3	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029d9	          0x4889ce	                            mov rsi, rcx	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029dc	            0x89c7	                            mov edi, eax	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029de	      0xe847daffff	                       call sym.show_rev	       948	rev-parse.c	FUNCTION_22	IF_90	IF_91	CALL_142
0x40029e3	      0xb800000000	                              mov eax, 0	       949	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x40029e8	            0xeb32	                           jmp 0x4002a1c	       949	rev-parse.c	FUNCTION_22	IF_90	IF_91
0x40029ea	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_143
0x40029f1	            0x7510	                           jne 0x4002a03	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_143
0x40029f3	      0xe813dcffff	                   call sym.show_default	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_143
0x40029f8	            0x85c0	                           test eax, eax	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_143
0x40029fa	            0x7407	                            je 0x4002a03	       950	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92	CALL_143
0x40029fc	      0xb800000000	                              mov eax, 0	       951	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92
0x4002a01	            0xeb19	                           jmp 0x4002a1c	       951	rev-parse.c	FUNCTION_22	IF_90	ELSE_7	IF_92
0x4002a03	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_144
0x4002a09	            0x89c7	                            mov edi, eax	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_144
0x4002a0b	      0xe873ebffff	              call sym.die_no_single_rev	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_144
0x4002a10	            0xeb05	                           jmp 0x4002a17	       952	rev-parse.c	FUNCTION_22	IF_90	CALL_144
0x4002a12	      0xe8f4dbffff	                   call sym.show_default	       954	rev-parse.c	FUNCTION_22	CALL_145
0x4002a17	      0xb800000000	                              mov eax, 0	       955	rev-parse.c	FUNCTION_22
0x4002a1c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       956	rev-parse.c	FUNCTION_22
0x4002a20	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       956	rev-parse.c	FUNCTION_22
0x4002a29	            0x7405	                            je 0x4002a30	       956	rev-parse.c	FUNCTION_22
0x4002a2b	      0xe800000000	                          call 0x4002a30	       956	rev-parse.c	FUNCTION_22
0x4002a30	              0xc9	                                   leave	       956	rev-parse.c	FUNCTION_22
0x4002a31	              0xc3	                                     ret	       956	rev-parse.c	FUNCTION_22
show_flag	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,2:functions,0:FOR,0	30
0x40005a9	              0x55	                                push rbp	       169	rev-parse.c	FUNCTION_5
0x40005aa	          0x4889e5	                            mov rbp, rsp	       169	rev-parse.c	FUNCTION_5
0x40005ad	        0x4883ec10	                           sub rsp, 0x10	       169	rev-parse.c	FUNCTION_5
0x40005b1	        0x48897df8	                mov qword [rbp - 8], rdi	       169	rev-parse.c	FUNCTION_5
0x40005b5	    0x8b0500000000	            mov eax, dword [0x040005bb] 	       170	rev-parse.c	FUNCTION_5	IF_1
0x40005bb	          0x83e004	                              and eax, 4	       170	rev-parse.c	FUNCTION_5	IF_1
0x40005be	            0x85c0	                           test eax, eax	       170	rev-parse.c	FUNCTION_5	IF_1
0x40005c0	            0x7507	                           jne 0x40005c9	       170	rev-parse.c	FUNCTION_5	IF_1
0x40005c2	      0xb800000000	                              mov eax, 0	       171	rev-parse.c	FUNCTION_5	IF_1
0x40005c7	            0xeb40	                           jmp 0x4000609	       171	rev-parse.c	FUNCTION_5	IF_1
0x40005c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005cd	          0x4889c7	                            mov rdi, rax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005d0	      0xe8bdfcffff	                call sym.is_rev_argument	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005d5	            0x85c0	                           test eax, eax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005d7	            0x7407	                            je 0x40005e0	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005d9	      0xba01000000	                              mov edx, 1	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005de	            0xeb05	                           jmp 0x40005e5	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005e0	      0xba02000000	                              mov edx, 2	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005e5	    0x8b0500000000	            mov eax, dword [0x040005eb] 	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005eb	            0x21d0	                            and eax, edx	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005ed	            0x85c0	                           test eax, eax	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005ef	            0x7413	                            je 0x4000604	       172	rev-parse.c	FUNCTION_5	IF_2	CALL_1
0x40005f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x40005f5	          0x4889c7	                            mov rdi, rax	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x40005f8	      0xe861fdffff	                           call sym.show	       173	rev-parse.c	FUNCTION_5	IF_2	CALL_2
0x40005fd	      0xb801000000	                              mov eax, 1	       174	rev-parse.c	FUNCTION_5	IF_2
0x4000602	            0xeb05	                           jmp 0x4000609	       174	rev-parse.c	FUNCTION_5	IF_2
0x4000604	      0xb800000000	                              mov eax, 0	       176	rev-parse.c	FUNCTION_5
0x4000609	              0xc9	                                   leave	       177	rev-parse.c	FUNCTION_5
0x400060a	              0xc3	                                     ret	       177	rev-parse.c	FUNCTION_5
try_parent_shorthands	SWITCH,0:WHILE,0:ELSE,3:DO,0:CALL,11:IF,12:functions,0:FOR,1	161
0x4000a0b	              0x55	                                push rbp	       299	rev-parse.c	FUNCTION_13
0x4000a0c	          0x4889e5	                            mov rbp, rsp	       299	rev-parse.c	FUNCTION_13
0x4000a0f	        0x4883ec70	                           sub rsp, 0x70	       299	rev-parse.c	FUNCTION_13
0x4000a13	        0x48897d98	             mov qword [rbp - 0x68], rdi	       299	rev-parse.c	FUNCTION_13
0x4000a17	    0x64488b042528	                mov rax, qword fs:[0x28]	       299	rev-parse.c	FUNCTION_13
0x4000a20	        0x488945f8	                mov qword [rbp - 8], rax	       299	rev-parse.c	FUNCTION_13
0x4000a24	            0x31c0	                            xor eax, eax	       299	rev-parse.c	FUNCTION_13
0x4000a26	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       305	rev-parse.c	FUNCTION_13
0x4000a2d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       306	rev-parse.c	FUNCTION_13
0x4000a34	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       307	rev-parse.c	FUNCTION_13
0x4000a3b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a3f	      0xbe00000000	                              mov esi, 0	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a44	          0x4889c7	                            mov rdi, rax	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a47	      0xe800000000	                          call 0x4000a4c	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a4c	        0x488945c0	             mov qword [rbp - 0x40], rax	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a50	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a55	            0x7424	                            je 0x4000a7b	       309	rev-parse.c	FUNCTION_13	IF_1	CALL_1
0x4000a57	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       310	rev-parse.c	FUNCTION_13	IF_1
0x4000a5e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a62	        0x4883c002	                              add rax, 2	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a66	           0xfb600	                   movzx eax, byte [rax]	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a69	            0x84c0	                             test al, al	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a6b	     0xf84c7000000	                            je 0x4000b38	       311	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a71	      0xb800000000	                              mov eax, 0	       312	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a76	      0xe9f2010000	                           jmp 0x4000c6d	       312	rev-parse.c	FUNCTION_13	IF_1	IF_2
0x4000a7b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a7f	      0xbe00000000	                              mov esi, 0	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a84	          0x4889c7	                            mov rdi, rax	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a87	      0xe800000000	                          call 0x4000a8c	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a8c	        0x488945c0	             mov qword [rbp - 0x40], rax	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a90	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a95	            0x7424	                            je 0x4000abb	       313	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000a97	    0xc745b0010000	               mov dword [rbp - 0x50], 1	       314	rev-parse.c	FUNCTION_13	ELSE_1	IF_3
0x4000a9e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000aa2	        0x4883c002	                              add rax, 2	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000aa6	           0xfb600	                   movzx eax, byte [rax]	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000aa9	            0x84c0	                             test al, al	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000aab	     0xf8487000000	                            je 0x4000b38	       315	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000ab1	      0xb800000000	                              mov eax, 0	       316	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000ab6	      0xe9b2010000	                           jmp 0x4000c6d	       316	rev-parse.c	FUNCTION_13	ELSE_1	IF_3	IF_4
0x4000abb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000abf	      0xbe00000000	                              mov esi, 0	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000ac4	          0x4889c7	                            mov rdi, rax	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000ac7	      0xe800000000	                          call 0x4000acc	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000acc	        0x488945c0	             mov qword [rbp - 0x40], rax	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000ad0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000ad5	            0x7457	                            je 0x4000b2e	       317	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	CALL_3
0x4000ad7	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       318	rev-parse.c	FUNCTION_13	ELSE_2	IF_5
0x4000ade	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       319	rev-parse.c	FUNCTION_13	ELSE_2	IF_5
0x4000ae5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0x4000ae9	        0x4883c002	                              add rax, 2	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0x4000aed	           0xfb600	                   movzx eax, byte [rax]	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0x4000af0	            0x84c0	                             test al, al	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0x4000af2	            0x7444	                            je 0x4000b38	       321	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6
0x4000af4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000af8	        0x488d4802	                      lea rcx, [rax + 2]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000afc	        0x488d45b8	                   lea rax, [rbp - 0x48]	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b00	      0xba0a000000	                            mov edx, 0xa	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b05	          0x4889c6	                            mov rsi, rax	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b08	          0x4889cf	                            mov rdi, rcx	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b0b	      0xe800000000	                          call 0x4000b10	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b10	          0x8945b4	             mov dword [rbp - 0x4c], eax	       323	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	CALL_4
0x4000b13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b17	           0xfb600	                   movzx eax, byte [rax]	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b1a	            0x84c0	                             test al, al	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b1c	            0x7506	                           jne 0x4000b24	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b1e	        0x837db400	               cmp dword [rbp - 0x4c], 0	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b22	            0x7514	                           jne 0x4000b38	       324	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b24	      0xb800000000	                              mov eax, 0	       325	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b29	      0xe93f010000	                           jmp 0x4000c6d	       325	rev-parse.c	FUNCTION_13	ELSE_2	IF_5	IF_6	IF_7
0x4000b2e	      0xb800000000	                              mov eax, 0	       328	rev-parse.c	FUNCTION_13	ELSE_3
0x4000b33	      0xe935010000	                           jmp 0x4000c6d	       328	rev-parse.c	FUNCTION_13	ELSE_3
0x4000b38	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       330	rev-parse.c	FUNCTION_13	ELSE_3
0x4000b3c	          0xc60000	                       mov byte [rax], 0	       330	rev-parse.c	FUNCTION_13	ELSE_3
0x4000b3f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b43	        0x488b4598	             mov rax, qword [rbp - 0x68]	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b47	          0x4889d6	                            mov rsi, rdx	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b4a	          0x4889c7	                            mov rdi, rax	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b4d	      0xe800000000	                          call 0x4000b52	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b52	            0x85c0	                           test eax, eax	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b54	            0x7411	                            je 0x4000b67	       331	rev-parse.c	FUNCTION_13	ELSE_3	IF_8	CALL_5
0x4000b56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       332	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0x4000b5a	          0xc6005e	                    mov byte [rax], 0x5e	       332	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0x4000b5d	      0xb800000000	                              mov eax, 0	       333	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0x4000b62	      0xe906010000	                           jmp 0x4000c6d	       333	rev-parse.c	FUNCTION_13	ELSE_3	IF_8
0x4000b67	        0x488d45e0	                   lea rax, [rbp - 0x20]	       336	rev-parse.c	FUNCTION_13	CALL_6
0x4000b6b	          0x4889c7	                            mov rdi, rax	       336	rev-parse.c	FUNCTION_13	CALL_6
0x4000b6e	      0xe800000000	                          call 0x4000b73	       336	rev-parse.c	FUNCTION_13	CALL_6
0x4000b73	        0x488945d8	             mov qword [rbp - 0x28], rax	       336	rev-parse.c	FUNCTION_13	CALL_6
0x4000b77	        0x837db400	               cmp dword [rbp - 0x4c], 0	       337	rev-parse.c	FUNCTION_13	IF_9
0x4000b7b	            0x742a	                            je 0x4000ba7	       337	rev-parse.c	FUNCTION_13	IF_9
0x4000b7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b81	        0x488b4030	            mov rax, qword [rax + 0x30] 	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b85	          0x4889c7	                            mov rdi, rax	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b88	      0xe800000000	                          call 0x4000b8d	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b8d	            0x89c2	                            mov edx, eax	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b8f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       338	rev-parse.c	FUNCTION_13	IF_9	CALL_7
0x4000b92	            0x39c2	                            cmp edx, eax	       337	rev-parse.c	FUNCTION_13	IF_9
0x4000b94	            0x7311	                           jae 0x4000ba7	       337	rev-parse.c	FUNCTION_13	IF_9
0x4000b96	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       339	rev-parse.c	FUNCTION_13	IF_9
0x4000b9a	          0xc6005e	                    mov byte [rax], 0x5e	       339	rev-parse.c	FUNCTION_13	IF_9
0x4000b9d	      0xb800000000	                              mov eax, 0	       340	rev-parse.c	FUNCTION_13	IF_9
0x4000ba2	      0xe9c6000000	                           jmp 0x4000c6d	       340	rev-parse.c	FUNCTION_13	IF_9
0x4000ba7	        0x837dac00	               cmp dword [rbp - 0x54], 0	       343	rev-parse.c	FUNCTION_13	IF_10
0x4000bab	            0x7415	                            je 0x4000bc2	       343	rev-parse.c	FUNCTION_13	IF_10
0x4000bad	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       344	rev-parse.c	FUNCTION_13	CALL_8
0x4000bb1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       344	rev-parse.c	FUNCTION_13	CALL_8
0x4000bb5	          0x4889c6	                            mov rsi, rax	       344	rev-parse.c	FUNCTION_13	CALL_8
0x4000bb8	      0xbf00000000	                              mov edi, 0	       344	rev-parse.c	FUNCTION_13	CALL_8
0x4000bbd	      0xe868f8ffff	                       call sym.show_rev	       344	rev-parse.c	FUNCTION_13	CALL_8
0x4000bc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000bc6	        0x488b4030	            mov rax, qword [rax + 0x30] 	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000bca	        0x488945c8	             mov qword [rbp - 0x38], rax	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000bce	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000bd5	            0xeb7f	                           jmp 0x4000c56	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000bd7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       348	rev-parse.c	FUNCTION_13	FOR_1
0x4000bdf	        0x837db400	               cmp dword [rbp - 0x4c], 0	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000be3	            0x7408	                            je 0x4000bed	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000be5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000be8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000beb	            0x7558	                           jne 0x4000c45	       350	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000bed	    0x8b0500000000	            mov eax, dword [0x04000bf3] 	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0x4000bf3	            0x85c0	                           test eax, eax	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0x4000bf5	            0x741d	                            je 0x4000c14	       353	rev-parse.c	FUNCTION_13	FOR_1	IF_12
0x4000bf7	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000bfa	        0x488b4598	             mov rax, qword [rbp - 0x68]	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000bfe	          0x4889c6	                            mov rsi, rax	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000c01	      0xbf00000000	                              mov edi, 0	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000c06	      0xb800000000	                              mov eax, 0	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000c0b	      0xe800000000	                          call 0x4000c10	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000c10	        0x488945d0	             mov qword [rbp - 0x30], rax	       354	rev-parse.c	FUNCTION_13	FOR_1	CALL_9
0x4000c14	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	rev-parse.c	FUNCTION_13	FOR_1
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       356	rev-parse.c	FUNCTION_13	FOR_1
0x4000c1b	        0x488d4804	                      lea rcx, [rax + 4]	       356	rev-parse.c	FUNCTION_13	FOR_1
0x4000c1f	        0x837db000	               cmp dword [rbp - 0x50], 0	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c23	           0xf94c0	                                 sete al	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c26	           0xfb6c0	                           movzx eax, al	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c29	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c2d	          0x4889ce	                            mov rsi, rcx	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c30	            0x89c7	                            mov edi, eax	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c32	      0xe8f3f7ffff	                       call sym.show_rev	       355	rev-parse.c	FUNCTION_13	FOR_1	CALL_10
0x4000c37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0x4000c3b	          0x4889c7	                            mov rdi, rax	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0x4000c3e	      0xe800000000	                          call 0x4000c43	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0x4000c43	            0xeb01	                           jmp 0x4000c46	       357	rev-parse.c	FUNCTION_13	FOR_1	CALL_11
0x4000c45	              0x90	                                     nop	       351	rev-parse.c	FUNCTION_13	FOR_1	IF_11
0x4000c46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	rev-parse.c	FUNCTION_13	FOR_1
0x4000c4a	        0x488b4008	                mov rax, qword [rax + 8]	       347	rev-parse.c	FUNCTION_13	FOR_1
0x4000c4e	        0x488945c8	             mov qword [rbp - 0x38], rax	       347	rev-parse.c	FUNCTION_13	FOR_1
0x4000c52	        0x8345a801	               add dword [rbp - 0x58], 1	       347	rev-parse.c	FUNCTION_13	FOR_1
0x4000c56	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000c5b	     0xf8576ffffff	                           jne 0x4000bd7	       345	rev-parse.c	FUNCTION_13	FOR_1
0x4000c61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       360	rev-parse.c	FUNCTION_13
0x4000c65	          0xc6005e	                    mov byte [rax], 0x5e	       360	rev-parse.c	FUNCTION_13
0x4000c68	      0xb801000000	                              mov eax, 1	       361	rev-parse.c	FUNCTION_13
0x4000c6d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       362	rev-parse.c	FUNCTION_13
0x4000c71	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       362	rev-parse.c	FUNCTION_13
0x4000c7a	            0x7405	                            je 0x4000c81	       362	rev-parse.c	FUNCTION_13
0x4000c7c	      0xe800000000	                          call 0x4000c81	       362	rev-parse.c	FUNCTION_13
0x4000c81	              0xc9	                                   leave	       362	rev-parse.c	FUNCTION_13
0x4000c82	              0xc3	                                     ret	       362	rev-parse.c	FUNCTION_13
die_no_single_rev	SWITCH,0:WHILE,0:ELSE,1:DO,0:CALL,2:IF,1:functions,0:FOR,0	11
0x4001583	              0x55	                                push rbp	       537	rev-parse.c	FUNCTION_19
0x4001584	          0x4889e5	                            mov rbp, rsp	       537	rev-parse.c	FUNCTION_19
0x4001587	        0x4883ec10	                           sub rsp, 0x10	       537	rev-parse.c	FUNCTION_19
0x400158b	          0x897dfc	                mov dword [rbp - 4], edi	       537	rev-parse.c	FUNCTION_19
0x400158e	        0x837dfc00	                  cmp dword [rbp - 4], 0	       538	rev-parse.c	FUNCTION_19	IF_1
0x4001592	            0x740a	                            je 0x400159e	       538	rev-parse.c	FUNCTION_19	IF_1
0x4001594	      0xbf01000000	                              mov edi, 1	       539	rev-parse.c	FUNCTION_19	CALL_1
0x4001599	      0xe800000000	                          call 0x400159e	       539	rev-parse.c	FUNCTION_19	CALL_1
0x400159e	      0xbf00000000	                              mov edi, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x40015a3	      0xb800000000	                              mov eax, 0	       541	rev-parse.c	FUNCTION_19	CALL_2
0x40015a8	      0xe800000000	                 call sym.opt_with_value	       541	rev-parse.c	FUNCTION_19	CALL_2
const_error	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,0:IF,0:functions,0:FOR,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_39
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_39
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_39
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_39
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_39
skipspaces	SWITCH,0:WHILE,1:ELSE,0:DO,0:CALL,0:IF,0:functions,0:FOR,0	17
0x4000d83	              0x55	                                push rbp	       384	rev-parse.c	FUNCTION_15
0x4000d84	          0x4889e5	                            mov rbp, rsp	       384	rev-parse.c	FUNCTION_15
0x4000d87	        0x48897df8	                mov qword [rbp - 8], rdi	       384	rev-parse.c	FUNCTION_15
0x4000d8b	            0xeb05	                           jmp 0x4000d92	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d8d	      0x488345f801	                  add qword [rbp - 8], 1	       386	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d92	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d96	           0xfb600	                   movzx eax, byte [rax]	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d99	           0xfb6c0	                           movzx eax, al	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d9c	            0x4898	                                    cdqe	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000d9e	     0xfb680000000	                   movzx eax, byte [rax]	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000da5	           0xfb6c0	                           movzx eax, al	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000da8	          0x83e001	                              and eax, 1	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000dab	            0x85c0	                           test eax, eax	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000dad	            0x75de	                           jne 0x4000d8d	       385	rev-parse.c	FUNCTION_15	WHILE_1
0x4000daf	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	rev-parse.c	FUNCTION_15
0x4000db3	              0x5d	                                 pop rbp	       388	rev-parse.c	FUNCTION_15
0x4000db4	              0xc3	                                     ret	       388	rev-parse.c	FUNCTION_15
show_default	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,2:functions,0:FOR,0	32
0x400060b	              0x55	                                push rbp	       180	rev-parse.c	FUNCTION_6
0x400060c	          0x4889e5	                            mov rbp, rsp	       180	rev-parse.c	FUNCTION_6
0x400060f	        0x4883ec30	                           sub rsp, 0x30	       180	rev-parse.c	FUNCTION_6
0x4000613	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	rev-parse.c	FUNCTION_6
0x400061c	        0x488945f8	                mov qword [rbp - 8], rax	       180	rev-parse.c	FUNCTION_6
0x4000620	            0x31c0	                            xor eax, eax	       180	rev-parse.c	FUNCTION_6
0x4000622	    0x488b05000000	            mov rax, qword [0x04000629] 	       181	rev-parse.c	FUNCTION_6
0x4000629	        0x488945d8	             mov qword [rbp - 0x28], rax	       181	rev-parse.c	FUNCTION_6
0x400062d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       183	rev-parse.c	FUNCTION_6	IF_1
0x4000632	            0x743e	                            je 0x4000672	       183	rev-parse.c	FUNCTION_6	IF_1
0x4000634	    0x48c705000000	               mov qword [0x0400063f], 0	       186	rev-parse.c	FUNCTION_6	IF_1
0x400063f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000643	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000647	          0x4889d6	                            mov rsi, rdx	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400064a	          0x4889c7	                            mov rdi, rax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400064d	      0xe800000000	                          call 0x4000652	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000652	            0x85c0	                           test eax, eax	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000654	            0x751c	                           jne 0x4000672	       187	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000656	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x400065a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x400065e	          0x4889c6	                            mov rsi, rax	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x4000661	      0xbf00000000	                              mov edi, 0	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x4000666	      0xe8bffdffff	                       call sym.show_rev	       188	rev-parse.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x400066b	      0xb801000000	                              mov eax, 1	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x4000670	            0xeb05	                           jmp 0x4000677	       189	rev-parse.c	FUNCTION_6	IF_1	IF_2
0x4000672	      0xb800000000	                              mov eax, 0	       192	rev-parse.c	FUNCTION_6
0x4000677	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	rev-parse.c	FUNCTION_6
0x400067b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	rev-parse.c	FUNCTION_6
0x4000684	            0x7405	                            je 0x400068b	       193	rev-parse.c	FUNCTION_6
0x4000686	      0xe800000000	                          call 0x400068b	       193	rev-parse.c	FUNCTION_6
0x400068b	              0xc9	                                   leave	       193	rev-parse.c	FUNCTION_6
0x400068c	              0xc3	                                     ret	       193	rev-parse.c	FUNCTION_6
show_with_type	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,2:IF,1:functions,0:FOR,0	16
0x40003f7	              0x55	                                push rbp	       118	rev-parse.c	FUNCTION_3
0x40003f8	          0x4889e5	                            mov rbp, rsp	       118	rev-parse.c	FUNCTION_3
0x40003fb	        0x4883ec10	                           sub rsp, 0x10	       118	rev-parse.c	FUNCTION_3
0x40003ff	          0x897dfc	                mov dword [rbp - 4], edi	       118	rev-parse.c	FUNCTION_3
0x4000402	        0x488975f0	             mov qword [rbp - 0x10], rsi	       118	rev-parse.c	FUNCTION_3
0x4000406	    0x8b0500000000	            mov eax, dword [0x0400040c] 	       119	rev-parse.c	FUNCTION_3	IF_1
0x400040c	          0x3945fc	                cmp dword [rbp - 4], eax	       119	rev-parse.c	FUNCTION_3	IF_1
0x400040f	            0x740a	                            je 0x400041b	       119	rev-parse.c	FUNCTION_3	IF_1
0x4000411	      0xbf5e000000	                           mov edi, 0x5e	       120	rev-parse.c	FUNCTION_3	CALL_1
0x4000416	      0xe800000000	                          call 0x400041b	       120	rev-parse.c	FUNCTION_3	CALL_1
0x400041b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	rev-parse.c	FUNCTION_3	CALL_2
0x400041f	          0x4889c7	                            mov rdi, rax	       121	rev-parse.c	FUNCTION_3	CALL_2
0x4000422	      0xe837ffffff	                           call sym.show	       121	rev-parse.c	FUNCTION_3	CALL_2
0x4000427	              0x90	                                     nop	       122	rev-parse.c	FUNCTION_3
0x4000428	              0xc9	                                   leave	       122	rev-parse.c	FUNCTION_3
0x4000429	              0xc3	                                     ret	       122	rev-parse.c	FUNCTION_3
show_datestring	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,4:IF,1:functions,0:FOR,0	30
0x4000741	              0x55	                                push rbp	       216	rev-parse.c	FUNCTION_10
0x4000742	          0x4889e5	                            mov rbp, rsp	       216	rev-parse.c	FUNCTION_10
0x4000745	        0x4883ec20	                           sub rsp, 0x20	       216	rev-parse.c	FUNCTION_10
0x4000749	        0x48897de8	             mov qword [rbp - 0x18], rdi	       216	rev-parse.c	FUNCTION_10
0x400074d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       216	rev-parse.c	FUNCTION_10
0x4000751	    0x8b0500000000	            mov eax, dword [0x04000757] 	       220	rev-parse.c	FUNCTION_10	IF_1
0x4000757	          0x83e005	                              and eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x400075a	          0x83f805	                              cmp eax, 5	       220	rev-parse.c	FUNCTION_10	IF_1
0x400075d	            0x7548	                           jne 0x40007a7	       220	rev-parse.c	FUNCTION_10	IF_1
0x400075f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000763	      0xbe00000000	                              mov esi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000768	          0x4889c7	                            mov rdi, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400076b	      0xe800000000	                          call 0x4000770	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000770	          0x4889c2	                            mov rdx, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000777	          0x4889c6	                            mov rsi, rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400077a	      0xbf00000000	                              mov edi, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400077f	      0xb800000000	                              mov eax, 0	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000784	      0xe800000000	                          call 0x4000789	       222	rev-parse.c	FUNCTION_10	CALL_2
0x4000789	        0x488945f8	                mov qword [rbp - 8], rax	       222	rev-parse.c	FUNCTION_10	CALL_2
0x400078d	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	rev-parse.c	FUNCTION_10	CALL_3
0x4000791	          0x4889c7	                            mov rdi, rax	       223	rev-parse.c	FUNCTION_10	CALL_3
0x4000794	      0xe8c5fbffff	                           call sym.show	       223	rev-parse.c	FUNCTION_10	CALL_3
0x4000799	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	rev-parse.c	FUNCTION_10	CALL_4
0x400079d	          0x4889c7	                            mov rdi, rax	       224	rev-parse.c	FUNCTION_10	CALL_4
0x40007a0	      0xe800000000	                          call 0x40007a5	       224	rev-parse.c	FUNCTION_10	CALL_4
0x40007a5	            0xeb01	                           jmp 0x40007a8	       224	rev-parse.c	FUNCTION_10	CALL_4
0x40007a7	              0x90	                                     nop	       221	rev-parse.c	FUNCTION_10	IF_1
0x40007a8	              0xc9	                                   leave	       225	rev-parse.c	FUNCTION_10
0x40007a9	              0xc3	                                     ret	       225	rev-parse.c	FUNCTION_10
findspace	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,0:IF,1:functions,0:FOR,1	23
0x4000db5	              0x55	                                push rbp	       391	rev-parse.c	FUNCTION_16
0x4000db6	          0x4889e5	                            mov rbp, rsp	       391	rev-parse.c	FUNCTION_16
0x4000db9	        0x48897df8	                mov qword [rbp - 8], rdi	       391	rev-parse.c	FUNCTION_16
0x4000dbd	            0xeb28	                           jmp 0x4000de7	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000dbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dc3	           0xfb600	                   movzx eax, byte [rax]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dc6	           0xfb6c0	                           movzx eax, al	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dc9	            0x4898	                                    cdqe	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dcb	     0xfb680000000	                   movzx eax, byte [rax]	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dd2	           0xfb6c0	                           movzx eax, al	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dd5	          0x83e001	                              and eax, 1	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dd8	            0x85c0	                           test eax, eax	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000dda	            0x7406	                            je 0x4000de2	       393	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000ddc	        0x488b45f8	                mov rax, qword [rbp - 8]	       394	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000de0	            0xeb15	                           jmp 0x4000df7	       394	rev-parse.c	FUNCTION_16	FOR_1	IF_1
0x4000de2	      0x488345f801	                  add qword [rbp - 8], 1	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000de7	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000deb	           0xfb600	                   movzx eax, byte [rax]	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000dee	            0x84c0	                             test al, al	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000df0	            0x75cd	                           jne 0x4000dbf	       392	rev-parse.c	FUNCTION_16	FOR_1
0x4000df2	      0xb800000000	                              mov eax, 0	       395	rev-parse.c	FUNCTION_16
0x4000df7	              0x5d	                                 pop rbp	       396	rev-parse.c	FUNCTION_16
0x4000df8	              0xc3	                                     ret	       396	rev-parse.c	FUNCTION_16
st_mult	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,1:IF,1:functions,0:FOR,0	22
0x40000a1	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_48
0x40000a2	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_48
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_48
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_48
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_48
0x40000b1	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000b6	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000b8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000bf	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000c4	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000c8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000cc	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_48	IF_1
0x40000ce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000d6	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000d9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000de	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000e3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_48	IF_1	CALL_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_48
0x40000ec	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_48
0x40000f1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_48
0x40000f2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_48
_	SWITCH,0:WHILE,0:ELSE,0:DO,0:CALL,0:IF,1:functions,0:FOR,0	15
0x4000266	              0x55	                                push rbp	        51	gettext.h	FUNCTION_63
0x4000267	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_63
0x400026a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_63
0x400026e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_63
0x4000272	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_63	IF_1
0x4000276	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_63	IF_1
0x4000279	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_63	IF_1
0x400027b	            0x7507	                           jne 0x4000284	        52	gettext.h	FUNCTION_63	IF_1
0x400027d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_63	IF_1
0x4000282	            0xeb0c	                           jmp 0x4000290	        53	gettext.h	FUNCTION_63	IF_1
0x4000284	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_63
0x4000288	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_63
0x400028b	      0xe800000000	                          call 0x4000290	        54	gettext.h	FUNCTION_63
0x4000290	              0xc9	                                   leave	        55	gettext.h	FUNCTION_63
0x4000291	              0xc3	                                     ret	        55	gettext.h	FUNCTION_63
