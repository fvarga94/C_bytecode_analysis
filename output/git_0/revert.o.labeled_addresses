_	IF,1:CALL,0:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	15
0x40000c5	              0x55	                                push rbp	        51	gettext.h	FUNCTION_3
0x40000c6	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_3
0x40000c9	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_3
0x40000cd	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_3
0x40000d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_3	IF_1
0x40000d5	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_3	IF_1
0x40000d8	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_3	IF_1
0x40000da	            0x7507	                           jne 0x40000e3	        52	gettext.h	FUNCTION_3	IF_1
0x40000dc	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_3	IF_1
0x40000e1	            0xeb0c	                           jmp 0x40000ef	        53	gettext.h	FUNCTION_3	IF_1
0x40000e3	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_3
0x40000e7	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_3
0x40000ea	      0xe800000000	                          call 0x40000ef	        54	gettext.h	FUNCTION_3
0x40000ef	              0xc9	                                   leave	        55	gettext.h	FUNCTION_3
0x40000f0	              0xc3	                                     ret	        55	gettext.h	FUNCTION_3
option_parse_m	IF,2:CALL,2:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	49
0x4000263	              0x55	                                push rbp	        60	revert.c	FUNCTION_8
0x4000264	          0x4889e5	                            mov rbp, rsp	        60	revert.c	FUNCTION_8
0x4000267	        0x4883ec40	                           sub rsp, 0x40	        60	revert.c	FUNCTION_8
0x400026b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        60	revert.c	FUNCTION_8
0x400026f	        0x488975d0	             mov qword [rbp - 0x30], rsi	        60	revert.c	FUNCTION_8
0x4000273	          0x8955cc	             mov dword [rbp - 0x34], edx	        60	revert.c	FUNCTION_8
0x4000276	    0x64488b042528	                mov rax, qword fs:[0x28]	        60	revert.c	FUNCTION_8
0x400027f	        0x488945f8	                mov qword [rbp - 8], rax	        60	revert.c	FUNCTION_8
0x4000283	            0x31c0	                            xor eax, eax	        60	revert.c	FUNCTION_8
0x4000285	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        61	revert.c	FUNCTION_8
0x4000289	        0x488b4010	            mov rax, qword [rax + 0x10] 	        61	revert.c	FUNCTION_8
0x400028d	        0x488945f0	             mov qword [rbp - 0x10], rax	        61	revert.c	FUNCTION_8
0x4000291	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        64	revert.c	FUNCTION_8	IF_1
0x4000295	            0x7412	                            je 0x40002a9	        64	revert.c	FUNCTION_8	IF_1
0x4000297	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        65	revert.c	FUNCTION_8	IF_1
0x400029b	    0xc7402c000000	               mov dword [rax + 0x2c], 0	        65	revert.c	FUNCTION_8	IF_1
0x40002a2	      0xb800000000	                              mov eax, 0	        66	revert.c	FUNCTION_8	IF_1
0x40002a7	            0xeb59	                           jmp 0x4000302	        66	revert.c	FUNCTION_8	IF_1
0x40002a9	        0x488d4de8	                   lea rcx, [rbp - 0x18]	        69	revert.c	FUNCTION_8	CALL_1
0x40002ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        69	revert.c	FUNCTION_8	CALL_1
0x40002b1	      0xba0a000000	                            mov edx, 0xa	        69	revert.c	FUNCTION_8	CALL_1
0x40002b6	          0x4889ce	                            mov rsi, rcx	        69	revert.c	FUNCTION_8	CALL_1
0x40002b9	          0x4889c7	                            mov rdi, rax	        69	revert.c	FUNCTION_8	CALL_1
0x40002bc	      0xe800000000	                          call 0x40002c1	        69	revert.c	FUNCTION_8	CALL_1
0x40002c1	            0x89c2	                            mov edx, eax	        69	revert.c	FUNCTION_8	CALL_1
0x40002c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	revert.c	FUNCTION_8	CALL_1
0x40002c7	          0x89502c	             mov dword [rax + 0x2c], edx	        69	revert.c	FUNCTION_8	CALL_1
0x40002ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	revert.c	FUNCTION_8	IF_2
0x40002ce	           0xfb600	                   movzx eax, byte [rax]	        70	revert.c	FUNCTION_8	IF_2
0x40002d1	            0x84c0	                             test al, al	        70	revert.c	FUNCTION_8	IF_2
0x40002d3	            0x750b	                           jne 0x40002e0	        70	revert.c	FUNCTION_8	IF_2
0x40002d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	revert.c	FUNCTION_8	IF_2
0x40002d9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        70	revert.c	FUNCTION_8	IF_2
0x40002dc	            0x85c0	                           test eax, eax	        70	revert.c	FUNCTION_8	IF_2
0x40002de	            0x7f1d	                            jg 0x40002fd	        70	revert.c	FUNCTION_8	IF_2
0x40002e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        71	revert.c	FUNCTION_8	CALL_2
0x40002e4	      0xba00000000	                              mov edx, 0	        71	revert.c	FUNCTION_8	CALL_2
0x40002e9	      0xbe00000000	                              mov esi, 0	        71	revert.c	FUNCTION_8	CALL_2
0x40002ee	          0x4889c7	                            mov rdi, rax	        71	revert.c	FUNCTION_8	CALL_2
0x40002f1	      0xe800000000	                          call 0x40002f6	        71	revert.c	FUNCTION_8	CALL_2
0x40002f6	      0xe845fdffff	                    call sym.const_error	        71	revert.c	FUNCTION_8	CALL_2
0x40002fb	            0xeb05	                           jmp 0x4000302	        71	revert.c	FUNCTION_8	CALL_2
0x40002fd	      0xb800000000	                              mov eax, 0	        73	revert.c	FUNCTION_8
0x4000302	        0x488b4df8	                mov rcx, qword [rbp - 8]	        74	revert.c	FUNCTION_8
0x4000306	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	revert.c	FUNCTION_8
0x400030f	            0x7405	                            je 0x4000316	        74	revert.c	FUNCTION_8
0x4000311	      0xe800000000	                          call 0x4000316	        74	revert.c	FUNCTION_8
0x4000316	              0xc9	                                   leave	        74	revert.c	FUNCTION_8
0x4000317	              0xc3	                                     ret	        74	revert.c	FUNCTION_8
revert_or_cherry_pick_usage	IF,0:CALL,0:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	12
0x4000111	              0x55	                                push rbp	        40	revert.c	FUNCTION_6
0x4000112	          0x4889e5	                            mov rbp, rsp	        40	revert.c	FUNCTION_6
0x4000115	        0x48897df8	                mov qword [rbp - 8], rdi	        40	revert.c	FUNCTION_6
0x4000119	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	revert.c	FUNCTION_6
0x400011d	            0x8b00	                    mov eax, dword [rax]	        41	revert.c	FUNCTION_6
0x400011f	            0x85c0	                           test eax, eax	        41	revert.c	FUNCTION_6
0x4000121	            0x7507	                           jne 0x400012a	        41	revert.c	FUNCTION_6
0x4000123	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_6
0x4000128	            0xeb05	                           jmp 0x400012f	        41	revert.c	FUNCTION_6
0x400012a	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_6
0x400012f	              0x5d	                                 pop rbp	        42	revert.c	FUNCTION_6
0x4000130	              0xc3	                                     ret	        42	revert.c	FUNCTION_6
st_mult	IF,1:CALL,1:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	22
0x400004b	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_27
0x400004c	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_27
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_27
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_27
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_27
0x400005b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000060	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000062	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000069	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_27	IF_1
0x400006e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000072	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000076	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_27	IF_1
0x4000078	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000080	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000083	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000088	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x400008d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000092	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_27
0x4000096	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_27
0x400009b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_27
0x400009c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_27
verify_opt_compatible	IF,2:CALL,6:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,1	84
0x4000318	              0x55	                                push rbp	        78	revert.c	FUNCTION_9
0x4000319	          0x4889e5	                            mov rbp, rsp	        78	revert.c	FUNCTION_9
0x400031c	    0x4881ecf00000	                           sub rsp, 0xf0	        78	revert.c	FUNCTION_9
0x4000323	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        78	revert.c	FUNCTION_9
0x400032a	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        78	revert.c	FUNCTION_9
0x4000331	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        78	revert.c	FUNCTION_9
0x4000338	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        78	revert.c	FUNCTION_9
0x400033f	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        78	revert.c	FUNCTION_9
0x4000346	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        78	revert.c	FUNCTION_9
0x400034d	            0x84c0	                             test al, al	        78	revert.c	FUNCTION_9
0x400034f	            0x7420	                            je 0x4000371	        78	revert.c	FUNCTION_9
0x4000351	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        78	revert.c	FUNCTION_9
0x4000355	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        78	revert.c	FUNCTION_9
0x4000359	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        78	revert.c	FUNCTION_9
0x400035d	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        78	revert.c	FUNCTION_9
0x4000361	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        78	revert.c	FUNCTION_9
0x4000365	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        78	revert.c	FUNCTION_9
0x4000369	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        78	revert.c	FUNCTION_9
0x400036d	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        78	revert.c	FUNCTION_9
0x4000371	    0x64488b042528	                mov rax, qword fs:[0x28]	        78	revert.c	FUNCTION_9
0x400037a	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        78	revert.c	FUNCTION_9
0x4000381	            0x31c0	                            xor eax, eax	        78	revert.c	FUNCTION_9
0x4000383	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        82	revert.c	FUNCTION_9	CALL_1
0x400038d	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        82	revert.c	FUNCTION_9	CALL_1
0x4000397	        0x488d4510	                   lea rax, [rbp + 0x10]	        82	revert.c	FUNCTION_9	CALL_1
0x400039b	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        82	revert.c	FUNCTION_9	CALL_1
0x40003a2	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        82	revert.c	FUNCTION_9	CALL_1
0x40003a9	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        82	revert.c	FUNCTION_9	CALL_1
0x40003b0	            0xeb46	                           jmp 0x40003f8	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x40003b2	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003b8	          0x83f830	                           cmp eax, 0x30	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003bb	            0x7323	                           jae 0x40003e0	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003bd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003c4	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003ca	            0x89d2	                            mov edx, edx	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003cc	          0x4801d0	                            add rax, rdx	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003cf	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003d5	          0x83c208	                              add edx, 8	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003d8	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003de	            0xeb12	                           jmp 0x40003f2	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003e0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003e7	        0x488d5008	                      lea rdx, [rax + 8]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003eb	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003f2	            0x8b00	                    mov eax, dword [rax]	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003f4	            0x85c0	                           test eax, eax	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003f6	            0x755a	                           jne 0x4000452	        84	revert.c	FUNCTION_9	WHILE_1	IF_1	CALL_3
0x40003f8	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x40003fe	          0x83f830	                           cmp eax, 0x30	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000401	            0x7323	                           jae 0x4000426	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000403	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400040a	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000410	            0x89d2	                            mov edx, edx	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000412	          0x4801d0	                            add rax, rdx	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000415	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400041b	          0x83c208	                              add edx, 8	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400041e	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000424	            0xeb12	                           jmp 0x4000438	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000426	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400042d	        0x488d5008	                      lea rdx, [rax + 8]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000431	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000438	          0x488b00	                    mov rax, qword [rax]	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400043b	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000442	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x400044a	     0xf8562ffffff	                           jne 0x40003b2	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000450	            0xeb01	                           jmp 0x4000453	        83	revert.c	FUNCTION_9	WHILE_1	CALL_2
0x4000452	              0x90	                                     nop	        85	revert.c	FUNCTION_9	WHILE_1	IF_1
0x4000453	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        89	revert.c	FUNCTION_9	IF_2
0x400045b	            0x742f	                            je 0x400048c	        89	revert.c	FUNCTION_9	IF_2
0x400045d	      0xbf00000000	                              mov edi, 0	        90	revert.c	FUNCTION_9	CALL_6
0x4000462	      0xe85efcffff	                               call sym.	        90	revert.c	FUNCTION_9	CALL_6
0x4000467	          0x4889c7	                            mov rdi, rax	        90	revert.c	FUNCTION_9	CALL_6
0x400046a	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	        90	revert.c	FUNCTION_9	CALL_6
0x4000471	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        90	revert.c	FUNCTION_9	CALL_6
0x4000478	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        90	revert.c	FUNCTION_9	CALL_6
0x400047f	          0x4889c6	                            mov rsi, rax	        90	revert.c	FUNCTION_9	CALL_6
0x4000482	      0xb800000000	                              mov eax, 0	        90	revert.c	FUNCTION_9	CALL_6
0x4000487	      0xe800000000	                          call 0x400048c	        90	revert.c	FUNCTION_9	CALL_6
0x400048c	              0x90	                                     nop	        91	revert.c	FUNCTION_9
0x400048d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        91	revert.c	FUNCTION_9
0x4000494	    0x644833042528	                xor rax, qword fs:[0x28]	        91	revert.c	FUNCTION_9
0x400049d	            0x7405	                            je 0x40004a4	        91	revert.c	FUNCTION_9
0x400049f	      0xe800000000	                          call 0x40004a4	        91	revert.c	FUNCTION_9
0x40004a4	              0xc9	                                   leave	        91	revert.c	FUNCTION_9
0x40004a5	              0xc3	                                     ret	        91	revert.c	FUNCTION_9
option_parse_x	IF,1:CALL,2:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	85
0x4000131	              0x55	                                push rbp	        46	revert.c	FUNCTION_7
0x4000132	          0x4889e5	                            mov rbp, rsp	        46	revert.c	FUNCTION_7
0x4000135	              0x53	                                push rbx	        46	revert.c	FUNCTION_7
0x4000136	        0x4883ec38	                           sub rsp, 0x38	        46	revert.c	FUNCTION_7
0x400013a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        46	revert.c	FUNCTION_7
0x400013e	        0x488975d0	             mov qword [rbp - 0x30], rsi	        46	revert.c	FUNCTION_7
0x4000142	          0x8955cc	             mov dword [rbp - 0x34], edx	        46	revert.c	FUNCTION_7
0x4000145	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        47	revert.c	FUNCTION_7
0x4000149	        0x488b4010	            mov rax, qword [rax + 0x10] 	        47	revert.c	FUNCTION_7
0x400014d	        0x488945e0	             mov qword [rbp - 0x20], rax	        47	revert.c	FUNCTION_7
0x4000151	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	revert.c	FUNCTION_7
0x4000155	          0x488b00	                    mov rax, qword [rax]	        48	revert.c	FUNCTION_7
0x4000158	        0x488945e8	             mov qword [rbp - 0x18], rax	        48	revert.c	FUNCTION_7
0x400015c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        50	revert.c	FUNCTION_7	IF_1
0x4000160	            0x740a	                            je 0x400016c	        50	revert.c	FUNCTION_7	IF_1
0x4000162	      0xb800000000	                              mov eax, 0	        51	revert.c	FUNCTION_7	IF_1
0x4000167	      0xe9f0000000	                           jmp 0x400025c	        51	revert.c	FUNCTION_7	IF_1
0x400016c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x4000170	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_7	CALL_1
0x4000174	        0x488d5001	                      lea rdx, [rax + 1]	        53	revert.c	FUNCTION_7	CALL_1
0x4000178	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x400017c	        0x488b4058	            mov rax, qword [rax + 0x58] 	        53	revert.c	FUNCTION_7	CALL_1
0x4000180	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x4000183	     0xf869b000000	                           jbe 0x4000224	        53	revert.c	FUNCTION_7	CALL_1
0x4000189	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x400018d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        53	revert.c	FUNCTION_7	CALL_1
0x4000191	          0x4889d0	                            mov rax, rdx	        53	revert.c	FUNCTION_7	CALL_1
0x4000194	          0x4801c0	                            add rax, rax	        53	revert.c	FUNCTION_7	CALL_1
0x4000197	          0x4801d0	                            add rax, rdx	        53	revert.c	FUNCTION_7	CALL_1
0x400019a	        0x4883c030	                           add rax, 0x30	        53	revert.c	FUNCTION_7	CALL_1
0x400019e	          0x48d1e8	                              shr rax, 1	        53	revert.c	FUNCTION_7	CALL_1
0x40001a1	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x40001a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001a8	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_7	CALL_1
0x40001ac	        0x4883c001	                              add rax, 1	        53	revert.c	FUNCTION_7	CALL_1
0x40001b0	          0x4839c2	                            cmp rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x40001b3	            0x7316	                           jae 0x40001cb	        53	revert.c	FUNCTION_7	CALL_1
0x40001b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001b9	        0x488b4050	            mov rax, qword [rax + 0x50] 	        53	revert.c	FUNCTION_7	CALL_1
0x40001bd	        0x488d5001	                      lea rdx, [rax + 1]	        53	revert.c	FUNCTION_7	CALL_1
0x40001c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001c5	        0x48895058	             mov qword [rax + 0x58], rdx	        53	revert.c	FUNCTION_7	CALL_1
0x40001c9	            0xeb23	                           jmp 0x40001ee	        53	revert.c	FUNCTION_7	CALL_1
0x40001cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001cf	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        53	revert.c	FUNCTION_7	CALL_1
0x40001d3	          0x4889d0	                            mov rax, rdx	        53	revert.c	FUNCTION_7	CALL_1
0x40001d6	          0x4801c0	                            add rax, rax	        53	revert.c	FUNCTION_7	CALL_1
0x40001d9	          0x4801d0	                            add rax, rdx	        53	revert.c	FUNCTION_7	CALL_1
0x40001dc	        0x4883c030	                           add rax, 0x30	        53	revert.c	FUNCTION_7	CALL_1
0x40001e0	          0x48d1e8	                              shr rax, 1	        53	revert.c	FUNCTION_7	CALL_1
0x40001e3	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x40001e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001ea	        0x48895058	             mov qword [rax + 0x58], rdx	        53	revert.c	FUNCTION_7	CALL_1
0x40001ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x40001f2	        0x488b4058	            mov rax, qword [rax + 0x58] 	        53	revert.c	FUNCTION_7	CALL_1
0x40001f6	          0x4889c6	                            mov rsi, rax	        53	revert.c	FUNCTION_7	CALL_1
0x40001f9	      0xbf08000000	                              mov edi, 8	        53	revert.c	FUNCTION_7	CALL_1
0x40001fe	      0xe848feffff	                        call sym.st_mult	        53	revert.c	FUNCTION_7	CALL_1
0x4000203	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x4000206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x400020a	        0x488b4048	            mov rax, qword [rax + 0x48] 	        53	revert.c	FUNCTION_7	CALL_1
0x400020e	          0x4889d6	                            mov rsi, rdx	        53	revert.c	FUNCTION_7	CALL_1
0x4000211	          0x4889c7	                            mov rdi, rax	        53	revert.c	FUNCTION_7	CALL_1
0x4000214	      0xe800000000	                          call 0x4000219	        53	revert.c	FUNCTION_7	CALL_1
0x4000219	          0x4889c2	                            mov rdx, rax	        53	revert.c	FUNCTION_7	CALL_1
0x400021c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	revert.c	FUNCTION_7	CALL_1
0x4000220	        0x48895048	             mov qword [rax + 0x48], rdx	        53	revert.c	FUNCTION_7	CALL_1
0x4000224	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	revert.c	FUNCTION_7	CALL_2
0x4000228	        0x488b7048	            mov rsi, qword [rax + 0x48] 	        54	revert.c	FUNCTION_7	CALL_2
0x400022c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	revert.c	FUNCTION_7	CALL_2
0x4000230	        0x488b4050	            mov rax, qword [rax + 0x50] 	        54	revert.c	FUNCTION_7	CALL_2
0x4000234	        0x488d4801	                      lea rcx, [rax + 1]	        54	revert.c	FUNCTION_7	CALL_2
0x4000238	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        54	revert.c	FUNCTION_7	CALL_2
0x400023c	        0x48894a50	             mov qword [rdx + 0x50], rcx	        54	revert.c	FUNCTION_7	CALL_2
0x4000240	        0x48c1e003	                              shl rax, 3	        54	revert.c	FUNCTION_7	CALL_2
0x4000244	        0x488d1c06	                    lea rbx, [rsi + rax]	        54	revert.c	FUNCTION_7	CALL_2
0x4000248	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        54	revert.c	FUNCTION_7	CALL_2
0x400024c	          0x4889c7	                            mov rdi, rax	        54	revert.c	FUNCTION_7	CALL_2
0x400024f	      0xe800000000	                          call 0x4000254	        54	revert.c	FUNCTION_7	CALL_2
0x4000254	          0x488903	                    mov qword [rbx], rax	        54	revert.c	FUNCTION_7	CALL_2
0x4000257	      0xb800000000	                              mov eax, 0	        55	revert.c	FUNCTION_7
0x400025c	        0x4883c438	                           add rsp, 0x38	        56	revert.c	FUNCTION_7
0x4000260	              0x5b	                                 pop rbx	        56	revert.c	FUNCTION_7
0x4000261	              0x5d	                                 pop rbp	        56	revert.c	FUNCTION_7
0x4000262	              0xc3	                                     ret	        56	revert.c	FUNCTION_7
xstrdup_or_null	IF,0:CALL,1:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	13
0x400009d	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_31
0x400009e	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_31
0x40000a1	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_31
0x40000a5	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_31
0x40000a9	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000ae	            0x740e	                            je 0x40000be	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000b4	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000b7	      0xe800000000	                          call 0x40000bc	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000bc	            0xeb05	                           jmp 0x40000c3	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000be	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x40000c3	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_31
0x40000c4	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_31
cmd_revert	IF,2:CALL,5:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	46
0x4000e52	              0x55	                                push rbp	       204	revert.c	FUNCTION_11
0x4000e53	          0x4889e5	                            mov rbp, rsp	       204	revert.c	FUNCTION_11
0x4000e56	    0x4881ecc00000	                           sub rsp, 0xc0	       204	revert.c	FUNCTION_11
0x4000e5d	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       204	revert.c	FUNCTION_11
0x4000e63	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       204	revert.c	FUNCTION_11
0x4000e6a	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       204	revert.c	FUNCTION_11
0x4000e71	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	revert.c	FUNCTION_11
0x4000e7a	        0x488945f8	                mov qword [rbp - 8], rax	       204	revert.c	FUNCTION_11
0x4000e7e	            0x31c0	                            xor eax, eax	       204	revert.c	FUNCTION_11
0x4000e80	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       205	revert.c	FUNCTION_11
0x4000e87	      0xb800000000	                              mov eax, 0	       205	revert.c	FUNCTION_11
0x4000e8c	      0xb911000000	                           mov ecx, 0x11	       205	revert.c	FUNCTION_11
0x4000e91	          0x4889d7	                            mov rdi, rdx	       205	revert.c	FUNCTION_11
0x4000e94	          0xf348ab	              rep stosq qword [rdi], rax	       205	revert.c	FUNCTION_11
0x4000e97	    0xc78570ffffff	     mov dword [rbp - 0x90], 0xffffffff 	       205	revert.c	FUNCTION_11
0x4000ea1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       205	revert.c	FUNCTION_11
0x4000ea9	      0xbf00000000	                              mov edi, 0	       208	revert.c	FUNCTION_11	IF_1	CALL_1
0x4000eae	      0xe800000000	                          call 0x4000eb3	       208	revert.c	FUNCTION_11	IF_1	CALL_1
0x4000eb3	            0x85c0	                           test eax, eax	       208	revert.c	FUNCTION_11	IF_1	CALL_1
0x4000eb5	            0x740a	                            je 0x4000ec1	       208	revert.c	FUNCTION_11	IF_1	CALL_1
0x4000eb7	    0xc78574ffffff	               mov dword [rbp - 0x8c], 1	       209	revert.c	FUNCTION_11	IF_1
0x4000ec1	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       210	revert.c	FUNCTION_11
0x4000ecb	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       211	revert.c	FUNCTION_11	CALL_2
0x4000ed2	          0x4889c7	                            mov rdi, rax	       211	revert.c	FUNCTION_11	CALL_2
0x4000ed5	      0xe800000000	                          call 0x4000eda	       211	revert.c	FUNCTION_11	CALL_2
0x4000eda	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       212	revert.c	FUNCTION_11	CALL_3
0x4000ee1	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       212	revert.c	FUNCTION_11	CALL_3
0x4000ee8	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       212	revert.c	FUNCTION_11	CALL_3
0x4000eee	          0x4889ce	                            mov rsi, rcx	       212	revert.c	FUNCTION_11	CALL_3
0x4000ef1	            0x89c7	                            mov edi, eax	       212	revert.c	FUNCTION_11	CALL_3
0x4000ef3	      0xe8aef5ffff	                  call sym.run_sequencer	       212	revert.c	FUNCTION_11	CALL_3
0x4000ef8	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       212	revert.c	FUNCTION_11	CALL_3
0x4000efe	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       213	revert.c	FUNCTION_11	IF_2
0x4000f05	            0x7917	                           jns 0x4000f1e	       213	revert.c	FUNCTION_11	IF_2
0x4000f07	      0xbf00000000	                              mov edi, 0	       214	revert.c	FUNCTION_11	CALL_5
0x4000f0c	      0xe8b4f1ffff	                               call sym.	       214	revert.c	FUNCTION_11	CALL_5
0x4000f11	          0x4889c7	                            mov rdi, rax	       214	revert.c	FUNCTION_11	CALL_5
0x4000f14	      0xb800000000	                              mov eax, 0	       214	revert.c	FUNCTION_11	CALL_5
0x4000f19	      0xe800000000	                          call 0x4000f1e	       214	revert.c	FUNCTION_11	CALL_5
0x4000f1e	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       215	revert.c	FUNCTION_11
0x4000f24	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	revert.c	FUNCTION_11
0x4000f28	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	revert.c	FUNCTION_11
0x4000f31	            0x7405	                            je 0x4000f38	       216	revert.c	FUNCTION_11
0x4000f33	      0xe800000000	                          call 0x4000f38	       216	revert.c	FUNCTION_11
0x4000f38	              0xc9	                                   leave	       216	revert.c	FUNCTION_11
0x4000f39	              0xc3	                                     ret	       216	revert.c	FUNCTION_11
action_name	IF,0:CALL,0:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	12
0x40000f1	              0x55	                                push rbp	        35	revert.c	FUNCTION_5
0x40000f2	          0x4889e5	                            mov rbp, rsp	        35	revert.c	FUNCTION_5
0x40000f5	        0x48897df8	                mov qword [rbp - 8], rdi	        35	revert.c	FUNCTION_5
0x40000f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        36	revert.c	FUNCTION_5
0x40000fd	            0x8b00	                    mov eax, dword [rax]	        36	revert.c	FUNCTION_5
0x40000ff	            0x85c0	                           test eax, eax	        36	revert.c	FUNCTION_5
0x4000101	            0x7507	                           jne 0x400010a	        36	revert.c	FUNCTION_5
0x4000103	      0xb800000000	                              mov eax, 0	        36	revert.c	FUNCTION_5
0x4000108	            0xeb05	                           jmp 0x400010f	        36	revert.c	FUNCTION_5
0x400010a	      0xb800000000	                              mov eax, 0	        36	revert.c	FUNCTION_5
0x400010f	              0x5d	                                 pop rbp	        37	revert.c	FUNCTION_5
0x4000110	              0xc3	                                     ret	        37	revert.c	FUNCTION_5
cmd_cherry_pick	IF,1:CALL,4:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	41
0x4000f3a	              0x55	                                push rbp	       219	revert.c	FUNCTION_12
0x4000f3b	          0x4889e5	                            mov rbp, rsp	       219	revert.c	FUNCTION_12
0x4000f3e	    0x4881ecc00000	                           sub rsp, 0xc0	       219	revert.c	FUNCTION_12
0x4000f45	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	       219	revert.c	FUNCTION_12
0x4000f4b	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       219	revert.c	FUNCTION_12
0x4000f52	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       219	revert.c	FUNCTION_12
0x4000f59	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	revert.c	FUNCTION_12
0x4000f62	        0x488945f8	                mov qword [rbp - 8], rax	       219	revert.c	FUNCTION_12
0x4000f66	            0x31c0	                            xor eax, eax	       219	revert.c	FUNCTION_12
0x4000f68	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       220	revert.c	FUNCTION_12
0x4000f6f	      0xb800000000	                              mov eax, 0	       220	revert.c	FUNCTION_12
0x4000f74	      0xb911000000	                           mov ecx, 0x11	       220	revert.c	FUNCTION_12
0x4000f79	          0x4889d7	                            mov rdi, rdx	       220	revert.c	FUNCTION_12
0x4000f7c	          0xf348ab	              rep stosq qword [rdi], rax	       220	revert.c	FUNCTION_12
0x4000f7f	    0xc78570ffffff	     mov dword [rbp - 0x90], 0xffffffff 	       220	revert.c	FUNCTION_12
0x4000f89	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       220	revert.c	FUNCTION_12
0x4000f91	    0xc78570ffffff	               mov dword [rbp - 0x90], 1	       223	revert.c	FUNCTION_12
0x4000f9b	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       224	revert.c	FUNCTION_12	CALL_1
0x4000fa2	          0x4889c7	                            mov rdi, rax	       224	revert.c	FUNCTION_12	CALL_1
0x4000fa5	      0xe800000000	                          call 0x4000faa	       224	revert.c	FUNCTION_12	CALL_1
0x4000faa	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       225	revert.c	FUNCTION_12	CALL_2
0x4000fb1	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       225	revert.c	FUNCTION_12	CALL_2
0x4000fb8	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       225	revert.c	FUNCTION_12	CALL_2
0x4000fbe	          0x4889ce	                            mov rsi, rcx	       225	revert.c	FUNCTION_12	CALL_2
0x4000fc1	            0x89c7	                            mov edi, eax	       225	revert.c	FUNCTION_12	CALL_2
0x4000fc3	      0xe8def4ffff	                  call sym.run_sequencer	       225	revert.c	FUNCTION_12	CALL_2
0x4000fc8	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       225	revert.c	FUNCTION_12	CALL_2
0x4000fce	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       226	revert.c	FUNCTION_12	IF_1
0x4000fd5	            0x7917	                           jns 0x4000fee	       226	revert.c	FUNCTION_12	IF_1
0x4000fd7	      0xbf00000000	                              mov edi, 0	       227	revert.c	FUNCTION_12	CALL_4
0x4000fdc	      0xe8e4f0ffff	                               call sym.	       227	revert.c	FUNCTION_12	CALL_4
0x4000fe1	          0x4889c7	                            mov rdi, rax	       227	revert.c	FUNCTION_12	CALL_4
0x4000fe4	      0xb800000000	                              mov eax, 0	       227	revert.c	FUNCTION_12	CALL_4
0x4000fe9	      0xe800000000	                          call 0x4000fee	       227	revert.c	FUNCTION_12	CALL_4
0x4000fee	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       228	revert.c	FUNCTION_12
0x4000ff4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       229	revert.c	FUNCTION_12
0x4000ff8	    0x644833342528	                xor rsi, qword fs:[0x28]	       229	revert.c	FUNCTION_12
0x4001001	            0x7405	                            je 0x4001008	       229	revert.c	FUNCTION_12
0x4001003	      0xe800000000	                          call 0x4001008	       229	revert.c	FUNCTION_12
0x4001008	              0xc9	                                   leave	       229	revert.c	FUNCTION_12
0x4001009	              0xc3	                                     ret	       229	revert.c	FUNCTION_12
run_sequencer	IF,13:CALL,38:functions,0:DO,0:ELSE,3:SWITCH,0:FOR,0:WHILE,0	405
0x40004a6	              0x55	                                push rbp	        94	revert.c	FUNCTION_10
0x40004a7	          0x4889e5	                            mov rbp, rsp	        94	revert.c	FUNCTION_10
0x40004aa	            0x4154	                                push r12	        94	revert.c	FUNCTION_10
0x40004ac	              0x53	                                push rbx	        94	revert.c	FUNCTION_10
0x40004ad	    0x4881ec400500	                          sub rsp, 0x540	        94	revert.c	FUNCTION_10
0x40004b4	    0x89bdccfaffff	            mov dword [rbp - 0x534], edi	        94	revert.c	FUNCTION_10
0x40004ba	    0x4889b5c0faff	            mov qword [rbp - 0x540], rsi	        94	revert.c	FUNCTION_10
0x40004c1	    0x488995b8faff	            mov qword [rbp - 0x548], rdx	        94	revert.c	FUNCTION_10
0x40004c8	    0x64488b042528	                mov rax, qword fs:[0x28]	        94	revert.c	FUNCTION_10
0x40004d1	        0x488945e8	             mov qword [rbp - 0x18], rax	        94	revert.c	FUNCTION_10
0x40004d5	            0x31c0	                            xor eax, eax	        94	revert.c	FUNCTION_10
0x40004d7	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        95	revert.c	FUNCTION_10	CALL_1
0x40004de	          0x4889c7	                            mov rdi, rax	        95	revert.c	FUNCTION_10	CALL_1
0x40004e1	      0xe82bfcffff	    call sym.revert_or_cherry_pick_usage	        95	revert.c	FUNCTION_10	CALL_1
0x40004e6	    0x488985f0faff	            mov qword [rbp - 0x510], rax	        95	revert.c	FUNCTION_10	CALL_1
0x40004ed	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        96	revert.c	FUNCTION_10	CALL_2
0x40004f4	          0x4889c7	                            mov rdi, rax	        96	revert.c	FUNCTION_10	CALL_2
0x40004f7	      0xe8f5fbffff	                    call sym.action_name	        96	revert.c	FUNCTION_10	CALL_2
0x40004fc	    0x488985f8faff	            mov qword [rbp - 0x508], rax	        96	revert.c	FUNCTION_10	CALL_2
0x4000503	    0xc785dcfaffff	              mov dword [rbp - 0x524], 0	        97	revert.c	FUNCTION_10
0x400050d	    0x488d95a0fcff	                  lea rdx, [rbp - 0x360]	        98	revert.c	FUNCTION_10
0x4000514	      0xb800000000	                              mov eax, 0	        98	revert.c	FUNCTION_10
0x4000519	      0xb968000000	                           mov ecx, 0x68	        98	revert.c	FUNCTION_10
0x400051e	          0x4889d7	                            mov rdi, rdx	        98	revert.c	FUNCTION_10
0x4000521	          0xf348ab	              rep stosq qword [rdi], rax	        98	revert.c	FUNCTION_10
0x4000524	    0xc785a0fcffff	              mov dword [rbp - 0x360], 8	        98	revert.c	FUNCTION_10
0x400052e	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	        98	revert.c	FUNCTION_10
0x4000539	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_10
0x4000540	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	        98	revert.c	FUNCTION_10
0x4000547	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	        98	revert.c	FUNCTION_10
0x4000552	    0xc785c8fcffff	              mov dword [rbp - 0x338], 6	        98	revert.c	FUNCTION_10
0x400055c	    0x48c785d8fcff	          mov qword [rbp - 0x328], 0x71 	        98	revert.c	FUNCTION_10
0x4000567	    0xc785e0fcffff	              mov dword [rbp - 0x320], 8	        98	revert.c	FUNCTION_10
0x4000571	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	        98	revert.c	FUNCTION_10
0x400057c	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_10
0x4000583	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	        98	revert.c	FUNCTION_10
0x400058a	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	        98	revert.c	FUNCTION_10
0x4000595	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 6	        98	revert.c	FUNCTION_10
0x400059f	    0x48c78518fdff	          mov qword [rbp - 0x2e8], 0x63 	        98	revert.c	FUNCTION_10
0x40005aa	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 8	        98	revert.c	FUNCTION_10
0x40005b4	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	        98	revert.c	FUNCTION_10
0x40005bf	    0x488d85dcfaff	                  lea rax, [rbp - 0x524]	        98	revert.c	FUNCTION_10
0x40005c6	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	        98	revert.c	FUNCTION_10
0x40005cd	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	        98	revert.c	FUNCTION_10
0x40005d8	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	        98	revert.c	FUNCTION_10
0x40005e2	    0x48c78558fdff	          mov qword [rbp - 0x2a8], 0x61 	        98	revert.c	FUNCTION_10
0x40005ed	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 7	        98	revert.c	FUNCTION_10
0x40005f7	    0xc78564fdffff	          mov dword [rbp - 0x29c], 0x6e 	        98	revert.c	FUNCTION_10
0x4000601	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	        98	revert.c	FUNCTION_10
0x400060c	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       102	revert.c	FUNCTION_10	CALL_6
0x4000613	        0x4883c00c	                            add rax, 0xc	       102	revert.c	FUNCTION_10	CALL_6
0x4000617	    0x48898570fdff	            mov qword [rbp - 0x290], rax	        98	revert.c	FUNCTION_10
0x400061e	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	        98	revert.c	FUNCTION_10
0x4000629	    0xc78588fdffff	              mov dword [rbp - 0x278], 2	        98	revert.c	FUNCTION_10
0x4000633	    0x48c78598fdff	              mov qword [rbp - 0x268], 1	        98	revert.c	FUNCTION_10
0x400063e	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	        98	revert.c	FUNCTION_10
0x4000648	    0xc785a4fdffff	          mov dword [rbp - 0x25c], 0x65 	        98	revert.c	FUNCTION_10
0x4000652	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	        98	revert.c	FUNCTION_10
0x400065d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       103	revert.c	FUNCTION_10	CALL_7
0x4000664	        0x4883c004	                              add rax, 4	       103	revert.c	FUNCTION_10	CALL_7
0x4000668	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	        98	revert.c	FUNCTION_10
0x400066f	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	        98	revert.c	FUNCTION_10
0x400067a	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	        98	revert.c	FUNCTION_10
0x4000684	    0x48c785d8fdff	              mov qword [rbp - 0x228], 1	        98	revert.c	FUNCTION_10
0x400068f	    0xc785e0fdffff	           mov dword [rbp - 0x220], 0xc 	        98	revert.c	FUNCTION_10
0x4000699	    0xc785e4fdffff	          mov dword [rbp - 0x21c], 0x72 	        98	revert.c	FUNCTION_10
0x40006a3	    0x48c78500feff	              mov qword [rbp - 0x200], 0	        98	revert.c	FUNCTION_10
0x40006ae	    0xc78508feffff	            mov dword [rbp - 0x1f8], 0xa	        98	revert.c	FUNCTION_10
0x40006b8	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	        98	revert.c	FUNCTION_10
0x40006c3	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	        98	revert.c	FUNCTION_10
0x40006cd	    0xc78524feffff	          mov dword [rbp - 0x1dc], 0x73 	        98	revert.c	FUNCTION_10
0x40006d7	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	        98	revert.c	FUNCTION_10
0x40006e2	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       105	revert.c	FUNCTION_10	CALL_9
0x40006e9	        0x4883c010	                           add rax, 0x10	       105	revert.c	FUNCTION_10	CALL_9
0x40006ed	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	        98	revert.c	FUNCTION_10
0x40006f4	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	        98	revert.c	FUNCTION_10
0x40006ff	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	        98	revert.c	FUNCTION_10
0x4000709	    0x48c78558feff	              mov qword [rbp - 0x1a8], 1	        98	revert.c	FUNCTION_10
0x4000714	    0xc78560feffff	           mov dword [rbp - 0x1a0], 0xc 	        98	revert.c	FUNCTION_10
0x400071e	    0xc78564feffff	          mov dword [rbp - 0x19c], 0x6d 	        98	revert.c	FUNCTION_10
0x4000728	    0x48c78568feff	              mov qword [rbp - 0x198], 0	        98	revert.c	FUNCTION_10
0x4000733	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	        98	revert.c	FUNCTION_10
0x400073a	    0x48898570feff	            mov qword [rbp - 0x190], rax	        98	revert.c	FUNCTION_10
0x4000741	    0x48c78578feff	              mov qword [rbp - 0x188], 0	        98	revert.c	FUNCTION_10
0x400074c	    0x48c78580feff	              mov qword [rbp - 0x180], 0	        98	revert.c	FUNCTION_10
0x4000757	    0x48c78590feff	              mov qword [rbp - 0x170], 0	        98	revert.c	FUNCTION_10
0x4000762	    0xc785a0feffff	           mov dword [rbp - 0x160], 0xc 	        98	revert.c	FUNCTION_10
0x400076c	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	        98	revert.c	FUNCTION_10
0x4000777	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       108	revert.c	FUNCTION_10	CALL_11
0x400077e	        0x4883c018	                           add rax, 0x18	       108	revert.c	FUNCTION_10	CALL_11
0x4000782	    0x488985b0feff	            mov qword [rbp - 0x150], rax	        98	revert.c	FUNCTION_10
0x4000789	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	        98	revert.c	FUNCTION_10
0x4000794	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	        98	revert.c	FUNCTION_10
0x400079e	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	        98	revert.c	FUNCTION_10
0x40007a9	    0xc785e0feffff	              mov dword [rbp - 0x120], 9	        98	revert.c	FUNCTION_10
0x40007b3	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	        98	revert.c	FUNCTION_10
0x40007be	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       109	revert.c	FUNCTION_10	CALL_12
0x40007c5	        0x4883c040	                           add rax, 0x40	       109	revert.c	FUNCTION_10	CALL_12
0x40007c9	    0x488985f0feff	            mov qword [rbp - 0x110], rax	        98	revert.c	FUNCTION_10
0x40007d0	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        98	revert.c	FUNCTION_10
0x40007db	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        98	revert.c	FUNCTION_10
0x40007e6	    0xc78520ffffff	            mov dword [rbp - 0xe0], 0xc 	        98	revert.c	FUNCTION_10
0x40007f0	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x58 	        98	revert.c	FUNCTION_10
0x40007fa	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	        98	revert.c	FUNCTION_10
0x4000805	    0x488d85b8faff	                  lea rax, [rbp - 0x548]	        98	revert.c	FUNCTION_10
0x400080c	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	        98	revert.c	FUNCTION_10
0x4000813	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        98	revert.c	FUNCTION_10
0x400081e	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	        98	revert.c	FUNCTION_10
0x4000829	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        98	revert.c	FUNCTION_10
0x4000834	    0xc78560ffffff	               mov dword [rbp - 0xa0], 9	        98	revert.c	FUNCTION_10
0x400083e	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x53 	        98	revert.c	FUNCTION_10
0x4000848	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	        98	revert.c	FUNCTION_10
0x4000853	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       112	revert.c	FUNCTION_10
0x400085a	        0x4883c030	                           add rax, 0x30	       112	revert.c	FUNCTION_10
0x400085e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	        98	revert.c	FUNCTION_10
0x4000865	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        98	revert.c	FUNCTION_10
0x4000870	    0x48c745800000	               mov qword [rbp - 0x80], 0	        98	revert.c	FUNCTION_10
0x4000878	    0xc74588010000	               mov dword [rbp - 0x78], 1	        98	revert.c	FUNCTION_10
0x400087f	      0xb800000000	                              mov eax, 0	       113	revert.c	FUNCTION_10
0x4000884	        0x48894598	             mov qword [rbp - 0x68], rax	        98	revert.c	FUNCTION_10
0x4000888	    0x488d85a0fcff	                  lea rax, [rbp - 0x360]	       116	revert.c	FUNCTION_10
0x400088f	    0x488985e0faff	            mov qword [rbp - 0x520], rax	       116	revert.c	FUNCTION_10
0x4000896	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       118	revert.c	FUNCTION_10	IF_1
0x400089d	            0x8b00	                    mov eax, dword [rax]	       118	revert.c	FUNCTION_10	IF_1
0x400089f	          0x83f801	                              cmp eax, 1	       118	revert.c	FUNCTION_10	IF_1
0x40008a2	     0xf8599010000	                           jne 0x4000a41	       118	revert.c	FUNCTION_10	IF_1
0x40008a8	    0x488d9520fbff	                  lea rdx, [rbp - 0x4e0]	       119	revert.c	FUNCTION_10	IF_1
0x40008af	      0xb800000000	                              mov eax, 0	       119	revert.c	FUNCTION_10	IF_1
0x40008b4	      0xb930000000	                           mov ecx, 0x30	       119	revert.c	FUNCTION_10	IF_1
0x40008b9	          0x4889d7	                            mov rdi, rdx	       119	revert.c	FUNCTION_10	IF_1
0x40008bc	          0xf348ab	              rep stosq qword [rdi], rax	       119	revert.c	FUNCTION_10	IF_1
0x40008bf	    0xc78520fbffff	              mov dword [rbp - 0x4e0], 7	       119	revert.c	FUNCTION_10	IF_1
0x40008c9	    0xc78524fbffff	          mov dword [rbp - 0x4dc], 0x78 	       119	revert.c	FUNCTION_10	IF_1
0x40008d3	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       120	revert.c	FUNCTION_10	IF_1	CALL_15
0x40008da	        0x4883c008	                              add rax, 8	       120	revert.c	FUNCTION_10	IF_1	CALL_15
0x40008de	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	       119	revert.c	FUNCTION_10	IF_1
0x40008e5	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	       119	revert.c	FUNCTION_10	IF_1
0x40008f0	    0xc78548fbffff	              mov dword [rbp - 0x4b8], 2	       119	revert.c	FUNCTION_10	IF_1
0x40008fa	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 1	       119	revert.c	FUNCTION_10	IF_1
0x4000905	    0xc78560fbffff	              mov dword [rbp - 0x4a0], 7	       119	revert.c	FUNCTION_10	IF_1
0x400090f	    0x48c78568fbff	              mov qword [rbp - 0x498], 0	       119	revert.c	FUNCTION_10	IF_1
0x400091a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       121	revert.c	FUNCTION_10	IF_1	CALL_16
0x4000921	        0x4883c014	                           add rax, 0x14	       121	revert.c	FUNCTION_10	IF_1	CALL_16
0x4000925	    0x48898570fbff	            mov qword [rbp - 0x490], rax	       119	revert.c	FUNCTION_10	IF_1
0x400092c	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	       119	revert.c	FUNCTION_10	IF_1
0x4000937	    0xc78588fbffff	              mov dword [rbp - 0x478], 2	       119	revert.c	FUNCTION_10	IF_1
0x4000941	    0x48c78598fbff	              mov qword [rbp - 0x468], 1	       119	revert.c	FUNCTION_10	IF_1
0x400094c	    0xc785a0fbffff	              mov dword [rbp - 0x460], 7	       119	revert.c	FUNCTION_10	IF_1
0x4000956	    0x48c785a8fbff	              mov qword [rbp - 0x458], 0	       119	revert.c	FUNCTION_10	IF_1
0x4000961	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       122	revert.c	FUNCTION_10	IF_1	CALL_17
0x4000968	        0x4883c01c	                           add rax, 0x1c	       122	revert.c	FUNCTION_10	IF_1	CALL_17
0x400096c	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	       119	revert.c	FUNCTION_10	IF_1
0x4000973	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	       119	revert.c	FUNCTION_10	IF_1
0x400097e	    0xc785c8fbffff	              mov dword [rbp - 0x438], 2	       119	revert.c	FUNCTION_10	IF_1
0x4000988	    0x48c785d8fbff	              mov qword [rbp - 0x428], 1	       119	revert.c	FUNCTION_10	IF_1
0x4000993	    0xc785e0fbffff	              mov dword [rbp - 0x420], 7	       119	revert.c	FUNCTION_10	IF_1
0x400099d	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	       119	revert.c	FUNCTION_10	IF_1
0x40009a8	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       123	revert.c	FUNCTION_10	IF_1	CALL_18
0x40009af	        0x4883c020	                           add rax, 0x20	       123	revert.c	FUNCTION_10	IF_1	CALL_18
0x40009b3	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	       119	revert.c	FUNCTION_10	IF_1
0x40009ba	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       119	revert.c	FUNCTION_10	IF_1
0x40009c5	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 2	       119	revert.c	FUNCTION_10	IF_1
0x40009cf	    0x48c78518fcff	              mov qword [rbp - 0x3e8], 1	       119	revert.c	FUNCTION_10	IF_1
0x40009da	    0xc78520fcffff	              mov dword [rbp - 0x3e0], 7	       119	revert.c	FUNCTION_10	IF_1
0x40009e4	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	       119	revert.c	FUNCTION_10	IF_1
0x40009ef	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       124	revert.c	FUNCTION_10	IF_1	CALL_19
0x40009f6	        0x4883c024	                           add rax, 0x24	       124	revert.c	FUNCTION_10	IF_1	CALL_19
0x40009fa	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	       119	revert.c	FUNCTION_10	IF_1
0x4000a01	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       119	revert.c	FUNCTION_10	IF_1
0x4000a0c	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 2	       119	revert.c	FUNCTION_10	IF_1
0x4000a16	    0x48c78558fcff	              mov qword [rbp - 0x3a8], 1	       119	revert.c	FUNCTION_10	IF_1
0x4000a21	    0x488d9520fbff	                  lea rdx, [rbp - 0x4e0]	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a28	    0x488b85e0faff	            mov rax, qword [rbp - 0x520]	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a2f	          0x4889d6	                            mov rsi, rdx	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a32	          0x4889c7	                            mov rdi, rax	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a35	      0xe800000000	                          call 0x4000a3a	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a3a	    0x488985e0faff	            mov qword [rbp - 0x520], rax	       127	revert.c	FUNCTION_10	IF_1	CALL_21
0x4000a41	    0x488b8df0faff	            mov rcx, qword [rbp - 0x510]	       130	revert.c	FUNCTION_10	CALL_22
0x4000a48	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       130	revert.c	FUNCTION_10	CALL_22
0x4000a4f	    0x488bb5c0faff	            mov rsi, qword [rbp - 0x540]	       130	revert.c	FUNCTION_10	CALL_22
0x4000a56	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	       130	revert.c	FUNCTION_10	CALL_22
0x4000a5c	    0x41b90c000000	                            mov r9d, 0xc	       130	revert.c	FUNCTION_10	CALL_22
0x4000a62	          0x4989c8	                             mov r8, rcx	       130	revert.c	FUNCTION_10	CALL_22
0x4000a65	          0x4889d1	                            mov rcx, rdx	       130	revert.c	FUNCTION_10	CALL_22
0x4000a68	      0xba00000000	                              mov edx, 0	       130	revert.c	FUNCTION_10	CALL_22
0x4000a6d	            0x89c7	                            mov edi, eax	       130	revert.c	FUNCTION_10	CALL_22
0x4000a6f	      0xe800000000	                          call 0x4000a74	       130	revert.c	FUNCTION_10	CALL_22
0x4000a74	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	       130	revert.c	FUNCTION_10	CALL_22
0x4000a7a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       135	revert.c	FUNCTION_10	IF_2
0x4000a81	          0x8b4024	            mov eax, dword [rax + 0x24] 	       135	revert.c	FUNCTION_10	IF_2
0x4000a84	            0x85c0	                           test eax, eax	       135	revert.c	FUNCTION_10	IF_2
0x4000a86	            0x740e	                            je 0x4000a96	       135	revert.c	FUNCTION_10	IF_2
0x4000a88	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       136	revert.c	FUNCTION_10	IF_2
0x4000a8f	    0xc7401c010000	               mov dword [rax + 0x1c], 1	       136	revert.c	FUNCTION_10	IF_2
0x4000a96	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       139	revert.c	FUNCTION_10	IF_3
0x4000a9c	            0x85c0	                           test eax, eax	       139	revert.c	FUNCTION_10	IF_3
0x4000a9e	     0xf8447010000	                            je 0x4000beb	       139	revert.c	FUNCTION_10	IF_3
0x4000aa4	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       141	revert.c	FUNCTION_10	IF_3	IF_4
0x4000aaa	          0x83f871	                           cmp eax, 0x71	       141	revert.c	FUNCTION_10	IF_3	IF_4
0x4000aad	            0x750d	                           jne 0x4000abc	       141	revert.c	FUNCTION_10	IF_3	IF_4
0x4000aaf	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       142	revert.c	FUNCTION_10	IF_3	IF_4
0x4000aba	            0xeb47	                           jmp 0x4000b03	       142	revert.c	FUNCTION_10	IF_3	IF_4
0x4000abc	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       143	revert.c	FUNCTION_10	IF_3	ELSE_1	IF_5
0x4000ac2	          0x83f863	                           cmp eax, 0x63	       143	revert.c	FUNCTION_10	IF_3	ELSE_1	IF_5
0x4000ac5	            0x750d	                           jne 0x4000ad4	       143	revert.c	FUNCTION_10	IF_3	ELSE_1	IF_5
0x4000ac7	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       144	revert.c	FUNCTION_10	IF_3	ELSE_1	IF_5
0x4000ad2	            0xeb2f	                           jmp 0x4000b03	       144	revert.c	FUNCTION_10	IF_3	ELSE_1	IF_5
0x4000ad4	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000ada	          0x83f861	                           cmp eax, 0x61	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000add	            0x7419	                            je 0x4000af8	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000adf	      0xb900000000	                              mov ecx, 0	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000ae4	      0xba92000000	                           mov edx, 0x92	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000ae9	      0xbe00000000	                              mov esi, 0	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000aee	      0xbf00000000	                              mov edi, 0	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000af3	      0xe800000000	                          call 0x4000af8	       146	revert.c	FUNCTION_10	IF_3	ELSE_2	CALL_23
0x4000af8	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       147	revert.c	FUNCTION_10	IF_3	ELSE_2
0x4000b03	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       159	revert.c	FUNCTION_10	IF_3
0x4000b0a	          0x8b4018	            mov eax, dword [rax + 0x18] 	       159	revert.c	FUNCTION_10	IF_3
0x4000b0d	          0x83f802	                              cmp eax, 2	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b10	           0xf94c0	                                 sete al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b13	           0xfb6d8	                           movzx ebx, al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b16	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       158	revert.c	FUNCTION_10	IF_3
0x4000b1d	          0x8b4018	            mov eax, dword [rax + 0x18] 	       158	revert.c	FUNCTION_10	IF_3
0x4000b20	          0x83f801	                              cmp eax, 1	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b23	           0xf94c0	                                 sete al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b26	        0x440fb6d8	                          movzx r11d, al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b2a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       157	revert.c	FUNCTION_10	IF_3
0x4000b31	        0x448b5014	           mov r10d, dword [rax + 0x14] 	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b35	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       156	revert.c	FUNCTION_10	IF_3
0x4000b3c	        0x448b4808	                mov r9d, dword [rax + 8]	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b40	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       155	revert.c	FUNCTION_10	IF_3
0x4000b47	        0x488b4048	            mov rax, qword [rax + 0x48] 	       155	revert.c	FUNCTION_10	IF_3
0x4000b4b	          0x4885c0	                           test rax, rax	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b4e	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b51	        0x440fb6c0	                           movzx r8d, al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b55	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       154	revert.c	FUNCTION_10	IF_3
0x4000b5c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       154	revert.c	FUNCTION_10	IF_3
0x4000b60	          0x4885c0	                           test rax, rax	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b63	           0xf95c0	                                setne al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b66	           0xfb6f8	                           movzx edi, al	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b69	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       153	revert.c	FUNCTION_10	IF_3
0x4000b70	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b73	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       152	revert.c	FUNCTION_10	IF_3
0x4000b7a	        0x448b6010	           mov r12d, dword [rax + 0x10] 	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b7e	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       151	revert.c	FUNCTION_10	IF_3
0x4000b85	          0x8b500c	              mov edx, dword [rax + 0xc]	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b88	    0x488bb5e8faff	            mov rsi, qword [rbp - 0x518]	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b8f	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b96	        0x4883ec08	                              sub rsp, 8	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b9a	            0x6a00	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b9c	              0x53	                                push rbx	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000b9d	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000ba2	            0x4153	                                push r11	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000ba4	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000ba9	            0x4152	                                push r10	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bab	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bb0	            0x4151	                                 push r9	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bb2	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bb7	            0x4150	                                 push r8	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bb9	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bbe	              0x57	                                push rdi	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bbf	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bc4	              0x51	                                push rcx	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bc5	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bca	          0x4589e1	                           mov r9d, r12d	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bcd	    0x41b800000000	                              mov r8d, 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bd3	            0x89d1	                            mov ecx, edx	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bd5	      0xba00000000	                              mov edx, 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bda	          0x4889c7	                            mov rdi, rax	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000bdd	      0xb800000000	                              mov eax, 0	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000be2	      0xe831f7ffff	          call sym.verify_opt_compatible	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000be7	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       150	revert.c	FUNCTION_10	IF_3	CALL_24
0x4000beb	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       163	revert.c	FUNCTION_10	IF_6
0x4000bf2	          0x8b4014	            mov eax, dword [rax + 0x14] 	       163	revert.c	FUNCTION_10	IF_6
0x4000bf5	            0x85c0	                           test eax, eax	       163	revert.c	FUNCTION_10	IF_6
0x4000bf7	            0x7467	                            je 0x4000c60	       163	revert.c	FUNCTION_10	IF_6
0x4000bf9	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       168	revert.c	FUNCTION_10	IF_6
0x4000c00	          0x8b7004	                mov esi, dword [rax + 4]	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c03	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       167	revert.c	FUNCTION_10	IF_6
0x4000c0a	          0x8b4808	                mov ecx, dword [rax + 8]	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c0d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       166	revert.c	FUNCTION_10	IF_6
0x4000c14	          0x8b780c	              mov edi, dword [rax + 0xc]	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c17	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       165	revert.c	FUNCTION_10	IF_6
0x4000c1e	          0x8b5010	            mov edx, dword [rax + 0x10] 	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c21	    0x488b85f8faff	            mov rax, qword [rbp - 0x508]	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c28	        0x4883ec08	                              sub rsp, 8	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c2c	            0x6a00	                                  push 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c2e	              0x56	                                push rsi	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c2f	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c34	              0x51	                                push rcx	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c35	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c3a	          0x4189f9	                            mov r9d, edi	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c3d	    0x41b800000000	                              mov r8d, 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c43	            0x89d1	                            mov ecx, edx	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c45	      0xba00000000	                              mov edx, 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c4a	      0xbe00000000	                              mov esi, 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c4f	          0x4889c7	                            mov rdi, rax	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c52	      0xb800000000	                              mov eax, 0	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c57	      0xe8bcf6ffff	          call sym.verify_opt_compatible	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c5c	        0x4883c430	                           add rsp, 0x30	       164	revert.c	FUNCTION_10	IF_6	CALL_25
0x4000c60	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       171	revert.c	FUNCTION_10	IF_7
0x4000c66	            0x85c0	                           test eax, eax	       171	revert.c	FUNCTION_10	IF_7
0x4000c68	            0x7417	                            je 0x4000c81	       171	revert.c	FUNCTION_10	IF_7
0x4000c6a	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       172	revert.c	FUNCTION_10	IF_7
0x4000c71	    0x48c780800000	               mov qword [rax + 0x80], 0	       172	revert.c	FUNCTION_10	IF_7
0x4000c7c	      0xe9f3000000	                           jmp 0x4000d74	       172	revert.c	FUNCTION_10	IF_7
0x4000c81	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       175	revert.c	FUNCTION_10	ELSE_3	CALL_26
0x4000c88	      0xbfb0080000	                          mov edi, 0x8b0	       175	revert.c	FUNCTION_10	ELSE_3	CALL_26
0x4000c8d	      0xe800000000	                          call 0x4000c92	       175	revert.c	FUNCTION_10	ELSE_3	CALL_26
0x4000c92	    0x488983800000	             mov qword [rbx + 0x80], rax	       175	revert.c	FUNCTION_10	ELSE_3	CALL_26
0x4000c99	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       176	revert.c	FUNCTION_10	ELSE_3	CALL_27
0x4000ca0	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       176	revert.c	FUNCTION_10	ELSE_3	CALL_27
0x4000ca7	      0xbe00000000	                              mov esi, 0	       176	revert.c	FUNCTION_10	ELSE_3	CALL_27
0x4000cac	          0x4889c7	                            mov rdi, rax	       176	revert.c	FUNCTION_10	ELSE_3	CALL_27
0x4000caf	      0xe800000000	                          call 0x4000cb4	       176	revert.c	FUNCTION_10	ELSE_3	CALL_27
0x4000cb4	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       177	revert.c	FUNCTION_10	ELSE_3
0x4000cbb	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       177	revert.c	FUNCTION_10	ELSE_3
0x4000cc2	         0xfb65074	           movzx edx, byte [rax + 0x74] 	       177	revert.c	FUNCTION_10	ELSE_3
0x4000cc6	          0x83e2cf	                     and edx, 0xffffffcf	       177	revert.c	FUNCTION_10	ELSE_3
0x4000cc9	          0x83ca20	                            or edx, 0x20	       177	revert.c	FUNCTION_10	ELSE_3
0x4000ccc	          0x885074	               mov byte [rax + 0x74], dl	       177	revert.c	FUNCTION_10	ELSE_3
0x4000ccf	    0x83bdccfaffff	              cmp dword [rbp - 0x534], 1	       178	revert.c	FUNCTION_10	ELSE_3	IF_8
0x4000cd6	            0x7f19	                            jg 0x4000cf1	       178	revert.c	FUNCTION_10	ELSE_3	IF_8
0x4000cd8	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       179	revert.c	FUNCTION_10	ELSE_3	CALL_28
0x4000cdf	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       179	revert.c	FUNCTION_10	ELSE_3	CALL_28
0x4000ce6	          0x4889d6	                            mov rsi, rdx	       179	revert.c	FUNCTION_10	ELSE_3	CALL_28
0x4000ce9	          0x4889c7	                            mov rdi, rax	       179	revert.c	FUNCTION_10	ELSE_3	CALL_28
0x4000cec	      0xe800000000	                          call 0x4000cf1	       179	revert.c	FUNCTION_10	ELSE_3	CALL_28
0x4000cf1	    0x488b85c0faff	            mov rax, qword [rbp - 0x540]	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000cf8	        0x4883c008	                              add rax, 8	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000cfc	          0x488b00	                    mov rax, qword [rax]	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000cff	      0xbe00000000	                              mov esi, 0	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000d04	          0x4889c7	                            mov rdi, rax	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000d07	      0xe800000000	                          call 0x4000d0c	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000d0c	            0x85c0	                           test eax, eax	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000d0e	            0x7512	                           jne 0x4000d22	       180	revert.c	FUNCTION_10	ELSE_3	IF_9	CALL_29
0x4000d10	    0x488b85c0faff	            mov rax, qword [rbp - 0x540]	       181	revert.c	FUNCTION_10	ELSE_3	IF_9
0x4000d17	        0x4883c008	                              add rax, 8	       181	revert.c	FUNCTION_10	ELSE_3	IF_9
0x4000d1b	    0x48c700000000	                      mov qword [rax], 0	       181	revert.c	FUNCTION_10	ELSE_3	IF_9
0x4000d22	    0x488d8500fbff	                  lea rax, [rbp - 0x500]	       182	revert.c	FUNCTION_10	ELSE_3	CALL_30
0x4000d29	      0xba20000000	                           mov edx, 0x20	       182	revert.c	FUNCTION_10	ELSE_3	CALL_30
0x4000d2e	      0xbe00000000	                              mov esi, 0	       182	revert.c	FUNCTION_10	ELSE_3	CALL_30
0x4000d33	          0x4889c7	                            mov rdi, rax	       182	revert.c	FUNCTION_10	ELSE_3	CALL_30
0x4000d36	      0xe800000000	                          call 0x4000d3b	       182	revert.c	FUNCTION_10	ELSE_3	CALL_30
0x4000d3b	    0xc78518fbffff	              mov dword [rbp - 0x4e8], 1	       183	revert.c	FUNCTION_10	ELSE_3
0x4000d45	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d4c	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d53	    0x488d8d00fbff	                  lea rcx, [rbp - 0x500]	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d5a	    0x488bb5c0faff	            mov rsi, qword [rbp - 0x540]	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d61	    0x8b85ccfaffff	            mov eax, dword [rbp - 0x534]	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d67	            0x89c7	                            mov edi, eax	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d69	      0xe800000000	                          call 0x4000d6e	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d6e	    0x8985ccfaffff	            mov dword [rbp - 0x534], eax	       184	revert.c	FUNCTION_10	ELSE_3	CALL_31
0x4000d74	    0x83bdccfaffff	              cmp dword [rbp - 0x534], 1	       187	revert.c	FUNCTION_10	IF_10
0x4000d7b	            0x7e19	                           jle 0x4000d96	       187	revert.c	FUNCTION_10	IF_10
0x4000d7d	    0x488b95e0faff	            mov rdx, qword [rbp - 0x520]	       188	revert.c	FUNCTION_10	CALL_32
0x4000d84	    0x488b85f0faff	            mov rax, qword [rbp - 0x510]	       188	revert.c	FUNCTION_10	CALL_32
0x4000d8b	          0x4889d6	                            mov rsi, rdx	       188	revert.c	FUNCTION_10	CALL_32
0x4000d8e	          0x4889c7	                            mov rdi, rax	       188	revert.c	FUNCTION_10	CALL_32
0x4000d91	      0xe800000000	                          call 0x4000d96	       188	revert.c	FUNCTION_10	CALL_32
0x4000d96	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       191	revert.c	FUNCTION_10	CALL_33
0x4000d9d	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       191	revert.c	FUNCTION_10	CALL_33
0x4000da4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       191	revert.c	FUNCTION_10	CALL_33
0x4000da8	          0x4889c7	                            mov rdi, rax	       191	revert.c	FUNCTION_10	CALL_33
0x4000dab	      0xe8edf2ffff	                call sym.xstrdup_or_null	       191	revert.c	FUNCTION_10	CALL_33
0x4000db0	        0x48894330	             mov qword [rbx + 0x30], rax	       191	revert.c	FUNCTION_10	CALL_33
0x4000db4	    0x488b9db8faff	            mov rbx, qword [rbp - 0x548]	       192	revert.c	FUNCTION_10	CALL_34
0x4000dbb	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       192	revert.c	FUNCTION_10	CALL_34
0x4000dc2	        0x488b4040	            mov rax, qword [rax + 0x40] 	       192	revert.c	FUNCTION_10	CALL_34
0x4000dc6	          0x4889c7	                            mov rdi, rax	       192	revert.c	FUNCTION_10	CALL_34
0x4000dc9	      0xe8cff2ffff	                call sym.xstrdup_or_null	       192	revert.c	FUNCTION_10	CALL_34
0x4000dce	        0x48894340	             mov qword [rbx + 0x40], rax	       192	revert.c	FUNCTION_10	CALL_34
0x4000dd2	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       194	revert.c	FUNCTION_10	IF_11
0x4000dd8	          0x83f871	                           cmp eax, 0x71	       194	revert.c	FUNCTION_10	IF_11
0x4000ddb	            0x7511	                           jne 0x4000dee	       194	revert.c	FUNCTION_10	IF_11
0x4000ddd	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       195	revert.c	FUNCTION_10	CALL_35
0x4000de4	          0x4889c7	                            mov rdi, rax	       195	revert.c	FUNCTION_10	CALL_35
0x4000de7	      0xe800000000	                          call 0x4000dec	       195	revert.c	FUNCTION_10	CALL_35
0x4000dec	            0xeb47	                           jmp 0x4000e35	       195	revert.c	FUNCTION_10	CALL_35
0x4000dee	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       196	revert.c	FUNCTION_10	IF_12
0x4000df4	          0x83f863	                           cmp eax, 0x63	       196	revert.c	FUNCTION_10	IF_12
0x4000df7	            0x7511	                           jne 0x4000e0a	       196	revert.c	FUNCTION_10	IF_12
0x4000df9	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       197	revert.c	FUNCTION_10	CALL_36
0x4000e00	          0x4889c7	                            mov rdi, rax	       197	revert.c	FUNCTION_10	CALL_36
0x4000e03	      0xe800000000	                          call 0x4000e08	       197	revert.c	FUNCTION_10	CALL_36
0x4000e08	            0xeb2b	                           jmp 0x4000e35	       197	revert.c	FUNCTION_10	CALL_36
0x4000e0a	    0x8b85dcfaffff	            mov eax, dword [rbp - 0x524]	       198	revert.c	FUNCTION_10	IF_13
0x4000e10	          0x83f861	                           cmp eax, 0x61	       198	revert.c	FUNCTION_10	IF_13
0x4000e13	            0x7511	                           jne 0x4000e26	       198	revert.c	FUNCTION_10	IF_13
0x4000e15	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       199	revert.c	FUNCTION_10	CALL_37
0x4000e1c	          0x4889c7	                            mov rdi, rax	       199	revert.c	FUNCTION_10	CALL_37
0x4000e1f	      0xe800000000	                          call 0x4000e24	       199	revert.c	FUNCTION_10	CALL_37
0x4000e24	            0xeb0f	                           jmp 0x4000e35	       199	revert.c	FUNCTION_10	CALL_37
0x4000e26	    0x488b85b8faff	            mov rax, qword [rbp - 0x548]	       200	revert.c	FUNCTION_10	CALL_38
0x4000e2d	          0x4889c7	                            mov rdi, rax	       200	revert.c	FUNCTION_10	CALL_38
0x4000e30	      0xe800000000	                          call 0x4000e35	       200	revert.c	FUNCTION_10	CALL_38
0x4000e35	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       201	revert.c	FUNCTION_10
0x4000e39	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       201	revert.c	FUNCTION_10
0x4000e42	            0x7405	                            je 0x4000e49	       201	revert.c	FUNCTION_10
0x4000e44	      0xe800000000	                          call 0x4000e49	       201	revert.c	FUNCTION_10
0x4000e49	        0x488d65f0	                   lea rsp, [rbp - 0x10]	       201	revert.c	FUNCTION_10
0x4000e4d	              0x5b	                                 pop rbx	       201	revert.c	FUNCTION_10
0x4000e4e	            0x415c	                                 pop r12	       201	revert.c	FUNCTION_10
0x4000e50	              0x5d	                                 pop rbp	       201	revert.c	FUNCTION_10
0x4000e51	              0xc3	                                     ret	       201	revert.c	FUNCTION_10
const_error	IF,0:CALL,0:functions,0:DO,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_18
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_18
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_18
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_18
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_18
