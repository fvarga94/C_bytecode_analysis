strbuf_setlen	WHILE,0:CALL,2:IF,2:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,1	43
0x40000be	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x40000bf	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x40000c2	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x40000c6	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x40000ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x40000ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000d2	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000d5	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x40000d8	            0x740d	                            je 0x40000e7	       162	strbuf.h	FUNCTION_3	IF_1
0x40000da	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000de	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e1	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e5	            0xeb05	                           jmp 0x40000ec	       162	strbuf.h	FUNCTION_3	IF_1
0x40000e7	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x40000ec	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f0	            0x730f	                           jae 0x4000101	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f2	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000f7	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000fc	      0xe800000000	                          call 0x4000101	       163	strbuf.h	FUNCTION_3	CALL_1
0x4000101	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x4000105	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x4000109	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x400010d	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x4000111	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x4000115	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x400011b	            0x7414	                            je 0x4000131	       165	strbuf.h	FUNCTION_3	IF_2
0x400011d	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x4000121	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x4000125	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x4000129	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x400012c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x400012f	            0xeb24	                           jmp 0x4000155	       169	strbuf.h	FUNCTION_3
0x4000131	     0xfb605000000	           movzx eax, byte [0x04000138] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000138	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x400013a	            0x7419	                            je 0x4000155	       168	strbuf.h	FUNCTION_3	CALL_2
0x400013c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000141	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000146	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400014b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000150	      0xe800000000	                          call 0x4000155	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000155	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x4000156	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x4000157	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
submodules_absorb_gitdir_if_needed	WHILE,0:CALL,6:IF,4:FOR,1:DO,0:SWITCH,0:functions,0:ELSE,0	77
0x40004e8	              0x55	                                push rbp	        64	rm.c	FUNCTION_14
0x40004e9	          0x4889e5	                            mov rbp, rsp	        64	rm.c	FUNCTION_14
0x40004ec	        0x4883ec30	                           sub rsp, 0x30	        64	rm.c	FUNCTION_14
0x40004f0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        64	rm.c	FUNCTION_14
0x40004f4	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        66	rm.c	FUNCTION_14	FOR_1
0x40004fb	      0xe9e1000000	                           jmp 0x40005e1	        66	rm.c	FUNCTION_14	FOR_1
0x4000500	    0x488b05000000	            mov rax, qword [0x04000507] 	        67	rm.c	FUNCTION_14	FOR_1
0x4000507	          0x8b55e8	             mov edx, dword [rbp - 0x18]	        67	rm.c	FUNCTION_14	FOR_1
0x400050a	          0x4863d2	                         movsxd rdx, edx	        67	rm.c	FUNCTION_14	FOR_1
0x400050d	        0x48c1e204	                              shl rdx, 4	        67	rm.c	FUNCTION_14	FOR_1
0x4000511	          0x4801d0	                            add rax, rdx	        67	rm.c	FUNCTION_14	FOR_1
0x4000514	          0x488b00	                    mov rax, qword [rax]	        67	rm.c	FUNCTION_14	FOR_1
0x4000517	        0x488945f0	             mov qword [rbp - 0x10], rax	        67	rm.c	FUNCTION_14	FOR_1
0x400051b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x400051f	          0x4889c7	                            mov rdi, rax	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x4000522	      0xe800000000	                          call 0x4000527	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x4000527	            0x89c2	                            mov edx, eax	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x4000529	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x400052d	          0x4889c6	                            mov rsi, rax	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x4000530	      0xbf00000000	                              mov edi, 0	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x4000535	      0xe800000000	                          call 0x400053a	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x400053a	          0x8945ec	             mov dword [rbp - 0x14], eax	        71	rm.c	FUNCTION_14	FOR_1	CALL_1
0x400053d	        0x837dec00	               cmp dword [rbp - 0x14], 0	        72	rm.c	FUNCTION_14	FOR_1	IF_1
0x4000541	            0x791a	                           jns 0x400055d	        72	rm.c	FUNCTION_14	FOR_1	IF_1
0x4000543	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x4000546	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x400054a	            0x89d6	                            mov esi, edx	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x400054c	          0x4889c7	                            mov rdi, rax	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x400054f	      0xe8fdfdffff	             call sym.get_ours_cache_pos	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x4000554	          0x8945ec	             mov dword [rbp - 0x14], eax	        73	rm.c	FUNCTION_14	FOR_1	IF_1	CALL_2
0x4000557	        0x837dec00	               cmp dword [rbp - 0x14], 0	        74	rm.c	FUNCTION_14	FOR_1	IF_1	IF_2
0x400055b	            0x787c	                            js 0x40005d9	        74	rm.c	FUNCTION_14	FOR_1	IF_1	IF_2
0x400055d	    0x488b05000000	            mov rax, qword [0x04000564] 	        77	rm.c	FUNCTION_14	FOR_1
0x4000564	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        77	rm.c	FUNCTION_14	FOR_1
0x4000567	          0x4863d2	                         movsxd rdx, edx	        77	rm.c	FUNCTION_14	FOR_1
0x400056a	        0x48c1e203	                              shl rdx, 3	        77	rm.c	FUNCTION_14	FOR_1
0x400056e	          0x4801d0	                            add rax, rdx	        77	rm.c	FUNCTION_14	FOR_1
0x4000571	          0x488b00	                    mov rax, qword [rax]	        77	rm.c	FUNCTION_14	FOR_1
0x4000574	        0x488945f8	                mov qword [rbp - 8], rax	        77	rm.c	FUNCTION_14	FOR_1
0x4000578	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x400057c	          0x8b4034	            mov eax, dword [rax + 0x34] 	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x400057f	      0x2500f00000	                         and eax, 0xf000	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x4000584	      0x3d00e00000	                         cmp eax, 0xe000	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x4000589	            0x7551	                           jne 0x40005dc	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x400058b	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x400058f	        0x4883c058	                           add rax, 0x58	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x4000593	          0x4889c7	                            mov rdi, rax	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x4000596	      0xe800000000	                          call 0x400059b	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x400059b	            0x85c0	                           test eax, eax	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x400059d	            0x743d	                            je 0x40005dc	        79	rm.c	FUNCTION_14	FOR_1	IF_3
0x400059f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        81	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_4
0x40005a3	          0x4889c7	                            mov rdi, rax	        81	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_4
0x40005a6	      0xe800000000	                          call 0x40005ab	        81	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_4
0x40005ab	            0x85c0	                           test eax, eax	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x40005ad	            0x752d	                           jne 0x40005dc	        80	rm.c	FUNCTION_14	FOR_1	IF_3	CALL_3
0x40005af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        84	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40005b3	          0x4889c7	                            mov rdi, rax	        84	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40005b6	      0xe800000000	                          call 0x40005bb	        84	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40005bb	            0x85c0	                           test eax, eax	        84	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40005bd	            0x751e	                           jne 0x40005dd	        84	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40005bf	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005c7	      0xba01000000	                              mov edx, 1	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005cc	          0x4889ce	                            mov rsi, rcx	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005cf	          0x4889c7	                            mov rdi, rax	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005d2	      0xe800000000	                          call 0x40005d7	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005d7	            0xeb04	                           jmp 0x40005dd	        85	rm.c	FUNCTION_14	FOR_1	IF_4	CALL_6
0x40005d9	              0x90	                                     nop	        75	rm.c	FUNCTION_14	FOR_1	IF_1	IF_2
0x40005da	            0xeb01	                           jmp 0x40005dd	        75	rm.c	FUNCTION_14	FOR_1	IF_1	IF_2
0x40005dc	              0x90	                                     nop	        82	rm.c	FUNCTION_14	FOR_1	IF_3
0x40005dd	        0x8345e801	               add dword [rbp - 0x18], 1	        66	rm.c	FUNCTION_14	FOR_1
0x40005e1	    0x8b0500000000	            mov eax, dword [0x040005e7] 	        66	rm.c	FUNCTION_14	FOR_1
0x40005e7	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	        66	rm.c	FUNCTION_14	FOR_1
0x40005ea	     0xf8f10ffffff	                            jg 0x4000500	        66	rm.c	FUNCTION_14	FOR_1
0x40005f0	              0x90	                                     nop	        88	rm.c	FUNCTION_14
0x40005f1	              0xc9	                                   leave	        88	rm.c	FUNCTION_14
0x40005f2	              0xc3	                                     ret	        88	rm.c	FUNCTION_14
oidclr	WHILE,0:CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	12
0x40002b6	              0x55	                                push rbp	      1016	cache.h	FUNCTION_32
0x40002b7	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_32
0x40002ba	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_32
0x40002be	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_32
0x40002c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_32	CALL_1
0x40002c6	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_32	CALL_1
0x40002cb	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_32	CALL_1
0x40002d0	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_32	CALL_1
0x40002d3	      0xe800000000	                          call 0x40002d8	      1017	cache.h	FUNCTION_32	CALL_1
0x40002d8	              0x90	                                     nop	      1018	cache.h	FUNCTION_32
0x40002d9	              0xc9	                                   leave	      1018	cache.h	FUNCTION_32
0x40002da	              0xc3	                                     ret	      1018	cache.h	FUNCTION_32
_	WHILE,0:CALL,0:IF,1:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	15
0x400018d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_46
0x400018e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_46
0x4000191	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_46
0x4000195	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_46
0x4000199	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_46	IF_1
0x400019d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_46	IF_1
0x40001a0	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_46	IF_1
0x40001a2	            0x7507	                           jne 0x40001ab	        52	gettext.h	FUNCTION_46	IF_1
0x40001a4	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_46	IF_1
0x40001a9	            0xeb0c	                           jmp 0x40001b7	        53	gettext.h	FUNCTION_46	IF_1
0x40001ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_46
0x40001af	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_46
0x40001b2	      0xe800000000	                          call 0x40001b7	        54	gettext.h	FUNCTION_46
0x40001b7	              0xc9	                                   leave	        55	gettext.h	FUNCTION_46
0x40001b8	              0xc3	                                     ret	        55	gettext.h	FUNCTION_46
get_ours_cache_pos	WHILE,1:CALL,1:IF,1:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	43
0x4000351	              0x55	                                push rbp	        31	rm.c	FUNCTION_12
0x4000352	          0x4889e5	                            mov rbp, rsp	        31	rm.c	FUNCTION_12
0x4000355	        0x4883ec20	                           sub rsp, 0x20	        31	rm.c	FUNCTION_12
0x4000359	        0x48897de8	             mov qword [rbp - 0x18], rdi	        31	rm.c	FUNCTION_12
0x400035d	          0x8975e4	             mov dword [rbp - 0x1c], esi	        31	rm.c	FUNCTION_12
0x4000360	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        32	rm.c	FUNCTION_12
0x4000363	            0xf7d0	                                 not eax	        32	rm.c	FUNCTION_12
0x4000365	          0x8945fc	                mov dword [rbp - 4], eax	        32	rm.c	FUNCTION_12
0x4000368	            0xeb30	                           jmp 0x400039a	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x400036a	    0x488b05000000	            mov rax, qword [0x04000371] 	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000371	          0x8b55fc	                mov edx, dword [rbp - 4]	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000374	          0x4863d2	                         movsxd rdx, edx	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000377	        0x48c1e203	                              shl rdx, 3	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x400037b	          0x4801d0	                            add rax, rdx	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x400037e	          0x488b00	                    mov rax, qword [rax]	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000381	          0x8b4038	            mov eax, dword [rax + 0x38] 	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000384	      0x2500300000	                         and eax, 0x3000	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000389	          0xc1e80c	                            shr eax, 0xc	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x400038c	          0x83f802	                              cmp eax, 2	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x400038f	            0x7505	                           jne 0x4000396	        35	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000391	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000394	            0xeb44	                           jmp 0x40003da	        36	rm.c	FUNCTION_12	WHILE_1	IF_1
0x4000396	        0x8345fc01	                  add dword [rbp - 4], 1	        37	rm.c	FUNCTION_12	WHILE_1
0x400039a	    0x8b1500000000	            mov edx, dword [0x040003a0] 	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003a0	          0x8b45fc	                mov eax, dword [rbp - 4]	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003a3	            0x39c2	                            cmp edx, eax	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003a5	            0x762e	                           jbe 0x40003d5	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003a7	    0x488b05000000	            mov rax, qword [0x040003ae] 	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003ae	          0x8b55fc	                mov edx, dword [rbp - 4]	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003b1	          0x4863d2	                         movsxd rdx, edx	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003b4	        0x48c1e203	                              shl rdx, 3	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003b8	          0x4801d0	                            add rax, rdx	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003bb	          0x488b00	                    mov rax, qword [rax]	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003be	        0x488d5058	                   lea rdx, [rax + 0x58]	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003c6	          0x4889c6	                            mov rsi, rax	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003c9	          0x4889d7	                            mov rdi, rdx	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003cc	      0xe800000000	                          call 0x40003d1	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003d1	            0x85c0	                           test eax, eax	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003d3	            0x7495	                            je 0x400036a	        34	rm.c	FUNCTION_12	WHILE_1	CALL_1
0x40003d5	      0xb8ffffffff	                     mov eax, 0xffffffff	        39	rm.c	FUNCTION_12
0x40003da	              0xc9	                                   leave	        40	rm.c	FUNCTION_12
0x40003db	              0xc3	                                     ret	        40	rm.c	FUNCTION_12
st_mult	WHILE,0:CALL,1:IF,1:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	22
0x400004b	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_62
0x400004c	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_62
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_62
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_62
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_62
0x400005b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000060	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000062	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000069	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_62	IF_1
0x400006e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000072	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000076	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_62	IF_1
0x4000078	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x4000080	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x4000083	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x4000088	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x400008d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_62	IF_1	CALL_1
0x4000092	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_62
0x4000096	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_62
0x400009b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_62
0x400009c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_62
check_local_mod	WHILE,0:CALL,27:IF,14:FOR,1:DO,0:SWITCH,0:functions,0:ELSE,2	282
0x40005f3	              0x55	                                push rbp	        91	rm.c	FUNCTION_15
0x40005f4	          0x4889e5	                            mov rbp, rsp	        91	rm.c	FUNCTION_15
0x40005f7	              0x53	                                push rbx	        91	rm.c	FUNCTION_15
0x40005f8	    0x4881ec680100	                          sub rsp, 0x168	        91	rm.c	FUNCTION_15
0x40005ff	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	        91	rm.c	FUNCTION_15
0x4000606	    0x89b594feffff	            mov dword [rbp - 0x16c], esi	        91	rm.c	FUNCTION_15
0x400060c	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	rm.c	FUNCTION_15
0x4000615	        0x488945e8	             mov qword [rbp - 0x18], rax	        91	rm.c	FUNCTION_15
0x4000619	            0x31c0	                            xor eax, eax	        91	rm.c	FUNCTION_15
0x400061b	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	       100	rm.c	FUNCTION_15
0x4000625	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       101	rm.c	FUNCTION_15
0x4000630	    0xc785d8feffff	              mov dword [rbp - 0x128], 0	       101	rm.c	FUNCTION_15
0x400063a	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	       101	rm.c	FUNCTION_15
0x4000644	     0xfb685e0feff	           movzx eax, byte [rbp - 0x120]	       101	rm.c	FUNCTION_15
0x400064b	          0x83e0fe	                     and eax, 0xfffffffe	       101	rm.c	FUNCTION_15
0x400064e	    0x8885e0feffff	              mov byte [rbp - 0x120], al	       101	rm.c	FUNCTION_15
0x4000654	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       101	rm.c	FUNCTION_15
0x400065f	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       102	rm.c	FUNCTION_15
0x400066a	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	       102	rm.c	FUNCTION_15
0x4000674	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	       102	rm.c	FUNCTION_15
0x400067e	     0xfb68500ffff	           movzx eax, byte [rbp - 0x100]	       102	rm.c	FUNCTION_15
0x4000685	          0x83e0fe	                     and eax, 0xfffffffe	       102	rm.c	FUNCTION_15
0x4000688	    0x888500ffffff	              mov byte [rbp - 0x100], al	       102	rm.c	FUNCTION_15
0x400068e	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       102	rm.c	FUNCTION_15
0x4000699	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       103	rm.c	FUNCTION_15
0x40006a4	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       103	rm.c	FUNCTION_15
0x40006ae	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	       103	rm.c	FUNCTION_15
0x40006b8	     0xfb68520ffff	            movzx eax, byte [rbp - 0xe0]	       103	rm.c	FUNCTION_15
0x40006bf	          0x83e0fe	                     and eax, 0xfffffffe	       103	rm.c	FUNCTION_15
0x40006c2	    0x888520ffffff	               mov byte [rbp - 0xe0], al	       103	rm.c	FUNCTION_15
0x40006c8	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       103	rm.c	FUNCTION_15
0x40006d3	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       105	rm.c	FUNCTION_15	CALL_1
0x40006da	          0x4889c7	                            mov rdi, rax	       105	rm.c	FUNCTION_15	CALL_1
0x40006dd	      0xe8adfbffff	                    call sym.is_null_oid	       105	rm.c	FUNCTION_15	CALL_1
0x40006e2	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	       105	rm.c	FUNCTION_15	CALL_1
0x40006e8	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	       106	rm.c	FUNCTION_15	FOR_1
0x40006f2	      0xe908030000	                           jmp 0x40009ff	       106	rm.c	FUNCTION_15	FOR_1
0x40006f7	    0x488b05000000	            mov rax, qword [0x040006fe] 	       110	rm.c	FUNCTION_15	FOR_1
0x40006fe	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	       110	rm.c	FUNCTION_15	FOR_1
0x4000704	          0x4863d2	                         movsxd rdx, edx	       110	rm.c	FUNCTION_15	FOR_1
0x4000707	        0x48c1e204	                              shl rdx, 4	       110	rm.c	FUNCTION_15	FOR_1
0x400070b	          0x4801d0	                            add rax, rdx	       110	rm.c	FUNCTION_15	FOR_1
0x400070e	          0x488b00	                    mov rax, qword [rax]	       110	rm.c	FUNCTION_15	FOR_1
0x4000711	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       110	rm.c	FUNCTION_15	FOR_1
0x4000718	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	       113	rm.c	FUNCTION_15	FOR_1
0x4000722	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	       114	rm.c	FUNCTION_15	FOR_1
0x400072c	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000733	          0x4889c7	                            mov rdi, rax	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000736	      0xe800000000	                          call 0x400073b	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x400073b	            0x89c2	                            mov edx, eax	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x400073d	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000744	          0x4889c6	                            mov rsi, rax	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000747	      0xbf00000000	                              mov edi, 0	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x400074c	      0xe800000000	                          call 0x4000751	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000751	    0x8985b0feffff	            mov dword [rbp - 0x150], eax	       116	rm.c	FUNCTION_15	FOR_1	CALL_2
0x4000757	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	       117	rm.c	FUNCTION_15	FOR_1	IF_1
0x400075e	            0x796e	                           jns 0x40007ce	       117	rm.c	FUNCTION_15	FOR_1	IF_1
0x4000760	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000766	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x400076d	            0x89d6	                            mov esi, edx	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x400076f	          0x4889c7	                            mov rdi, rax	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000772	      0xe8dafbffff	             call sym.get_ours_cache_pos	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x4000777	    0x8985b0feffff	            mov dword [rbp - 0x150], eax	       122	rm.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x400077d	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	       123	rm.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x4000784	     0xf8861020000	                            js 0x40009eb	       123	rm.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x400078a	    0x488b05000000	            mov rax, qword [0x04000791] 	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x4000791	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x4000797	          0x4863d2	                         movsxd rdx, edx	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x400079a	        0x48c1e203	                              shl rdx, 3	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x400079e	          0x4801d0	                            add rax, rdx	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007a1	          0x488b00	                    mov rax, qword [rax]	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007a4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007a7	      0x2500f00000	                         and eax, 0xf000	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007ac	      0x3d00e00000	                         cmp eax, 0xe000	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007b1	     0xf8537020000	                           jne 0x40009ee	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007b7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       127	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3	CALL_4
0x40007be	          0x4889c7	                            mov rdi, rax	       127	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3	CALL_4
0x40007c1	      0xe800000000	                          call 0x40007c6	       127	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3	CALL_4
0x40007c6	            0x85c0	                           test eax, eax	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007c8	     0xf8520020000	                           jne 0x40009ee	       126	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40007ce	    0x488b05000000	            mov rax, qword [0x040007d5] 	       130	rm.c	FUNCTION_15	FOR_1
0x40007d5	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       130	rm.c	FUNCTION_15	FOR_1
0x40007db	          0x4863d2	                         movsxd rdx, edx	       130	rm.c	FUNCTION_15	FOR_1
0x40007de	        0x48c1e203	                              shl rdx, 3	       130	rm.c	FUNCTION_15	FOR_1
0x40007e2	          0x4801d0	                            add rax, rdx	       130	rm.c	FUNCTION_15	FOR_1
0x40007e5	          0x488b00	                    mov rax, qword [rax]	       130	rm.c	FUNCTION_15	FOR_1
0x40007e8	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       130	rm.c	FUNCTION_15	FOR_1
0x40007ef	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x40007f6	        0x488d5058	                   lea rdx, [rax + 0x58]	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x40007fa	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x4000801	          0x4889c6	                            mov rsi, rax	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x4000804	          0x4889d7	                            mov rdi, rdx	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x4000807	      0xe800000000	                          call 0x400080c	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x400080c	            0x85c0	                           test eax, eax	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x400080e	            0x7940	                           jns 0x4000850	       132	rm.c	FUNCTION_15	FOR_1	IF_4
0x4000810	      0xe800000000	                          call 0x4000815	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x4000815	            0x8b00	                    mov eax, dword [rax]	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x4000817	            0x89c7	                            mov edi, eax	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x4000819	      0xe87ff8ffff	          call sym.is_missing_file_error	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x400081e	            0x85c0	                           test eax, eax	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x4000820	     0xf85cb010000	                           jne 0x40009f1	       133	rm.c	FUNCTION_15	FOR_1	IF_4	IF_5	CALL_5
0x4000826	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x400082d	        0x488d5858	                   lea rbx, [rax + 0x58]	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x4000831	      0xbf00000000	                              mov edi, 0	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x4000836	      0xe852f9ffff	                               call sym.	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x400083b	          0x4889de	                            mov rsi, rbx	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x400083e	          0x4889c7	                            mov rdi, rax	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x4000841	      0xb800000000	                              mov eax, 0	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x4000846	      0xe800000000	                          call 0x400084b	       134	rm.c	FUNCTION_15	FOR_1	IF_4	CALL_7
0x400084b	      0xe9a1010000	                           jmp 0x40009f1	       136	rm.c	FUNCTION_15	FOR_1	IF_4
0x4000850	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       138	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	CALL_8
0x4000856	      0x2500f00000	                         and eax, 0xf000	       138	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	CALL_8
0x400085b	      0x3d00400000	                         cmp eax, 0x4000	       138	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	CALL_8
0x4000860	            0x751a	                           jne 0x400087c	       138	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	CALL_8
0x4000862	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       144	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x4000869	          0x8b4034	            mov eax, dword [rax + 0x34] 	       144	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x400086c	      0x2500f00000	                         and eax, 0xf000	       144	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x4000871	      0x3d00e00000	                         cmp eax, 0xe000	       144	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x4000876	     0xf8578010000	                           jne 0x40009f4	       144	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x400087c	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x4000883	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x400088a	      0xb900000000	                              mov ecx, 0	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x400088f	          0x4889c6	                            mov rsi, rax	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x4000892	      0xbf00000000	                              mov edi, 0	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x4000897	      0xe800000000	                          call 0x400089c	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x400089c	            0x85c0	                           test eax, eax	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x400089e	            0x7532	                           jne 0x40008d2	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008a0	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       168	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008a7	          0x8b4034	            mov eax, dword [rax + 0x34] 	       168	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008aa	      0x2500f00000	                         and eax, 0xf000	       168	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008af	      0x3d00e00000	                         cmp eax, 0xe000	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008b4	            0x7526	                           jne 0x40008dc	       167	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008b6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       169	rm.c	FUNCTION_15	FOR_1	IF_8	CALL_9
0x40008bd	        0x4883c058	                           add rax, 0x58	       169	rm.c	FUNCTION_15	FOR_1	IF_8	CALL_9
0x40008c1	      0xbe05000000	                              mov esi, 5	       169	rm.c	FUNCTION_15	FOR_1	IF_8	CALL_9
0x40008c6	          0x4889c7	                            mov rdi, rax	       169	rm.c	FUNCTION_15	FOR_1	IF_8	CALL_9
0x40008c9	      0xe800000000	                          call 0x40008ce	       169	rm.c	FUNCTION_15	FOR_1	IF_8	CALL_9
0x40008ce	            0x85c0	                           test eax, eax	       168	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008d0	            0x740a	                            je 0x40008dc	       168	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008d2	    0xc785b4feffff	              mov dword [rbp - 0x14c], 1	       172	rm.c	FUNCTION_15	FOR_1	IF_8
0x40008dc	    0x83bdbcfeffff	              cmp dword [rbp - 0x144], 0	       180	rm.c	FUNCTION_15	FOR_1	IF_9
0x40008e3	            0x7564	                           jne 0x4000949	       180	rm.c	FUNCTION_15	FOR_1	IF_9
0x40008e5	    0x488d8da8feff	                  lea rcx, [rbp - 0x158]	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x40008ec	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x40008f3	    0x488bb5c0feff	            mov rsi, qword [rbp - 0x140]	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x40008fa	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x4000901	          0x4889c7	                            mov rdi, rax	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x4000904	      0xe800000000	                          call 0x4000909	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x4000909	            0x85c0	                           test eax, eax	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x400090b	            0x753c	                           jne 0x4000949	       181	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_10
0x400090d	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x4000914	          0x8b5834	            mov ebx, dword [rax + 0x34] 	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x4000917	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x400091d	            0x89c7	                            mov edi, eax	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x400091f	      0xe8c2f8ffff	                 call sym.create_ce_mode	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x4000924	            0x39c3	                            cmp ebx, eax	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x4000926	            0x7521	                           jne 0x4000949	       182	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_11
0x4000928	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x400092f	        0x488d5044	                   lea rdx, [rax + 0x44]	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x4000933	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x400093a	          0x4889c6	                            mov rsi, rax	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x400093d	          0x4889d7	                            mov rdi, rdx	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x4000940	      0xe825f9ffff	                         call sym.oidcmp	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x4000945	            0x85c0	                           test eax, eax	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x4000947	            0x740a	                            je 0x4000953	       183	rm.c	FUNCTION_15	FOR_1	IF_9	CALL_12
0x4000949	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	       184	rm.c	FUNCTION_15	FOR_1	IF_9
0x4000953	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       194	rm.c	FUNCTION_15	FOR_1	IF_10
0x400095a	            0x7440	                            je 0x400099c	       194	rm.c	FUNCTION_15	FOR_1	IF_10
0x400095c	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	       194	rm.c	FUNCTION_15	FOR_1	IF_10
0x4000963	            0x7437	                            je 0x400099c	       194	rm.c	FUNCTION_15	FOR_1	IF_10
0x4000965	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x400096c	            0x7413	                            je 0x4000981	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x400096e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x4000975	          0x8b4038	            mov eax, dword [rax + 0x38] 	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x4000978	      0x2500000020	                     and eax, 0x20000000	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x400097d	            0x85c0	                           test eax, eax	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x400097f	            0x7576	                           jne 0x40009f7	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x4000981	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       196	rm.c	FUNCTION_15	FOR_1	IF_10	CALL_13
0x4000988	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       196	rm.c	FUNCTION_15	FOR_1	IF_10	CALL_13
0x400098f	          0x4889d6	                            mov rsi, rdx	       196	rm.c	FUNCTION_15	FOR_1	IF_10	CALL_13
0x4000992	          0x4889c7	                            mov rdi, rax	       196	rm.c	FUNCTION_15	FOR_1	IF_10	CALL_13
0x4000995	      0xe800000000	                          call 0x400099a	       196	rm.c	FUNCTION_15	FOR_1	IF_10	CALL_13
0x400099a	            0xeb5b	                           jmp 0x40009f7	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x400099c	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       198	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12
0x40009a3	            0x7553	                           jne 0x40009f8	       198	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12
0x40009a5	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	       199	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	IF_13
0x40009ac	            0x7419	                            je 0x40009c7	       199	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	IF_13
0x40009ae	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       200	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_14
0x40009b5	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       200	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_14
0x40009bc	          0x4889d6	                            mov rsi, rdx	       200	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_14
0x40009bf	          0x4889c7	                            mov rdi, rax	       200	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_14
0x40009c2	      0xe800000000	                          call 0x40009c7	       200	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_14
0x40009c7	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       201	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	IF_14
0x40009ce	            0x7428	                            je 0x40009f8	       201	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	IF_14
0x40009d0	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009d7	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009de	          0x4889d6	                            mov rsi, rdx	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009e1	          0x4889c7	                            mov rdi, rax	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009e4	      0xe800000000	                          call 0x40009e9	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009e9	            0xeb0d	                           jmp 0x40009f8	       202	rm.c	FUNCTION_15	FOR_1	ELSE_2	IF_12	CALL_15
0x40009eb	              0x90	                                     nop	       124	rm.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x40009ec	            0xeb0a	                           jmp 0x40009f8	       124	rm.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x40009ee	              0x90	                                     nop	       128	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40009ef	            0xeb07	                           jmp 0x40009f8	       128	rm.c	FUNCTION_15	FOR_1	IF_1	IF_3
0x40009f1	              0x90	                                     nop	       136	rm.c	FUNCTION_15	FOR_1	IF_4
0x40009f2	            0xeb04	                           jmp 0x40009f8	       136	rm.c	FUNCTION_15	FOR_1	IF_4
0x40009f4	              0x90	                                     nop	       145	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x40009f5	            0xeb01	                           jmp 0x40009f8	       145	rm.c	FUNCTION_15	FOR_1	ELSE_1	IF_6	IF_7
0x40009f7	              0x90	                                     nop	       195	rm.c	FUNCTION_15	FOR_1	IF_10	IF_11
0x40009f8	    0x8385acfeffff	              add dword [rbp - 0x154], 1	       106	rm.c	FUNCTION_15	FOR_1
0x40009ff	    0x8b0500000000	            mov eax, dword [0x04000a05] 	       106	rm.c	FUNCTION_15	FOR_1
0x4000a05	    0x3b85acfeffff	            cmp eax, dword [rbp - 0x154]	       106	rm.c	FUNCTION_15	FOR_1
0x4000a0b	     0xf8fe6fcffff	                            jg 0x40006f7	       106	rm.c	FUNCTION_15	FOR_1
0x4000a11	      0xbf00000000	                              mov edi, 0	       205	rm.c	FUNCTION_15	CALL_16
0x4000a16	      0xe872f7ffff	                               call sym.	       205	rm.c	FUNCTION_15	CALL_16
0x4000a1b	          0x4889c3	                            mov rbx, rax	       205	rm.c	FUNCTION_15	CALL_16
0x4000a1e	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       210	rm.c	FUNCTION_15
0x4000a24	            0x89c0	                            mov eax, eax	       205	rm.c	FUNCTION_15	CALL_16
0x4000a26	          0x4889c2	                            mov rdx, rax	       205	rm.c	FUNCTION_15	CALL_16
0x4000a29	      0xbe00000000	                              mov esi, 0	       205	rm.c	FUNCTION_15	CALL_16
0x4000a2e	      0xbf00000000	                              mov edi, 0	       205	rm.c	FUNCTION_15	CALL_16
0x4000a33	      0xe881f7ffff	                              call sym.Q	       205	rm.c	FUNCTION_15	CALL_16
0x4000a38	          0x4889c6	                            mov rsi, rax	       205	rm.c	FUNCTION_15	CALL_16
0x4000a3b	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       205	rm.c	FUNCTION_15	CALL_16
0x4000a42	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       205	rm.c	FUNCTION_15	CALL_16
0x4000a49	          0x4889d1	                            mov rcx, rdx	       205	rm.c	FUNCTION_15	CALL_16
0x4000a4c	          0x4889da	                            mov rdx, rbx	       205	rm.c	FUNCTION_15	CALL_16
0x4000a4f	          0x4889c7	                            mov rdi, rax	       205	rm.c	FUNCTION_15	CALL_16
0x4000a52	      0xe885f9ffff	              call sym.print_error_files	       205	rm.c	FUNCTION_15	CALL_16
0x4000a57	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       213	rm.c	FUNCTION_15	CALL_19
0x4000a5e	      0xbe00000000	                              mov esi, 0	       213	rm.c	FUNCTION_15	CALL_19
0x4000a63	          0x4889c7	                            mov rdi, rax	       213	rm.c	FUNCTION_15	CALL_19
0x4000a66	      0xe800000000	                          call 0x4000a6b	       213	rm.c	FUNCTION_15	CALL_19
0x4000a6b	      0xbf00000000	                              mov edi, 0	       214	rm.c	FUNCTION_15	CALL_20
0x4000a70	      0xe818f7ffff	                               call sym.	       214	rm.c	FUNCTION_15	CALL_20
0x4000a75	          0x4889c3	                            mov rbx, rax	       214	rm.c	FUNCTION_15	CALL_20
0x4000a78	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       218	rm.c	FUNCTION_15
0x4000a7e	            0x89c0	                            mov eax, eax	       214	rm.c	FUNCTION_15	CALL_20
0x4000a80	          0x4889c2	                            mov rdx, rax	       214	rm.c	FUNCTION_15	CALL_20
0x4000a83	      0xbe00000000	                              mov esi, 0	       214	rm.c	FUNCTION_15	CALL_20
0x4000a88	      0xbf00000000	                              mov edi, 0	       214	rm.c	FUNCTION_15	CALL_20
0x4000a8d	      0xe827f7ffff	                              call sym.Q	       214	rm.c	FUNCTION_15	CALL_20
0x4000a92	          0x4889c6	                            mov rsi, rax	       214	rm.c	FUNCTION_15	CALL_20
0x4000a95	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       214	rm.c	FUNCTION_15	CALL_20
0x4000a9c	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       214	rm.c	FUNCTION_15	CALL_20
0x4000aa3	          0x4889d1	                            mov rcx, rdx	       214	rm.c	FUNCTION_15	CALL_20
0x4000aa6	          0x4889da	                            mov rdx, rbx	       214	rm.c	FUNCTION_15	CALL_20
0x4000aa9	          0x4889c7	                            mov rdi, rax	       214	rm.c	FUNCTION_15	CALL_20
0x4000aac	      0xe82bf9ffff	              call sym.print_error_files	       214	rm.c	FUNCTION_15	CALL_20
0x4000ab1	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       222	rm.c	FUNCTION_15	CALL_23
0x4000ab8	      0xbe00000000	                              mov esi, 0	       222	rm.c	FUNCTION_15	CALL_23
0x4000abd	          0x4889c7	                            mov rdi, rax	       222	rm.c	FUNCTION_15	CALL_23
0x4000ac0	      0xe800000000	                          call 0x4000ac5	       222	rm.c	FUNCTION_15	CALL_23
0x4000ac5	      0xbf00000000	                              mov edi, 0	       224	rm.c	FUNCTION_15	CALL_24
0x4000aca	      0xe8bef6ffff	                               call sym.	       224	rm.c	FUNCTION_15	CALL_24
0x4000acf	          0x4889c3	                            mov rbx, rax	       224	rm.c	FUNCTION_15	CALL_24
0x4000ad2	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       227	rm.c	FUNCTION_15
0x4000ad8	            0x89c0	                            mov eax, eax	       224	rm.c	FUNCTION_15	CALL_24
0x4000ada	          0x4889c2	                            mov rdx, rax	       224	rm.c	FUNCTION_15	CALL_24
0x4000add	      0xbe00000000	                              mov esi, 0	       224	rm.c	FUNCTION_15	CALL_24
0x4000ae2	      0xbf00000000	                              mov edi, 0	       224	rm.c	FUNCTION_15	CALL_24
0x4000ae7	      0xe8cdf6ffff	                              call sym.Q	       224	rm.c	FUNCTION_15	CALL_24
0x4000aec	          0x4889c6	                            mov rsi, rax	       224	rm.c	FUNCTION_15	CALL_24
0x4000aef	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       224	rm.c	FUNCTION_15	CALL_24
0x4000af6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       224	rm.c	FUNCTION_15	CALL_24
0x4000afd	          0x4889d1	                            mov rcx, rdx	       224	rm.c	FUNCTION_15	CALL_24
0x4000b00	          0x4889da	                            mov rdx, rbx	       224	rm.c	FUNCTION_15	CALL_24
0x4000b03	          0x4889c7	                            mov rdi, rax	       224	rm.c	FUNCTION_15	CALL_24
0x4000b06	      0xe8d1f8ffff	              call sym.print_error_files	       224	rm.c	FUNCTION_15	CALL_24
0x4000b0b	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       231	rm.c	FUNCTION_15	CALL_27
0x4000b12	      0xbe00000000	                              mov esi, 0	       231	rm.c	FUNCTION_15	CALL_27
0x4000b17	          0x4889c7	                            mov rdi, rax	       231	rm.c	FUNCTION_15	CALL_27
0x4000b1a	      0xe800000000	                          call 0x4000b1f	       231	rm.c	FUNCTION_15	CALL_27
0x4000b1f	    0x8b85a4feffff	            mov eax, dword [rbp - 0x15c]	       233	rm.c	FUNCTION_15
0x4000b25	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       234	rm.c	FUNCTION_15
0x4000b29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       234	rm.c	FUNCTION_15
0x4000b32	            0x7405	                            je 0x4000b39	       234	rm.c	FUNCTION_15
0x4000b34	      0xe800000000	                          call 0x4000b39	       234	rm.c	FUNCTION_15
0x4000b39	    0x4881c4680100	                          add rsp, 0x168	       234	rm.c	FUNCTION_15
0x4000b40	              0x5b	                                 pop rbx	       234	rm.c	FUNCTION_15
0x4000b41	              0x5d	                                 pop rbp	       234	rm.c	FUNCTION_15
0x4000b42	              0xc3	                                     ret	       234	rm.c	FUNCTION_15
create_ce_mode	WHILE,0:CALL,2:IF,2:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	28
0x40001e6	              0x55	                                push rbp	       255	cache.h	FUNCTION_19
0x40001e7	          0x4889e5	                            mov rbp, rsp	       255	cache.h	FUNCTION_19
0x40001ea	          0x897dfc	                mov dword [rbp - 4], edi	       255	cache.h	FUNCTION_19
0x40001ed	          0x8b45fc	                mov eax, dword [rbp - 4]	       256	cache.h	FUNCTION_19	IF_1	CALL_1
0x40001f0	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_19	IF_1	CALL_1
0x40001f5	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_19	IF_1	CALL_1
0x40001fa	            0x7507	                           jne 0x4000203	       256	cache.h	FUNCTION_19	IF_1	CALL_1
0x40001fc	      0xb800a00000	                         mov eax, 0xa000	       257	cache.h	FUNCTION_19	IF_1
0x4000201	            0xeb3b	                           jmp 0x400023e	       257	cache.h	FUNCTION_19	IF_1
0x4000203	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x4000206	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x400020b	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x4000210	            0x740f	                            je 0x4000221	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x4000212	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x4000215	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x400021a	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x400021f	            0x7507	                           jne 0x4000228	       258	cache.h	FUNCTION_19	IF_2	CALL_2
0x4000221	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_19	IF_2
0x4000226	            0xeb16	                           jmp 0x400023e	       259	cache.h	FUNCTION_19	IF_2
0x4000228	          0x8b45fc	                mov eax, dword [rbp - 4]	       260	cache.h	FUNCTION_19
0x400022b	          0x83e040	                           and eax, 0x40	       260	cache.h	FUNCTION_19
0x400022e	            0x85c0	                           test eax, eax	       260	cache.h	FUNCTION_19
0x4000230	            0x7407	                            je 0x4000239	       260	cache.h	FUNCTION_19
0x4000232	      0xb8ed810000	                         mov eax, 0x81ed	       260	cache.h	FUNCTION_19
0x4000237	            0xeb05	                           jmp 0x400023e	       260	cache.h	FUNCTION_19
0x4000239	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_19
0x400023e	              0x5d	                                 pop rbp	       261	cache.h	FUNCTION_19
0x400023f	              0xc3	                                     ret	       261	cache.h	FUNCTION_19
cmd_rm	WHILE,0:CALL,40:IF,25:FOR,4:DO,0:SWITCH,0:functions,0:ELSE,1	407
0x4000b43	              0x55	                                push rbp	       253	rm.c	FUNCTION_16
0x4000b44	          0x4889e5	                            mov rbp, rsp	       253	rm.c	FUNCTION_16
0x4000b47	              0x53	                                push rbx	       253	rm.c	FUNCTION_16
0x4000b48	    0x4881ecc80000	                           sub rsp, 0xc8	       253	rm.c	FUNCTION_16
0x4000b4f	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	       253	rm.c	FUNCTION_16
0x4000b55	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       253	rm.c	FUNCTION_16
0x4000b5c	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       253	rm.c	FUNCTION_16
0x4000b63	    0x64488b042528	                mov rax, qword fs:[0x28]	       253	rm.c	FUNCTION_16
0x4000b6c	        0x488945e8	             mov qword [rbp - 0x18], rax	       253	rm.c	FUNCTION_16
0x4000b70	            0x31c0	                            xor eax, eax	       253	rm.c	FUNCTION_16
0x4000b72	      0xbe00000000	                              mov esi, 0	       258	rm.c	FUNCTION_16	CALL_1
0x4000b77	      0xbf00000000	                              mov edi, 0	       258	rm.c	FUNCTION_16	CALL_1
0x4000b7c	      0xe800000000	                          call 0x4000b81	       258	rm.c	FUNCTION_16	CALL_1
0x4000b81	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       260	rm.c	FUNCTION_16	CALL_2
0x4000b88	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       260	rm.c	FUNCTION_16	CALL_2
0x4000b8f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       260	rm.c	FUNCTION_16	CALL_2
0x4000b95	    0x41b900000000	                              mov r9d, 0	       260	rm.c	FUNCTION_16	CALL_2
0x4000b9b	    0x41b800000000	                              mov r8d, 0	       260	rm.c	FUNCTION_16	CALL_2
0x4000ba1	      0xb900000000	                              mov ecx, 0	       260	rm.c	FUNCTION_16	CALL_2
0x4000ba6	            0x89c7	                            mov edi, eax	       260	rm.c	FUNCTION_16	CALL_2
0x4000ba8	      0xe800000000	                          call 0x4000bad	       260	rm.c	FUNCTION_16	CALL_2
0x4000bad	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       260	rm.c	FUNCTION_16	CALL_2
0x4000bb3	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       262	rm.c	FUNCTION_16	IF_1
0x4000bba	            0x750f	                           jne 0x4000bcb	       262	rm.c	FUNCTION_16	IF_1
0x4000bbc	      0xbe00000000	                              mov esi, 0	       263	rm.c	FUNCTION_16	CALL_3
0x4000bc1	      0xbf00000000	                              mov edi, 0	       263	rm.c	FUNCTION_16	CALL_3
0x4000bc6	      0xe800000000	                          call 0x4000bcb	       263	rm.c	FUNCTION_16	CALL_3
0x4000bcb	    0x8b0500000000	            mov eax, dword [0x04000bd1] 	       265	rm.c	FUNCTION_16	IF_2
0x4000bd1	            0x85c0	                           test eax, eax	       265	rm.c	FUNCTION_16	IF_2
0x4000bd3	            0x7505	                           jne 0x4000bda	       265	rm.c	FUNCTION_16	IF_2
0x4000bd5	      0xe800000000	                          call 0x4000bda	       266	rm.c	FUNCTION_16	CALL_4
0x4000bda	      0xbe01000000	                              mov esi, 1	       268	rm.c	FUNCTION_16	CALL_5
0x4000bdf	      0xbf00000000	                              mov edi, 0	       268	rm.c	FUNCTION_16	CALL_5
0x4000be4	      0xe800000000	                          call 0x4000be9	       268	rm.c	FUNCTION_16	CALL_5
0x4000be9	      0xbf00000000	                              mov edi, 0	       270	rm.c	FUNCTION_16	IF_3
0x4000bee	      0xe800000000	                          call 0x4000bf3	       270	rm.c	FUNCTION_16	IF_3
0x4000bf3	            0x85c0	                           test eax, eax	       270	rm.c	FUNCTION_16	IF_3
0x4000bf5	            0x7917	                           jns 0x4000c0e	       270	rm.c	FUNCTION_16	IF_3
0x4000bf7	      0xbf00000000	                              mov edi, 0	       271	rm.c	FUNCTION_16	CALL_7
0x4000bfc	      0xe88cf5ffff	                               call sym.	       271	rm.c	FUNCTION_16	CALL_7
0x4000c01	          0x4889c7	                            mov rdi, rax	       271	rm.c	FUNCTION_16	CALL_7
0x4000c04	      0xb800000000	                              mov eax, 0	       271	rm.c	FUNCTION_16	CALL_7
0x4000c09	      0xe800000000	                          call 0x4000c0e	       271	rm.c	FUNCTION_16	CALL_7
0x4000c0e	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       273	rm.c	FUNCTION_16	CALL_8
0x4000c15	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       273	rm.c	FUNCTION_16	CALL_8
0x4000c1c	        0x488d4590	                   lea rax, [rbp - 0x70]	       273	rm.c	FUNCTION_16	CALL_8
0x4000c20	          0x4989c8	                             mov r8, rcx	       273	rm.c	FUNCTION_16	CALL_8
0x4000c23	          0x4889d1	                            mov rcx, rdx	       273	rm.c	FUNCTION_16	CALL_8
0x4000c26	      0xba01000000	                              mov edx, 1	       273	rm.c	FUNCTION_16	CALL_8
0x4000c2b	      0xbe00000000	                              mov esi, 0	       273	rm.c	FUNCTION_16	CALL_8
0x4000c30	          0x4889c7	                            mov rdi, rax	       273	rm.c	FUNCTION_16	CALL_8
0x4000c33	      0xe800000000	                          call 0x4000c38	       273	rm.c	FUNCTION_16	CALL_8
0x4000c38	        0x488d4590	                   lea rax, [rbp - 0x70]	       276	rm.c	FUNCTION_16	CALL_9
0x4000c3c	    0x41b800000000	                              mov r8d, 0	       276	rm.c	FUNCTION_16	CALL_9
0x4000c42	      0xb900000000	                              mov ecx, 0	       276	rm.c	FUNCTION_16	CALL_9
0x4000c47	          0x4889c2	                            mov rdx, rax	       276	rm.c	FUNCTION_16	CALL_9
0x4000c4a	      0xbe04000000	                              mov esi, 4	       276	rm.c	FUNCTION_16	CALL_9
0x4000c4f	      0xbf00000000	                              mov edi, 0	       276	rm.c	FUNCTION_16	CALL_9
0x4000c54	      0xe800000000	                          call 0x4000c59	       276	rm.c	FUNCTION_16	CALL_9
0x4000c59	          0x8b4590	             mov eax, dword [rbp - 0x70]	       278	rm.c	FUNCTION_16	CALL_10
0x4000c5c	            0x4898	                                    cdqe	       278	rm.c	FUNCTION_16	CALL_10
0x4000c5e	      0xbe01000000	                              mov esi, 1	       278	rm.c	FUNCTION_16	CALL_10
0x4000c63	          0x4889c7	                            mov rdi, rax	       278	rm.c	FUNCTION_16	CALL_10
0x4000c66	      0xe800000000	                          call 0x4000c6b	       278	rm.c	FUNCTION_16	CALL_10
0x4000c6b	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       278	rm.c	FUNCTION_16	CALL_10
0x4000c72	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       280	rm.c	FUNCTION_16	FOR_1
0x4000c7c	      0xe997010000	                           jmp 0x4000e18	       280	rm.c	FUNCTION_16	FOR_1
0x4000c81	    0x488b05000000	            mov rax, qword [0x04000c88] 	       281	rm.c	FUNCTION_16	FOR_1
0x4000c88	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       281	rm.c	FUNCTION_16	FOR_1
0x4000c8e	          0x4863d2	                         movsxd rdx, edx	       281	rm.c	FUNCTION_16	FOR_1
0x4000c91	        0x48c1e203	                              shl rdx, 3	       281	rm.c	FUNCTION_16	FOR_1
0x4000c95	          0x4801d0	                            add rax, rdx	       281	rm.c	FUNCTION_16	FOR_1
0x4000c98	          0x488b00	                    mov rax, qword [rax]	       281	rm.c	FUNCTION_16	FOR_1
0x4000c9b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       281	rm.c	FUNCTION_16	FOR_1
0x4000ca2	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000ca9	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cad	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cb4	          0x4889ce	                            mov rsi, rcx	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cb7	          0x4889c7	                            mov rdi, rax	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cba	      0xe81cf6ffff	                  call sym.ce_path_match	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cbf	            0x85c0	                           test eax, eax	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cc1	     0xf8449010000	                            je 0x4000e10	       282	rm.c	FUNCTION_16	FOR_1	IF_4	CALL_11
0x4000cc7	    0x8b0500000000	            mov eax, dword [0x04000ccd] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000ccd	          0x8d5001	                      lea edx, [rax + 1]	       284	rm.c	FUNCTION_16	FOR_1
0x4000cd0	    0x8b0500000000	            mov eax, dword [0x04000cd6] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000cd6	            0x39c2	                            cmp edx, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000cd8	     0xf8e87000000	                           jle 0x4000d65	       284	rm.c	FUNCTION_16	FOR_1
0x4000cde	    0x8b0500000000	            mov eax, dword [0x04000ce4] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000ce4	          0x8d5010	                   lea edx, [rax + 0x10]	       284	rm.c	FUNCTION_16	FOR_1
0x4000ce7	            0x89d0	                            mov eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000ce9	             0x1c0	                            add eax, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000ceb	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000ced	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000cef	          0xc1ea1f	                           shr edx, 0x1f	       284	rm.c	FUNCTION_16	FOR_1
0x4000cf2	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000cf4	            0xd1f8	                              sar eax, 1	       284	rm.c	FUNCTION_16	FOR_1
0x4000cf6	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000cf8	    0x8b0500000000	            mov eax, dword [0x04000cfe] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000cfe	          0x83c001	                              add eax, 1	       284	rm.c	FUNCTION_16	FOR_1
0x4000d01	            0x39c2	                            cmp edx, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d03	            0x7d11	                           jge 0x4000d16	       284	rm.c	FUNCTION_16	FOR_1
0x4000d05	    0x8b0500000000	            mov eax, dword [0x04000d0b] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d0b	          0x83c001	                              add eax, 1	       284	rm.c	FUNCTION_16	FOR_1
0x4000d0e	    0x890500000000	            mov dword [0x04000d14], eax 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d14	            0xeb1e	                           jmp 0x4000d34	       284	rm.c	FUNCTION_16	FOR_1
0x4000d16	    0x8b0500000000	            mov eax, dword [0x04000d1c] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d1c	          0x8d5010	                   lea edx, [rax + 0x10]	       284	rm.c	FUNCTION_16	FOR_1
0x4000d1f	            0x89d0	                            mov eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000d21	             0x1c0	                            add eax, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d23	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000d25	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d27	          0xc1ea1f	                           shr edx, 0x1f	       284	rm.c	FUNCTION_16	FOR_1
0x4000d2a	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_16	FOR_1
0x4000d2c	            0xd1f8	                              sar eax, 1	       284	rm.c	FUNCTION_16	FOR_1
0x4000d2e	    0x890500000000	            mov dword [0x04000d34], eax 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d34	    0x8b0500000000	            mov eax, dword [0x04000d3a] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d3a	            0x4898	                                    cdqe	       284	rm.c	FUNCTION_16	FOR_1
0x4000d3c	          0x4889c6	                            mov rsi, rax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d3f	      0xbf10000000	                           mov edi, 0x10	       284	rm.c	FUNCTION_16	FOR_1
0x4000d44	      0xe802f3ffff	                        call sym.st_mult	       284	rm.c	FUNCTION_16	FOR_1
0x4000d49	          0x4889c2	                            mov rdx, rax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d4c	    0x488b05000000	            mov rax, qword [0x04000d53] 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d53	          0x4889d6	                            mov rsi, rdx	       284	rm.c	FUNCTION_16	FOR_1
0x4000d56	          0x4889c7	                            mov rdi, rax	       284	rm.c	FUNCTION_16	FOR_1
0x4000d59	      0xe800000000	                          call 0x4000d5e	       284	rm.c	FUNCTION_16	FOR_1
0x4000d5e	    0x488905000000	            mov qword [0x04000d65], rax 	       284	rm.c	FUNCTION_16	FOR_1
0x4000d65	    0x488b05000000	            mov rax, qword [0x04000d6c] 	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d6c	    0x8b1500000000	            mov edx, dword [0x04000d72] 	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d72	          0x4863d2	                         movsxd rdx, edx	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d75	        0x48c1e204	                              shl rdx, 4	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d79	        0x488d1c10	                    lea rbx, [rax + rdx]	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d7d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d84	        0x4883c058	                           add rax, 0x58	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d88	          0x4889c7	                            mov rdi, rax	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d8b	      0xe800000000	                          call 0x4000d90	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d90	          0x488903	                    mov qword [rbx], rax	       285	rm.c	FUNCTION_16	FOR_1	CALL_12
0x4000d93	    0x488b05000000	            mov rax, qword [0x04000d9a] 	       286	rm.c	FUNCTION_16	FOR_1
0x4000d9a	    0x8b1500000000	            mov edx, dword [0x04000da0] 	       286	rm.c	FUNCTION_16	FOR_1
0x4000da0	          0x4863d2	                         movsxd rdx, edx	       286	rm.c	FUNCTION_16	FOR_1
0x4000da3	        0x48c1e204	                              shl rdx, 4	       286	rm.c	FUNCTION_16	FOR_1
0x4000da7	          0x4801c2	                            add rdx, rax	       286	rm.c	FUNCTION_16	FOR_1
0x4000daa	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       286	rm.c	FUNCTION_16	FOR_1
0x4000db1	          0x8b4034	            mov eax, dword [rax + 0x34] 	       286	rm.c	FUNCTION_16	FOR_1
0x4000db4	      0x2500f00000	                         and eax, 0xf000	       286	rm.c	FUNCTION_16	FOR_1
0x4000db9	      0x3d00e00000	                         cmp eax, 0xe000	       286	rm.c	FUNCTION_16	FOR_1
0x4000dbe	           0xf94c0	                                 sete al	       286	rm.c	FUNCTION_16	FOR_1
0x4000dc1	          0x884208	                  mov byte [rdx + 8], al	       286	rm.c	FUNCTION_16	FOR_1
0x4000dc4	    0x488b0d000000	            mov rcx, qword [0x04000dcb] 	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000dcb	    0x8b0500000000	            mov eax, dword [0x04000dd1] 	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000dd1	          0x8d5001	                      lea edx, [rax + 1]	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000dd4	    0x891500000000	            mov dword [0x04000dda], edx 	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000dda	            0x4898	                                    cdqe	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000ddc	        0x48c1e004	                              shl rax, 4	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000de0	          0x4801c8	                            add rax, rcx	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000de3	         0xfb64008	               movzx eax, byte [rax + 8]	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000de7	            0x84c0	                             test al, al	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000de9	            0x7426	                            je 0x4000e11	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000deb	      0xbf00000000	                              mov edi, 0	       288	rm.c	FUNCTION_16	FOR_1	IF_5	CALL_13
0x4000df0	      0xe800000000	                          call 0x4000df5	       288	rm.c	FUNCTION_16	FOR_1	IF_5	CALL_13
0x4000df5	            0x85c0	                           test eax, eax	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000df7	            0x7518	                           jne 0x4000e11	       287	rm.c	FUNCTION_16	FOR_1	IF_5
0x4000df9	      0xbf00000000	                              mov edi, 0	       289	rm.c	FUNCTION_16	FOR_1	CALL_15
0x4000dfe	      0xe88af3ffff	                               call sym.	       289	rm.c	FUNCTION_16	FOR_1	CALL_15
0x4000e03	          0x4889c7	                            mov rdi, rax	       289	rm.c	FUNCTION_16	FOR_1	CALL_15
0x4000e06	      0xb800000000	                              mov eax, 0	       289	rm.c	FUNCTION_16	FOR_1	CALL_15
0x4000e0b	      0xe800000000	                          call 0x4000e10	       289	rm.c	FUNCTION_16	FOR_1	CALL_15
0x4000e10	              0x90	                                     nop	       283	rm.c	FUNCTION_16	FOR_1	IF_4
0x4000e11	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       280	rm.c	FUNCTION_16	FOR_1
0x4000e18	    0x8b1500000000	            mov edx, dword [0x04000e1e] 	       280	rm.c	FUNCTION_16	FOR_1
0x4000e1e	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       280	rm.c	FUNCTION_16	FOR_1
0x4000e24	            0x39c2	                            cmp edx, eax	       280	rm.c	FUNCTION_16	FOR_1
0x4000e26	     0xf8755feffff	                            ja 0x4000c81	       280	rm.c	FUNCTION_16	FOR_1
0x4000e2c	          0x8b4590	             mov eax, dword [rbp - 0x70]	       292	rm.c	FUNCTION_16	IF_6
0x4000e2f	            0x85c0	                           test eax, eax	       292	rm.c	FUNCTION_16	IF_6
0x4000e31	     0xf841a010000	                            je 0x4000f51	       292	rm.c	FUNCTION_16	IF_6
0x4000e37	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       294	rm.c	FUNCTION_16	IF_6
0x4000e41	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e4b	      0xe9df000000	                           jmp 0x4000f2f	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e50	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e54	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e5a	            0x4898	                                    cdqe	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e5c	        0x48c1e003	                              shl rax, 3	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e60	    0x488d0cc50000	                        lea rcx, [rax*8]	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e68	          0x4829c1	                            sub rcx, rax	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e6b	          0x4889c8	                            mov rax, rcx	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e6e	          0x4801d0	                            add rax, rdx	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e71	        0x488b4008	                mov rax, qword [rax + 8]	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e75	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       296	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000e7c	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e82	          0x4863d0	                         movsxd rdx, eax	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e85	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e8c	          0x4801d0	                            add rax, rdx	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e8f	           0xfb600	                   movzx eax, byte [rax]	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e92	            0x84c0	                             test al, al	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e94	            0x752e	                           jne 0x4000ec4	       297	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7
0x4000e96	    0x8b0500000000	            mov eax, dword [0x04000e9c] 	       298	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8
0x4000e9c	            0x85c0	                           test eax, eax	       298	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8
0x4000e9e	            0x752e	                           jne 0x4000ece	       298	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8
0x4000ea0	      0xbf00000000	                              mov edi, 0	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000ea5	      0xe8e3f2ffff	                               call sym.	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000eaa	          0x4889c2	                            mov rdx, rax	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000ead	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000eb4	          0x4889c6	                            mov rsi, rax	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000eb7	          0x4889d7	                            mov rdi, rdx	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000eba	      0xb800000000	                              mov eax, 0	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000ebf	      0xe800000000	                          call 0x4000ec4	       299	rm.c	FUNCTION_16	IF_6	FOR_2	IF_7	IF_8	CALL_17
0x4000ec4	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	       304	rm.c	FUNCTION_16	IF_6	FOR_2	ELSE_1
0x4000ece	    0x8b0500000000	            mov eax, dword [0x04000ed4] 	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ed4	            0x85c0	                           test eax, eax	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ed6	            0x7550	                           jne 0x4000f28	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ed8	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ede	          0x4863d0	                         movsxd rdx, eax	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ee1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ee8	          0x4801d0	                            add rax, rdx	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000eeb	           0xfb600	                   movzx eax, byte [rax]	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000eee	            0x3c01	                               cmp al, 1	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ef0	            0x7536	                           jne 0x4000f28	       306	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ef2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       308	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000ef9	           0xfb600	                   movzx eax, byte [rax]	       308	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9
0x4000efc	            0x84c0	                             test al, al	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000efe	            0x7409	                            je 0x4000f09	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f00	    0x488b9d78ffff	             mov rbx, qword [rbp - 0x88]	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f07	            0xeb05	                           jmp 0x4000f0e	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f09	      0xbb00000000	                              mov ebx, 0	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f0e	      0xbf00000000	                              mov edi, 0	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f13	      0xe875f2ffff	                               call sym.	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f18	          0x4889de	                            mov rsi, rbx	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f1b	          0x4889c7	                            mov rdi, rax	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f1e	      0xb800000000	                              mov eax, 0	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f23	      0xe800000000	                          call 0x4000f28	       307	rm.c	FUNCTION_16	IF_6	FOR_2	IF_9	CALL_19
0x4000f28	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000f2f	          0x8b4590	             mov eax, dword [rbp - 0x70]	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000f32	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000f38	     0xf8f12ffffff	                            jg 0x4000e50	       295	rm.c	FUNCTION_16	IF_6	FOR_2
0x4000f3e	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       311	rm.c	FUNCTION_16	IF_6	IF_10
0x4000f45	            0x750a	                           jne 0x4000f51	       311	rm.c	FUNCTION_16	IF_6	IF_10
0x4000f47	      0xbf00000000	                              mov edi, 0	       312	rm.c	FUNCTION_16	IF_6	CALL_20
0x4000f4c	      0xe800000000	                          call 0x4000f51	       312	rm.c	FUNCTION_16	IF_6	CALL_20
0x4000f51	    0x8b0500000000	            mov eax, dword [0x04000f57] 	       315	rm.c	FUNCTION_16	IF_11
0x4000f57	            0x85c0	                           test eax, eax	       315	rm.c	FUNCTION_16	IF_11
0x4000f59	            0x750f	                           jne 0x4000f6a	       315	rm.c	FUNCTION_16	IF_11
0x4000f5b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       316	rm.c	FUNCTION_16	CALL_21
0x4000f62	          0x4889c7	                            mov rdi, rax	       316	rm.c	FUNCTION_16	CALL_21
0x4000f65	      0xe87ef5ffff	call sym.submodules_absorb_gitdir_if_needed	       316	rm.c	FUNCTION_16	CALL_21
0x4000f6a	    0x8b0500000000	            mov eax, dword [0x04000f70] 	       328	rm.c	FUNCTION_16	IF_12
0x4000f70	            0x85c0	                           test eax, eax	       328	rm.c	FUNCTION_16	IF_12
0x4000f72	            0x7543	                           jne 0x4000fb7	       328	rm.c	FUNCTION_16	IF_12
0x4000f74	        0x488d45d0	                   lea rax, [rbp - 0x30]	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f78	          0x4889c6	                            mov rsi, rax	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f7b	      0xbf00000000	                              mov edi, 0	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f80	      0xe800000000	                          call 0x4000f85	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f85	            0x85c0	                           test eax, eax	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f87	            0x740c	                            je 0x4000f95	       330	rm.c	FUNCTION_16	IF_12	IF_13	CALL_22
0x4000f89	        0x488d45d0	                   lea rax, [rbp - 0x30]	       331	rm.c	FUNCTION_16	IF_12	CALL_23
0x4000f8d	          0x4889c7	                            mov rdi, rax	       331	rm.c	FUNCTION_16	IF_12	CALL_23
0x4000f90	      0xe821f3ffff	                         call sym.oidclr	       331	rm.c	FUNCTION_16	IF_12	CALL_23
0x4000f95	    0x8b1500000000	            mov edx, dword [0x04000f9b] 	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000f9b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000f9f	            0x89d6	                            mov esi, edx	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000fa1	          0x4889c7	                            mov rdi, rax	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000fa4	      0xe84af6ffff	                call sym.check_local_mod	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000fa9	            0x85c0	                           test eax, eax	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000fab	            0x740a	                            je 0x4000fb7	       332	rm.c	FUNCTION_16	IF_12	IF_14	CALL_24
0x4000fad	      0xbf01000000	                              mov edi, 1	       333	rm.c	FUNCTION_16	IF_12	CALL_25
0x4000fb2	      0xe800000000	                          call 0x4000fb7	       333	rm.c	FUNCTION_16	IF_12	CALL_25
0x4000fb7	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       340	rm.c	FUNCTION_16	FOR_3
0x4000fc1	            0xeb7b	                           jmp 0x400103e	       340	rm.c	FUNCTION_16	FOR_3
0x4000fc3	    0x488b05000000	            mov rax, qword [0x04000fca] 	       341	rm.c	FUNCTION_16	FOR_3
0x4000fca	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       341	rm.c	FUNCTION_16	FOR_3
0x4000fd0	          0x4863d2	                         movsxd rdx, edx	       341	rm.c	FUNCTION_16	FOR_3
0x4000fd3	        0x48c1e204	                              shl rdx, 4	       341	rm.c	FUNCTION_16	FOR_3
0x4000fd7	          0x4801d0	                            add rax, rdx	       341	rm.c	FUNCTION_16	FOR_3
0x4000fda	          0x488b00	                    mov rax, qword [rax]	       341	rm.c	FUNCTION_16	FOR_3
0x4000fdd	        0x48894580	             mov qword [rbp - 0x80], rax	       341	rm.c	FUNCTION_16	FOR_3
0x4000fe1	    0x8b0500000000	            mov eax, dword [0x04000fe7] 	       342	rm.c	FUNCTION_16	FOR_3	IF_15
0x4000fe7	            0x85c0	                           test eax, eax	       342	rm.c	FUNCTION_16	FOR_3	IF_15
0x4000fe9	            0x7516	                           jne 0x4001001	       342	rm.c	FUNCTION_16	FOR_3	IF_15
0x4000feb	        0x488b4580	             mov rax, qword [rbp - 0x80]	       343	rm.c	FUNCTION_16	FOR_3	CALL_26
0x4000fef	          0x4889c6	                            mov rsi, rax	       343	rm.c	FUNCTION_16	FOR_3	CALL_26
0x4000ff2	      0xbf00000000	                              mov edi, 0	       343	rm.c	FUNCTION_16	FOR_3	CALL_26
0x4000ff7	      0xb800000000	                              mov eax, 0	       343	rm.c	FUNCTION_16	FOR_3	CALL_26
0x4000ffc	      0xe800000000	                          call 0x4001001	       343	rm.c	FUNCTION_16	FOR_3	CALL_26
0x4001001	        0x488b4580	             mov rax, qword [rbp - 0x80]	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x4001005	          0x4889c6	                            mov rsi, rax	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x4001008	      0xbf00000000	                              mov edi, 0	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x400100d	      0xe800000000	                          call 0x4001012	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x4001012	            0x85c0	                           test eax, eax	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x4001014	            0x7421	                            je 0x4001037	       345	rm.c	FUNCTION_16	FOR_3	IF_16
0x4001016	      0xbf00000000	                              mov edi, 0	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x400101b	      0xe86df1ffff	                               call sym.	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x4001020	          0x4889c2	                            mov rdx, rax	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x4001023	        0x488b4580	             mov rax, qword [rbp - 0x80]	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x4001027	          0x4889c6	                            mov rsi, rax	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x400102a	          0x4889d7	                            mov rdi, rdx	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x400102d	      0xb800000000	                              mov eax, 0	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x4001032	      0xe800000000	                          call 0x4001037	       346	rm.c	FUNCTION_16	FOR_3	CALL_28
0x4001037	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       340	rm.c	FUNCTION_16	FOR_3
0x400103e	    0x8b0500000000	            mov eax, dword [0x04001044] 	       340	rm.c	FUNCTION_16	FOR_3
0x4001044	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       340	rm.c	FUNCTION_16	FOR_3
0x400104a	     0xf8f73ffffff	                            jg 0x4000fc3	       340	rm.c	FUNCTION_16	FOR_3
0x4001050	    0x8b0500000000	            mov eax, dword [0x04001056] 	       349	rm.c	FUNCTION_16	IF_17
0x4001056	            0x85c0	                           test eax, eax	       349	rm.c	FUNCTION_16	IF_17
0x4001058	            0x740a	                            je 0x4001064	       349	rm.c	FUNCTION_16	IF_17
0x400105a	      0xb800000000	                              mov eax, 0	       350	rm.c	FUNCTION_16	IF_17
0x400105f	      0xe9b2010000	                           jmp 0x4001216	       350	rm.c	FUNCTION_16	IF_17
0x4001064	    0x8b0500000000	            mov eax, dword [0x0400106a] 	       360	rm.c	FUNCTION_16	IF_18
0x400106a	            0x85c0	                           test eax, eax	       360	rm.c	FUNCTION_16	IF_18
0x400106c	     0xf8570010000	                           jne 0x40011e2	       360	rm.c	FUNCTION_16	IF_18
0x4001072	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	       361	rm.c	FUNCTION_16	IF_18
0x400107c	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       361	rm.c	FUNCTION_16	IF_18
0x4001086	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       362	rm.c	FUNCTION_16	IF_18
0x400108e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       362	rm.c	FUNCTION_16	IF_18
0x4001096	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       362	rm.c	FUNCTION_16	IF_18
0x400109e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010a8	      0xe904010000	                           jmp 0x40011b1	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010ad	    0x488b05000000	            mov rax, qword [0x040010b4] 	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010b4	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010ba	          0x4863d2	                         movsxd rdx, edx	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010bd	        0x48c1e204	                              shl rdx, 4	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010c1	          0x4801d0	                            add rax, rdx	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010c4	          0x488b00	                    mov rax, qword [rax]	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010c7	        0x48894588	             mov qword [rbp - 0x78], rax	       364	rm.c	FUNCTION_16	IF_18	FOR_4
0x40010cb	    0x488b05000000	            mov rax, qword [0x040010d2] 	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010d2	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010d8	          0x4863d2	                         movsxd rdx, edx	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010db	        0x48c1e204	                              shl rdx, 4	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010df	          0x4801d0	                            add rax, rdx	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010e2	         0xfb64008	               movzx eax, byte [rax + 8]	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010e6	            0x84c0	                             test al, al	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010e8	     0xf8480000000	                            je 0x400116e	       365	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010ee	        0x488d45b0	                   lea rax, [rbp - 0x50]	       366	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010f2	      0xbe00000000	                              mov esi, 0	       366	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010f7	          0x4889c7	                            mov rdi, rax	       366	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010fa	      0xe8bfefffff	                  call sym.strbuf_setlen	       366	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40010ff	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       367	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_29
0x4001103	        0x488d45b0	                   lea rax, [rbp - 0x50]	       367	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_29
0x4001107	          0x4889d6	                            mov rsi, rdx	       367	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_29
0x400110a	          0x4889c7	                            mov rdi, rax	       367	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_29
0x400110d	      0xe846f0ffff	                  call sym.strbuf_addstr	       367	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_29
0x4001112	        0x488d45b0	                   lea rax, [rbp - 0x50]	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x4001116	      0xbe00000000	                              mov esi, 0	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x400111b	          0x4889c7	                            mov rdi, rax	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x400111e	      0xe800000000	                          call 0x4001123	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x4001123	            0x85c0	                           test eax, eax	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x4001125	            0x7421	                            je 0x4001148	       368	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_20	CALL_30
0x4001127	      0xbf00000000	                              mov edi, 0	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x400112c	      0xe85cf0ffff	                               call sym.	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x4001131	          0x4889c2	                            mov rdx, rax	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x4001134	        0x488b4588	             mov rax, qword [rbp - 0x78]	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x4001138	          0x4889c6	                            mov rsi, rax	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x400113b	          0x4889d7	                            mov rdi, rdx	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x400113e	      0xb800000000	                              mov eax, 0	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x4001143	      0xe800000000	                          call 0x4001148	       369	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	CALL_32
0x4001148	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	       371	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x4001152	        0x488b4588	             mov rax, qword [rbp - 0x78]	       372	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21	CALL_33
0x4001156	          0x4889c7	                            mov rdi, rax	       372	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21	CALL_33
0x4001159	      0xe800000000	                          call 0x400115e	       372	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21	CALL_33
0x400115e	            0x85c0	                           test eax, eax	       372	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21	CALL_33
0x4001160	            0x7547	                           jne 0x40011a9	       372	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21	CALL_33
0x4001162	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	       373	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19	IF_21
0x400116c	            0xeb3b	                           jmp 0x40011a9	       374	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x400116e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       376	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22	CALL_34
0x4001172	          0x4889c7	                            mov rdi, rax	       376	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22	CALL_34
0x4001175	      0xe800000000	                          call 0x400117a	       376	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22	CALL_34
0x400117a	            0x85c0	                           test eax, eax	       376	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22	CALL_34
0x400117c	            0x750c	                           jne 0x400118a	       376	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22	CALL_34
0x400117e	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	       377	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22
0x4001188	            0xeb20	                           jmp 0x40011aa	       378	rm.c	FUNCTION_16	IF_18	FOR_4	IF_22
0x400118a	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	       380	rm.c	FUNCTION_16	IF_18	FOR_4	IF_23
0x4001191	            0x7517	                           jne 0x40011aa	       380	rm.c	FUNCTION_16	IF_18	FOR_4	IF_23
0x4001193	        0x488b4588	             mov rax, qword [rbp - 0x78]	       381	rm.c	FUNCTION_16	IF_18	FOR_4	CALL_35
0x4001197	          0x4889c6	                            mov rsi, rax	       381	rm.c	FUNCTION_16	IF_18	FOR_4	CALL_35
0x400119a	      0xbf00000000	                              mov edi, 0	       381	rm.c	FUNCTION_16	IF_18	FOR_4	CALL_35
0x400119f	      0xb800000000	                              mov eax, 0	       381	rm.c	FUNCTION_16	IF_18	FOR_4	CALL_35
0x40011a4	      0xe800000000	                          call 0x40011a9	       381	rm.c	FUNCTION_16	IF_18	FOR_4	CALL_35
0x40011a9	              0x90	                                     nop	       374	rm.c	FUNCTION_16	IF_18	FOR_4	IF_19
0x40011aa	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40011b1	    0x8b0500000000	            mov eax, dword [0x040011b7] 	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40011b7	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40011bd	     0xf8feafeffff	                            jg 0x40010ad	       363	rm.c	FUNCTION_16	IF_18	FOR_4
0x40011c3	        0x488d45b0	                   lea rax, [rbp - 0x50]	       383	rm.c	FUNCTION_16	IF_18	CALL_36
0x40011c7	          0x4889c7	                            mov rdi, rax	       383	rm.c	FUNCTION_16	IF_18	CALL_36
0x40011ca	      0xe800000000	                          call 0x40011cf	       383	rm.c	FUNCTION_16	IF_18	CALL_36
0x40011cf	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       384	rm.c	FUNCTION_16	IF_18	IF_24
0x40011d6	            0x740a	                            je 0x40011e2	       384	rm.c	FUNCTION_16	IF_18	IF_24
0x40011d8	      0xbf00000000	                              mov edi, 0	       385	rm.c	FUNCTION_16	IF_18	CALL_37
0x40011dd	      0xe800000000	                          call 0x40011e2	       385	rm.c	FUNCTION_16	IF_18	CALL_37
0x40011e2	      0xba03000000	                              mov edx, 3	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011e7	      0xbe00000000	                              mov esi, 0	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011ec	      0xbf00000000	                              mov edi, 0	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011f1	      0xe800000000	                          call 0x40011f6	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011f6	            0x85c0	                           test eax, eax	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011f8	            0x7417	                            je 0x4001211	       388	rm.c	FUNCTION_16	IF_25	CALL_38
0x40011fa	      0xbf00000000	                              mov edi, 0	       390	rm.c	FUNCTION_16	CALL_40
0x40011ff	      0xe889efffff	                               call sym.	       390	rm.c	FUNCTION_16	CALL_40
0x4001204	          0x4889c7	                            mov rdi, rax	       390	rm.c	FUNCTION_16	CALL_40
0x4001207	      0xb800000000	                              mov eax, 0	       390	rm.c	FUNCTION_16	CALL_40
0x400120c	      0xe800000000	                          call 0x4001211	       390	rm.c	FUNCTION_16	CALL_40
0x4001211	      0xb800000000	                              mov eax, 0	       392	rm.c	FUNCTION_16
0x4001216	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       393	rm.c	FUNCTION_16
0x400121a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       393	rm.c	FUNCTION_16
0x4001223	            0x7405	                            je 0x400122a	       393	rm.c	FUNCTION_16
0x4001225	      0xe800000000	                          call 0x400122a	       393	rm.c	FUNCTION_16
0x400122a	    0x4881c4c80000	                           add rsp, 0xc8	       393	rm.c	FUNCTION_16
0x4001231	              0x5b	                                 pop rbx	       393	rm.c	FUNCTION_16
0x4001232	              0x5d	                                 pop rbp	       393	rm.c	FUNCTION_16
0x4001233	              0xc3	                                     ret	       393	rm.c	FUNCTION_16
ce_path_match	WHILE,0:CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	34
0x40002db	              0x55	                                push rbp	       335	dir.h	FUNCTION_76
0x40002dc	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_76
0x40002df	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_76
0x40002e3	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_76
0x40002e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_76
0x40002eb	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_76
0x40002ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_76	CALL_2
0x40002f3	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_76	CALL_2
0x40002f6	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_76	CALL_2
0x40002fb	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_76	CALL_1
0x4000300	            0x7413	                            je 0x4000315	       336	dir.h	FUNCTION_76	CALL_1
0x4000302	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_76	CALL_2
0x4000306	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_76	CALL_2
0x4000309	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_76	CALL_2
0x400030e	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_76	CALL_1
0x4000313	            0x7507	                           jne 0x400031c	       336	dir.h	FUNCTION_76	CALL_1
0x4000315	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_76	CALL_1
0x400031a	            0xeb05	                           jmp 0x4000321	       336	dir.h	FUNCTION_76	CALL_1
0x400031c	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_76	CALL_1
0x4000321	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_76	CALL_1
0x4000325	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_76	CALL_1
0x4000328	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_76	CALL_1
0x400032a	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_76	CALL_1
0x400032e	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_76	CALL_1
0x4000332	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_76	CALL_1
0x4000336	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_76	CALL_1
0x400033a	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_76	CALL_1
0x400033d	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_76	CALL_1
0x4000340	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_76	CALL_1
0x4000345	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_76	CALL_1
0x4000347	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_76	CALL_1
0x400034a	      0xe800000000	                          call 0x400034f	       336	dir.h	FUNCTION_76	CALL_1
0x400034f	              0xc9	                                   leave	       338	dir.h	FUNCTION_76
0x4000350	              0xc3	                                     ret	       338	dir.h	FUNCTION_76
is_missing_file_error	WHILE,0:CALL,0:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	12
0x400009d	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_74
0x400009e	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_74
0x40000a1	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_74
0x40000a4	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_74
0x40000a8	            0x7406	                            je 0x40000b0	      1197	git-compat-util.h	FUNCTION_74
0x40000aa	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_74
0x40000ae	            0x7507	                           jne 0x40000b7	      1197	git-compat-util.h	FUNCTION_74
0x40000b0	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_74
0x40000b5	            0xeb05	                           jmp 0x40000bc	      1197	git-compat-util.h	FUNCTION_74
0x40000b7	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_74
0x40000bc	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_74
0x40000bd	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_74
is_null_oid	WHILE,0:CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	13
0x400028f	              0x55	                                push rbp	       989	cache.h	FUNCTION_27
0x4000290	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_27
0x4000293	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_27
0x4000297	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_27
0x400029b	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_27	CALL_1
0x400029f	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_27	CALL_1
0x40002a4	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_27	CALL_1
0x40002a7	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_27	CALL_1
0x40002ac	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_27	CALL_1
0x40002ae	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_27	CALL_1
0x40002b1	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_27	CALL_1
0x40002b4	              0xc9	                                   leave	       991	cache.h	FUNCTION_27
0x40002b5	              0xc3	                                     ret	       991	cache.h	FUNCTION_27
oidcmp	WHILE,0:CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	12
0x400026a	              0x55	                                push rbp	       979	cache.h	FUNCTION_25
0x400026b	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_25
0x400026e	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_25
0x4000272	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_25
0x4000276	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_25
0x400027a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_25	CALL_1
0x400027e	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_25	CALL_1
0x4000282	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_25	CALL_1
0x4000285	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_25	CALL_1
0x4000288	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_25	CALL_1
0x400028d	              0xc9	                                   leave	       981	cache.h	FUNCTION_25
0x400028e	              0xc3	                                     ret	       981	cache.h	FUNCTION_25
const_error	WHILE,0:CALL,0:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_53
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_53
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_53
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_53
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_53
hashcmp	WHILE,0:CALL,1:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	13
0x4000240	              0x55	                                push rbp	       974	cache.h	FUNCTION_24
0x4000241	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_24
0x4000244	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_24
0x4000248	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_24
0x400024c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_24
0x4000250	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_24	CALL_1
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_24	CALL_1
0x4000258	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_24	CALL_1
0x400025d	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_24	CALL_1
0x4000260	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_24	CALL_1
0x4000263	      0xe800000000	                          call 0x4000268	       975	cache.h	FUNCTION_24	CALL_1
0x4000268	              0xc9	                                   leave	       976	cache.h	FUNCTION_24
0x4000269	              0xc3	                                     ret	       976	cache.h	FUNCTION_24
print_error_files	WHILE,0:CALL,4:IF,2:FOR,1:DO,0:SWITCH,0:functions,0:ELSE,0	69
0x40003dc	              0x55	                                push rbp	        46	rm.c	FUNCTION_13
0x40003dd	          0x4889e5	                            mov rbp, rsp	        46	rm.c	FUNCTION_13
0x40003e0	        0x4883ec50	                           sub rsp, 0x50	        46	rm.c	FUNCTION_13
0x40003e4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        46	rm.c	FUNCTION_13
0x40003e8	        0x488975c0	             mov qword [rbp - 0x40], rsi	        46	rm.c	FUNCTION_13
0x40003ec	        0x488955b8	             mov qword [rbp - 0x48], rdx	        46	rm.c	FUNCTION_13
0x40003f0	        0x48894db0	             mov qword [rbp - 0x50], rcx	        46	rm.c	FUNCTION_13
0x40003f4	    0x64488b042528	                mov rax, qword fs:[0x28]	        46	rm.c	FUNCTION_13
0x40003fd	        0x488945f8	                mov qword [rbp - 8], rax	        46	rm.c	FUNCTION_13
0x4000401	            0x31c0	                            xor eax, eax	        46	rm.c	FUNCTION_13
0x4000403	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	rm.c	FUNCTION_13	IF_1
0x4000407	          0x8b4008	                mov eax, dword [rax + 8]	        47	rm.c	FUNCTION_13	IF_1
0x400040a	            0x85c0	                           test eax, eax	        47	rm.c	FUNCTION_13	IF_1
0x400040c	     0xf84bf000000	                            je 0x40004d1	        47	rm.c	FUNCTION_13	IF_1
0x4000412	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        49	rm.c	FUNCTION_13	IF_1
0x400041a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        49	rm.c	FUNCTION_13	IF_1
0x4000422	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        49	rm.c	FUNCTION_13	IF_1
0x400042a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        51	rm.c	FUNCTION_13	IF_1	CALL_1
0x400042e	        0x488d45e0	                   lea rax, [rbp - 0x20]	        51	rm.c	FUNCTION_13	IF_1	CALL_1
0x4000432	          0x4889d6	                            mov rsi, rdx	        51	rm.c	FUNCTION_13	IF_1	CALL_1
0x4000435	          0x4889c7	                            mov rdi, rax	        51	rm.c	FUNCTION_13	IF_1	CALL_1
0x4000438	      0xe81bfdffff	                  call sym.strbuf_addstr	        51	rm.c	FUNCTION_13	IF_1	CALL_1
0x400043d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000444	            0xeb31	                           jmp 0x4000477	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000446	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x400044a	          0x488b00	                    mov rax, qword [rax]	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x400044d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000450	          0x4863d2	                         movsxd rdx, edx	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000453	        0x48c1e204	                              shl rdx, 4	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000457	          0x4801d0	                            add rax, rdx	        55	rm.c	FUNCTION_13	IF_1	FOR_1
0x400045a	          0x488b10	                    mov rdx, qword [rax]	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x400045d	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x4000461	      0xbe00000000	                              mov esi, 0	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x4000466	          0x4889c7	                            mov rdi, rax	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x4000469	      0xb800000000	                              mov eax, 0	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x400046e	      0xe800000000	                          call 0x4000473	        53	rm.c	FUNCTION_13	IF_1	FOR_1	CALL_2
0x4000473	        0x8345dc01	               add dword [rbp - 0x24], 1	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000477	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x400047b	          0x8b5008	                mov edx, dword [rax + 8]	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x400047e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000481	            0x39c2	                            cmp edx, eax	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000483	            0x77c1	                            ja 0x4000446	        52	rm.c	FUNCTION_13	IF_1	FOR_1
0x4000485	    0x8b0500000000	            mov eax, dword [0x0400048b] 	        56	rm.c	FUNCTION_13	IF_1	IF_2
0x400048b	            0x85c0	                           test eax, eax	        56	rm.c	FUNCTION_13	IF_1	IF_2
0x400048d	            0x7413	                            je 0x40004a2	        56	rm.c	FUNCTION_13	IF_1	IF_2
0x400048f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        57	rm.c	FUNCTION_13	IF_1	CALL_3
0x4000493	        0x488d45e0	                   lea rax, [rbp - 0x20]	        57	rm.c	FUNCTION_13	IF_1	CALL_3
0x4000497	          0x4889d6	                            mov rsi, rdx	        57	rm.c	FUNCTION_13	IF_1	CALL_3
0x400049a	          0x4889c7	                            mov rdi, rax	        57	rm.c	FUNCTION_13	IF_1	CALL_3
0x400049d	      0xe8b6fcffff	                  call sym.strbuf_addstr	        57	rm.c	FUNCTION_13	IF_1	CALL_3
0x40004a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        58	rm.c	FUNCTION_13	IF_1
0x40004a6	          0x4889c6	                            mov rsi, rax	        58	rm.c	FUNCTION_13	IF_1
0x40004a9	      0xbf00000000	                              mov edi, 0	        58	rm.c	FUNCTION_13	IF_1
0x40004ae	      0xb800000000	                              mov eax, 0	        58	rm.c	FUNCTION_13	IF_1
0x40004b3	      0xe800000000	                          call 0x40004b8	        58	rm.c	FUNCTION_13	IF_1
0x40004b8	      0xe883fbffff	                    call sym.const_error	        58	rm.c	FUNCTION_13	IF_1
0x40004bd	            0x89c2	                            mov edx, eax	        58	rm.c	FUNCTION_13	IF_1
0x40004bf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        58	rm.c	FUNCTION_13	IF_1
0x40004c3	            0x8910	                    mov dword [rax], edx	        58	rm.c	FUNCTION_13	IF_1
0x40004c5	        0x488d45e0	                   lea rax, [rbp - 0x20]	        59	rm.c	FUNCTION_13	IF_1	CALL_4
0x40004c9	          0x4889c7	                            mov rdi, rax	        59	rm.c	FUNCTION_13	IF_1	CALL_4
0x40004cc	      0xe800000000	                          call 0x40004d1	        59	rm.c	FUNCTION_13	IF_1	CALL_4
0x40004d1	              0x90	                                     nop	        61	rm.c	FUNCTION_13
0x40004d2	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	rm.c	FUNCTION_13
0x40004d6	    0x644833042528	                xor rax, qword fs:[0x28]	        61	rm.c	FUNCTION_13
0x40004df	            0x7405	                            je 0x40004e6	        61	rm.c	FUNCTION_13
0x40004e1	      0xe800000000	                          call 0x40004e6	        61	rm.c	FUNCTION_13
0x40004e6	              0xc9	                                   leave	        61	rm.c	FUNCTION_13
0x40004e7	              0xc3	                                     ret	        61	rm.c	FUNCTION_13
Q_	WHILE,0:CALL,0:IF,1:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	14
0x40001b9	              0x55	                                push rbp	        59	gettext.h	FUNCTION_47
0x40001ba	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_47
0x40001bd	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_47
0x40001c1	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_47
0x40001c5	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_47
0x40001c9	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_47
0x40001cd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_47
0x40001d1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_47
0x40001d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_47
0x40001d9	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_47
0x40001dc	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_47
0x40001df	      0xe800000000	                          call 0x40001e4	        62	gettext.h	FUNCTION_47
0x40001e4	              0xc9	                                   leave	        63	gettext.h	FUNCTION_47
0x40001e5	              0xc3	                                     ret	        63	gettext.h	FUNCTION_47
strbuf_addstr	WHILE,0:CALL,2:IF,0:FOR,0:DO,0:SWITCH,0:functions,0:ELSE,0	17
0x4000158	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x4000159	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x400015c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x4000160	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x4000164	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x4000168	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400016c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x400016f	      0xe800000000	                          call 0x4000174	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000174	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000177	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400017b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400017f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000182	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000185	      0xe800000000	                          call 0x400018a	       279	strbuf.h	FUNCTION_5	CALL_2
0x400018a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x400018b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x400018c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
