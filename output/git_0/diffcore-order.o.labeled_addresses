st_mult	FOR,0:IF,1:DO,0:CALL,1:functions,0:ELSE,0:WHILE,0:SWITCH,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_15
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_15
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_15
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_15
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_15
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_15	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_15	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_15
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_15
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_15
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_15
strbuf_setlen	FOR,0:IF,2:DO,0:CALL,2:functions,0:ELSE,1:WHILE,0:SWITCH,0	43
0x40000cc	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_30
0x40000cd	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_30
0x40000d0	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_30
0x40000d4	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_30
0x40000d8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_30
0x40000dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_30	IF_1
0x40000e0	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_30	IF_1
0x40000e3	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_30	IF_1
0x40000e6	            0x740d	                            je 0x40000f5	       162	strbuf.h	FUNCTION_30	IF_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_30	IF_1
0x40000ec	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_30	IF_1
0x40000ef	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_30	IF_1
0x40000f3	            0xeb05	                           jmp 0x40000fa	       162	strbuf.h	FUNCTION_30	IF_1
0x40000f5	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_30	IF_1
0x40000fa	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_30	IF_1
0x40000fe	            0x730f	                           jae 0x400010f	       162	strbuf.h	FUNCTION_30	IF_1
0x4000100	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000105	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x400010a	      0xe800000000	                          call 0x400010f	       163	strbuf.h	FUNCTION_30	CALL_1
0x400010f	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_30
0x4000113	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_30
0x4000117	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_30
0x400011b	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_30	IF_2
0x400011f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_30	IF_2
0x4000123	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_30	IF_2
0x4000129	            0x7414	                            je 0x400013f	       165	strbuf.h	FUNCTION_30	IF_2
0x400012b	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_30	IF_2
0x400012f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_30	IF_2
0x4000133	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_30	IF_2
0x4000137	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_30	IF_2
0x400013a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x400013d	            0xeb24	                           jmp 0x4000163	       169	strbuf.h	FUNCTION_30
0x400013f	     0xfb605000000	           movzx eax, byte [0x04000146] 	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000146	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000148	            0x7419	                            je 0x4000163	       168	strbuf.h	FUNCTION_30	CALL_2
0x400014a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x400014f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000154	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000159	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x400015e	      0xe800000000	                          call 0x4000163	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000163	              0x90	                                     nop	       169	strbuf.h	FUNCTION_30
0x4000164	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_30
0x4000165	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_30
compare_objs_order	FOR,0:IF,1:DO,0:CALL,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	29
0x400048c	              0x55	                                push rbp	        82	diffcore-order.c	FUNCTION_41
0x400048d	          0x4889e5	                            mov rbp, rsp	        82	diffcore-order.c	FUNCTION_41
0x4000490	        0x48897de8	             mov qword [rbp - 0x18], rdi	        82	diffcore-order.c	FUNCTION_41
0x4000494	        0x488975e0	             mov qword [rbp - 0x20], rsi	        82	diffcore-order.c	FUNCTION_41
0x4000498	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	diffcore-order.c	FUNCTION_41
0x400049c	        0x488945f0	             mov qword [rbp - 0x10], rax	        84	diffcore-order.c	FUNCTION_41
0x40004a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        85	diffcore-order.c	FUNCTION_41
0x40004a4	        0x488945f8	                mov qword [rbp - 8], rax	        85	diffcore-order.c	FUNCTION_41
0x40004a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004ac	          0x8b500c	              mov edx, dword [rax + 0xc]	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004af	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004b3	          0x8b400c	              mov eax, dword [rax + 0xc]	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004b6	            0x39c2	                            cmp edx, eax	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004b8	            0x7414	                            je 0x40004ce	        86	diffcore-order.c	FUNCTION_41	IF_1
0x40004ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004be	          0x8b500c	              mov edx, dword [rax + 0xc]	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004c5	          0x8b400c	              mov eax, dword [rax + 0xc]	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004c8	            0x29c2	                            sub edx, eax	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004ca	            0x89d0	                            mov eax, edx	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004cc	            0xeb12	                           jmp 0x40004e0	        87	diffcore-order.c	FUNCTION_41	IF_1
0x40004ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	diffcore-order.c	FUNCTION_41
0x40004d2	          0x8b5008	                mov edx, dword [rax + 8]	        88	diffcore-order.c	FUNCTION_41
0x40004d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	diffcore-order.c	FUNCTION_41
0x40004d9	          0x8b4008	                mov eax, dword [rax + 8]	        88	diffcore-order.c	FUNCTION_41
0x40004dc	            0x29c2	                            sub edx, eax	        88	diffcore-order.c	FUNCTION_41
0x40004de	            0x89d0	                            mov eax, edx	        88	diffcore-order.c	FUNCTION_41
0x40004e0	              0x5d	                                 pop rbp	        89	diffcore-order.c	FUNCTION_41
0x40004e1	              0xc3	                                     ret	        89	diffcore-order.c	FUNCTION_41
_	FOR,0:IF,1:DO,0:CALL,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	15
0x400019b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_47
0x400019c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_47
0x400019f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_47
0x40001a3	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_47
0x40001a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_47	IF_1
0x40001ab	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_47	IF_1
0x40001ae	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_47	IF_1
0x40001b0	            0x7507	                           jne 0x40001b9	        52	gettext.h	FUNCTION_47	IF_1
0x40001b2	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_47	IF_1
0x40001b7	            0xeb0c	                           jmp 0x40001c5	        53	gettext.h	FUNCTION_47	IF_1
0x40001b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_47
0x40001bd	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_47
0x40001c0	      0xe800000000	                          call 0x40001c5	        54	gettext.h	FUNCTION_47
0x40001c5	              0xc9	                                   leave	        55	gettext.h	FUNCTION_47
0x40001c6	              0xc3	                                     ret	        55	gettext.h	FUNCTION_47
diffcore_order	FOR,2:IF,1:DO,0:CALL,2:functions,0:ELSE,0:WHILE,0:SWITCH,0	75
0x40005c0	              0x55	                                push rbp	       115	diffcore-order.c	FUNCTION_44
0x40005c1	          0x4889e5	                            mov rbp, rsp	       115	diffcore-order.c	FUNCTION_44
0x40005c4	        0x4883ec30	                           sub rsp, 0x30	       115	diffcore-order.c	FUNCTION_44
0x40005c8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       115	diffcore-order.c	FUNCTION_44
0x40005cc	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       116	diffcore-order.c	FUNCTION_44
0x40005d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	diffcore-order.c	FUNCTION_44	IF_1
0x40005d8	          0x8b400c	              mov eax, dword [rax + 0xc]	       120	diffcore-order.c	FUNCTION_44	IF_1
0x40005db	            0x85c0	                           test eax, eax	       120	diffcore-order.c	FUNCTION_44	IF_1
0x40005dd	     0xf84d9000000	                            je 0x40006bc	       120	diffcore-order.c	FUNCTION_44	IF_1
0x40005e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	diffcore-order.c	FUNCTION_44
0x40005e7	          0x8b400c	              mov eax, dword [rax + 0xc]	       123	diffcore-order.c	FUNCTION_44
0x40005ea	            0x4898	                                    cdqe	       123	diffcore-order.c	FUNCTION_44
0x40005ec	          0x4889c6	                            mov rsi, rax	       123	diffcore-order.c	FUNCTION_44
0x40005ef	      0xbf10000000	                           mov edi, 0x10	       123	diffcore-order.c	FUNCTION_44
0x40005f4	      0xe847faffff	                        call sym.st_mult	       123	diffcore-order.c	FUNCTION_44
0x40005f9	          0x4889c7	                            mov rdi, rax	       123	diffcore-order.c	FUNCTION_44
0x40005fc	      0xe800000000	                          call 0x4000601	       123	diffcore-order.c	FUNCTION_44
0x4000601	        0x488945f8	                mov qword [rbp - 8], rax	       123	diffcore-order.c	FUNCTION_44
0x4000605	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x400060c	            0xeb31	                           jmp 0x400063f	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x400060e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000611	            0x4898	                                    cdqe	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000613	        0x48c1e004	                              shl rax, 4	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000617	          0x4889c2	                            mov rdx, rax	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x400061a	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x400061e	          0x4801c2	                            add rdx, rax	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000621	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000625	          0x488b00	                    mov rax, qword [rax]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000628	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x400062b	          0x4863c9	                         movsxd rcx, ecx	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x400062e	        0x48c1e103	                              shl rcx, 3	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000632	          0x4801c8	                            add rax, rcx	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000635	          0x488b00	                    mov rax, qword [rax]	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x4000638	          0x488902	                    mov qword [rdx], rax	       125	diffcore-order.c	FUNCTION_44	FOR_1
0x400063b	        0x8345ec01	               add dword [rbp - 0x14], 1	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x400063f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x4000643	          0x8b400c	              mov eax, dword [rax + 0xc]	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x4000646	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x4000649	            0x7fc3	                            jg 0x400060e	       124	diffcore-order.c	FUNCTION_44	FOR_1
0x400064b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x400064f	          0x8b480c	              mov ecx, dword [rax + 0xc]	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x4000652	        0x488b55f8	                mov rdx, qword [rbp - 8]	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x4000656	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x400065a	      0xbe00000000	                              mov esi, 0	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x400065f	          0x4889c7	                            mov rdi, rax	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x4000662	      0xe800000000	                          call 0x4000667	       126	diffcore-order.c	FUNCTION_44	CALL_1
0x4000667	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x400066e	            0xeb31	                           jmp 0x40006a1	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x4000670	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000674	          0x488b00	                    mov rax, qword [rax]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000677	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x400067a	          0x4863d2	                         movsxd rdx, edx	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x400067d	        0x48c1e203	                              shl rdx, 3	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000681	          0x4801c2	                            add rdx, rax	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000684	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000687	            0x4898	                                    cdqe	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000689	        0x48c1e004	                              shl rax, 4	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x400068d	          0x4889c1	                            mov rcx, rax	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000690	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000694	          0x4801c8	                            add rax, rcx	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x4000697	          0x488b00	                    mov rax, qword [rax]	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x400069a	          0x488902	                    mov qword [rdx], rax	       128	diffcore-order.c	FUNCTION_44	FOR_2
0x400069d	        0x8345ec01	               add dword [rbp - 0x14], 1	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x40006a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x40006a5	          0x8b400c	              mov eax, dword [rax + 0xc]	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x40006a8	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x40006ab	            0x7fc3	                            jg 0x4000670	       127	diffcore-order.c	FUNCTION_44	FOR_2
0x40006ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	diffcore-order.c	FUNCTION_44	CALL_2
0x40006b1	          0x4889c7	                            mov rdi, rax	       129	diffcore-order.c	FUNCTION_44	CALL_2
0x40006b4	      0xe800000000	                          call 0x40006b9	       129	diffcore-order.c	FUNCTION_44	CALL_2
0x40006b9	              0x90	                                     nop	       130	diffcore-order.c	FUNCTION_44
0x40006ba	            0xeb01	                           jmp 0x40006bd	       130	diffcore-order.c	FUNCTION_44
0x40006bc	              0x90	                                     nop	       121	diffcore-order.c	FUNCTION_44	IF_1
0x40006bd	              0xc9	                                   leave	       131	diffcore-order.c	FUNCTION_44
0x40006be	              0xc3	                                     ret	       131	diffcore-order.c	FUNCTION_44
sane_qsort	FOR,0:IF,1:DO,0:CALL,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	18
0x4000092	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_25
0x4000093	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_25
0x4000096	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_25
0x400009a	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_25
0x400009e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_25
0x40000a2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_25
0x40000a6	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_25
0x40000aa	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_25	IF_1
0x40000af	            0x7618	                           jbe 0x40000c9	      1048	git-compat-util.h	FUNCTION_25	IF_1
0x40000b1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000b9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000c1	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000c4	      0xe800000000	                          call 0x40000c9	      1049	git-compat-util.h	FUNCTION_25	IF_1
0x40000c9	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_25
0x40000ca	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_25
0x40000cb	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_25
prepare_order	FOR,2:IF,7:DO,0:CALL,5:functions,0:ELSE,3:WHILE,1:SWITCH,0	133
0x40001c7	              0x55	                                push rbp	        12	diffcore-order.c	FUNCTION_39
0x40001c8	          0x4889e5	                            mov rbp, rsp	        12	diffcore-order.c	FUNCTION_39
0x40001cb	              0x53	                                push rbx	        12	diffcore-order.c	FUNCTION_39
0x40001cc	        0x4883ec68	                           sub rsp, 0x68	        12	diffcore-order.c	FUNCTION_39
0x40001d0	        0x48897d98	             mov qword [rbp - 0x68], rdi	        12	diffcore-order.c	FUNCTION_39
0x40001d4	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	diffcore-order.c	FUNCTION_39
0x40001dd	        0x488945e8	             mov qword [rbp - 0x18], rax	        12	diffcore-order.c	FUNCTION_39
0x40001e1	            0x31c0	                            xor eax, eax	        12	diffcore-order.c	FUNCTION_39
0x40001e3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        14	diffcore-order.c	FUNCTION_39
0x40001eb	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        14	diffcore-order.c	FUNCTION_39
0x40001f3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        14	diffcore-order.c	FUNCTION_39
0x40001fb	    0x488b05000000	            mov rax, qword [0x04000202] 	        19	diffcore-order.c	FUNCTION_39	IF_1
0x4000202	          0x4885c0	                           test rax, rax	        19	diffcore-order.c	FUNCTION_39	IF_1
0x4000205	     0xf85a2010000	                           jne 0x40003ad	        19	diffcore-order.c	FUNCTION_39	IF_1
0x400020b	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x400020f	        0x488d45d0	                   lea rax, [rbp - 0x30]	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x4000213	      0xba00000000	                              mov edx, 0	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x4000218	          0x4889ce	                            mov rsi, rcx	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x400021b	          0x4889c7	                            mov rdi, rax	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x400021e	      0xe800000000	                          call 0x4000223	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x4000223	        0x488945b8	             mov qword [rbp - 0x48], rax	        22	diffcore-order.c	FUNCTION_39	CALL_1
0x4000227	      0x48837db800	               cmp qword [rbp - 0x48], 0	        23	diffcore-order.c	FUNCTION_39	IF_2
0x400022c	            0x7921	                           jns 0x400024f	        23	diffcore-order.c	FUNCTION_39	IF_2
0x400022e	      0xbf00000000	                              mov edi, 0	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x4000233	      0xe863ffffff	                               call sym.	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x4000238	          0x4889c2	                            mov rdx, rax	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x400023b	        0x488b4598	             mov rax, qword [rbp - 0x68]	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x400023f	          0x4889c6	                            mov rsi, rax	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x4000242	          0x4889d7	                            mov rdi, rdx	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x4000245	      0xb800000000	                              mov eax, 0	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x400024a	      0xe800000000	                          call 0x400024f	        24	diffcore-order.c	FUNCTION_39	CALL_3
0x400024f	        0x488d45d0	                   lea rax, [rbp - 0x30]	        25	diffcore-order.c	FUNCTION_39	CALL_4
0x4000253	      0xbe00000000	                              mov esi, 0	        25	diffcore-order.c	FUNCTION_39	CALL_4
0x4000258	          0x4889c7	                            mov rdi, rax	        25	diffcore-order.c	FUNCTION_39	CALL_4
0x400025b	      0xe800000000	                          call 0x4000260	        25	diffcore-order.c	FUNCTION_39	CALL_4
0x4000260	        0x488945c0	             mov qword [rbp - 0x40], rax	        25	diffcore-order.c	FUNCTION_39	CALL_4
0x4000264	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        26	diffcore-order.c	FUNCTION_39
0x4000268	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        26	diffcore-order.c	FUNCTION_39
0x400026c	          0x4801d0	                            add rax, rdx	        26	diffcore-order.c	FUNCTION_39
0x400026f	        0x488945c8	             mov qword [rbp - 0x38], rax	        26	diffcore-order.c	FUNCTION_39
0x4000273	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x400027a	      0xe922010000	                           jmp 0x40003a1	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x400027f	    0xc745a0000000	               mov dword [rbp - 0x60], 0	        29	diffcore-order.c	FUNCTION_39	FOR_1
0x4000286	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        30	diffcore-order.c	FUNCTION_39	FOR_1
0x400028a	        0x488945a8	             mov qword [rbp - 0x58], rax	        30	diffcore-order.c	FUNCTION_39	FOR_1
0x400028e	      0xe9cc000000	                           jmp 0x400035f	        31	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x4000293	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x4000297	        0x488945b0	             mov qword [rbp - 0x50], rax	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x400029b	            0xeb05	                           jmp 0x40002a2	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x400029d	      0x488345b001	               add qword [rbp - 0x50], 1	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002a2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002a6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002aa	            0x730b	                           jae 0x40002b7	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002ac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002b0	           0xfb600	                   movzx eax, byte [rax]	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002b3	            0x3c0a	                             cmp al, 0xa	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002b5	            0x75e6	                           jne 0x400029d	        33	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	FOR_2
0x40002b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002bb	           0xfb600	                   movzx eax, byte [rax]	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002be	            0x3c0a	                             cmp al, 0xa	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002c0	     0xf8482000000	                            je 0x4000348	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002ca	           0xfb600	                   movzx eax, byte [rax]	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002cd	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002cf	            0x7477	                            je 0x4000348	        36	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_3
0x40002d1	        0x837da400	               cmp dword [rbp - 0x5c], 0	        38	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_1	IF_4
0x40002d5	            0x7506	                           jne 0x40002dd	        38	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_1	IF_4
0x40002d7	        0x8345a001	               add dword [rbp - 0x60], 1	        39	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_1	IF_4
0x40002db	            0xeb6b	                           jmp 0x4000348	        39	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_1	IF_4
0x40002dd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        41	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002e1	           0xfb600	                   movzx eax, byte [rax]	        41	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002e4	            0x3c0a	                             cmp al, 0xa	        41	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002e6	            0x7524	                           jne 0x400030c	        41	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002e8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        42	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002ec	          0xc60000	                       mov byte [rax], 0	        42	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002ef	    0x488b05000000	            mov rax, qword [0x040002f6] 	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002f6	          0x8b55a0	             mov edx, dword [rbp - 0x60]	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002f9	          0x4863d2	                         movsxd rdx, edx	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x40002fc	        0x48c1e203	                              shl rdx, 3	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000300	          0x4801c2	                            add rdx, rax	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000303	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000307	          0x488902	                    mov qword [rdx], rax	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x400030a	            0xeb38	                           jmp 0x4000344	        43	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	IF_5
0x400030c	    0x488b05000000	            mov rax, qword [0x04000313] 	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000313	          0x8b55a0	             mov edx, dword [rbp - 0x60]	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000316	          0x4863d2	                         movsxd rdx, edx	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000319	        0x48c1e203	                              shl rdx, 3	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400031d	        0x488d1c10	                    lea rbx, [rax + rdx]	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000321	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000325	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000329	          0x4829c2	                            sub rdx, rax	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400032c	          0x4889d0	                            mov rax, rdx	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400032f	          0x4889c2	                            mov rdx, rax	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000332	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000336	          0x4889d6	                            mov rsi, rdx	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000339	          0x4889c7	                            mov rdi, rax	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x400033c	      0xe800000000	                          call 0x4000341	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000341	          0x488903	                    mov qword [rbx], rax	        45	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x4000344	        0x8345a001	               add dword [rbp - 0x60], 1	        47	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	ELSE_2
0x4000348	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        49	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_6
0x400034c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        49	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_6
0x4000350	            0x7305	                           jae 0x4000357	        49	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_6
0x4000352	      0x488345b001	               add qword [rbp - 0x50], 1	        50	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1	IF_6
0x4000357	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x400035b	        0x488945a8	             mov qword [rbp - 0x58], rax	        51	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x400035f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        31	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x4000363	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        31	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x4000367	     0xf8226ffffff	                            jb 0x4000293	        31	diffcore-order.c	FUNCTION_39	FOR_1	WHILE_1
0x400036d	        0x837da400	               cmp dword [rbp - 0x5c], 0	        53	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000371	            0x752a	                           jne 0x400039d	        53	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000373	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        54	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000376	    0x890500000000	            mov dword [0x0400037c], eax 	        54	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x400037c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x400037f	            0x4898	                                    cdqe	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000381	          0x4889c6	                            mov rsi, rax	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000384	      0xbf08000000	                              mov edi, 8	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000389	      0xe8b2fcffff	                        call sym.st_mult	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x400038e	          0x4889c7	                            mov rdi, rax	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000391	      0xe800000000	                          call 0x4000396	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x4000396	    0x488905000000	            mov qword [0x0400039d], rax 	        55	diffcore-order.c	FUNCTION_39	FOR_1	IF_7
0x400039d	        0x8345a401	               add dword [rbp - 0x5c], 1	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x40003a1	        0x837da401	               cmp dword [rbp - 0x5c], 1	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x40003a5	     0xf8ed4feffff	                           jle 0x400027f	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x40003ab	            0xeb01	                           jmp 0x40003ae	        28	diffcore-order.c	FUNCTION_39	FOR_1
0x40003ad	              0x90	                                     nop	        20	diffcore-order.c	FUNCTION_39	IF_1
0x40003ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	diffcore-order.c	FUNCTION_39
0x40003b2	    0x644833042528	                xor rax, qword fs:[0x28]	        58	diffcore-order.c	FUNCTION_39
0x40003bb	            0x7405	                            je 0x40003c2	        58	diffcore-order.c	FUNCTION_39
0x40003bd	      0xe800000000	                          call 0x40003c2	        58	diffcore-order.c	FUNCTION_39
0x40003c2	        0x4883c468	                           add rsp, 0x68	        58	diffcore-order.c	FUNCTION_39
0x40003c6	              0x5b	                                 pop rbx	        58	diffcore-order.c	FUNCTION_39
0x40003c7	              0x5d	                                 pop rbp	        58	diffcore-order.c	FUNCTION_39
0x40003c8	              0xc3	                                     ret	        58	diffcore-order.c	FUNCTION_39
strbuf_addstr	FOR,0:IF,0:DO,0:CALL,2:functions,0:ELSE,0:WHILE,0:SWITCH,0	17
0x4000166	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_32
0x4000167	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_32
0x400016a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_32
0x400016e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_32
0x4000172	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_32
0x4000176	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_32	CALL_2
0x400017a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0x400017d	      0xe800000000	                          call 0x4000182	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000182	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000185	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000189	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_32	CALL_2
0x400018d	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000190	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000193	      0xe800000000	                          call 0x4000198	       279	strbuf.h	FUNCTION_32	CALL_2
0x4000198	              0x90	                                     nop	       280	strbuf.h	FUNCTION_32
0x4000199	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_32
0x400019a	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_32
pair_pathtwo	FOR,0:IF,0:DO,0:CALL,0:functions,0:ELSE,0:WHILE,0:SWITCH,0	10
0x40005a2	              0x55	                                push rbp	       108	diffcore-order.c	FUNCTION_43
0x40005a3	          0x4889e5	                            mov rbp, rsp	       108	diffcore-order.c	FUNCTION_43
0x40005a6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	diffcore-order.c	FUNCTION_43
0x40005aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	diffcore-order.c	FUNCTION_43
0x40005ae	        0x488945f8	                mov qword [rbp - 8], rax	       109	diffcore-order.c	FUNCTION_43
0x40005b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	diffcore-order.c	FUNCTION_43
0x40005b6	        0x488b4008	                mov rax, qword [rax + 8]	       111	diffcore-order.c	FUNCTION_43
0x40005ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	       111	diffcore-order.c	FUNCTION_43
0x40005be	              0x5d	                                 pop rbp	       112	diffcore-order.c	FUNCTION_43
0x40005bf	              0xc3	                                     ret	       112	diffcore-order.c	FUNCTION_43
order_objects	FOR,1:IF,1:DO,0:CALL,3:functions,0:ELSE,0:WHILE,0:SWITCH,0	59
0x40004e2	              0x55	                                push rbp	        93	diffcore-order.c	FUNCTION_42
0x40004e3	          0x4889e5	                            mov rbp, rsp	        93	diffcore-order.c	FUNCTION_42
0x40004e6	              0x53	                                push rbx	        93	diffcore-order.c	FUNCTION_42
0x40004e7	        0x4883ec38	                           sub rsp, 0x38	        93	diffcore-order.c	FUNCTION_42
0x40004eb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        93	diffcore-order.c	FUNCTION_42
0x40004ef	        0x488975d0	             mov qword [rbp - 0x30], rsi	        93	diffcore-order.c	FUNCTION_42
0x40004f3	        0x488955c8	             mov qword [rbp - 0x38], rdx	        93	diffcore-order.c	FUNCTION_42
0x40004f7	          0x894dc4	             mov dword [rbp - 0x3c], ecx	        93	diffcore-order.c	FUNCTION_42
0x40004fa	        0x837dc400	               cmp dword [rbp - 0x3c], 0	        96	diffcore-order.c	FUNCTION_42	IF_1
0x40004fe	     0xf8496000000	                            je 0x400059a	        96	diffcore-order.c	FUNCTION_42	IF_1
0x4000504	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	diffcore-order.c	FUNCTION_42	CALL_1
0x4000508	          0x4889c7	                            mov rdi, rax	        99	diffcore-order.c	FUNCTION_42	CALL_1
0x400050b	      0xe8b7fcffff	                  call sym.prepare_order	        99	diffcore-order.c	FUNCTION_42	CALL_1
0x4000510	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x4000517	            0xeb5b	                           jmp 0x4000574	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x4000519	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x400051c	            0x4898	                                    cdqe	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x400051e	        0x48c1e004	                              shl rax, 4	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x4000522	          0x4889c2	                            mov rdx, rax	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x4000525	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x4000529	          0x4801c2	                            add rdx, rax	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x400052c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x400052f	          0x894208	                mov dword [rdx + 8], eax	       101	diffcore-order.c	FUNCTION_42	FOR_1
0x4000532	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000535	            0x4898	                                    cdqe	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000537	        0x48c1e004	                              shl rax, 4	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400053b	          0x4889c2	                            mov rdx, rax	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400053e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000542	        0x488d1c02	                    lea rbx, [rdx + rax]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000546	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000549	            0x4898	                                    cdqe	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400054b	        0x48c1e004	                              shl rax, 4	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400054f	          0x4889c2	                            mov rdx, rax	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000552	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000556	          0x4801d0	                            add rax, rdx	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000559	          0x488b10	                    mov rdx, qword [rax]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400055c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000560	          0x4889d7	                            mov rdi, rdx	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000563	            0xffd0	                                call rax	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000565	          0x4889c7	                            mov rdi, rax	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000568	      0xe85cfeffff	                    call sym.match_order	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x400056d	          0x89430c	              mov dword [rbx + 0xc], eax	       102	diffcore-order.c	FUNCTION_42	FOR_1	CALL_3
0x4000570	        0x8345ec01	               add dword [rbp - 0x14], 1	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x4000574	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x4000577	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x400057a	            0x7c9d	                            jl 0x4000519	       100	diffcore-order.c	FUNCTION_42	FOR_1
0x400057c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       104	diffcore-order.c	FUNCTION_42
0x400057f	          0x4863f0	                         movsxd rsi, eax	       104	diffcore-order.c	FUNCTION_42
0x4000582	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       104	diffcore-order.c	FUNCTION_42
0x4000586	      0xb900000000	                              mov ecx, 0	       104	diffcore-order.c	FUNCTION_42
0x400058b	      0xba10000000	                           mov edx, 0x10	       104	diffcore-order.c	FUNCTION_42
0x4000590	          0x4889c7	                            mov rdi, rax	       104	diffcore-order.c	FUNCTION_42
0x4000593	      0xe8fafaffff	                     call sym.sane_qsort	       104	diffcore-order.c	FUNCTION_42
0x4000598	            0xeb01	                           jmp 0x400059b	       104	diffcore-order.c	FUNCTION_42
0x400059a	              0x90	                                     nop	        97	diffcore-order.c	FUNCTION_42	IF_1
0x400059b	        0x4883c438	                           add rsp, 0x38	       105	diffcore-order.c	FUNCTION_42
0x400059f	              0x5b	                                 pop rbx	       105	diffcore-order.c	FUNCTION_42
0x40005a0	              0x5d	                                 pop rbp	       105	diffcore-order.c	FUNCTION_42
0x40005a1	              0xc3	                                     ret	       105	diffcore-order.c	FUNCTION_42
match_order	FOR,1:IF,2:DO,0:CALL,3:functions,0:ELSE,0:WHILE,1:SWITCH,0	51
0x40003c9	              0x55	                                push rbp	        61	diffcore-order.c	FUNCTION_40
0x40003ca	          0x4889e5	                            mov rbp, rsp	        61	diffcore-order.c	FUNCTION_40
0x40003cd	        0x4883ec20	                           sub rsp, 0x20	        61	diffcore-order.c	FUNCTION_40
0x40003d1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        61	diffcore-order.c	FUNCTION_40
0x40003d5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x40003dc	      0xe994000000	                           jmp 0x4000475	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x40003e1	      0xbe00000000	                              mov esi, 0	        66	diffcore-order.c	FUNCTION_40	FOR_1
0x40003e6	      0xbf00000000	                              mov edi, 0	        66	diffcore-order.c	FUNCTION_40	FOR_1
0x40003eb	      0xe8dcfcffff	                  call sym.strbuf_setlen	        66	diffcore-order.c	FUNCTION_40	FOR_1
0x40003f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	diffcore-order.c	FUNCTION_40	FOR_1	CALL_1
0x40003f4	          0x4889c6	                            mov rsi, rax	        67	diffcore-order.c	FUNCTION_40	FOR_1	CALL_1
0x40003f7	      0xbf00000000	                              mov edi, 0	        67	diffcore-order.c	FUNCTION_40	FOR_1	CALL_1
0x40003fc	      0xe865fdffff	                  call sym.strbuf_addstr	        67	diffcore-order.c	FUNCTION_40	FOR_1	CALL_1
0x4000401	            0xeb5d	                           jmp 0x4000460	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x4000403	    0x488b0d000000	            mov rcx, qword [0x0400040a] 	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x400040a	    0x488b05000000	            mov rax, qword [0x04000411] 	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000411	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000414	          0x4863d2	                         movsxd rdx, edx	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000417	        0x48c1e203	                              shl rdx, 3	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x400041b	          0x4801d0	                            add rax, rdx	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x400041e	          0x488b00	                    mov rax, qword [rax]	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000421	      0xba00000000	                              mov edx, 0	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000426	          0x4889ce	                            mov rsi, rcx	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000429	          0x4889c7	                            mov rdi, rax	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x400042c	      0xe800000000	                          call 0x4000431	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000431	            0x85c0	                           test eax, eax	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000433	            0x7505	                           jne 0x400043a	        70	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1	CALL_2
0x4000435	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        71	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1
0x4000438	            0xeb50	                           jmp 0x400048a	        71	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_1
0x400043a	    0x488b05000000	            mov rax, qword [0x04000441] 	        72	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	CALL_3
0x4000441	      0xbe2f000000	                           mov esi, 0x2f	        72	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	CALL_3
0x4000446	          0x4889c7	                            mov rdi, rax	        72	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	CALL_3
0x4000449	      0xe800000000	                          call 0x400044e	        72	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	CALL_3
0x400044e	        0x488945f8	                mov qword [rbp - 8], rax	        72	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	CALL_3
0x4000452	      0x48837df800	                  cmp qword [rbp - 8], 0	        73	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_2
0x4000457	            0x7417	                            je 0x4000470	        73	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_2
0x4000459	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x400045d	          0xc60000	                       mov byte [rax], 0	        75	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x4000460	    0x488b05000000	            mov rax, qword [0x04000467] 	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x4000467	           0xfb600	                   movzx eax, byte [rax]	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x400046a	            0x84c0	                             test al, al	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x400046c	            0x7595	                           jne 0x4000403	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x400046e	            0xeb01	                           jmp 0x4000471	        68	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1
0x4000470	              0x90	                                     nop	        74	diffcore-order.c	FUNCTION_40	FOR_1	WHILE_1	IF_2
0x4000471	        0x8345f401	                add dword [rbp - 0xc], 1	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x4000475	    0x8b0500000000	            mov eax, dword [0x0400047b] 	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x400047b	          0x3945f4	              cmp dword [rbp - 0xc], eax	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x400047e	     0xf8c5dffffff	                            jl 0x40003e1	        65	diffcore-order.c	FUNCTION_40	FOR_1
0x4000484	    0x8b0500000000	            mov eax, dword [0x0400048a] 	        78	diffcore-order.c	FUNCTION_40
0x400048a	              0xc9	                                   leave	        79	diffcore-order.c	FUNCTION_40
0x400048b	              0xc3	                                     ret	        79	diffcore-order.c	FUNCTION_40
