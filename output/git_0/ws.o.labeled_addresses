whitespace_rule	IF,6:CALL,9:WHILE,0:FOR,1:SWITCH,0:ELSE,4:functions,0:DO,0	75
0x40002bb	              0x55	                                push rbp	        75	ws.c	FUNCTION_2
0x40002bc	          0x4889e5	                            mov rbp, rsp	        75	ws.c	FUNCTION_2
0x40002bf	        0x4883ec20	                           sub rsp, 0x20	        75	ws.c	FUNCTION_2
0x40002c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	        75	ws.c	FUNCTION_2
0x40002c7	    0x488b05000000	            mov rax, qword [0x040002ce] 	        78	ws.c	FUNCTION_2	IF_1
0x40002ce	          0x4885c0	                           test rax, rax	        78	ws.c	FUNCTION_2	IF_1
0x40002d1	            0x751b	                           jne 0x40002ee	        78	ws.c	FUNCTION_2	IF_1
0x40002d3	      0xbe00000000	                              mov esi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40002d8	      0xbf00000000	                              mov edi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40002dd	      0xb800000000	                              mov eax, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40002e2	      0xe800000000	                          call 0x40002e7	        79	ws.c	FUNCTION_2	CALL_1
0x40002e7	    0x488905000000	            mov qword [0x040002ee], rax 	        79	ws.c	FUNCTION_2	CALL_1
0x40002ee	    0x488b15000000	            mov rdx, qword [0x040002f5] 	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002f9	          0x4889d6	                            mov rsi, rdx	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002fc	          0x4889c7	                            mov rdi, rax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002ff	      0xe800000000	                          call 0x4000304	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x4000304	            0x85c0	                           test eax, eax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x4000306	     0xf85bf000000	                           jne 0x40003cb	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x400030c	    0x488b05000000	            mov rax, qword [0x04000313] 	        84	ws.c	FUNCTION_2	IF_2
0x4000313	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x4000317	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x400031b	        0x488945f8	                mov qword [rbp - 8], rax	        84	ws.c	FUNCTION_2	IF_2
0x400031f	    0x48817df80000	                  cmp qword [rbp - 8], 0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x4000327	            0x7570	                           jne 0x4000399	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x4000329	    0x8b0500000000	            mov eax, dword [0x0400032f] 	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x400032f	          0x83e03f	                           and eax, 0x3f	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000332	          0x8945f0	             mov dword [rbp - 0x10], eax	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000335	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400033c	            0xeb4e	                           jmp 0x400038c	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400033e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000341	            0x4898	                                    cdqe	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000343	        0x48c1e004	                              shl rax, 4	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000347	    0x480500000000	                              add rax, 0	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400034d	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000351	          0x83e001	                              and eax, 1	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000354	            0x84c0	                             test al, al	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000356	            0x7530	                           jne 0x4000388	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000358	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400035b	            0x4898	                                    cdqe	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400035d	        0x48c1e004	                              shl rax, 4	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000361	    0x480500000000	                              add rax, 0	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000367	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400036b	            0xd0e8	                               shr al, 1	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400036d	          0x83e001	                              and eax, 1	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000370	            0x84c0	                             test al, al	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000372	            0x7514	                           jne 0x4000388	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000374	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000377	            0x4898	                                    cdqe	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000379	        0x48c1e004	                              shl rax, 4	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400037d	    0x480500000000	                              add rax, 0	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000383	            0x8b00	                    mov eax, dword [rax]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000385	           0x945f0	              or dword [rbp - 0x10], eax	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x4000388	        0x8345f401	                add dword [rbp - 0xc], 1	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400038c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x400038f	          0x83f806	                              cmp eax, 6	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x4000392	            0x76aa	                           jbe 0x400033e	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x4000394	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        93	ws.c	FUNCTION_2	IF_2	IF_3
0x4000397	            0xeb38	                           jmp 0x40003d1	        93	ws.c	FUNCTION_2	IF_2	IF_3
0x4000399	    0x48817df80000	                  cmp qword [rbp - 8], 0	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x40003a1	            0x750b	                           jne 0x40003ae	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x40003a3	    0x8b0500000000	            mov eax, dword [0x040003a9] 	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x40003a9	          0x83e03f	                           and eax, 0x3f	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x40003ac	            0xeb23	                           jmp 0x40003d1	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x40003ae	      0x48837df800	                  cmp qword [rbp - 8], 0	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x40003b3	            0x7508	                           jne 0x40003bd	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x40003b5	    0x8b0500000000	            mov eax, dword [0x040003bb] 	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x40003bb	            0xeb14	                           jmp 0x40003d1	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x40003bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40003c1	          0x4889c7	                            mov rdi, rax	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40003c4	      0xe800000000	                          call 0x40003c9	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40003c9	            0xeb06	                           jmp 0x40003d1	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40003cb	    0x8b0500000000	            mov eax, dword [0x040003d1] 	       105	ws.c	FUNCTION_2	ELSE_4
0x40003d1	              0xc9	                                   leave	       107	ws.c	FUNCTION_2
0x40003d2	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
strbuf_addch	IF,1:CALL,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	33
0x4000076	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_12
0x4000077	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_12
0x400007a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_12
0x400007e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_12
0x4000082	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_12
0x4000085	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000089	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400008c	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000091	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000094	            0x7511	                           jne 0x40000a7	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000096	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x400009a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x400009f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_12	CALL_2
0x40000a2	      0xe800000000	                          call 0x40000a7	       228	strbuf.h	FUNCTION_12	CALL_2
0x40000a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x40000ab	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_12
0x40000af	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x40000b3	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_12
0x40000b7	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_12
0x40000bb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x40000bf	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_12
0x40000c3	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_12
0x40000c6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_12
0x40000c9	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_12
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_12
0x40000cf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_12
0x40000d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_12
0x40000d7	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_12
0x40000db	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_12
0x40000de	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_12
0x40000e1	              0x90	                                     nop	       231	strbuf.h	FUNCTION_12
0x40000e2	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_12
0x40000e3	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_12
ws_blank_line	IF,1:CALL,1:WHILE,1:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	26
0x4000a05	              0x55	                                push rbp	       261	ws.c	FUNCTION_7
0x4000a06	          0x4889e5	                            mov rbp, rsp	       261	ws.c	FUNCTION_7
0x4000a09	        0x48897df8	                mov qword [rbp - 8], rdi	       261	ws.c	FUNCTION_7
0x4000a0d	          0x8975f4	              mov dword [rbp - 0xc], esi	       261	ws.c	FUNCTION_7
0x4000a10	          0x8955f0	             mov dword [rbp - 0x10], edx	       261	ws.c	FUNCTION_7
0x4000a13	            0xeb29	                           jmp 0x4000a3e	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a15	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a19	           0xfb600	                   movzx eax, byte [rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a1c	           0xfb6c0	                           movzx eax, al	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a1f	            0x4898	                                    cdqe	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a21	     0xfb680000000	                   movzx eax, byte [rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a28	           0xfb6c0	                           movzx eax, al	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a2b	          0x83e001	                              and eax, 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a2e	            0x85c0	                           test eax, eax	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a30	            0x7507	                           jne 0x4000a39	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000a32	      0xb800000000	                              mov eax, 0	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000a37	            0xeb17	                           jmp 0x4000a50	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000a39	      0x488345f801	                  add qword [rbp - 8], 1	       270	ws.c	FUNCTION_7	WHILE_1
0x4000a3e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a41	          0x8d50ff	                      lea edx, [rax - 1]	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a44	          0x8955f4	              mov dword [rbp - 0xc], edx	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a47	            0x85c0	                           test eax, eax	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a49	            0x7fca	                            jg 0x4000a15	       267	ws.c	FUNCTION_7	WHILE_1
0x4000a4b	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0x4000a50	              0x5d	                                 pop rbp	       273	ws.c	FUNCTION_7
0x4000a51	              0xc3	                                     ret	       273	ws.c	FUNCTION_7
ws_check	IF,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	19
0x40009c4	              0x55	                                push rbp	       256	ws.c	FUNCTION_6
0x40009c5	          0x4889e5	                            mov rbp, rsp	       256	ws.c	FUNCTION_6
0x40009c8	        0x4883ec10	                           sub rsp, 0x10	       256	ws.c	FUNCTION_6
0x40009cc	        0x48897df8	                mov qword [rbp - 8], rdi	       256	ws.c	FUNCTION_6
0x40009d0	          0x8975f4	              mov dword [rbp - 0xc], esi	       256	ws.c	FUNCTION_6
0x40009d3	          0x8955f0	             mov dword [rbp - 0x10], edx	       256	ws.c	FUNCTION_6
0x40009d6	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       257	ws.c	FUNCTION_6	CALL_1
0x40009d9	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       257	ws.c	FUNCTION_6	CALL_1
0x40009dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	ws.c	FUNCTION_6	CALL_1
0x40009e0	        0x4883ec08	                              sub rsp, 8	       257	ws.c	FUNCTION_6	CALL_1
0x40009e4	            0x6a00	                                  push 0	       257	ws.c	FUNCTION_6	CALL_1
0x40009e6	    0x41b900000000	                              mov r9d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40009ec	    0x41b800000000	                              mov r8d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40009f2	      0xb900000000	                              mov ecx, 0	       257	ws.c	FUNCTION_6	CALL_1
0x40009f7	          0x4889c7	                            mov rdi, rax	       257	ws.c	FUNCTION_6	CALL_1
0x40009fa	      0xe846fbffff	                call sym.ws_check_emit_1	       257	ws.c	FUNCTION_6	CALL_1
0x40009ff	        0x4883c410	                           add rsp, 0x10	       257	ws.c	FUNCTION_6	CALL_1
0x4000a03	              0xc9	                                   leave	       258	ws.c	FUNCTION_6
0x4000a04	              0xc3	                                     ret	       258	ws.c	FUNCTION_6
ws_check_emit_1	IF,19:CALL,22:WHILE,0:FOR,2:SWITCH,0:ELSE,3:functions,0:DO,0	299
0x4000545	              0x55	                                push rbp	       146	ws.c	FUNCTION_4
0x4000546	          0x4889e5	                            mov rbp, rsp	       146	ws.c	FUNCTION_4
0x4000549	        0x4883ec50	                           sub rsp, 0x50	       146	ws.c	FUNCTION_4
0x400054d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       146	ws.c	FUNCTION_4
0x4000551	          0x8975d4	             mov dword [rbp - 0x2c], esi	       146	ws.c	FUNCTION_4
0x4000554	          0x8955d0	             mov dword [rbp - 0x30], edx	       146	ws.c	FUNCTION_4
0x4000557	        0x48894dc8	             mov qword [rbp - 0x38], rcx	       146	ws.c	FUNCTION_4
0x400055b	        0x4c8945c0	              mov qword [rbp - 0x40], r8	       146	ws.c	FUNCTION_4
0x400055f	        0x4c894db8	              mov qword [rbp - 0x48], r9	       146	ws.c	FUNCTION_4
0x4000563	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       147	ws.c	FUNCTION_4
0x400056a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       148	ws.c	FUNCTION_4
0x4000571	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	       149	ws.c	FUNCTION_4
0x4000578	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       150	ws.c	FUNCTION_4
0x400057f	    0xc745f8000000	                  mov dword [rbp - 8], 0	       151	ws.c	FUNCTION_4
0x4000586	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       155	ws.c	FUNCTION_4	IF_1
0x400058a	            0x7e22	                           jle 0x40005ae	       155	ws.c	FUNCTION_4	IF_1
0x400058c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       155	ws.c	FUNCTION_4	IF_1
0x400058f	            0x4898	                                    cdqe	       155	ws.c	FUNCTION_4	IF_1
0x4000591	        0x488d50ff	                      lea rdx, [rax - 1]	       155	ws.c	FUNCTION_4	IF_1
0x4000595	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	ws.c	FUNCTION_4	IF_1
0x4000599	          0x4801d0	                            add rax, rdx	       155	ws.c	FUNCTION_4	IF_1
0x400059c	           0xfb600	                   movzx eax, byte [rax]	       155	ws.c	FUNCTION_4	IF_1
0x400059f	            0x3c0a	                             cmp al, 0xa	       155	ws.c	FUNCTION_4	IF_1
0x40005a1	            0x750b	                           jne 0x40005ae	       155	ws.c	FUNCTION_4	IF_1
0x40005a3	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       156	ws.c	FUNCTION_4	IF_1
0x40005aa	        0x836dd401	               sub dword [rbp - 0x2c], 1	       157	ws.c	FUNCTION_4	IF_1
0x40005ae	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       159	ws.c	FUNCTION_4	IF_2
0x40005b1	      0x2500020000	                          and eax, 0x200	       159	ws.c	FUNCTION_4	IF_2
0x40005b6	            0x85c0	                           test eax, eax	       159	ws.c	FUNCTION_4	IF_2
0x40005b8	            0x7428	                            je 0x40005e2	       159	ws.c	FUNCTION_4	IF_2
0x40005ba	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       159	ws.c	FUNCTION_4	IF_2
0x40005be	            0x7e22	                           jle 0x40005e2	       159	ws.c	FUNCTION_4	IF_2
0x40005c0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       160	ws.c	FUNCTION_4	IF_2
0x40005c3	            0x4898	                                    cdqe	       160	ws.c	FUNCTION_4	IF_2
0x40005c5	        0x488d50ff	                      lea rdx, [rax - 1]	       160	ws.c	FUNCTION_4	IF_2
0x40005c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       160	ws.c	FUNCTION_4	IF_2
0x40005cd	          0x4801d0	                            add rax, rdx	       160	ws.c	FUNCTION_4	IF_2
0x40005d0	           0xfb600	                   movzx eax, byte [rax]	       160	ws.c	FUNCTION_4	IF_2
0x40005d3	            0x3c0d	                             cmp al, 0xd	       160	ws.c	FUNCTION_4	IF_2
0x40005d5	            0x750b	                           jne 0x40005e2	       160	ws.c	FUNCTION_4	IF_2
0x40005d7	    0xc745f8010000	                  mov dword [rbp - 8], 1	       161	ws.c	FUNCTION_4	IF_2
0x40005de	        0x836dd401	               sub dword [rbp - 0x2c], 1	       162	ws.c	FUNCTION_4	IF_2
0x40005e2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       166	ws.c	FUNCTION_4	IF_3
0x40005e5	          0x83e040	                           and eax, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x40005e8	            0x85c0	                           test eax, eax	       166	ws.c	FUNCTION_4	IF_3
0x40005ea	            0x7448	                            je 0x4000634	       166	ws.c	FUNCTION_4	IF_3
0x40005ec	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40005ef	          0x83e801	                              sub eax, 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40005f2	          0x8945fc	                mov dword [rbp - 4], eax	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40005f5	            0xeb34	                           jmp 0x400062b	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x40005f7	          0x8b45fc	                mov eax, dword [rbp - 4]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x40005fa	          0x4863d0	                         movsxd rdx, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x40005fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000601	          0x4801d0	                            add rax, rdx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000604	           0xfb600	                   movzx eax, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000607	           0xfb6c0	                           movzx eax, al	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400060a	            0x4898	                                    cdqe	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400060c	     0xfb680000000	                   movzx eax, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000613	           0xfb6c0	                           movzx eax, al	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000616	          0x83e001	                              and eax, 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000619	            0x85c0	                           test eax, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400061b	            0x7416	                            je 0x4000633	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400061d	          0x8b45fc	                mov eax, dword [rbp - 4]	       169	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x4000620	          0x8945f0	             mov dword [rbp - 0x10], eax	       169	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x4000623	        0x834de840	            or dword [rbp - 0x18], 0x40 	       170	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x4000627	        0x836dfc01	                  sub dword [rbp - 4], 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400062b	        0x837dfc00	                  cmp dword [rbp - 4], 0	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400062f	            0x79c6	                           jns 0x40005f7	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000631	            0xeb01	                           jmp 0x4000634	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000633	              0x90	                                     nop	       173	ws.c	FUNCTION_4	IF_3	FOR_1	ELSE_1
0x4000634	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	       177	ws.c	FUNCTION_4	IF_5
0x4000638	            0x7506	                           jne 0x4000640	       177	ws.c	FUNCTION_4	IF_5
0x400063a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       178	ws.c	FUNCTION_4	IF_5
0x400063d	          0x8945f0	             mov dword [rbp - 0x10], eax	       178	ws.c	FUNCTION_4	IF_5
0x4000640	    0xc745fc000000	                  mov dword [rbp - 4], 0	       181	ws.c	FUNCTION_4	FOR_2
0x4000647	      0xe9ad010000	                           jmp 0x40007f9	       181	ws.c	FUNCTION_4	FOR_2
0x400064c	          0x8b45fc	                mov eax, dword [rbp - 4]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400064f	          0x4863d0	                         movsxd rdx, eax	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000652	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000656	          0x4801d0	                            add rax, rdx	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000659	           0xfb600	                   movzx eax, byte [rax]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400065c	            0x3c20	                            cmp al, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400065e	     0xf8490010000	                            je 0x40007f4	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000664	          0x8b45fc	                mov eax, dword [rbp - 4]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000667	          0x4863d0	                         movsxd rdx, eax	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x400066a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x400066e	          0x4801d0	                            add rax, rdx	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000671	           0xfb600	                   movzx eax, byte [rax]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000674	            0x3c09	                               cmp al, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000676	     0xf858b010000	                           jne 0x4000807	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x400067c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400067f	      0x2580000000	                           and eax, 0x80	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000684	            0x85c0	                           test eax, eax	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000686	     0xf8494000000	                            je 0x4000720	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400068c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400068f	          0x3b45fc	                cmp eax, dword [rbp - 4]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000692	     0xf8d88000000	                           jge 0x4000720	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000698	    0x814de8800000	             or dword [rbp - 0x18], 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x400069f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40006a4	     0xf843f010000	                            je 0x40007e9	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40006aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40006ae	          0x4889c6	                            mov rsi, rax	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40006b1	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40006b5	      0xe800000000	                          call 0x40006ba	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40006ba	          0x8b45fc	                mov eax, dword [rbp - 4]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006bd	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006c0	            0x4898	                                    cdqe	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006c2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006c5	          0x4863ca	                         movsxd rcx, edx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006c8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006cc	        0x488d3c11	                    lea rdi, [rcx + rdx]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006d0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006d4	          0x4889d1	                            mov rcx, rdx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006d7	      0xba01000000	                              mov edx, 1	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006dc	          0x4889c6	                            mov rsi, rax	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006df	      0xe800000000	                          call 0x40006e4	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40006e4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x40006e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x40006ec	          0x4889d6	                            mov rsi, rdx	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x40006ef	          0x4889c7	                            mov rdi, rax	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x40006f2	      0xe800000000	                          call 0x40006f7	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x40006f7	          0x8b45fc	                mov eax, dword [rbp - 4]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x40006fa	          0x4863d0	                         movsxd rdx, eax	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x40006fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000701	        0x488d3c02	                    lea rdi, [rdx + rax]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000705	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000709	          0x4889c1	                            mov rcx, rax	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400070c	      0xba01000000	                              mov edx, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000711	      0xbe01000000	                              mov esi, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000716	      0xe800000000	                          call 0x400071b	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400071b	      0xe9c9000000	                           jmp 0x40007e9	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x4000720	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000723	      0x2500080000	                          and eax, 0x800	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000728	            0x85c0	                           test eax, eax	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400072a	     0xf8485000000	                            je 0x40007b5	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000730	    0x814de8000800	            or dword [rbp - 0x18], 0x800	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000737	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x400073c	     0xf84a7000000	                            je 0x40007e9	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x4000742	          0x8b45fc	                mov eax, dword [rbp - 4]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000745	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000748	            0x4898	                                    cdqe	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400074a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400074d	          0x4863ca	                         movsxd rcx, edx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000750	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000754	        0x488d3c11	                    lea rdi, [rcx + rdx]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000758	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400075c	          0x4889d1	                            mov rcx, rdx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400075f	      0xba01000000	                              mov edx, 1	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000764	          0x4889c6	                            mov rsi, rax	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000767	      0xe800000000	                          call 0x400076c	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400076c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000770	          0x4889c6	                            mov rsi, rax	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000773	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000777	      0xe800000000	                          call 0x400077c	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x400077c	          0x8b45fc	                mov eax, dword [rbp - 4]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400077f	          0x4863d0	                         movsxd rdx, eax	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000782	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000786	        0x488d3c02	                    lea rdi, [rdx + rax]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400078a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400078e	          0x4889c1	                            mov rcx, rax	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000791	      0xba01000000	                              mov edx, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x4000796	      0xbe01000000	                              mov esi, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400079b	      0xe800000000	                          call 0x40007a0	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40007a0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007a8	          0x4889d6	                            mov rsi, rdx	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007ab	          0x4889c7	                            mov rdi, rax	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007ae	      0xe800000000	                          call 0x40007b3	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007b3	            0xeb34	                           jmp 0x40007e9	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007b5	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x40007ba	            0x742d	                            je 0x40007e9	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x40007bc	          0x8b45fc	                mov eax, dword [rbp - 4]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007bf	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007c2	          0x83c001	                              add eax, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007c5	            0x4898	                                    cdqe	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007c7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007ca	          0x4863ca	                         movsxd rcx, edx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007cd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007d1	        0x488d3c11	                    lea rdi, [rcx + rdx]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007d5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007d9	          0x4889d1	                            mov rcx, rdx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007dc	      0xba01000000	                              mov edx, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e1	          0x4889c6	                            mov rsi, rax	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e4	      0xe800000000	                          call 0x40007e9	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e9	          0x8b45fc	                mov eax, dword [rbp - 4]	       205	ws.c	FUNCTION_4	FOR_2
0x40007ec	          0x83c001	                              add eax, 1	       205	ws.c	FUNCTION_4	FOR_2
0x40007ef	          0x8945ec	             mov dword [rbp - 0x14], eax	       205	ws.c	FUNCTION_4	FOR_2
0x40007f2	            0xeb01	                           jmp 0x40007f5	       205	ws.c	FUNCTION_4	FOR_2
0x40007f4	              0x90	                                     nop	       183	ws.c	FUNCTION_4	FOR_2	IF_6
0x40007f5	        0x8345fc01	                  add dword [rbp - 4], 1	       181	ws.c	FUNCTION_4	FOR_2
0x40007f9	          0x8b45fc	                mov eax, dword [rbp - 4]	       181	ws.c	FUNCTION_4	FOR_2
0x40007fc	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       181	ws.c	FUNCTION_4	FOR_2
0x40007ff	     0xf8c47feffff	                            jl 0x400064c	       181	ws.c	FUNCTION_4	FOR_2
0x4000805	            0xeb01	                           jmp 0x4000808	       181	ws.c	FUNCTION_4	FOR_2
0x4000807	              0x90	                                     nop	       185	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000808	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400080b	      0x2500010000	                          and eax, 0x100	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000810	            0x85c0	                           test eax, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000812	            0x7473	                            je 0x4000887	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000814	          0x8b45fc	                mov eax, dword [rbp - 4]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000817	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400081a	            0x89c2	                            mov edx, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400081c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400081f	          0x83e03f	                           and eax, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000822	            0x39c2	                            cmp edx, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000824	            0x7261	                            jb 0x4000887	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000826	    0x814de8000100	            or dword [rbp - 0x18], 0x100	       210	ws.c	FUNCTION_4	IF_13
0x400082d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000832	            0x744d	                            je 0x4000881	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000834	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x4000838	          0x4889c6	                            mov rsi, rax	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x400083b	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x400083f	      0xe800000000	                          call 0x4000844	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x4000844	          0x8b45fc	                mov eax, dword [rbp - 4]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000847	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400084a	            0x4898	                                    cdqe	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400084c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400084f	          0x4863ca	                         movsxd rcx, edx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000852	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000856	        0x488d3c11	                    lea rdi, [rcx + rdx]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400085a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400085e	          0x4889d1	                            mov rcx, rdx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000861	      0xba01000000	                              mov edx, 1	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000866	          0x4889c6	                            mov rsi, rax	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000869	      0xe800000000	                          call 0x400086e	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400086e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000872	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000876	          0x4889d6	                            mov rsi, rdx	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000879	          0x4889c7	                            mov rdi, rax	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400087c	      0xe800000000	                          call 0x4000881	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000881	          0x8b45fc	                mov eax, dword [rbp - 4]	       216	ws.c	FUNCTION_4	IF_13
0x4000884	          0x8945ec	             mov dword [rbp - 0x14], eax	       216	ws.c	FUNCTION_4	IF_13
0x4000887	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       219	ws.c	FUNCTION_4	IF_15
0x400088c	     0xf84dd000000	                            je 0x400096f	       219	ws.c	FUNCTION_4	IF_15
0x4000892	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000895	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000898	            0x85c0	                           test eax, eax	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400089a	            0x7e50	                           jle 0x40008ec	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400089c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x40008a0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x40008a4	          0x4889d6	                            mov rsi, rdx	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x40008a7	          0x4889c7	                            mov rdi, rax	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x40008aa	      0xe800000000	                          call 0x40008af	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x40008af	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       229	ws.c	FUNCTION_4	IF_15	IF_16
0x40008b2	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       229	ws.c	FUNCTION_4	IF_15	IF_16
0x40008b5	            0x4898	                                    cdqe	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008b7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008ba	          0x4863ca	                         movsxd rcx, edx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008bd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008c1	        0x488d3c11	                    lea rdi, [rcx + rdx]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008c5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008c9	          0x4889d1	                            mov rcx, rdx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008cc	      0xba01000000	                              mov edx, 1	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008d1	          0x4889c6	                            mov rsi, rax	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008d4	      0xe800000000	                          call 0x40008d9	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x40008d9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x40008dd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x40008e1	          0x4889d6	                            mov rsi, rdx	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x40008e4	          0x4889c7	                            mov rdi, rax	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x40008e7	      0xe800000000	                          call 0x40008ec	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x40008ec	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x40008ef	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x40008f2	            0x744d	                            je 0x4000941	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x40008f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x40008f8	          0x4889c6	                            mov rsi, rax	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x40008fb	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x40008ff	      0xe800000000	                          call 0x4000904	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000904	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       237	ws.c	FUNCTION_4	IF_15	IF_17
0x4000907	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       237	ws.c	FUNCTION_4	IF_15	IF_17
0x400090a	            0x4898	                                    cdqe	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400090c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400090f	          0x4863ca	                         movsxd rcx, edx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000912	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000916	        0x488d3c11	                    lea rdi, [rcx + rdx]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400091a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400091e	          0x4889d1	                            mov rcx, rdx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000921	      0xba01000000	                              mov edx, 1	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000926	          0x4889c6	                            mov rsi, rax	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000929	      0xe800000000	                          call 0x400092e	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400092e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000932	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000936	          0x4889d6	                            mov rsi, rdx	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000939	          0x4889c7	                            mov rdi, rax	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x400093c	      0xe800000000	                          call 0x4000941	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000941	        0x837df800	                  cmp dword [rbp - 8], 0	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x4000945	            0x7411	                            je 0x4000958	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x4000947	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x400094b	          0x4889c6	                            mov rsi, rax	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x400094e	      0xbf0d000000	                            mov edi, 0xd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000953	      0xe800000000	                          call 0x4000958	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000958	        0x837df400	                cmp dword [rbp - 0xc], 0	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x400095c	            0x7411	                            je 0x400096f	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x400095e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x4000962	          0x4889c6	                            mov rsi, rax	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x4000965	      0xbf0a000000	                            mov edi, 0xa	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x400096a	      0xe800000000	                          call 0x400096f	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x400096f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       245	ws.c	FUNCTION_4
0x4000972	              0xc9	                                   leave	       246	ws.c	FUNCTION_4
0x4000973	              0xc3	                                     ret	       246	ws.c	FUNCTION_4
strbuf_avail	IF,0:CALL,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	18
0x4000040	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_10
0x4000041	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_10
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_10
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0x400004c	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_10
0x400004f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000052	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_10
0x4000054	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0x4000058	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_10
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0x400005f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_10
0x4000063	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_10
0x4000066	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_10
0x4000069	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_10
0x400006d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_10
0x400006f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_10
0x4000074	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_10
0x4000075	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_10
parse_whitespace_rule	IF,7:CALL,8:WHILE,1:FOR,1:SWITCH,0:ELSE,2:functions,0:DO,0	117
0x4000119	              0x55	                                push rbp	        26	ws.c	FUNCTION_1
0x400011a	          0x4889e5	                            mov rbp, rsp	        26	ws.c	FUNCTION_1
0x400011d	        0x4883ec30	                           sub rsp, 0x30	        26	ws.c	FUNCTION_1
0x4000121	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        26	ws.c	FUNCTION_1
0x4000125	    0xc745e0c80400	          mov dword [rbp - 0x20], 0x4c8 	        27	ws.c	FUNCTION_1
0x400012c	      0xe950010000	                           jmp 0x4000281	        29	ws.c	FUNCTION_1	WHILE_1
0x4000131	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        33	ws.c	FUNCTION_1	WHILE_1
0x4000138	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x400013c	      0xbe00000000	                              mov esi, 0	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000141	          0x4889c7	                            mov rdi, rax	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000144	      0xe800000000	                          call 0x4000149	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x4000149	        0x480145d8	            add qword [rbp - 0x28], rax 	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x400014d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000151	      0xbe2c000000	                           mov esi, 0x2c	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000156	          0x4889c7	                            mov rdi, rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000159	      0xe800000000	                          call 0x400015e	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x400015e	        0x488945f8	                mov qword [rbp - 8], rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000162	        0x488b55f8	                mov rdx, qword [rbp - 8]	        37	ws.c	FUNCTION_1	WHILE_1
0x4000166	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        37	ws.c	FUNCTION_1	WHILE_1
0x400016a	          0x4829c2	                            sub rdx, rax	        37	ws.c	FUNCTION_1	WHILE_1
0x400016d	          0x4889d0	                            mov rax, rdx	        37	ws.c	FUNCTION_1	WHILE_1
0x4000170	        0x488945f0	             mov qword [rbp - 0x10], rax	        37	ws.c	FUNCTION_1	WHILE_1
0x4000174	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000178	           0xfb600	                   movzx eax, byte [rax]	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400017b	            0x3c2d	                            cmp al, 0x2d	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400017d	            0x7511	                           jne 0x4000190	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400017f	    0xc745e8010000	               mov dword [rbp - 0x18], 1	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000186	      0x488345d801	               add qword [rbp - 0x28], 1	        41	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400018b	      0x48836df001	               sub qword [rbp - 0x10], 1	        42	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000190	      0x48837df000	               cmp qword [rbp - 0x10], 0	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000195	     0xf84f3000000	                            je 0x400028e	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400019b	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40001a2	            0xeb63	                           jmp 0x4000207	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40001a4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001a7	            0x4898	                                    cdqe	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001a9	        0x48c1e004	                              shl rax, 4	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001ad	    0x480500000000	                              add rax, 0	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001b3	          0x488b00	                    mov rax, qword [rax]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001b6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001ba	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001be	          0x4889ce	                            mov rsi, rcx	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001c1	          0x4889c7	                            mov rdi, rax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001c4	      0xe800000000	                          call 0x40001c9	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001c9	            0x85c0	                           test eax, eax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001cb	            0x7406	                            je 0x40001d3	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x40001cd	        0x8345e401	               add dword [rbp - 0x1c], 1	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40001d1	            0xeb34	                           jmp 0x4000207	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x40001d3	        0x837de800	               cmp dword [rbp - 0x18], 0	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001d7	            0x7418	                            je 0x40001f1	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001d9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001dc	            0x4898	                                    cdqe	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001de	        0x48c1e004	                              shl rax, 4	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001e2	    0x480500000000	                              add rax, 0	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001e8	            0x8b00	                    mov eax, dword [rax]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001ea	            0xf7d0	                                 not eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001ec	          0x2145e0	             and dword [rbp - 0x20], eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x40001ef	            0xeb1e	                           jmp 0x400020f	        54	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40001f1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40001f4	            0x4898	                                    cdqe	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40001f6	        0x48c1e004	                              shl rax, 4	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40001fa	    0x480500000000	                              add rax, 0	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x4000200	            0x8b00	                    mov eax, dword [rax]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x4000202	           0x945e0	              or dword [rbp - 0x20], eax	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x4000205	            0xeb08	                           jmp 0x400020f	        54	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x4000207	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x400020a	          0x83f806	                              cmp eax, 6	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x400020d	            0x7695	                           jbe 0x40001a4	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x400020f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000213	      0xba09000000	                              mov edx, 9	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000218	      0xbe00000000	                              mov esi, 0	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x400021d	          0x4889c7	                            mov rdi, rax	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000220	      0xe800000000	                          call 0x4000225	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000225	            0x85c0	                           test eax, eax	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000227	            0x7550	                           jne 0x4000279	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000229	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x400022d	        0x4883c009	                              add rax, 9	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x4000231	          0x4889c7	                            mov rdi, rax	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x4000234	      0xe800000000	                          call 0x4000239	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x4000239	          0x8945ec	             mov dword [rbp - 0x14], eax	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x400023c	        0x837dec00	               cmp dword [rbp - 0x14], 0	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000240	            0x7412	                            je 0x4000254	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000242	        0x837dec3f	           cmp dword [rbp - 0x14], 0x3f 	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000246	            0x770c	                            ja 0x4000254	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000248	        0x8365e0c0	      and dword [rbp - 0x20], 0xffffffc0	        59	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x400024c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x400024f	           0x945e0	              or dword [rbp - 0x20], eax	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000252	            0xeb25	                           jmp 0x4000279	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000254	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000258	        0x4883c009	                              add rax, 9	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400025c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000260	          0x83ea09	                              sub edx, 9	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000263	            0x89d1	                            mov ecx, edx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000265	          0x4889c2	                            mov rdx, rax	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000268	            0x89ce	                            mov esi, ecx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400026a	      0xbf00000000	                              mov edi, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400026f	      0xb800000000	                              mov eax, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000274	      0xe800000000	                          call 0x4000279	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000279	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	ws.c	FUNCTION_1	WHILE_1
0x400027d	        0x488945d8	             mov qword [rbp - 0x28], rax	        66	ws.c	FUNCTION_1	WHILE_1
0x4000281	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        29	ws.c	FUNCTION_1	WHILE_1
0x4000286	     0xf85a5feffff	                           jne 0x4000131	        29	ws.c	FUNCTION_1	WHILE_1
0x400028c	            0xeb01	                           jmp 0x400028f	        29	ws.c	FUNCTION_1	WHILE_1
0x400028e	              0x90	                                     nop	        45	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400028f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        69	ws.c	FUNCTION_1	IF_7
0x4000292	      0x2500080000	                          and eax, 0x800	        69	ws.c	FUNCTION_1	IF_7
0x4000297	            0x85c0	                           test eax, eax	        69	ws.c	FUNCTION_1	IF_7
0x4000299	            0x741b	                            je 0x40002b6	        69	ws.c	FUNCTION_1	IF_7
0x400029b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        69	ws.c	FUNCTION_1	IF_7
0x400029e	      0x2500010000	                          and eax, 0x100	        69	ws.c	FUNCTION_1	IF_7
0x40002a3	            0x85c0	                           test eax, eax	        69	ws.c	FUNCTION_1	IF_7
0x40002a5	            0x740f	                            je 0x40002b6	        69	ws.c	FUNCTION_1	IF_7
0x40002a7	      0xbf00000000	                              mov edi, 0	        70	ws.c	FUNCTION_1	CALL_8
0x40002ac	      0xb800000000	                              mov eax, 0	        70	ws.c	FUNCTION_1	CALL_8
0x40002b1	      0xe800000000	                          call 0x40002b6	        70	ws.c	FUNCTION_1	CALL_8
0x40002b6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        71	ws.c	FUNCTION_1
0x40002b9	              0xc9	                                   leave	        72	ws.c	FUNCTION_1
0x40002ba	              0xc3	                                     ret	        72	ws.c	FUNCTION_1
strbuf_addstr	IF,0:CALL,2:WHILE,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	17
0x40000e4	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_13
0x40000e5	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_13
0x40000e8	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_13
0x40000ec	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_13
0x40000f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_13
0x40000f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_13	CALL_2
0x40000f8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0x40000fb	      0xe800000000	                          call 0x4000100	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000100	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000103	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000107	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_13	CALL_2
0x400010b	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_13	CALL_2
0x400010e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000111	      0xe800000000	                          call 0x4000116	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000116	              0x90	                                     nop	       280	strbuf.h	FUNCTION_13
0x4000117	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_13
0x4000118	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_13
ws_check_emit	IF,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0	25
0x4000974	              0x55	                                push rbp	       251	ws.c	FUNCTION_5
0x4000975	          0x4889e5	                            mov rbp, rsp	       251	ws.c	FUNCTION_5
0x4000978	        0x4883ec30	                           sub rsp, 0x30	       251	ws.c	FUNCTION_5
0x400097c	        0x48897df8	                mov qword [rbp - 8], rdi	       251	ws.c	FUNCTION_5
0x4000980	          0x8975f4	              mov dword [rbp - 0xc], esi	       251	ws.c	FUNCTION_5
0x4000983	          0x8955f0	             mov dword [rbp - 0x10], edx	       251	ws.c	FUNCTION_5
0x4000986	        0x48894de8	             mov qword [rbp - 0x18], rcx	       251	ws.c	FUNCTION_5
0x400098a	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       251	ws.c	FUNCTION_5
0x400098e	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       251	ws.c	FUNCTION_5
0x4000992	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	       252	ws.c	FUNCTION_5	CALL_1
0x4000996	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       252	ws.c	FUNCTION_5	CALL_1
0x400099a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       252	ws.c	FUNCTION_5	CALL_1
0x400099e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       252	ws.c	FUNCTION_5	CALL_1
0x40009a1	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       252	ws.c	FUNCTION_5	CALL_1
0x40009a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	ws.c	FUNCTION_5	CALL_1
0x40009a8	        0x4883ec08	                              sub rsp, 8	       252	ws.c	FUNCTION_5	CALL_1
0x40009ac	          0xff7510	                 push qword [rbp + 0x10]	       252	ws.c	FUNCTION_5	CALL_1
0x40009af	          0x4d89c1	                              mov r9, r8	       252	ws.c	FUNCTION_5	CALL_1
0x40009b2	          0x4989f8	                             mov r8, rdi	       252	ws.c	FUNCTION_5	CALL_1
0x40009b5	          0x4889c7	                            mov rdi, rax	       252	ws.c	FUNCTION_5	CALL_1
0x40009b8	      0xe888fbffff	                call sym.ws_check_emit_1	       252	ws.c	FUNCTION_5	CALL_1
0x40009bd	        0x4883c410	                           add rsp, 0x10	       252	ws.c	FUNCTION_5	CALL_1
0x40009c1	              0x90	                                     nop	       253	ws.c	FUNCTION_5
0x40009c2	              0xc9	                                   leave	       253	ws.c	FUNCTION_5
0x40009c3	              0xc3	                                     ret	       253	ws.c	FUNCTION_5
ws_fix_copy	IF,18:CALL,13:WHILE,2:FOR,3:SWITCH,0:ELSE,6:functions,0:DO,1	283
0x4000a52	              0x55	                                push rbp	       277	ws.c	FUNCTION_8
0x4000a53	          0x4889e5	                            mov rbp, rsp	       277	ws.c	FUNCTION_8
0x4000a56	        0x4883ec50	                           sub rsp, 0x50	       277	ws.c	FUNCTION_8
0x4000a5a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       277	ws.c	FUNCTION_8
0x4000a5e	        0x488975c0	             mov qword [rbp - 0x40], rsi	       277	ws.c	FUNCTION_8
0x4000a62	          0x8955bc	             mov dword [rbp - 0x44], edx	       277	ws.c	FUNCTION_8
0x4000a65	          0x894db8	             mov dword [rbp - 0x48], ecx	       277	ws.c	FUNCTION_8
0x4000a68	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       277	ws.c	FUNCTION_8
0x4000a6c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       284	ws.c	FUNCTION_8
0x4000a73	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       285	ws.c	FUNCTION_8
0x4000a7a	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       286	ws.c	FUNCTION_8
0x4000a81	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       287	ws.c	FUNCTION_8
0x4000a88	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       288	ws.c	FUNCTION_8
0x4000a8f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       289	ws.c	FUNCTION_8
0x4000a96	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       294	ws.c	FUNCTION_8	IF_1
0x4000a99	          0x83e040	                           and eax, 0x40	       294	ws.c	FUNCTION_8	IF_1
0x4000a9c	            0x85c0	                           test eax, eax	       294	ws.c	FUNCTION_8	IF_1
0x4000a9e	     0xf84c7000000	                            je 0x4000b6b	       294	ws.c	FUNCTION_8	IF_1
0x4000aa4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000aa8	            0x7e56	                           jle 0x4000b00	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000aaa	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000aad	            0x4898	                                    cdqe	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000aaf	        0x488d50ff	                      lea rdx, [rax - 1]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ab3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ab7	          0x4801d0	                            add rax, rdx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000aba	           0xfb600	                   movzx eax, byte [rax]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000abd	            0x3c0a	                             cmp al, 0xa	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000abf	            0x753f	                           jne 0x4000b00	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ac1	    0xc745d8010000	               mov dword [rbp - 0x28], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ac8	        0x836dbc01	               sub dword [rbp - 0x44], 1	       297	ws.c	FUNCTION_8	IF_1	IF_2
0x4000acc	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ad0	            0x7e2e	                           jle 0x4000b00	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ad2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ad5	            0x4898	                                    cdqe	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ad7	        0x488d50ff	                      lea rdx, [rax - 1]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000adb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000adf	          0x4801d0	                            add rax, rdx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ae2	           0xfb600	                   movzx eax, byte [rax]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ae5	            0x3c0d	                             cmp al, 0xd	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ae7	            0x7517	                           jne 0x4000b00	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ae9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000aec	      0x2500020000	                          and eax, 0x200	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000af1	            0x85c0	                           test eax, eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000af3	           0xf95c0	                                setne al	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000af6	           0xfb6c0	                           movzx eax, al	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000af9	          0x8945dc	             mov dword [rbp - 0x24], eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000afc	        0x836dbc01	               sub dword [rbp - 0x44], 1	       300	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000b00	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b04	            0x7e65	                           jle 0x4000b6b	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b06	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b09	            0x4898	                                    cdqe	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b0b	        0x488d50ff	                      lea rdx, [rax - 1]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b0f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b13	          0x4801d0	                            add rax, rdx	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b16	           0xfb600	                   movzx eax, byte [rax]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b19	           0xfb6c0	                           movzx eax, al	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b1c	            0x4898	                                    cdqe	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b1e	     0xfb680000000	                   movzx eax, byte [rax]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b25	           0xfb6c0	                           movzx eax, al	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b28	          0x83e001	                              and eax, 1	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b2b	            0x85c0	                           test eax, eax	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b2d	            0x743c	                            je 0x4000b6b	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000b2f	            0xeb04	                           jmp 0x4000b35	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b31	        0x836dbc01	               sub dword [rbp - 0x44], 1	       305	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1
0x4000b35	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b39	            0x7e29	                           jle 0x4000b64	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b3b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b3e	            0x4898	                                    cdqe	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b40	        0x488d50ff	                      lea rdx, [rax - 1]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b44	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b48	          0x4801d0	                            add rax, rdx	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b4b	           0xfb600	                   movzx eax, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b4e	           0xfb6c0	                           movzx eax, al	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b51	            0x4898	                                    cdqe	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b53	     0xfb680000000	                   movzx eax, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b5a	           0xfb6c0	                           movzx eax, al	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b5d	          0x83e001	                              and eax, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b60	            0x85c0	                           test eax, eax	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b62	            0x75cd	                           jne 0x4000b31	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000b64	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000b6b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       313	ws.c	FUNCTION_8	FOR_1
0x4000b72	            0xeb6f	                           jmp 0x4000be3	       313	ws.c	FUNCTION_8	FOR_1
0x4000b74	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       314	ws.c	FUNCTION_8	FOR_1
0x4000b77	          0x4863d0	                         movsxd rdx, eax	       314	ws.c	FUNCTION_8	FOR_1
0x4000b7a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       314	ws.c	FUNCTION_8	FOR_1
0x4000b7e	          0x4801d0	                            add rax, rdx	       314	ws.c	FUNCTION_8	FOR_1
0x4000b81	           0xfb600	                   movzx eax, byte [rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000b84	          0x8845d2	               mov byte [rbp - 0x2e], al	       314	ws.c	FUNCTION_8	FOR_1
0x4000b87	        0x807dd209	                cmp byte [rbp - 0x2e], 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000b8b	            0x7521	                           jne 0x4000bae	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000b8d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       316	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000b90	          0x8945e4	             mov dword [rbp - 0x1c], eax	       316	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000b93	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000b96	      0x2580000000	                           and eax, 0x80	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000b9b	            0x85c0	                           test eax, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000b9d	            0x7440	                            je 0x4000bdf	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000b9f	        0x837de800	               cmp dword [rbp - 0x18], 0	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000ba3	            0x783a	                            js 0x4000bdf	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000ba5	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000bac	            0xeb31	                           jmp 0x4000bdf	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000bae	        0x807dd220	            cmp byte [rbp - 0x2e], 0x20 	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000bb2	            0x7539	                           jne 0x4000bed	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000bb4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       321	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000bb7	          0x8945e8	             mov dword [rbp - 0x18], eax	       321	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000bba	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bbd	      0x2500010000	                          and eax, 0x100	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bc2	            0x85c0	                           test eax, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bc4	            0x7419	                            je 0x4000bdf	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bc6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0x4000bc9	          0x83e03f	                           and eax, 0x3f	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0x4000bcc	            0x89c2	                            mov edx, eax	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0x4000bce	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0x4000bd1	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0x4000bd4	            0x39c2	                            cmp edx, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bd6	            0x7707	                            ja 0x4000bdf	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bd8	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000bdf	        0x8345d401	               add dword [rbp - 0x2c], 1	       313	ws.c	FUNCTION_8	FOR_1
0x4000be3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       313	ws.c	FUNCTION_8	FOR_1
0x4000be6	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       313	ws.c	FUNCTION_8	FOR_1
0x4000be9	            0x7c89	                            jl 0x4000b74	       313	ws.c	FUNCTION_8	FOR_1
0x4000beb	            0xeb01	                           jmp 0x4000bee	       313	ws.c	FUNCTION_8	FOR_1
0x4000bed	              0x90	                                     nop	       326	ws.c	FUNCTION_8	FOR_1	ELSE_2
0x4000bee	        0x837dec00	               cmp dword [rbp - 0x14], 0	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bf2	     0xf84e7000000	                            je 0x4000cdf	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bf8	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       331	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000c02	          0x83c001	                              add eax, 1	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000c05	          0x8945f4	              mov dword [rbp - 0xc], eax	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000c08	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0x4000c0b	      0x2500010000	                          and eax, 0x100	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0x4000c10	            0x85c0	                           test eax, eax	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0x4000c12	            0x741c	                            je 0x4000c30	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0x4000c14	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c17	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c1a	            0x7d0b	                           jge 0x4000c27	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c1c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c1f	          0x83c001	                              add eax, 1	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c22	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c25	            0xeb09	                           jmp 0x4000c30	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000c27	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0x4000c2a	          0x83c001	                              add eax, 1	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0x4000c2d	          0x8945f4	              mov dword [rbp - 0xc], eax	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0x4000c30	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c37	            0xeb63	                           jmp 0x4000c9c	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c39	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c3c	          0x4863d0	                         movsxd rdx, eax	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c3f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c43	          0x4801d0	                            add rax, rdx	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c46	           0xfb600	                   movzx eax, byte [rax]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c49	          0x8845d3	               mov byte [rbp - 0x2d], al	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c4c	        0x807dd320	            cmp byte [rbp - 0x2d], 0x20 	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000c50	            0x741b	                            je 0x4000c6d	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000c52	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000c59	         0xfbe55d3	            movsx edx, byte [rbp - 0x2d]	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c61	            0x89d6	                            mov esi, edx	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c63	          0x4889c7	                            mov rdi, rax	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c66	      0xe80bf4ffff	                   call sym.strbuf_addch	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c6b	            0xeb2b	                           jmp 0x4000c98	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0x4000c6d	        0x8345f001	               add dword [rbp - 0x10], 1	       352	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4
0x4000c71	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c74	          0x83e03f	                           and eax, 0x3f	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c77	            0x89c2	                            mov edx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c79	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c7c	            0x39c2	                            cmp edx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c7e	            0x7518	                           jne 0x4000c98	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000c80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0x4000c84	      0xbe09000000	                              mov esi, 9	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0x4000c89	          0x4889c7	                            mov rdi, rax	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0x4000c8c	      0xe8e5f3ffff	                   call sym.strbuf_addch	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0x4000c91	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0x4000c98	        0x8345d401	               add dword [rbp - 0x2c], 1	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c9c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000c9f	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000ca2	            0x7c95	                            jl 0x4000c39	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000ca4	            0xeb11	                           jmp 0x4000cb7	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ca6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0x4000caa	      0xbe20000000	                           mov esi, 0x20	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0x4000caf	          0x4889c7	                            mov rdi, rax	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0x4000cb2	      0xe8bff3ffff	                   call sym.strbuf_addch	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0x4000cb7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000cba	          0x8d50ff	                      lea edx, [rax - 1]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000cbd	          0x8955f0	             mov dword [rbp - 0x10], edx	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000cc0	            0x85c0	                           test eax, eax	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000cc2	            0x7fe2	                            jg 0x4000ca6	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000cc4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000cc7	          0x2945bc	             sub dword [rbp - 0x44], eax	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000cca	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000ccd	            0x4898	                                    cdqe	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000ccf	        0x480145c0	            add qword [rbp - 0x40], rax 	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000cd3	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000cda	      0xe9cd000000	                           jmp 0x4000dac	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000cdf	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000ce2	      0x2500080000	                          and eax, 0x800	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000ce7	            0x85c0	                           test eax, eax	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000ce9	     0xf84bd000000	                            je 0x4000dac	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cef	        0x837de400	               cmp dword [rbp - 0x1c], 0	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cf3	     0xf88b3000000	                            js 0x4000dac	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cf9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cfd	        0x488b4008	                mov rax, qword [rax + 8]	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d01	          0x8945f8	                mov dword [rbp - 8], eax	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d04	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d07	          0x83c001	                              add eax, 1	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d0a	          0x8945fc	                mov dword [rbp - 4], eax	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d0d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d14	            0xeb78	                           jmp 0x4000d8e	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d16	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d19	          0x4863d0	                         movsxd rdx, eax	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d1c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d20	          0x4801d0	                            add rax, rdx	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d23	           0xfb600	                   movzx eax, byte [rax]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d26	            0x3c09	                               cmp al, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d28	            0x753f	                           jne 0x4000d69	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0x4000d2e	      0xbe20000000	                           mov esi, 0x20	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0x4000d33	          0x4889c7	                            mov rdi, rax	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0x4000d36	      0xe83bf3ffff	                   call sym.strbuf_addch	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0x4000d3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d3f	        0x488b5008	                mov rdx, qword [rax + 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d43	          0x8b45f8	                mov eax, dword [rbp - 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d46	            0x4898	                                    cdqe	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d48	          0x4829c2	                            sub rdx, rax	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d4b	          0x4889d0	                            mov rax, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d4e	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d51	          0x4889d1	                            mov rcx, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d54	          0x83e13f	                           and ecx, 0x3f	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d57	      0xba00000000	                              mov edx, 0	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d5c	          0x48f7f1	                                 div rcx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d5f	          0x4889d0	                            mov rax, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d62	          0x4885c0	                           test rax, rax	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d65	            0x75c3	                           jne 0x4000d2a	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d67	            0xeb21	                           jmp 0x4000d8a	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000d69	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d6c	          0x4863d0	                         movsxd rdx, eax	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d6f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d73	          0x4801d0	                            add rax, rdx	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d76	           0xfb600	                   movzx eax, byte [rax]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d79	           0xfbed0	                           movsx edx, al	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d7c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d80	            0x89d6	                            mov esi, edx	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d82	          0x4889c7	                            mov rdi, rax	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d85	      0xe8ecf2ffff	                   call sym.strbuf_addch	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0x4000d8a	        0x8345d401	               add dword [rbp - 0x2c], 1	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d8e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d91	          0x3b45fc	                cmp eax, dword [rbp - 4]	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d94	            0x7c80	                            jl 0x4000d16	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d96	          0x8b45fc	                mov eax, dword [rbp - 4]	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d99	          0x2945bc	             sub dword [rbp - 0x44], eax	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d9c	          0x8b45fc	                mov eax, dword [rbp - 4]	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000d9f	            0x4898	                                    cdqe	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000da1	        0x480145c0	            add qword [rbp - 0x40], rax 	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000da5	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       378	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000dac	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       381	ws.c	FUNCTION_8	CALL_11
0x4000daf	          0x4863d0	                         movsxd rdx, eax	       381	ws.c	FUNCTION_8	CALL_11
0x4000db2	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       381	ws.c	FUNCTION_8	CALL_11
0x4000db6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       381	ws.c	FUNCTION_8	CALL_11
0x4000dba	          0x4889ce	                            mov rsi, rcx	       381	ws.c	FUNCTION_8	CALL_11
0x4000dbd	          0x4889c7	                            mov rdi, rax	       381	ws.c	FUNCTION_8	CALL_11
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       381	ws.c	FUNCTION_8	CALL_11
0x4000dc5	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       382	ws.c	FUNCTION_8	IF_16
0x4000dc9	            0x7411	                            je 0x4000ddc	       382	ws.c	FUNCTION_8	IF_16
0x4000dcb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       383	ws.c	FUNCTION_8	CALL_12
0x4000dcf	      0xbe0d000000	                            mov esi, 0xd	       383	ws.c	FUNCTION_8	CALL_12
0x4000dd4	          0x4889c7	                            mov rdi, rax	       383	ws.c	FUNCTION_8	CALL_12
0x4000dd7	      0xe89af2ffff	                   call sym.strbuf_addch	       383	ws.c	FUNCTION_8	CALL_12
0x4000ddc	        0x837dd800	               cmp dword [rbp - 0x28], 0	       384	ws.c	FUNCTION_8	IF_17
0x4000de0	            0x7411	                            je 0x4000df3	       384	ws.c	FUNCTION_8	IF_17
0x4000de2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       385	ws.c	FUNCTION_8	CALL_13
0x4000de6	      0xbe0a000000	                            mov esi, 0xa	       385	ws.c	FUNCTION_8	CALL_13
0x4000deb	          0x4889c7	                            mov rdi, rax	       385	ws.c	FUNCTION_8	CALL_13
0x4000dee	      0xe883f2ffff	                   call sym.strbuf_addch	       385	ws.c	FUNCTION_8	CALL_13
0x4000df3	        0x837de000	               cmp dword [rbp - 0x20], 0	       386	ws.c	FUNCTION_8	IF_18
0x4000df7	            0x7416	                            je 0x4000e0f	       386	ws.c	FUNCTION_8	IF_18
0x4000df9	      0x48837db000	               cmp qword [rbp - 0x50], 0	       386	ws.c	FUNCTION_8	IF_18
0x4000dfe	            0x740f	                            je 0x4000e0f	       386	ws.c	FUNCTION_8	IF_18
0x4000e00	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	ws.c	FUNCTION_8	IF_18
0x4000e04	            0x8b00	                    mov eax, dword [rax]	       387	ws.c	FUNCTION_8	IF_18
0x4000e06	          0x8d5001	                      lea edx, [rax + 1]	       387	ws.c	FUNCTION_8	IF_18
0x4000e09	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	ws.c	FUNCTION_8	IF_18
0x4000e0d	            0x8910	                    mov dword [rax], edx	       387	ws.c	FUNCTION_8	IF_18
0x4000e0f	              0x90	                                     nop	       388	ws.c	FUNCTION_8
0x4000e10	              0xc9	                                   leave	       388	ws.c	FUNCTION_8
0x4000e11	              0xc3	                                     ret	       388	ws.c	FUNCTION_8
whitespace_error_string	IF,10:CALL,11:WHILE,0:FOR,0:SWITCH,0:ELSE,1:functions,0:DO,0	97
0x40003d3	              0x55	                                push rbp	       111	ws.c	FUNCTION_3
0x40003d4	          0x4889e5	                            mov rbp, rsp	       111	ws.c	FUNCTION_3
0x40003d7	        0x4883ec30	                           sub rsp, 0x30	       111	ws.c	FUNCTION_3
0x40003db	          0x897ddc	             mov dword [rbp - 0x24], edi	       111	ws.c	FUNCTION_3
0x40003de	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	ws.c	FUNCTION_3
0x40003e7	        0x488945f8	                mov qword [rbp - 8], rax	       111	ws.c	FUNCTION_3
0x40003eb	            0x31c0	                            xor eax, eax	       111	ws.c	FUNCTION_3
0x40003ed	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       112	ws.c	FUNCTION_3
0x40003f5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       112	ws.c	FUNCTION_3
0x40003fd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       112	ws.c	FUNCTION_3
0x4000405	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       113	ws.c	FUNCTION_3	IF_1
0x4000408	      0x2540040000	                          and eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x400040d	      0x3d40040000	                          cmp eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000412	            0x7513	                           jne 0x4000427	       113	ws.c	FUNCTION_3	IF_1
0x4000414	        0x488d45e0	                   lea rax, [rbp - 0x20]	       114	ws.c	FUNCTION_3	CALL_1
0x4000418	      0xbe00000000	                              mov esi, 0	       114	ws.c	FUNCTION_3	CALL_1
0x400041d	          0x4889c7	                            mov rdi, rax	       114	ws.c	FUNCTION_3	CALL_1
0x4000420	      0xe8bffcffff	                  call sym.strbuf_addstr	       114	ws.c	FUNCTION_3	CALL_1
0x4000425	            0xeb52	                           jmp 0x4000479	       114	ws.c	FUNCTION_3	CALL_1
0x4000427	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x400042a	          0x83e040	                           and eax, 0x40	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x400042d	            0x85c0	                           test eax, eax	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x400042f	            0x7411	                            je 0x4000442	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x4000431	        0x488d45e0	                   lea rax, [rbp - 0x20]	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x4000435	      0xbe00000000	                              mov esi, 0	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x400043a	          0x4889c7	                            mov rdi, rax	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x400043d	      0xe8a2fcffff	                  call sym.strbuf_addstr	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x4000442	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x4000445	      0x2500040000	                          and eax, 0x400	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400044a	            0x85c0	                           test eax, eax	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400044c	            0x742b	                            je 0x4000479	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400044e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000452	          0x4885c0	                           test rax, rax	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000455	            0x7411	                            je 0x4000468	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000457	        0x488d45e0	                   lea rax, [rbp - 0x20]	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x400045b	      0xbe00000000	                              mov esi, 0	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x4000460	          0x4889c7	                            mov rdi, rax	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x4000463	      0xe87cfcffff	                  call sym.strbuf_addstr	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x4000468	        0x488d45e0	                   lea rax, [rbp - 0x20]	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x400046c	      0xbe00000000	                              mov esi, 0	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x4000471	          0x4889c7	                            mov rdi, rax	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x4000474	      0xe86bfcffff	                  call sym.strbuf_addstr	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x4000479	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	ws.c	FUNCTION_3	IF_5
0x400047c	      0x2580000000	                           and eax, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x4000481	            0x85c0	                           test eax, eax	       124	ws.c	FUNCTION_3	IF_5
0x4000483	            0x742b	                            je 0x40004b0	       124	ws.c	FUNCTION_3	IF_5
0x4000485	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x4000489	          0x4885c0	                           test rax, rax	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x400048c	            0x7411	                            je 0x400049f	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x400048e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x4000492	      0xbe00000000	                              mov esi, 0	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x4000497	          0x4889c7	                            mov rdi, rax	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x400049a	      0xe845fcffff	                  call sym.strbuf_addstr	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x400049f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x40004a3	      0xbe00000000	                              mov esi, 0	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x40004a8	          0x4889c7	                            mov rdi, rax	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x40004ab	      0xe834fcffff	                  call sym.strbuf_addstr	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x40004b0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	ws.c	FUNCTION_3	IF_7
0x40004b3	      0x2500010000	                          and eax, 0x100	       129	ws.c	FUNCTION_3	IF_7
0x40004b8	            0x85c0	                           test eax, eax	       129	ws.c	FUNCTION_3	IF_7
0x40004ba	            0x742b	                            je 0x40004e7	       129	ws.c	FUNCTION_3	IF_7
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x40004c0	          0x4885c0	                           test rax, rax	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x40004c3	            0x7411	                            je 0x40004d6	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x40004c5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x40004c9	      0xbe00000000	                              mov esi, 0	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x40004ce	          0x4889c7	                            mov rdi, rax	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x40004d1	      0xe80efcffff	                  call sym.strbuf_addstr	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x40004d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x40004da	      0xbe00000000	                              mov esi, 0	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x40004df	          0x4889c7	                            mov rdi, rax	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x40004e2	      0xe8fdfbffff	                  call sym.strbuf_addstr	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x40004e7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       134	ws.c	FUNCTION_3	IF_9
0x40004ea	      0x2500080000	                          and eax, 0x800	       134	ws.c	FUNCTION_3	IF_9
0x40004ef	            0x85c0	                           test eax, eax	       134	ws.c	FUNCTION_3	IF_9
0x40004f1	            0x742b	                            je 0x400051e	       134	ws.c	FUNCTION_3	IF_9
0x40004f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40004f7	          0x4885c0	                           test rax, rax	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40004fa	            0x7411	                            je 0x400050d	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40004fc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4000500	      0xbe00000000	                              mov esi, 0	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4000505	          0x4889c7	                            mov rdi, rax	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4000508	      0xe8d7fbffff	                  call sym.strbuf_addstr	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x400050d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4000511	      0xbe00000000	                              mov esi, 0	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4000516	          0x4889c7	                            mov rdi, rax	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4000519	      0xe8c6fbffff	                  call sym.strbuf_addstr	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x400051e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       139	ws.c	FUNCTION_3	CALL_11
0x4000522	      0xbe00000000	                              mov esi, 0	       139	ws.c	FUNCTION_3	CALL_11
0x4000527	          0x4889c7	                            mov rdi, rax	       139	ws.c	FUNCTION_3	CALL_11
0x400052a	      0xe800000000	                          call 0x400052f	       139	ws.c	FUNCTION_3	CALL_11
0x400052f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       140	ws.c	FUNCTION_3
0x4000533	    0x644833142528	                xor rdx, qword fs:[0x28]	       140	ws.c	FUNCTION_3
0x400053c	            0x7405	                            je 0x4000543	       140	ws.c	FUNCTION_3
0x400053e	      0xe800000000	                          call 0x4000543	       140	ws.c	FUNCTION_3
0x4000543	              0xc9	                                   leave	       140	ws.c	FUNCTION_3
0x4000544	              0xc3	                                     ret	       140	ws.c	FUNCTION_3
