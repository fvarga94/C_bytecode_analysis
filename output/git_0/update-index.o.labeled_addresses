hashcmp	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	13
0x40003f1	              0x55	                                push rbp	       974	cache.h	FUNCTION_8
0x40003f2	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_8
0x40003f5	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_8
0x40003f9	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_8
0x40003fd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_8
0x4000401	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_8	CALL_1
0x4000405	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_8	CALL_1
0x4000409	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_8	CALL_1
0x400040e	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_8	CALL_1
0x4000411	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_8	CALL_1
0x4000414	      0xe800000000	                          call 0x4000419	       975	cache.h	FUNCTION_8	CALL_1
0x4000419	              0xc9	                                   leave	       976	cache.h	FUNCTION_8
0x400041a	              0xc3	                                     ret	       976	cache.h	FUNCTION_8
cacheinfo_callback	IF,4:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,7:ELSE,0	116
0x4002578	              0x55	                                push rbp	       837	update-index.c	FUNCTION_59
0x4002579	          0x4889e5	                            mov rbp, rsp	       837	update-index.c	FUNCTION_59
0x400257c	        0x4883ec50	                           sub rsp, 0x50	       837	update-index.c	FUNCTION_59
0x4002580	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       837	update-index.c	FUNCTION_59
0x4002584	        0x488975c0	             mov qword [rbp - 0x40], rsi	       837	update-index.c	FUNCTION_59
0x4002588	          0x8955bc	             mov dword [rbp - 0x44], edx	       837	update-index.c	FUNCTION_59
0x400258b	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	update-index.c	FUNCTION_59
0x4002594	        0x488945f8	                mov qword [rbp - 8], rax	       837	update-index.c	FUNCTION_59
0x4002598	            0x31c0	                            xor eax, eax	       837	update-index.c	FUNCTION_59
0x400259a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x400259e	          0x488b00	                    mov rax, qword [rax]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025a1	        0x4883c008	                              add rax, 8	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025a5	          0x488b00	                    mov rax, qword [rax]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025a8	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025ac	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025b0	        0x488d75d4	                   lea rsi, [rbp - 0x2c]	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025b4	          0x4889c7	                            mov rdi, rax	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025b7	      0xe8bbfeffff	      call sym.parse_new_style_cacheinfo	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025bc	            0x85c0	                           test eax, eax	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025be	            0x755e	                           jne 0x400261e	       842	update-index.c	FUNCTION_59	IF_1	CALL_1
0x40025c0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025c4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025c7	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025cb	      0xb900000000	                              mov ecx, 0	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025d0	            0x89c7	                            mov edi, eax	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025d2	      0xe84cefffff	                  call sym.add_cacheinfo	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025d7	            0x85c0	                           test eax, eax	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025d9	            0x7416	                            je 0x40025f1	       843	update-index.c	FUNCTION_59	IF_1	IF_2	CALL_2
0x40025db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	update-index.c	FUNCTION_59	IF_1	CALL_3
0x40025df	          0x4889c6	                            mov rsi, rax	       844	update-index.c	FUNCTION_59	IF_1	CALL_3
0x40025e2	      0xbf00000000	                              mov edi, 0	       844	update-index.c	FUNCTION_59	IF_1	CALL_3
0x40025e7	      0xb800000000	                              mov eax, 0	       844	update-index.c	FUNCTION_59	IF_1	CALL_3
0x40025ec	      0xe800000000	                          call 0x40025f1	       844	update-index.c	FUNCTION_59	IF_1	CALL_3
0x40025f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	update-index.c	FUNCTION_59	IF_1
0x40025f5	          0x488b00	                    mov rax, qword [rax]	       845	update-index.c	FUNCTION_59	IF_1
0x40025f8	        0x488d5008	                      lea rdx, [rax + 8]	       845	update-index.c	FUNCTION_59	IF_1
0x40025fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	update-index.c	FUNCTION_59	IF_1
0x4002600	          0x488910	                    mov qword [rax], rdx	       845	update-index.c	FUNCTION_59	IF_1
0x4002603	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       846	update-index.c	FUNCTION_59	IF_1
0x4002607	          0x8b4010	            mov eax, dword [rax + 0x10] 	       846	update-index.c	FUNCTION_59	IF_1
0x400260a	          0x8d50ff	                      lea edx, [rax - 1]	       846	update-index.c	FUNCTION_59	IF_1
0x400260d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       846	update-index.c	FUNCTION_59	IF_1
0x4002611	          0x895010	             mov dword [rax + 0x10], edx	       846	update-index.c	FUNCTION_59	IF_1
0x4002614	      0xb800000000	                              mov eax, 0	       847	update-index.c	FUNCTION_59	IF_1
0x4002619	      0xe9ea000000	                           jmp 0x4002708	       847	update-index.c	FUNCTION_59	IF_1
0x400261e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       849	update-index.c	FUNCTION_59	IF_3
0x4002622	          0x8b4010	            mov eax, dword [rax + 0x10] 	       849	update-index.c	FUNCTION_59	IF_3
0x4002625	          0x83f803	                              cmp eax, 3	       849	update-index.c	FUNCTION_59	IF_3
0x4002628	            0x7f19	                            jg 0x4002643	       849	update-index.c	FUNCTION_59	IF_3
0x400262a	      0xbf00000000	                              mov edi, 0	       850	update-index.c	FUNCTION_59	IF_3
0x400262f	      0xb800000000	                              mov eax, 0	       850	update-index.c	FUNCTION_59	IF_3
0x4002634	      0xe800000000	                          call 0x4002639	       850	update-index.c	FUNCTION_59	IF_3
0x4002639	      0xe802daffff	                    call sym.const_error	       850	update-index.c	FUNCTION_59	IF_3
0x400263e	      0xe9c5000000	                           jmp 0x4002708	       850	update-index.c	FUNCTION_59	IF_3
0x4002643	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002647	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x400264a	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x400264e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002652	          0x488910	                    mov qword [rax], rdx	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002655	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002659	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x400265c	          0x488b00	                    mov rax, qword [rax]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x400265f	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002663	      0xbe08000000	                              mov esi, 8	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002668	          0x4889c7	                            mov rdi, rax	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x400266b	      0xe8dbd9ffff	                     call sym.strtoul_ui	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002670	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002672	            0x7562	                           jne 0x40026d6	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002674	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x4002678	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400267b	        0x488d5008	                      lea rdx, [rax + 8]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400267f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002683	          0x488910	                    mov qword [rax], rdx	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x4002686	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400268a	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400268d	          0x488b00	                    mov rax, qword [rax]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x4002690	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x4002694	          0x4889d6	                            mov rsi, rdx	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x4002697	          0x4889c7	                            mov rdi, rax	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400269a	      0xe800000000	                          call 0x400269f	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x400269f	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x40026a1	            0x7533	                           jne 0x40026d6	       851	update-index.c	FUNCTION_59	IF_4	CALL_4
0x40026a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026a7	          0x488b00	                    mov rax, qword [rax]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026aa	        0x488d5008	                      lea rdx, [rax + 8]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x40026b2	          0x488910	                    mov qword [rax], rdx	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x40026b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026b9	          0x488b00	                    mov rax, qword [rax]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026bc	          0x488b10	                    mov rdx, qword [rax]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026bf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026c2	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026c6	      0xb900000000	                              mov ecx, 0	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026cb	            0x89c7	                            mov edi, eax	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026cd	      0xe851eeffff	                  call sym.add_cacheinfo	       853	update-index.c	FUNCTION_59	IF_4	CALL_6
0x40026d2	            0x85c0	                           test eax, eax	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x40026d4	            0x741c	                            je 0x40026f2	       852	update-index.c	FUNCTION_59	IF_4	CALL_5
0x40026d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       854	update-index.c	FUNCTION_59	CALL_7
0x40026da	          0x488b00	                    mov rax, qword [rax]	       854	update-index.c	FUNCTION_59	CALL_7
0x40026dd	          0x488b00	                    mov rax, qword [rax]	       854	update-index.c	FUNCTION_59	CALL_7
0x40026e0	          0x4889c6	                            mov rsi, rax	       854	update-index.c	FUNCTION_59	CALL_7
0x40026e3	      0xbf00000000	                              mov edi, 0	       854	update-index.c	FUNCTION_59	CALL_7
0x40026e8	      0xb800000000	                              mov eax, 0	       854	update-index.c	FUNCTION_59	CALL_7
0x40026ed	      0xe800000000	                          call 0x40026f2	       854	update-index.c	FUNCTION_59	CALL_7
0x40026f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	update-index.c	FUNCTION_59
0x40026f6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       855	update-index.c	FUNCTION_59
0x40026f9	          0x8d50fd	                      lea edx, [rax - 3]	       855	update-index.c	FUNCTION_59
0x40026fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	update-index.c	FUNCTION_59
0x4002700	          0x895010	             mov dword [rax + 0x10], edx	       855	update-index.c	FUNCTION_59
0x4002703	      0xb800000000	                              mov eax, 0	       856	update-index.c	FUNCTION_59
0x4002708	        0x488b4df8	                mov rcx, qword [rbp - 8]	       857	update-index.c	FUNCTION_59
0x400270c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       857	update-index.c	FUNCTION_59
0x4002715	            0x7405	                            je 0x400271c	       857	update-index.c	FUNCTION_59
0x4002717	      0xe800000000	                          call 0x400271c	       857	update-index.c	FUNCTION_59
0x400271c	              0xc9	                                   leave	       857	update-index.c	FUNCTION_59
0x400271d	              0xc3	                                     ret	       857	update-index.c	FUNCTION_59
chmod_callback	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	39
0x40023d6	              0x55	                                push rbp	       797	update-index.c	FUNCTION_56
0x40023d7	          0x4889e5	                            mov rbp, rsp	       797	update-index.c	FUNCTION_56
0x40023da	        0x4883ec30	                           sub rsp, 0x30	       797	update-index.c	FUNCTION_56
0x40023de	        0x48897de8	             mov qword [rbp - 0x18], rdi	       797	update-index.c	FUNCTION_56
0x40023e2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       797	update-index.c	FUNCTION_56
0x40023e6	          0x8955dc	             mov dword [rbp - 0x24], edx	       797	update-index.c	FUNCTION_56
0x40023e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	update-index.c	FUNCTION_56
0x40023ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	       798	update-index.c	FUNCTION_56
0x40023f1	        0x488945f8	                mov qword [rbp - 8], rax	       798	update-index.c	FUNCTION_56
0x40023f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_56	IF_1
0x40023f9	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_56	IF_1
0x40023fc	            0x3c2d	                            cmp al, 0x2d	       799	update-index.c	FUNCTION_56	IF_1
0x40023fe	            0x740b	                            je 0x400240b	       799	update-index.c	FUNCTION_56	IF_1
0x4002400	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_56	IF_1
0x4002404	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_56	IF_1
0x4002407	            0x3c2b	                            cmp al, 0x2b	       799	update-index.c	FUNCTION_56	IF_1
0x4002409	            0x751e	                           jne 0x4002429	       799	update-index.c	FUNCTION_56	IF_1
0x400240b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_56	IF_1
0x400240f	        0x4883c001	                              add rax, 1	       799	update-index.c	FUNCTION_56	IF_1
0x4002413	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_56	IF_1
0x4002416	            0x3c78	                            cmp al, 0x78	       799	update-index.c	FUNCTION_56	IF_1
0x4002418	            0x750f	                           jne 0x4002429	       799	update-index.c	FUNCTION_56	IF_1
0x400241a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       799	update-index.c	FUNCTION_56	IF_1
0x400241e	        0x4883c002	                              add rax, 2	       799	update-index.c	FUNCTION_56	IF_1
0x4002422	           0xfb600	                   movzx eax, byte [rax]	       799	update-index.c	FUNCTION_56	IF_1
0x4002425	            0x84c0	                             test al, al	       799	update-index.c	FUNCTION_56	IF_1
0x4002427	            0x7416	                            je 0x400243f	       799	update-index.c	FUNCTION_56	IF_1
0x4002429	      0xbf00000000	                              mov edi, 0	       800	update-index.c	FUNCTION_56	IF_1
0x400242e	      0xb800000000	                              mov eax, 0	       800	update-index.c	FUNCTION_56	IF_1
0x4002433	      0xe800000000	                          call 0x4002438	       800	update-index.c	FUNCTION_56	IF_1
0x4002438	      0xe803dcffff	                    call sym.const_error	       800	update-index.c	FUNCTION_56	IF_1
0x400243d	            0xeb12	                           jmp 0x4002451	       800	update-index.c	FUNCTION_56	IF_1
0x400243f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       801	update-index.c	FUNCTION_56
0x4002443	           0xfb610	                   movzx edx, byte [rax]	       801	update-index.c	FUNCTION_56
0x4002446	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	update-index.c	FUNCTION_56
0x400244a	            0x8810	                      mov byte [rax], dl	       801	update-index.c	FUNCTION_56
0x400244c	      0xb800000000	                              mov eax, 0	       802	update-index.c	FUNCTION_56
0x4002451	              0xc9	                                   leave	       803	update-index.c	FUNCTION_56
0x4002452	              0xc3	                                     ret	       803	update-index.c	FUNCTION_56
avoid_racy	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	7
0x40008a4	              0x55	                                push rbp	       117	update-index.c	FUNCTION_36
0x40008a5	          0x4889e5	                            mov rbp, rsp	       117	update-index.c	FUNCTION_36
0x40008a8	      0xbf01000000	                              mov edi, 1	       123	update-index.c	FUNCTION_36	CALL_1
0x40008ad	      0xe800000000	                          call 0x40008b2	       123	update-index.c	FUNCTION_36	CALL_1
0x40008b2	              0x90	                                     nop	       124	update-index.c	FUNCTION_36
0x40008b3	              0x5d	                                 pop rbp	       124	update-index.c	FUNCTION_36
0x40008b4	              0xc3	                                     ret	       124	update-index.c	FUNCTION_36
parse_new_style_cacheinfo	IF,3:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	72
0x4002477	              0x55	                                push rbp	       816	update-index.c	FUNCTION_58
0x4002478	          0x4889e5	                            mov rbp, rsp	       816	update-index.c	FUNCTION_58
0x400247b	        0x4883ec40	                           sub rsp, 0x40	       816	update-index.c	FUNCTION_58
0x400247f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       816	update-index.c	FUNCTION_58
0x4002483	        0x488975d0	             mov qword [rbp - 0x30], rsi	       816	update-index.c	FUNCTION_58
0x4002487	        0x488955c8	             mov qword [rbp - 0x38], rdx	       816	update-index.c	FUNCTION_58
0x400248b	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       816	update-index.c	FUNCTION_58
0x400248f	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	update-index.c	FUNCTION_58
0x4002498	        0x488945f8	                mov qword [rbp - 8], rax	       816	update-index.c	FUNCTION_58
0x400249c	            0x31c0	                            xor eax, eax	       816	update-index.c	FUNCTION_58
0x400249e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       820	update-index.c	FUNCTION_58	IF_1
0x40024a3	            0x750a	                           jne 0x40024af	       820	update-index.c	FUNCTION_58	IF_1
0x40024a5	      0xb8ffffffff	                     mov eax, 0xffffffff	       821	update-index.c	FUNCTION_58	IF_1
0x40024aa	      0xe9b3000000	                           jmp 0x4002562	       821	update-index.c	FUNCTION_58	IF_1
0x40024af	      0xe800000000	                          call 0x40024b4	       823	update-index.c	FUNCTION_58
0x40024b4	    0xc70000000000	                      mov dword [rax], 0	       823	update-index.c	FUNCTION_58
0x40024ba	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       824	update-index.c	FUNCTION_58	CALL_1
0x40024be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	update-index.c	FUNCTION_58	CALL_1
0x40024c2	      0xba08000000	                              mov edx, 8	       824	update-index.c	FUNCTION_58	CALL_1
0x40024c7	          0x4889ce	                            mov rsi, rcx	       824	update-index.c	FUNCTION_58	CALL_1
0x40024ca	          0x4889c7	                            mov rdi, rax	       824	update-index.c	FUNCTION_58	CALL_1
0x40024cd	      0xe800000000	                          call 0x40024d2	       824	update-index.c	FUNCTION_58	CALL_1
0x40024d2	        0x488945f0	             mov qword [rbp - 0x10], rax	       824	update-index.c	FUNCTION_58	CALL_1
0x40024d6	      0xe800000000	                          call 0x40024db	       825	update-index.c	FUNCTION_58	IF_2
0x40024db	            0x8b00	                    mov eax, dword [rax]	       825	update-index.c	FUNCTION_58	IF_2
0x40024dd	            0x85c0	                           test eax, eax	       825	update-index.c	FUNCTION_58	IF_2
0x40024df	            0x7521	                           jne 0x4002502	       825	update-index.c	FUNCTION_58	IF_2
0x40024e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       825	update-index.c	FUNCTION_58	IF_2
0x40024e5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       825	update-index.c	FUNCTION_58	IF_2
0x40024e9	            0x7417	                            je 0x4002502	       825	update-index.c	FUNCTION_58	IF_2
0x40024eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       825	update-index.c	FUNCTION_58	IF_2
0x40024ef	           0xfb600	                   movzx eax, byte [rax]	       825	update-index.c	FUNCTION_58	IF_2
0x40024f2	            0x3c2c	                            cmp al, 0x2c	       825	update-index.c	FUNCTION_58	IF_2
0x40024f4	            0x750c	                           jne 0x4002502	       825	update-index.c	FUNCTION_58	IF_2
0x40024f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       825	update-index.c	FUNCTION_58	IF_2
0x40024fa	            0x89c0	                            mov eax, eax	       825	update-index.c	FUNCTION_58	IF_2
0x40024fc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       825	update-index.c	FUNCTION_58	IF_2
0x4002500	            0x7407	                            je 0x4002509	       825	update-index.c	FUNCTION_58	IF_2
0x4002502	      0xb8ffffffff	                     mov eax, 0xffffffff	       826	update-index.c	FUNCTION_58	IF_2
0x4002507	            0xeb59	                           jmp 0x4002562	       826	update-index.c	FUNCTION_58	IF_2
0x4002509	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       827	update-index.c	FUNCTION_58
0x400250d	            0x89c2	                            mov edx, eax	       827	update-index.c	FUNCTION_58
0x400250f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       827	update-index.c	FUNCTION_58
0x4002513	            0x8910	                    mov dword [rax], edx	       827	update-index.c	FUNCTION_58
0x4002515	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	update-index.c	FUNCTION_58
0x4002519	        0x4883c001	                              add rax, 1	       828	update-index.c	FUNCTION_58
0x400251d	        0x488945e8	             mov qword [rbp - 0x18], rax	       828	update-index.c	FUNCTION_58
0x4002521	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002525	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002529	          0x4889d6	                            mov rsi, rdx	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x400252c	          0x4889c7	                            mov rdi, rax	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x400252f	      0xe800000000	                          call 0x4002534	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002534	            0x85c0	                           test eax, eax	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002536	            0x750f	                           jne 0x4002547	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002538	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x400253c	        0x4883c028	                           add rax, 0x28	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002540	           0xfb600	                   movzx eax, byte [rax]	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002543	            0x3c2c	                            cmp al, 0x2c	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002545	            0x7407	                            je 0x400254e	       829	update-index.c	FUNCTION_58	IF_3	CALL_2
0x4002547	      0xb8ffffffff	                     mov eax, 0xffffffff	       830	update-index.c	FUNCTION_58	IF_3
0x400254c	            0xeb14	                           jmp 0x4002562	       830	update-index.c	FUNCTION_58	IF_3
0x400254e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       831	update-index.c	FUNCTION_58
0x4002552	        0x488d5029	                   lea rdx, [rax + 0x29]	       831	update-index.c	FUNCTION_58
0x4002556	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       831	update-index.c	FUNCTION_58
0x400255a	          0x488910	                    mov qword [rax], rdx	       831	update-index.c	FUNCTION_58
0x400255d	      0xb800000000	                              mov eax, 0	       832	update-index.c	FUNCTION_58
0x4002562	        0x488b4df8	                mov rcx, qword [rbp - 8]	       833	update-index.c	FUNCTION_58
0x4002566	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       833	update-index.c	FUNCTION_58
0x400256f	            0x7405	                            je 0x4002576	       833	update-index.c	FUNCTION_58
0x4002571	      0xe800000000	                          call 0x4002576	       833	update-index.c	FUNCTION_58
0x4002576	              0xc9	                                   leave	       833	update-index.c	FUNCTION_58
0x4002577	              0xc3	                                     ret	       833	update-index.c	FUNCTION_58
cmd_update_index	IF,29:DO,0:FOR,0:functions,0:SWITCH,2:WHILE,2:CALL,89:ELSE,4	666
0x4002968	              0x55	                                push rbp	       918	update-index.c	FUNCTION_64
0x4002969	          0x4889e5	                            mov rbp, rsp	       918	update-index.c	FUNCTION_64
0x400296c	              0x53	                                push rbx	       918	update-index.c	FUNCTION_64
0x400296d	    0x4881ecb80900	                          sub rsp, 0x9b8	       918	update-index.c	FUNCTION_64
0x4002974	    0x89bd5cf6ffff	            mov dword [rbp - 0x9a4], edi	       918	update-index.c	FUNCTION_64
0x400297a	    0x4889b550f6ff	            mov qword [rbp - 0x9b0], rsi	       918	update-index.c	FUNCTION_64
0x4002981	    0x48899548f6ff	            mov qword [rbp - 0x9b8], rdx	       918	update-index.c	FUNCTION_64
0x4002988	    0x64488b042528	                mov rax, qword fs:[0x28]	       918	update-index.c	FUNCTION_64
0x4002991	        0x488945e8	             mov qword [rbp - 0x18], rax	       918	update-index.c	FUNCTION_64
0x4002995	            0x31c0	                            xor eax, eax	       918	update-index.c	FUNCTION_64
0x4002997	    0xc7856cf6ffff	              mov dword [rbp - 0x994], 0	       919	update-index.c	FUNCTION_64
0x40029a1	    0xc78570f6ffff	              mov dword [rbp - 0x990], 0	       919	update-index.c	FUNCTION_64
0x40029ab	    0xc78574f6ffff	    mov dword [rbp - 0x98c], 0xffffffff 	       920	update-index.c	FUNCTION_64
0x40029b5	    0xc78578f6ffff	              mov dword [rbp - 0x988], 0	       921	update-index.c	FUNCTION_64
0x40029bf	    0x4883bd48f6ff	              cmp qword [rbp - 0x9b8], 0	       922	update-index.c	FUNCTION_64	CALL_1
0x40029c7	            0x7411	                            je 0x40029da	       922	update-index.c	FUNCTION_64	CALL_1
0x40029c9	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	       922	update-index.c	FUNCTION_64	CALL_1
0x40029d0	          0x4889c7	                            mov rdi, rax	       922	update-index.c	FUNCTION_64	CALL_1
0x40029d3	      0xe800000000	                          call 0x40029d8	       922	update-index.c	FUNCTION_64	CALL_1
0x40029d8	            0xeb05	                           jmp 0x40029df	       922	update-index.c	FUNCTION_64	CALL_1
0x40029da	      0xb800000000	                              mov eax, 0	       922	update-index.c	FUNCTION_64	CALL_1
0x40029df	    0x898594f6ffff	            mov dword [rbp - 0x96c], eax	       922	update-index.c	FUNCTION_64	CALL_1
0x40029e5	    0xc7857cf6ffff	              mov dword [rbp - 0x984], 0	       923	update-index.c	FUNCTION_64
0x40029ef	    0xc6856bf6ffff	               mov byte [rbp - 0x995], 0	       924	update-index.c	FUNCTION_64
0x40029f6	    0xc785d0f6ffff	              mov dword [rbp - 0x930], 0	       925	update-index.c	FUNCTION_64
0x4002a00	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       925	update-index.c	FUNCTION_64
0x4002a07	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       925	update-index.c	FUNCTION_64
0x4002a0e	    0xc7858cf6ffff	              mov dword [rbp - 0x974], 0	       926	update-index.c	FUNCTION_64
0x4002a18	    0xc78580f6ffff	    mov dword [rbp - 0x980], 0xffffffff 	       927	update-index.c	FUNCTION_64
0x4002a22	    0xc78584f6ffff	              mov dword [rbp - 0x97c], 0	       928	update-index.c	FUNCTION_64
0x4002a2c	    0xc78588f6ffff	    mov dword [rbp - 0x978], 0xffffffff 	       929	update-index.c	FUNCTION_64
0x4002a36	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       930	update-index.c	FUNCTION_64
0x4002a41	    0xc78590f6ffff	              mov dword [rbp - 0x970], 3	       933	update-index.c	FUNCTION_64
0x4002a4b	    0x488d9560f7ff	                  lea rdx, [rbp - 0x8a0]	       934	update-index.c	FUNCTION_64
0x4002a52	      0xb800000000	                              mov eax, 0	       934	update-index.c	FUNCTION_64
0x4002a57	      0xb910010000	                          mov ecx, 0x110	       934	update-index.c	FUNCTION_64
0x4002a5c	          0x4889d7	                            mov rdi, rdx	       934	update-index.c	FUNCTION_64
0x4002a5f	          0xf348ab	              rep stosq qword [rdi], rax	       934	update-index.c	FUNCTION_64
0x4002a62	    0xc78560f7ffff	              mov dword [rbp - 0x8a0], 4	       934	update-index.c	FUNCTION_64
0x4002a6c	    0xc78564f7ffff	          mov dword [rbp - 0x89c], 0x71 	       934	update-index.c	FUNCTION_64
0x4002a76	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002a7d	    0x48898570f7ff	            mov qword [rbp - 0x890], rax	       934	update-index.c	FUNCTION_64
0x4002a84	    0x48c78580f7ff	              mov qword [rbp - 0x880], 0	       934	update-index.c	FUNCTION_64
0x4002a8f	    0xc78588f7ffff	              mov dword [rbp - 0x878], 2	       934	update-index.c	FUNCTION_64
0x4002a99	    0x48c78598f7ff	              mov qword [rbp - 0x868], 4	       934	update-index.c	FUNCTION_64
0x4002aa4	    0xc785a0f7ffff	              mov dword [rbp - 0x860], 4	       934	update-index.c	FUNCTION_64
0x4002aae	    0x48c785a8f7ff	              mov qword [rbp - 0x858], 0	       934	update-index.c	FUNCTION_64
0x4002ab9	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002ac0	    0x488985b0f7ff	            mov qword [rbp - 0x850], rax	       934	update-index.c	FUNCTION_64
0x4002ac7	    0x48c785c0f7ff	              mov qword [rbp - 0x840], 0	       934	update-index.c	FUNCTION_64
0x4002ad2	    0xc785c8f7ffff	              mov dword [rbp - 0x838], 2	       934	update-index.c	FUNCTION_64
0x4002adc	    0x48c785d8f7ff	          mov qword [rbp - 0x828], 0x10 	       934	update-index.c	FUNCTION_64
0x4002ae7	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 7	       934	update-index.c	FUNCTION_64
0x4002af1	    0x48c785e8f7ff	              mov qword [rbp - 0x818], 0	       934	update-index.c	FUNCTION_64
0x4002afc	    0x48c785f0f7ff	              mov qword [rbp - 0x810], 0	       934	update-index.c	FUNCTION_64
0x4002b07	    0x48c78500f8ff	              mov qword [rbp - 0x800], 0	       934	update-index.c	FUNCTION_64
0x4002b12	    0xc78508f8ffff	              mov dword [rbp - 0x7f8], 2	       934	update-index.c	FUNCTION_64
0x4002b1c	    0x48c78518f8ff	              mov qword [rbp - 0x7e8], 1	       934	update-index.c	FUNCTION_64
0x4002b27	    0xc78520f8ffff	              mov dword [rbp - 0x7e0], 7	       934	update-index.c	FUNCTION_64
0x4002b31	    0x48c78528f8ff	              mov qword [rbp - 0x7d8], 0	       934	update-index.c	FUNCTION_64
0x4002b3c	    0x48c78530f8ff	              mov qword [rbp - 0x7d0], 0	       934	update-index.c	FUNCTION_64
0x4002b47	    0x48c78540f8ff	              mov qword [rbp - 0x7c0], 0	       934	update-index.c	FUNCTION_64
0x4002b52	    0xc78548f8ffff	              mov dword [rbp - 0x7b8], 2	       934	update-index.c	FUNCTION_64
0x4002b5c	    0x48c78558f8ff	              mov qword [rbp - 0x7a8], 1	       934	update-index.c	FUNCTION_64
0x4002b67	    0xc78560f8ffff	              mov dword [rbp - 0x7a0], 7	       934	update-index.c	FUNCTION_64
0x4002b71	    0x48c78568f8ff	              mov qword [rbp - 0x798], 0	       934	update-index.c	FUNCTION_64
0x4002b7c	    0x48c78570f8ff	              mov qword [rbp - 0x790], 0	       934	update-index.c	FUNCTION_64
0x4002b87	    0x48c78580f8ff	              mov qword [rbp - 0x780], 0	       934	update-index.c	FUNCTION_64
0x4002b92	    0xc78588f8ffff	              mov dword [rbp - 0x778], 2	       934	update-index.c	FUNCTION_64
0x4002b9c	    0x48c78598f8ff	              mov qword [rbp - 0x768], 1	       934	update-index.c	FUNCTION_64
0x4002ba7	    0xc785a0f8ffff	              mov dword [rbp - 0x760], 4	       934	update-index.c	FUNCTION_64
0x4002bb1	    0x48c785a8f8ff	              mov qword [rbp - 0x758], 0	       934	update-index.c	FUNCTION_64
0x4002bbc	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002bc3	    0x488985b0f8ff	            mov qword [rbp - 0x750], rax	       934	update-index.c	FUNCTION_64
0x4002bca	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	       934	update-index.c	FUNCTION_64
0x4002bd5	    0xc785c8f8ffff	              mov dword [rbp - 0x738], 2	       934	update-index.c	FUNCTION_64
0x4002bdf	    0x48c785d8f8ff	              mov qword [rbp - 0x728], 2	       934	update-index.c	FUNCTION_64
0x4002bea	    0xc785e0f8ffff	           mov dword [rbp - 0x720], 0xc 	       934	update-index.c	FUNCTION_64
0x4002bf4	    0x48c785e8f8ff	              mov qword [rbp - 0x718], 0	       934	update-index.c	FUNCTION_64
0x4002bff	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002c06	    0x488985f0f8ff	            mov qword [rbp - 0x710], rax	       934	update-index.c	FUNCTION_64
0x4002c0d	    0x48c78500f9ff	              mov qword [rbp - 0x700], 0	       934	update-index.c	FUNCTION_64
0x4002c18	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 6	       934	update-index.c	FUNCTION_64
0x4002c22	    0x48c78510f9ff	              mov qword [rbp - 0x6f0], 0	       934	update-index.c	FUNCTION_64
0x4002c2d	    0xc78520f9ffff	           mov dword [rbp - 0x6e0], 0xc 	       934	update-index.c	FUNCTION_64
0x4002c37	    0x48c78528f9ff	              mov qword [rbp - 0x6d8], 0	       934	update-index.c	FUNCTION_64
0x4002c42	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002c49	    0x48898530f9ff	            mov qword [rbp - 0x6d0], rax	       934	update-index.c	FUNCTION_64
0x4002c50	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	       934	update-index.c	FUNCTION_64
0x4002c5b	    0xc78548f9ffff	              mov dword [rbp - 0x6b8], 6	       934	update-index.c	FUNCTION_64
0x4002c65	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       934	update-index.c	FUNCTION_64
0x4002c70	    0xc78560f9ffff	           mov dword [rbp - 0x6a0], 0xd 	       934	update-index.c	FUNCTION_64
0x4002c7a	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	       934	update-index.c	FUNCTION_64
0x4002c85	    0x48c78578f9ff	              mov qword [rbp - 0x688], 0	       934	update-index.c	FUNCTION_64
0x4002c90	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	       934	update-index.c	FUNCTION_64
0x4002c9b	    0xc78588f9ffff	          mov dword [rbp - 0x678], 0x46 	       934	update-index.c	FUNCTION_64
0x4002ca5	    0x48c78590f9ff	              mov qword [rbp - 0x670], 0	       934	update-index.c	FUNCTION_64
0x4002cb0	    0xc785a0f9ffff	           mov dword [rbp - 0x660], 0xc 	       934	update-index.c	FUNCTION_64
0x4002cba	    0x48c785a8f9ff	              mov qword [rbp - 0x658], 0	       934	update-index.c	FUNCTION_64
0x4002cc5	    0x488d856bf6ff	                  lea rax, [rbp - 0x995]	       934	update-index.c	FUNCTION_64
0x4002ccc	    0x488985b0f9ff	            mov qword [rbp - 0x650], rax	       934	update-index.c	FUNCTION_64
0x4002cd3	    0x48c785b8f9ff	              mov qword [rbp - 0x648], 0	       934	update-index.c	FUNCTION_64
0x4002cde	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	       934	update-index.c	FUNCTION_64
0x4002ce9	    0xc785c8f9ffff	          mov dword [rbp - 0x638], 0x44 	       934	update-index.c	FUNCTION_64
0x4002cf3	    0x48c785d0f9ff	              mov qword [rbp - 0x630], 0	       934	update-index.c	FUNCTION_64
0x4002cfe	    0xc785e0f9ffff	              mov dword [rbp - 0x620], 7	       934	update-index.c	FUNCTION_64
0x4002d08	    0x48c785e8f9ff	              mov qword [rbp - 0x618], 0	       934	update-index.c	FUNCTION_64
0x4002d13	    0x48c785f0f9ff	              mov qword [rbp - 0x610], 0	       934	update-index.c	FUNCTION_64
0x4002d1e	    0x48c78500faff	              mov qword [rbp - 0x600], 0	       934	update-index.c	FUNCTION_64
0x4002d29	    0xc78508faffff	              mov dword [rbp - 0x5f8], 6	       934	update-index.c	FUNCTION_64
0x4002d33	    0x48c78518faff	              mov qword [rbp - 0x5e8], 1	       934	update-index.c	FUNCTION_64
0x4002d3e	    0xc78520faffff	              mov dword [rbp - 0x5e0], 7	       934	update-index.c	FUNCTION_64
0x4002d48	    0x48c78528faff	              mov qword [rbp - 0x5d8], 0	       934	update-index.c	FUNCTION_64
0x4002d53	    0x48c78530faff	              mov qword [rbp - 0x5d0], 0	       934	update-index.c	FUNCTION_64
0x4002d5e	    0x48c78540faff	              mov qword [rbp - 0x5c0], 0	       934	update-index.c	FUNCTION_64
0x4002d69	    0xc78548faffff	              mov dword [rbp - 0x5b8], 6	       934	update-index.c	FUNCTION_64
0x4002d73	    0x48c78558faff	              mov qword [rbp - 0x5a8], 2	       934	update-index.c	FUNCTION_64
0x4002d7e	    0xc78560faffff	              mov dword [rbp - 0x5a0], 7	       934	update-index.c	FUNCTION_64
0x4002d88	    0x48c78568faff	              mov qword [rbp - 0x598], 0	       934	update-index.c	FUNCTION_64
0x4002d93	    0x48c78570faff	              mov qword [rbp - 0x590], 0	       934	update-index.c	FUNCTION_64
0x4002d9e	    0x48c78580faff	              mov qword [rbp - 0x580], 0	       934	update-index.c	FUNCTION_64
0x4002da9	    0xc78588faffff	              mov dword [rbp - 0x578], 6	       934	update-index.c	FUNCTION_64
0x4002db3	    0x48c78598faff	              mov qword [rbp - 0x568], 1	       934	update-index.c	FUNCTION_64
0x4002dbe	    0xc785a0faffff	              mov dword [rbp - 0x560], 7	       934	update-index.c	FUNCTION_64
0x4002dc8	    0x48c785a8faff	              mov qword [rbp - 0x558], 0	       934	update-index.c	FUNCTION_64
0x4002dd3	    0x48c785b0faff	              mov qword [rbp - 0x550], 0	       934	update-index.c	FUNCTION_64
0x4002dde	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	       934	update-index.c	FUNCTION_64
0x4002de9	    0xc785c8faffff	              mov dword [rbp - 0x538], 6	       934	update-index.c	FUNCTION_64
0x4002df3	    0x48c785d8faff	              mov qword [rbp - 0x528], 2	       934	update-index.c	FUNCTION_64
0x4002dfe	    0xc785e0faffff	              mov dword [rbp - 0x520], 7	       934	update-index.c	FUNCTION_64
0x4002e08	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	       934	update-index.c	FUNCTION_64
0x4002e13	    0x48c785f0faff	              mov qword [rbp - 0x510], 0	       934	update-index.c	FUNCTION_64
0x4002e1e	    0x48c78500fbff	              mov qword [rbp - 0x500], 0	       934	update-index.c	FUNCTION_64
0x4002e29	    0xc78508fbffff	              mov dword [rbp - 0x4f8], 2	       934	update-index.c	FUNCTION_64
0x4002e33	    0x48c78518fbff	              mov qword [rbp - 0x4e8], 1	       934	update-index.c	FUNCTION_64
0x4002e3e	    0xc78520fbffff	              mov dword [rbp - 0x4e0], 7	       934	update-index.c	FUNCTION_64
0x4002e48	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 0	       934	update-index.c	FUNCTION_64
0x4002e53	    0x48c78530fbff	              mov qword [rbp - 0x4d0], 0	       934	update-index.c	FUNCTION_64
0x4002e5e	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	       934	update-index.c	FUNCTION_64
0x4002e69	    0xc78548fbffff	              mov dword [rbp - 0x4b8], 2	       934	update-index.c	FUNCTION_64
0x4002e73	    0x48c78558fbff	              mov qword [rbp - 0x4a8], 1	       934	update-index.c	FUNCTION_64
0x4002e7e	    0xc78560fbffff	              mov dword [rbp - 0x4a0], 7	       934	update-index.c	FUNCTION_64
0x4002e88	    0xc78564fbffff	          mov dword [rbp - 0x49c], 0x7a 	       934	update-index.c	FUNCTION_64
0x4002e92	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       934	update-index.c	FUNCTION_64
0x4002e99	    0x48898570fbff	            mov qword [rbp - 0x490], rax	       934	update-index.c	FUNCTION_64
0x4002ea0	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	       934	update-index.c	FUNCTION_64
0x4002eab	    0xc78588fbffff	              mov dword [rbp - 0x478], 2	       934	update-index.c	FUNCTION_64
0x4002eb5	    0x48c78598fbff	              mov qword [rbp - 0x468], 1	       934	update-index.c	FUNCTION_64
0x4002ec0	    0xc785a0fbffff	           mov dword [rbp - 0x460], 0xd 	       934	update-index.c	FUNCTION_64
0x4002eca	    0x48c785a8fbff	              mov qword [rbp - 0x458], 0	       934	update-index.c	FUNCTION_64
0x4002ed5	    0x488d8578f6ff	                  lea rax, [rbp - 0x988]	       934	update-index.c	FUNCTION_64
0x4002edc	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	       934	update-index.c	FUNCTION_64
0x4002ee3	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	       934	update-index.c	FUNCTION_64
0x4002eee	    0xc785c8fbffff	              mov dword [rbp - 0x438], 6	       934	update-index.c	FUNCTION_64
0x4002ef8	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	       934	update-index.c	FUNCTION_64
0x4002f03	    0xc785e0fbffff	           mov dword [rbp - 0x420], 0xd 	       934	update-index.c	FUNCTION_64
0x4002f0d	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	       934	update-index.c	FUNCTION_64
0x4002f18	    0x488d8570f6ff	                  lea rax, [rbp - 0x990]	       934	update-index.c	FUNCTION_64
0x4002f1f	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	       934	update-index.c	FUNCTION_64
0x4002f26	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       934	update-index.c	FUNCTION_64
0x4002f31	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 6	       934	update-index.c	FUNCTION_64
0x4002f3b	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	       934	update-index.c	FUNCTION_64
0x4002f46	    0xc78520fcffff	           mov dword [rbp - 0x3e0], 0xd 	       934	update-index.c	FUNCTION_64
0x4002f50	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	       934	update-index.c	FUNCTION_64
0x4002f5b	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       934	update-index.c	FUNCTION_64
0x4002f62	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	       934	update-index.c	FUNCTION_64
0x4002f69	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       934	update-index.c	FUNCTION_64
0x4002f74	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 6	       934	update-index.c	FUNCTION_64
0x4002f7e	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	       934	update-index.c	FUNCTION_64
0x4002f89	    0xc78560fcffff	           mov dword [rbp - 0x3a0], 0xd 	       934	update-index.c	FUNCTION_64
0x4002f93	    0xc78564fcffff	          mov dword [rbp - 0x39c], 0x67 	       934	update-index.c	FUNCTION_64
0x4002f9d	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       934	update-index.c	FUNCTION_64
0x4002fa8	    0x488d856cf6ff	                  lea rax, [rbp - 0x994]	       934	update-index.c	FUNCTION_64
0x4002faf	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       934	update-index.c	FUNCTION_64
0x4002fb6	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       934	update-index.c	FUNCTION_64
0x4002fc1	    0xc78588fcffff	              mov dword [rbp - 0x378], 6	       934	update-index.c	FUNCTION_64
0x4002fcb	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	       934	update-index.c	FUNCTION_64
0x4002fd6	    0xc785a0fcffff	              mov dword [rbp - 0x360], 4	       934	update-index.c	FUNCTION_64
0x4002fe0	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	       934	update-index.c	FUNCTION_64
0x4002feb	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       934	update-index.c	FUNCTION_64
0x4002ff2	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	       934	update-index.c	FUNCTION_64
0x4002ff9	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	       934	update-index.c	FUNCTION_64
0x4003004	    0xc785c8fcffff	              mov dword [rbp - 0x338], 2	       934	update-index.c	FUNCTION_64
0x400300e	    0x48c785d8fcff	              mov qword [rbp - 0x328], 8	       934	update-index.c	FUNCTION_64
0x4003019	    0xc785e0fcffff	              mov dword [rbp - 0x320], 7	       934	update-index.c	FUNCTION_64
0x4003023	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	       934	update-index.c	FUNCTION_64
0x400302e	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       934	update-index.c	FUNCTION_64
0x4003039	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       934	update-index.c	FUNCTION_64
0x4003044	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 2	       934	update-index.c	FUNCTION_64
0x400304e	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 1	       934	update-index.c	FUNCTION_64
0x4003059	    0xc78520fdffff	           mov dword [rbp - 0x2e0], 0xc 	       934	update-index.c	FUNCTION_64
0x4003063	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	       934	update-index.c	FUNCTION_64
0x400306e	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       934	update-index.c	FUNCTION_64
0x4003079	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 6	       934	update-index.c	FUNCTION_64
0x4003083	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	       934	update-index.c	FUNCTION_64
0x400308e	    0xc78560fdffff	            mov dword [rbp - 0x2a0], 0xa	       934	update-index.c	FUNCTION_64
0x4003098	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	       934	update-index.c	FUNCTION_64
0x40030a3	    0x488d857cf6ff	                  lea rax, [rbp - 0x984]	       934	update-index.c	FUNCTION_64
0x40030aa	    0x48898570fdff	            mov qword [rbp - 0x290], rax	       934	update-index.c	FUNCTION_64
0x40030b1	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	       934	update-index.c	FUNCTION_64
0x40030bc	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       934	update-index.c	FUNCTION_64
0x40030c7	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	       934	update-index.c	FUNCTION_64
0x40030d1	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       934	update-index.c	FUNCTION_64
0x40030dc	    0x488d8580f6ff	                  lea rax, [rbp - 0x980]	       934	update-index.c	FUNCTION_64
0x40030e3	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       934	update-index.c	FUNCTION_64
0x40030ea	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	       934	update-index.c	FUNCTION_64
0x40030f5	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	       934	update-index.c	FUNCTION_64
0x40030ff	    0x48c785d8fdff	              mov qword [rbp - 0x228], 1	       934	update-index.c	FUNCTION_64
0x400310a	    0xc785e0fdffff	              mov dword [rbp - 0x220], 7	       934	update-index.c	FUNCTION_64
0x4003114	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	       934	update-index.c	FUNCTION_64
0x400311f	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_64
0x4003126	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	       934	update-index.c	FUNCTION_64
0x400312d	    0x48c78500feff	              mov qword [rbp - 0x200], 0	       934	update-index.c	FUNCTION_64
0x4003138	    0xc78508feffff	              mov dword [rbp - 0x1f8], 2	       934	update-index.c	FUNCTION_64
0x4003142	    0x48c78518feff	              mov qword [rbp - 0x1e8], 1	       934	update-index.c	FUNCTION_64
0x400314d	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	       934	update-index.c	FUNCTION_64
0x4003157	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       934	update-index.c	FUNCTION_64
0x4003162	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_64
0x4003169	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       934	update-index.c	FUNCTION_64
0x4003170	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       934	update-index.c	FUNCTION_64
0x400317b	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	       934	update-index.c	FUNCTION_64
0x4003185	    0x48c78558feff	              mov qword [rbp - 0x1a8], 2	       934	update-index.c	FUNCTION_64
0x4003190	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	       934	update-index.c	FUNCTION_64
0x400319a	    0x48c78568feff	              mov qword [rbp - 0x198], 0	       934	update-index.c	FUNCTION_64
0x40031a5	    0x488d8574f6ff	                  lea rax, [rbp - 0x98c]	       934	update-index.c	FUNCTION_64
0x40031ac	    0x48898570feff	            mov qword [rbp - 0x190], rax	       934	update-index.c	FUNCTION_64
0x40031b3	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       934	update-index.c	FUNCTION_64
0x40031be	    0xc78588feffff	              mov dword [rbp - 0x178], 2	       934	update-index.c	FUNCTION_64
0x40031c8	    0x48c78598feff	              mov qword [rbp - 0x168], 3	       934	update-index.c	FUNCTION_64
0x40031d3	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	       934	update-index.c	FUNCTION_64
0x40031dd	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       934	update-index.c	FUNCTION_64
0x40031e8	    0x488d8584f6ff	                  lea rax, [rbp - 0x97c]	       934	update-index.c	FUNCTION_64
0x40031ef	    0x488985b0feff	            mov qword [rbp - 0x150], rax	       934	update-index.c	FUNCTION_64
0x40031f6	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       934	update-index.c	FUNCTION_64
0x4003201	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	       934	update-index.c	FUNCTION_64
0x400320b	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	       934	update-index.c	FUNCTION_64
0x4003216	    0xc785e0feffff	              mov dword [rbp - 0x120], 7	       934	update-index.c	FUNCTION_64
0x4003220	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       934	update-index.c	FUNCTION_64
0x400322b	    0x488d8588f6ff	                  lea rax, [rbp - 0x978]	       934	update-index.c	FUNCTION_64
0x4003232	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       934	update-index.c	FUNCTION_64
0x4003239	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       934	update-index.c	FUNCTION_64
0x4003244	    0xc78508ffffff	               mov dword [rbp - 0xf8], 2	       934	update-index.c	FUNCTION_64
0x400324e	    0x48c78518ffff	               mov qword [rbp - 0xe8], 1	       934	update-index.c	FUNCTION_64
0x4003259	    0xc78520ffffff	               mov dword [rbp - 0xe0], 7	       934	update-index.c	FUNCTION_64
0x4003263	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       934	update-index.c	FUNCTION_64
0x400326e	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       934	update-index.c	FUNCTION_64
0x4003279	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       934	update-index.c	FUNCTION_64
0x4003284	    0xc78548ffffff	               mov dword [rbp - 0xb8], 6	       934	update-index.c	FUNCTION_64
0x400328e	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	       934	update-index.c	FUNCTION_64
0x4003299	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	       934	update-index.c	FUNCTION_64
0x40032a3	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       934	update-index.c	FUNCTION_64
0x40032ae	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       934	update-index.c	FUNCTION_64
0x40032b9	    0x48c745800000	               mov qword [rbp - 0x80], 0	       934	update-index.c	FUNCTION_64
0x40032c1	    0xc74588060000	               mov dword [rbp - 0x78], 6	       934	update-index.c	FUNCTION_64
0x40032c8	    0x48c745980200	               mov qword [rbp - 0x68], 2	       934	update-index.c	FUNCTION_64
0x40032d0	    0x83bd5cf6ffff	              cmp dword [rbp - 0x9a4], 2	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032d7	            0x7533	                           jne 0x400330c	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032d9	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032e0	        0x4883c008	                              add rax, 8	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032e4	          0x488b00	                    mov rax, qword [rax]	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032e7	      0xbe00000000	                              mov esi, 0	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032ec	          0x4889c7	                            mov rdi, rax	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032ef	      0xe800000000	                          call 0x40032f4	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032f4	            0x85c0	                           test eax, eax	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032f6	            0x7514	                           jne 0x400330c	      1034	update-index.c	FUNCTION_64	IF_1	CALL_21
0x40032f8	    0x488d8560f7ff	                  lea rax, [rbp - 0x8a0]	      1035	update-index.c	FUNCTION_64	CALL_22
0x40032ff	          0x4889c6	                            mov rsi, rax	      1035	update-index.c	FUNCTION_64	CALL_22
0x4003302	      0xbf00000000	                              mov edi, 0	      1035	update-index.c	FUNCTION_64	CALL_22
0x4003307	      0xe800000000	                          call 0x400330c	      1035	update-index.c	FUNCTION_64	CALL_22
0x400330c	      0xbe00000000	                              mov esi, 0	      1037	update-index.c	FUNCTION_64	CALL_23
0x4003311	      0xbf00000000	                              mov edi, 0	      1037	update-index.c	FUNCTION_64	CALL_23
0x4003316	      0xe800000000	                          call 0x400331b	      1037	update-index.c	FUNCTION_64	CALL_23
0x400331b	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1040	update-index.c	FUNCTION_64	CALL_24
0x4003322	      0xbe00000000	                              mov esi, 0	      1040	update-index.c	FUNCTION_64	CALL_24
0x4003327	          0x4889c7	                            mov rdi, rax	      1040	update-index.c	FUNCTION_64	CALL_24
0x400332a	      0xe800000000	                          call 0x400332f	      1040	update-index.c	FUNCTION_64	CALL_24
0x400332f	    0x898598f6ffff	            mov dword [rbp - 0x968], eax	      1040	update-index.c	FUNCTION_64	CALL_24
0x4003335	    0x83bd98f6ffff	              cmp dword [rbp - 0x968], 0	      1041	update-index.c	FUNCTION_64	IF_2
0x400333c	            0x790d	                           jns 0x400334b	      1041	update-index.c	FUNCTION_64	IF_2
0x400333e	      0xe800000000	                          call 0x4003343	      1042	update-index.c	FUNCTION_64	IF_2
0x4003343	            0x8b00	                    mov eax, dword [rax]	      1042	update-index.c	FUNCTION_64	IF_2
0x4003345	    0x89858cf6ffff	            mov dword [rbp - 0x974], eax	      1042	update-index.c	FUNCTION_64	IF_2
0x400334b	      0xbf00000000	                              mov edi, 0	      1044	update-index.c	FUNCTION_64
0x4003350	      0xe800000000	                          call 0x4003355	      1044	update-index.c	FUNCTION_64
0x4003355	    0x89859cf6ffff	            mov dword [rbp - 0x964], eax	      1044	update-index.c	FUNCTION_64
0x400335b	    0x83bd9cf6ffff	              cmp dword [rbp - 0x964], 0	      1045	update-index.c	FUNCTION_64	IF_3
0x4003362	            0x790f	                           jns 0x4003373	      1045	update-index.c	FUNCTION_64	IF_3
0x4003364	      0xbf00000000	                              mov edi, 0	      1046	update-index.c	FUNCTION_64	CALL_25
0x4003369	      0xb800000000	                              mov eax, 0	      1046	update-index.c	FUNCTION_64	CALL_25
0x400336e	      0xe800000000	                          call 0x4003373	      1046	update-index.c	FUNCTION_64	CALL_25
0x4003373	    0x488dbd60f7ff	                  lea rdi, [rbp - 0x8a0]	      1052	update-index.c	FUNCTION_64	CALL_26
0x400337a	    0x488b8d48f6ff	            mov rcx, qword [rbp - 0x9b8]	      1052	update-index.c	FUNCTION_64	CALL_26
0x4003381	    0x488b9550f6ff	            mov rdx, qword [rbp - 0x9b0]	      1052	update-index.c	FUNCTION_64	CALL_26
0x4003388	    0x8bb55cf6ffff	            mov esi, dword [rbp - 0x9a4]	      1052	update-index.c	FUNCTION_64	CALL_26
0x400338e	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1052	update-index.c	FUNCTION_64	CALL_26
0x4003395	    0x41b902000000	                              mov r9d, 2	      1052	update-index.c	FUNCTION_64	CALL_26
0x400339b	          0x4989f8	                             mov r8, rdi	      1052	update-index.c	FUNCTION_64	CALL_26
0x400339e	          0x4889c7	                            mov rdi, rax	      1052	update-index.c	FUNCTION_64	CALL_26
0x40033a1	      0xe800000000	                          call 0x40033a6	      1052	update-index.c	FUNCTION_64	CALL_26
0x40033a6	      0xe978010000	                           jmp 0x4003523	      1054	update-index.c	FUNCTION_64	WHILE_1
0x40033ab	    0x83bd90f6ffff	              cmp dword [rbp - 0x970], 0	      1055	update-index.c	FUNCTION_64	WHILE_1	IF_4
0x40033b2	            0x7424	                            je 0x40033d8	      1055	update-index.c	FUNCTION_64	WHILE_1	IF_4
0x40033b4	    0x488d8d60f7ff	                  lea rcx, [rbp - 0x8a0]	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033bb	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033c2	      0xba00000000	                              mov edx, 0	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033c7	          0x4889ce	                            mov rsi, rcx	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033ca	          0x4889c7	                            mov rdi, rax	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033cd	      0xe800000000	                          call 0x40033d2	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033d2	    0x898590f6ffff	            mov dword [rbp - 0x970], eax	      1056	update-index.c	FUNCTION_64	WHILE_1	IF_4	CALL_27
0x40033d8	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1058	update-index.c	FUNCTION_64	WHILE_1	IF_5
0x40033de	            0x85c0	                           test eax, eax	      1058	update-index.c	FUNCTION_64	WHILE_1	IF_5
0x40033e0	     0xf844d010000	                            je 0x4003533	      1058	update-index.c	FUNCTION_64	WHILE_1	IF_5
0x40033e6	    0x8b8590f6ffff	            mov eax, dword [rbp - 0x970]	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40033ec	          0x83c001	                              add eax, 1	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40033ef	          0x83f804	                              cmp eax, 4	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40033f2	     0xf872b010000	                            ja 0x4003523	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40033f8	            0x89c0	                            mov eax, eax	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40033fa	    0x488b04c50000	                  mov rax, qword [rax*8]	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003402	            0xffe0	                                 jmp rax	      1060	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003404	      0xbf81000000	                           mov edi, 0x81	      1063	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_28
0x4003409	      0xe800000000	                          call 0x400340e	      1063	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_28
0x400340e	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1067	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003415	          0x488b00	                    mov rax, qword [rax]	      1067	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003418	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	      1067	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x400341f	      0xe800000000	                          call 0x4003424	      1070	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_29
0x4003424	    0x488b95b0f6ff	            mov rdx, qword [rbp - 0x950]	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x400342b	    0x8b8d94f6ffff	            mov ecx, dword [rbp - 0x96c]	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x4003431	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x4003438	            0x89ce	                            mov esi, ecx	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x400343a	          0x4889c7	                            mov rdi, rax	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x400343d	      0xe800000000	                          call 0x4003442	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x4003442	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      1071	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_30
0x4003449	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1072	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_31
0x4003450	          0x4889c7	                            mov rdi, rax	      1072	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_31
0x4003453	      0xe8e3e2ffff	                     call sym.update_one	      1072	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_31
0x4003458	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1073	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_6
0x400345f	            0x84c0	                             test al, al	      1073	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_6
0x4003461	            0x741b	                            je 0x400347e	      1073	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_6
0x4003463	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x400346a	           0xfbec0	                           movsx eax, al	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x400346d	    0x488b95b8f6ff	            mov rdx, qword [rbp - 0x948]	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x4003474	          0x4889d6	                            mov rsi, rdx	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x4003477	            0x89c7	                            mov edi, eax	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x4003479	      0xe816e2ffff	                     call sym.chmod_path	      1074	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_32
0x400347e	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      1075	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_33
0x4003485	          0x4889c7	                            mov rdi, rax	      1075	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_33
0x4003488	      0xe800000000	                          call 0x400348d	      1075	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_33
0x400348d	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1076	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003493	          0x83e801	                              sub eax, 1	      1076	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x4003496	    0x898530f7ffff	            mov dword [rbp - 0x8d0], eax	      1076	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x400349c	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1077	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40034a3	        0x4883c008	                              add rax, 8	      1077	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40034a7	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	      1077	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40034ae	            0xeb73	                           jmp 0x4003523	      1078	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1
0x40034b0	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034b7	          0x488b00	                    mov rax, qword [rax]	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034ba	        0x4883c001	                              add rax, 1	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034be	           0xfb600	                   movzx eax, byte [rax]	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034c1	            0x3c2d	                            cmp al, 0x2d	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034c3	            0x7527	                           jne 0x40034ec	      1081	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034c5	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034cc	          0x488b00	                    mov rax, qword [rax]	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034cf	        0x4883c002	                              add rax, 2	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034d3	          0x4889c6	                            mov rsi, rax	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034d6	      0xbf00000000	                              mov edi, 0	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034db	      0xb800000000	                              mov eax, 0	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034e0	      0xe800000000	                          call 0x40034e5	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034e5	      0xe856cbffff	                    call sym.const_error	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034ea	            0xeb23	                           jmp 0x400350f	      1082	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	IF_7
0x40034ec	    0x488b8540f7ff	            mov rax, qword [rbp - 0x8c0]	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x40034f3	           0xfb600	                   movzx eax, byte [rax]	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x40034f6	           0xfbec0	                           movsx eax, al	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x40034f9	            0x89c6	                            mov esi, eax	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x40034fb	      0xbf00000000	                              mov edi, 0	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x4003500	      0xb800000000	                              mov eax, 0	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x4003505	      0xe800000000	                          call 0x400350a	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x400350a	      0xe831cbffff	                    call sym.const_error	      1084	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	ELSE_1
0x400350f	    0x488d8560f7ff	                  lea rax, [rbp - 0x8a0]	      1085	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_34
0x4003516	          0x4889c6	                            mov rsi, rax	      1085	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_34
0x4003519	      0xbf00000000	                              mov edi, 0	      1085	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_34
0x400351e	      0xe800000000	                          call 0x4003523	      1085	update-index.c	FUNCTION_64	WHILE_1	SWITCH_1	CALL_34
0x4003523	    0x8b8530f7ffff	            mov eax, dword [rbp - 0x8d0]	      1054	update-index.c	FUNCTION_64	WHILE_1
0x4003529	            0x85c0	                           test eax, eax	      1054	update-index.c	FUNCTION_64	WHILE_1
0x400352b	     0xf857afeffff	                           jne 0x40033ab	      1054	update-index.c	FUNCTION_64	WHILE_1
0x4003531	            0xeb01	                           jmp 0x4003534	      1054	update-index.c	FUNCTION_64	WHILE_1
0x4003533	              0x90	                                     nop	      1059	update-index.c	FUNCTION_64	WHILE_1	IF_5
0x4003534	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	      1088	update-index.c	FUNCTION_64	CALL_35
0x400353b	          0x4889c7	                            mov rdi, rax	      1088	update-index.c	FUNCTION_64	CALL_35
0x400353e	      0xe800000000	                          call 0x4003543	      1088	update-index.c	FUNCTION_64	CALL_35
0x4003543	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      1088	update-index.c	FUNCTION_64	CALL_35
0x4003549	    0x8b8570f6ffff	            mov eax, dword [rbp - 0x990]	      1090	update-index.c	FUNCTION_64
0x400354f	            0x85c0	                           test eax, eax	      1090	update-index.c	FUNCTION_64
0x4003551	            0x7407	                            je 0x400355a	      1090	update-index.c	FUNCTION_64
0x4003553	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_64
0x4003558	            0xeb05	                           jmp 0x400355f	      1090	update-index.c	FUNCTION_64
0x400355a	      0xb800000000	                              mov eax, 0	      1090	update-index.c	FUNCTION_64
0x400355f	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	      1090	update-index.c	FUNCTION_64
0x4003566	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1091	update-index.c	FUNCTION_64	IF_8
0x400356c	            0x85c0	                           test eax, eax	      1091	update-index.c	FUNCTION_64	IF_8
0x400356e	            0x7462	                            je 0x40035d2	      1091	update-index.c	FUNCTION_64	IF_8
0x4003570	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1092	update-index.c	FUNCTION_64	IF_8	IF_9
0x4003576	          0x83f801	                              cmp eax, 1	      1092	update-index.c	FUNCTION_64	IF_8	IF_9
0x4003579	            0x7e0b	                           jle 0x4003586	      1092	update-index.c	FUNCTION_64	IF_8	IF_9
0x400357b	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1093	update-index.c	FUNCTION_64	IF_8	IF_9
0x4003581	          0x83f804	                              cmp eax, 4	      1092	update-index.c	FUNCTION_64	IF_8	IF_9
0x4003584	            0x7e21	                           jle 0x40035a7	      1092	update-index.c	FUNCTION_64	IF_8	IF_9
0x4003586	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x400358c	      0xb904000000	                              mov ecx, 4	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x4003591	      0xba02000000	                              mov edx, 2	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x4003596	            0x89c6	                            mov esi, eax	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x4003598	      0xbf00000000	                              mov edi, 0	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x400359d	      0xb800000000	                              mov eax, 0	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x40035a2	      0xe800000000	                          call 0x40035a7	      1094	update-index.c	FUNCTION_64	IF_8	IF_9	CALL_36
0x40035a7	    0x8b0500000000	            mov eax, dword [0x040035ad] 	      1098	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035ad	    0x8b957cf6ffff	            mov edx, dword [rbp - 0x984]	      1098	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035b3	            0x39d0	                            cmp eax, edx	      1098	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035b5	            0x740f	                            je 0x40035c6	      1098	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035b7	    0x8b0500000000	            mov eax, dword [0x040035bd] 	      1099	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035bd	          0x83c801	                               or eax, 1	      1099	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035c0	    0x890500000000	            mov dword [0x040035c6], eax 	      1099	update-index.c	FUNCTION_64	IF_8	IF_10
0x40035c6	    0x8b857cf6ffff	            mov eax, dword [rbp - 0x984]	      1100	update-index.c	FUNCTION_64	IF_8
0x40035cc	    0x890500000000	            mov dword [0x040035d2], eax 	      1100	update-index.c	FUNCTION_64	IF_8
0x40035d2	    0x8b8578f6ffff	            mov eax, dword [rbp - 0x988]	      1103	update-index.c	FUNCTION_64	IF_11
0x40035d8	            0x85c0	                           test eax, eax	      1103	update-index.c	FUNCTION_64	IF_11
0x40035da	     0xf846f010000	                            je 0x400374f	      1103	update-index.c	FUNCTION_64	IF_11
0x40035e0	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	      1104	update-index.c	FUNCTION_64	IF_11
0x40035eb	    0x48c785e8f6ff	              mov qword [rbp - 0x918], 0	      1104	update-index.c	FUNCTION_64	IF_11
0x40035f6	    0x48c785f0f6ff	              mov qword [rbp - 0x910], 0	      1104	update-index.c	FUNCTION_64	IF_11
0x4003601	    0x48c78500f7ff	              mov qword [rbp - 0x900], 0	      1105	update-index.c	FUNCTION_64	IF_11
0x400360c	    0x48c78508f7ff	              mov qword [rbp - 0x8f8], 0	      1105	update-index.c	FUNCTION_64	IF_11
0x4003617	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	      1105	update-index.c	FUNCTION_64	IF_11
0x4003622	      0xe800000000	                          call 0x4003627	      1107	update-index.c	FUNCTION_64	IF_11	CALL_37
0x4003627	      0xe9df000000	                           jmp 0x400370b	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x400362c	    0x8b8570f6ffff	            mov eax, dword [rbp - 0x990]	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003632	            0x85c0	                           test eax, eax	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003634	            0x756c	                           jne 0x40036a2	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003636	    0x488b85f0f6ff	            mov rax, qword [rbp - 0x910]	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x400363d	           0xfb600	                   movzx eax, byte [rax]	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003640	            0x3c22	                            cmp al, 0x22	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003642	            0x755e	                           jne 0x40036a2	      1110	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003644	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1111	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x400364b	      0xbe00000000	                              mov esi, 0	      1111	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003650	          0x4889c7	                            mov rdi, rax	      1111	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003653	      0xe866cbffff	                  call sym.strbuf_setlen	      1111	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12
0x4003658	    0x488b8df0f6ff	            mov rcx, qword [rbp - 0x910]	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x400365f	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4003666	      0xba00000000	                              mov edx, 0	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x400366b	          0x4889ce	                            mov rsi, rcx	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x400366e	          0x4889c7	                            mov rdi, rax	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4003671	      0xe800000000	                          call 0x4003676	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4003676	            0x85c0	                           test eax, eax	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x4003678	            0x740f	                            je 0x4003689	      1112	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	IF_13	CALL_39
0x400367a	      0xbf00000000	                              mov edi, 0	      1113	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_40
0x400367f	      0xb800000000	                              mov eax, 0	      1113	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_40
0x4003684	      0xe800000000	                          call 0x4003689	      1113	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_40
0x4003689	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	      1114	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_41
0x4003690	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1114	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_41
0x4003697	          0x4889d6	                            mov rsi, rdx	      1114	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_41
0x400369a	          0x4889c7	                            mov rdi, rax	      1114	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_41
0x400369d	      0xe888caffff	                    call sym.strbuf_swap	      1114	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_12	CALL_41
0x40036a2	    0x488b95f0f6ff	            mov rdx, qword [rbp - 0x910]	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036a9	    0x8b8d94f6ffff	            mov ecx, dword [rbp - 0x96c]	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036af	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036b6	            0x89ce	                            mov esi, ecx	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036b8	          0x4889c7	                            mov rdi, rax	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036bb	      0xe800000000	                          call 0x40036c0	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036c0	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	      1116	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_42
0x40036c7	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	      1117	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_43
0x40036ce	          0x4889c7	                            mov rdi, rax	      1117	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_43
0x40036d1	      0xe865e0ffff	                     call sym.update_one	      1117	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_43
0x40036d6	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1118	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_14
0x40036dd	            0x84c0	                             test al, al	      1118	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_14
0x40036df	            0x741b	                            je 0x40036fc	      1118	update-index.c	FUNCTION_64	IF_11	WHILE_2	IF_14
0x40036e1	     0xfb6856bf6ff	           movzx eax, byte [rbp - 0x995]	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036e8	           0xfbec0	                           movsx eax, al	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036eb	    0x488b95c8f6ff	            mov rdx, qword [rbp - 0x938]	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036f2	          0x4889d6	                            mov rsi, rdx	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036f5	            0x89c7	                            mov edi, eax	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036f7	      0xe898dfffff	                     call sym.chmod_path	      1119	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_44
0x40036fc	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	      1120	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_45
0x4003703	          0x4889c7	                            mov rdi, rax	      1120	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_45
0x4003706	      0xe800000000	                          call 0x400370b	      1120	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_45
0x400370b	    0x488b0d000000	            mov rcx, qword [0x04003712] 	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003712	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003719	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003720	          0x4889ce	                            mov rsi, rcx	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003723	          0x4889d7	                            mov rdi, rdx	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003726	            0xffd0	                                call rax	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003728	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x400372b	     0xf85fbfeffff	                           jne 0x400362c	      1108	update-index.c	FUNCTION_64	IF_11	WHILE_2	CALL_38
0x4003731	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	      1122	update-index.c	FUNCTION_64	IF_11	CALL_46
0x4003738	          0x4889c7	                            mov rdi, rax	      1122	update-index.c	FUNCTION_64	IF_11	CALL_46
0x400373b	      0xe800000000	                          call 0x4003740	      1122	update-index.c	FUNCTION_64	IF_11	CALL_46
0x4003740	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1123	update-index.c	FUNCTION_64	IF_11	CALL_47
0x4003747	          0x4889c7	                            mov rdi, rax	      1123	update-index.c	FUNCTION_64	IF_11	CALL_47
0x400374a	      0xe800000000	                          call 0x400374f	      1123	update-index.c	FUNCTION_64	IF_11	CALL_47
0x400374f	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	      1126	update-index.c	FUNCTION_64	IF_15
0x4003755	            0x85c0	                           test eax, eax	      1126	update-index.c	FUNCTION_64	IF_15
0x4003757	            0x7e49	                           jle 0x40037a2	      1126	update-index.c	FUNCTION_64	IF_15
0x4003759	      0xe800000000	                          call 0x400375e	      1127	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_48
0x400375e	            0x85c0	                           test eax, eax	      1127	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_48
0x4003760	            0x7517	                           jne 0x4003779	      1127	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_48
0x4003762	      0xbf00000000	                              mov edi, 0	      1128	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_50
0x4003767	      0xe821cbffff	                               call sym.	      1128	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_50
0x400376c	          0x4889c7	                            mov rdi, rax	      1128	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_50
0x400376f	      0xb800000000	                              mov eax, 0	      1128	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_50
0x4003774	      0xe800000000	                          call 0x4003779	      1128	update-index.c	FUNCTION_64	IF_15	IF_16	CALL_50
0x4003779	    0x488b05000000	            mov rax, qword [0x04003780] 	      1131	update-index.c	FUNCTION_64	IF_15	IF_17
0x4003780	          0x4885c0	                           test rax, rax	      1131	update-index.c	FUNCTION_64	IF_15	IF_17
0x4003783	            0x7411	                            je 0x4003796	      1131	update-index.c	FUNCTION_64	IF_15	IF_17
0x4003785	    0x8b0500000000	            mov eax, dword [0x0400378b] 	      1132	update-index.c	FUNCTION_64	IF_15	IF_17
0x400378b	          0x83c840	                            or eax, 0x40	      1132	update-index.c	FUNCTION_64	IF_15	IF_17
0x400378e	    0x890500000000	            mov dword [0x04003794], eax 	      1132	update-index.c	FUNCTION_64	IF_15	IF_17
0x4003794	            0xeb41	                           jmp 0x40037d7	      1132	update-index.c	FUNCTION_64	IF_15	IF_17
0x4003796	      0xbf00000000	                              mov edi, 0	      1134	update-index.c	FUNCTION_64	IF_15	CALL_51
0x400379b	      0xe800000000	                          call 0x40037a0	      1134	update-index.c	FUNCTION_64	IF_15	CALL_51
0x40037a0	            0xeb35	                           jmp 0x40037d7	      1134	update-index.c	FUNCTION_64	IF_15	CALL_51
0x40037a2	    0x8b8580f6ffff	            mov eax, dword [rbp - 0x980]	      1135	update-index.c	FUNCTION_64	ELSE_3	IF_18
0x40037a8	            0x85c0	                           test eax, eax	      1135	update-index.c	FUNCTION_64	ELSE_3	IF_18
0x40037aa	            0x752b	                           jne 0x40037d7	      1135	update-index.c	FUNCTION_64	ELSE_3	IF_18
0x40037ac	      0xe800000000	                          call 0x40037b1	      1136	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_52
0x40037b1	          0x83f801	                              cmp eax, 1	      1136	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_52
0x40037b4	            0x7517	                           jne 0x40037cd	      1136	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_52
0x40037b6	      0xbf00000000	                              mov edi, 0	      1137	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_54
0x40037bb	      0xe8cdcaffff	                               call sym.	      1137	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_54
0x40037c0	          0x4889c7	                            mov rdi, rax	      1137	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_54
0x40037c3	      0xb800000000	                              mov eax, 0	      1137	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_54
0x40037c8	      0xe800000000	                          call 0x40037cd	      1137	update-index.c	FUNCTION_64	ELSE_3	IF_18	IF_19	CALL_54
0x40037cd	      0xbf00000000	                              mov edi, 0	      1140	update-index.c	FUNCTION_64	ELSE_3	IF_18	CALL_55
0x40037d2	      0xe800000000	                          call 0x40037d7	      1140	update-index.c	FUNCTION_64	ELSE_3	IF_18	CALL_55
0x40037d7	    0x8b8574f6ffff	            mov eax, dword [rbp - 0x98c]	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037dd	          0x83c001	                              add eax, 1	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037e0	          0x83f804	                              cmp eax, 4	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037e3	     0xf87b5000000	                            ja 0x400389e	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037e9	            0x89c0	                            mov eax, eax	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037eb	    0x488b04c50000	                  mov rax, qword [rax*8]	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037f3	            0xffe0	                                 jmp rax	      1143	update-index.c	FUNCTION_64	SWITCH_2
0x40037f5	      0xe800000000	                          call 0x40037fa	      1147	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_56
0x40037fa	          0x83f801	                              cmp eax, 1	      1147	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_56
0x40037fd	            0x7517	                           jne 0x4003816	      1147	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_56
0x40037ff	      0xbf00000000	                              mov edi, 0	      1148	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_58
0x4003804	      0xe884caffff	                               call sym.	      1148	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_58
0x4003809	          0x4889c7	                            mov rdi, rax	      1148	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_58
0x400380c	      0xb800000000	                              mov eax, 0	      1148	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_58
0x4003811	      0xe800000000	                          call 0x4003816	      1148	update-index.c	FUNCTION_64	SWITCH_2	IF_20	CALL_58
0x4003816	      0xbf00000000	                              mov edi, 0	      1151	update-index.c	FUNCTION_64	SWITCH_2	CALL_59
0x400381b	      0xe800000000	                          call 0x4003820	      1151	update-index.c	FUNCTION_64	SWITCH_2	CALL_59
0x4003820	      0xbf00000000	                              mov edi, 0	      1152	update-index.c	FUNCTION_64	SWITCH_2	CALL_61
0x4003825	      0xe863caffff	                               call sym.	      1152	update-index.c	FUNCTION_64	SWITCH_2	CALL_61
0x400382a	          0x4889c7	                            mov rdi, rax	      1152	update-index.c	FUNCTION_64	SWITCH_2	CALL_61
0x400382d	      0xb800000000	                              mov eax, 0	      1152	update-index.c	FUNCTION_64	SWITCH_2	CALL_61
0x4003832	      0xe872cdffff	                         call sym.report	      1152	update-index.c	FUNCTION_64	SWITCH_2	CALL_61
0x4003837	            0xeb7d	                           jmp 0x40038b6	      1153	update-index.c	FUNCTION_64	SWITCH_2
0x4003839	      0xe800000000	                          call 0x400383e	      1155	update-index.c	FUNCTION_64	SWITCH_2	CALL_62
0x400383e	      0xe872d0ffff	call sym.test_if_untracked_cache_is_supported	      1156	update-index.c	FUNCTION_64	SWITCH_2	CALL_63
0x4003843	            0x85c0	                           test eax, eax	      1156	update-index.c	FUNCTION_64	SWITCH_2	CALL_63
0x4003845	           0xf94c0	                                 sete al	      1156	update-index.c	FUNCTION_64	SWITCH_2	CALL_63
0x4003848	           0xfb6c0	                           movzx eax, al	      1156	update-index.c	FUNCTION_64	SWITCH_2	CALL_63
0x400384b	      0xe994010000	                           jmp 0x40039e4	      1156	update-index.c	FUNCTION_64	SWITCH_2	CALL_63
0x4003850	      0xe800000000	                          call 0x4003855	      1159	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_64
0x4003855	            0x85c0	                           test eax, eax	      1159	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_64
0x4003857	            0x7517	                           jne 0x4003870	      1159	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_64
0x4003859	      0xbf00000000	                              mov edi, 0	      1160	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_66
0x400385e	      0xe82acaffff	                               call sym.	      1160	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_66
0x4003863	          0x4889c7	                            mov rdi, rax	      1160	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_66
0x4003866	      0xb800000000	                              mov eax, 0	      1160	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_66
0x400386b	      0xe800000000	                          call 0x4003870	      1160	update-index.c	FUNCTION_64	SWITCH_2	IF_21	CALL_66
0x4003870	      0xbf00000000	                              mov edi, 0	      1163	update-index.c	FUNCTION_64	SWITCH_2	CALL_67
0x4003875	      0xe800000000	                          call 0x400387a	      1163	update-index.c	FUNCTION_64	SWITCH_2	CALL_67
0x400387a	      0xe800000000	                          call 0x400387f	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x400387f	          0x4889c3	                            mov rbx, rax	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x4003882	      0xbf00000000	                              mov edi, 0	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x4003887	      0xe801caffff	                               call sym.	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x400388c	          0x4889de	                            mov rsi, rbx	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x400388f	          0x4889c7	                            mov rdi, rax	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x4003892	      0xb800000000	                              mov eax, 0	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x4003897	      0xe80dcdffff	                         call sym.report	      1164	update-index.c	FUNCTION_64	SWITCH_2	CALL_70
0x400389c	            0xeb18	                           jmp 0x40038b6	      1165	update-index.c	FUNCTION_64	SWITCH_2
0x400389e	    0x8b8574f6ffff	            mov eax, dword [rbp - 0x98c]	      1167	update-index.c	FUNCTION_64	SWITCH_2	CALL_71
0x40038a4	            0x89c6	                            mov esi, eax	      1167	update-index.c	FUNCTION_64	SWITCH_2	CALL_71
0x40038a6	      0xbf00000000	                              mov edi, 0	      1167	update-index.c	FUNCTION_64	SWITCH_2	CALL_71
0x40038ab	      0xb800000000	                              mov eax, 0	      1167	update-index.c	FUNCTION_64	SWITCH_2	CALL_71
0x40038b0	      0xe800000000	                          call 0x40038b5	      1167	update-index.c	FUNCTION_64	SWITCH_2	CALL_71
0x40038b5	              0x90	                                     nop	      1145	update-index.c	FUNCTION_64	SWITCH_2
0x40038b6	    0x8b8588f6ffff	            mov eax, dword [rbp - 0x978]	      1170	update-index.c	FUNCTION_64	IF_22
0x40038bc	            0x85c0	                           test eax, eax	      1170	update-index.c	FUNCTION_64	IF_22
0x40038be	            0x7e43	                           jle 0x4003903	      1170	update-index.c	FUNCTION_64	IF_22
0x40038c0	      0xe800000000	                          call 0x40038c5	      1171	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_72
0x40038c5	            0x85c0	                           test eax, eax	      1171	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_72
0x40038c7	            0x7517	                           jne 0x40038e0	      1171	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_72
0x40038c9	      0xbf00000000	                              mov edi, 0	      1172	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_74
0x40038ce	      0xe8bac9ffff	                               call sym.	      1172	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_74
0x40038d3	          0x4889c7	                            mov rdi, rax	      1172	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_74
0x40038d6	      0xb800000000	                              mov eax, 0	      1172	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_74
0x40038db	      0xe800000000	                          call 0x40038e0	      1172	update-index.c	FUNCTION_64	IF_22	IF_23	CALL_74
0x40038e0	      0xbf00000000	                              mov edi, 0	      1175	update-index.c	FUNCTION_64	IF_22	CALL_75
0x40038e5	      0xe800000000	                          call 0x40038ea	      1175	update-index.c	FUNCTION_64	IF_22	CALL_75
0x40038ea	      0xbf00000000	                              mov edi, 0	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x40038ef	      0xe899c9ffff	                               call sym.	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x40038f4	          0x4889c7	                            mov rdi, rax	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x40038f7	      0xb800000000	                              mov eax, 0	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x40038fc	      0xe8a8ccffff	                         call sym.report	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x4003901	            0xeb4c	                           jmp 0x400394f	      1176	update-index.c	FUNCTION_64	IF_22	CALL_77
0x4003903	    0x8b8588f6ffff	            mov eax, dword [rbp - 0x978]	      1177	update-index.c	FUNCTION_64	ELSE_4	IF_24
0x4003909	            0x85c0	                           test eax, eax	      1177	update-index.c	FUNCTION_64	ELSE_4	IF_24
0x400390b	            0x7542	                           jne 0x400394f	      1177	update-index.c	FUNCTION_64	ELSE_4	IF_24
0x400390d	      0xe800000000	                          call 0x4003912	      1178	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_78
0x4003912	          0x83f801	                              cmp eax, 1	      1178	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_78
0x4003915	            0x7517	                           jne 0x400392e	      1178	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_78
0x4003917	      0xbf00000000	                              mov edi, 0	      1179	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_80
0x400391c	      0xe86cc9ffff	                               call sym.	      1179	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_80
0x4003921	          0x4889c7	                            mov rdi, rax	      1179	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_80
0x4003924	      0xb800000000	                              mov eax, 0	      1179	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_80
0x4003929	      0xe800000000	                          call 0x400392e	      1179	update-index.c	FUNCTION_64	ELSE_4	IF_24	IF_25	CALL_80
0x400392e	      0xbf00000000	                              mov edi, 0	      1182	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_81
0x4003933	      0xe800000000	                          call 0x4003938	      1182	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_81
0x4003938	      0xbf00000000	                              mov edi, 0	      1183	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_83
0x400393d	      0xe84bc9ffff	                               call sym.	      1183	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_83
0x4003942	          0x4889c7	                            mov rdi, rax	      1183	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_83
0x4003945	      0xb800000000	                              mov eax, 0	      1183	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_83
0x400394a	      0xe85accffff	                         call sym.report	      1183	update-index.c	FUNCTION_64	ELSE_4	IF_24	CALL_83
0x400394f	    0x8b0500000000	            mov eax, dword [0x04003955] 	      1186	update-index.c	FUNCTION_64	IF_26
0x4003955	            0x85c0	                           test eax, eax	      1186	update-index.c	FUNCTION_64	IF_26
0x4003957	            0x750a	                           jne 0x4003963	      1186	update-index.c	FUNCTION_64	IF_26
0x4003959	    0x8b8584f6ffff	            mov eax, dword [rbp - 0x97c]	      1186	update-index.c	FUNCTION_64	IF_26
0x400395f	            0x85c0	                           test eax, eax	      1186	update-index.c	FUNCTION_64	IF_26
0x4003961	            0x7464	                            je 0x40039c7	      1186	update-index.c	FUNCTION_64	IF_26
0x4003963	    0x83bd98f6ffff	              cmp dword [rbp - 0x968], 0	      1187	update-index.c	FUNCTION_64	IF_26	IF_27
0x400396a	            0x792f	                           jns 0x400399b	      1187	update-index.c	FUNCTION_64	IF_26	IF_27
0x400396c	    0x8b85d0f6ffff	            mov eax, dword [rbp - 0x930]	      1188	update-index.c	FUNCTION_64	IF_26	IF_27	IF_28
0x4003972	          0x83e004	                              and eax, 4	      1188	update-index.c	FUNCTION_64	IF_26	IF_27	IF_28
0x4003975	            0x85c0	                           test eax, eax	      1188	update-index.c	FUNCTION_64	IF_26	IF_27	IF_28
0x4003977	            0x740a	                            je 0x4003983	      1188	update-index.c	FUNCTION_64	IF_26	IF_27	IF_28
0x4003979	      0xbf80000000	                           mov edi, 0x80	      1189	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_84
0x400397e	      0xe800000000	                          call 0x4003983	      1189	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_84
0x4003983	      0xe800000000	                          call 0x4003988	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x4003988	          0x4889c2	                            mov rdx, rax	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x400398b	    0x8b858cf6ffff	            mov eax, dword [rbp - 0x974]	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x4003991	            0x89c6	                            mov esi, eax	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x4003993	          0x4889d7	                            mov rdi, rdx	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x4003996	      0xe800000000	                          call 0x400399b	      1190	update-index.c	FUNCTION_64	IF_26	IF_27	CALL_86
0x400399b	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039a2	      0xba01000000	                              mov edx, 1	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039a7	          0x4889c6	                            mov rsi, rax	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039aa	      0xbf00000000	                              mov edi, 0	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039af	      0xe800000000	                          call 0x40039b4	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039b4	            0x85c0	                           test eax, eax	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039b6	            0x740f	                            je 0x40039c7	      1192	update-index.c	FUNCTION_64	IF_26	IF_29	CALL_87
0x40039b8	      0xbf00000000	                              mov edi, 0	      1193	update-index.c	FUNCTION_64	IF_26	CALL_88
0x40039bd	      0xb800000000	                              mov eax, 0	      1193	update-index.c	FUNCTION_64	IF_26	CALL_88
0x40039c2	      0xe800000000	                          call 0x40039c7	      1193	update-index.c	FUNCTION_64	IF_26	CALL_88
0x40039c7	    0x488d85a0f6ff	                  lea rax, [rbp - 0x960]	      1196	update-index.c	FUNCTION_64	CALL_89
0x40039ce	          0x4889c7	                            mov rdi, rax	      1196	update-index.c	FUNCTION_64	CALL_89
0x40039d1	      0xe8bbcaffff	             call sym.rollback_lock_file	      1196	update-index.c	FUNCTION_64	CALL_89
0x40039d6	    0x8b856cf6ffff	            mov eax, dword [rbp - 0x994]	      1198	update-index.c	FUNCTION_64
0x40039dc	            0x85c0	                           test eax, eax	      1198	update-index.c	FUNCTION_64
0x40039de	           0xf95c0	                                setne al	      1198	update-index.c	FUNCTION_64
0x40039e1	           0xfb6c0	                           movzx eax, al	      1198	update-index.c	FUNCTION_64
0x40039e4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1199	update-index.c	FUNCTION_64
0x40039e8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1199	update-index.c	FUNCTION_64
0x40039f1	            0x7405	                            je 0x40039f8	      1199	update-index.c	FUNCTION_64
0x40039f3	      0xe800000000	                          call 0x40039f8	      1199	update-index.c	FUNCTION_64
0x40039f8	    0x4881c4b80900	                          add rsp, 0x9b8	      1199	update-index.c	FUNCTION_64
0x40039ff	              0x5b	                                 pop rbx	      1199	update-index.c	FUNCTION_64
0x4003a00	              0x5d	                                 pop rbp	      1199	update-index.c	FUNCTION_64
0x4003a01	              0xc3	                                     ret	      1199	update-index.c	FUNCTION_64
report	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,4:ELSE,0	46
0x40005a9	              0x55	                                push rbp	        52	update-index.c	FUNCTION_28
0x40005aa	          0x4889e5	                            mov rbp, rsp	        52	update-index.c	FUNCTION_28
0x40005ad	    0x4881ece00000	                           sub rsp, 0xe0	        52	update-index.c	FUNCTION_28
0x40005b4	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        52	update-index.c	FUNCTION_28
0x40005bb	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	        52	update-index.c	FUNCTION_28
0x40005c2	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        52	update-index.c	FUNCTION_28
0x40005c9	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        52	update-index.c	FUNCTION_28
0x40005d0	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        52	update-index.c	FUNCTION_28
0x40005d7	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        52	update-index.c	FUNCTION_28
0x40005de	            0x84c0	                             test al, al	        52	update-index.c	FUNCTION_28
0x40005e0	            0x7420	                            je 0x4000602	        52	update-index.c	FUNCTION_28
0x40005e2	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        52	update-index.c	FUNCTION_28
0x40005e6	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        52	update-index.c	FUNCTION_28
0x40005ea	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        52	update-index.c	FUNCTION_28
0x40005ee	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        52	update-index.c	FUNCTION_28
0x40005f2	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        52	update-index.c	FUNCTION_28
0x40005f6	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        52	update-index.c	FUNCTION_28
0x40005fa	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        52	update-index.c	FUNCTION_28
0x40005fe	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        52	update-index.c	FUNCTION_28
0x4000602	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	update-index.c	FUNCTION_28
0x400060b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        52	update-index.c	FUNCTION_28
0x4000612	            0x31c0	                            xor eax, eax	        52	update-index.c	FUNCTION_28
0x4000614	    0x8b0500000000	            mov eax, dword [0x0400061a] 	        55	update-index.c	FUNCTION_28	IF_1
0x400061a	            0x85c0	                           test eax, eax	        55	update-index.c	FUNCTION_28	IF_1
0x400061c	            0x7452	                            je 0x4000670	        55	update-index.c	FUNCTION_28	IF_1
0x400061e	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	        58	update-index.c	FUNCTION_28	CALL_1
0x4000628	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        58	update-index.c	FUNCTION_28	CALL_1
0x4000632	        0x488d4510	                   lea rax, [rbp + 0x10]	        58	update-index.c	FUNCTION_28	CALL_1
0x4000636	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        58	update-index.c	FUNCTION_28	CALL_1
0x400063d	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        58	update-index.c	FUNCTION_28	CALL_1
0x4000644	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        58	update-index.c	FUNCTION_28	CALL_1
0x400064b	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        59	update-index.c	FUNCTION_28	CALL_2
0x4000652	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        59	update-index.c	FUNCTION_28	CALL_2
0x4000659	          0x4889d6	                            mov rsi, rdx	        59	update-index.c	FUNCTION_28	CALL_2
0x400065c	          0x4889c7	                            mov rdi, rax	        59	update-index.c	FUNCTION_28	CALL_2
0x400065f	      0xe800000000	                          call 0x4000664	        59	update-index.c	FUNCTION_28	CALL_2
0x4000664	      0xbf0a000000	                            mov edi, 0xa	        60	update-index.c	FUNCTION_28	CALL_3
0x4000669	      0xe800000000	                          call 0x400066e	        60	update-index.c	FUNCTION_28	CALL_3
0x400066e	            0xeb01	                           jmp 0x4000671	        60	update-index.c	FUNCTION_28	CALL_3
0x4000670	              0x90	                                     nop	        56	update-index.c	FUNCTION_28	IF_1
0x4000671	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        62	update-index.c	FUNCTION_28
0x4000678	    0x644833042528	                xor rax, qword fs:[0x28]	        62	update-index.c	FUNCTION_28
0x4000681	            0x7405	                            je 0x4000688	        62	update-index.c	FUNCTION_28
0x4000683	      0xe800000000	                          call 0x4000688	        62	update-index.c	FUNCTION_28
0x4000688	              0xc9	                                   leave	        62	update-index.c	FUNCTION_28
0x4000689	              0xc3	                                     ret	        62	update-index.c	FUNCTION_28
refresh_callback	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	13
0x4002382	              0x55	                                push rbp	       785	update-index.c	FUNCTION_54
0x4002383	          0x4889e5	                            mov rbp, rsp	       785	update-index.c	FUNCTION_54
0x4002386	        0x4883ec20	                           sub rsp, 0x20	       785	update-index.c	FUNCTION_54
0x400238a	        0x48897df8	                mov qword [rbp - 8], rdi	       785	update-index.c	FUNCTION_54
0x400238e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       785	update-index.c	FUNCTION_54
0x4002392	          0x8955ec	             mov dword [rbp - 0x14], edx	       785	update-index.c	FUNCTION_54
0x4002395	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	update-index.c	FUNCTION_54	CALL_1
0x4002399	        0x488b4010	            mov rax, qword [rax + 0x10] 	       786	update-index.c	FUNCTION_54	CALL_1
0x400239d	      0xbe00000000	                              mov esi, 0	       786	update-index.c	FUNCTION_54	CALL_1
0x40023a2	          0x4889c7	                            mov rdi, rax	       786	update-index.c	FUNCTION_54	CALL_1
0x40023a5	      0xe871ffffff	                        call sym.refresh	       786	update-index.c	FUNCTION_54	CALL_1
0x40023aa	              0xc9	                                   leave	       787	update-index.c	FUNCTION_54
0x40023ab	              0xc3	                                     ret	       787	update-index.c	FUNCTION_54
trace_pass_fl	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	17
0x40002b9	              0x55	                                push rbp	       134	trace.h	FUNCTION_76
0x40002ba	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_76
0x40002bd	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_76
0x40002c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_76
0x40002c5	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_76
0x40002c8	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_76
0x40002ca	            0x750f	                           jne 0x40002db	       135	trace.h	FUNCTION_76
0x40002cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_76
0x40002d0	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_76
0x40002d4	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_76
0x40002d7	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_76
0x40002d9	            0x7507	                           jne 0x40002e2	       135	trace.h	FUNCTION_76
0x40002db	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_76
0x40002e0	            0xeb05	                           jmp 0x40002e7	       135	trace.h	FUNCTION_76
0x40002e2	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_76
0x40002e7	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_76
0x40002e8	              0xc3	                                     ret	       136	trace.h	FUNCTION_76
refresh	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	29
0x400231b	              0x55	                                push rbp	       776	update-index.c	FUNCTION_53
0x400231c	          0x4889e5	                            mov rbp, rsp	       776	update-index.c	FUNCTION_53
0x400231f	        0x4883ec10	                           sub rsp, 0x10	       776	update-index.c	FUNCTION_53
0x4002323	        0x48897df8	                mov qword [rbp - 8], rdi	       776	update-index.c	FUNCTION_53
0x4002327	          0x8975f4	              mov dword [rbp - 0xc], esi	       776	update-index.c	FUNCTION_53
0x400232a	      0xe800000000	                          call 0x400232f	       777	update-index.c	FUNCTION_53	CALL_1
0x400232f	      0xbe00000000	                              mov esi, 0	       778	update-index.c	FUNCTION_53
0x4002334	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_53
0x4002339	      0xe800000000	                          call 0x400233e	       778	update-index.c	FUNCTION_53
0x400233e	        0x488b45f8	                mov rax, qword [rbp - 8]	       779	update-index.c	FUNCTION_53
0x4002342	            0x8b00	                    mov eax, dword [rax]	       779	update-index.c	FUNCTION_53
0x4002344	           0xb45f4	               or eax, dword [rbp - 0xc]	       779	update-index.c	FUNCTION_53
0x4002347	    0x41b800000000	                              mov r8d, 0	       779	update-index.c	FUNCTION_53
0x400234d	      0xb900000000	                              mov ecx, 0	       779	update-index.c	FUNCTION_53
0x4002352	      0xba00000000	                              mov edx, 0	       779	update-index.c	FUNCTION_53
0x4002357	            0x89c6	                            mov esi, eax	       779	update-index.c	FUNCTION_53
0x4002359	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_53
0x400235e	      0xe800000000	                          call 0x4002363	       779	update-index.c	FUNCTION_53
0x4002363	            0x89c1	                            mov ecx, eax	       779	update-index.c	FUNCTION_53
0x4002365	        0x488b45f8	                mov rax, qword [rbp - 8]	       779	update-index.c	FUNCTION_53
0x4002369	        0x488b4008	                mov rax, qword [rax + 8]	       779	update-index.c	FUNCTION_53
0x400236d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       779	update-index.c	FUNCTION_53
0x4002371	        0x488b5208	                mov rdx, qword [rdx + 8]	       779	update-index.c	FUNCTION_53
0x4002375	            0x8b12	                    mov edx, dword [rdx]	       779	update-index.c	FUNCTION_53
0x4002377	             0x9ca	                             or edx, ecx	       779	update-index.c	FUNCTION_53
0x4002379	            0x8910	                    mov dword [rax], edx	       779	update-index.c	FUNCTION_53
0x400237b	      0xb800000000	                              mov eax, 0	       780	update-index.c	FUNCTION_53
0x4002380	              0xc9	                                   leave	       781	update-index.c	FUNCTION_53
0x4002381	              0xc3	                                     ret	       781	update-index.c	FUNCTION_53
stdin_cacheinfo_callback	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	33
0x400271e	              0x55	                                push rbp	       861	update-index.c	FUNCTION_60
0x400271f	          0x4889e5	                            mov rbp, rsp	       861	update-index.c	FUNCTION_60
0x4002722	        0x4883ec30	                           sub rsp, 0x30	       861	update-index.c	FUNCTION_60
0x4002726	        0x48897de8	             mov qword [rbp - 0x18], rdi	       861	update-index.c	FUNCTION_60
0x400272a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       861	update-index.c	FUNCTION_60
0x400272e	          0x8955dc	             mov dword [rbp - 0x24], edx	       861	update-index.c	FUNCTION_60
0x4002731	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	update-index.c	FUNCTION_60
0x4002735	        0x488b4010	            mov rax, qword [rax + 0x10] 	       862	update-index.c	FUNCTION_60
0x4002739	        0x488945f8	                mov qword [rbp - 8], rax	       862	update-index.c	FUNCTION_60
0x400273d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	update-index.c	FUNCTION_60	IF_1
0x4002741	          0x8b4010	            mov eax, dword [rax + 0x10] 	       864	update-index.c	FUNCTION_60	IF_1
0x4002744	          0x83f801	                              cmp eax, 1	       864	update-index.c	FUNCTION_60	IF_1
0x4002747	            0x7421	                            je 0x400276a	       864	update-index.c	FUNCTION_60	IF_1
0x4002749	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       865	update-index.c	FUNCTION_60	IF_1
0x400274d	        0x488b4008	                mov rax, qword [rax + 8]	       865	update-index.c	FUNCTION_60	IF_1
0x4002751	          0x4889c6	                            mov rsi, rax	       865	update-index.c	FUNCTION_60	IF_1
0x4002754	      0xbf00000000	                              mov edi, 0	       865	update-index.c	FUNCTION_60	IF_1
0x4002759	      0xb800000000	                              mov eax, 0	       865	update-index.c	FUNCTION_60	IF_1
0x400275e	      0xe800000000	                          call 0x4002763	       865	update-index.c	FUNCTION_60	IF_1
0x4002763	      0xe8d8d8ffff	                    call sym.const_error	       865	update-index.c	FUNCTION_60	IF_1
0x4002768	            0xeb34	                           jmp 0x400279e	       865	update-index.c	FUNCTION_60	IF_1
0x400276a	    0xc70500000000	               mov dword [0x04002774], 1	       866	update-index.c	FUNCTION_60
0x4002774	    0x8b0500000000	            mov eax, dword [0x0400277a] 	       866	update-index.c	FUNCTION_60
0x400277a	    0x890500000000	            mov dword [0x04002780], eax 	       866	update-index.c	FUNCTION_60
0x4002780	    0x8b0500000000	            mov eax, dword [0x04002786] 	       866	update-index.c	FUNCTION_60
0x4002786	    0x890500000000	            mov dword [0x0400278c], eax 	       866	update-index.c	FUNCTION_60
0x400278c	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	update-index.c	FUNCTION_60	CALL_1
0x4002790	            0x8b00	                    mov eax, dword [rax]	       867	update-index.c	FUNCTION_60	CALL_1
0x4002792	            0x89c7	                            mov edi, eax	       867	update-index.c	FUNCTION_60	CALL_1
0x4002794	      0xe84cf1ffff	                call sym.read_index_info	       867	update-index.c	FUNCTION_60	CALL_1
0x4002799	      0xb800000000	                              mov eax, 0	       868	update-index.c	FUNCTION_60
0x400279e	              0xc9	                                   leave	       869	update-index.c	FUNCTION_60
0x400279f	              0xc3	                                     ret	       869	update-index.c	FUNCTION_60
get_mtime_path	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	18
0x40006ac	              0x55	                                push rbp	        71	update-index.c	FUNCTION_30
0x40006ad	          0x4889e5	                            mov rbp, rsp	        71	update-index.c	FUNCTION_30
0x40006b0	        0x4883ec10	                           sub rsp, 0x10	        71	update-index.c	FUNCTION_30
0x40006b4	        0x48897df8	                mov qword [rbp - 8], rdi	        71	update-index.c	FUNCTION_30
0x40006b8	      0xbe00000000	                              mov esi, 0	        73	update-index.c	FUNCTION_30
0x40006bd	      0xbf00000000	                              mov edi, 0	        73	update-index.c	FUNCTION_30
0x40006c2	      0xe8f7faffff	                  call sym.strbuf_setlen	        73	update-index.c	FUNCTION_30
0x40006c7	    0x488b05000000	            mov rax, qword [0x040006ce] 	        74	update-index.c	FUNCTION_30	CALL_1
0x40006ce	        0x488b55f8	                mov rdx, qword [rbp - 8]	        74	update-index.c	FUNCTION_30	CALL_1
0x40006d2	          0x4889d1	                            mov rcx, rdx	        74	update-index.c	FUNCTION_30	CALL_1
0x40006d5	          0x4889c2	                            mov rdx, rax	        74	update-index.c	FUNCTION_30	CALL_1
0x40006d8	      0xbe00000000	                              mov esi, 0	        74	update-index.c	FUNCTION_30	CALL_1
0x40006dd	      0xbf00000000	                              mov edi, 0	        74	update-index.c	FUNCTION_30	CALL_1
0x40006e2	      0xb800000000	                              mov eax, 0	        74	update-index.c	FUNCTION_30	CALL_1
0x40006e7	      0xe800000000	                          call 0x40006ec	        74	update-index.c	FUNCTION_30	CALL_1
0x40006ec	    0x488b05000000	            mov rax, qword [0x040006f3] 	        75	update-index.c	FUNCTION_30
0x40006f3	              0xc9	                                   leave	        76	update-index.c	FUNCTION_30
0x40006f4	              0xc3	                                     ret	        76	update-index.c	FUNCTION_30
oidcmp	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	12
0x400041b	              0x55	                                push rbp	       979	cache.h	FUNCTION_9
0x400041c	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_9
0x400041f	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_9
0x4000423	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_9
0x4000427	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_9
0x400042b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_9	CALL_1
0x400042f	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_9	CALL_1
0x4000433	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_9	CALL_1
0x4000436	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_9	CALL_1
0x4000439	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_9	CALL_1
0x400043e	              0xc9	                                   leave	       981	cache.h	FUNCTION_9
0x400043f	              0xc3	                                     ret	       981	cache.h	FUNCTION_9
const_error	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_82
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_82
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_82
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_82
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_82
reupdate_callback	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,3:ELSE,0	51
0x40028b0	              0x55	                                push rbp	       901	update-index.c	FUNCTION_63
0x40028b1	          0x4889e5	                            mov rbp, rsp	       901	update-index.c	FUNCTION_63
0x40028b4	        0x4883ec30	                           sub rsp, 0x30	       901	update-index.c	FUNCTION_63
0x40028b8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       901	update-index.c	FUNCTION_63
0x40028bc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       901	update-index.c	FUNCTION_63
0x40028c0	          0x8955dc	             mov dword [rbp - 0x24], edx	       901	update-index.c	FUNCTION_63
0x40028c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       902	update-index.c	FUNCTION_63
0x40028c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       902	update-index.c	FUNCTION_63
0x40028cb	        0x488945f0	             mov qword [rbp - 0x10], rax	       902	update-index.c	FUNCTION_63
0x40028cf	    0x488b05000000	            mov rax, qword [0x040028d6] 	       903	update-index.c	FUNCTION_63
0x40028d6	        0x488b4008	                mov rax, qword [rax + 8]	       903	update-index.c	FUNCTION_63
0x40028da	        0x488945f8	                mov qword [rbp - 8], rax	       903	update-index.c	FUNCTION_63
0x40028de	      0xe800000000	                          call 0x40028e3	       906	update-index.c	FUNCTION_63	CALL_1
0x40028e3	      0x48837df800	                  cmp qword [rbp - 8], 0	       907	update-index.c	FUNCTION_63	CALL_2
0x40028e8	            0x7410	                            je 0x40028fa	       907	update-index.c	FUNCTION_63	CALL_2
0x40028ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	update-index.c	FUNCTION_63	CALL_3
0x40028ee	          0x4889c7	                            mov rdi, rax	       908	update-index.c	FUNCTION_63	CALL_3
0x40028f1	      0xe800000000	                          call 0x40028f6	       908	update-index.c	FUNCTION_63	CALL_3
0x40028f6	            0x89c1	                            mov ecx, eax	       907	update-index.c	FUNCTION_63	CALL_2
0x40028f8	            0xeb05	                           jmp 0x40028ff	       907	update-index.c	FUNCTION_63	CALL_2
0x40028fa	      0xb900000000	                              mov ecx, 0	       907	update-index.c	FUNCTION_63	CALL_2
0x40028ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	update-index.c	FUNCTION_63	CALL_2
0x4002903	          0x488b30	                    mov rsi, qword [rax]	       907	update-index.c	FUNCTION_63	CALL_2
0x4002906	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	update-index.c	FUNCTION_63	CALL_2
0x400290a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       907	update-index.c	FUNCTION_63	CALL_2
0x400290d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       907	update-index.c	FUNCTION_63	CALL_2
0x4002911	            0x89c7	                            mov edi, eax	       907	update-index.c	FUNCTION_63	CALL_2
0x4002913	      0xe824f8ffff	                    call sym.do_reupdate	       907	update-index.c	FUNCTION_63	CALL_2
0x4002918	            0x89c2	                            mov edx, eax	       907	update-index.c	FUNCTION_63	CALL_2
0x400291a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       907	update-index.c	FUNCTION_63	CALL_2
0x400291e	            0x8910	                    mov dword [rax], edx	       907	update-index.c	FUNCTION_63	CALL_2
0x4002920	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       909	update-index.c	FUNCTION_63	IF_1
0x4002924	            0x8b00	                    mov eax, dword [rax]	       909	update-index.c	FUNCTION_63	IF_1
0x4002926	            0x85c0	                           test eax, eax	       909	update-index.c	FUNCTION_63	IF_1
0x4002928	            0x740a	                            je 0x4002934	       909	update-index.c	FUNCTION_63	IF_1
0x400292a	    0xc70500000000	               mov dword [0x04002934], 0	       910	update-index.c	FUNCTION_63	IF_1
0x4002934	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_63
0x4002938	          0x488b10	                    mov rdx, qword [rax]	       912	update-index.c	FUNCTION_63
0x400293b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_63
0x400293f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       912	update-index.c	FUNCTION_63
0x4002942	            0x4898	                                    cdqe	       912	update-index.c	FUNCTION_63
0x4002944	        0x48c1e003	                              shl rax, 3	       912	update-index.c	FUNCTION_63
0x4002948	        0x4883e808	                              sub rax, 8	       912	update-index.c	FUNCTION_63
0x400294c	          0x4801c2	                            add rdx, rax	       912	update-index.c	FUNCTION_63
0x400294f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	update-index.c	FUNCTION_63
0x4002953	          0x488910	                    mov qword [rax], rdx	       912	update-index.c	FUNCTION_63
0x4002956	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       913	update-index.c	FUNCTION_63
0x400295a	    0xc74010010000	               mov dword [rax + 0x10], 1	       913	update-index.c	FUNCTION_63
0x4002961	      0xb800000000	                              mov eax, 0	       914	update-index.c	FUNCTION_63
0x4002966	              0xc9	                                   leave	       915	update-index.c	FUNCTION_63
0x4002967	              0xc3	                                     ret	       915	update-index.c	FUNCTION_63
hashcpy	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	14
0x4000440	              0x55	                                push rbp	       994	cache.h	FUNCTION_12
0x4000441	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_12
0x4000444	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_12
0x4000448	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_12
0x400044c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_12
0x4000450	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_12	CALL_1
0x4000454	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_12	CALL_1
0x4000458	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_12	CALL_1
0x400045d	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_12	CALL_1
0x4000460	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_12	CALL_1
0x4000463	      0xe800000000	                          call 0x4000468	       995	cache.h	FUNCTION_12	CALL_1
0x4000468	              0x90	                                     nop	       996	cache.h	FUNCTION_12
0x4000469	              0xc9	                                   leave	       996	cache.h	FUNCTION_12
0x400046a	              0xc3	                                     ret	       996	cache.h	FUNCTION_12
resolve_undo_clear_callback	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	11
0x4002453	              0x55	                                push rbp	       807	update-index.c	FUNCTION_57
0x4002454	          0x4889e5	                            mov rbp, rsp	       807	update-index.c	FUNCTION_57
0x4002457	        0x4883ec20	                           sub rsp, 0x20	       807	update-index.c	FUNCTION_57
0x400245b	        0x48897df8	                mov qword [rbp - 8], rdi	       807	update-index.c	FUNCTION_57
0x400245f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       807	update-index.c	FUNCTION_57
0x4002463	          0x8955ec	             mov dword [rbp - 0x14], edx	       807	update-index.c	FUNCTION_57
0x4002466	      0xbf00000000	                              mov edi, 0	       808	update-index.c	FUNCTION_57
0x400246b	      0xe800000000	                          call 0x4002470	       808	update-index.c	FUNCTION_57
0x4002470	      0xb800000000	                              mov eax, 0	       809	update-index.c	FUNCTION_57
0x4002475	              0xc9	                                   leave	       810	update-index.c	FUNCTION_57
0x4002476	              0xc3	                                     ret	       810	update-index.c	FUNCTION_57
ce_mode_from_stat	IF,3:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,6:ELSE,0	47
0x4000352	              0x55	                                push rbp	       264	cache.h	FUNCTION_4
0x4000353	          0x4889e5	                            mov rbp, rsp	       264	cache.h	FUNCTION_4
0x4000356	        0x4883ec10	                           sub rsp, 0x10	       264	cache.h	FUNCTION_4
0x400035a	        0x48897df8	                mov qword [rbp - 8], rdi	       264	cache.h	FUNCTION_4
0x400035e	          0x8975f4	              mov dword [rbp - 0xc], esi	       264	cache.h	FUNCTION_4
0x4000361	    0x8b0500000000	            mov eax, dword [0x04000367] 	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x4000367	            0x85c0	                           test eax, eax	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x4000369	            0x7532	                           jne 0x400039d	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x400036b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x400036e	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x4000373	      0x3d00800000	                         cmp eax, 0x8000	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x4000378	            0x7523	                           jne 0x400039d	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x400037a	      0x48837df800	                  cmp qword [rbp - 8], 0	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x400037f	            0x741c	                            je 0x400039d	       266	cache.h	FUNCTION_4	IF_1	CALL_1
0x4000381	        0x488b45f8	                mov rax, qword [rbp - 8]	       267	cache.h	FUNCTION_4	IF_1	CALL_2
0x4000385	          0x8b4034	            mov eax, dword [rax + 0x34] 	       267	cache.h	FUNCTION_4	IF_1	CALL_2
0x4000388	      0x2500f00000	                         and eax, 0xf000	       267	cache.h	FUNCTION_4	IF_1	CALL_2
0x400038d	      0x3d00a00000	                         cmp eax, 0xa000	       267	cache.h	FUNCTION_4	IF_1	CALL_2
0x4000392	            0x7509	                           jne 0x400039d	       267	cache.h	FUNCTION_4	IF_1	CALL_2
0x4000394	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	cache.h	FUNCTION_4	IF_1
0x4000398	          0x8b4034	            mov eax, dword [rax + 0x34] 	       268	cache.h	FUNCTION_4	IF_1
0x400039b	            0xeb52	                           jmp 0x40003ef	       268	cache.h	FUNCTION_4	IF_1
0x400039d	    0x8b0500000000	            mov eax, dword [0x040003a3] 	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003a3	            0x85c0	                           test eax, eax	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003a5	            0x753e	                           jne 0x40003e5	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003a7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003aa	      0x2500f00000	                         and eax, 0xf000	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003af	      0x3d00800000	                         cmp eax, 0x8000	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003b4	            0x752f	                           jne 0x40003e5	       269	cache.h	FUNCTION_4	IF_2	CALL_3
0x40003b6	      0x48837df800	                  cmp qword [rbp - 8], 0	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003bb	            0x741c	                            je 0x40003d9	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003c1	          0x8b4034	            mov eax, dword [rax + 0x34] 	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003c4	      0x2500f00000	                         and eax, 0xf000	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003c9	      0x3d00800000	                         cmp eax, 0x8000	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003ce	            0x7509	                           jne 0x40003d9	       270	cache.h	FUNCTION_4	IF_2	IF_3	CALL_4
0x40003d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	cache.h	FUNCTION_4	IF_2	IF_3
0x40003d4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       271	cache.h	FUNCTION_4	IF_2	IF_3
0x40003d7	            0xeb16	                           jmp 0x40003ef	       271	cache.h	FUNCTION_4	IF_2	IF_3
0x40003d9	      0xbfb6010000	                          mov edi, 0x1b6	       272	cache.h	FUNCTION_4	IF_2	CALL_5
0x40003de	      0xe815ffffff	                 call sym.create_ce_mode	       272	cache.h	FUNCTION_4	IF_2	CALL_5
0x40003e3	            0xeb0a	                           jmp 0x40003ef	       272	cache.h	FUNCTION_4	IF_2	CALL_5
0x40003e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       274	cache.h	FUNCTION_4	CALL_6
0x40003e8	            0x89c7	                            mov edi, eax	       274	cache.h	FUNCTION_4	CALL_6
0x40003ea	      0xe809ffffff	                 call sym.create_ce_mode	       274	cache.h	FUNCTION_4	CALL_6
0x40003ef	              0xc9	                                   leave	       275	cache.h	FUNCTION_4
0x40003f0	              0xc3	                                     ret	       275	cache.h	FUNCTION_4
mark_ce_flags	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,3:ELSE,1	90
0x4000def	              0x55	                                push rbp	       229	update-index.c	FUNCTION_38
0x4000df0	          0x4889e5	                            mov rbp, rsp	       229	update-index.c	FUNCTION_38
0x4000df3	        0x4883ec20	                           sub rsp, 0x20	       229	update-index.c	FUNCTION_38
0x4000df7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       229	update-index.c	FUNCTION_38
0x4000dfb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       229	update-index.c	FUNCTION_38
0x4000dfe	          0x8955e0	             mov dword [rbp - 0x20], edx	       229	update-index.c	FUNCTION_38
0x4000e01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       230	update-index.c	FUNCTION_38	CALL_1
0x4000e05	          0x4889c7	                            mov rdi, rax	       230	update-index.c	FUNCTION_38	CALL_1
0x4000e08	      0xe800000000	                          call 0x4000e0d	       230	update-index.c	FUNCTION_38	CALL_1
0x4000e0d	          0x8945f8	                mov dword [rbp - 8], eax	       230	update-index.c	FUNCTION_38	CALL_1
0x4000e10	          0x8b55f8	                mov edx, dword [rbp - 8]	       231	update-index.c	FUNCTION_38
0x4000e13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	update-index.c	FUNCTION_38
0x4000e17	          0x4889c6	                            mov rsi, rax	       231	update-index.c	FUNCTION_38
0x4000e1a	      0xbf00000000	                              mov edi, 0	       231	update-index.c	FUNCTION_38
0x4000e1f	      0xe800000000	                          call 0x4000e24	       231	update-index.c	FUNCTION_38
0x4000e24	          0x8945fc	                mov dword [rbp - 4], eax	       231	update-index.c	FUNCTION_38
0x4000e27	        0x837dfc00	                  cmp dword [rbp - 4], 0	       232	update-index.c	FUNCTION_38	IF_1
0x4000e2b	     0xf8801010000	                            js 0x4000f32	       232	update-index.c	FUNCTION_38	IF_1
0x4000e31	    0x488b05000000	            mov rax, qword [0x04000e38] 	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e38	          0x8b55fc	                mov edx, dword [rbp - 4]	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e3b	          0x4863d2	                         movsxd rdx, edx	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e3e	        0x48c1e203	                              shl rdx, 3	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e42	          0x4801d0	                            add rax, rdx	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e45	          0x488b00	                    mov rax, qword [rax]	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e48	          0x4889c6	                            mov rsi, rax	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e4b	      0xbf00000000	                              mov edi, 0	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e50	      0xe8cdf6ffff	         call sym.mark_fsmonitor_invalid	       233	update-index.c	FUNCTION_38	IF_1	CALL_2
0x4000e55	        0x837de000	               cmp dword [rbp - 0x20], 0	       234	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e59	            0x743b	                            je 0x4000e96	       234	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e5b	    0x488b05000000	            mov rax, qword [0x04000e62] 	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e62	          0x8b55fc	                mov edx, dword [rbp - 4]	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e65	          0x4863d2	                         movsxd rdx, edx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e68	        0x48c1e203	                              shl rdx, 3	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e6c	          0x4801d0	                            add rax, rdx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e6f	          0x488b00	                    mov rax, qword [rax]	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e72	    0x488b15000000	            mov rdx, qword [0x04000e79] 	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e79	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e7c	          0x4863c9	                         movsxd rcx, ecx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e7f	        0x48c1e103	                              shl rcx, 3	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e83	          0x4801ca	                            add rdx, rcx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e86	          0x488b12	                    mov rdx, qword [rdx]	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e89	          0x8b4a38	            mov ecx, dword [rdx + 0x38] 	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e8c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e8f	             0x9ca	                             or edx, ecx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e91	          0x895038	             mov dword [rax + 0x38], edx	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e94	            0xeb3b	                           jmp 0x4000ed1	       235	update-index.c	FUNCTION_38	IF_1	IF_2
0x4000e96	    0x488b05000000	            mov rax, qword [0x04000e9d] 	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000e9d	          0x8b55fc	                mov edx, dword [rbp - 4]	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ea0	          0x4863d2	                         movsxd rdx, edx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ea3	        0x48c1e203	                              shl rdx, 3	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ea7	          0x4801d0	                            add rax, rdx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000eaa	          0x488b00	                    mov rax, qword [rax]	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ead	    0x488b15000000	            mov rdx, qword [0x04000eb4] 	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000eb4	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000eb7	          0x4863c9	                         movsxd rcx, ecx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000eba	        0x48c1e103	                              shl rcx, 3	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ebe	          0x4801ca	                            add rdx, rcx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ec1	          0x488b12	                    mov rdx, qword [rdx]	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ec4	          0x8b5238	            mov edx, dword [rdx + 0x38] 	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ec7	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000eca	            0xf7d1	                                 not ecx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ecc	            0x21ca	                            and edx, ecx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ece	          0x895038	             mov dword [rax + 0x38], edx	       237	update-index.c	FUNCTION_38	IF_1	ELSE_1
0x4000ed1	    0x488b05000000	            mov rax, qword [0x04000ed8] 	       238	update-index.c	FUNCTION_38	IF_1
0x4000ed8	          0x8b55fc	                mov edx, dword [rbp - 4]	       238	update-index.c	FUNCTION_38	IF_1
0x4000edb	          0x4863d2	                         movsxd rdx, edx	       238	update-index.c	FUNCTION_38	IF_1
0x4000ede	        0x48c1e203	                              shl rdx, 3	       238	update-index.c	FUNCTION_38	IF_1
0x4000ee2	          0x4801d0	                            add rax, rdx	       238	update-index.c	FUNCTION_38	IF_1
0x4000ee5	          0x488b00	                    mov rax, qword [rax]	       238	update-index.c	FUNCTION_38	IF_1
0x4000ee8	    0x488b15000000	            mov rdx, qword [0x04000eef] 	       238	update-index.c	FUNCTION_38	IF_1
0x4000eef	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       238	update-index.c	FUNCTION_38	IF_1
0x4000ef2	          0x4863c9	                         movsxd rcx, ecx	       238	update-index.c	FUNCTION_38	IF_1
0x4000ef5	        0x48c1e103	                              shl rcx, 3	       238	update-index.c	FUNCTION_38	IF_1
0x4000ef9	          0x4801ca	                            add rdx, rcx	       238	update-index.c	FUNCTION_38	IF_1
0x4000efc	          0x488b12	                    mov rdx, qword [rdx]	       238	update-index.c	FUNCTION_38	IF_1
0x4000eff	          0x8b5238	            mov edx, dword [rdx + 0x38] 	       238	update-index.c	FUNCTION_38	IF_1
0x4000f02	    0x81ca00000008	                    or edx, section_end.	       238	update-index.c	FUNCTION_38	IF_1
0x4000f08	          0x895038	             mov dword [rax + 0x38], edx	       238	update-index.c	FUNCTION_38	IF_1
0x4000f0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	update-index.c	FUNCTION_38	IF_1	CALL_3
0x4000f0f	          0x4889c6	                            mov rsi, rax	       239	update-index.c	FUNCTION_38	IF_1	CALL_3
0x4000f12	      0xbf00000000	                              mov edi, 0	       239	update-index.c	FUNCTION_38	IF_1	CALL_3
0x4000f17	      0xe800000000	                          call 0x4000f1c	       239	update-index.c	FUNCTION_38	IF_1	CALL_3
0x4000f1c	    0x8b0500000000	            mov eax, dword [0x04000f22] 	       240	update-index.c	FUNCTION_38	IF_1
0x4000f22	          0x83c802	                               or eax, 2	       240	update-index.c	FUNCTION_38	IF_1
0x4000f25	    0x890500000000	            mov dword [0x04000f2b], eax 	       240	update-index.c	FUNCTION_38	IF_1
0x4000f2b	      0xb800000000	                              mov eax, 0	       241	update-index.c	FUNCTION_38	IF_1
0x4000f30	            0xeb05	                           jmp 0x4000f37	       241	update-index.c	FUNCTION_38	IF_1
0x4000f32	      0xb8ffffffff	                     mov eax, 0xffffffff	       243	update-index.c	FUNCTION_38
0x4000f37	              0xc9	                                   leave	       244	update-index.c	FUNCTION_38
0x4000f38	              0xc3	                                     ret	       244	update-index.c	FUNCTION_38
strbuf_addstr	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	17
0x4000258	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_69
0x4000259	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_69
0x400025c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_69
0x4000260	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_69
0x4000264	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_69
0x4000268	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x400026c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x400026f	      0xe800000000	                          call 0x4000274	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000274	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000277	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x400027b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_69	CALL_2
0x400027f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000282	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000285	      0xe800000000	                          call 0x400028a	       279	strbuf.h	FUNCTION_69	CALL_2
0x400028a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_69
0x400028b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_69
0x400028c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_69
read_one_ent	IF,4:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,6:ELSE,0	89
0x4001c35	              0x55	                                push rbp	       589	update-index.c	FUNCTION_48
0x4001c36	          0x4889e5	                            mov rbp, rsp	       589	update-index.c	FUNCTION_48
0x4001c39	        0x4883ec50	                           sub rsp, 0x50	       589	update-index.c	FUNCTION_48
0x4001c3d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       589	update-index.c	FUNCTION_48
0x4001c41	        0x488975c0	             mov qword [rbp - 0x40], rsi	       589	update-index.c	FUNCTION_48
0x4001c45	        0x488955b8	             mov qword [rbp - 0x48], rdx	       589	update-index.c	FUNCTION_48
0x4001c49	          0x894db4	             mov dword [rbp - 0x4c], ecx	       589	update-index.c	FUNCTION_48
0x4001c4c	        0x448945b0	             mov dword [rbp - 0x50], r8d	       589	update-index.c	FUNCTION_48
0x4001c50	    0x64488b042528	                mov rax, qword fs:[0x28]	       589	update-index.c	FUNCTION_48
0x4001c59	        0x488945f8	                mov qword [rbp - 8], rax	       589	update-index.c	FUNCTION_48
0x4001c5d	            0x31c0	                            xor eax, eax	       589	update-index.c	FUNCTION_48
0x4001c5f	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c63	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c67	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c6b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c6f	          0x4889c7	                            mov rdi, rax	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c72	      0xe800000000	                          call 0x4001c77	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c77	            0x85c0	                           test eax, eax	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c79	            0x7430	                            je 0x4001cab	       595	update-index.c	FUNCTION_48	IF_1	CALL_1
0x4001c7b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       596	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c80	            0x741f	                            je 0x4001ca1	       596	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c82	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c8a	          0x4889c6	                            mov rsi, rax	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c8d	      0xbf00000000	                              mov edi, 0	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c92	      0xb800000000	                              mov eax, 0	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c97	      0xe800000000	                          call 0x4001c9c	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001c9c	      0xe89fe3ffff	                    call sym.const_error	       597	update-index.c	FUNCTION_48	IF_1	IF_2
0x4001ca1	      0xb800000000	                              mov eax, 0	       598	update-index.c	FUNCTION_48	IF_1
0x4001ca6	      0xe9c1000000	                           jmp 0x4001d6c	       598	update-index.c	FUNCTION_48	IF_1
0x4001cab	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       600	update-index.c	FUNCTION_48	IF_3
0x4001cae	      0x3d00400000	                         cmp eax, 0x4000	       600	update-index.c	FUNCTION_48	IF_3
0x4001cb3	            0x7530	                           jne 0x4001ce5	       600	update-index.c	FUNCTION_48	IF_3
0x4001cb5	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       601	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cba	            0x741f	                            je 0x4001cdb	       601	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cbc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cc0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cc4	          0x4889c6	                            mov rsi, rax	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cc7	      0xbf00000000	                              mov edi, 0	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001ccc	      0xb800000000	                              mov eax, 0	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cd1	      0xe800000000	                          call 0x4001cd6	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cd6	      0xe865e3ffff	                    call sym.const_error	       602	update-index.c	FUNCTION_48	IF_3	IF_4
0x4001cdb	      0xb800000000	                              mov eax, 0	       603	update-index.c	FUNCTION_48	IF_3
0x4001ce0	      0xe987000000	                           jmp 0x4001d6c	       603	update-index.c	FUNCTION_48	IF_3
0x4001ce5	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       605	update-index.c	FUNCTION_48
0x4001ce8	          0x83c059	                           add eax, 0x59	       605	update-index.c	FUNCTION_48
0x4001ceb	          0x8945d4	             mov dword [rbp - 0x2c], eax	       605	update-index.c	FUNCTION_48
0x4001cee	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       606	update-index.c	FUNCTION_48	CALL_2
0x4001cf1	            0x4898	                                    cdqe	       606	update-index.c	FUNCTION_48	CALL_2
0x4001cf3	          0x4889c6	                            mov rsi, rax	       606	update-index.c	FUNCTION_48	CALL_2
0x4001cf6	      0xbf01000000	                              mov edi, 1	       606	update-index.c	FUNCTION_48	CALL_2
0x4001cfb	      0xe800000000	                          call 0x4001d00	       606	update-index.c	FUNCTION_48	CALL_2
0x4001d00	        0x488945d8	             mov qword [rbp - 0x28], rax	       606	update-index.c	FUNCTION_48	CALL_2
0x4001d04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d08	        0x488d5044	                   lea rdx, [rax + 0x44]	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d0c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d10	          0x4889c6	                            mov rsi, rax	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d13	          0x4889d7	                            mov rdi, rdx	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d16	      0xe850e7ffff	                         call sym.oidcpy	       608	update-index.c	FUNCTION_48	CALL_3
0x4001d1b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d1e	          0x4863d0	                         movsxd rdx, eax	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d25	        0x488d4858	                   lea rcx, [rax + 0x58]	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d29	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d2d	          0x4889c6	                            mov rsi, rax	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d30	          0x4889cf	                            mov rdi, rcx	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d33	      0xe800000000	                          call 0x4001d38	       609	update-index.c	FUNCTION_48	CALL_4
0x4001d38	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d3b	            0x89c7	                            mov edi, eax	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d3d	      0xe8a7e5ffff	                call sym.create_ce_flags	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d42	            0x89c2	                            mov edx, eax	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d48	          0x895038	             mov dword [rax + 0x38], edx	       610	update-index.c	FUNCTION_48	CALL_5
0x4001d4b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       611	update-index.c	FUNCTION_48
0x4001d4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       611	update-index.c	FUNCTION_48
0x4001d52	          0x89503c	             mov dword [rax + 0x3c], edx	       611	update-index.c	FUNCTION_48
0x4001d55	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d58	            0x89c7	                            mov edi, eax	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d5a	      0xe899e5ffff	                 call sym.create_ce_mode	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d5f	            0x89c2	                            mov edx, eax	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d65	          0x895034	             mov dword [rax + 0x34], edx	       612	update-index.c	FUNCTION_48	CALL_6
0x4001d68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       613	update-index.c	FUNCTION_48
0x4001d6c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       614	update-index.c	FUNCTION_48
0x4001d70	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       614	update-index.c	FUNCTION_48
0x4001d79	            0x7405	                            je 0x4001d80	       614	update-index.c	FUNCTION_48
0x4001d7b	      0xe800000000	                          call 0x4001d80	       614	update-index.c	FUNCTION_48
0x4001d80	              0xc9	                                   leave	       614	update-index.c	FUNCTION_48
0x4001d81	              0xc3	                                     ret	       614	update-index.c	FUNCTION_48
create_ce_mode	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	28
0x40002f8	              0x55	                                push rbp	       255	cache.h	FUNCTION_3
0x40002f9	          0x4889e5	                            mov rbp, rsp	       255	cache.h	FUNCTION_3
0x40002fc	          0x897dfc	                mov dword [rbp - 4], edi	       255	cache.h	FUNCTION_3
0x40002ff	          0x8b45fc	                mov eax, dword [rbp - 4]	       256	cache.h	FUNCTION_3	IF_1	CALL_1
0x4000302	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_3	IF_1	CALL_1
0x4000307	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_3	IF_1	CALL_1
0x400030c	            0x7507	                           jne 0x4000315	       256	cache.h	FUNCTION_3	IF_1	CALL_1
0x400030e	      0xb800a00000	                         mov eax, 0xa000	       257	cache.h	FUNCTION_3	IF_1
0x4000313	            0xeb3b	                           jmp 0x4000350	       257	cache.h	FUNCTION_3	IF_1
0x4000315	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000318	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x400031d	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000322	            0x740f	                            je 0x4000333	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000324	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000327	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x400032c	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000331	            0x7507	                           jne 0x400033a	       258	cache.h	FUNCTION_3	IF_2	CALL_2
0x4000333	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_3	IF_2
0x4000338	            0xeb16	                           jmp 0x4000350	       259	cache.h	FUNCTION_3	IF_2
0x400033a	          0x8b45fc	                mov eax, dword [rbp - 4]	       260	cache.h	FUNCTION_3
0x400033d	          0x83e040	                           and eax, 0x40	       260	cache.h	FUNCTION_3
0x4000340	            0x85c0	                           test eax, eax	       260	cache.h	FUNCTION_3
0x4000342	            0x7407	                            je 0x400034b	       260	cache.h	FUNCTION_3
0x4000344	      0xb8ed810000	                         mov eax, 0x81ed	       260	cache.h	FUNCTION_3
0x4000349	            0xeb05	                           jmp 0x4000350	       260	cache.h	FUNCTION_3
0x400034b	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_3
0x4000350	              0x5d	                                 pop rbp	       261	cache.h	FUNCTION_3
0x4000351	              0xc3	                                     ret	       261	cache.h	FUNCTION_3
xmkdir	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,3:ELSE,0	25
0x40006f5	              0x55	                                push rbp	        79	update-index.c	FUNCTION_31
0x40006f6	          0x4889e5	                            mov rbp, rsp	        79	update-index.c	FUNCTION_31
0x40006f9	        0x4883ec10	                           sub rsp, 0x10	        79	update-index.c	FUNCTION_31
0x40006fd	        0x48897df8	                mov qword [rbp - 8], rdi	        79	update-index.c	FUNCTION_31
0x4000701	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	update-index.c	FUNCTION_31	CALL_1
0x4000705	          0x4889c7	                            mov rdi, rax	        80	update-index.c	FUNCTION_31	CALL_1
0x4000708	      0xe89fffffff	                 call sym.get_mtime_path	        80	update-index.c	FUNCTION_31	CALL_1
0x400070d	        0x488945f8	                mov qword [rbp - 8], rax	        80	update-index.c	FUNCTION_31	CALL_1
0x4000711	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	update-index.c	FUNCTION_31	IF_1
0x4000715	      0xbec0010000	                          mov esi, 0x1c0	        81	update-index.c	FUNCTION_31	IF_1
0x400071a	          0x4889c7	                            mov rdi, rax	        81	update-index.c	FUNCTION_31	IF_1
0x400071d	      0xe800000000	                          call 0x4000722	        81	update-index.c	FUNCTION_31	IF_1
0x4000722	            0x85c0	                           test eax, eax	        81	update-index.c	FUNCTION_31	IF_1
0x4000724	            0x7421	                            je 0x4000747	        81	update-index.c	FUNCTION_31	IF_1
0x4000726	      0xbf00000000	                              mov edi, 0	        82	update-index.c	FUNCTION_31	CALL_3
0x400072b	      0xe85dfbffff	                               call sym.	        82	update-index.c	FUNCTION_31	CALL_3
0x4000730	          0x4889c2	                            mov rdx, rax	        82	update-index.c	FUNCTION_31	CALL_3
0x4000733	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	update-index.c	FUNCTION_31	CALL_3
0x4000737	          0x4889c6	                            mov rsi, rax	        82	update-index.c	FUNCTION_31	CALL_3
0x400073a	          0x4889d7	                            mov rdi, rdx	        82	update-index.c	FUNCTION_31	CALL_3
0x400073d	      0xb800000000	                              mov eax, 0	        82	update-index.c	FUNCTION_31	CALL_3
0x4000742	      0xe800000000	                          call 0x4000747	        82	update-index.c	FUNCTION_31	CALL_3
0x4000747	              0x90	                                     nop	        83	update-index.c	FUNCTION_31
0x4000748	              0xc9	                                   leave	        83	update-index.c	FUNCTION_31
0x4000749	              0xc3	                                     ret	        83	update-index.c	FUNCTION_31
read_head_pointers	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,5:ELSE,0	26
0x400204d	              0x55	                                push rbp	       689	update-index.c	FUNCTION_50
0x400204e	          0x4889e5	                            mov rbp, rsp	       689	update-index.c	FUNCTION_50
0x4002051	      0xbe00000000	                              mov esi, 0	       690	update-index.c	FUNCTION_50	IF_1	CALL_1
0x4002056	      0xbf00000000	                              mov edi, 0	       690	update-index.c	FUNCTION_50	IF_1	CALL_1
0x400205b	      0xe800000000	                          call 0x4002060	       690	update-index.c	FUNCTION_50	IF_1	CALL_1
0x4002060	            0x85c0	                           test eax, eax	       690	update-index.c	FUNCTION_50	IF_1	CALL_1
0x4002062	            0x740f	                            je 0x4002073	       690	update-index.c	FUNCTION_50	IF_1	CALL_1
0x4002064	      0xbf00000000	                              mov edi, 0	       691	update-index.c	FUNCTION_50	CALL_2
0x4002069	      0xb800000000	                              mov eax, 0	       691	update-index.c	FUNCTION_50	CALL_2
0x400206e	      0xe800000000	                          call 0x4002073	       691	update-index.c	FUNCTION_50	CALL_2
0x4002073	      0xbe00000000	                              mov esi, 0	       692	update-index.c	FUNCTION_50	IF_2	CALL_3
0x4002078	      0xbf00000000	                              mov edi, 0	       692	update-index.c	FUNCTION_50	IF_2	CALL_3
0x400207d	      0xe800000000	                          call 0x4002082	       692	update-index.c	FUNCTION_50	IF_2	CALL_3
0x4002082	            0x85c0	                           test eax, eax	       692	update-index.c	FUNCTION_50	IF_2	CALL_3
0x4002084	            0x7428	                            je 0x40020ae	       692	update-index.c	FUNCTION_50	IF_2	CALL_3
0x4002086	    0x488b05000000	            mov rax, qword [0x0400208d] 	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x400208d	          0x4889c1	                            mov rcx, rax	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x4002090	      0xba1e000000	                           mov edx, 0x1e	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x4002095	      0xbe01000000	                              mov esi, 1	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x400209a	      0xbf00000000	                              mov edi, 0	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x400209f	      0xe800000000	                          call 0x40020a4	       693	update-index.c	FUNCTION_50	IF_2	CALL_4
0x40020a4	      0xbf00000000	                              mov edi, 0	       694	update-index.c	FUNCTION_50	IF_2	CALL_5
0x40020a9	      0xe800000000	                          call 0x40020ae	       694	update-index.c	FUNCTION_50	IF_2	CALL_5
0x40020ae	              0x90	                                     nop	       696	update-index.c	FUNCTION_50
0x40020af	              0x5d	                                 pop rbp	       696	update-index.c	FUNCTION_50
0x40020b0	              0xc3	                                     ret	       696	update-index.c	FUNCTION_50
update_one	IF,10:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,13:ELSE,0	113
0x400173b	              0x55	                                push rbp	       451	update-index.c	FUNCTION_46
0x400173c	          0x4889e5	                            mov rbp, rsp	       451	update-index.c	FUNCTION_46
0x400173f	        0x4883ec10	                           sub rsp, 0x10	       451	update-index.c	FUNCTION_46
0x4001743	        0x48897df8	                mov qword [rbp - 8], rdi	       451	update-index.c	FUNCTION_46
0x4001747	        0x488b45f8	                mov rax, qword [rbp - 8]	       452	update-index.c	FUNCTION_46	IF_1	CALL_1
0x400174b	          0x4889c7	                            mov rdi, rax	       452	update-index.c	FUNCTION_46	IF_1	CALL_1
0x400174e	      0xe800000000	                          call 0x4001753	       452	update-index.c	FUNCTION_46	IF_1	CALL_1
0x4001753	            0x85c0	                           test eax, eax	       452	update-index.c	FUNCTION_46	IF_1	CALL_1
0x4001755	            0x7522	                           jne 0x4001779	       452	update-index.c	FUNCTION_46	IF_1	CALL_1
0x4001757	    0x488b05000000	            mov rax, qword [0x0400175e] 	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x400175e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x4001762	      0xbe00000000	                              mov esi, 0	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x4001767	          0x4889c7	                            mov rdi, rax	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x400176a	      0xb800000000	                              mov eax, 0	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x400176f	      0xe800000000	                          call 0x4001774	       453	update-index.c	FUNCTION_46	IF_1	CALL_2
0x4001774	      0xe96a010000	                           jmp 0x40018e3	       454	update-index.c	FUNCTION_46	IF_1
0x4001779	    0x8b0500000000	            mov eax, dword [0x0400177f] 	       456	update-index.c	FUNCTION_46	IF_2
0x400177f	            0x85c0	                           test eax, eax	       456	update-index.c	FUNCTION_46	IF_2
0x4001781	            0x743e	                            je 0x40017c1	       456	update-index.c	FUNCTION_46	IF_2
0x4001783	    0x8b0500000000	            mov eax, dword [0x04001789] 	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x4001789	          0x83f801	                              cmp eax, 1	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x400178c	           0xf94c0	                                 sete al	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x400178f	           0xfb6d0	                           movzx edx, al	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x4001792	        0x488b45f8	                mov rax, qword [rbp - 8]	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x4001796	      0xbe00800000	                         mov esi, 0x8000	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x400179b	          0x4889c7	                            mov rdi, rax	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x400179e	      0xe84cf6ffff	                  call sym.mark_ce_flags	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x40017a3	            0x85c0	                           test eax, eax	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x40017a5	     0xf8431010000	                            je 0x40018dc	       457	update-index.c	FUNCTION_46	IF_2	IF_3	CALL_3
0x40017ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	update-index.c	FUNCTION_46	IF_2	CALL_4
0x40017af	          0x4889c6	                            mov rsi, rax	       458	update-index.c	FUNCTION_46	IF_2	CALL_4
0x40017b2	      0xbf00000000	                              mov edi, 0	       458	update-index.c	FUNCTION_46	IF_2	CALL_4
0x40017b7	      0xb800000000	                              mov eax, 0	       458	update-index.c	FUNCTION_46	IF_2	CALL_4
0x40017bc	      0xe800000000	                          call 0x40017c1	       458	update-index.c	FUNCTION_46	IF_2	CALL_4
0x40017c1	    0x8b0500000000	            mov eax, dword [0x040017c7] 	       461	update-index.c	FUNCTION_46	IF_4
0x40017c7	            0x85c0	                           test eax, eax	       461	update-index.c	FUNCTION_46	IF_4
0x40017c9	            0x743e	                            je 0x4001809	       461	update-index.c	FUNCTION_46	IF_4
0x40017cb	    0x8b0500000000	            mov eax, dword [0x040017d1] 	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017d1	          0x83f801	                              cmp eax, 1	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017d4	           0xf94c0	                                 sete al	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017d7	           0xfb6d0	                           movzx edx, al	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017da	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017de	      0xbe00000040	                     mov esi, 0x40000000	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017e3	          0x4889c7	                            mov rdi, rax	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017e6	      0xe804f6ffff	                  call sym.mark_ce_flags	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017eb	            0x85c0	                           test eax, eax	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017ed	     0xf84ec000000	                            je 0x40018df	       462	update-index.c	FUNCTION_46	IF_4	IF_5	CALL_5
0x40017f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	update-index.c	FUNCTION_46	IF_4	CALL_6
0x40017f7	          0x4889c6	                            mov rsi, rax	       463	update-index.c	FUNCTION_46	IF_4	CALL_6
0x40017fa	      0xbf00000000	                              mov edi, 0	       463	update-index.c	FUNCTION_46	IF_4	CALL_6
0x40017ff	      0xb800000000	                              mov eax, 0	       463	update-index.c	FUNCTION_46	IF_4	CALL_6
0x4001804	      0xe800000000	                          call 0x4001809	       463	update-index.c	FUNCTION_46	IF_4	CALL_6
0x4001809	    0x8b0500000000	            mov eax, dword [0x0400180f] 	       466	update-index.c	FUNCTION_46	IF_6
0x400180f	            0x85c0	                           test eax, eax	       466	update-index.c	FUNCTION_46	IF_6
0x4001811	            0x743e	                            je 0x4001851	       466	update-index.c	FUNCTION_46	IF_6
0x4001813	    0x8b0500000000	            mov eax, dword [0x04001819] 	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x4001819	          0x83f801	                              cmp eax, 1	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x400181c	           0xf94c0	                                 sete al	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x400181f	           0xfb6d0	                           movzx edx, al	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x4001822	        0x488b45f8	                mov rax, qword [rbp - 8]	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x4001826	      0xbe00002000	                       mov esi, 0x200000	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x400182b	          0x4889c7	                            mov rdi, rax	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x400182e	      0xe8bcf5ffff	                  call sym.mark_ce_flags	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x4001833	            0x85c0	                           test eax, eax	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x4001835	     0xf84a7000000	                            je 0x40018e2	       467	update-index.c	FUNCTION_46	IF_6	IF_7	CALL_7
0x400183b	        0x488b45f8	                mov rax, qword [rbp - 8]	       468	update-index.c	FUNCTION_46	IF_6	CALL_8
0x400183f	          0x4889c6	                            mov rsi, rax	       468	update-index.c	FUNCTION_46	IF_6	CALL_8
0x4001842	      0xbf00000000	                              mov edi, 0	       468	update-index.c	FUNCTION_46	IF_6	CALL_8
0x4001847	      0xb800000000	                              mov eax, 0	       468	update-index.c	FUNCTION_46	IF_6	CALL_8
0x400184c	      0xe800000000	                          call 0x4001851	       468	update-index.c	FUNCTION_46	IF_6	CALL_8
0x4001851	    0x8b0500000000	            mov eax, dword [0x04001857] 	       472	update-index.c	FUNCTION_46	IF_8
0x4001857	            0x85c0	                           test eax, eax	       472	update-index.c	FUNCTION_46	IF_8
0x4001859	            0x7443	                            je 0x400189e	       472	update-index.c	FUNCTION_46	IF_8
0x400185b	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x400185f	          0x4889c6	                            mov rsi, rax	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x4001862	      0xbf00000000	                              mov edi, 0	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x4001867	      0xe800000000	                          call 0x400186c	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x400186c	            0x85c0	                           test eax, eax	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x400186e	            0x7416	                            je 0x4001886	       473	update-index.c	FUNCTION_46	IF_8	IF_9
0x4001870	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	update-index.c	FUNCTION_46	IF_8	CALL_9
0x4001874	          0x4889c6	                            mov rsi, rax	       474	update-index.c	FUNCTION_46	IF_8	CALL_9
0x4001877	      0xbf00000000	                              mov edi, 0	       474	update-index.c	FUNCTION_46	IF_8	CALL_9
0x400187c	      0xb800000000	                              mov eax, 0	       474	update-index.c	FUNCTION_46	IF_8	CALL_9
0x4001881	      0xe800000000	                          call 0x4001886	       474	update-index.c	FUNCTION_46	IF_8	CALL_9
0x4001886	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	update-index.c	FUNCTION_46	IF_8	CALL_10
0x400188a	          0x4889c6	                            mov rsi, rax	       475	update-index.c	FUNCTION_46	IF_8	CALL_10
0x400188d	      0xbf00000000	                              mov edi, 0	       475	update-index.c	FUNCTION_46	IF_8	CALL_10
0x4001892	      0xb800000000	                              mov eax, 0	       475	update-index.c	FUNCTION_46	IF_8	CALL_10
0x4001897	      0xe80dedffff	                         call sym.report	       475	update-index.c	FUNCTION_46	IF_8	CALL_10
0x400189c	            0xeb45	                           jmp 0x40018e3	       476	update-index.c	FUNCTION_46	IF_8
0x400189e	        0x488b45f8	                mov rax, qword [rbp - 8]	       478	update-index.c	FUNCTION_46	IF_10	CALL_11
0x40018a2	          0x4889c7	                            mov rdi, rax	       478	update-index.c	FUNCTION_46	IF_10	CALL_11
0x40018a5	      0xe8a6faffff	                   call sym.process_path	       478	update-index.c	FUNCTION_46	IF_10	CALL_11
0x40018aa	            0x85c0	                           test eax, eax	       478	update-index.c	FUNCTION_46	IF_10	CALL_11
0x40018ac	            0x7416	                            je 0x40018c4	       478	update-index.c	FUNCTION_46	IF_10	CALL_11
0x40018ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	update-index.c	FUNCTION_46	CALL_12
0x40018b2	          0x4889c6	                            mov rsi, rax	       479	update-index.c	FUNCTION_46	CALL_12
0x40018b5	      0xbf00000000	                              mov edi, 0	       479	update-index.c	FUNCTION_46	CALL_12
0x40018ba	      0xb800000000	                              mov eax, 0	       479	update-index.c	FUNCTION_46	CALL_12
0x40018bf	      0xe800000000	                          call 0x40018c4	       479	update-index.c	FUNCTION_46	CALL_12
0x40018c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	update-index.c	FUNCTION_46	CALL_13
0x40018c8	          0x4889c6	                            mov rsi, rax	       480	update-index.c	FUNCTION_46	CALL_13
0x40018cb	      0xbf00000000	                              mov edi, 0	       480	update-index.c	FUNCTION_46	CALL_13
0x40018d0	      0xb800000000	                              mov eax, 0	       480	update-index.c	FUNCTION_46	CALL_13
0x40018d5	      0xe8cfecffff	                         call sym.report	       480	update-index.c	FUNCTION_46	CALL_13
0x40018da	            0xeb07	                           jmp 0x40018e3	       480	update-index.c	FUNCTION_46	CALL_13
0x40018dc	              0x90	                                     nop	       459	update-index.c	FUNCTION_46	IF_2
0x40018dd	            0xeb04	                           jmp 0x40018e3	       459	update-index.c	FUNCTION_46	IF_2
0x40018df	              0x90	                                     nop	       464	update-index.c	FUNCTION_46	IF_4
0x40018e0	            0xeb01	                           jmp 0x40018e3	       464	update-index.c	FUNCTION_46	IF_4
0x40018e2	              0x90	                                     nop	       469	update-index.c	FUNCTION_46	IF_6
0x40018e3	              0xc9	                                   leave	       481	update-index.c	FUNCTION_46
0x40018e4	              0xc3	                                     ret	       481	update-index.c	FUNCTION_46
mark_fsmonitor_invalid	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	37
0x4000522	              0x55	                                push rbp	        65	fsmonitor.h	FUNCTION_105
0x4000523	          0x4889e5	                            mov rbp, rsp	        65	fsmonitor.h	FUNCTION_105
0x4000526	        0x4883ec10	                           sub rsp, 0x10	        65	fsmonitor.h	FUNCTION_105
0x400052a	        0x48897df8	                mov qword [rbp - 8], rdi	        65	fsmonitor.h	FUNCTION_105
0x400052e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	fsmonitor.h	FUNCTION_105
0x4000532	    0x488b05000000	            mov rax, qword [0x04000539] 	        66	fsmonitor.h	FUNCTION_105	IF_1
0x4000539	          0x4885c0	                           test rax, rax	        66	fsmonitor.h	FUNCTION_105	IF_1
0x400053c	            0x7468	                            je 0x40005a6	        66	fsmonitor.h	FUNCTION_105	IF_1
0x400053e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_105	IF_1
0x4000542	          0x8b4038	            mov eax, dword [rax + 0x38] 	        67	fsmonitor.h	FUNCTION_105	IF_1
0x4000545	      0x25ffffdfff	                     and eax, 0xffdfffff	        67	fsmonitor.h	FUNCTION_105	IF_1
0x400054a	            0x89c2	                            mov edx, eax	        67	fsmonitor.h	FUNCTION_105	IF_1
0x400054c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_105	IF_1
0x4000550	          0x895038	             mov dword [rax + 0x38], edx	        67	fsmonitor.h	FUNCTION_105	IF_1
0x4000553	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x4000557	        0x488d4858	                   lea rcx, [rax + 0x58]	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x400055b	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x400055f	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x4000564	          0x4889ce	                            mov rsi, rcx	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x4000567	          0x4889c7	                            mov rdi, rax	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x400056a	      0xe800000000	                          call 0x400056f	        68	fsmonitor.h	FUNCTION_105	IF_1	CALL_1
0x400056f	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000574	      0xe840fdffff	                  call sym.trace_pass_fl	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000579	            0x85c0	                           test eax, eax	        69	fsmonitor.h	FUNCTION_105	IF_1
0x400057b	            0x7429	                            je 0x40005a6	        69	fsmonitor.h	FUNCTION_105	IF_1
0x400057d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000581	        0x4883c058	                           add rax, 0x58	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000585	          0x4989c0	                             mov r8, rax	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000588	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_105	IF_1
0x400058d	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000592	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_105	IF_1
0x4000597	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_105	IF_1
0x400059c	      0xb800000000	                              mov eax, 0	        69	fsmonitor.h	FUNCTION_105	IF_1
0x40005a1	      0xe800000000	                          call 0x40005a6	        69	fsmonitor.h	FUNCTION_105	IF_1
0x40005a6	              0x90	                                     nop	        71	fsmonitor.h	FUNCTION_105
0x40005a7	              0xc9	                                   leave	        71	fsmonitor.h	FUNCTION_105
0x40005a8	              0xc3	                                     ret	        71	fsmonitor.h	FUNCTION_105
strbuf_swap	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	39
0x400012a	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_65
0x400012b	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_65
0x400012e	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_65
0x4000132	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_65
0x4000136	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_65
0x400013a	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_65
0x4000143	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_65
0x4000147	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_65
0x4000149	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_65
0x400014d	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_65
0x4000151	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_65
0x4000155	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_65
0x4000159	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_65
0x400015d	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_65
0x4000160	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_65
0x4000164	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_65
0x4000168	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_65
0x400016c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_65
0x4000170	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_65
0x4000174	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_65
0x4000178	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_65
0x400017c	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_65
0x4000181	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_65
0x4000184	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_65
0x4000187	      0xe800000000	                          call 0x400018c	       127	strbuf.h	FUNCTION_65
0x400018c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_65
0x4000190	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_65
0x4000194	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_65
0x4000197	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_65
0x400019b	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_65
0x400019f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_65
0x40001a3	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_65
0x40001a7	              0x90	                                     nop	       128	strbuf.h	FUNCTION_65
0x40001a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_65
0x40001ac	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_65
0x40001b5	            0x7405	                            je 0x40001bc	       128	strbuf.h	FUNCTION_65
0x40001b7	      0xe800000000	                          call 0x40001bc	       128	strbuf.h	FUNCTION_65
0x40001bc	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_65
0x40001bd	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_65
chmod_path	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,3:ELSE,0	49
0x4001694	              0x55	                                push rbp	       433	update-index.c	FUNCTION_45
0x4001695	          0x4889e5	                            mov rbp, rsp	       433	update-index.c	FUNCTION_45
0x4001698	        0x4883ec20	                           sub rsp, 0x20	       433	update-index.c	FUNCTION_45
0x400169c	            0x89f8	                            mov eax, edi	       433	update-index.c	FUNCTION_45
0x400169e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       433	update-index.c	FUNCTION_45
0x40016a2	          0x8845ec	               mov byte [rbp - 0x14], al	       433	update-index.c	FUNCTION_45
0x40016a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	update-index.c	FUNCTION_45	CALL_1
0x40016a9	          0x4889c7	                            mov rdi, rax	       437	update-index.c	FUNCTION_45	CALL_1
0x40016ac	      0xe800000000	                          call 0x40016b1	       437	update-index.c	FUNCTION_45	CALL_1
0x40016b1	            0x89c2	                            mov edx, eax	       437	update-index.c	FUNCTION_45	CALL_1
0x40016b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       437	update-index.c	FUNCTION_45	CALL_1
0x40016b7	          0x4889c6	                            mov rsi, rax	       437	update-index.c	FUNCTION_45	CALL_1
0x40016ba	      0xbf00000000	                              mov edi, 0	       437	update-index.c	FUNCTION_45	CALL_1
0x40016bf	      0xe800000000	                          call 0x40016c4	       437	update-index.c	FUNCTION_45	CALL_1
0x40016c4	          0x8945f4	              mov dword [rbp - 0xc], eax	       437	update-index.c	FUNCTION_45	CALL_1
0x40016c7	        0x837df400	                cmp dword [rbp - 0xc], 0	       438	update-index.c	FUNCTION_45	IF_1
0x40016cb	            0x784f	                            js 0x400171c	       438	update-index.c	FUNCTION_45	IF_1
0x40016cd	    0x488b05000000	            mov rax, qword [0x040016d4] 	       440	update-index.c	FUNCTION_45
0x40016d4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       440	update-index.c	FUNCTION_45
0x40016d7	          0x4863d2	                         movsxd rdx, edx	       440	update-index.c	FUNCTION_45
0x40016da	        0x48c1e203	                              shl rdx, 3	       440	update-index.c	FUNCTION_45
0x40016de	          0x4801d0	                            add rax, rdx	       440	update-index.c	FUNCTION_45
0x40016e1	          0x488b00	                    mov rax, qword [rax]	       440	update-index.c	FUNCTION_45
0x40016e4	        0x488945f8	                mov qword [rbp - 8], rax	       440	update-index.c	FUNCTION_45
0x40016e8	         0xfbe55ec	            movsx edx, byte [rbp - 0x14]	       441	update-index.c	FUNCTION_45	IF_2
0x40016ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       441	update-index.c	FUNCTION_45	IF_2
0x40016f0	          0x4889c6	                            mov rsi, rax	       441	update-index.c	FUNCTION_45	IF_2
0x40016f3	      0xbf00000000	                              mov edi, 0	       441	update-index.c	FUNCTION_45	IF_2
0x40016f8	      0xe800000000	                          call 0x40016fd	       441	update-index.c	FUNCTION_45	IF_2
0x40016fd	            0x85c0	                           test eax, eax	       441	update-index.c	FUNCTION_45	IF_2
0x40016ff	            0x781e	                            js 0x400171f	       441	update-index.c	FUNCTION_45	IF_2
0x4001701	         0xfbe45ec	            movsx eax, byte [rbp - 0x14]	       444	update-index.c	FUNCTION_45	CALL_2
0x4001705	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       444	update-index.c	FUNCTION_45	CALL_2
0x4001709	            0x89c6	                            mov esi, eax	       444	update-index.c	FUNCTION_45	CALL_2
0x400170b	      0xbf00000000	                              mov edi, 0	       444	update-index.c	FUNCTION_45	CALL_2
0x4001710	      0xb800000000	                              mov eax, 0	       444	update-index.c	FUNCTION_45	CALL_2
0x4001715	      0xe88feeffff	                         call sym.report	       444	update-index.c	FUNCTION_45	CALL_2
0x400171a	            0xeb1d	                           jmp 0x4001739	       445	update-index.c	FUNCTION_45
0x400171c	              0x90	                                     nop	       439	update-index.c	FUNCTION_45	IF_1
0x400171d	            0xeb01	                           jmp 0x4001720	       439	update-index.c	FUNCTION_45	IF_1
0x400171f	              0x90	                                     nop	       442	update-index.c	FUNCTION_45	IF_2
0x4001720	         0xfbe45ec	            movsx eax, byte [rbp - 0x14]	       447	update-index.c	FUNCTION_45	CALL_3
0x4001724	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       447	update-index.c	FUNCTION_45	CALL_3
0x4001728	            0x89c6	                            mov esi, eax	       447	update-index.c	FUNCTION_45	CALL_3
0x400172a	      0xbf00000000	                              mov edi, 0	       447	update-index.c	FUNCTION_45	CALL_3
0x400172f	      0xb800000000	                              mov eax, 0	       447	update-index.c	FUNCTION_45	CALL_3
0x4001734	      0xe800000000	                          call 0x4001739	       447	update-index.c	FUNCTION_45	CALL_3
0x4001739	              0xc9	                                   leave	       448	update-index.c	FUNCTION_45
0x400173a	              0xc3	                                     ret	       448	update-index.c	FUNCTION_45
add_cacheinfo	IF,3:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,8:ELSE,0	104
0x4001523	              0x55	                                push rbp	       405	update-index.c	FUNCTION_44
0x4001524	          0x4889e5	                            mov rbp, rsp	       405	update-index.c	FUNCTION_44
0x4001527	        0x4883ec40	                           sub rsp, 0x40	       405	update-index.c	FUNCTION_44
0x400152b	          0x897ddc	             mov dword [rbp - 0x24], edi	       405	update-index.c	FUNCTION_44
0x400152e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       405	update-index.c	FUNCTION_44
0x4001532	        0x488955c8	             mov qword [rbp - 0x38], rdx	       405	update-index.c	FUNCTION_44
0x4001536	          0x894dd8	             mov dword [rbp - 0x28], ecx	       405	update-index.c	FUNCTION_44
0x4001539	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       409	update-index.c	FUNCTION_44	IF_1	CALL_1
0x400153d	          0x4889c7	                            mov rdi, rax	       409	update-index.c	FUNCTION_44	IF_1	CALL_1
0x4001540	      0xe800000000	                          call 0x4001545	       409	update-index.c	FUNCTION_44	IF_1	CALL_1
0x4001545	            0x85c0	                           test eax, eax	       409	update-index.c	FUNCTION_44	IF_1	CALL_1
0x4001547	            0x7520	                           jne 0x4001569	       409	update-index.c	FUNCTION_44	IF_1	CALL_1
0x4001549	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       410	update-index.c	FUNCTION_44	IF_1
0x400154d	          0x4889c6	                            mov rsi, rax	       410	update-index.c	FUNCTION_44	IF_1
0x4001550	      0xbf00000000	                              mov edi, 0	       410	update-index.c	FUNCTION_44	IF_1
0x4001555	      0xb800000000	                              mov eax, 0	       410	update-index.c	FUNCTION_44	IF_1
0x400155a	      0xe800000000	                          call 0x400155f	       410	update-index.c	FUNCTION_44	IF_1
0x400155f	      0xe8dceaffff	                    call sym.const_error	       410	update-index.c	FUNCTION_44	IF_1
0x4001564	      0xe929010000	                           jmp 0x4001692	       410	update-index.c	FUNCTION_44	IF_1
0x4001569	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       412	update-index.c	FUNCTION_44	CALL_2
0x400156d	          0x4889c7	                            mov rdi, rax	       412	update-index.c	FUNCTION_44	CALL_2
0x4001570	      0xe800000000	                          call 0x4001575	       412	update-index.c	FUNCTION_44	CALL_2
0x4001575	          0x8945ec	             mov dword [rbp - 0x14], eax	       412	update-index.c	FUNCTION_44	CALL_2
0x4001578	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       413	update-index.c	FUNCTION_44
0x400157b	          0x83c059	                           add eax, 0x59	       413	update-index.c	FUNCTION_44
0x400157e	          0x8945f0	             mov dword [rbp - 0x10], eax	       413	update-index.c	FUNCTION_44
0x4001581	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       414	update-index.c	FUNCTION_44	CALL_3
0x4001584	            0x4898	                                    cdqe	       414	update-index.c	FUNCTION_44	CALL_3
0x4001586	          0x4889c6	                            mov rsi, rax	       414	update-index.c	FUNCTION_44	CALL_3
0x4001589	      0xbf01000000	                              mov edi, 1	       414	update-index.c	FUNCTION_44	CALL_3
0x400158e	      0xe800000000	                          call 0x4001593	       414	update-index.c	FUNCTION_44	CALL_3
0x4001593	        0x488945f8	                mov qword [rbp - 8], rax	       414	update-index.c	FUNCTION_44	CALL_3
0x4001597	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	update-index.c	FUNCTION_44	CALL_4
0x400159b	        0x488d5044	                   lea rdx, [rax + 0x44]	       416	update-index.c	FUNCTION_44	CALL_4
0x400159f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       416	update-index.c	FUNCTION_44	CALL_4
0x40015a3	          0x4889c6	                            mov rsi, rax	       416	update-index.c	FUNCTION_44	CALL_4
0x40015a6	          0x4889d7	                            mov rdi, rdx	       416	update-index.c	FUNCTION_44	CALL_4
0x40015a9	      0xe8bdeeffff	                         call sym.oidcpy	       416	update-index.c	FUNCTION_44	CALL_4
0x40015ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       417	update-index.c	FUNCTION_44	CALL_5
0x40015b1	          0x4863d0	                         movsxd rdx, eax	       417	update-index.c	FUNCTION_44	CALL_5
0x40015b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       417	update-index.c	FUNCTION_44	CALL_5
0x40015b8	        0x488d4858	                   lea rcx, [rax + 0x58]	       417	update-index.c	FUNCTION_44	CALL_5
0x40015bc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       417	update-index.c	FUNCTION_44	CALL_5
0x40015c0	          0x4889c6	                            mov rsi, rax	       417	update-index.c	FUNCTION_44	CALL_5
0x40015c3	          0x4889cf	                            mov rdi, rcx	       417	update-index.c	FUNCTION_44	CALL_5
0x40015c6	      0xe800000000	                          call 0x40015cb	       417	update-index.c	FUNCTION_44	CALL_5
0x40015cb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       418	update-index.c	FUNCTION_44	CALL_6
0x40015ce	            0x89c7	                            mov edi, eax	       418	update-index.c	FUNCTION_44	CALL_6
0x40015d0	      0xe814edffff	                call sym.create_ce_flags	       418	update-index.c	FUNCTION_44	CALL_6
0x40015d5	            0x89c2	                            mov edx, eax	       418	update-index.c	FUNCTION_44	CALL_6
0x40015d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       418	update-index.c	FUNCTION_44	CALL_6
0x40015db	          0x895038	             mov dword [rax + 0x38], edx	       418	update-index.c	FUNCTION_44	CALL_6
0x40015de	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       419	update-index.c	FUNCTION_44
0x40015e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	update-index.c	FUNCTION_44
0x40015e5	          0x89503c	             mov dword [rax + 0x3c], edx	       419	update-index.c	FUNCTION_44
0x40015e8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       420	update-index.c	FUNCTION_44	CALL_7
0x40015eb	            0x89c7	                            mov edi, eax	       420	update-index.c	FUNCTION_44	CALL_7
0x40015ed	      0xe806edffff	                 call sym.create_ce_mode	       420	update-index.c	FUNCTION_44	CALL_7
0x40015f2	            0x89c2	                            mov edx, eax	       420	update-index.c	FUNCTION_44	CALL_7
0x40015f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	update-index.c	FUNCTION_44	CALL_7
0x40015f8	          0x895034	             mov dword [rax + 0x34], edx	       420	update-index.c	FUNCTION_44	CALL_7
0x40015fb	    0x8b0500000000	            mov eax, dword [0x04001601] 	       421	update-index.c	FUNCTION_44	IF_2
0x4001601	            0x85c0	                           test eax, eax	       421	update-index.c	FUNCTION_44	IF_2
0x4001603	            0x7413	                            je 0x4001618	       421	update-index.c	FUNCTION_44	IF_2
0x4001605	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	update-index.c	FUNCTION_44	IF_2
0x4001609	          0x8b4038	            mov eax, dword [rax + 0x38] 	       422	update-index.c	FUNCTION_44	IF_2
0x400160c	          0x80cc80	                             or ah, 0x80	       422	update-index.c	FUNCTION_44	IF_2
0x400160f	            0x89c2	                            mov edx, eax	       422	update-index.c	FUNCTION_44	IF_2
0x4001611	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	update-index.c	FUNCTION_44	IF_2
0x4001615	          0x895038	             mov dword [rax + 0x38], edx	       422	update-index.c	FUNCTION_44	IF_2
0x4001618	    0x8b0500000000	            mov eax, dword [0x0400161e] 	       423	update-index.c	FUNCTION_44
0x400161e	            0x85c0	                           test eax, eax	       423	update-index.c	FUNCTION_44
0x4001620	           0xf95c0	                                setne al	       423	update-index.c	FUNCTION_44
0x4001623	           0xfb6c0	                           movzx eax, al	       423	update-index.c	FUNCTION_44
0x4001626	          0x8945f4	              mov dword [rbp - 0xc], eax	       423	update-index.c	FUNCTION_44
0x4001629	    0x8b0500000000	            mov eax, dword [0x0400162f] 	       424	update-index.c	FUNCTION_44
0x400162f	            0x85c0	                           test eax, eax	       424	update-index.c	FUNCTION_44
0x4001631	            0x7407	                            je 0x400163a	       424	update-index.c	FUNCTION_44
0x4001633	      0xb802000000	                              mov eax, 2	       424	update-index.c	FUNCTION_44
0x4001638	            0xeb05	                           jmp 0x400163f	       424	update-index.c	FUNCTION_44
0x400163a	      0xb800000000	                              mov eax, 0	       424	update-index.c	FUNCTION_44
0x400163f	           0x945f4	               or dword [rbp - 0xc], eax	       424	update-index.c	FUNCTION_44
0x4001642	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       425	update-index.c	FUNCTION_44	IF_3
0x4001645	        0x488b45f8	                mov rax, qword [rbp - 8]	       425	update-index.c	FUNCTION_44	IF_3
0x4001649	          0x4889c6	                            mov rsi, rax	       425	update-index.c	FUNCTION_44	IF_3
0x400164c	      0xbf00000000	                              mov edi, 0	       425	update-index.c	FUNCTION_44	IF_3
0x4001651	      0xe800000000	                          call 0x4001656	       425	update-index.c	FUNCTION_44	IF_3
0x4001656	            0x85c0	                           test eax, eax	       425	update-index.c	FUNCTION_44	IF_3
0x4001658	            0x741d	                            je 0x4001677	       425	update-index.c	FUNCTION_44	IF_3
0x400165a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       426	update-index.c	FUNCTION_44	IF_3
0x400165e	          0x4889c6	                            mov rsi, rax	       426	update-index.c	FUNCTION_44	IF_3
0x4001661	      0xbf00000000	                              mov edi, 0	       426	update-index.c	FUNCTION_44	IF_3
0x4001666	      0xb800000000	                              mov eax, 0	       426	update-index.c	FUNCTION_44	IF_3
0x400166b	      0xe800000000	                          call 0x4001670	       426	update-index.c	FUNCTION_44	IF_3
0x4001670	      0xe8cbe9ffff	                    call sym.const_error	       426	update-index.c	FUNCTION_44	IF_3
0x4001675	            0xeb1b	                           jmp 0x4001692	       426	update-index.c	FUNCTION_44	IF_3
0x4001677	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       428	update-index.c	FUNCTION_44	CALL_8
0x400167b	          0x4889c6	                            mov rsi, rax	       428	update-index.c	FUNCTION_44	CALL_8
0x400167e	      0xbf00000000	                              mov edi, 0	       428	update-index.c	FUNCTION_44	CALL_8
0x4001683	      0xb800000000	                              mov eax, 0	       428	update-index.c	FUNCTION_44	CALL_8
0x4001688	      0xe81cefffff	                         call sym.report	       428	update-index.c	FUNCTION_44	CALL_8
0x400168d	      0xb800000000	                              mov eax, 0	       429	update-index.c	FUNCTION_44
0x4001692	              0xc9	                                   leave	       430	update-index.c	FUNCTION_44
0x4001693	              0xc3	                                     ret	       430	update-index.c	FUNCTION_44
xstat_mtime_dir	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	24
0x400074a	              0x55	                                push rbp	        86	update-index.c	FUNCTION_32
0x400074b	          0x4889e5	                            mov rbp, rsp	        86	update-index.c	FUNCTION_32
0x400074e	              0x53	                                push rbx	        86	update-index.c	FUNCTION_32
0x400074f	        0x4883ec18	                           sub rsp, 0x18	        86	update-index.c	FUNCTION_32
0x4000753	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	update-index.c	FUNCTION_32
0x4000757	    0x488b05000000	            mov rax, qword [0x0400075e] 	        87	update-index.c	FUNCTION_32	IF_1
0x400075e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        87	update-index.c	FUNCTION_32	IF_1
0x4000762	          0x4889d6	                            mov rsi, rdx	        87	update-index.c	FUNCTION_32	IF_1
0x4000765	          0x4889c7	                            mov rdi, rax	        87	update-index.c	FUNCTION_32	IF_1
0x4000768	      0xe800000000	                          call 0x400076d	        87	update-index.c	FUNCTION_32	IF_1
0x400076d	            0x85c0	                           test eax, eax	        87	update-index.c	FUNCTION_32	IF_1
0x400076f	            0x7421	                            je 0x4000792	        87	update-index.c	FUNCTION_32	IF_1
0x4000771	    0x488b1d000000	            mov rbx, qword [0x04000778] 	        88	update-index.c	FUNCTION_32	CALL_2
0x4000778	      0xbf00000000	                              mov edi, 0	        88	update-index.c	FUNCTION_32	CALL_2
0x400077d	      0xe80bfbffff	                               call sym.	        88	update-index.c	FUNCTION_32	CALL_2
0x4000782	          0x4889de	                            mov rsi, rbx	        88	update-index.c	FUNCTION_32	CALL_2
0x4000785	          0x4889c7	                            mov rdi, rax	        88	update-index.c	FUNCTION_32	CALL_2
0x4000788	      0xb800000000	                              mov eax, 0	        88	update-index.c	FUNCTION_32	CALL_2
0x400078d	      0xe800000000	                          call 0x4000792	        88	update-index.c	FUNCTION_32	CALL_2
0x4000792	      0xb800000000	                              mov eax, 0	        89	update-index.c	FUNCTION_32
0x4000797	        0x4883c418	                           add rsp, 0x18	        90	update-index.c	FUNCTION_32
0x400079b	              0x5b	                                 pop rbx	        90	update-index.c	FUNCTION_32
0x400079c	              0x5d	                                 pop rbp	        90	update-index.c	FUNCTION_32
0x400079d	              0xc3	                                     ret	        90	update-index.c	FUNCTION_32
create_ce_flags	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	7
0x40002e9	              0x55	                                push rbp	       241	cache.h	FUNCTION_2
0x40002ea	          0x4889e5	                            mov rbp, rsp	       241	cache.h	FUNCTION_2
0x40002ed	          0x897dfc	                mov dword [rbp - 4], edi	       241	cache.h	FUNCTION_2
0x40002f0	          0x8b45fc	                mov eax, dword [rbp - 4]	       242	cache.h	FUNCTION_2
0x40002f3	          0xc1e00c	                            shl eax, 0xc	       242	cache.h	FUNCTION_2
0x40002f6	              0x5d	                                 pop rbp	       243	cache.h	FUNCTION_2
0x40002f7	              0xc3	                                     ret	       243	cache.h	FUNCTION_2
_	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	15
0x400028d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_108
0x400028e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_108
0x4000291	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_108
0x4000295	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_108
0x4000299	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_108	IF_1
0x400029d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_108	IF_1
0x40002a0	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_108	IF_1
0x40002a2	            0x7507	                           jne 0x40002ab	        52	gettext.h	FUNCTION_108	IF_1
0x40002a4	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_108	IF_1
0x40002a9	            0xeb0c	                           jmp 0x40002b7	        53	gettext.h	FUNCTION_108	IF_1
0x40002ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_108
0x40002af	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_108
0x40002b2	      0xe800000000	                          call 0x40002b7	        54	gettext.h	FUNCTION_108
0x40002b7	              0xc9	                                   leave	        55	gettext.h	FUNCTION_108
0x40002b8	              0xc3	                                     ret	        55	gettext.h	FUNCTION_108
stdin_callback	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	26
0x40027a0	              0x55	                                push rbp	       873	update-index.c	FUNCTION_61
0x40027a1	          0x4889e5	                            mov rbp, rsp	       873	update-index.c	FUNCTION_61
0x40027a4	        0x4883ec30	                           sub rsp, 0x30	       873	update-index.c	FUNCTION_61
0x40027a8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       873	update-index.c	FUNCTION_61
0x40027ac	        0x488975e0	             mov qword [rbp - 0x20], rsi	       873	update-index.c	FUNCTION_61
0x40027b0	          0x8955dc	             mov dword [rbp - 0x24], edx	       873	update-index.c	FUNCTION_61
0x40027b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       874	update-index.c	FUNCTION_61
0x40027b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       874	update-index.c	FUNCTION_61
0x40027bb	        0x488945f8	                mov qword [rbp - 8], rax	       874	update-index.c	FUNCTION_61
0x40027bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	update-index.c	FUNCTION_61	IF_1
0x40027c3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       876	update-index.c	FUNCTION_61	IF_1
0x40027c6	          0x83f801	                              cmp eax, 1	       876	update-index.c	FUNCTION_61	IF_1
0x40027c9	            0x7421	                            je 0x40027ec	       876	update-index.c	FUNCTION_61	IF_1
0x40027cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       877	update-index.c	FUNCTION_61	IF_1
0x40027cf	        0x488b4008	                mov rax, qword [rax + 8]	       877	update-index.c	FUNCTION_61	IF_1
0x40027d3	          0x4889c6	                            mov rsi, rax	       877	update-index.c	FUNCTION_61	IF_1
0x40027d6	      0xbf00000000	                              mov edi, 0	       877	update-index.c	FUNCTION_61	IF_1
0x40027db	      0xb800000000	                              mov eax, 0	       877	update-index.c	FUNCTION_61	IF_1
0x40027e0	      0xe800000000	                          call 0x40027e5	       877	update-index.c	FUNCTION_61	IF_1
0x40027e5	      0xe856d8ffff	                    call sym.const_error	       877	update-index.c	FUNCTION_61	IF_1
0x40027ea	            0xeb0f	                           jmp 0x40027fb	       877	update-index.c	FUNCTION_61	IF_1
0x40027ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       878	update-index.c	FUNCTION_61
0x40027f0	    0xc70001000000	                      mov dword [rax], 1	       878	update-index.c	FUNCTION_61
0x40027f6	      0xb800000000	                              mov eax, 0	       879	update-index.c	FUNCTION_61
0x40027fb	              0xc9	                                   leave	       880	update-index.c	FUNCTION_61
0x40027fc	              0xc3	                                     ret	       880	update-index.c	FUNCTION_61
oidcpy	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	13
0x400046b	              0x55	                                push rbp	       999	cache.h	FUNCTION_13
0x400046c	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_13
0x400046f	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_13
0x4000473	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_13
0x4000477	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_13
0x400047b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_13	CALL_1
0x400047f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_13	CALL_1
0x4000483	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_13	CALL_1
0x4000486	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_13	CALL_1
0x4000489	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_13	CALL_1
0x400048e	              0x90	                                     nop	      1001	cache.h	FUNCTION_13
0x400048f	              0xc9	                                   leave	      1001	cache.h	FUNCTION_13
0x4000490	              0xc3	                                     ret	      1001	cache.h	FUNCTION_13
unresolve_one	IF,9:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,10:ELSE,1	182
0x4001d82	              0x55	                                push rbp	       617	update-index.c	FUNCTION_49
0x4001d83	          0x4889e5	                            mov rbp, rsp	       617	update-index.c	FUNCTION_49
0x4001d86	        0x4883ec40	                           sub rsp, 0x40	       617	update-index.c	FUNCTION_49
0x4001d8a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       617	update-index.c	FUNCTION_49
0x4001d8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       618	update-index.c	FUNCTION_49	CALL_1
0x4001d92	          0x4889c7	                            mov rdi, rax	       618	update-index.c	FUNCTION_49	CALL_1
0x4001d95	      0xe800000000	                          call 0x4001d9a	       618	update-index.c	FUNCTION_49	CALL_1
0x4001d9a	          0x8945d8	             mov dword [rbp - 0x28], eax	       618	update-index.c	FUNCTION_49	CALL_1
0x4001d9d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       620	update-index.c	FUNCTION_49
0x4001da4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       621	update-index.c	FUNCTION_49
0x4001dac	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       621	update-index.c	FUNCTION_49
0x4001db4	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       624	update-index.c	FUNCTION_49
0x4001db7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       624	update-index.c	FUNCTION_49
0x4001dbb	          0x4889c6	                            mov rsi, rax	       624	update-index.c	FUNCTION_49
0x4001dbe	      0xbf00000000	                              mov edi, 0	       624	update-index.c	FUNCTION_49
0x4001dc3	      0xe800000000	                          call 0x4001dc8	       624	update-index.c	FUNCTION_49
0x4001dc8	          0x8945dc	             mov dword [rbp - 0x24], eax	       624	update-index.c	FUNCTION_49
0x4001dcb	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       625	update-index.c	FUNCTION_49	IF_1
0x4001dcf	     0xf8896000000	                            js 0x4001e6b	       625	update-index.c	FUNCTION_49	IF_1
0x4001dd5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       627	update-index.c	FUNCTION_49	IF_1
0x4001dd8	            0x89c6	                            mov esi, eax	       627	update-index.c	FUNCTION_49	IF_1
0x4001dda	      0xbf00000000	                              mov edi, 0	       627	update-index.c	FUNCTION_49	IF_1
0x4001ddf	      0xe800000000	                          call 0x4001de4	       627	update-index.c	FUNCTION_49	IF_1
0x4001de4	          0x8945dc	             mov dword [rbp - 0x24], eax	       627	update-index.c	FUNCTION_49	IF_1
0x4001de7	    0x8b1500000000	            mov edx, dword [0x04001ded] 	       628	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001ded	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       628	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001df0	            0x39c2	                            cmp edx, eax	       628	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001df2	     0xf86ef000000	                           jbe 0x4001ee7	       628	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001df8	    0x488b05000000	            mov rax, qword [0x04001dff] 	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001dff	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e02	          0x4863d2	                         movsxd rdx, edx	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e05	        0x48c1e203	                              shl rdx, 3	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e09	          0x4801d0	                            add rax, rdx	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e0c	          0x488b00	                    mov rax, qword [rax]	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e0f	        0x488945f0	             mov qword [rbp - 0x10], rax	       629	update-index.c	FUNCTION_49	IF_1	IF_2
0x4001e13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e17	          0x8b4038	            mov eax, dword [rax + 0x38] 	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e1a	      0x2500300000	                         and eax, 0x3000	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e1f	          0xc1e80c	                            shr eax, 0xc	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e22	            0x85c0	                           test eax, eax	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e24	     0xf84bd000000	                            je 0x4001ee7	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       631	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e2e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       631	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e31	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       631	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e34	            0x39c2	                            cmp edx, eax	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e36	     0xf85ab000000	                           jne 0x4001ee7	       630	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e3c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e3f	          0x4863d0	                         movsxd rdx, eax	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e46	        0x488d4858	                   lea rcx, [rax + 0x58]	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e4a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e4e	          0x4889c6	                            mov rsi, rax	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e51	          0x4889cf	                            mov rdi, rcx	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e54	      0xe800000000	                          call 0x4001e59	       632	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3	CALL_2
0x4001e59	            0x85c0	                           test eax, eax	       631	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e5b	     0xf8586000000	                           jne 0x4001ee7	       631	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e61	      0xb800000000	                              mov eax, 0	       633	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e66	      0xe9e0010000	                           jmp 0x400204b	       633	update-index.c	FUNCTION_49	IF_1	IF_2	IF_3
0x4001e6b	          0xf755dc	                  not dword [rbp - 0x24]	       641	update-index.c	FUNCTION_49	ELSE_1
0x4001e6e	    0x8b1500000000	            mov edx, dword [0x04001e74] 	       642	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e74	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       642	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e77	            0x39c2	                            cmp edx, eax	       642	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e79	            0x766c	                           jbe 0x4001ee7	       642	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e7b	    0x488b05000000	            mov rax, qword [0x04001e82] 	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e82	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e85	          0x4863d2	                         movsxd rdx, edx	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e88	        0x48c1e203	                              shl rdx, 3	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e8c	          0x4801d0	                            add rax, rdx	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e8f	          0x488b00	                    mov rax, qword [rax]	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e92	        0x488945f8	                mov qword [rbp - 8], rax	       643	update-index.c	FUNCTION_49	ELSE_1	IF_4
0x4001e96	        0x488b45f8	                mov rax, qword [rbp - 8]	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001e9a	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001e9d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ea0	            0x39c2	                            cmp edx, eax	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ea2	            0x7543	                           jne 0x4001ee7	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ea4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001ea7	          0x4863d0	                         movsxd rdx, eax	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001eaa	        0x488b45f8	                mov rax, qword [rbp - 8]	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001eae	        0x488d4858	                   lea rcx, [rax + 0x58]	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001eb2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001eb6	          0x4889c6	                            mov rsi, rax	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001eb9	          0x4889cf	                            mov rdi, rcx	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001ebc	      0xe800000000	                          call 0x4001ec1	       645	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_3
0x4001ec1	            0x85c0	                           test eax, eax	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ec3	            0x7522	                           jne 0x4001ee7	       644	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ec5	    0x488b05000000	            mov rax, qword [0x04001ecc] 	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001ecc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001ed0	      0xbe00000000	                              mov esi, 0	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001ed5	          0x4889c7	                            mov rdi, rax	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001ed8	      0xb800000000	                              mov eax, 0	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001edd	      0xe800000000	                          call 0x4001ee2	       646	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5	CALL_4
0x4001ee2	      0xe949010000	                           jmp 0x4002030	       649	update-index.c	FUNCTION_49	ELSE_1	IF_4	IF_5
0x4001ee7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       658	update-index.c	FUNCTION_49	CALL_5
0x4001eea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       658	update-index.c	FUNCTION_49	CALL_5
0x4001eee	    0x41b802000000	                              mov r8d, 2	       658	update-index.c	FUNCTION_49	CALL_5
0x4001ef4	            0x89d1	                            mov ecx, edx	       658	update-index.c	FUNCTION_49	CALL_5
0x4001ef6	          0x4889c2	                            mov rdx, rax	       658	update-index.c	FUNCTION_49	CALL_5
0x4001ef9	      0xbe00000000	                              mov esi, 0	       658	update-index.c	FUNCTION_49	CALL_5
0x4001efe	      0xbf00000000	                              mov edi, 0	       658	update-index.c	FUNCTION_49	CALL_5
0x4001f03	      0xe82dfdffff	                   call sym.read_one_ent	       658	update-index.c	FUNCTION_49	CALL_5
0x4001f08	        0x488945e0	             mov qword [rbp - 0x20], rax	       658	update-index.c	FUNCTION_49	CALL_5
0x4001f0c	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f13	    0x41b803000000	                              mov r8d, 3	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f19	            0x89d1	                            mov ecx, edx	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f1b	          0x4889c2	                            mov rdx, rax	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f1e	      0xbe00000000	                              mov esi, 0	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f23	      0xbf00000000	                              mov edi, 0	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f28	      0xe808fdffff	                   call sym.read_one_ent	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f2d	        0x488945e8	             mov qword [rbp - 0x18], rax	       659	update-index.c	FUNCTION_49	CALL_6
0x4001f31	      0x48837de000	               cmp qword [rbp - 0x20], 0	       661	update-index.c	FUNCTION_49	IF_6
0x4001f36	            0x7407	                            je 0x4001f3f	       661	update-index.c	FUNCTION_49	IF_6
0x4001f38	      0x48837de800	               cmp qword [rbp - 0x18], 0	       661	update-index.c	FUNCTION_49	IF_6
0x4001f3d	            0x750c	                           jne 0x4001f4b	       661	update-index.c	FUNCTION_49	IF_6
0x4001f3f	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       662	update-index.c	FUNCTION_49	IF_6
0x4001f46	      0xe9e5000000	                           jmp 0x4002030	       663	update-index.c	FUNCTION_49	IF_6
0x4001f4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f4f	        0x488d5044	                   lea rdx, [rax + 0x44]	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f53	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f57	        0x4883c044	                           add rax, 0x44	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f5b	          0x4889d6	                            mov rsi, rdx	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f5e	          0x4889c7	                            mov rdi, rax	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f61	      0xe8b5e4ffff	                         call sym.oidcmp	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f66	            0x85c0	                           test eax, eax	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f68	            0x7534	                           jne 0x4001f9e	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       666	update-index.c	FUNCTION_49	IF_7
0x4001f6e	          0x8b5034	            mov edx, dword [rax + 0x34] 	       666	update-index.c	FUNCTION_49	IF_7
0x4001f71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	update-index.c	FUNCTION_49	IF_7
0x4001f75	          0x8b4034	            mov eax, dword [rax + 0x34] 	       666	update-index.c	FUNCTION_49	IF_7
0x4001f78	            0x39c2	                            cmp edx, eax	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f7a	            0x7522	                           jne 0x4001f9e	       665	update-index.c	FUNCTION_49	IF_7	CALL_7
0x4001f7c	    0x488b05000000	            mov rax, qword [0x04001f83] 	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f83	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f87	      0xbe00000000	                              mov esi, 0	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f8c	          0x4889c7	                            mov rdi, rax	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f8f	      0xb800000000	                              mov eax, 0	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f94	      0xe800000000	                          call 0x4001f99	       667	update-index.c	FUNCTION_49	IF_7	CALL_8
0x4001f99	      0xe992000000	                           jmp 0x4002030	       669	update-index.c	FUNCTION_49	IF_7
0x4001f9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       672	update-index.c	FUNCTION_49
0x4001fa2	          0x4889c6	                            mov rsi, rax	       672	update-index.c	FUNCTION_49
0x4001fa5	      0xbf00000000	                              mov edi, 0	       672	update-index.c	FUNCTION_49
0x4001faa	      0xe800000000	                          call 0x4001faf	       672	update-index.c	FUNCTION_49
0x4001faf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       673	update-index.c	FUNCTION_49	IF_8
0x4001fb3	      0xba01000000	                              mov edx, 1	       673	update-index.c	FUNCTION_49	IF_8
0x4001fb8	          0x4889c6	                            mov rsi, rax	       673	update-index.c	FUNCTION_49	IF_8
0x4001fbb	      0xbf00000000	                              mov edi, 0	       673	update-index.c	FUNCTION_49	IF_8
0x4001fc0	      0xe800000000	                          call 0x4001fc5	       673	update-index.c	FUNCTION_49	IF_8
0x4001fc5	            0x85c0	                           test eax, eax	       673	update-index.c	FUNCTION_49	IF_8
0x4001fc7	            0x7424	                            je 0x4001fed	       673	update-index.c	FUNCTION_49	IF_8
0x4001fc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       674	update-index.c	FUNCTION_49	IF_8
0x4001fcd	          0x4889c6	                            mov rsi, rax	       674	update-index.c	FUNCTION_49	IF_8
0x4001fd0	      0xbf00000000	                              mov edi, 0	       674	update-index.c	FUNCTION_49	IF_8
0x4001fd5	      0xb800000000	                              mov eax, 0	       674	update-index.c	FUNCTION_49	IF_8
0x4001fda	      0xe800000000	                          call 0x4001fdf	       674	update-index.c	FUNCTION_49	IF_8
0x4001fdf	      0xe85ce0ffff	                    call sym.const_error	       674	update-index.c	FUNCTION_49	IF_8
0x4001fe4	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       675	update-index.c	FUNCTION_49	IF_8
0x4001feb	            0xeb43	                           jmp 0x4002030	       676	update-index.c	FUNCTION_49	IF_8
0x4001fed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       678	update-index.c	FUNCTION_49	IF_9
0x4001ff1	      0xba01000000	                              mov edx, 1	       678	update-index.c	FUNCTION_49	IF_9
0x4001ff6	          0x4889c6	                            mov rsi, rax	       678	update-index.c	FUNCTION_49	IF_9
0x4001ff9	      0xbf00000000	                              mov edi, 0	       678	update-index.c	FUNCTION_49	IF_9
0x4001ffe	      0xe800000000	                          call 0x4002003	       678	update-index.c	FUNCTION_49	IF_9
0x4002003	            0x85c0	                           test eax, eax	       678	update-index.c	FUNCTION_49	IF_9
0x4002005	            0x7507	                           jne 0x400200e	       678	update-index.c	FUNCTION_49	IF_9
0x4002007	      0xb800000000	                              mov eax, 0	       679	update-index.c	FUNCTION_49	IF_9
0x400200c	            0xeb3d	                           jmp 0x400204b	       679	update-index.c	FUNCTION_49	IF_9
0x400200e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       680	update-index.c	FUNCTION_49
0x4002012	          0x4889c6	                            mov rsi, rax	       680	update-index.c	FUNCTION_49
0x4002015	      0xbf00000000	                              mov edi, 0	       680	update-index.c	FUNCTION_49
0x400201a	      0xb800000000	                              mov eax, 0	       680	update-index.c	FUNCTION_49
0x400201f	      0xe800000000	                          call 0x4002024	       680	update-index.c	FUNCTION_49
0x4002024	      0xe817e0ffff	                    call sym.const_error	       680	update-index.c	FUNCTION_49
0x4002029	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	       681	update-index.c	FUNCTION_49
0x4002030	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       683	update-index.c	FUNCTION_49	CALL_9
0x4002034	          0x4889c7	                            mov rdi, rax	       683	update-index.c	FUNCTION_49	CALL_9
0x4002037	      0xe800000000	                          call 0x400203c	       683	update-index.c	FUNCTION_49	CALL_9
0x400203c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	update-index.c	FUNCTION_49	CALL_10
0x4002040	          0x4889c7	                            mov rdi, rax	       684	update-index.c	FUNCTION_49	CALL_10
0x4002043	      0xe800000000	                          call 0x4002048	       684	update-index.c	FUNCTION_49	CALL_10
0x4002048	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       685	update-index.c	FUNCTION_49
0x400204b	              0xc9	                                   leave	       686	update-index.c	FUNCTION_49
0x400204c	              0xc3	                                     ret	       686	update-index.c	FUNCTION_49
remove_one_path	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	30
0x4000f39	              0x55	                                push rbp	       247	update-index.c	FUNCTION_39
0x4000f3a	          0x4889e5	                            mov rbp, rsp	       247	update-index.c	FUNCTION_39
0x4000f3d	        0x4883ec10	                           sub rsp, 0x10	       247	update-index.c	FUNCTION_39
0x4000f41	        0x48897df8	                mov qword [rbp - 8], rdi	       247	update-index.c	FUNCTION_39
0x4000f45	    0x8b0500000000	            mov eax, dword [0x04000f4b] 	       248	update-index.c	FUNCTION_39	IF_1
0x4000f4b	            0x85c0	                           test eax, eax	       248	update-index.c	FUNCTION_39	IF_1
0x4000f4d	            0x751d	                           jne 0x4000f6c	       248	update-index.c	FUNCTION_39	IF_1
0x4000f4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	update-index.c	FUNCTION_39	IF_1
0x4000f53	          0x4889c6	                            mov rsi, rax	       249	update-index.c	FUNCTION_39	IF_1
0x4000f56	      0xbf00000000	                              mov edi, 0	       249	update-index.c	FUNCTION_39	IF_1
0x4000f5b	      0xb800000000	                              mov eax, 0	       249	update-index.c	FUNCTION_39	IF_1
0x4000f60	      0xe800000000	                          call 0x4000f65	       249	update-index.c	FUNCTION_39	IF_1
0x4000f65	      0xe8d6f0ffff	                    call sym.const_error	       249	update-index.c	FUNCTION_39	IF_1
0x4000f6a	            0xeb37	                           jmp 0x4000fa3	       249	update-index.c	FUNCTION_39	IF_1
0x4000f6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	update-index.c	FUNCTION_39	IF_2
0x4000f70	          0x4889c6	                            mov rsi, rax	       250	update-index.c	FUNCTION_39	IF_2
0x4000f73	      0xbf00000000	                              mov edi, 0	       250	update-index.c	FUNCTION_39	IF_2
0x4000f78	      0xe800000000	                          call 0x4000f7d	       250	update-index.c	FUNCTION_39	IF_2
0x4000f7d	            0x85c0	                           test eax, eax	       250	update-index.c	FUNCTION_39	IF_2
0x4000f7f	            0x741d	                            je 0x4000f9e	       250	update-index.c	FUNCTION_39	IF_2
0x4000f81	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	update-index.c	FUNCTION_39	IF_2
0x4000f85	          0x4889c6	                            mov rsi, rax	       251	update-index.c	FUNCTION_39	IF_2
0x4000f88	      0xbf00000000	                              mov edi, 0	       251	update-index.c	FUNCTION_39	IF_2
0x4000f8d	      0xb800000000	                              mov eax, 0	       251	update-index.c	FUNCTION_39	IF_2
0x4000f92	      0xe800000000	                          call 0x4000f97	       251	update-index.c	FUNCTION_39	IF_2
0x4000f97	      0xe8a4f0ffff	                    call sym.const_error	       251	update-index.c	FUNCTION_39	IF_2
0x4000f9c	            0xeb05	                           jmp 0x4000fa3	       251	update-index.c	FUNCTION_39	IF_2
0x4000f9e	      0xb800000000	                              mov eax, 0	       252	update-index.c	FUNCTION_39
0x4000fa3	              0xc9	                                   leave	       253	update-index.c	FUNCTION_39
0x4000fa4	              0xc3	                                     ret	       253	update-index.c	FUNCTION_39
unresolve_callback	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	50
0x40027fd	              0x55	                                push rbp	       884	update-index.c	FUNCTION_62
0x40027fe	          0x4889e5	                            mov rbp, rsp	       884	update-index.c	FUNCTION_62
0x4002801	        0x4883ec30	                           sub rsp, 0x30	       884	update-index.c	FUNCTION_62
0x4002805	        0x48897de8	             mov qword [rbp - 0x18], rdi	       884	update-index.c	FUNCTION_62
0x4002809	        0x488975e0	             mov qword [rbp - 0x20], rsi	       884	update-index.c	FUNCTION_62
0x400280d	          0x8955dc	             mov dword [rbp - 0x24], edx	       884	update-index.c	FUNCTION_62
0x4002810	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       885	update-index.c	FUNCTION_62
0x4002814	        0x488b4010	            mov rax, qword [rax + 0x10] 	       885	update-index.c	FUNCTION_62
0x4002818	        0x488945f0	             mov qword [rbp - 0x10], rax	       885	update-index.c	FUNCTION_62
0x400281c	    0x488b05000000	            mov rax, qword [0x04002823] 	       886	update-index.c	FUNCTION_62
0x4002823	        0x488b4008	                mov rax, qword [rax + 8]	       886	update-index.c	FUNCTION_62
0x4002827	        0x488945f8	                mov qword [rbp - 8], rax	       886	update-index.c	FUNCTION_62
0x400282b	      0x48837df800	                  cmp qword [rbp - 8], 0	       889	update-index.c	FUNCTION_62	CALL_1
0x4002830	            0x7410	                            je 0x4002842	       889	update-index.c	FUNCTION_62	CALL_1
0x4002832	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	update-index.c	FUNCTION_62	CALL_2
0x4002836	          0x4889c7	                            mov rdi, rax	       890	update-index.c	FUNCTION_62	CALL_2
0x4002839	      0xe800000000	                          call 0x400283e	       890	update-index.c	FUNCTION_62	CALL_2
0x400283e	            0x89c1	                            mov ecx, eax	       889	update-index.c	FUNCTION_62	CALL_1
0x4002840	            0xeb05	                           jmp 0x4002847	       889	update-index.c	FUNCTION_62	CALL_1
0x4002842	      0xb900000000	                              mov ecx, 0	       889	update-index.c	FUNCTION_62	CALL_1
0x4002847	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	update-index.c	FUNCTION_62	CALL_1
0x400284b	          0x488b30	                    mov rsi, qword [rax]	       889	update-index.c	FUNCTION_62	CALL_1
0x400284e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	update-index.c	FUNCTION_62	CALL_1
0x4002852	          0x8b4010	            mov eax, dword [rax + 0x10] 	       889	update-index.c	FUNCTION_62	CALL_1
0x4002855	        0x488b55f8	                mov rdx, qword [rbp - 8]	       889	update-index.c	FUNCTION_62	CALL_1
0x4002859	            0x89c7	                            mov edi, eax	       889	update-index.c	FUNCTION_62	CALL_1
0x400285b	      0xe851f8ffff	                   call sym.do_unresolve	       889	update-index.c	FUNCTION_62	CALL_1
0x4002860	            0x89c2	                            mov edx, eax	       889	update-index.c	FUNCTION_62	CALL_1
0x4002862	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       889	update-index.c	FUNCTION_62	CALL_1
0x4002866	            0x8910	                    mov dword [rax], edx	       889	update-index.c	FUNCTION_62	CALL_1
0x4002868	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       891	update-index.c	FUNCTION_62	IF_1
0x400286c	            0x8b00	                    mov eax, dword [rax]	       891	update-index.c	FUNCTION_62	IF_1
0x400286e	            0x85c0	                           test eax, eax	       891	update-index.c	FUNCTION_62	IF_1
0x4002870	            0x740a	                            je 0x400287c	       891	update-index.c	FUNCTION_62	IF_1
0x4002872	    0xc70500000000	               mov dword [0x0400287c], 0	       892	update-index.c	FUNCTION_62	IF_1
0x400287c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_62
0x4002880	          0x488b10	                    mov rdx, qword [rax]	       894	update-index.c	FUNCTION_62
0x4002883	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_62
0x4002887	          0x8b4010	            mov eax, dword [rax + 0x10] 	       894	update-index.c	FUNCTION_62
0x400288a	            0x4898	                                    cdqe	       894	update-index.c	FUNCTION_62
0x400288c	        0x48c1e003	                              shl rax, 3	       894	update-index.c	FUNCTION_62
0x4002890	        0x4883e808	                              sub rax, 8	       894	update-index.c	FUNCTION_62
0x4002894	          0x4801c2	                            add rdx, rax	       894	update-index.c	FUNCTION_62
0x4002897	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	update-index.c	FUNCTION_62
0x400289b	          0x488910	                    mov qword [rax], rdx	       894	update-index.c	FUNCTION_62
0x400289e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       895	update-index.c	FUNCTION_62
0x40028a2	    0xc74010010000	               mov dword [rax + 0x10], 1	       895	update-index.c	FUNCTION_62
0x40028a9	      0xb800000000	                              mov eax, 0	       896	update-index.c	FUNCTION_62
0x40028ae	              0xc9	                                   leave	       897	update-index.c	FUNCTION_62
0x40028af	              0xc3	                                     ret	       897	update-index.c	FUNCTION_62
strtoul_ui	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	54
0x400004b	              0x55	                                push rbp	      1010	git-compat-util.h	FUNCTION_99
0x400004c	          0x4889e5	                            mov rbp, rsp	      1010	git-compat-util.h	FUNCTION_99
0x400004f	        0x4883ec40	                           sub rsp, 0x40	      1010	git-compat-util.h	FUNCTION_99
0x4000053	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1010	git-compat-util.h	FUNCTION_99
0x4000057	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1010	git-compat-util.h	FUNCTION_99
0x400005a	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1010	git-compat-util.h	FUNCTION_99
0x400005e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1010	git-compat-util.h	FUNCTION_99
0x4000067	        0x488945f8	                mov qword [rbp - 8], rax	      1010	git-compat-util.h	FUNCTION_99
0x400006b	            0x31c0	                            xor eax, eax	      1010	git-compat-util.h	FUNCTION_99
0x400006d	      0xe800000000	                          call 0x4000072	      1014	git-compat-util.h	FUNCTION_99
0x4000072	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_99
0x4000078	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x400007c	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000081	          0x4889c7	                            mov rdi, rax	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000084	      0xe800000000	                          call 0x4000089	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x4000089	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x400008c	            0x7407	                            je 0x4000095	      1016	git-compat-util.h	FUNCTION_99	IF_1	CALL_1
0x400008e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1017	git-compat-util.h	FUNCTION_99	IF_1
0x4000093	            0xeb5e	                           jmp 0x40000f3	      1017	git-compat-util.h	FUNCTION_99	IF_1
0x4000095	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x4000098	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x400009c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x40000a0	          0x4889ce	                            mov rsi, rcx	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x40000a3	          0x4889c7	                            mov rdi, rax	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x40000a6	      0xe800000000	                          call 0x40000ab	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x40000ab	        0x488945f0	             mov qword [rbp - 0x10], rax	      1018	git-compat-util.h	FUNCTION_99	CALL_2
0x40000af	      0xe800000000	                          call 0x40000b4	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000b4	            0x8b00	                    mov eax, dword [rax]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000b6	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000b8	            0x7521	                           jne 0x40000db	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000be	           0xfb600	                   movzx eax, byte [rax]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000c1	            0x84c0	                             test al, al	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000c3	            0x7516	                           jne 0x40000db	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000c9	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000cd	            0x740c	                            je 0x40000db	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000d3	            0x89c0	                            mov eax, eax	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000d5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000d9	            0x7407	                            je 0x40000e2	      1019	git-compat-util.h	FUNCTION_99	IF_2
0x40000db	      0xb8ffffffff	                     mov eax, 0xffffffff	      1020	git-compat-util.h	FUNCTION_99	IF_2
0x40000e0	            0xeb11	                           jmp 0x40000f3	      1020	git-compat-util.h	FUNCTION_99	IF_2
0x40000e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1021	git-compat-util.h	FUNCTION_99
0x40000e6	            0x89c2	                            mov edx, eax	      1021	git-compat-util.h	FUNCTION_99
0x40000e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	git-compat-util.h	FUNCTION_99
0x40000ec	            0x8910	                    mov dword [rax], edx	      1021	git-compat-util.h	FUNCTION_99
0x40000ee	      0xb800000000	                              mov eax, 0	      1022	git-compat-util.h	FUNCTION_99
0x40000f3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	git-compat-util.h	FUNCTION_99
0x40000f7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	git-compat-util.h	FUNCTION_99
0x4000100	            0x7405	                            je 0x4000107	      1023	git-compat-util.h	FUNCTION_99
0x4000102	      0xe800000000	                          call 0x4000107	      1023	git-compat-util.h	FUNCTION_99
0x4000107	              0xc9	                                   leave	      1023	git-compat-util.h	FUNCTION_99
0x4000108	              0xc3	                                     ret	      1023	git-compat-util.h	FUNCTION_99
process_lstat_error	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,3:ELSE,0	26
0x4000fa5	              0x55	                                push rbp	       263	update-index.c	FUNCTION_40
0x4000fa6	          0x4889e5	                            mov rbp, rsp	       263	update-index.c	FUNCTION_40
0x4000fa9	        0x4883ec10	                           sub rsp, 0x10	       263	update-index.c	FUNCTION_40
0x4000fad	        0x48897df8	                mov qword [rbp - 8], rdi	       263	update-index.c	FUNCTION_40
0x4000fb1	          0x8975f4	              mov dword [rbp - 0xc], esi	       263	update-index.c	FUNCTION_40
0x4000fb4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       264	update-index.c	FUNCTION_40	IF_1	CALL_1
0x4000fb7	            0x89c7	                            mov edi, eax	       264	update-index.c	FUNCTION_40	IF_1	CALL_1
0x4000fb9	      0xe84bf1ffff	          call sym.is_missing_file_error	       264	update-index.c	FUNCTION_40	IF_1	CALL_1
0x4000fbe	            0x85c0	                           test eax, eax	       264	update-index.c	FUNCTION_40	IF_1	CALL_1
0x4000fc0	            0x740e	                            je 0x4000fd0	       264	update-index.c	FUNCTION_40	IF_1	CALL_1
0x4000fc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	update-index.c	FUNCTION_40	CALL_2
0x4000fc6	          0x4889c7	                            mov rdi, rax	       265	update-index.c	FUNCTION_40	CALL_2
0x4000fc9	      0xe86bffffff	                call sym.remove_one_path	       265	update-index.c	FUNCTION_40	CALL_2
0x4000fce	            0xeb28	                           jmp 0x4000ff8	       265	update-index.c	FUNCTION_40	CALL_2
0x4000fd0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fd3	            0x89c7	                            mov edi, eax	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fd5	      0xe800000000	                          call 0x4000fda	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fda	          0x4889c2	                            mov rdx, rax	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fe1	          0x4889c6	                            mov rsi, rax	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fe4	      0xbf00000000	                              mov edi, 0	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fe9	      0xb800000000	                              mov eax, 0	       266	update-index.c	FUNCTION_40	CALL_3
0x4000fee	      0xe800000000	                          call 0x4000ff3	       266	update-index.c	FUNCTION_40	CALL_3
0x4000ff3	      0xe848f0ffff	                    call sym.const_error	       266	update-index.c	FUNCTION_40	CALL_3
0x4000ff8	              0xc9	                                   leave	       267	update-index.c	FUNCTION_40
0x4000ff9	              0xc3	                                     ret	       267	update-index.c	FUNCTION_40
do_reupdate	IF,5:DO,0:FOR,1:functions,0:SWITCH,0:WHILE,0:CALL,11:ELSE,0	123
0x400213c	              0x55	                                push rbp	       720	update-index.c	FUNCTION_52
0x400213d	          0x4889e5	                            mov rbp, rsp	       720	update-index.c	FUNCTION_52
0x4002140	        0x4883ec70	                           sub rsp, 0x70	       720	update-index.c	FUNCTION_52
0x4002144	          0x897dac	             mov dword [rbp - 0x54], edi	       720	update-index.c	FUNCTION_52
0x4002147	        0x488975a0	             mov qword [rbp - 0x60], rsi	       720	update-index.c	FUNCTION_52
0x400214b	        0x48895598	             mov qword [rbp - 0x68], rdx	       720	update-index.c	FUNCTION_52
0x400214f	          0x894da8	             mov dword [rbp - 0x58], ecx	       720	update-index.c	FUNCTION_52
0x4002152	    0x64488b042528	                mov rax, qword fs:[0x28]	       720	update-index.c	FUNCTION_52
0x400215b	        0x488945f8	                mov qword [rbp - 8], rax	       720	update-index.c	FUNCTION_52
0x400215f	            0x31c0	                            xor eax, eax	       720	update-index.c	FUNCTION_52
0x4002161	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       725	update-index.c	FUNCTION_52
0x4002168	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       728	update-index.c	FUNCTION_52	CALL_1
0x400216c	        0x488d4808	                      lea rcx, [rax + 8]	       728	update-index.c	FUNCTION_52	CALL_1
0x4002170	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       728	update-index.c	FUNCTION_52	CALL_1
0x4002174	        0x488d45e0	                   lea rax, [rbp - 0x20]	       728	update-index.c	FUNCTION_52	CALL_1
0x4002178	          0x4989c8	                             mov r8, rcx	       728	update-index.c	FUNCTION_52	CALL_1
0x400217b	          0x4889d1	                            mov rcx, rdx	       728	update-index.c	FUNCTION_52	CALL_1
0x400217e	      0xba01000000	                              mov edx, 1	       728	update-index.c	FUNCTION_52	CALL_1
0x4002183	      0xbe00000000	                              mov esi, 0	       728	update-index.c	FUNCTION_52	CALL_1
0x4002188	          0x4889c7	                            mov rdi, rax	       728	update-index.c	FUNCTION_52	CALL_1
0x400218b	      0xe800000000	                          call 0x4002190	       728	update-index.c	FUNCTION_52	CALL_1
0x4002190	      0xbe00000000	                              mov esi, 0	       732	update-index.c	FUNCTION_52	IF_1	CALL_2
0x4002195	      0xbf00000000	                              mov edi, 0	       732	update-index.c	FUNCTION_52	IF_1	CALL_2
0x400219a	      0xe800000000	                          call 0x400219f	       732	update-index.c	FUNCTION_52	IF_1	CALL_2
0x400219f	            0x85c0	                           test eax, eax	       732	update-index.c	FUNCTION_52	IF_1	CALL_2
0x40021a1	            0x7407	                            je 0x40021aa	       732	update-index.c	FUNCTION_52	IF_1	CALL_2
0x40021a3	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       736	update-index.c	FUNCTION_52	IF_1
0x40021aa	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       738	update-index.c	FUNCTION_52	FOR_1
0x40021b1	      0xe92d010000	                           jmp 0x40022e3	       738	update-index.c	FUNCTION_52	FOR_1
0x40021b6	    0x488b05000000	            mov rax, qword [0x040021bd] 	       739	update-index.c	FUNCTION_52	FOR_1
0x40021bd	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       739	update-index.c	FUNCTION_52	FOR_1
0x40021c0	          0x4863d2	                         movsxd rdx, edx	       739	update-index.c	FUNCTION_52	FOR_1
0x40021c3	        0x48c1e203	                              shl rdx, 3	       739	update-index.c	FUNCTION_52	FOR_1
0x40021c7	          0x4801d0	                            add rax, rdx	       739	update-index.c	FUNCTION_52	FOR_1
0x40021ca	          0x488b00	                    mov rax, qword [rax]	       739	update-index.c	FUNCTION_52	FOR_1
0x40021cd	        0x488945d0	             mov qword [rbp - 0x30], rax	       739	update-index.c	FUNCTION_52	FOR_1
0x40021d1	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       740	update-index.c	FUNCTION_52	FOR_1
0x40021d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021dd	          0x8b4038	            mov eax, dword [rax + 0x38] 	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021e0	      0x2500300000	                         and eax, 0x3000	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021e5	          0xc1e80c	                            shr eax, 0xc	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021e8	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021ea	     0xf85ee000000	                           jne 0x40022de	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021f0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021f8	      0xba00000000	                              mov edx, 0	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x40021fd	          0x4889ce	                            mov rsi, rcx	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x4002200	          0x4889c7	                            mov rdi, rax	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x4002203	      0xe8a4e2ffff	                  call sym.ce_path_match	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x4002208	            0x85c0	                           test eax, eax	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x400220a	     0xf84ce000000	                            je 0x40022de	       744	update-index.c	FUNCTION_52	FOR_1	IF_2	CALL_3
0x4002210	        0x837dc000	               cmp dword [rbp - 0x40], 0	       746	update-index.c	FUNCTION_52	FOR_1	IF_3
0x4002214	            0x742f	                            je 0x4002245	       746	update-index.c	FUNCTION_52	FOR_1	IF_3
0x4002216	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	update-index.c	FUNCTION_52	FOR_1	IF_3
0x400221a	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       748	update-index.c	FUNCTION_52	FOR_1	IF_3
0x400221d	            0x89c2	                            mov edx, eax	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x400221f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       748	update-index.c	FUNCTION_52	FOR_1	IF_3
0x4002223	        0x4883c058	                           add rax, 0x58	       748	update-index.c	FUNCTION_52	FOR_1	IF_3
0x4002227	    0x41b800000000	                              mov r8d, 0	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x400222d	            0x89d1	                            mov ecx, edx	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x400222f	          0x4889c2	                            mov rdx, rax	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x4002232	      0xbe00000000	                              mov esi, 0	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x4002237	      0xbf00000000	                              mov edi, 0	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x400223c	      0xe8f4f9ffff	                   call sym.read_one_ent	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x4002241	        0x488945c8	             mov qword [rbp - 0x38], rax	       747	update-index.c	FUNCTION_52	FOR_1	IF_3	CALL_4
0x4002245	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400224a	            0x743f	                            je 0x400228b	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400224c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x4002250	          0x8b5034	            mov edx, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x4002253	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x4002257	          0x8b4034	            mov eax, dword [rax + 0x34] 	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400225a	            0x39c2	                            cmp edx, eax	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400225c	            0x752d	                           jne 0x400228b	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400225e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x4002262	        0x488d5044	                   lea rdx, [rax + 0x44]	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x4002266	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x400226a	        0x4883c044	                           add rax, 0x44	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x400226e	          0x4889d6	                            mov rsi, rdx	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x4002271	          0x4889c7	                            mov rdi, rax	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x4002274	      0xe8a2e1ffff	                         call sym.oidcmp	       750	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_5
0x4002279	            0x85c0	                           test eax, eax	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400227b	            0x750e	                           jne 0x400228b	       749	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400227d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       751	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_6
0x4002281	          0x4889c7	                            mov rdi, rax	       751	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_6
0x4002284	      0xe800000000	                          call 0x4002289	       751	update-index.c	FUNCTION_52	FOR_1	IF_4	CALL_6
0x4002289	            0xeb54	                           jmp 0x40022df	       752	update-index.c	FUNCTION_52	FOR_1	IF_4
0x400228b	    0x8b0500000000	            mov eax, dword [0x04002291] 	       758	update-index.c	FUNCTION_52	FOR_1
0x4002291	          0x8945c4	             mov dword [rbp - 0x3c], eax	       758	update-index.c	FUNCTION_52	FOR_1
0x4002294	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       759	update-index.c	FUNCTION_52	FOR_1	CALL_7
0x4002298	        0x4883c058	                           add rax, 0x58	       759	update-index.c	FUNCTION_52	FOR_1	CALL_7
0x400229c	          0x4889c7	                            mov rdi, rax	       759	update-index.c	FUNCTION_52	FOR_1	CALL_7
0x400229f	      0xe800000000	                          call 0x40022a4	       759	update-index.c	FUNCTION_52	FOR_1	CALL_7
0x40022a4	        0x488945d8	             mov qword [rbp - 0x28], rax	       759	update-index.c	FUNCTION_52	FOR_1	CALL_7
0x40022a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       760	update-index.c	FUNCTION_52	FOR_1	CALL_8
0x40022ac	          0x4889c7	                            mov rdi, rax	       760	update-index.c	FUNCTION_52	FOR_1	CALL_8
0x40022af	      0xe887f4ffff	                     call sym.update_one	       760	update-index.c	FUNCTION_52	FOR_1	CALL_8
0x40022b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       761	update-index.c	FUNCTION_52	FOR_1	CALL_9
0x40022b8	          0x4889c7	                            mov rdi, rax	       761	update-index.c	FUNCTION_52	FOR_1	CALL_9
0x40022bb	      0xe800000000	                          call 0x40022c0	       761	update-index.c	FUNCTION_52	FOR_1	CALL_9
0x40022c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       762	update-index.c	FUNCTION_52	FOR_1	CALL_10
0x40022c4	          0x4889c7	                            mov rdi, rax	       762	update-index.c	FUNCTION_52	FOR_1	CALL_10
0x40022c7	      0xe800000000	                          call 0x40022cc	       762	update-index.c	FUNCTION_52	FOR_1	CALL_10
0x40022cc	    0x8b1500000000	            mov edx, dword [0x040022d2] 	       763	update-index.c	FUNCTION_52	FOR_1	IF_5
0x40022d2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       763	update-index.c	FUNCTION_52	FOR_1	IF_5
0x40022d5	            0x39c2	                            cmp edx, eax	       763	update-index.c	FUNCTION_52	FOR_1	IF_5
0x40022d7	            0x7406	                            je 0x40022df	       763	update-index.c	FUNCTION_52	FOR_1	IF_5
0x40022d9	      0xe9ccfeffff	                           jmp 0x40021aa	       764	update-index.c	FUNCTION_52	FOR_1	IF_5
0x40022de	              0x90	                                     nop	       745	update-index.c	FUNCTION_52	FOR_1	IF_2
0x40022df	        0x8345bc01	               add dword [rbp - 0x44], 1	       738	update-index.c	FUNCTION_52	FOR_1
0x40022e3	    0x8b1500000000	            mov edx, dword [0x040022e9] 	       738	update-index.c	FUNCTION_52	FOR_1
0x40022e9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       738	update-index.c	FUNCTION_52	FOR_1
0x40022ec	            0x39c2	                            cmp edx, eax	       738	update-index.c	FUNCTION_52	FOR_1
0x40022ee	     0xf87c2feffff	                            ja 0x40021b6	       738	update-index.c	FUNCTION_52	FOR_1
0x40022f4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       766	update-index.c	FUNCTION_52	CALL_11
0x40022f8	          0x4889c7	                            mov rdi, rax	       766	update-index.c	FUNCTION_52	CALL_11
0x40022fb	      0xe800000000	                          call 0x4002300	       766	update-index.c	FUNCTION_52	CALL_11
0x4002300	      0xb800000000	                              mov eax, 0	       767	update-index.c	FUNCTION_52
0x4002305	        0x488b75f8	                mov rsi, qword [rbp - 8]	       768	update-index.c	FUNCTION_52
0x4002309	    0x644833342528	                xor rsi, qword fs:[0x28]	       768	update-index.c	FUNCTION_52
0x4002312	            0x7405	                            je 0x4002319	       768	update-index.c	FUNCTION_52
0x4002314	      0xe800000000	                          call 0x4002319	       768	update-index.c	FUNCTION_52
0x4002319	              0xc9	                                   leave	       768	update-index.c	FUNCTION_52
0x400231a	              0xc3	                                     ret	       768	update-index.c	FUNCTION_52
do_unresolve	IF,0:DO,0:FOR,1:functions,0:SWITCH,0:WHILE,0:CALL,4:ELSE,0	39
0x40020b1	              0x55	                                push rbp	       700	update-index.c	FUNCTION_51
0x40020b2	          0x4889e5	                            mov rbp, rsp	       700	update-index.c	FUNCTION_51
0x40020b5	        0x4883ec40	                           sub rsp, 0x40	       700	update-index.c	FUNCTION_51
0x40020b9	          0x897ddc	             mov dword [rbp - 0x24], edi	       700	update-index.c	FUNCTION_51
0x40020bc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       700	update-index.c	FUNCTION_51
0x40020c0	        0x488955c8	             mov qword [rbp - 0x38], rdx	       700	update-index.c	FUNCTION_51
0x40020c4	          0x894dd8	             mov dword [rbp - 0x28], ecx	       700	update-index.c	FUNCTION_51
0x40020c7	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       702	update-index.c	FUNCTION_51
0x40020ce	      0xe87affffff	             call sym.read_head_pointers	       707	update-index.c	FUNCTION_51	CALL_1
0x40020d3	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       709	update-index.c	FUNCTION_51	FOR_1
0x40020da	            0xeb53	                           jmp 0x400212f	       709	update-index.c	FUNCTION_51	FOR_1
0x40020dc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       710	update-index.c	FUNCTION_51	FOR_1
0x40020df	            0x4898	                                    cdqe	       710	update-index.c	FUNCTION_51	FOR_1
0x40020e1	    0x488d14c50000	                        lea rdx, [rax*8]	       710	update-index.c	FUNCTION_51	FOR_1
0x40020e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       710	update-index.c	FUNCTION_51	FOR_1
0x40020ed	          0x4801d0	                            add rax, rdx	       710	update-index.c	FUNCTION_51	FOR_1
0x40020f0	          0x488b00	                    mov rax, qword [rax]	       710	update-index.c	FUNCTION_51	FOR_1
0x40020f3	        0x488945f0	             mov qword [rbp - 0x10], rax	       710	update-index.c	FUNCTION_51	FOR_1
0x40020f7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x40020fb	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x40020fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x4002102	            0x89ce	                            mov esi, ecx	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x4002104	          0x4889c7	                            mov rdi, rax	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x4002107	      0xe800000000	                          call 0x400210c	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x400210c	        0x488945f8	                mov qword [rbp - 8], rax	       711	update-index.c	FUNCTION_51	FOR_1	CALL_2
0x4002110	        0x488b45f8	                mov rax, qword [rbp - 8]	       712	update-index.c	FUNCTION_51	FOR_1	CALL_3
0x4002114	          0x4889c7	                            mov rdi, rax	       712	update-index.c	FUNCTION_51	FOR_1	CALL_3
0x4002117	      0xe866fcffff	                  call sym.unresolve_one	       712	update-index.c	FUNCTION_51	FOR_1	CALL_3
0x400211c	           0x945ec	              or dword [rbp - 0x14], eax	       712	update-index.c	FUNCTION_51	FOR_1	CALL_3
0x400211f	        0x488b45f8	                mov rax, qword [rbp - 8]	       713	update-index.c	FUNCTION_51	FOR_1	CALL_4
0x4002123	          0x4889c7	                            mov rdi, rax	       713	update-index.c	FUNCTION_51	FOR_1	CALL_4
0x4002126	      0xe800000000	                          call 0x400212b	       713	update-index.c	FUNCTION_51	FOR_1	CALL_4
0x400212b	        0x8345e801	               add dword [rbp - 0x18], 1	       709	update-index.c	FUNCTION_51	FOR_1
0x400212f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       709	update-index.c	FUNCTION_51	FOR_1
0x4002132	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       709	update-index.c	FUNCTION_51	FOR_1
0x4002135	            0x7ca5	                            jl 0x40020dc	       709	update-index.c	FUNCTION_51	FOR_1
0x4002137	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       715	update-index.c	FUNCTION_51
0x400213a	              0xc9	                                   leave	       716	update-index.c	FUNCTION_51
0x400213b	              0xc3	                                     ret	       716	update-index.c	FUNCTION_51
remove_test_directory	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	11
0x400068a	              0x55	                                push rbp	        65	update-index.c	FUNCTION_29
0x400068b	          0x4889e5	                            mov rbp, rsp	        65	update-index.c	FUNCTION_29
0x400068e	    0x488b05000000	            mov rax, qword [0x04000695] 	        66	update-index.c	FUNCTION_29	IF_1
0x4000695	          0x4885c0	                           test rax, rax	        66	update-index.c	FUNCTION_29	IF_1
0x4000698	            0x740f	                            je 0x40006a9	        66	update-index.c	FUNCTION_29	IF_1
0x400069a	      0xbe00000000	                              mov esi, 0	        67	update-index.c	FUNCTION_29	CALL_1
0x400069f	      0xbf00000000	                              mov edi, 0	        67	update-index.c	FUNCTION_29	CALL_1
0x40006a4	      0xe800000000	                          call 0x40006a9	        67	update-index.c	FUNCTION_29	CALL_1
0x40006a9	              0x90	                                     nop	        68	update-index.c	FUNCTION_29
0x40006aa	              0x5d	                                 pop rbp	        68	update-index.c	FUNCTION_29
0x40006ab	              0xc3	                                     ret	        68	update-index.c	FUNCTION_29
test_if_untracked_cache_is_supported	IF,8:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,70:ELSE,0	287
0x40008b5	              0x55	                                push rbp	       127	update-index.c	FUNCTION_37
0x40008b6	          0x4889e5	                            mov rbp, rsp	       127	update-index.c	FUNCTION_37
0x40008b9	              0x53	                                push rbx	       127	update-index.c	FUNCTION_37
0x40008ba	    0x4881ece80000	                           sub rsp, 0xe8	       127	update-index.c	FUNCTION_37
0x40008c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       127	update-index.c	FUNCTION_37
0x40008ca	        0x488945e8	             mov qword [rbp - 0x18], rax	       127	update-index.c	FUNCTION_37
0x40008ce	            0x31c0	                            xor eax, eax	       127	update-index.c	FUNCTION_37
0x40008d0	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	       130	update-index.c	FUNCTION_37
0x40008da	      0xbe00000000	                              mov esi, 0	       133	update-index.c	FUNCTION_37	CALL_1
0x40008df	      0xbf00000000	                              mov edi, 0	       133	update-index.c	FUNCTION_37	CALL_1
0x40008e4	      0xe86ff9ffff	                  call sym.strbuf_addstr	       133	update-index.c	FUNCTION_37	CALL_1
0x40008e9	    0x488b05000000	            mov rax, qword [0x040008f0] 	       134	update-index.c	FUNCTION_37	IF_1
0x40008f0	          0x4889c7	                            mov rdi, rax	       134	update-index.c	FUNCTION_37	IF_1
0x40008f3	      0xe800000000	                          call 0x40008f8	       134	update-index.c	FUNCTION_37	IF_1
0x40008f8	          0x4885c0	                           test rax, rax	       134	update-index.c	FUNCTION_37	IF_1
0x40008fb	            0x750f	                           jne 0x400090c	       134	update-index.c	FUNCTION_37	IF_1
0x40008fd	      0xbf00000000	                              mov edi, 0	       135	update-index.c	FUNCTION_37	CALL_2
0x4000902	      0xb800000000	                              mov eax, 0	       135	update-index.c	FUNCTION_37	CALL_2
0x4000907	      0xe800000000	                          call 0x400090c	       135	update-index.c	FUNCTION_37	CALL_2
0x400090c	      0xe800000000	                          call 0x4000911	       137	update-index.c	FUNCTION_37	CALL_3
0x4000911	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       137	update-index.c	FUNCTION_37	CALL_3
0x4000918	      0xbf00000000	                              mov edi, 0	       138	update-index.c	FUNCTION_37	CALL_5
0x400091d	      0xe86bf9ffff	                               call sym.	       138	update-index.c	FUNCTION_37	CALL_5
0x4000922	          0x4889c1	                            mov rcx, rax	       138	update-index.c	FUNCTION_37	CALL_5
0x4000925	    0x488b05000000	            mov rax, qword [0x0400092c] 	       138	update-index.c	FUNCTION_37	CALL_5
0x400092c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       138	update-index.c	FUNCTION_37	CALL_5
0x4000933	          0x4889ce	                            mov rsi, rcx	       138	update-index.c	FUNCTION_37	CALL_5
0x4000936	          0x4889c7	                            mov rdi, rax	       138	update-index.c	FUNCTION_37	CALL_5
0x4000939	      0xb800000000	                              mov eax, 0	       138	update-index.c	FUNCTION_37	CALL_5
0x400093e	      0xe800000000	                          call 0x4000943	       138	update-index.c	FUNCTION_37	CALL_5
0x4000943	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       139	update-index.c	FUNCTION_37	CALL_6
0x400094a	          0x4889c7	                            mov rdi, rax	       139	update-index.c	FUNCTION_37	CALL_6
0x400094d	      0xe800000000	                          call 0x4000952	       139	update-index.c	FUNCTION_37	CALL_6
0x4000952	      0xbf00000000	                              mov edi, 0	       141	update-index.c	FUNCTION_37
0x4000957	      0xe800000000	                          call 0x400095c	       141	update-index.c	FUNCTION_37
0x400095c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       142	update-index.c	FUNCTION_37	CALL_7
0x4000963	          0x4889c7	                            mov rdi, rax	       142	update-index.c	FUNCTION_37	CALL_7
0x4000966	      0xe8dffdffff	                call sym.xstat_mtime_dir	       142	update-index.c	FUNCTION_37	CALL_7
0x400096b	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       143	update-index.c	FUNCTION_37	CALL_8
0x4000972	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       143	update-index.c	FUNCTION_37	CALL_8
0x4000979	          0x4889d6	                            mov rsi, rdx	       143	update-index.c	FUNCTION_37	CALL_8
0x400097c	          0x4889c7	                            mov rdi, rax	       143	update-index.c	FUNCTION_37	CALL_8
0x400097f	      0xe800000000	                          call 0x4000984	       143	update-index.c	FUNCTION_37	CALL_8
0x4000984	    0x488b05000000	            mov rax, qword [0x0400098b] 	       144	update-index.c	FUNCTION_37	CALL_9
0x400098b	          0x4889c6	                            mov rsi, rax	       144	update-index.c	FUNCTION_37	CALL_9
0x400098e	      0xbf2e000000	                           mov edi, 0x2e	       144	update-index.c	FUNCTION_37	CALL_9
0x4000993	      0xe800000000	                          call 0x4000998	       144	update-index.c	FUNCTION_37	CALL_9
0x4000998	      0xe807ffffff	                     call sym.avoid_racy	       146	update-index.c	FUNCTION_37	CALL_10
0x400099d	      0xbf00000000	                              mov edi, 0	       147	update-index.c	FUNCTION_37	CALL_11
0x40009a2	      0xe8f7fdffff	                    call sym.create_file	       147	update-index.c	FUNCTION_37	CALL_11
0x40009a7	    0x898514ffffff	             mov dword [rbp - 0xec], eax	       147	update-index.c	FUNCTION_37	CALL_11
0x40009ad	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       148	update-index.c	FUNCTION_37	CALL_12
0x40009b4	          0x4889c7	                            mov rdi, rax	       148	update-index.c	FUNCTION_37	CALL_12
0x40009b7	      0xe88efdffff	                call sym.xstat_mtime_dir	       148	update-index.c	FUNCTION_37	CALL_12
0x40009bc	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009c3	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009ca	          0x4889d6	                            mov rsi, rdx	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009cd	          0x4889c7	                            mov rdi, rax	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009d0	      0xe800000000	                          call 0x40009d5	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009d5	            0x85c0	                           test eax, eax	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009d7	            0x754a	                           jne 0x4000a23	       149	update-index.c	FUNCTION_37	IF_2	CALL_13
0x40009d9	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       150	update-index.c	FUNCTION_37	IF_2	CALL_14
0x40009df	            0x89c7	                            mov edi, eax	       150	update-index.c	FUNCTION_37	IF_2	CALL_14
0x40009e1	      0xe800000000	                          call 0x40009e6	       150	update-index.c	FUNCTION_37	IF_2	CALL_14
0x40009e6	    0x488b05000000	            mov rax, qword [0x040009ed] 	       151	update-index.c	FUNCTION_37	IF_2	CALL_15
0x40009ed	          0x4889c6	                            mov rsi, rax	       151	update-index.c	FUNCTION_37	IF_2	CALL_15
0x40009f0	      0xbf0a000000	                            mov edi, 0xa	       151	update-index.c	FUNCTION_37	IF_2	CALL_15
0x40009f5	      0xe800000000	                          call 0x40009fa	       151	update-index.c	FUNCTION_37	IF_2	CALL_15
0x40009fa	      0xbf00000000	                              mov edi, 0	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x40009ff	      0xe889f8ffff	                               call sym.	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a04	          0x4889c2	                            mov rdx, rax	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a07	    0x488b05000000	            mov rax, qword [0x04000a0e] 	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a0e	          0x4889d6	                            mov rsi, rdx	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a11	          0x4889c7	                            mov rdi, rax	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a14	      0xb800000000	                              mov eax, 0	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a19	      0xe800000000	                          call 0x4000a1e	       152	update-index.c	FUNCTION_37	IF_2	CALL_17
0x4000a1e	      0xe99e030000	                           jmp 0x4000dc1	       154	update-index.c	FUNCTION_37	IF_2
0x4000a23	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       156	update-index.c	FUNCTION_37	CALL_18
0x4000a2a	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       156	update-index.c	FUNCTION_37	CALL_18
0x4000a31	          0x4889d6	                            mov rsi, rdx	       156	update-index.c	FUNCTION_37	CALL_18
0x4000a34	          0x4889c7	                            mov rdi, rax	       156	update-index.c	FUNCTION_37	CALL_18
0x4000a37	      0xe800000000	                          call 0x4000a3c	       156	update-index.c	FUNCTION_37	CALL_18
0x4000a3c	    0x488b05000000	            mov rax, qword [0x04000a43] 	       157	update-index.c	FUNCTION_37	CALL_19
0x4000a43	          0x4889c6	                            mov rsi, rax	       157	update-index.c	FUNCTION_37	CALL_19
0x4000a46	      0xbf2e000000	                           mov edi, 0x2e	       157	update-index.c	FUNCTION_37	CALL_19
0x4000a4b	      0xe800000000	                          call 0x4000a50	       157	update-index.c	FUNCTION_37	CALL_19
0x4000a50	      0xe84ffeffff	                     call sym.avoid_racy	       159	update-index.c	FUNCTION_37	CALL_20
0x4000a55	      0xbf00000000	                              mov edi, 0	       160	update-index.c	FUNCTION_37	CALL_21
0x4000a5a	      0xe896fcffff	                         call sym.xmkdir	       160	update-index.c	FUNCTION_37	CALL_21
0x4000a5f	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       161	update-index.c	FUNCTION_37	CALL_22
0x4000a66	          0x4889c7	                            mov rdi, rax	       161	update-index.c	FUNCTION_37	CALL_22
0x4000a69	      0xe8dcfcffff	                call sym.xstat_mtime_dir	       161	update-index.c	FUNCTION_37	CALL_22
0x4000a6e	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a75	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a7c	          0x4889d6	                            mov rsi, rdx	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a7f	          0x4889c7	                            mov rdi, rax	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a82	      0xe800000000	                          call 0x4000a87	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a87	            0x85c0	                           test eax, eax	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a89	            0x754a	                           jne 0x4000ad5	       162	update-index.c	FUNCTION_37	IF_3	CALL_23
0x4000a8b	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       163	update-index.c	FUNCTION_37	IF_3	CALL_24
0x4000a91	            0x89c7	                            mov edi, eax	       163	update-index.c	FUNCTION_37	IF_3	CALL_24
0x4000a93	      0xe800000000	                          call 0x4000a98	       163	update-index.c	FUNCTION_37	IF_3	CALL_24
0x4000a98	    0x488b05000000	            mov rax, qword [0x04000a9f] 	       164	update-index.c	FUNCTION_37	IF_3	CALL_25
0x4000a9f	          0x4889c6	                            mov rsi, rax	       164	update-index.c	FUNCTION_37	IF_3	CALL_25
0x4000aa2	      0xbf0a000000	                            mov edi, 0xa	       164	update-index.c	FUNCTION_37	IF_3	CALL_25
0x4000aa7	      0xe800000000	                          call 0x4000aac	       164	update-index.c	FUNCTION_37	IF_3	CALL_25
0x4000aac	      0xbf00000000	                              mov edi, 0	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ab1	      0xe8d7f7ffff	                               call sym.	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ab6	          0x4889c2	                            mov rdx, rax	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ab9	    0x488b05000000	            mov rax, qword [0x04000ac0] 	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ac0	          0x4889d6	                            mov rsi, rdx	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ac3	          0x4889c7	                            mov rdi, rax	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ac6	      0xb800000000	                              mov eax, 0	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000acb	      0xe800000000	                          call 0x4000ad0	       165	update-index.c	FUNCTION_37	IF_3	CALL_27
0x4000ad0	      0xe9ec020000	                           jmp 0x4000dc1	       167	update-index.c	FUNCTION_37	IF_3
0x4000ad5	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       169	update-index.c	FUNCTION_37	CALL_28
0x4000adc	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       169	update-index.c	FUNCTION_37	CALL_28
0x4000ae3	          0x4889d6	                            mov rsi, rdx	       169	update-index.c	FUNCTION_37	CALL_28
0x4000ae6	          0x4889c7	                            mov rdi, rax	       169	update-index.c	FUNCTION_37	CALL_28
0x4000ae9	      0xe800000000	                          call 0x4000aee	       169	update-index.c	FUNCTION_37	CALL_28
0x4000aee	    0x488b05000000	            mov rax, qword [0x04000af5] 	       170	update-index.c	FUNCTION_37	CALL_29
0x4000af5	          0x4889c6	                            mov rsi, rax	       170	update-index.c	FUNCTION_37	CALL_29
0x4000af8	      0xbf2e000000	                           mov edi, 0x2e	       170	update-index.c	FUNCTION_37	CALL_29
0x4000afd	      0xe800000000	                          call 0x4000b02	       170	update-index.c	FUNCTION_37	CALL_29
0x4000b02	      0xe89dfdffff	                     call sym.avoid_racy	       172	update-index.c	FUNCTION_37	CALL_30
0x4000b07	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       173	update-index.c	FUNCTION_37	CALL_31
0x4000b0d	      0xba04000000	                              mov edx, 4	       173	update-index.c	FUNCTION_37	CALL_31
0x4000b12	      0xbe00000000	                              mov esi, 0	       173	update-index.c	FUNCTION_37	CALL_31
0x4000b17	            0x89c7	                            mov edi, eax	       173	update-index.c	FUNCTION_37	CALL_31
0x4000b19	      0xe800000000	                          call 0x4000b1e	       173	update-index.c	FUNCTION_37	CALL_31
0x4000b1e	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       174	update-index.c	FUNCTION_37	CALL_32
0x4000b24	            0x89c7	                            mov edi, eax	       174	update-index.c	FUNCTION_37	CALL_32
0x4000b26	      0xe800000000	                          call 0x4000b2b	       174	update-index.c	FUNCTION_37	CALL_32
0x4000b2b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       175	update-index.c	FUNCTION_37	CALL_33
0x4000b32	          0x4889c7	                            mov rdi, rax	       175	update-index.c	FUNCTION_37	CALL_33
0x4000b35	      0xe810fcffff	                call sym.xstat_mtime_dir	       175	update-index.c	FUNCTION_37	CALL_33
0x4000b3a	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b41	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b48	          0x4889d6	                            mov rsi, rdx	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b4b	          0x4889c7	                            mov rdi, rax	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b4e	      0xe800000000	                          call 0x4000b53	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b53	            0x85c0	                           test eax, eax	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b55	            0x743d	                            je 0x4000b94	       176	update-index.c	FUNCTION_37	IF_4	CALL_34
0x4000b57	    0x488b05000000	            mov rax, qword [0x04000b5e] 	       177	update-index.c	FUNCTION_37	IF_4	CALL_35
0x4000b5e	          0x4889c6	                            mov rsi, rax	       177	update-index.c	FUNCTION_37	IF_4	CALL_35
0x4000b61	      0xbf0a000000	                            mov edi, 0xa	       177	update-index.c	FUNCTION_37	IF_4	CALL_35
0x4000b66	      0xe800000000	                          call 0x4000b6b	       177	update-index.c	FUNCTION_37	IF_4	CALL_35
0x4000b6b	      0xbf00000000	                              mov edi, 0	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b70	      0xe818f7ffff	                               call sym.	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b75	          0x4889c2	                            mov rdx, rax	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b78	    0x488b05000000	            mov rax, qword [0x04000b7f] 	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b7f	          0x4889d6	                            mov rsi, rdx	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b82	          0x4889c7	                            mov rdi, rax	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b85	      0xb800000000	                              mov eax, 0	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       178	update-index.c	FUNCTION_37	IF_4	CALL_37
0x4000b8f	      0xe92d020000	                           jmp 0x4000dc1	       180	update-index.c	FUNCTION_37	IF_4
0x4000b94	    0x488b05000000	            mov rax, qword [0x04000b9b] 	       182	update-index.c	FUNCTION_37	CALL_38
0x4000b9b	          0x4889c6	                            mov rsi, rax	       182	update-index.c	FUNCTION_37	CALL_38
0x4000b9e	      0xbf2e000000	                           mov edi, 0x2e	       182	update-index.c	FUNCTION_37	CALL_38
0x4000ba3	      0xe800000000	                          call 0x4000ba8	       182	update-index.c	FUNCTION_37	CALL_38
0x4000ba8	      0xe8f7fcffff	                     call sym.avoid_racy	       184	update-index.c	FUNCTION_37	CALL_39
0x4000bad	      0xbf00000000	                              mov edi, 0	       185	update-index.c	FUNCTION_37	CALL_41
0x4000bb2	      0xe8e7fbffff	                    call sym.create_file	       185	update-index.c	FUNCTION_37	CALL_41
0x4000bb7	            0x89c7	                            mov edi, eax	       185	update-index.c	FUNCTION_37	CALL_41
0x4000bb9	      0xe800000000	                          call 0x4000bbe	       185	update-index.c	FUNCTION_37	CALL_41
0x4000bbe	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       186	update-index.c	FUNCTION_37	CALL_42
0x4000bc5	          0x4889c7	                            mov rdi, rax	       186	update-index.c	FUNCTION_37	CALL_42
0x4000bc8	      0xe87dfbffff	                call sym.xstat_mtime_dir	       186	update-index.c	FUNCTION_37	CALL_42
0x4000bcd	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000bd4	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000bdb	          0x4889d6	                            mov rsi, rdx	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000bde	          0x4889c7	                            mov rdi, rax	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000be1	      0xe800000000	                          call 0x4000be6	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000be6	            0x85c0	                           test eax, eax	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000be8	            0x743d	                            je 0x4000c27	       187	update-index.c	FUNCTION_37	IF_5	CALL_43
0x4000bea	    0x488b05000000	            mov rax, qword [0x04000bf1] 	       188	update-index.c	FUNCTION_37	IF_5	CALL_44
0x4000bf1	          0x4889c6	                            mov rsi, rax	       188	update-index.c	FUNCTION_37	IF_5	CALL_44
0x4000bf4	      0xbf0a000000	                            mov edi, 0xa	       188	update-index.c	FUNCTION_37	IF_5	CALL_44
0x4000bf9	      0xe800000000	                          call 0x4000bfe	       188	update-index.c	FUNCTION_37	IF_5	CALL_44
0x4000bfe	      0xbf00000000	                              mov edi, 0	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c03	      0xe885f6ffff	                               call sym.	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c08	          0x4889c2	                            mov rdx, rax	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c0b	    0x488b05000000	            mov rax, qword [0x04000c12] 	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c12	          0x4889d6	                            mov rsi, rdx	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c15	          0x4889c7	                            mov rdi, rax	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c18	      0xb800000000	                              mov eax, 0	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c1d	      0xe800000000	                          call 0x4000c22	       189	update-index.c	FUNCTION_37	IF_5	CALL_46
0x4000c22	      0xe99a010000	                           jmp 0x4000dc1	       191	update-index.c	FUNCTION_37	IF_5
0x4000c27	    0x488b05000000	            mov rax, qword [0x04000c2e] 	       193	update-index.c	FUNCTION_37	CALL_47
0x4000c2e	          0x4889c6	                            mov rsi, rax	       193	update-index.c	FUNCTION_37	CALL_47
0x4000c31	      0xbf2e000000	                           mov edi, 0x2e	       193	update-index.c	FUNCTION_37	CALL_47
0x4000c36	      0xe800000000	                          call 0x4000c3b	       193	update-index.c	FUNCTION_37	CALL_47
0x4000c3b	      0xe864fcffff	                     call sym.avoid_racy	       195	update-index.c	FUNCTION_37	CALL_48
0x4000c40	      0xbf00000000	                              mov edi, 0	       196	update-index.c	FUNCTION_37	CALL_49
0x4000c45	      0xe8bafbffff	                        call sym.xunlink	       196	update-index.c	FUNCTION_37	CALL_49
0x4000c4a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       197	update-index.c	FUNCTION_37	CALL_50
0x4000c51	          0x4889c7	                            mov rdi, rax	       197	update-index.c	FUNCTION_37	CALL_50
0x4000c54	      0xe8f1faffff	                call sym.xstat_mtime_dir	       197	update-index.c	FUNCTION_37	CALL_50
0x4000c59	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c60	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c67	          0x4889d6	                            mov rsi, rdx	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c6a	          0x4889c7	                            mov rdi, rax	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c6d	      0xe800000000	                          call 0x4000c72	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c72	            0x85c0	                           test eax, eax	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c74	            0x753d	                           jne 0x4000cb3	       198	update-index.c	FUNCTION_37	IF_6	CALL_51
0x4000c76	    0x488b05000000	            mov rax, qword [0x04000c7d] 	       199	update-index.c	FUNCTION_37	IF_6	CALL_52
0x4000c7d	          0x4889c6	                            mov rsi, rax	       199	update-index.c	FUNCTION_37	IF_6	CALL_52
0x4000c80	      0xbf0a000000	                            mov edi, 0xa	       199	update-index.c	FUNCTION_37	IF_6	CALL_52
0x4000c85	      0xe800000000	                          call 0x4000c8a	       199	update-index.c	FUNCTION_37	IF_6	CALL_52
0x4000c8a	      0xbf00000000	                              mov edi, 0	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000c8f	      0xe8f9f5ffff	                               call sym.	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000c94	          0x4889c2	                            mov rdx, rax	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000c97	    0x488b05000000	            mov rax, qword [0x04000c9e] 	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000c9e	          0x4889d6	                            mov rsi, rdx	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000ca1	          0x4889c7	                            mov rdi, rax	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000ca4	      0xb800000000	                              mov eax, 0	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000ca9	      0xe800000000	                          call 0x4000cae	       200	update-index.c	FUNCTION_37	IF_6	CALL_54
0x4000cae	      0xe90e010000	                           jmp 0x4000dc1	       202	update-index.c	FUNCTION_37	IF_6
0x4000cb3	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       204	update-index.c	FUNCTION_37	CALL_55
0x4000cba	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       204	update-index.c	FUNCTION_37	CALL_55
0x4000cc1	          0x4889d6	                            mov rsi, rdx	       204	update-index.c	FUNCTION_37	CALL_55
0x4000cc4	          0x4889c7	                            mov rdi, rax	       204	update-index.c	FUNCTION_37	CALL_55
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       204	update-index.c	FUNCTION_37	CALL_55
0x4000ccc	    0x488b05000000	            mov rax, qword [0x04000cd3] 	       205	update-index.c	FUNCTION_37	CALL_56
0x4000cd3	          0x4889c6	                            mov rsi, rax	       205	update-index.c	FUNCTION_37	CALL_56
0x4000cd6	      0xbf2e000000	                           mov edi, 0x2e	       205	update-index.c	FUNCTION_37	CALL_56
0x4000cdb	      0xe800000000	                          call 0x4000ce0	       205	update-index.c	FUNCTION_37	CALL_56
0x4000ce0	      0xe8bffbffff	                     call sym.avoid_racy	       207	update-index.c	FUNCTION_37	CALL_57
0x4000ce5	      0xbf00000000	                              mov edi, 0	       208	update-index.c	FUNCTION_37	CALL_58
0x4000cea	      0xe815fbffff	                        call sym.xunlink	       208	update-index.c	FUNCTION_37	CALL_58
0x4000cef	      0xbf00000000	                              mov edi, 0	       209	update-index.c	FUNCTION_37	CALL_59
0x4000cf4	      0xe85bfbffff	                         call sym.xrmdir	       209	update-index.c	FUNCTION_37	CALL_59
0x4000cf9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       210	update-index.c	FUNCTION_37	CALL_60
0x4000d00	          0x4889c7	                            mov rdi, rax	       210	update-index.c	FUNCTION_37	CALL_60
0x4000d03	      0xe842faffff	                call sym.xstat_mtime_dir	       210	update-index.c	FUNCTION_37	CALL_60
0x4000d08	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d0f	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d16	          0x4889d6	                            mov rsi, rdx	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d19	          0x4889c7	                            mov rdi, rax	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d1c	      0xe800000000	                          call 0x4000d21	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d21	            0x85c0	                           test eax, eax	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d23	            0x753a	                           jne 0x4000d5f	       211	update-index.c	FUNCTION_37	IF_7	CALL_61
0x4000d25	    0x488b05000000	            mov rax, qword [0x04000d2c] 	       212	update-index.c	FUNCTION_37	IF_7	CALL_62
0x4000d2c	          0x4889c6	                            mov rsi, rax	       212	update-index.c	FUNCTION_37	IF_7	CALL_62
0x4000d2f	      0xbf0a000000	                            mov edi, 0xa	       212	update-index.c	FUNCTION_37	IF_7	CALL_62
0x4000d34	      0xe800000000	                          call 0x4000d39	       212	update-index.c	FUNCTION_37	IF_7	CALL_62
0x4000d39	      0xbf00000000	                              mov edi, 0	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d3e	      0xe84af5ffff	                               call sym.	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d43	          0x4889c2	                            mov rdx, rax	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d46	    0x488b05000000	            mov rax, qword [0x04000d4d] 	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d4d	          0x4889d6	                            mov rsi, rdx	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d50	          0x4889c7	                            mov rdi, rax	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d53	      0xb800000000	                              mov eax, 0	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d58	      0xe800000000	                          call 0x4000d5d	       213	update-index.c	FUNCTION_37	IF_7	CALL_64
0x4000d5d	            0xeb62	                           jmp 0x4000dc1	       215	update-index.c	FUNCTION_37	IF_7
0x4000d5f	    0x488b05000000	            mov rax, qword [0x04000d66] 	       218	update-index.c	FUNCTION_37	IF_8	CALL_65
0x4000d66	          0x4889c7	                            mov rdi, rax	       218	update-index.c	FUNCTION_37	IF_8	CALL_65
0x4000d69	      0xe800000000	                          call 0x4000d6e	       218	update-index.c	FUNCTION_37	IF_8	CALL_65
0x4000d6e	            0x85c0	                           test eax, eax	       218	update-index.c	FUNCTION_37	IF_8	CALL_65
0x4000d70	            0x7421	                            je 0x4000d93	       218	update-index.c	FUNCTION_37	IF_8	CALL_65
0x4000d72	    0x488b1d000000	            mov rbx, qword [0x04000d79] 	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d79	      0xbf00000000	                              mov edi, 0	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d7e	      0xe80af5ffff	                               call sym.	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d83	          0x4889de	                            mov rsi, rbx	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d86	          0x4889c7	                            mov rdi, rax	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d89	      0xb800000000	                              mov eax, 0	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d8e	      0xe800000000	                          call 0x4000d93	       219	update-index.c	FUNCTION_37	CALL_67
0x4000d93	      0xbf00000000	                              mov edi, 0	       220	update-index.c	FUNCTION_37	CALL_69
0x4000d98	      0xe8f0f4ffff	                               call sym.	       220	update-index.c	FUNCTION_37	CALL_69
0x4000d9d	          0x4889c2	                            mov rdx, rax	       220	update-index.c	FUNCTION_37	CALL_69
0x4000da0	    0x488b05000000	            mov rax, qword [0x04000da7] 	       220	update-index.c	FUNCTION_37	CALL_69
0x4000da7	          0x4889d6	                            mov rsi, rdx	       220	update-index.c	FUNCTION_37	CALL_69
0x4000daa	          0x4889c7	                            mov rdi, rax	       220	update-index.c	FUNCTION_37	CALL_69
0x4000dad	      0xb800000000	                              mov eax, 0	       220	update-index.c	FUNCTION_37	CALL_69
0x4000db2	      0xe800000000	                          call 0x4000db7	       220	update-index.c	FUNCTION_37	CALL_69
0x4000db7	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	       221	update-index.c	FUNCTION_37
0x4000dc1	      0xbf00000000	                              mov edi, 0	       224	update-index.c	FUNCTION_37	CALL_70
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       224	update-index.c	FUNCTION_37	CALL_70
0x4000dcb	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	       225	update-index.c	FUNCTION_37
0x4000dd1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       226	update-index.c	FUNCTION_37
0x4000dd5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       226	update-index.c	FUNCTION_37
0x4000dde	            0x7405	                            je 0x4000de5	       226	update-index.c	FUNCTION_37
0x4000de0	      0xe800000000	                          call 0x4000de5	       226	update-index.c	FUNCTION_37
0x4000de5	    0x4881c4e80000	                           add rsp, 0xe8	       226	update-index.c	FUNCTION_37
0x4000dec	              0x5b	                                 pop rbx	       226	update-index.c	FUNCTION_37
0x4000ded	              0x5d	                                 pop rbp	       226	update-index.c	FUNCTION_37
0x4000dee	              0xc3	                                     ret	       226	update-index.c	FUNCTION_37
create_file	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,4:ELSE,0	28
0x400079e	              0x55	                                push rbp	        93	update-index.c	FUNCTION_33
0x400079f	          0x4889e5	                            mov rbp, rsp	        93	update-index.c	FUNCTION_33
0x40007a2	        0x4883ec20	                           sub rsp, 0x20	        93	update-index.c	FUNCTION_33
0x40007a6	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	update-index.c	FUNCTION_33
0x40007aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	update-index.c	FUNCTION_33	CALL_1
0x40007ae	          0x4889c7	                            mov rdi, rax	        95	update-index.c	FUNCTION_33	CALL_1
0x40007b1	      0xe8f6feffff	                 call sym.get_mtime_path	        95	update-index.c	FUNCTION_33	CALL_1
0x40007b6	        0x488945e8	             mov qword [rbp - 0x18], rax	        95	update-index.c	FUNCTION_33	CALL_1
0x40007ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	update-index.c	FUNCTION_33	CALL_2
0x40007be	      0xbaa4010000	                          mov edx, 0x1a4	        96	update-index.c	FUNCTION_33	CALL_2
0x40007c3	      0xbe42000000	                           mov esi, 0x42	        96	update-index.c	FUNCTION_33	CALL_2
0x40007c8	          0x4889c7	                            mov rdi, rax	        96	update-index.c	FUNCTION_33	CALL_2
0x40007cb	      0xb800000000	                              mov eax, 0	        96	update-index.c	FUNCTION_33	CALL_2
0x40007d0	      0xe800000000	                          call 0x40007d5	        96	update-index.c	FUNCTION_33	CALL_2
0x40007d5	          0x8945fc	                mov dword [rbp - 4], eax	        96	update-index.c	FUNCTION_33	CALL_2
0x40007d8	        0x837dfc00	                  cmp dword [rbp - 4], 0	        97	update-index.c	FUNCTION_33	IF_1
0x40007dc	            0x7921	                           jns 0x40007ff	        97	update-index.c	FUNCTION_33	IF_1
0x40007de	      0xbf00000000	                              mov edi, 0	        98	update-index.c	FUNCTION_33	CALL_4
0x40007e3	      0xe8a5faffff	                               call sym.	        98	update-index.c	FUNCTION_33	CALL_4
0x40007e8	          0x4889c2	                            mov rdx, rax	        98	update-index.c	FUNCTION_33	CALL_4
0x40007eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	update-index.c	FUNCTION_33	CALL_4
0x40007ef	          0x4889c6	                            mov rsi, rax	        98	update-index.c	FUNCTION_33	CALL_4
0x40007f2	          0x4889d7	                            mov rdi, rdx	        98	update-index.c	FUNCTION_33	CALL_4
0x40007f5	      0xb800000000	                              mov eax, 0	        98	update-index.c	FUNCTION_33	CALL_4
0x40007fa	      0xe800000000	                          call 0x40007ff	        98	update-index.c	FUNCTION_33	CALL_4
0x40007ff	          0x8b45fc	                mov eax, dword [rbp - 4]	        99	update-index.c	FUNCTION_33
0x4000802	              0xc9	                                   leave	       100	update-index.c	FUNCTION_33
0x4000803	              0xc3	                                     ret	       100	update-index.c	FUNCTION_33
xrmdir	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,4:ELSE,0	24
0x4000854	              0x55	                                push rbp	       110	update-index.c	FUNCTION_35
0x4000855	          0x4889e5	                            mov rbp, rsp	       110	update-index.c	FUNCTION_35
0x4000858	        0x4883ec10	                           sub rsp, 0x10	       110	update-index.c	FUNCTION_35
0x400085c	        0x48897df8	                mov qword [rbp - 8], rdi	       110	update-index.c	FUNCTION_35
0x4000860	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	update-index.c	FUNCTION_35	CALL_1
0x4000864	          0x4889c7	                            mov rdi, rax	       111	update-index.c	FUNCTION_35	CALL_1
0x4000867	      0xe840feffff	                 call sym.get_mtime_path	       111	update-index.c	FUNCTION_35	CALL_1
0x400086c	        0x488945f8	                mov qword [rbp - 8], rax	       111	update-index.c	FUNCTION_35	CALL_1
0x4000870	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	update-index.c	FUNCTION_35	IF_1	CALL_2
0x4000874	          0x4889c7	                            mov rdi, rax	       112	update-index.c	FUNCTION_35	IF_1	CALL_2
0x4000877	      0xe800000000	                          call 0x400087c	       112	update-index.c	FUNCTION_35	IF_1	CALL_2
0x400087c	            0x85c0	                           test eax, eax	       112	update-index.c	FUNCTION_35	IF_1	CALL_2
0x400087e	            0x7421	                            je 0x40008a1	       112	update-index.c	FUNCTION_35	IF_1	CALL_2
0x4000880	      0xbf00000000	                              mov edi, 0	       113	update-index.c	FUNCTION_35	CALL_4
0x4000885	      0xe803faffff	                               call sym.	       113	update-index.c	FUNCTION_35	CALL_4
0x400088a	          0x4889c2	                            mov rdx, rax	       113	update-index.c	FUNCTION_35	CALL_4
0x400088d	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	update-index.c	FUNCTION_35	CALL_4
0x4000891	          0x4889c6	                            mov rsi, rax	       113	update-index.c	FUNCTION_35	CALL_4
0x4000894	          0x4889d7	                            mov rdi, rdx	       113	update-index.c	FUNCTION_35	CALL_4
0x4000897	      0xb800000000	                              mov eax, 0	       113	update-index.c	FUNCTION_35	CALL_4
0x400089c	      0xe800000000	                          call 0x40008a1	       113	update-index.c	FUNCTION_35	CALL_4
0x40008a1	              0x90	                                     nop	       114	update-index.c	FUNCTION_35
0x40008a2	              0xc9	                                   leave	       114	update-index.c	FUNCTION_35
0x40008a3	              0xc3	                                     ret	       114	update-index.c	FUNCTION_35
is_missing_file_error	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,0:ELSE,0	12
0x4000109	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_103
0x400010a	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_103
0x400010d	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_103
0x4000110	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_103
0x4000114	            0x7406	                            je 0x400011c	      1197	git-compat-util.h	FUNCTION_103
0x4000116	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_103
0x400011a	            0x7507	                           jne 0x4000123	      1197	git-compat-util.h	FUNCTION_103
0x400011c	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_103
0x4000121	            0xeb05	                           jmp 0x4000128	      1197	git-compat-util.h	FUNCTION_103
0x4000123	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_103
0x4000128	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_103
0x4000129	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_103
really_refresh_callback	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	13
0x40023ac	              0x55	                                push rbp	       791	update-index.c	FUNCTION_55
0x40023ad	          0x4889e5	                            mov rbp, rsp	       791	update-index.c	FUNCTION_55
0x40023b0	        0x4883ec20	                           sub rsp, 0x20	       791	update-index.c	FUNCTION_55
0x40023b4	        0x48897df8	                mov qword [rbp - 8], rdi	       791	update-index.c	FUNCTION_55
0x40023b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       791	update-index.c	FUNCTION_55
0x40023bc	          0x8955ec	             mov dword [rbp - 0x14], edx	       791	update-index.c	FUNCTION_55
0x40023bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       792	update-index.c	FUNCTION_55	CALL_1
0x40023c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       792	update-index.c	FUNCTION_55	CALL_1
0x40023c7	      0xbe01000000	                              mov esi, 1	       792	update-index.c	FUNCTION_55	CALL_1
0x40023cc	          0x4889c7	                            mov rdi, rax	       792	update-index.c	FUNCTION_55	CALL_1
0x40023cf	      0xe847ffffff	                        call sym.refresh	       792	update-index.c	FUNCTION_55	CALL_1
0x40023d4	              0xc9	                                   leave	       793	update-index.c	FUNCTION_55
0x40023d5	              0xc3	                                     ret	       793	update-index.c	FUNCTION_55
add_one_path	IF,3:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,8:ELSE,0	113
0x4000ffa	              0x55	                                push rbp	       270	update-index.c	FUNCTION_41
0x4000ffb	          0x4889e5	                            mov rbp, rsp	       270	update-index.c	FUNCTION_41
0x4000ffe	        0x4883ec30	                           sub rsp, 0x30	       270	update-index.c	FUNCTION_41
0x4001002	        0x48897de8	             mov qword [rbp - 0x18], rdi	       270	update-index.c	FUNCTION_41
0x4001006	        0x488975e0	             mov qword [rbp - 0x20], rsi	       270	update-index.c	FUNCTION_41
0x400100a	          0x8955dc	             mov dword [rbp - 0x24], edx	       270	update-index.c	FUNCTION_41
0x400100d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       270	update-index.c	FUNCTION_41
0x4001011	      0x48837de800	               cmp qword [rbp - 0x18], 0	       275	update-index.c	FUNCTION_41	IF_1
0x4001016	            0x743b	                            je 0x4001053	       275	update-index.c	FUNCTION_41	IF_1
0x4001018	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	update-index.c	FUNCTION_41	IF_1
0x400101c	          0x8b4038	            mov eax, dword [rax + 0x38] 	       275	update-index.c	FUNCTION_41	IF_1
0x400101f	      0x2500300000	                         and eax, 0x3000	       275	update-index.c	FUNCTION_41	IF_1
0x4001024	          0xc1e80c	                            shr eax, 0xc	       275	update-index.c	FUNCTION_41	IF_1
0x4001027	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_41	IF_1
0x4001029	            0x7528	                           jne 0x4001053	       275	update-index.c	FUNCTION_41	IF_1
0x400102b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       275	update-index.c	FUNCTION_41	IF_1
0x400102f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	update-index.c	FUNCTION_41	IF_1
0x4001033	      0xb900000000	                              mov ecx, 0	       275	update-index.c	FUNCTION_41	IF_1
0x4001038	          0x4889c6	                            mov rsi, rax	       275	update-index.c	FUNCTION_41	IF_1
0x400103b	      0xbf00000000	                              mov edi, 0	       275	update-index.c	FUNCTION_41	IF_1
0x4001040	      0xe800000000	                          call 0x4001045	       275	update-index.c	FUNCTION_41	IF_1
0x4001045	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_41	IF_1
0x4001047	            0x750a	                           jne 0x4001053	       275	update-index.c	FUNCTION_41	IF_1
0x4001049	      0xb800000000	                              mov eax, 0	       276	update-index.c	FUNCTION_41	IF_1
0x400104e	      0xe937010000	                           jmp 0x400118a	       276	update-index.c	FUNCTION_41	IF_1
0x4001053	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       278	update-index.c	FUNCTION_41
0x4001056	          0x83c059	                           add eax, 0x59	       278	update-index.c	FUNCTION_41
0x4001059	          0x8945f0	             mov dword [rbp - 0x10], eax	       278	update-index.c	FUNCTION_41
0x400105c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       279	update-index.c	FUNCTION_41	CALL_1
0x400105f	            0x4898	                                    cdqe	       279	update-index.c	FUNCTION_41	CALL_1
0x4001061	          0x4889c6	                            mov rsi, rax	       279	update-index.c	FUNCTION_41	CALL_1
0x4001064	      0xbf01000000	                              mov edi, 1	       279	update-index.c	FUNCTION_41	CALL_1
0x4001069	      0xe800000000	                          call 0x400106e	       279	update-index.c	FUNCTION_41	CALL_1
0x400106e	        0x488945f8	                mov qword [rbp - 8], rax	       279	update-index.c	FUNCTION_41	CALL_1
0x4001072	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       280	update-index.c	FUNCTION_41	CALL_2
0x4001075	          0x4863d0	                         movsxd rdx, eax	       280	update-index.c	FUNCTION_41	CALL_2
0x4001078	        0x488b45f8	                mov rax, qword [rbp - 8]	       280	update-index.c	FUNCTION_41	CALL_2
0x400107c	        0x488d4858	                   lea rcx, [rax + 0x58]	       280	update-index.c	FUNCTION_41	CALL_2
0x4001080	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	update-index.c	FUNCTION_41	CALL_2
0x4001084	          0x4889c6	                            mov rsi, rax	       280	update-index.c	FUNCTION_41	CALL_2
0x4001087	          0x4889cf	                            mov rdi, rcx	       280	update-index.c	FUNCTION_41	CALL_2
0x400108a	      0xe800000000	                          call 0x400108f	       280	update-index.c	FUNCTION_41	CALL_2
0x400108f	      0xbf00000000	                              mov edi, 0	       281	update-index.c	FUNCTION_41	CALL_3
0x4001094	      0xe850f2ffff	                call sym.create_ce_flags	       281	update-index.c	FUNCTION_41	CALL_3
0x4001099	            0x89c2	                            mov edx, eax	       281	update-index.c	FUNCTION_41	CALL_3
0x400109b	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	update-index.c	FUNCTION_41	CALL_3
0x400109f	          0x895038	             mov dword [rax + 0x38], edx	       281	update-index.c	FUNCTION_41	CALL_3
0x40010a2	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       282	update-index.c	FUNCTION_41
0x40010a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       282	update-index.c	FUNCTION_41
0x40010a9	          0x89503c	             mov dword [rax + 0x3c], edx	       282	update-index.c	FUNCTION_41
0x40010ac	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       283	update-index.c	FUNCTION_41	CALL_4
0x40010b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	update-index.c	FUNCTION_41	CALL_4
0x40010b4	          0x4889d6	                            mov rsi, rdx	       283	update-index.c	FUNCTION_41	CALL_4
0x40010b7	          0x4889c7	                            mov rdi, rax	       283	update-index.c	FUNCTION_41	CALL_4
0x40010ba	      0xe800000000	                          call 0x40010bf	       283	update-index.c	FUNCTION_41	CALL_4
0x40010bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       284	update-index.c	FUNCTION_41	CALL_5
0x40010c3	          0x8b5018	            mov edx, dword [rax + 0x18] 	       284	update-index.c	FUNCTION_41	CALL_5
0x40010c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	update-index.c	FUNCTION_41	CALL_5
0x40010ca	            0x89d6	                            mov esi, edx	       284	update-index.c	FUNCTION_41	CALL_5
0x40010cc	          0x4889c7	                            mov rdi, rax	       284	update-index.c	FUNCTION_41	CALL_5
0x40010cf	      0xe87ef2ffff	              call sym.ce_mode_from_stat	       284	update-index.c	FUNCTION_41	CALL_5
0x40010d4	            0x89c2	                            mov edx, eax	       284	update-index.c	FUNCTION_41	CALL_5
0x40010d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       284	update-index.c	FUNCTION_41	CALL_5
0x40010da	          0x895034	             mov dword [rax + 0x34], edx	       284	update-index.c	FUNCTION_41	CALL_5
0x40010dd	    0x8b0500000000	            mov eax, dword [0x040010e3] 	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010e3	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010e5	           0xf94c0	                                 sete al	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010e8	           0xfb6c8	                           movzx ecx, al	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010ef	        0x488d7844	                   lea rdi, [rax + 0x44]	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010f3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010fb	          0x4889c6	                            mov rsi, rax	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x40010fe	      0xe800000000	                          call 0x4001103	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x4001103	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x4001105	            0x7413	                            je 0x400111a	       286	update-index.c	FUNCTION_41	IF_2	CALL_6
0x4001107	        0x488b45f8	                mov rax, qword [rbp - 8]	       288	update-index.c	FUNCTION_41	IF_2	CALL_7
0x400110b	          0x4889c7	                            mov rdi, rax	       288	update-index.c	FUNCTION_41	IF_2	CALL_7
0x400110e	      0xe800000000	                          call 0x4001113	       288	update-index.c	FUNCTION_41	IF_2	CALL_7
0x4001113	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	update-index.c	FUNCTION_41	IF_2
0x4001118	            0xeb70	                           jmp 0x400118a	       289	update-index.c	FUNCTION_41	IF_2
0x400111a	    0x8b0500000000	            mov eax, dword [0x04001120] 	       291	update-index.c	FUNCTION_41
0x4001120	            0x85c0	                           test eax, eax	       291	update-index.c	FUNCTION_41
0x4001122	           0xf95c0	                                setne al	       291	update-index.c	FUNCTION_41
0x4001125	           0xfb6c0	                           movzx eax, al	       291	update-index.c	FUNCTION_41
0x4001128	          0x8945f4	              mov dword [rbp - 0xc], eax	       291	update-index.c	FUNCTION_41
0x400112b	    0x8b0500000000	            mov eax, dword [0x04001131] 	       292	update-index.c	FUNCTION_41
0x4001131	            0x85c0	                           test eax, eax	       292	update-index.c	FUNCTION_41
0x4001133	            0x7407	                            je 0x400113c	       292	update-index.c	FUNCTION_41
0x4001135	      0xb802000000	                              mov eax, 2	       292	update-index.c	FUNCTION_41
0x400113a	            0xeb05	                           jmp 0x4001141	       292	update-index.c	FUNCTION_41
0x400113c	      0xb800000000	                              mov eax, 0	       292	update-index.c	FUNCTION_41
0x4001141	           0x945f4	               or dword [rbp - 0xc], eax	       292	update-index.c	FUNCTION_41
0x4001144	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       293	update-index.c	FUNCTION_41	IF_3
0x4001147	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	update-index.c	FUNCTION_41	IF_3
0x400114b	          0x4889c6	                            mov rsi, rax	       293	update-index.c	FUNCTION_41	IF_3
0x400114e	      0xbf00000000	                              mov edi, 0	       293	update-index.c	FUNCTION_41	IF_3
0x4001153	      0xe800000000	                          call 0x4001158	       293	update-index.c	FUNCTION_41	IF_3
0x4001158	            0x85c0	                           test eax, eax	       293	update-index.c	FUNCTION_41	IF_3
0x400115a	            0x7429	                            je 0x4001185	       293	update-index.c	FUNCTION_41	IF_3
0x400115c	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	update-index.c	FUNCTION_41	IF_3	CALL_8
0x4001160	          0x4889c7	                            mov rdi, rax	       294	update-index.c	FUNCTION_41	IF_3	CALL_8
0x4001163	      0xe800000000	                          call 0x4001168	       294	update-index.c	FUNCTION_41	IF_3	CALL_8
0x4001168	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       295	update-index.c	FUNCTION_41	IF_3
0x400116c	          0x4889c6	                            mov rsi, rax	       295	update-index.c	FUNCTION_41	IF_3
0x400116f	      0xbf00000000	                              mov edi, 0	       295	update-index.c	FUNCTION_41	IF_3
0x4001174	      0xb800000000	                              mov eax, 0	       295	update-index.c	FUNCTION_41	IF_3
0x4001179	      0xe800000000	                          call 0x400117e	       295	update-index.c	FUNCTION_41	IF_3
0x400117e	      0xe8bdeeffff	                    call sym.const_error	       295	update-index.c	FUNCTION_41	IF_3
0x4001183	            0xeb05	                           jmp 0x400118a	       295	update-index.c	FUNCTION_41	IF_3
0x4001185	      0xb800000000	                              mov eax, 0	       297	update-index.c	FUNCTION_41
0x400118a	              0xc9	                                   leave	       298	update-index.c	FUNCTION_41
0x400118b	              0xc3	                                     ret	       298	update-index.c	FUNCTION_41
xunlink	IF,1:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,4:ELSE,0	24
0x4000804	              0x55	                                push rbp	       103	update-index.c	FUNCTION_34
0x4000805	          0x4889e5	                            mov rbp, rsp	       103	update-index.c	FUNCTION_34
0x4000808	        0x4883ec10	                           sub rsp, 0x10	       103	update-index.c	FUNCTION_34
0x400080c	        0x48897df8	                mov qword [rbp - 8], rdi	       103	update-index.c	FUNCTION_34
0x4000810	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	update-index.c	FUNCTION_34	CALL_1
0x4000814	          0x4889c7	                            mov rdi, rax	       104	update-index.c	FUNCTION_34	CALL_1
0x4000817	      0xe890feffff	                 call sym.get_mtime_path	       104	update-index.c	FUNCTION_34	CALL_1
0x400081c	        0x488945f8	                mov qword [rbp - 8], rax	       104	update-index.c	FUNCTION_34	CALL_1
0x4000820	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	update-index.c	FUNCTION_34	IF_1	CALL_2
0x4000824	          0x4889c7	                            mov rdi, rax	       105	update-index.c	FUNCTION_34	IF_1	CALL_2
0x4000827	      0xe800000000	                          call 0x400082c	       105	update-index.c	FUNCTION_34	IF_1	CALL_2
0x400082c	            0x85c0	                           test eax, eax	       105	update-index.c	FUNCTION_34	IF_1	CALL_2
0x400082e	            0x7421	                            je 0x4000851	       105	update-index.c	FUNCTION_34	IF_1	CALL_2
0x4000830	      0xbf00000000	                              mov edi, 0	       106	update-index.c	FUNCTION_34	CALL_4
0x4000835	      0xe853faffff	                               call sym.	       106	update-index.c	FUNCTION_34	CALL_4
0x400083a	          0x4889c2	                            mov rdx, rax	       106	update-index.c	FUNCTION_34	CALL_4
0x400083d	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	update-index.c	FUNCTION_34	CALL_4
0x4000841	          0x4889c6	                            mov rsi, rax	       106	update-index.c	FUNCTION_34	CALL_4
0x4000844	          0x4889d7	                            mov rdi, rdx	       106	update-index.c	FUNCTION_34	CALL_4
0x4000847	      0xb800000000	                              mov eax, 0	       106	update-index.c	FUNCTION_34	CALL_4
0x400084c	      0xe800000000	                          call 0x4000851	       106	update-index.c	FUNCTION_34	CALL_4
0x4000851	              0x90	                                     nop	       107	update-index.c	FUNCTION_34
0x4000852	              0xc9	                                   leave	       107	update-index.c	FUNCTION_34
0x4000853	              0xc3	                                     ret	       107	update-index.c	FUNCTION_34
process_path	IF,5:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,6:ELSE,0	104
0x4001350	              0x55	                                push rbp	       368	update-index.c	FUNCTION_43
0x4001351	          0x4889e5	                            mov rbp, rsp	       368	update-index.c	FUNCTION_43
0x4001354	    0x4881ecc00000	                           sub rsp, 0xc0	       368	update-index.c	FUNCTION_43
0x400135b	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       368	update-index.c	FUNCTION_43
0x4001362	    0x64488b042528	                mov rax, qword fs:[0x28]	       368	update-index.c	FUNCTION_43
0x400136b	        0x488945f8	                mov qword [rbp - 8], rax	       368	update-index.c	FUNCTION_43
0x400136f	            0x31c0	                            xor eax, eax	       368	update-index.c	FUNCTION_43
0x4001371	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       373	update-index.c	FUNCTION_43	CALL_1
0x4001378	          0x4889c7	                            mov rdi, rax	       373	update-index.c	FUNCTION_43	CALL_1
0x400137b	      0xe800000000	                          call 0x4001380	       373	update-index.c	FUNCTION_43	CALL_1
0x4001380	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       373	update-index.c	FUNCTION_43	CALL_1
0x4001386	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x400138c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x4001393	            0x89d6	                            mov esi, edx	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x4001395	          0x4889c7	                            mov rdi, rax	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x4001398	      0xe800000000	                          call 0x400139d	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x400139d	            0x85c0	                           test eax, eax	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x400139f	            0x7423	                            je 0x40013c4	       374	update-index.c	FUNCTION_43	IF_1	CALL_2
0x40013a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       375	update-index.c	FUNCTION_43	IF_1
0x40013a8	          0x4889c6	                            mov rsi, rax	       375	update-index.c	FUNCTION_43	IF_1
0x40013ab	      0xbf00000000	                              mov edi, 0	       375	update-index.c	FUNCTION_43	IF_1
0x40013b0	      0xb800000000	                              mov eax, 0	       375	update-index.c	FUNCTION_43	IF_1
0x40013b5	      0xe800000000	                          call 0x40013ba	       375	update-index.c	FUNCTION_43	IF_1
0x40013ba	      0xe881ecffff	                    call sym.const_error	       375	update-index.c	FUNCTION_43	IF_1
0x40013bf	      0xe949010000	                           jmp 0x400150d	       375	update-index.c	FUNCTION_43	IF_1
0x40013c4	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       377	update-index.c	FUNCTION_43
0x40013ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       377	update-index.c	FUNCTION_43
0x40013d1	          0x4889c6	                            mov rsi, rax	       377	update-index.c	FUNCTION_43
0x40013d4	      0xbf00000000	                              mov edi, 0	       377	update-index.c	FUNCTION_43
0x40013d9	      0xe800000000	                          call 0x40013de	       377	update-index.c	FUNCTION_43
0x40013de	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       377	update-index.c	FUNCTION_43
0x40013e4	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       378	update-index.c	FUNCTION_43
0x40013eb	            0x781c	                            js 0x4001409	       378	update-index.c	FUNCTION_43
0x40013ed	    0x488b05000000	            mov rax, qword [0x040013f4] 	       378	update-index.c	FUNCTION_43
0x40013f4	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	       378	update-index.c	FUNCTION_43
0x40013fa	          0x4863d2	                         movsxd rdx, edx	       378	update-index.c	FUNCTION_43
0x40013fd	        0x48c1e203	                              shl rdx, 3	       378	update-index.c	FUNCTION_43
0x4001401	          0x4801d0	                            add rax, rdx	       378	update-index.c	FUNCTION_43
0x4001404	          0x488b00	                    mov rax, qword [rax]	       378	update-index.c	FUNCTION_43
0x4001407	            0xeb05	                           jmp 0x400140e	       378	update-index.c	FUNCTION_43
0x4001409	      0xb800000000	                              mov eax, 0	       378	update-index.c	FUNCTION_43
0x400140e	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       378	update-index.c	FUNCTION_43
0x4001415	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       379	update-index.c	FUNCTION_43	IF_2
0x400141d	            0x7462	                            je 0x4001481	       379	update-index.c	FUNCTION_43	IF_2
0x400141f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       379	update-index.c	FUNCTION_43	IF_2
0x4001426	          0x8b4038	            mov eax, dword [rax + 0x38] 	       379	update-index.c	FUNCTION_43	IF_2
0x4001429	      0x2500000040	                     and eax, 0x40000000	       379	update-index.c	FUNCTION_43	IF_2
0x400142e	            0x85c0	                           test eax, eax	       379	update-index.c	FUNCTION_43	IF_2
0x4001430	            0x744f	                            je 0x4001481	       379	update-index.c	FUNCTION_43	IF_2
0x4001432	    0x8b0500000000	            mov eax, dword [0x04001438] 	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001438	            0x85c0	                           test eax, eax	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x400143a	            0x743b	                            je 0x4001477	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x400143c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001443	          0x4889c6	                            mov rsi, rax	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001446	      0xbf00000000	                              mov edi, 0	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x400144b	      0xe800000000	                          call 0x4001450	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001450	            0x85c0	                           test eax, eax	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001452	            0x7423	                            je 0x4001477	       385	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001454	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x400145b	          0x4889c6	                            mov rsi, rax	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x400145e	      0xbf00000000	                              mov edi, 0	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001463	      0xb800000000	                              mov eax, 0	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001468	      0xe800000000	                          call 0x400146d	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x400146d	      0xe8ceebffff	                    call sym.const_error	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001472	      0xe996000000	                           jmp 0x400150d	       386	update-index.c	FUNCTION_43	IF_2	IF_3
0x4001477	      0xb800000000	                              mov eax, 0	       387	update-index.c	FUNCTION_43	IF_2
0x400147c	      0xe98c000000	                           jmp 0x400150d	       387	update-index.c	FUNCTION_43	IF_2
0x4001481	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       394	update-index.c	FUNCTION_43	IF_4
0x4001488	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       394	update-index.c	FUNCTION_43	IF_4
0x400148f	          0x4889d6	                            mov rsi, rdx	       394	update-index.c	FUNCTION_43	IF_4
0x4001492	          0x4889c7	                            mov rdi, rax	       394	update-index.c	FUNCTION_43	IF_4
0x4001495	      0xe800000000	                          call 0x400149a	       394	update-index.c	FUNCTION_43	IF_4
0x400149a	            0x85c0	                           test eax, eax	       394	update-index.c	FUNCTION_43	IF_4
0x400149c	            0x791a	                           jns 0x40014b8	       394	update-index.c	FUNCTION_43	IF_4
0x400149e	      0xe800000000	                          call 0x40014a3	       395	update-index.c	FUNCTION_43	CALL_3
0x40014a3	            0x8b10	                    mov edx, dword [rax]	       395	update-index.c	FUNCTION_43	CALL_3
0x40014a5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       395	update-index.c	FUNCTION_43	CALL_3
0x40014ac	            0x89d6	                            mov esi, edx	       395	update-index.c	FUNCTION_43	CALL_3
0x40014ae	          0x4889c7	                            mov rdi, rax	       395	update-index.c	FUNCTION_43	CALL_3
0x40014b1	      0xe8effaffff	            call sym.process_lstat_error	       395	update-index.c	FUNCTION_43	CALL_3
0x40014b6	            0xeb55	                           jmp 0x400150d	       395	update-index.c	FUNCTION_43	CALL_3
0x40014b8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       397	update-index.c	FUNCTION_43	IF_5	CALL_4
0x40014be	      0x2500f00000	                         and eax, 0xf000	       397	update-index.c	FUNCTION_43	IF_5	CALL_4
0x40014c3	      0x3d00400000	                         cmp eax, 0x4000	       397	update-index.c	FUNCTION_43	IF_5	CALL_4
0x40014c8	            0x7520	                           jne 0x40014ea	       397	update-index.c	FUNCTION_43	IF_5	CALL_4
0x40014ca	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       398	update-index.c	FUNCTION_43	CALL_5
0x40014d1	    0x8b8d50ffffff	             mov ecx, dword [rbp - 0xb0]	       398	update-index.c	FUNCTION_43	CALL_5
0x40014d7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       398	update-index.c	FUNCTION_43	CALL_5
0x40014de	            0x89ce	                            mov esi, ecx	       398	update-index.c	FUNCTION_43	CALL_5
0x40014e0	          0x4889c7	                            mov rdi, rax	       398	update-index.c	FUNCTION_43	CALL_5
0x40014e3	      0xe8a4fcffff	              call sym.process_directory	       398	update-index.c	FUNCTION_43	CALL_5
0x40014e8	            0xeb23	                           jmp 0x400150d	       398	update-index.c	FUNCTION_43	CALL_5
0x40014ea	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       400	update-index.c	FUNCTION_43	CALL_6
0x40014f1	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	       400	update-index.c	FUNCTION_43	CALL_6
0x40014f7	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       400	update-index.c	FUNCTION_43	CALL_6
0x40014fe	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       400	update-index.c	FUNCTION_43	CALL_6
0x4001505	          0x4889c7	                            mov rdi, rax	       400	update-index.c	FUNCTION_43	CALL_6
0x4001508	      0xe8edfaffff	                   call sym.add_one_path	       400	update-index.c	FUNCTION_43	CALL_6
0x400150d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       401	update-index.c	FUNCTION_43
0x4001511	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       401	update-index.c	FUNCTION_43
0x400151a	            0x7405	                            je 0x4001521	       401	update-index.c	FUNCTION_43
0x400151c	      0xe800000000	                          call 0x4001521	       401	update-index.c	FUNCTION_43
0x4001521	              0xc9	                                   leave	       401	update-index.c	FUNCTION_43
0x4001522	              0xc3	                                     ret	       401	update-index.c	FUNCTION_43
ce_path_match	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,0	34
0x40004ac	              0x55	                                push rbp	       335	dir.h	FUNCTION_111
0x40004ad	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_111
0x40004b0	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_111
0x40004b4	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_111
0x40004b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_111
0x40004bc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_111
0x40004c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_111	CALL_2
0x40004c4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_111	CALL_2
0x40004c7	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_111	CALL_2
0x40004cc	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_111	CALL_1
0x40004d1	            0x7413	                            je 0x40004e6	       336	dir.h	FUNCTION_111	CALL_1
0x40004d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_111	CALL_2
0x40004d7	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_111	CALL_2
0x40004da	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_111	CALL_2
0x40004df	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_111	CALL_1
0x40004e4	            0x7507	                           jne 0x40004ed	       336	dir.h	FUNCTION_111	CALL_1
0x40004e6	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_111	CALL_1
0x40004eb	            0xeb05	                           jmp 0x40004f2	       336	dir.h	FUNCTION_111	CALL_1
0x40004ed	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_111	CALL_1
0x40004f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_111	CALL_1
0x40004f6	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_111	CALL_1
0x40004f9	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_111	CALL_1
0x40004fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_111	CALL_1
0x40004ff	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_111	CALL_1
0x4000503	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_111	CALL_1
0x4000507	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_111	CALL_1
0x400050b	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_111	CALL_1
0x400050e	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_111	CALL_1
0x4000511	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_111	CALL_1
0x4000516	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_111	CALL_1
0x4000518	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_111	CALL_1
0x400051b	      0xe800000000	                          call 0x4000520	       336	dir.h	FUNCTION_111	CALL_1
0x4000520	              0xc9	                                   leave	       338	dir.h	FUNCTION_111
0x4000521	              0xc3	                                     ret	       338	dir.h	FUNCTION_111
read_index_info	IF,10:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,1:CALL,14:ELSE,2	199
0x40018e5	              0x55	                                push rbp	       484	update-index.c	FUNCTION_47
0x40018e6	          0x4889e5	                            mov rbp, rsp	       484	update-index.c	FUNCTION_47
0x40018e9	    0x4881eca00000	                           sub rsp, 0xa0	       484	update-index.c	FUNCTION_47
0x40018f0	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       484	update-index.c	FUNCTION_47
0x40018f6	    0x64488b042528	                mov rax, qword fs:[0x28]	       484	update-index.c	FUNCTION_47
0x40018ff	        0x488945f8	                mov qword [rbp - 8], rax	       484	update-index.c	FUNCTION_47
0x4001903	            0x31c0	                            xor eax, eax	       484	update-index.c	FUNCTION_47
0x4001905	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       485	update-index.c	FUNCTION_47
0x400190d	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       485	update-index.c	FUNCTION_47
0x4001915	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       485	update-index.c	FUNCTION_47
0x400191d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       486	update-index.c	FUNCTION_47
0x4001925	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       486	update-index.c	FUNCTION_47
0x400192d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       486	update-index.c	FUNCTION_47
0x4001935	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       489	update-index.c	FUNCTION_47
0x400193c	            0x7407	                            je 0x4001945	       489	update-index.c	FUNCTION_47
0x400193e	      0xb800000000	                              mov eax, 0	       489	update-index.c	FUNCTION_47
0x4001943	            0xeb05	                           jmp 0x400194a	       489	update-index.c	FUNCTION_47
0x4001945	      0xb800000000	                              mov eax, 0	       489	update-index.c	FUNCTION_47
0x400194a	        0x48894590	             mov qword [rbp - 0x70], rax	       489	update-index.c	FUNCTION_47
0x400194e	      0xe993020000	                           jmp 0x4001be6	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001953	      0xe800000000	                          call 0x4001958	       514	update-index.c	FUNCTION_47	WHILE_1
0x4001958	    0xc70000000000	                      mov dword [rax], 0	       514	update-index.c	FUNCTION_47	WHILE_1
0x400195e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x4001962	    0x488d8d78ffff	                   lea rcx, [rbp - 0x88]	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x4001969	      0xba08000000	                              mov edx, 8	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x400196e	          0x4889ce	                            mov rsi, rcx	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x4001971	          0x4889c7	                            mov rdi, rax	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x4001974	      0xe800000000	                          call 0x4001979	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x4001979	        0x48894598	             mov qword [rbp - 0x68], rax	       515	update-index.c	FUNCTION_47	WHILE_1	CALL_2
0x400197d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x4001981	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x4001988	          0x4839c2	                            cmp rdx, rax	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x400198b	     0xf843e020000	                            je 0x4001bcf	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x4001991	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x4001998	           0xfb600	                   movzx eax, byte [rax]	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x400199b	            0x3c20	                            cmp al, 0x20	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x400199d	     0xf852c020000	                           jne 0x4001bcf	       516	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019a3	      0xe800000000	                          call 0x40019a8	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019a8	            0x8b00	                    mov eax, dword [rax]	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019aa	            0x85c0	                           test eax, eax	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019ac	     0xf851d020000	                           jne 0x4001bcf	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019b6	            0x89c0	                            mov eax, eax	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019b8	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019bc	     0xf850d020000	                           jne 0x4001bcf	       517	update-index.c	FUNCTION_47	WHILE_1	IF_1
0x40019c2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       519	update-index.c	FUNCTION_47	WHILE_1
0x40019c6	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       519	update-index.c	FUNCTION_47	WHILE_1
0x40019cc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       521	update-index.c	FUNCTION_47	WHILE_1	CALL_3
0x40019d3	      0xbe09000000	                              mov esi, 9	       521	update-index.c	FUNCTION_47	WHILE_1	CALL_3
0x40019d8	          0x4889c7	                            mov rdi, rax	       521	update-index.c	FUNCTION_47	WHILE_1	CALL_3
0x40019db	      0xe800000000	                          call 0x40019e0	       521	update-index.c	FUNCTION_47	WHILE_1	CALL_3
0x40019e0	        0x48894580	             mov qword [rbp - 0x80], rax	       521	update-index.c	FUNCTION_47	WHILE_1	CALL_3
0x40019e4	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x40019e9	     0xf84e0010000	                            je 0x4001bcf	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x40019ef	        0x488b4580	             mov rax, qword [rbp - 0x80]	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x40019f3	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x40019fa	          0x4829d0	                            sub rax, rdx	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x40019fd	        0x4883f828	                           cmp rax, 0x28	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x4001a01	     0xf8ec8010000	                           jle 0x4001bcf	       522	update-index.c	FUNCTION_47	WHILE_1	IF_2
0x4001a07	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a0b	        0x4883e802	                              sub rax, 2	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a0f	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a12	            0x3c20	                            cmp al, 0x20	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a14	            0x754b	                           jne 0x4001a61	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a16	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a1a	        0x4883e801	                              sub rax, 1	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a1e	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a21	            0x3c2f	                            cmp al, 0x2f	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a23	            0x7e3c	                           jle 0x4001a61	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a25	        0x488b4580	             mov rax, qword [rbp - 0x80]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a29	        0x4883e801	                              sub rax, 1	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a2d	           0xfb600	                   movzx eax, byte [rax]	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a30	            0x3c33	                            cmp al, 0x33	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a32	            0x7f2d	                            jg 0x4001a61	       525	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a34	        0x488b4580	             mov rax, qword [rbp - 0x80]	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a38	        0x4883e801	                              sub rax, 1	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a3c	           0xfb600	                   movzx eax, byte [rax]	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a3f	           0xfbec0	                           movsx eax, al	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a42	          0x83e830	                           sub eax, 0x30	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a45	    0x898570ffffff	             mov dword [rbp - 0x90], eax	       526	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a4b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       527	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a4f	        0x4883c001	                              add rax, 1	       527	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a53	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       527	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a5a	      0x48836d8002	               sub qword [rbp - 0x80], 2	       528	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a5f	            0xeb19	                           jmp 0x4001a7a	       528	update-index.c	FUNCTION_47	WHILE_1	IF_3
0x4001a61	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	       531	update-index.c	FUNCTION_47	WHILE_1	ELSE_1
0x4001a6b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       532	update-index.c	FUNCTION_47	WHILE_1	ELSE_1
0x4001a6f	        0x4883c001	                              add rax, 1	       532	update-index.c	FUNCTION_47	WHILE_1	ELSE_1
0x4001a73	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       532	update-index.c	FUNCTION_47	WHILE_1	ELSE_1
0x4001a7a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a7e	        0x488d50d8	                   lea rdx, [rax - 0x28]	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a82	        0x488d45e0	                   lea rax, [rbp - 0x20]	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a86	          0x4889c6	                            mov rsi, rax	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a89	          0x4889d7	                            mov rdi, rdx	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a8c	      0xe800000000	                          call 0x4001a91	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a91	            0x85c0	                           test eax, eax	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a93	     0xf8536010000	                           jne 0x4001bcf	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001a99	        0x488b4580	             mov rax, qword [rbp - 0x80]	       536	update-index.c	FUNCTION_47	WHILE_1	IF_4
0x4001a9d	        0x4883e829	                           sub rax, 0x29	       536	update-index.c	FUNCTION_47	WHILE_1	IF_4
0x4001aa1	           0xfb600	                   movzx eax, byte [rax]	       536	update-index.c	FUNCTION_47	WHILE_1	IF_4
0x4001aa4	            0x3c20	                            cmp al, 0x20	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001aa6	     0xf8523010000	                           jne 0x4001bcf	       535	update-index.c	FUNCTION_47	WHILE_1	IF_4	CALL_4
0x4001aac	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       539	update-index.c	FUNCTION_47	WHILE_1
0x4001ab3	        0x48894588	             mov qword [rbp - 0x78], rax	       539	update-index.c	FUNCTION_47	WHILE_1
0x4001ab7	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001abe	            0x754f	                           jne 0x4001b0f	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ac0	        0x488b4588	             mov rax, qword [rbp - 0x78]	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ac4	           0xfb600	                   movzx eax, byte [rax]	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ac7	            0x3c22	                            cmp al, 0x22	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ac9	            0x7544	                           jne 0x4001b0f	       540	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001acb	        0x488d45c0	                   lea rax, [rbp - 0x40]	       541	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001acf	      0xbe00000000	                              mov esi, 0	       541	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ad4	          0x4889c7	                            mov rdi, rax	       541	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001ad7	      0xe8e2e6ffff	                  call sym.strbuf_setlen	       541	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001adc	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001ae0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001ae4	      0xba00000000	                              mov edx, 0	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001ae9	          0x4889ce	                            mov rsi, rcx	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001aec	          0x4889c7	                            mov rdi, rax	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001aef	      0xe800000000	                          call 0x4001af4	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001af4	            0x85c0	                           test eax, eax	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001af6	            0x740f	                            je 0x4001b07	       542	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_5
0x4001af8	      0xbf00000000	                              mov edi, 0	       543	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_6
0x4001afd	      0xb800000000	                              mov eax, 0	       543	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_6
0x4001b02	      0xe800000000	                          call 0x4001b07	       543	update-index.c	FUNCTION_47	WHILE_1	IF_5	IF_6	CALL_6
0x4001b07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       545	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001b0b	        0x48894588	             mov qword [rbp - 0x78], rax	       545	update-index.c	FUNCTION_47	WHILE_1	IF_5
0x4001b0f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       548	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_7
0x4001b13	          0x4889c7	                            mov rdi, rax	       548	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_7
0x4001b16	      0xe800000000	                          call 0x4001b1b	       548	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_7
0x4001b1b	            0x85c0	                           test eax, eax	       548	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_7
0x4001b1d	            0x7522	                           jne 0x4001b41	       548	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_7
0x4001b1f	    0x488b05000000	            mov rax, qword [0x04001b26] 	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b26	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b2a	      0xbe00000000	                              mov esi, 0	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b2f	          0x4889c7	                            mov rdi, rax	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b32	      0xb800000000	                              mov eax, 0	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b37	      0xe800000000	                          call 0x4001b3c	       549	update-index.c	FUNCTION_47	WHILE_1	IF_7	CALL_8
0x4001b3c	      0xe9a5000000	                           jmp 0x4001be6	       550	update-index.c	FUNCTION_47	WHILE_1	IF_7
0x4001b41	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	       553	update-index.c	FUNCTION_47	WHILE_1	IF_8
0x4001b48	            0x7532	                           jne 0x4001b7c	       553	update-index.c	FUNCTION_47	WHILE_1	IF_8
0x4001b4a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b4e	          0x4889c6	                            mov rsi, rax	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b51	      0xbf00000000	                              mov edi, 0	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b56	      0xe800000000	                          call 0x4001b5b	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b5b	            0x85c0	                           test eax, eax	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b5d	     0xf8482000000	                            je 0x4001be5	       555	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9
0x4001b63	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       556	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9	CALL_9
0x4001b6a	          0x4889c6	                            mov rsi, rax	       556	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9	CALL_9
0x4001b6d	      0xbf00000000	                              mov edi, 0	       556	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9	CALL_9
0x4001b72	      0xb800000000	                              mov eax, 0	       556	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9	CALL_9
0x4001b77	      0xe800000000	                          call 0x4001b7c	       556	update-index.c	FUNCTION_47	WHILE_1	IF_8	IF_9	CALL_9
0x4001b7c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b83	        0x488d50d6	                   lea rdx, [rax - 0x2a]	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b87	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b8e	        0x4883e801	                              sub rax, 1	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b92	          0xc60000	                       mov byte [rax], 0	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b95	           0xfb600	                   movzx eax, byte [rax]	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b98	            0x8802	                      mov byte [rdx], al	       564	update-index.c	FUNCTION_47	WHILE_1	ELSE_2
0x4001b9a	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001ba0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001ba4	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001ba8	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001bae	            0x89c7	                            mov edi, eax	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001bb0	      0xe86ef9ffff	                  call sym.add_cacheinfo	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001bb5	            0x85c0	                           test eax, eax	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001bb7	            0x742c	                            je 0x4001be5	       565	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_10
0x4001bb9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       566	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_11
0x4001bbd	          0x4889c6	                            mov rsi, rax	       566	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_11
0x4001bc0	      0xbf00000000	                              mov edi, 0	       566	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_11
0x4001bc5	      0xb800000000	                              mov eax, 0	       566	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_11
0x4001bca	      0xe800000000	                          call 0x4001bcf	       566	update-index.c	FUNCTION_47	WHILE_1	ELSE_2	IF_10	CALL_11
0x4001bcf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       572	update-index.c	FUNCTION_47	WHILE_1	CALL_12
0x4001bd3	          0x4889c6	                            mov rsi, rax	       572	update-index.c	FUNCTION_47	WHILE_1	CALL_12
0x4001bd6	      0xbf00000000	                              mov edi, 0	       572	update-index.c	FUNCTION_47	WHILE_1	CALL_12
0x4001bdb	      0xb800000000	                              mov eax, 0	       572	update-index.c	FUNCTION_47	WHILE_1	CALL_12
0x4001be0	      0xe800000000	                          call 0x4001be5	       572	update-index.c	FUNCTION_47	WHILE_1	CALL_12
0x4001be5	              0x90	                                     nop	       569	update-index.c	FUNCTION_47	WHILE_1
0x4001be6	    0x488b0d000000	            mov rcx, qword [0x04001bed] 	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bed	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf5	          0x4889ce	                            mov rsi, rcx	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf8	          0x4889d7	                            mov rdi, rdx	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bfb	            0xffd0	                                call rax	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bfd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001c00	     0xf854dfdffff	                           jne 0x4001953	       490	update-index.c	FUNCTION_47	WHILE_1	CALL_1
0x4001c06	        0x488d45a0	                   lea rax, [rbp - 0x60]	       574	update-index.c	FUNCTION_47	CALL_13
0x4001c0a	          0x4889c7	                            mov rdi, rax	       574	update-index.c	FUNCTION_47	CALL_13
0x4001c0d	      0xe800000000	                          call 0x4001c12	       574	update-index.c	FUNCTION_47	CALL_13
0x4001c12	        0x488d45c0	                   lea rax, [rbp - 0x40]	       575	update-index.c	FUNCTION_47	CALL_14
0x4001c16	          0x4889c7	                            mov rdi, rax	       575	update-index.c	FUNCTION_47	CALL_14
0x4001c19	      0xe800000000	                          call 0x4001c1e	       575	update-index.c	FUNCTION_47	CALL_14
0x4001c1e	              0x90	                                     nop	       576	update-index.c	FUNCTION_47
0x4001c1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	update-index.c	FUNCTION_47
0x4001c23	    0x644833042528	                xor rax, qword fs:[0x28]	       576	update-index.c	FUNCTION_47
0x4001c2c	            0x7405	                            je 0x4001c33	       576	update-index.c	FUNCTION_47
0x4001c2e	      0xe800000000	                          call 0x4001c33	       576	update-index.c	FUNCTION_47
0x4001c33	              0xc9	                                   leave	       576	update-index.c	FUNCTION_47
0x4001c34	              0xc3	                                     ret	       576	update-index.c	FUNCTION_47
strbuf_setlen	IF,2:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,2:ELSE,1	43
0x40001be	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_67
0x40001bf	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_67
0x40001c2	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_67
0x40001c6	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_67
0x40001ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_67
0x40001ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_67	IF_1
0x40001d2	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_67	IF_1
0x40001d5	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x40001d8	            0x740d	                            je 0x40001e7	       162	strbuf.h	FUNCTION_67	IF_1
0x40001da	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_67	IF_1
0x40001de	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_67	IF_1
0x40001e1	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x40001e5	            0xeb05	                           jmp 0x40001ec	       162	strbuf.h	FUNCTION_67	IF_1
0x40001e7	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_67	IF_1
0x40001ec	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_67	IF_1
0x40001f0	            0x730f	                           jae 0x4000201	       162	strbuf.h	FUNCTION_67	IF_1
0x40001f2	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x40001f7	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x40001fc	      0xe800000000	                          call 0x4000201	       163	strbuf.h	FUNCTION_67	CALL_1
0x4000201	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_67
0x4000205	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_67
0x4000209	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_67
0x400020d	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_67	IF_2
0x4000211	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4000215	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x400021b	            0x7414	                            je 0x4000231	       165	strbuf.h	FUNCTION_67	IF_2
0x400021d	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_67	IF_2
0x4000221	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_67	IF_2
0x4000225	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_67	IF_2
0x4000229	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_67	IF_2
0x400022c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x400022f	            0xeb24	                           jmp 0x4000255	       169	strbuf.h	FUNCTION_67
0x4000231	     0xfb605000000	           movzx eax, byte [0x04000238] 	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000238	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_67	CALL_2
0x400023a	            0x7419	                            je 0x4000255	       168	strbuf.h	FUNCTION_67	CALL_2
0x400023c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000241	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000246	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x400024b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000250	      0xe800000000	                          call 0x4000255	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000255	              0x90	                                     nop	       169	strbuf.h	FUNCTION_67
0x4000256	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_67
0x4000257	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_67
process_directory	IF,7:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,1:CALL,6:ELSE,0	124
0x400118c	              0x55	                                push rbp	       324	update-index.c	FUNCTION_42
0x400118d	          0x4889e5	                            mov rbp, rsp	       324	update-index.c	FUNCTION_42
0x4001190	        0x4883ec60	                           sub rsp, 0x60	       324	update-index.c	FUNCTION_42
0x4001194	        0x48897db8	             mov qword [rbp - 0x48], rdi	       324	update-index.c	FUNCTION_42
0x4001198	          0x8975b4	             mov dword [rbp - 0x4c], esi	       324	update-index.c	FUNCTION_42
0x400119b	        0x488955a8	             mov qword [rbp - 0x58], rdx	       324	update-index.c	FUNCTION_42
0x400119f	    0x64488b042528	                mov rax, qword fs:[0x28]	       324	update-index.c	FUNCTION_42
0x40011a8	        0x488945f8	                mov qword [rbp - 8], rax	       324	update-index.c	FUNCTION_42
0x40011ac	            0x31c0	                            xor eax, eax	       324	update-index.c	FUNCTION_42
0x40011ae	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       326	update-index.c	FUNCTION_42
0x40011b1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       326	update-index.c	FUNCTION_42
0x40011b5	          0x4889c6	                            mov rsi, rax	       326	update-index.c	FUNCTION_42
0x40011b8	      0xbf00000000	                              mov edi, 0	       326	update-index.c	FUNCTION_42
0x40011bd	      0xe800000000	                          call 0x40011c2	       326	update-index.c	FUNCTION_42
0x40011c2	          0x8945cc	             mov dword [rbp - 0x34], eax	       326	update-index.c	FUNCTION_42
0x40011c5	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       329	update-index.c	FUNCTION_42	IF_1
0x40011c9	            0x787e	                            js 0x4001249	       329	update-index.c	FUNCTION_42	IF_1
0x40011cb	    0x488b05000000	            mov rax, qword [0x040011d2] 	       330	update-index.c	FUNCTION_42	IF_1
0x40011d2	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       330	update-index.c	FUNCTION_42	IF_1
0x40011d5	          0x4863d2	                         movsxd rdx, edx	       330	update-index.c	FUNCTION_42	IF_1
0x40011d8	        0x48c1e203	                              shl rdx, 3	       330	update-index.c	FUNCTION_42	IF_1
0x40011dc	          0x4801d0	                            add rax, rdx	       330	update-index.c	FUNCTION_42	IF_1
0x40011df	          0x488b00	                    mov rax, qword [rax]	       330	update-index.c	FUNCTION_42	IF_1
0x40011e2	        0x488945d0	             mov qword [rbp - 0x30], rax	       330	update-index.c	FUNCTION_42	IF_1
0x40011e6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       331	update-index.c	FUNCTION_42	IF_1	IF_2
0x40011ea	          0x8b4034	            mov eax, dword [rax + 0x34] 	       331	update-index.c	FUNCTION_42	IF_1	IF_2
0x40011ed	      0x2500f00000	                         and eax, 0xf000	       331	update-index.c	FUNCTION_42	IF_1	IF_2
0x40011f2	      0x3d00e00000	                         cmp eax, 0xe000	       331	update-index.c	FUNCTION_42	IF_1	IF_2
0x40011f7	            0x753f	                           jne 0x4001238	       331	update-index.c	FUNCTION_42	IF_1	IF_2
0x40011f9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x40011fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x4001201	      0xbe00000000	                              mov esi, 0	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x4001206	          0x4889c7	                            mov rdi, rax	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x4001209	      0xe800000000	                          call 0x400120e	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x400120e	            0x85c0	                           test eax, eax	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x4001210	            0x790a	                           jns 0x400121c	       334	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3	CALL_1
0x4001212	      0xb800000000	                              mov eax, 0	       335	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3
0x4001217	      0xe91e010000	                           jmp 0x400133a	       335	update-index.c	FUNCTION_42	IF_1	IF_2	IF_3
0x400121c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4001220	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4001223	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4001227	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x400122b	          0x4889c7	                            mov rdi, rax	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x400122e	      0xe8c7fdffff	                   call sym.add_one_path	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4001233	      0xe902010000	                           jmp 0x400133a	       337	update-index.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x4001238	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	update-index.c	FUNCTION_42	IF_1	CALL_3
0x400123c	          0x4889c7	                            mov rdi, rax	       340	update-index.c	FUNCTION_42	IF_1	CALL_3
0x400123f	      0xe8f5fcffff	                call sym.remove_one_path	       340	update-index.c	FUNCTION_42	IF_1	CALL_3
0x4001244	      0xe9f1000000	                           jmp 0x400133a	       340	update-index.c	FUNCTION_42	IF_1	CALL_3
0x4001249	          0xf755cc	                  not dword [rbp - 0x34]	       344	update-index.c	FUNCTION_42
0x400124c	      0xe984000000	                           jmp 0x40012d5	       345	update-index.c	FUNCTION_42	WHILE_1
0x4001251	    0x488b0d000000	            mov rcx, qword [0x04001258] 	       346	update-index.c	FUNCTION_42	WHILE_1
0x4001258	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       346	update-index.c	FUNCTION_42	WHILE_1
0x400125b	          0x8d5001	                      lea edx, [rax + 1]	       346	update-index.c	FUNCTION_42	WHILE_1
0x400125e	          0x8955cc	             mov dword [rbp - 0x34], edx	       346	update-index.c	FUNCTION_42	WHILE_1
0x4001261	            0x4898	                                    cdqe	       346	update-index.c	FUNCTION_42	WHILE_1
0x4001263	        0x48c1e003	                              shl rax, 3	       346	update-index.c	FUNCTION_42	WHILE_1
0x4001267	          0x4801c8	                            add rax, rcx	       346	update-index.c	FUNCTION_42	WHILE_1
0x400126a	          0x488b00	                    mov rax, qword [rax]	       346	update-index.c	FUNCTION_42	WHILE_1
0x400126d	        0x488945d8	             mov qword [rbp - 0x28], rax	       346	update-index.c	FUNCTION_42	WHILE_1
0x4001271	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001274	          0x4863d0	                         movsxd rdx, eax	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001277	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x400127b	        0x488d4858	                   lea rcx, [rax + 0x58]	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x400127f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001283	          0x4889c6	                            mov rsi, rax	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001286	          0x4889cf	                            mov rdi, rcx	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001289	      0xe800000000	                          call 0x400128e	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x400128e	            0x85c0	                           test eax, eax	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001290	            0x7556	                           jne 0x40012e8	       348	update-index.c	FUNCTION_42	WHILE_1	IF_4	CALL_4
0x4001292	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x4001296	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x4001299	            0x4898	                                    cdqe	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x400129b	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x40012a0	            0x3c2f	                            cmp al, 0x2f	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x40012a2	            0x7f47	                            jg 0x40012eb	       350	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x40012a4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012a8	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012ab	            0x4898	                                    cdqe	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012ad	       0xfb6440258	     movzx eax, byte [rdx + rax + 0x58] 	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012b2	            0x3c2e	                            cmp al, 0x2e	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012b4	            0x7f02	                            jg 0x40012b8	       352	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012b6	            0xeb1d	                           jmp 0x40012d5	       353	update-index.c	FUNCTION_42	WHILE_1	IF_6
0x40012b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012bc	          0x4889c6	                            mov rsi, rax	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012bf	      0xbf00000000	                              mov edi, 0	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012c4	      0xb800000000	                              mov eax, 0	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012c9	      0xe800000000	                          call 0x40012ce	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012ce	      0xe86dedffff	                    call sym.const_error	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012d3	            0xeb65	                           jmp 0x400133a	       356	update-index.c	FUNCTION_42	WHILE_1
0x40012d5	    0x8b1500000000	            mov edx, dword [0x040012db] 	       345	update-index.c	FUNCTION_42	WHILE_1
0x40012db	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       345	update-index.c	FUNCTION_42	WHILE_1
0x40012de	            0x39c2	                            cmp edx, eax	       345	update-index.c	FUNCTION_42	WHILE_1
0x40012e0	     0xf876bffffff	                            ja 0x4001251	       345	update-index.c	FUNCTION_42	WHILE_1
0x40012e6	            0xeb04	                           jmp 0x40012ec	       345	update-index.c	FUNCTION_42	WHILE_1
0x40012e8	              0x90	                                     nop	       349	update-index.c	FUNCTION_42	WHILE_1	IF_4
0x40012e9	            0xeb01	                           jmp 0x40012ec	       349	update-index.c	FUNCTION_42	WHILE_1	IF_4
0x40012eb	              0x90	                                     nop	       351	update-index.c	FUNCTION_42	WHILE_1	IF_5
0x40012ec	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x40012f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x40012f4	      0xbe00000000	                              mov esi, 0	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x40012f9	          0x4889c7	                            mov rdi, rax	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x40012fc	      0xe800000000	                          call 0x4001301	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x4001301	            0x85c0	                           test eax, eax	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x4001303	            0x751a	                           jne 0x400131f	       360	update-index.c	FUNCTION_42	IF_7	CALL_5
0x4001305	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       361	update-index.c	FUNCTION_42	CALL_6
0x4001309	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       361	update-index.c	FUNCTION_42	CALL_6
0x400130c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       361	update-index.c	FUNCTION_42	CALL_6
0x4001310	          0x4889c6	                            mov rsi, rax	       361	update-index.c	FUNCTION_42	CALL_6
0x4001313	      0xbf00000000	                              mov edi, 0	       361	update-index.c	FUNCTION_42	CALL_6
0x4001318	      0xe8ddfcffff	                   call sym.add_one_path	       361	update-index.c	FUNCTION_42	CALL_6
0x400131d	            0xeb1b	                           jmp 0x400133a	       361	update-index.c	FUNCTION_42	CALL_6
0x400131f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	update-index.c	FUNCTION_42
0x4001323	          0x4889c6	                            mov rsi, rax	       364	update-index.c	FUNCTION_42
0x4001326	      0xbf00000000	                              mov edi, 0	       364	update-index.c	FUNCTION_42
0x400132b	      0xb800000000	                              mov eax, 0	       364	update-index.c	FUNCTION_42
0x4001330	      0xe800000000	                          call 0x4001335	       364	update-index.c	FUNCTION_42
0x4001335	      0xe806edffff	                    call sym.const_error	       364	update-index.c	FUNCTION_42
0x400133a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       365	update-index.c	FUNCTION_42
0x400133e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       365	update-index.c	FUNCTION_42
0x4001347	            0x7405	                            je 0x400134e	       365	update-index.c	FUNCTION_42
0x4001349	      0xe800000000	                          call 0x400134e	       365	update-index.c	FUNCTION_42
0x400134e	              0xc9	                                   leave	       365	update-index.c	FUNCTION_42
0x400134f	              0xc3	                                     ret	       365	update-index.c	FUNCTION_42
rollback_lock_file	IF,0:DO,0:FOR,0:functions,0:SWITCH,0:WHILE,0:CALL,1:ELSE,0	10
0x4000491	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_122
0x4000492	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_122
0x4000495	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_122
0x4000499	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_122
0x400049d	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_122	CALL_1
0x40004a1	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_122	CALL_1
0x40004a4	      0xe800000000	                          call 0x40004a9	       304	lockfile.h	FUNCTION_122	CALL_1
0x40004a9	              0x90	                                     nop	       305	lockfile.h	FUNCTION_122
0x40004aa	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_122
0x40004ab	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_122
