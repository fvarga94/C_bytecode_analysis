skip_prefix	FOR,0:DO,1:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,0:IF,1	27
0x4000040	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_7
0x4000041	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_7
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_7
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_7
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_7
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000054	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000057	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000059	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400005f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000063	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000066	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400006b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400006d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000071	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000075	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000079	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400007c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000080	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000084	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000088	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400008b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400008d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400008f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_7
0x4000094	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_7
0x4000095	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_7
opt_parse_list_objects_filter	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2:IF,1	25
0x400043f	              0x55	                                push rbp	        93	list-objects-filter-options.c	FUNCTION_30
0x4000440	          0x4889e5	                            mov rbp, rsp	        93	list-objects-filter-options.c	FUNCTION_30
0x4000443	        0x4883ec30	                           sub rsp, 0x30	        93	list-objects-filter-options.c	FUNCTION_30
0x4000447	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	list-objects-filter-options.c	FUNCTION_30
0x400044b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        93	list-objects-filter-options.c	FUNCTION_30
0x400044f	          0x8955dc	             mov dword [rbp - 0x24], edx	        93	list-objects-filter-options.c	FUNCTION_30
0x4000452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	list-objects-filter-options.c	FUNCTION_30
0x4000456	        0x488b4010	            mov rax, qword [rax + 0x10] 	        94	list-objects-filter-options.c	FUNCTION_30
0x400045a	        0x488945f8	                mov qword [rbp - 8], rax	        94	list-objects-filter-options.c	FUNCTION_30
0x400045e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        96	list-objects-filter-options.c	FUNCTION_30	IF_1
0x4000462	            0x7507	                           jne 0x400046b	        96	list-objects-filter-options.c	FUNCTION_30	IF_1
0x4000464	      0x48837de000	               cmp qword [rbp - 0x20], 0	        96	list-objects-filter-options.c	FUNCTION_30	IF_1
0x4000469	            0x7513	                           jne 0x400047e	        96	list-objects-filter-options.c	FUNCTION_30	IF_1
0x400046b	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	list-objects-filter-options.c	FUNCTION_30	IF_1	CALL_1
0x400046f	          0x4889c7	                            mov rdi, rax	        97	list-objects-filter-options.c	FUNCTION_30	IF_1	CALL_1
0x4000472	      0xe804fdffff	call sym.list_objects_filter_set_no_filter	        97	list-objects-filter-options.c	FUNCTION_30	IF_1	CALL_1
0x4000477	      0xb800000000	                              mov eax, 0	        98	list-objects-filter-options.c	FUNCTION_30	IF_1
0x400047c	            0xeb13	                           jmp 0x4000491	        98	list-objects-filter-options.c	FUNCTION_30	IF_1
0x400047e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       101	list-objects-filter-options.c	FUNCTION_30	CALL_2
0x4000482	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	list-objects-filter-options.c	FUNCTION_30	CALL_2
0x4000486	          0x4889d6	                            mov rsi, rdx	       101	list-objects-filter-options.c	FUNCTION_30	CALL_2
0x4000489	          0x4889c7	                            mov rdi, rax	       101	list-objects-filter-options.c	FUNCTION_30	CALL_2
0x400048c	      0xe800000000	                          call 0x4000491	       101	list-objects-filter-options.c	FUNCTION_30	CALL_2
0x4000491	              0xc9	                                   leave	       102	list-objects-filter-options.c	FUNCTION_30
0x4000492	              0xc3	                                     ret	       102	list-objects-filter-options.c	FUNCTION_30
gently_parse_list_objects_filter	FOR,0:DO,0:functions,0:ELSE,3:WHILE,0:SWITCH,0:CALL,13:IF,9	129
0x40001a4	              0x55	                                push rbp	        28	list-objects-filter-options.c	FUNCTION_28
0x40001a5	          0x4889e5	                            mov rbp, rsp	        28	list-objects-filter-options.c	FUNCTION_28
0x40001a8	    0x4881ec900000	                           sub rsp, 0x90	        28	list-objects-filter-options.c	FUNCTION_28
0x40001af	        0x48897d88	             mov qword [rbp - 0x78], rdi	        28	list-objects-filter-options.c	FUNCTION_28
0x40001b3	        0x48897580	             mov qword [rbp - 0x80], rsi	        28	list-objects-filter-options.c	FUNCTION_28
0x40001b7	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	        28	list-objects-filter-options.c	FUNCTION_28
0x40001be	    0x64488b042528	                mov rax, qword fs:[0x28]	        28	list-objects-filter-options.c	FUNCTION_28
0x40001c7	        0x488945f8	                mov qword [rbp - 8], rax	        28	list-objects-filter-options.c	FUNCTION_28
0x40001cb	            0x31c0	                            xor eax, eax	        28	list-objects-filter-options.c	FUNCTION_28
0x40001cd	        0x488b4588	             mov rax, qword [rbp - 0x78]	        31	list-objects-filter-options.c	FUNCTION_28	IF_1
0x40001d1	          0x8b4008	                mov eax, dword [rax + 8]	        31	list-objects-filter-options.c	FUNCTION_28	IF_1
0x40001d4	            0x85c0	                           test eax, eax	        31	list-objects-filter-options.c	FUNCTION_28	IF_1
0x40001d6	            0x7447	                            je 0x400021f	        31	list-objects-filter-options.c	FUNCTION_28	IF_1
0x40001d8	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	        32	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2
0x40001e0	            0x7433	                            je 0x4000215	        32	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2
0x40001e2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        33	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40001e9	      0xbe00000000	                              mov esi, 0	        33	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40001ee	          0x4889c7	                            mov rdi, rax	        33	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40001f1	      0xe800000000	                          call 0x40001f6	        33	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40001f6	      0xbf00000000	                              mov edi, 0	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x40001fb	      0xe8cbfeffff	                               call sym.	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x4000200	          0x4889c2	                            mov rdx, rax	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x4000203	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x400020a	          0x4889d6	                            mov rsi, rdx	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x400020d	          0x4889c7	                            mov rdi, rax	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x4000210	      0xe881feffff	                  call sym.strbuf_addstr	        34	list-objects-filter-options.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x4000215	      0xb801000000	                              mov eax, 1	        38	list-objects-filter-options.c	FUNCTION_28	IF_1
0x400021a	      0xe987010000	                           jmp 0x40003a6	        38	list-objects-filter-options.c	FUNCTION_28	IF_1
0x400021f	        0x488b4580	             mov rax, qword [rbp - 0x80]	        41	list-objects-filter-options.c	FUNCTION_28
0x4000223	          0x4889c7	                            mov rdi, rax	        41	list-objects-filter-options.c	FUNCTION_28
0x4000226	      0xe800000000	                          call 0x400022b	        41	list-objects-filter-options.c	FUNCTION_28
0x400022b	          0x4889c2	                            mov rdx, rax	        41	list-objects-filter-options.c	FUNCTION_28
0x400022e	        0x488b4588	             mov rax, qword [rbp - 0x78]	        41	list-objects-filter-options.c	FUNCTION_28
0x4000232	          0x488910	                    mov qword [rax], rdx	        41	list-objects-filter-options.c	FUNCTION_28
0x4000235	        0x488b4580	             mov rax, qword [rbp - 0x80]	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x4000239	      0xbe00000000	                              mov esi, 0	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x400023e	          0x4889c7	                            mov rdi, rax	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x4000241	      0xe800000000	                          call 0x4000246	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x4000246	            0x85c0	                           test eax, eax	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x4000248	            0x7515	                           jne 0x400025f	        43	list-objects-filter-options.c	FUNCTION_28	IF_3	CALL_4
0x400024a	        0x488b4588	             mov rax, qword [rbp - 0x78]	        44	list-objects-filter-options.c	FUNCTION_28	IF_3
0x400024e	    0xc74008010000	                  mov dword [rax + 8], 1	        44	list-objects-filter-options.c	FUNCTION_28	IF_3
0x4000255	      0xb800000000	                              mov eax, 0	        45	list-objects-filter-options.c	FUNCTION_28	IF_3
0x400025a	      0xe947010000	                           jmp 0x40003a6	        45	list-objects-filter-options.c	FUNCTION_28	IF_3
0x400025f	        0x488d5598	                   lea rdx, [rbp - 0x68]	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x4000263	        0x488b4580	             mov rax, qword [rbp - 0x80]	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x4000267	      0xbe00000000	                              mov esi, 0	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x400026c	          0x4889c7	                            mov rdi, rax	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x400026f	      0xe8ccfdffff	                    call sym.skip_prefix	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x4000274	            0x85c0	                           test eax, eax	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x4000276	            0x7434	                            je 0x40002ac	        47	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x4000278	        0x488b4588	             mov rax, qword [rbp - 0x78]	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x400027c	        0x488d5020	                   lea rdx, [rax + 0x20]	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x4000280	        0x488b4598	             mov rax, qword [rbp - 0x68]	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x4000284	          0x4889d6	                            mov rsi, rdx	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x4000287	          0x4889c7	                            mov rdi, rax	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x400028a	      0xe800000000	                          call 0x400028f	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x400028f	            0x85c0	                           test eax, eax	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x4000291	     0xf84b9000000	                            je 0x4000350	        48	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5	CALL_6
0x4000297	        0x488b4588	             mov rax, qword [rbp - 0x78]	        49	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5
0x400029b	    0xc74008020000	                  mov dword [rax + 8], 2	        49	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5
0x40002a2	      0xb800000000	                              mov eax, 0	        50	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5
0x40002a7	      0xe9fa000000	                           jmp 0x40003a6	        50	list-objects-filter-options.c	FUNCTION_28	ELSE_1	IF_4	IF_5
0x40002ac	        0x488d5598	                   lea rdx, [rbp - 0x68]	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002b0	        0x488b4580	             mov rax, qword [rbp - 0x80]	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002b4	      0xbe00000000	                              mov esi, 0	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002b9	          0x4889c7	                            mov rdi, rax	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002bc	      0xe87ffdffff	                    call sym.skip_prefix	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002c1	            0x85c0	                           test eax, eax	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002c3	            0x7449	                            je 0x400030e	        53	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_7
0x40002c5	        0x488b4598	             mov rax, qword [rbp - 0x68]	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002c9	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002cd	        0x488d55a0	                   lea rdx, [rbp - 0x60]	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002d1	      0xbe20000000	                           mov esi, 0x20	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002d6	          0x4889c7	                            mov rdi, rax	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002d9	      0xe800000000	                          call 0x40002de	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002de	            0x85c0	                           test eax, eax	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002e0	            0x7517	                           jne 0x40002f9	        62	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	IF_7	CALL_8
0x40002e2	        0x488d45a0	                   lea rax, [rbp - 0x60]	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002e6	          0x4889c7	                            mov rdi, rax	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002e9	      0xe85afeffff	                         call sym.oiddup	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002ee	          0x4889c2	                            mov rdx, rax	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002f1	        0x488b4588	             mov rax, qword [rbp - 0x78]	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002f5	        0x48895010	             mov qword [rax + 0x10], rdx	        64	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6	CALL_9
0x40002f9	        0x488b4588	             mov rax, qword [rbp - 0x78]	        65	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6
0x40002fd	    0xc74008030000	                  mov dword [rax + 8], 3	        65	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6
0x4000304	      0xb800000000	                              mov eax, 0	        66	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6
0x4000309	      0xe998000000	                           jmp 0x40003a6	        66	list-objects-filter-options.c	FUNCTION_28	ELSE_2	IF_6
0x400030e	        0x488d5598	                   lea rdx, [rbp - 0x68]	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x4000312	        0x488b4580	             mov rax, qword [rbp - 0x80]	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x4000316	      0xbe00000000	                              mov esi, 0	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x400031b	          0x4889c7	                            mov rdi, rax	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x400031e	      0xe81dfdffff	                    call sym.skip_prefix	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x4000323	            0x85c0	                           test eax, eax	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x4000325	            0x7429	                            je 0x4000350	        68	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8	CALL_10
0x4000327	        0x488b4588	             mov rax, qword [rbp - 0x78]	        69	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x400032b	    0xc74008040000	                  mov dword [rax + 8], 4	        69	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000332	        0x488b4598	             mov rax, qword [rbp - 0x68]	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000336	          0x4889c7	                            mov rdi, rax	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000339	      0xe800000000	                          call 0x400033e	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x400033e	          0x4889c2	                            mov rdx, rax	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000341	        0x488b4588	             mov rax, qword [rbp - 0x78]	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000345	        0x48895018	             mov qword [rax + 0x18], rdx	        70	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000349	      0xb800000000	                              mov eax, 0	        71	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x400034e	            0xeb56	                           jmp 0x40003a6	        71	list-objects-filter-options.c	FUNCTION_28	ELSE_3	IF_8
0x4000350	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	        74	list-objects-filter-options.c	FUNCTION_28	IF_9
0x4000358	            0x7431	                            je 0x400038b	        74	list-objects-filter-options.c	FUNCTION_28	IF_9
0x400035a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        75	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_11
0x4000361	      0xbe00000000	                              mov esi, 0	        75	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_11
0x4000366	          0x4889c7	                            mov rdi, rax	        75	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_11
0x4000369	      0xe800000000	                          call 0x400036e	        75	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_11
0x400036e	        0x488b5580	             mov rdx, qword [rbp - 0x80]	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x4000372	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x4000379	      0xbe00000000	                              mov esi, 0	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x400037e	          0x4889c7	                            mov rdi, rax	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x4000381	      0xb800000000	                              mov eax, 0	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x4000386	      0xe800000000	                          call 0x400038b	        76	list-objects-filter-options.c	FUNCTION_28	IF_9	CALL_12
0x400038b	        0x488b4588	             mov rax, qword [rbp - 0x78]	        78	list-objects-filter-options.c	FUNCTION_28	CALL_13
0x400038f	      0xba28000000	                           mov edx, 0x28	        78	list-objects-filter-options.c	FUNCTION_28	CALL_13
0x4000394	      0xbe00000000	                              mov esi, 0	        78	list-objects-filter-options.c	FUNCTION_28	CALL_13
0x4000399	          0x4889c7	                            mov rdi, rax	        78	list-objects-filter-options.c	FUNCTION_28	CALL_13
0x400039c	      0xe800000000	                          call 0x40003a1	        78	list-objects-filter-options.c	FUNCTION_28	CALL_13
0x40003a1	      0xb801000000	                              mov eax, 1	        79	list-objects-filter-options.c	FUNCTION_28
0x40003a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	        80	list-objects-filter-options.c	FUNCTION_28
0x40003aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        80	list-objects-filter-options.c	FUNCTION_28
0x40003b3	            0x7405	                            je 0x40003ba	        80	list-objects-filter-options.c	FUNCTION_28
0x40003b5	      0xe800000000	                          call 0x40003ba	        80	list-objects-filter-options.c	FUNCTION_28
0x40003ba	              0xc9	                                   leave	        80	list-objects-filter-options.c	FUNCTION_28
0x40003bb	              0xc3	                                     ret	        80	list-objects-filter-options.c	FUNCTION_28
partial_clone_get_default_filter_spec	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1:IF,0	13
0x40005a2	              0x55	                                push rbp	       145	list-objects-filter-options.c	FUNCTION_33
0x40005a3	          0x4889e5	                            mov rbp, rsp	       145	list-objects-filter-options.c	FUNCTION_33
0x40005a6	        0x4883ec10	                           sub rsp, 0x10	       145	list-objects-filter-options.c	FUNCTION_33
0x40005aa	        0x48897df8	                mov qword [rbp - 8], rdi	       145	list-objects-filter-options.c	FUNCTION_33
0x40005ae	    0x488b0d000000	            mov rcx, qword [0x040005b5] 	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005b9	      0xba00000000	                              mov edx, 0	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005be	          0x4889ce	                            mov rsi, rcx	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005c1	          0x4889c7	                            mov rdi, rax	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005c4	      0xe8dbfbffff	call sym.gently_parse_list_objects_filter	       149	list-objects-filter-options.c	FUNCTION_33	CALL_1
0x40005c9	              0x90	                                     nop	       152	list-objects-filter-options.c	FUNCTION_33
0x40005ca	              0xc9	                                   leave	       152	list-objects-filter-options.c	FUNCTION_33
0x40005cb	              0xc3	                                     ret	       152	list-objects-filter-options.c	FUNCTION_33
parse_list_objects_filter	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2:IF,1	31
0x40003bc	              0x55	                                push rbp	        84	list-objects-filter-options.c	FUNCTION_29
0x40003bd	          0x4889e5	                            mov rbp, rsp	        84	list-objects-filter-options.c	FUNCTION_29
0x40003c0	        0x4883ec30	                           sub rsp, 0x30	        84	list-objects-filter-options.c	FUNCTION_29
0x40003c4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        84	list-objects-filter-options.c	FUNCTION_29
0x40003c8	        0x488975d0	             mov qword [rbp - 0x30], rsi	        84	list-objects-filter-options.c	FUNCTION_29
0x40003cc	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	list-objects-filter-options.c	FUNCTION_29
0x40003d5	        0x488945f8	                mov qword [rbp - 8], rax	        84	list-objects-filter-options.c	FUNCTION_29
0x40003d9	            0x31c0	                            xor eax, eax	        84	list-objects-filter-options.c	FUNCTION_29
0x40003db	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        85	list-objects-filter-options.c	FUNCTION_29
0x40003e3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        85	list-objects-filter-options.c	FUNCTION_29
0x40003eb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        85	list-objects-filter-options.c	FUNCTION_29
0x40003f3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x40003f7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x40003fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x40003ff	          0x4889ce	                            mov rsi, rcx	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x4000402	          0x4889c7	                            mov rdi, rax	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x4000405	      0xe89afdffff	call sym.gently_parse_list_objects_filter	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x400040a	            0x85c0	                           test eax, eax	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x400040c	            0x7416	                            je 0x4000424	        86	list-objects-filter-options.c	FUNCTION_29	IF_1	CALL_1
0x400040e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	list-objects-filter-options.c	FUNCTION_29	CALL_2
0x4000412	          0x4889c6	                            mov rsi, rax	        87	list-objects-filter-options.c	FUNCTION_29	CALL_2
0x4000415	      0xbf00000000	                              mov edi, 0	        87	list-objects-filter-options.c	FUNCTION_29	CALL_2
0x400041a	      0xb800000000	                              mov eax, 0	        87	list-objects-filter-options.c	FUNCTION_29	CALL_2
0x400041f	      0xe800000000	                          call 0x4000424	        87	list-objects-filter-options.c	FUNCTION_29	CALL_2
0x4000424	      0xb800000000	                              mov eax, 0	        88	list-objects-filter-options.c	FUNCTION_29
0x4000429	        0x488b4df8	                mov rcx, qword [rbp - 8]	        89	list-objects-filter-options.c	FUNCTION_29
0x400042d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        89	list-objects-filter-options.c	FUNCTION_29
0x4000436	            0x7405	                            je 0x400043d	        89	list-objects-filter-options.c	FUNCTION_29
0x4000438	      0xe800000000	                          call 0x400043d	        89	list-objects-filter-options.c	FUNCTION_29
0x400043d	              0xc9	                                   leave	        89	list-objects-filter-options.c	FUNCTION_29
0x400043e	              0xc3	                                     ret	        89	list-objects-filter-options.c	FUNCTION_29
list_objects_filter_release	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,4:IF,0	24
0x4000493	              0x55	                                push rbp	       106	list-objects-filter-options.c	FUNCTION_31
0x4000494	          0x4889e5	                            mov rbp, rsp	       106	list-objects-filter-options.c	FUNCTION_31
0x4000497	        0x4883ec10	                           sub rsp, 0x10	       106	list-objects-filter-options.c	FUNCTION_31
0x400049b	        0x48897df8	                mov qword [rbp - 8], rdi	       106	list-objects-filter-options.c	FUNCTION_31
0x400049f	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	list-objects-filter-options.c	FUNCTION_31	CALL_1
0x40004a3	          0x488b00	                    mov rax, qword [rax]	       107	list-objects-filter-options.c	FUNCTION_31	CALL_1
0x40004a6	          0x4889c7	                            mov rdi, rax	       107	list-objects-filter-options.c	FUNCTION_31	CALL_1
0x40004a9	      0xe800000000	                          call 0x40004ae	       107	list-objects-filter-options.c	FUNCTION_31	CALL_1
0x40004ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	list-objects-filter-options.c	FUNCTION_31	CALL_2
0x40004b2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       108	list-objects-filter-options.c	FUNCTION_31	CALL_2
0x40004b6	          0x4889c7	                            mov rdi, rax	       108	list-objects-filter-options.c	FUNCTION_31	CALL_2
0x40004b9	      0xe800000000	                          call 0x40004be	       108	list-objects-filter-options.c	FUNCTION_31	CALL_2
0x40004be	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	list-objects-filter-options.c	FUNCTION_31	CALL_3
0x40004c2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       109	list-objects-filter-options.c	FUNCTION_31	CALL_3
0x40004c6	          0x4889c7	                            mov rdi, rax	       109	list-objects-filter-options.c	FUNCTION_31	CALL_3
0x40004c9	      0xe800000000	                          call 0x40004ce	       109	list-objects-filter-options.c	FUNCTION_31	CALL_3
0x40004ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	list-objects-filter-options.c	FUNCTION_31	CALL_4
0x40004d2	      0xba28000000	                           mov edx, 0x28	       110	list-objects-filter-options.c	FUNCTION_31	CALL_4
0x40004d7	      0xbe00000000	                              mov esi, 0	       110	list-objects-filter-options.c	FUNCTION_31	CALL_4
0x40004dc	          0x4889c7	                            mov rdi, rax	       110	list-objects-filter-options.c	FUNCTION_31	CALL_4
0x40004df	      0xe800000000	                          call 0x40004e4	       110	list-objects-filter-options.c	FUNCTION_31	CALL_4
0x40004e4	              0x90	                                     nop	       111	list-objects-filter-options.c	FUNCTION_31
0x40004e5	              0xc9	                                   leave	       111	list-objects-filter-options.c	FUNCTION_31
0x40004e6	              0xc3	                                     ret	       111	list-objects-filter-options.c	FUNCTION_31
partial_clone_register	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,8:IF,1	47
0x40004e7	              0x55	                                push rbp	       116	list-objects-filter-options.c	FUNCTION_32
0x40004e8	          0x4889e5	                            mov rbp, rsp	       116	list-objects-filter-options.c	FUNCTION_32
0x40004eb	        0x4883ec10	                           sub rsp, 0x10	       116	list-objects-filter-options.c	FUNCTION_32
0x40004ef	        0x48897df8	                mov qword [rbp - 8], rdi	       116	list-objects-filter-options.c	FUNCTION_32
0x40004f3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       116	list-objects-filter-options.c	FUNCTION_32
0x40004f7	    0x488b05000000	            mov rax, qword [0x040004fe] 	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x40004fe	          0x4885c0	                           test rax, rax	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x4000501	            0x743f	                            je 0x4000542	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x4000503	    0x488b05000000	            mov rax, qword [0x0400050a] 	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x400050a	           0xfb600	                   movzx eax, byte [rax]	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x400050d	            0x84c0	                             test al, al	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x400050f	            0x7431	                            je 0x4000542	       123	list-objects-filter-options.c	FUNCTION_32	IF_1
0x4000511	    0x488b15000000	            mov rdx, qword [0x04000518] 	       125	list-objects-filter-options.c	FUNCTION_32	IF_1	CALL_1
0x4000518	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	list-objects-filter-options.c	FUNCTION_32	IF_1	CALL_1
0x400051c	          0x4889d6	                            mov rsi, rdx	       125	list-objects-filter-options.c	FUNCTION_32	IF_1	CALL_1
0x400051f	          0x4889c7	                            mov rdi, rax	       125	list-objects-filter-options.c	FUNCTION_32	IF_1	CALL_1
0x4000522	      0xe800000000	                          call 0x4000527	       125	list-objects-filter-options.c	FUNCTION_32	IF_1	CALL_1
0x4000527	            0x85c0	                           test eax, eax	       124	list-objects-filter-options.c	FUNCTION_32	IF_1
0x4000529	            0x7417	                            je 0x4000542	       124	list-objects-filter-options.c	FUNCTION_32	IF_1
0x400052b	      0xbf00000000	                              mov edi, 0	       126	list-objects-filter-options.c	FUNCTION_32	CALL_3
0x4000530	      0xe896fbffff	                               call sym.	       126	list-objects-filter-options.c	FUNCTION_32	CALL_3
0x4000535	          0x4889c7	                            mov rdi, rax	       126	list-objects-filter-options.c	FUNCTION_32	CALL_3
0x4000538	      0xb800000000	                              mov eax, 0	       126	list-objects-filter-options.c	FUNCTION_32	CALL_3
0x400053d	      0xe800000000	                          call 0x4000542	       126	list-objects-filter-options.c	FUNCTION_32	CALL_3
0x4000542	      0xbe00000000	                              mov esi, 0	       128	list-objects-filter-options.c	FUNCTION_32	CALL_4
0x4000547	      0xbf00000000	                              mov edi, 0	       128	list-objects-filter-options.c	FUNCTION_32	CALL_4
0x400054c	      0xe800000000	                          call 0x4000551	       128	list-objects-filter-options.c	FUNCTION_32	CALL_4
0x4000551	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	list-objects-filter-options.c	FUNCTION_32	CALL_5
0x4000555	          0x4889c6	                            mov rsi, rax	       129	list-objects-filter-options.c	FUNCTION_32	CALL_5
0x4000558	      0xbf00000000	                              mov edi, 0	       129	list-objects-filter-options.c	FUNCTION_32	CALL_5
0x400055d	      0xe800000000	                          call 0x4000562	       129	list-objects-filter-options.c	FUNCTION_32	CALL_5
0x4000562	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	list-objects-filter-options.c	FUNCTION_32	CALL_6
0x4000566	          0x4889c7	                            mov rdi, rax	       131	list-objects-filter-options.c	FUNCTION_32	CALL_6
0x4000569	      0xe800000000	                          call 0x400056e	       131	list-objects-filter-options.c	FUNCTION_32	CALL_6
0x400056e	    0x488905000000	            mov qword [0x04000575], rax 	       131	list-objects-filter-options.c	FUNCTION_32	CALL_6
0x4000575	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       138	list-objects-filter-options.c	FUNCTION_32	CALL_7
0x4000579	          0x488b00	                    mov rax, qword [rax]	       138	list-objects-filter-options.c	FUNCTION_32	CALL_7
0x400057c	          0x4889c7	                            mov rdi, rax	       138	list-objects-filter-options.c	FUNCTION_32	CALL_7
0x400057f	      0xe800000000	                          call 0x4000584	       138	list-objects-filter-options.c	FUNCTION_32	CALL_7
0x4000584	    0x488905000000	            mov qword [0x0400058b], rax 	       137	list-objects-filter-options.c	FUNCTION_32
0x400058b	    0x488b05000000	            mov rax, qword [0x04000592] 	       139	list-objects-filter-options.c	FUNCTION_32	CALL_8
0x4000592	          0x4889c6	                            mov rsi, rax	       139	list-objects-filter-options.c	FUNCTION_32	CALL_8
0x4000595	      0xbf00000000	                              mov edi, 0	       139	list-objects-filter-options.c	FUNCTION_32	CALL_8
0x400059a	      0xe800000000	                          call 0x400059f	       139	list-objects-filter-options.c	FUNCTION_32	CALL_8
0x400059f	              0x90	                                     nop	       141	list-objects-filter-options.c	FUNCTION_32
0x40005a0	              0xc9	                                   leave	       141	list-objects-filter-options.c	FUNCTION_32
0x40005a1	              0xc3	                                     ret	       141	list-objects-filter-options.c	FUNCTION_32
hashcpy	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1:IF,0	14
0x40000f7	              0x55	                                push rbp	       994	cache.h	FUNCTION_45
0x40000f8	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_45
0x40000fb	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_45
0x40000ff	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_45
0x4000103	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_45
0x4000107	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_45	CALL_1
0x400010b	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_45	CALL_1
0x400010f	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_45	CALL_1
0x4000114	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_45	CALL_1
0x4000117	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_45	CALL_1
0x400011a	      0xe800000000	                          call 0x400011f	       995	cache.h	FUNCTION_45	CALL_1
0x400011f	              0x90	                                     nop	       996	cache.h	FUNCTION_45
0x4000120	              0xc9	                                   leave	       996	cache.h	FUNCTION_45
0x4000121	              0xc3	                                     ret	       996	cache.h	FUNCTION_45
list_objects_filter_set_no_filter	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1:IF,0	14
0x400017b	              0x55	                                push rbp	        68	list-objects-filter-options.h	FUNCTION_61
0x400017c	          0x4889e5	                            mov rbp, rsp	        68	list-objects-filter-options.h	FUNCTION_61
0x400017f	        0x4883ec10	                           sub rsp, 0x10	        68	list-objects-filter-options.h	FUNCTION_61
0x4000183	        0x48897df8	                mov qword [rbp - 8], rdi	        68	list-objects-filter-options.h	FUNCTION_61
0x4000187	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	list-objects-filter-options.h	FUNCTION_61	CALL_1
0x400018b	          0x4889c7	                            mov rdi, rax	        69	list-objects-filter-options.h	FUNCTION_61	CALL_1
0x400018e	      0xe800000000	                          call 0x4000193	        69	list-objects-filter-options.h	FUNCTION_61	CALL_1
0x4000193	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	list-objects-filter-options.h	FUNCTION_61
0x4000197	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        70	list-objects-filter-options.h	FUNCTION_61
0x400019b	          0x83ca01	                               or edx, 1	        70	list-objects-filter-options.h	FUNCTION_61
0x400019e	          0x88500c	                mov byte [rax + 0xc], dl	        70	list-objects-filter-options.h	FUNCTION_61
0x40001a1	              0x90	                                     nop	        71	list-objects-filter-options.h	FUNCTION_61
0x40001a2	              0xc9	                                   leave	        71	list-objects-filter-options.h	FUNCTION_61
0x40001a3	              0xc3	                                     ret	        71	list-objects-filter-options.h	FUNCTION_61
strbuf_addstr	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2:IF,0	17
0x4000096	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_66
0x4000097	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_66
0x400009a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_66
0x400009e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_66
0x40000a2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_66
0x40000a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000aa	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000ad	      0xe800000000	                          call 0x40000b2	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000b2	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000b5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000bd	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000c0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000c3	      0xe800000000	                          call 0x40000c8	       279	strbuf.h	FUNCTION_66	CALL_2
0x40000c8	              0x90	                                     nop	       280	strbuf.h	FUNCTION_66
0x40000c9	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_66
0x40000ca	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_66
_	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,0:IF,1	15
0x40000cb	              0x55	                                push rbp	        51	gettext.h	FUNCTION_75
0x40000cc	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_75
0x40000cf	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_75
0x40000d3	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_75
0x40000d7	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_75	IF_1
0x40000db	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_75	IF_1
0x40000de	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_75	IF_1
0x40000e0	            0x7507	                           jne 0x40000e9	        52	gettext.h	FUNCTION_75	IF_1
0x40000e2	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_75	IF_1
0x40000e7	            0xeb0c	                           jmp 0x40000f5	        53	gettext.h	FUNCTION_75	IF_1
0x40000e9	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_75
0x40000ed	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_75
0x40000f0	      0xe800000000	                          call 0x40000f5	        54	gettext.h	FUNCTION_75
0x40000f5	              0xc9	                                   leave	        55	gettext.h	FUNCTION_75
0x40000f6	              0xc3	                                     ret	        55	gettext.h	FUNCTION_75
oiddup	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,2:IF,0	15
0x4000148	              0x55	                                push rbp	      1004	cache.h	FUNCTION_47
0x4000149	          0x4889e5	                            mov rbp, rsp	      1004	cache.h	FUNCTION_47
0x400014c	        0x4883ec20	                           sub rsp, 0x20	      1004	cache.h	FUNCTION_47
0x4000150	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1004	cache.h	FUNCTION_47
0x4000154	      0xbf14000000	                           mov edi, 0x14	      1005	cache.h	FUNCTION_47	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	      1005	cache.h	FUNCTION_47	CALL_1
0x400015e	        0x488945f8	                mov qword [rbp - 8], rax	      1005	cache.h	FUNCTION_47	CALL_1
0x4000162	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1006	cache.h	FUNCTION_47	CALL_2
0x4000166	        0x488b45f8	                mov rax, qword [rbp - 8]	      1006	cache.h	FUNCTION_47	CALL_2
0x400016a	          0x4889d6	                            mov rsi, rdx	      1006	cache.h	FUNCTION_47	CALL_2
0x400016d	          0x4889c7	                            mov rdi, rax	      1006	cache.h	FUNCTION_47	CALL_2
0x4000170	      0xe8adffffff	                         call sym.oidcpy	      1006	cache.h	FUNCTION_47	CALL_2
0x4000175	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	cache.h	FUNCTION_47
0x4000179	              0xc9	                                   leave	      1008	cache.h	FUNCTION_47
0x400017a	              0xc3	                                     ret	      1008	cache.h	FUNCTION_47
oidcpy	FOR,0:DO,0:functions,0:ELSE,0:WHILE,0:SWITCH,0:CALL,1:IF,0	13
0x4000122	              0x55	                                push rbp	       999	cache.h	FUNCTION_46
0x4000123	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_46
0x4000126	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_46
0x400012a	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_46
0x400012e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_46
0x4000132	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_46	CALL_1
0x4000136	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_46	CALL_1
0x400013a	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_46	CALL_1
0x400013d	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_46	CALL_1
0x4000140	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_46	CALL_1
0x4000145	              0x90	                                     nop	      1001	cache.h	FUNCTION_46
0x4000146	              0xc9	                                   leave	      1001	cache.h	FUNCTION_46
0x4000147	              0xc3	                                     ret	      1001	cache.h	FUNCTION_46
