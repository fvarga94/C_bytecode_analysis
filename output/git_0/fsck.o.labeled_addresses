parse_loose_object	FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,3:WHILE,0:ELSE,0	51
0x4001300	              0x55	                                push rbp	       512	fsck.c	FUNCTION_23
0x4001301	          0x4889e5	                            mov rbp, rsp	       512	fsck.c	FUNCTION_23
0x4001304	        0x4883ec40	                           sub rsp, 0x40	       512	fsck.c	FUNCTION_23
0x4001308	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       512	fsck.c	FUNCTION_23
0x400130c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       512	fsck.c	FUNCTION_23
0x4001310	    0x64488b042528	                mov rax, qword fs:[0x28]	       512	fsck.c	FUNCTION_23
0x4001319	        0x488945f8	                mov qword [rbp - 8], rax	       512	fsck.c	FUNCTION_23
0x400131d	            0x31c0	                            xor eax, eax	       512	fsck.c	FUNCTION_23
0x400131f	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001323	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001327	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x400132b	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x400132f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001333	          0x4989f8	                             mov r8, rdi	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001336	          0x4889c7	                            mov rdi, rax	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001339	      0xe800000000	                          call 0x400133e	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x400133e	            0x85c0	                           test eax, eax	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001340	            0x7907	                           jns 0x4001349	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x4001342	      0xb800000000	                              mov eax, 0	       520	fsck.c	FUNCTION_23	IF_1
0x4001347	            0xeb59	                           jmp 0x40013a2	       520	fsck.c	FUNCTION_23	IF_1
0x4001349	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       522	fsck.c	FUNCTION_23	IF_2
0x400134d	          0x4885c0	                           test rax, rax	       522	fsck.c	FUNCTION_23	IF_2
0x4001350	            0x7517	                           jne 0x4001369	       522	fsck.c	FUNCTION_23	IF_2
0x4001352	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       522	fsck.c	FUNCTION_23	IF_2
0x4001355	          0x83f803	                              cmp eax, 3	       522	fsck.c	FUNCTION_23	IF_2
0x4001358	            0x740f	                            je 0x4001369	       522	fsck.c	FUNCTION_23	IF_2
0x400135a	      0xbf00000000	                              mov edi, 0	       523	fsck.c	FUNCTION_23	CALL_2
0x400135f	      0xb800000000	                              mov eax, 0	       523	fsck.c	FUNCTION_23	CALL_2
0x4001364	      0xe800000000	                          call 0x4001369	       523	fsck.c	FUNCTION_23	CALL_2
0x4001369	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       525	fsck.c	FUNCTION_23	CALL_3
0x400136d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       525	fsck.c	FUNCTION_23	CALL_3
0x4001371	          0x8b75d8	             mov esi, dword [rbp - 0x28]	       525	fsck.c	FUNCTION_23	CALL_3
0x4001374	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	       525	fsck.c	FUNCTION_23	CALL_3
0x4001378	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       525	fsck.c	FUNCTION_23	CALL_3
0x400137c	          0x4989f8	                             mov r8, rdi	       525	fsck.c	FUNCTION_23	CALL_3
0x400137f	          0x4889c7	                            mov rdi, rax	       525	fsck.c	FUNCTION_23	CALL_3
0x4001382	      0xe800000000	                          call 0x4001387	       525	fsck.c	FUNCTION_23	CALL_3
0x4001387	        0x488945f0	             mov qword [rbp - 0x10], rax	       525	fsck.c	FUNCTION_23	CALL_3
0x400138b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       527	fsck.c	FUNCTION_23	IF_3
0x400138e	            0x85c0	                           test eax, eax	       527	fsck.c	FUNCTION_23	IF_3
0x4001390	            0x750c	                           jne 0x400139e	       527	fsck.c	FUNCTION_23	IF_3
0x4001392	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       528	fsck.c	FUNCTION_23	CALL_4
0x4001396	          0x4889c7	                            mov rdi, rax	       528	fsck.c	FUNCTION_23	CALL_4
0x4001399	      0xe800000000	                          call 0x400139e	       528	fsck.c	FUNCTION_23	CALL_4
0x400139e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	fsck.c	FUNCTION_23
0x40013a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       530	fsck.c	FUNCTION_23
0x40013a6	    0x644833142528	                xor rdx, qword fs:[0x28]	       530	fsck.c	FUNCTION_23
0x40013af	            0x7405	                            je 0x40013b6	       530	fsck.c	FUNCTION_23
0x40013b1	      0xe800000000	                          call 0x40013b6	       530	fsck.c	FUNCTION_23
0x40013b6	              0xc9	                                   leave	       530	fsck.c	FUNCTION_23
0x40013b7	              0xc3	                                     ret	       530	fsck.c	FUNCTION_23
objerror	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	16
0x400048c	              0x55	                                push rbp	       114	fsck.c	FUNCTION_5
0x400048d	          0x4889e5	                            mov rbp, rsp	       114	fsck.c	FUNCTION_5
0x4000490	        0x4883ec10	                           sub rsp, 0x10	       114	fsck.c	FUNCTION_5
0x4000494	        0x48897df8	                mov qword [rbp - 8], rdi	       114	fsck.c	FUNCTION_5
0x4000498	        0x488975f0	             mov qword [rbp - 0x10], rsi	       114	fsck.c	FUNCTION_5
0x400049c	    0x8b0500000000	            mov eax, dword [0x040004a2] 	       115	fsck.c	FUNCTION_5
0x40004a2	          0x83c801	                               or eax, 1	       115	fsck.c	FUNCTION_5
0x40004a5	    0x890500000000	            mov dword [0x040004ab], eax 	       115	fsck.c	FUNCTION_5
0x40004ab	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       116	fsck.c	FUNCTION_5	CALL_1
0x40004af	        0x488b45f8	                mov rax, qword [rbp - 8]	       116	fsck.c	FUNCTION_5	CALL_1
0x40004b3	      0xbe00000000	                              mov esi, 0	       116	fsck.c	FUNCTION_5	CALL_1
0x40004b8	          0x4889c7	                            mov rdi, rax	       116	fsck.c	FUNCTION_5	CALL_1
0x40004bb	      0xe867ffffff	                      call sym.objreport	       116	fsck.c	FUNCTION_5	CALL_1
0x40004c0	      0xb8ffffffff	                     mov eax, 0xffffffff	       117	fsck.c	FUNCTION_5
0x40004c5	              0xc9	                                   leave	       118	fsck.c	FUNCTION_5
0x40004c6	              0xc3	                                     ret	       118	fsck.c	FUNCTION_5
mark_object_reachable	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	13
0x4000713	              0x55	                                push rbp	       180	fsck.c	FUNCTION_8
0x4000714	          0x4889e5	                            mov rbp, rsp	       180	fsck.c	FUNCTION_8
0x4000717	        0x4883ec10	                           sub rsp, 0x10	       180	fsck.c	FUNCTION_8
0x400071b	        0x48897df8	                mov qword [rbp - 8], rdi	       180	fsck.c	FUNCTION_8
0x400071f	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	fsck.c	FUNCTION_8	CALL_1
0x4000723	      0xb900000000	                              mov ecx, 0	       181	fsck.c	FUNCTION_8	CALL_1
0x4000728	      0xba00000000	                              mov edx, 0	       181	fsck.c	FUNCTION_8	CALL_1
0x400072d	      0xbe08000000	                              mov esi, 8	       181	fsck.c	FUNCTION_8	CALL_1
0x4000732	          0x4889c7	                            mov rdi, rax	       181	fsck.c	FUNCTION_8	CALL_1
0x4000735	      0xe8d5fdffff	                    call sym.mark_object	       181	fsck.c	FUNCTION_8	CALL_1
0x400073a	              0x90	                                     nop	       182	fsck.c	FUNCTION_8
0x400073b	              0xc9	                                   leave	       182	fsck.c	FUNCTION_8
0x400073c	              0xc3	                                     ret	       182	fsck.c	FUNCTION_8
_	FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	15
0x4000170	              0x55	                                push rbp	        51	gettext.h	FUNCTION_36
0x4000171	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_36
0x4000174	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_36
0x4000178	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_36
0x400017c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_36	IF_1
0x4000180	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_36	IF_1
0x4000183	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_36	IF_1
0x4000185	            0x7507	                           jne 0x400018e	        52	gettext.h	FUNCTION_36	IF_1
0x4000187	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_36	IF_1
0x400018c	            0xeb0c	                           jmp 0x400019a	        53	gettext.h	FUNCTION_36	IF_1
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_36
0x4000192	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_36
0x4000195	      0xe800000000	                          call 0x400019a	        54	gettext.h	FUNCTION_36
0x400019a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_36
0x400019b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_36
fsck_error_func	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	22
0x40004c7	              0x55	                                push rbp	       122	fsck.c	FUNCTION_6
0x40004c8	          0x4889e5	                            mov rbp, rsp	       122	fsck.c	FUNCTION_6
0x40004cb	        0x4883ec20	                           sub rsp, 0x20	       122	fsck.c	FUNCTION_6
0x40004cf	        0x48897df8	                mov qword [rbp - 8], rdi	       122	fsck.c	FUNCTION_6
0x40004d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       122	fsck.c	FUNCTION_6
0x40004d7	          0x8955ec	             mov dword [rbp - 0x14], edx	       122	fsck.c	FUNCTION_6
0x40004da	        0x48894de0	             mov qword [rbp - 0x20], rcx	       122	fsck.c	FUNCTION_6
0x40004de	        0x837dec02	               cmp dword [rbp - 0x14], 2	       123	fsck.c	FUNCTION_6	CALL_1
0x40004e2	            0x7507	                           jne 0x40004eb	       123	fsck.c	FUNCTION_6	CALL_1
0x40004e4	      0xb900000000	                              mov ecx, 0	       123	fsck.c	FUNCTION_6	CALL_1
0x40004e9	            0xeb05	                           jmp 0x40004f0	       123	fsck.c	FUNCTION_6	CALL_1
0x40004eb	      0xb900000000	                              mov ecx, 0	       123	fsck.c	FUNCTION_6	CALL_1
0x40004f0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       123	fsck.c	FUNCTION_6	CALL_1
0x40004f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	fsck.c	FUNCTION_6	CALL_1
0x40004f8	          0x4889ce	                            mov rsi, rcx	       123	fsck.c	FUNCTION_6	CALL_1
0x40004fb	          0x4889c7	                            mov rdi, rax	       123	fsck.c	FUNCTION_6	CALL_1
0x40004fe	      0xe824ffffff	                      call sym.objreport	       123	fsck.c	FUNCTION_6	CALL_1
0x4000503	        0x837dec02	               cmp dword [rbp - 0x14], 2	       124	fsck.c	FUNCTION_6
0x4000507	           0xf95c0	                                setne al	       124	fsck.c	FUNCTION_6
0x400050a	           0xfb6c0	                           movzx eax, al	       124	fsck.c	FUNCTION_6
0x400050d	              0xc9	                                   leave	       125	fsck.c	FUNCTION_6
0x400050e	              0xc3	                                     ret	       125	fsck.c	FUNCTION_6
printable_type	FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,3:WHILE,0:ELSE,0	39
0x400027b	              0x55	                                push rbp	        66	fsck.c	FUNCTION_2
0x400027c	          0x4889e5	                            mov rbp, rsp	        66	fsck.c	FUNCTION_2
0x400027f	        0x4883ec20	                           sub rsp, 0x20	        66	fsck.c	FUNCTION_2
0x4000283	        0x48897de8	             mov qword [rbp - 0x18], rdi	        66	fsck.c	FUNCTION_2
0x4000287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	fsck.c	FUNCTION_2	IF_1
0x400028b	           0xfb600	                   movzx eax, byte [rax]	        69	fsck.c	FUNCTION_2	IF_1
0x400028e	          0x83e00e	                            and eax, 0xe	        69	fsck.c	FUNCTION_2	IF_1
0x4000291	            0x84c0	                             test al, al	        69	fsck.c	FUNCTION_2	IF_1
0x4000293	            0x753e	                           jne 0x40002d3	        69	fsck.c	FUNCTION_2	IF_1
0x4000295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	fsck.c	FUNCTION_2	IF_1
0x4000299	        0x488d4804	                      lea rcx, [rax + 4]	        71	fsck.c	FUNCTION_2	IF_1
0x400029d	    0x488b05000000	            mov rax, qword [0x040002a4] 	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002a4	      0xba00000000	                              mov edx, 0	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002a9	          0x4889ce	                            mov rsi, rcx	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002ac	          0x4889c7	                            mov rdi, rax	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002af	      0xe800000000	                          call 0x40002b4	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002b4	          0x8945f4	              mov dword [rbp - 0xc], eax	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x40002b7	        0x837df400	                cmp dword [rbp - 0xc], 0	        72	fsck.c	FUNCTION_2	IF_1	IF_2
0x40002bb	            0x7e16	                           jle 0x40002d3	        72	fsck.c	FUNCTION_2	IF_1	IF_2
0x40002bd	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002c4	      0xba00000000	                              mov edx, 0	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002c9	            0x89ce	                            mov esi, ecx	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002cb	          0x4889c7	                            mov rdi, rax	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002ce	      0xe800000000	                          call 0x40002d3	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x40002d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	fsck.c	FUNCTION_2	CALL_3
0x40002d7	           0xfb600	                   movzx eax, byte [rax]	        76	fsck.c	FUNCTION_2	CALL_3
0x40002da	            0xd0e8	                               shr al, 1	        76	fsck.c	FUNCTION_2	CALL_3
0x40002dc	          0x83e007	                              and eax, 7	        76	fsck.c	FUNCTION_2	CALL_3
0x40002df	           0xfb6c0	                           movzx eax, al	        76	fsck.c	FUNCTION_2	CALL_3
0x40002e2	            0x89c7	                            mov edi, eax	        76	fsck.c	FUNCTION_2	CALL_3
0x40002e4	      0xe800000000	                          call 0x40002e9	        76	fsck.c	FUNCTION_2	CALL_3
0x40002e9	        0x488945f8	                mov qword [rbp - 8], rax	        76	fsck.c	FUNCTION_2	CALL_3
0x40002ed	      0x48837df800	                  cmp qword [rbp - 8], 0	        77	fsck.c	FUNCTION_2	IF_3
0x40002f2	            0x7508	                           jne 0x40002fc	        77	fsck.c	FUNCTION_2	IF_3
0x40002f4	    0x48c745f80000	                  mov qword [rbp - 8], 0	        78	fsck.c	FUNCTION_2	IF_3
0x40002fc	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	fsck.c	FUNCTION_2
0x4000300	              0xc9	                                   leave	        81	fsck.c	FUNCTION_2
0x4000301	              0xc3	                                     ret	        81	fsck.c	FUNCTION_2
mark_object_for_connectivity	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	25
0x40018c0	              0x55	                                push rbp	       640	fsck.c	FUNCTION_30
0x40018c1	          0x4889e5	                            mov rbp, rsp	       640	fsck.c	FUNCTION_30
0x40018c4	        0x4883ec20	                           sub rsp, 0x20	       640	fsck.c	FUNCTION_30
0x40018c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       640	fsck.c	FUNCTION_30
0x40018cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       641	fsck.c	FUNCTION_30	CALL_1
0x40018d0	          0x4889c7	                            mov rdi, rax	       641	fsck.c	FUNCTION_30	CALL_1
0x40018d3	      0xe800000000	                          call 0x40018d8	       641	fsck.c	FUNCTION_30	CALL_1
0x40018d8	        0x488945f8	                mov qword [rbp - 8], rax	       641	fsck.c	FUNCTION_30	CALL_1
0x40018dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	fsck.c	FUNCTION_30
0x40018e0	            0x8b00	                    mov eax, dword [rax]	       642	fsck.c	FUNCTION_30
0x40018e2	          0xc1e804	                              shr eax, 4	       642	fsck.c	FUNCTION_30
0x40018e5	      0x25ffffff07	                      and eax, 0x7ffffff	       642	fsck.c	FUNCTION_30
0x40018ea	          0x83c804	                               or eax, 4	       642	fsck.c	FUNCTION_30
0x40018ed	            0x89c2	                            mov edx, eax	       642	fsck.c	FUNCTION_30
0x40018ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	fsck.c	FUNCTION_30
0x40018f3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       642	fsck.c	FUNCTION_30
0x40018f9	            0x89d1	                            mov ecx, edx	       642	fsck.c	FUNCTION_30
0x40018fb	          0xc1e104	                              shl ecx, 4	       642	fsck.c	FUNCTION_30
0x40018fe	            0x8b10	                    mov edx, dword [rax]	       642	fsck.c	FUNCTION_30
0x4001900	    0x81e20f000080	                     and edx, 0x8000000f	       642	fsck.c	FUNCTION_30
0x4001906	             0x9ca	                             or edx, ecx	       642	fsck.c	FUNCTION_30
0x4001908	            0x8910	                    mov dword [rax], edx	       642	fsck.c	FUNCTION_30
0x400190a	              0x90	                                     nop	       643	fsck.c	FUNCTION_30
0x400190b	              0xc9	                                   leave	       643	fsck.c	FUNCTION_30
0x400190c	              0xc3	                                     ret	       643	fsck.c	FUNCTION_30
objreport	FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	30
0x4000427	              0x55	                                push rbp	       108	fsck.c	FUNCTION_4
0x4000428	          0x4889e5	                            mov rbp, rsp	       108	fsck.c	FUNCTION_4
0x400042b	              0x53	                                push rbx	       108	fsck.c	FUNCTION_4
0x400042c	        0x4883ec28	                           sub rsp, 0x28	       108	fsck.c	FUNCTION_4
0x4000430	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	fsck.c	FUNCTION_4
0x4000434	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	fsck.c	FUNCTION_4
0x4000438	        0x488955d8	             mov qword [rbp - 0x28], rdx	       108	fsck.c	FUNCTION_4
0x400043c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	fsck.c	FUNCTION_4	CALL_1
0x4000440	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x4000443	      0xe8a5fdffff	                call sym.describe_object	       109	fsck.c	FUNCTION_4	CALL_1
0x4000448	          0x4889c3	                            mov rbx, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x400044b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	fsck.c	FUNCTION_4	CALL_1
0x400044f	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x4000452	      0xe824feffff	                 call sym.printable_type	       109	fsck.c	FUNCTION_4	CALL_1
0x4000457	          0x4889c6	                            mov rsi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x400045a	    0x488b05000000	            mov rax, qword [0x04000461] 	       109	fsck.c	FUNCTION_4	CALL_1
0x4000461	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       109	fsck.c	FUNCTION_4	CALL_1
0x4000465	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       109	fsck.c	FUNCTION_4	CALL_1
0x4000469	          0x4989c9	                             mov r9, rcx	       109	fsck.c	FUNCTION_4	CALL_1
0x400046c	          0x4989d8	                             mov r8, rbx	       109	fsck.c	FUNCTION_4	CALL_1
0x400046f	          0x4889f1	                            mov rcx, rsi	       109	fsck.c	FUNCTION_4	CALL_1
0x4000472	      0xbe00000000	                              mov esi, 0	       109	fsck.c	FUNCTION_4	CALL_1
0x4000477	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x400047a	      0xb800000000	                              mov eax, 0	       109	fsck.c	FUNCTION_4	CALL_1
0x400047f	      0xe800000000	                          call 0x4000484	       109	fsck.c	FUNCTION_4	CALL_1
0x4000484	              0x90	                                     nop	       111	fsck.c	FUNCTION_4
0x4000485	        0x4883c428	                           add rsp, 0x28	       111	fsck.c	FUNCTION_4
0x4000489	              0x5b	                                 pop rbx	       111	fsck.c	FUNCTION_4
0x400048a	              0x5d	                                 pop rbp	       111	fsck.c	FUNCTION_4
0x400048b	              0xc3	                                     ret	       111	fsck.c	FUNCTION_4
fsck_head_link	FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,6:WHILE,0:ELSE,1	78
0x40015f8	              0x55	                                push rbp	       580	fsck.c	FUNCTION_28
0x40015f9	          0x4889e5	                            mov rbp, rsp	       580	fsck.c	FUNCTION_28
0x40015fc	        0x4883ec10	                           sub rsp, 0x10	       580	fsck.c	FUNCTION_28
0x4001600	    0xc745fc000000	                  mov dword [rbp - 4], 0	       581	fsck.c	FUNCTION_28
0x4001607	    0x8b0500000000	            mov eax, dword [0x0400160d] 	       583	fsck.c	FUNCTION_28	IF_1
0x400160d	            0x85c0	                           test eax, eax	       583	fsck.c	FUNCTION_28	IF_1
0x400160f	            0x741e	                            je 0x400162f	       583	fsck.c	FUNCTION_28	IF_1
0x4001611	    0x488b05000000	            mov rax, qword [0x04001618] 	       584	fsck.c	FUNCTION_28	CALL_1
0x4001618	          0x4889c1	                            mov rcx, rax	       584	fsck.c	FUNCTION_28	CALL_1
0x400161b	      0xba13000000	                           mov edx, 0x13	       584	fsck.c	FUNCTION_28	CALL_1
0x4001620	      0xbe01000000	                              mov esi, 1	       584	fsck.c	FUNCTION_28	CALL_1
0x4001625	      0xbf00000000	                              mov edi, 0	       584	fsck.c	FUNCTION_28	CALL_1
0x400162a	      0xe800000000	                          call 0x400162f	       584	fsck.c	FUNCTION_28	CALL_1
0x400162f	      0xb900000000	                              mov ecx, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x4001634	      0xba00000000	                              mov edx, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x4001639	      0xbe00000000	                              mov esi, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x400163e	      0xbf00000000	                              mov edi, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x4001643	      0xe800000000	                          call 0x4001648	       586	fsck.c	FUNCTION_28	CALL_2
0x4001648	    0x488905000000	            mov qword [0x0400164f], rax 	       586	fsck.c	FUNCTION_28	CALL_2
0x400164f	    0x488b05000000	            mov rax, qword [0x04001656] 	       587	fsck.c	FUNCTION_28	IF_2
0x4001656	          0x4885c0	                           test rax, rax	       587	fsck.c	FUNCTION_28	IF_2
0x4001659	            0x7528	                           jne 0x4001683	       587	fsck.c	FUNCTION_28	IF_2
0x400165b	    0x8b0500000000	            mov eax, dword [0x04001661] 	       588	fsck.c	FUNCTION_28	IF_2
0x4001661	          0x83c808	                               or eax, 8	       588	fsck.c	FUNCTION_28	IF_2
0x4001664	    0x890500000000	            mov dword [0x0400166a], eax 	       588	fsck.c	FUNCTION_28	IF_2
0x400166a	      0xbf00000000	                              mov edi, 0	       589	fsck.c	FUNCTION_28	IF_2
0x400166f	      0xb800000000	                              mov eax, 0	       589	fsck.c	FUNCTION_28	IF_2
0x4001674	      0xe800000000	                          call 0x4001679	       589	fsck.c	FUNCTION_28	IF_2
0x4001679	      0xe8c2e9ffff	                    call sym.const_error	       589	fsck.c	FUNCTION_28	IF_2
0x400167e	      0xe9ca000000	                           jmp 0x400174d	       589	fsck.c	FUNCTION_28	IF_2
0x4001683	    0x488b05000000	            mov rax, qword [0x0400168a] 	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x400168a	      0xbe00000000	                              mov esi, 0	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x400168f	          0x4889c7	                            mov rdi, rax	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x4001692	      0xe800000000	                          call 0x4001697	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x4001697	            0x85c0	                           test eax, eax	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x4001699	            0x7509	                           jne 0x40016a4	       591	fsck.c	FUNCTION_28	IF_3	CALL_3
0x400169b	    0xc745fc010000	                  mov dword [rbp - 4], 1	       593	fsck.c	FUNCTION_28	IF_3
0x40016a2	            0xeb47	                           jmp 0x40016eb	       593	fsck.c	FUNCTION_28	IF_3
0x40016a4	    0x488b05000000	            mov rax, qword [0x040016ab] 	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016ab	      0xbe00000000	                              mov esi, 0	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016b0	          0x4889c7	                            mov rdi, rax	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016b3	      0xe800000000	                          call 0x40016b8	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016b8	            0x85c0	                           test eax, eax	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016ba	            0x752f	                           jne 0x40016eb	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_4
0x40016bc	    0x8b0500000000	            mov eax, dword [0x040016c2] 	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016c2	          0x83c808	                               or eax, 8	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016c5	    0x890500000000	            mov dword [0x040016cb], eax 	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016cb	    0x488b05000000	            mov rax, qword [0x040016d2] 	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016d2	          0x4889c6	                            mov rsi, rax	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016d5	      0xbf00000000	                              mov edi, 0	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016da	      0xb800000000	                              mov eax, 0	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016df	      0xe800000000	                          call 0x40016e4	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016e4	      0xe857e9ffff	                    call sym.const_error	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016e9	            0xeb62	                           jmp 0x400174d	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x40016eb	      0xbf00000000	                              mov edi, 0	       599	fsck.c	FUNCTION_28	IF_5	CALL_5
0x40016f0	      0xe8d1eaffff	                    call sym.is_null_oid	       599	fsck.c	FUNCTION_28	IF_5	CALL_5
0x40016f5	            0x85c0	                           test eax, eax	       599	fsck.c	FUNCTION_28	IF_5	CALL_5
0x40016f7	            0x744f	                            je 0x4001748	       599	fsck.c	FUNCTION_28	IF_5	CALL_5
0x40016f9	        0x837dfc00	                  cmp dword [rbp - 4], 0	       600	fsck.c	FUNCTION_28	IF_5	IF_6
0x40016fd	            0x7425	                            je 0x4001724	       600	fsck.c	FUNCTION_28	IF_5	IF_6
0x40016ff	    0x8b0500000000	            mov eax, dword [0x04001705] 	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001705	          0x83c808	                               or eax, 8	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001708	    0x890500000000	            mov dword [0x0400170e], eax 	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x400170e	      0xbf00000000	                              mov edi, 0	       602	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001713	      0xb800000000	                              mov eax, 0	       602	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001718	      0xe800000000	                          call 0x400171d	       602	fsck.c	FUNCTION_28	IF_5	IF_6
0x400171d	      0xe81ee9ffff	                    call sym.const_error	       602	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001722	            0xeb29	                           jmp 0x400174d	       602	fsck.c	FUNCTION_28	IF_5	IF_6
0x4001724	    0x488b05000000	            mov rax, qword [0x0400172b] 	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x400172b	        0x488d500b	                    lea rdx, [rax + 0xb]	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x400172f	    0x488b05000000	            mov rax, qword [0x04001736] 	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x4001736	      0xbe00000000	                              mov esi, 0	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x400173b	          0x4889c7	                            mov rdi, rax	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x400173e	      0xb800000000	                              mov eax, 0	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x4001743	      0xe800000000	                          call 0x4001748	       604	fsck.c	FUNCTION_28	IF_5	CALL_6
0x4001748	      0xb800000000	                              mov eax, 0	       607	fsck.c	FUNCTION_28
0x400174d	              0xc9	                                   leave	       608	fsck.c	FUNCTION_28
0x400174e	              0xc3	                                     ret	       608	fsck.c	FUNCTION_28
mark_object	FOR,0:CALL,15:DO,0:functions,0:SWITCH,0:IF,6:WHILE,0:ELSE,0	139
0x400050f	              0x55	                                push rbp	       130	fsck.c	FUNCTION_7
0x4000510	          0x4889e5	                            mov rbp, rsp	       130	fsck.c	FUNCTION_7
0x4000513	              0x53	                                push rbx	       130	fsck.c	FUNCTION_7
0x4000514	        0x4883ec38	                           sub rsp, 0x38	       130	fsck.c	FUNCTION_7
0x4000518	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       130	fsck.c	FUNCTION_7
0x400051c	          0x8975d4	             mov dword [rbp - 0x2c], esi	       130	fsck.c	FUNCTION_7
0x400051f	        0x488955c8	             mov qword [rbp - 0x38], rdx	       130	fsck.c	FUNCTION_7
0x4000523	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       130	fsck.c	FUNCTION_7
0x4000527	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       131	fsck.c	FUNCTION_7
0x400052b	        0x488945e8	             mov qword [rbp - 0x18], rax	       131	fsck.c	FUNCTION_7
0x400052f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       138	fsck.c	FUNCTION_7	IF_1
0x4000534	            0x7577	                           jne 0x40005ad	       138	fsck.c	FUNCTION_7	IF_1
0x4000536	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x400053a	          0x4889c7	                            mov rdi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x400053d	      0xe8abfcffff	                call sym.describe_object	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000542	          0x4889c3	                            mov rbx, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000545	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000549	          0x4889c7	                            mov rdi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x400054c	      0xe82afdffff	                 call sym.printable_type	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000551	          0x4889da	                            mov rdx, rbx	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000554	          0x4889c6	                            mov rsi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000557	      0xbf00000000	                              mov edi, 0	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x400055c	      0xb800000000	                              mov eax, 0	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000561	      0xe800000000	                          call 0x4000566	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4000566	        0x837dd408	               cmp dword [rbp - 0x2c], 8	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x400056a	            0x740c	                            je 0x4000578	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x400056c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       143	fsck.c	FUNCTION_7	IF_1	CALL_5
0x400056f	            0x89c7	                            mov edi, eax	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000571	      0xe800000000	                          call 0x4000576	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000576	            0xeb05	                           jmp 0x400057d	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000578	      0xb800000000	                              mov eax, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x400057d	      0xba00000000	                              mov edx, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000582	          0x4889c6	                            mov rsi, rax	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000585	      0xbf00000000	                              mov edi, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x400058a	      0xb800000000	                              mov eax, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x400058f	      0xe800000000	                          call 0x4000594	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x4000594	    0x8b0500000000	            mov eax, dword [0x0400059a] 	       144	fsck.c	FUNCTION_7	IF_1
0x400059a	          0x83c802	                               or eax, 2	       144	fsck.c	FUNCTION_7	IF_1
0x400059d	    0x890500000000	            mov dword [0x040005a3], eax 	       144	fsck.c	FUNCTION_7	IF_1
0x40005a3	      0xb801000000	                              mov eax, 1	       145	fsck.c	FUNCTION_7	IF_1
0x40005a8	      0xe95f010000	                           jmp 0x400070c	       145	fsck.c	FUNCTION_7	IF_1
0x40005ad	        0x837dd408	               cmp dword [rbp - 0x2c], 8	       148	fsck.c	FUNCTION_7	IF_2
0x40005b1	            0x7425	                            je 0x40005d8	       148	fsck.c	FUNCTION_7	IF_2
0x40005b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	fsck.c	FUNCTION_7	IF_2
0x40005b7	           0xfb600	                   movzx eax, byte [rax]	       148	fsck.c	FUNCTION_7	IF_2
0x40005ba	            0xd0e8	                               shr al, 1	       148	fsck.c	FUNCTION_7	IF_2
0x40005bc	          0x83e007	                              and eax, 7	       148	fsck.c	FUNCTION_7	IF_2
0x40005bf	           0xfb6c0	                           movzx eax, al	       148	fsck.c	FUNCTION_7	IF_2
0x40005c2	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       148	fsck.c	FUNCTION_7	IF_2
0x40005c5	            0x7411	                            je 0x40005d8	       148	fsck.c	FUNCTION_7	IF_2
0x40005c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	fsck.c	FUNCTION_7	CALL_6
0x40005cb	      0xbe00000000	                              mov esi, 0	       150	fsck.c	FUNCTION_7	CALL_6
0x40005d0	          0x4889c7	                            mov rdi, rax	       150	fsck.c	FUNCTION_7	CALL_6
0x40005d3	      0xe8b4feffff	                       call sym.objerror	       150	fsck.c	FUNCTION_7	CALL_6
0x40005d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       152	fsck.c	FUNCTION_7	IF_3
0x40005dc	            0x8b00	                    mov eax, dword [rax]	       152	fsck.c	FUNCTION_7	IF_3
0x40005de	          0xc1e804	                              shr eax, 4	       152	fsck.c	FUNCTION_7	IF_3
0x40005e1	      0x25ffffff07	                      and eax, 0x7ffffff	       152	fsck.c	FUNCTION_7	IF_3
0x40005e6	          0x83e001	                              and eax, 1	       152	fsck.c	FUNCTION_7	IF_3
0x40005e9	            0x85c0	                           test eax, eax	       152	fsck.c	FUNCTION_7	IF_3
0x40005eb	            0x740a	                            je 0x40005f7	       152	fsck.c	FUNCTION_7	IF_3
0x40005ed	      0xb800000000	                              mov eax, 0	       153	fsck.c	FUNCTION_7	IF_3
0x40005f2	      0xe915010000	                           jmp 0x400070c	       153	fsck.c	FUNCTION_7	IF_3
0x40005f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       154	fsck.c	FUNCTION_7
0x40005fb	            0x8b00	                    mov eax, dword [rax]	       154	fsck.c	FUNCTION_7
0x40005fd	          0xc1e804	                              shr eax, 4	       154	fsck.c	FUNCTION_7
0x4000600	      0x25ffffff07	                      and eax, 0x7ffffff	       154	fsck.c	FUNCTION_7
0x4000605	          0x83c801	                               or eax, 1	       154	fsck.c	FUNCTION_7
0x4000608	            0x89c2	                            mov edx, eax	       154	fsck.c	FUNCTION_7
0x400060a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       154	fsck.c	FUNCTION_7
0x400060e	    0x81e2ffffff07	                      and edx, 0x7ffffff	       154	fsck.c	FUNCTION_7
0x4000614	            0x89d1	                            mov ecx, edx	       154	fsck.c	FUNCTION_7
0x4000616	          0xc1e104	                              shl ecx, 4	       154	fsck.c	FUNCTION_7
0x4000619	            0x8b10	                    mov edx, dword [rax]	       154	fsck.c	FUNCTION_7
0x400061b	    0x81e20f000080	                     and edx, 0x8000000f	       154	fsck.c	FUNCTION_7
0x4000621	             0x9ca	                             or edx, ecx	       154	fsck.c	FUNCTION_7
0x4000623	            0x8910	                    mov dword [rax], edx	       154	fsck.c	FUNCTION_7
0x4000625	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x4000629	        0x4883c004	                              add rax, 4	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x400062d	          0x4889c7	                            mov rdi, rax	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x4000630	      0xe800000000	                          call 0x4000635	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x4000635	            0x85c0	                           test eax, eax	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x4000637	            0x740a	                            je 0x4000643	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x4000639	      0xb800000000	                              mov eax, 0	       162	fsck.c	FUNCTION_7	IF_4
0x400063e	      0xe9c9000000	                           jmp 0x400070c	       162	fsck.c	FUNCTION_7	IF_4
0x4000643	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	fsck.c	FUNCTION_7	IF_5
0x4000647	            0x8b00	                    mov eax, dword [rax]	       164	fsck.c	FUNCTION_7	IF_5
0x4000649	          0xc1e804	                              shr eax, 4	       164	fsck.c	FUNCTION_7	IF_5
0x400064c	      0x25ffffff07	                      and eax, 0x7ffffff	       164	fsck.c	FUNCTION_7	IF_5
0x4000651	          0x83e004	                              and eax, 4	       164	fsck.c	FUNCTION_7	IF_5
0x4000654	            0x85c0	                           test eax, eax	       164	fsck.c	FUNCTION_7	IF_5
0x4000656	     0xf8595000000	                           jne 0x40006f1	       164	fsck.c	FUNCTION_7	IF_5
0x400065c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x4000661	     0xf8483000000	                            je 0x40006ea	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x4000667	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x400066b	        0x4883c004	                              add rax, 4	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x400066f	          0x4889c7	                            mov rdi, rax	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x4000672	      0xe800000000	                          call 0x4000677	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x4000677	            0x85c0	                           test eax, eax	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x4000679	            0x756f	                           jne 0x40006ea	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x400067b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x400067f	          0x4889c7	                            mov rdi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x4000682	      0xe866fbffff	                call sym.describe_object	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x4000687	          0x4889c3	                            mov rbx, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x400068a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x400068e	          0x4889c7	                            mov rdi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x4000691	      0xe8e5fbffff	                 call sym.printable_type	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x4000696	          0x4889da	                            mov rdx, rbx	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x4000699	          0x4889c6	                            mov rsi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x400069c	      0xbf00000000	                              mov edi, 0	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x40006a1	      0xb800000000	                              mov eax, 0	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x40006a6	      0xe800000000	                          call 0x40006ab	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x40006ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006af	          0x4889c7	                            mov rdi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006b2	      0xe836fbffff	                call sym.describe_object	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006b7	          0x4889c3	                            mov rbx, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006be	          0x4889c7	                            mov rdi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006c1	      0xe8b5fbffff	                 call sym.printable_type	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006c6	          0x4889da	                            mov rdx, rbx	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006c9	          0x4889c6	                            mov rsi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006cc	      0xbf00000000	                              mov edi, 0	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006d1	      0xb800000000	                              mov eax, 0	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006d6	      0xe800000000	                          call 0x40006db	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x40006db	    0x8b0500000000	            mov eax, dword [0x040006e1] 	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x40006e1	          0x83c802	                               or eax, 2	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x40006e4	    0x890500000000	            mov dword [0x040006ea], eax 	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x40006ea	      0xb801000000	                              mov eax, 1	       172	fsck.c	FUNCTION_7	IF_5
0x40006ef	            0xeb1b	                           jmp 0x400070c	       172	fsck.c	FUNCTION_7	IF_5
0x40006f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	fsck.c	FUNCTION_7	CALL_15
0x40006f5	      0xba00000000	                              mov edx, 0	       175	fsck.c	FUNCTION_7	CALL_15
0x40006fa	      0xbe00000000	                              mov esi, 0	       175	fsck.c	FUNCTION_7	CALL_15
0x40006ff	          0x4889c7	                            mov rdi, rax	       175	fsck.c	FUNCTION_7	CALL_15
0x4000702	      0xe800000000	                          call 0x4000707	       175	fsck.c	FUNCTION_7	CALL_15
0x4000707	      0xb800000000	                              mov eax, 0	       176	fsck.c	FUNCTION_7
0x400070c	        0x4883c438	                           add rsp, 0x38	       177	fsck.c	FUNCTION_7
0x4000710	              0x5b	                                 pop rbx	       177	fsck.c	FUNCTION_7
0x4000711	              0x5d	                                 pop rbp	       177	fsck.c	FUNCTION_7
0x4000712	              0xc3	                                     ret	       177	fsck.c	FUNCTION_7
strbuf_setlen	FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:WHILE,0:ELSE,1	43
0x40000a1	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_40
0x40000a2	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_40
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_40
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_40
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_40
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_40	IF_1
0x40000b5	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_40	IF_1
0x40000b8	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_40	IF_1
0x40000bb	            0x740d	                            je 0x40000ca	       162	strbuf.h	FUNCTION_40	IF_1
0x40000bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_40	IF_1
0x40000c1	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_40	IF_1
0x40000c4	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_40	IF_1
0x40000c8	            0xeb05	                           jmp 0x40000cf	       162	strbuf.h	FUNCTION_40	IF_1
0x40000ca	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_40	IF_1
0x40000cf	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_40	IF_1
0x40000d3	            0x730f	                           jae 0x40000e4	       162	strbuf.h	FUNCTION_40	IF_1
0x40000d5	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x40000da	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_40	CALL_1
0x40000df	      0xe800000000	                          call 0x40000e4	       163	strbuf.h	FUNCTION_40	CALL_1
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_40
0x40000e8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_40
0x40000ec	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_40
0x40000f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_40	IF_2
0x40000f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_40	IF_2
0x40000f8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_40	IF_2
0x40000fe	            0x7414	                            je 0x4000114	       165	strbuf.h	FUNCTION_40	IF_2
0x4000100	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_40	IF_2
0x4000104	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_40	IF_2
0x4000108	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_40	IF_2
0x400010c	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_40	IF_2
0x400010f	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_40	IF_2
0x4000112	            0xeb24	                           jmp 0x4000138	       169	strbuf.h	FUNCTION_40
0x4000114	     0xfb605000000	           movzx eax, byte [0x0400011b] 	       168	strbuf.h	FUNCTION_40	CALL_2
0x400011b	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_40	CALL_2
0x400011d	            0x7419	                            je 0x4000138	       168	strbuf.h	FUNCTION_40	CALL_2
0x400011f	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000124	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000129	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x400012e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000133	      0xe800000000	                          call 0x4000138	       168	strbuf.h	FUNCTION_40	CALL_2
0x4000138	              0x90	                                     nop	       169	strbuf.h	FUNCTION_40
0x4000139	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_40
0x400013a	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_40
fsck_obj_buffer	FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	64
0x4000e24	              0x55	                                push rbp	       389	fsck.c	FUNCTION_17
0x4000e25	          0x4889e5	                            mov rbp, rsp	       389	fsck.c	FUNCTION_17
0x4000e28	        0x4883ec40	                           sub rsp, 0x40	       389	fsck.c	FUNCTION_17
0x4000e2c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       389	fsck.c	FUNCTION_17
0x4000e30	          0x8975e4	             mov dword [rbp - 0x1c], esi	       389	fsck.c	FUNCTION_17
0x4000e33	        0x488955d8	             mov qword [rbp - 0x28], rdx	       389	fsck.c	FUNCTION_17
0x4000e37	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       389	fsck.c	FUNCTION_17
0x4000e3b	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       389	fsck.c	FUNCTION_17
0x4000e3f	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e43	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e47	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e4b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e52	          0x4989f8	                             mov r8, rdi	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e55	          0x4889c7	                            mov rdi, rax	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e58	      0xe800000000	                          call 0x4000e5d	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e5d	        0x488945f8	                mov qword [rbp - 8], rax	       395	fsck.c	FUNCTION_17	CALL_1
0x4000e61	      0x48837df800	                  cmp qword [rbp - 8], 0	       396	fsck.c	FUNCTION_17	IF_1
0x4000e66	            0x7534	                           jne 0x4000e9c	       396	fsck.c	FUNCTION_17	IF_1
0x4000e68	    0x8b0500000000	            mov eax, dword [0x04000e6e] 	       397	fsck.c	FUNCTION_17	IF_1
0x4000e6e	          0x83c801	                               or eax, 1	       397	fsck.c	FUNCTION_17	IF_1
0x4000e71	    0x890500000000	            mov dword [0x04000e77], eax 	       397	fsck.c	FUNCTION_17	IF_1
0x4000e77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e7b	          0x4889c7	                            mov rdi, rax	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e7e	      0xe800000000	                          call 0x4000e83	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e83	          0x4889c6	                            mov rsi, rax	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e86	      0xbf00000000	                              mov edi, 0	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e8b	      0xb800000000	                              mov eax, 0	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e90	      0xe800000000	                          call 0x4000e95	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e95	      0xe8a6f1ffff	                    call sym.const_error	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e9a	            0xeb6a	                           jmp 0x4000f06	       398	fsck.c	FUNCTION_17	IF_1	CALL_2
0x4000e9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	fsck.c	FUNCTION_17
0x4000ea0	            0x8b00	                    mov eax, dword [rax]	       400	fsck.c	FUNCTION_17
0x4000ea2	          0xc1e804	                              shr eax, 4	       400	fsck.c	FUNCTION_17
0x4000ea5	      0x25ffffff07	                      and eax, 0x7ffffff	       400	fsck.c	FUNCTION_17
0x4000eaa	      0x25fcffff07	                      and eax, 0x7fffffc	       400	fsck.c	FUNCTION_17
0x4000eaf	            0x89c2	                            mov edx, eax	       400	fsck.c	FUNCTION_17
0x4000eb1	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	fsck.c	FUNCTION_17
0x4000eb5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       400	fsck.c	FUNCTION_17
0x4000ebb	            0x89d1	                            mov ecx, edx	       400	fsck.c	FUNCTION_17
0x4000ebd	          0xc1e104	                              shl ecx, 4	       400	fsck.c	FUNCTION_17
0x4000ec0	            0x8b10	                    mov edx, dword [rax]	       400	fsck.c	FUNCTION_17
0x4000ec2	    0x81e20f000080	                     and edx, 0x8000000f	       400	fsck.c	FUNCTION_17
0x4000ec8	             0x9ca	                             or edx, ecx	       400	fsck.c	FUNCTION_17
0x4000eca	            0x8910	                    mov dword [rax], edx	       400	fsck.c	FUNCTION_17
0x4000ecc	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	fsck.c	FUNCTION_17
0x4000ed0	            0x8b00	                    mov eax, dword [rax]	       401	fsck.c	FUNCTION_17
0x4000ed2	          0xc1e804	                              shr eax, 4	       401	fsck.c	FUNCTION_17
0x4000ed5	      0x25ffffff07	                      and eax, 0x7ffffff	       401	fsck.c	FUNCTION_17
0x4000eda	          0x83c804	                               or eax, 4	       401	fsck.c	FUNCTION_17
0x4000edd	            0x89c2	                            mov edx, eax	       401	fsck.c	FUNCTION_17
0x4000edf	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	fsck.c	FUNCTION_17
0x4000ee3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       401	fsck.c	FUNCTION_17
0x4000ee9	            0x89d1	                            mov ecx, edx	       401	fsck.c	FUNCTION_17
0x4000eeb	          0xc1e104	                              shl ecx, 4	       401	fsck.c	FUNCTION_17
0x4000eee	            0x8b10	                    mov edx, dword [rax]	       401	fsck.c	FUNCTION_17
0x4000ef0	    0x81e20f000080	                     and edx, 0x8000000f	       401	fsck.c	FUNCTION_17
0x4000ef6	             0x9ca	                             or edx, ecx	       401	fsck.c	FUNCTION_17
0x4000ef8	            0x8910	                    mov dword [rax], edx	       401	fsck.c	FUNCTION_17
0x4000efa	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	fsck.c	FUNCTION_17	CALL_3
0x4000efe	          0x4889c7	                            mov rdi, rax	       402	fsck.c	FUNCTION_17	CALL_3
0x4000f01	      0xe80ffdffff	                       call sym.fsck_obj	       402	fsck.c	FUNCTION_17	CALL_3
0x4000f06	              0xc9	                                   leave	       403	fsck.c	FUNCTION_17
0x4000f07	              0xc3	                                     ret	       403	fsck.c	FUNCTION_17
get_default_heads	FOR,0:CALL,5:DO,0:functions,0:SWITCH,0:IF,3:WHILE,0:ELSE,0	36
0x400126c	              0x55	                                push rbp	       485	fsck.c	FUNCTION_22
0x400126d	          0x4889e5	                            mov rbp, rsp	       485	fsck.c	FUNCTION_22
0x4001270	    0x488b05000000	            mov rax, qword [0x04001277] 	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x4001277	          0x4885c0	                           test rax, rax	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x400127a	            0x7427	                            je 0x40012a3	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x400127c	      0xbf00000000	                              mov edi, 0	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x4001281	      0xe840efffff	                    call sym.is_null_oid	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x4001286	            0x85c0	                           test eax, eax	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x4001288	            0x7519	                           jne 0x40012a3	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x400128a	      0xb900000000	                              mov ecx, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x400128f	      0xba00000000	                              mov edx, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x4001294	      0xbe00000000	                              mov esi, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x4001299	      0xbf00000000	                              mov edi, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x400129e	      0xe868feffff	                call sym.fsck_handle_ref	       487	fsck.c	FUNCTION_22	CALL_2
0x40012a3	      0xbe00000000	                              mov esi, 0	       488	fsck.c	FUNCTION_22	CALL_3
0x40012a8	      0xbf00000000	                              mov edi, 0	       488	fsck.c	FUNCTION_22	CALL_3
0x40012ad	      0xe800000000	                          call 0x40012b2	       488	fsck.c	FUNCTION_22	CALL_3
0x40012b2	    0x8b0500000000	            mov eax, dword [0x040012b8] 	       489	fsck.c	FUNCTION_22	IF_2
0x40012b8	            0x85c0	                           test eax, eax	       489	fsck.c	FUNCTION_22	IF_2
0x40012ba	            0x740f	                            je 0x40012cb	       489	fsck.c	FUNCTION_22	IF_2
0x40012bc	      0xbe00000000	                              mov esi, 0	       490	fsck.c	FUNCTION_22	CALL_4
0x40012c1	      0xbf00000000	                              mov edi, 0	       490	fsck.c	FUNCTION_22	CALL_4
0x40012c6	      0xe800000000	                          call 0x40012cb	       490	fsck.c	FUNCTION_22	CALL_4
0x40012cb	    0x8b0500000000	            mov eax, dword [0x040012d1] 	       504	fsck.c	FUNCTION_22	IF_3
0x40012d1	            0x85c0	                           test eax, eax	       504	fsck.c	FUNCTION_22	IF_3
0x40012d3	            0x7528	                           jne 0x40012fd	       504	fsck.c	FUNCTION_22	IF_3
0x40012d5	    0x488b05000000	            mov rax, qword [0x040012dc] 	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012dc	          0x4889c1	                            mov rcx, rax	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012df	      0xba1e000000	                           mov edx, 0x1e	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012e4	      0xbe01000000	                              mov esi, 1	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012e9	      0xbf00000000	                              mov edi, 0	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012ee	      0xe800000000	                          call 0x40012f3	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x40012f3	    0xc70500000000	               mov dword [0x040012fd], 0	       506	fsck.c	FUNCTION_22	IF_3
0x40012fd	              0x90	                                     nop	       508	fsck.c	FUNCTION_22
0x40012fe	              0x5d	                                 pop rbp	       508	fsck.c	FUNCTION_22
0x40012ff	              0xc3	                                     ret	       508	fsck.c	FUNCTION_22
fsck_object_dir	FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,2:WHILE,0:ELSE,0	48
0x4001532	              0x55	                                push rbp	       564	fsck.c	FUNCTION_27
0x4001533	          0x4889e5	                            mov rbp, rsp	       564	fsck.c	FUNCTION_27
0x4001536	        0x4883ec20	                           sub rsp, 0x20	       564	fsck.c	FUNCTION_27
0x400153a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       564	fsck.c	FUNCTION_27
0x400153e	    0x64488b042528	                mov rax, qword fs:[0x28]	       564	fsck.c	FUNCTION_27
0x4001547	        0x488945f8	                mov qword [rbp - 8], rax	       564	fsck.c	FUNCTION_27
0x400154b	            0x31c0	                            xor eax, eax	       564	fsck.c	FUNCTION_27
0x400154d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       565	fsck.c	FUNCTION_27
0x4001555	    0x8b0500000000	            mov eax, dword [0x0400155b] 	       567	fsck.c	FUNCTION_27	IF_1
0x400155b	            0x85c0	                           test eax, eax	       567	fsck.c	FUNCTION_27	IF_1
0x400155d	            0x741e	                            je 0x400157d	       567	fsck.c	FUNCTION_27	IF_1
0x400155f	    0x488b05000000	            mov rax, qword [0x04001566] 	       568	fsck.c	FUNCTION_27	CALL_1
0x4001566	          0x4889c1	                            mov rcx, rax	       568	fsck.c	FUNCTION_27	CALL_1
0x4001569	      0xba1a000000	                           mov edx, 0x1a	       568	fsck.c	FUNCTION_27	CALL_1
0x400156e	      0xbe01000000	                              mov esi, 1	       568	fsck.c	FUNCTION_27	CALL_1
0x4001573	      0xbf00000000	                              mov edi, 0	       568	fsck.c	FUNCTION_27	CALL_1
0x4001578	      0xe800000000	                          call 0x400157d	       568	fsck.c	FUNCTION_27	CALL_1
0x400157d	    0x8b0500000000	            mov eax, dword [0x04001583] 	       570	fsck.c	FUNCTION_27	IF_2
0x4001583	            0x85c0	                           test eax, eax	       570	fsck.c	FUNCTION_27	IF_2
0x4001585	            0x741b	                            je 0x40015a2	       570	fsck.c	FUNCTION_27	IF_2
0x4001587	      0xbf00000000	                              mov edi, 0	       571	fsck.c	FUNCTION_27	CALL_3
0x400158c	      0xe8dfebffff	                               call sym.	       571	fsck.c	FUNCTION_27	CALL_3
0x4001591	      0xbe00010000	                          mov esi, 0x100	       571	fsck.c	FUNCTION_27	CALL_3
0x4001596	          0x4889c7	                            mov rdi, rax	       571	fsck.c	FUNCTION_27	CALL_3
0x4001599	      0xe800000000	                          call 0x400159e	       571	fsck.c	FUNCTION_27	CALL_3
0x400159e	        0x488945f0	             mov qword [rbp - 0x10], rax	       571	fsck.c	FUNCTION_27	CALL_3
0x40015a2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       573	fsck.c	FUNCTION_27	CALL_4
0x40015a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	fsck.c	FUNCTION_27	CALL_4
0x40015aa	          0x4989d0	                             mov r8, rdx	       573	fsck.c	FUNCTION_27	CALL_4
0x40015ad	      0xb900000000	                              mov ecx, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x40015b2	      0xba00000000	                              mov edx, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x40015b7	      0xbe00000000	                              mov esi, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x40015bc	          0x4889c7	                            mov rdi, rax	       573	fsck.c	FUNCTION_27	CALL_4
0x40015bf	      0xe800000000	                          call 0x40015c4	       573	fsck.c	FUNCTION_27	CALL_4
0x40015c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	fsck.c	FUNCTION_27	CALL_5
0x40015c8	      0xbe00010000	                          mov esi, 0x100	       575	fsck.c	FUNCTION_27	CALL_5
0x40015cd	          0x4889c7	                            mov rdi, rax	       575	fsck.c	FUNCTION_27	CALL_5
0x40015d0	      0xe800000000	                          call 0x40015d5	       575	fsck.c	FUNCTION_27	CALL_5
0x40015d5	        0x488d45f0	                   lea rax, [rbp - 0x10]	       576	fsck.c	FUNCTION_27	CALL_6
0x40015d9	          0x4889c7	                            mov rdi, rax	       576	fsck.c	FUNCTION_27	CALL_6
0x40015dc	      0xe800000000	                          call 0x40015e1	       576	fsck.c	FUNCTION_27	CALL_6
0x40015e1	              0x90	                                     nop	       577	fsck.c	FUNCTION_27
0x40015e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	fsck.c	FUNCTION_27
0x40015e6	    0x644833042528	                xor rax, qword fs:[0x28]	       577	fsck.c	FUNCTION_27
0x40015ef	            0x7405	                            je 0x40015f6	       577	fsck.c	FUNCTION_27
0x40015f1	      0xe800000000	                          call 0x40015f6	       577	fsck.c	FUNCTION_27
0x40015f6	              0xc9	                                   leave	       577	fsck.c	FUNCTION_27
0x40015f7	              0xc3	                                     ret	       577	fsck.c	FUNCTION_27
traverse_reachable	FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,1:WHILE,1:ELSE,0	45
0x400078b	              0x55	                                push rbp	       196	fsck.c	FUNCTION_10
0x400078c	          0x4889e5	                            mov rbp, rsp	       196	fsck.c	FUNCTION_10
0x400078f	        0x4883ec20	                           sub rsp, 0x20	       196	fsck.c	FUNCTION_10
0x4000793	    0x64488b042528	                mov rax, qword fs:[0x28]	       196	fsck.c	FUNCTION_10
0x400079c	        0x488945f8	                mov qword [rbp - 8], rax	       196	fsck.c	FUNCTION_10
0x40007a0	            0x31c0	                            xor eax, eax	       196	fsck.c	FUNCTION_10
0x40007a2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       197	fsck.c	FUNCTION_10
0x40007aa	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       198	fsck.c	FUNCTION_10
0x40007b1	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       199	fsck.c	FUNCTION_10
0x40007b8	    0x8b0500000000	            mov eax, dword [0x040007be] 	       200	fsck.c	FUNCTION_10	IF_1
0x40007be	            0x85c0	                           test eax, eax	       200	fsck.c	FUNCTION_10	IF_1
0x40007c0	            0x7448	                            je 0x400080a	       200	fsck.c	FUNCTION_10	IF_1
0x40007c2	      0xbf00000000	                              mov edi, 0	       201	fsck.c	FUNCTION_10	CALL_2
0x40007c7	      0xe8a4f9ffff	                               call sym.	       201	fsck.c	FUNCTION_10	CALL_2
0x40007cc	      0xbe00000000	                              mov esi, 0	       201	fsck.c	FUNCTION_10	CALL_2
0x40007d1	          0x4889c7	                            mov rdi, rax	       201	fsck.c	FUNCTION_10	CALL_2
0x40007d4	      0xe800000000	                          call 0x40007d9	       201	fsck.c	FUNCTION_10	CALL_2
0x40007d9	        0x488945f0	             mov qword [rbp - 0x10], rax	       201	fsck.c	FUNCTION_10	CALL_2
0x40007dd	            0xeb2b	                           jmp 0x400080a	       202	fsck.c	FUNCTION_10	WHILE_1
0x40007df	      0xbf00000000	                              mov edi, 0	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x40007e4	      0xe800000000	                          call 0x40007e9	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x40007e9	          0x4889c7	                            mov rdi, rax	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x40007ec	      0xe84cffffff	            call sym.traverse_one_object	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x40007f1	           0x945ec	              or dword [rbp - 0x14], eax	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x40007f4	        0x8345e801	               add dword [rbp - 0x18], 1	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x40007f8	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x40007fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x40007ff	          0x4889d6	                            mov rsi, rdx	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x4000802	          0x4889c7	                            mov rdi, rax	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x4000805	      0xe800000000	                          call 0x400080a	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x400080a	    0x8b0500000000	            mov eax, dword [0x04000810] 	       202	fsck.c	FUNCTION_10	WHILE_1
0x4000810	            0x85c0	                           test eax, eax	       202	fsck.c	FUNCTION_10	WHILE_1
0x4000812	            0x75cb	                           jne 0x40007df	       202	fsck.c	FUNCTION_10	WHILE_1
0x4000814	        0x488d45f0	                   lea rax, [rbp - 0x10]	       206	fsck.c	FUNCTION_10	CALL_6
0x4000818	          0x4889c7	                            mov rdi, rax	       206	fsck.c	FUNCTION_10	CALL_6
0x400081b	      0xe800000000	                          call 0x4000820	       206	fsck.c	FUNCTION_10	CALL_6
0x4000820	        0x837dec00	               cmp dword [rbp - 0x14], 0	       207	fsck.c	FUNCTION_10
0x4000824	           0xf95c0	                                setne al	       207	fsck.c	FUNCTION_10
0x4000827	           0xfb6c0	                           movzx eax, al	       207	fsck.c	FUNCTION_10
0x400082a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       208	fsck.c	FUNCTION_10
0x400082e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       208	fsck.c	FUNCTION_10
0x4000837	            0x7405	                            je 0x400083e	       208	fsck.c	FUNCTION_10
0x4000839	      0xe800000000	                          call 0x400083e	       208	fsck.c	FUNCTION_10
0x400083e	              0xc9	                                   leave	       208	fsck.c	FUNCTION_10
0x400083f	              0xc3	                                     ret	       208	fsck.c	FUNCTION_10
check_object	FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,2:WHILE,0:ELSE,1	33
0x4000b31	              0x55	                                push rbp	       313	fsck.c	FUNCTION_14
0x4000b32	          0x4889e5	                            mov rbp, rsp	       313	fsck.c	FUNCTION_14
0x4000b35	        0x4883ec10	                           sub rsp, 0x10	       313	fsck.c	FUNCTION_14
0x4000b39	        0x48897df8	                mov qword [rbp - 8], rdi	       313	fsck.c	FUNCTION_14
0x4000b3d	    0x8b0500000000	            mov eax, dword [0x04000b43] 	       314	fsck.c	FUNCTION_14	IF_1
0x4000b43	            0x85c0	                           test eax, eax	       314	fsck.c	FUNCTION_14	IF_1
0x4000b45	            0x7428	                            je 0x4000b6f	       314	fsck.c	FUNCTION_14	IF_1
0x4000b47	        0x488b45f8	                mov rax, qword [rbp - 8]	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b4b	          0x4889c7	                            mov rdi, rax	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b4e	      0xe89af6ffff	                call sym.describe_object	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b53	          0x4889c2	                            mov rdx, rax	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b56	    0x488b05000000	            mov rax, qword [0x04000b5d] 	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b5d	      0xbe00000000	                              mov esi, 0	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b62	          0x4889c7	                            mov rdi, rax	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b65	      0xb800000000	                              mov eax, 0	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b6a	      0xe800000000	                          call 0x4000b6f	       315	fsck.c	FUNCTION_14	CALL_2
0x4000b6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	fsck.c	FUNCTION_14	IF_2
0x4000b73	            0x8b00	                    mov eax, dword [rax]	       317	fsck.c	FUNCTION_14	IF_2
0x4000b75	          0xc1e804	                              shr eax, 4	       317	fsck.c	FUNCTION_14	IF_2
0x4000b78	      0x25ffffff07	                      and eax, 0x7ffffff	       317	fsck.c	FUNCTION_14	IF_2
0x4000b7d	          0x83e001	                              and eax, 1	       317	fsck.c	FUNCTION_14	IF_2
0x4000b80	            0x85c0	                           test eax, eax	       317	fsck.c	FUNCTION_14	IF_2
0x4000b82	            0x740e	                            je 0x4000b92	       317	fsck.c	FUNCTION_14	IF_2
0x4000b84	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	fsck.c	FUNCTION_14	CALL_3
0x4000b88	          0x4889c7	                            mov rdi, rax	       318	fsck.c	FUNCTION_14	CALL_3
0x4000b8b	      0xe806fdffff	         call sym.check_reachable_object	       318	fsck.c	FUNCTION_14	CALL_3
0x4000b90	            0xeb0c	                           jmp 0x4000b9e	       321	fsck.c	FUNCTION_14
0x4000b92	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	fsck.c	FUNCTION_14	CALL_4
0x4000b96	          0x4889c7	                            mov rdi, rax	       320	fsck.c	FUNCTION_14	CALL_4
0x4000b99	      0xe88ffdffff	       call sym.check_unreachable_object	       320	fsck.c	FUNCTION_14	CALL_4
0x4000b9e	              0x90	                                     nop	       321	fsck.c	FUNCTION_14
0x4000b9f	              0xc9	                                   leave	       321	fsck.c	FUNCTION_14
0x4000ba0	              0xc3	                                     ret	       321	fsck.c	FUNCTION_14
fsck_config	FOR,0:CALL,9:DO,0:functions,0:SWITCH,0:IF,3:WHILE,0:ELSE,0	72
0x4000302	              0x55	                                push rbp	        84	fsck.c	FUNCTION_3
0x4000303	          0x4889e5	                            mov rbp, rsp	        84	fsck.c	FUNCTION_3
0x4000306	        0x4883ec50	                           sub rsp, 0x50	        84	fsck.c	FUNCTION_3
0x400030a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        84	fsck.c	FUNCTION_3
0x400030e	        0x488975c0	             mov qword [rbp - 0x40], rsi	        84	fsck.c	FUNCTION_3
0x4000312	        0x488955b8	             mov qword [rbp - 0x48], rdx	        84	fsck.c	FUNCTION_3
0x4000316	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	fsck.c	FUNCTION_3
0x400031f	        0x488945f8	                mov qword [rbp - 8], rax	        84	fsck.c	FUNCTION_3
0x4000323	            0x31c0	                            xor eax, eax	        84	fsck.c	FUNCTION_3
0x4000325	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x4000329	      0xbe00000000	                              mov esi, 0	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x400032e	          0x4889c7	                            mov rdi, rax	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x4000331	      0xe800000000	                          call 0x4000336	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x4000336	            0x85c0	                           test eax, eax	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x4000338	     0xf8587000000	                           jne 0x40003c5	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x400033e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        87	fsck.c	FUNCTION_3	IF_1
0x4000346	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        87	fsck.c	FUNCTION_3	IF_1
0x400034e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        87	fsck.c	FUNCTION_3	IF_1
0x4000356	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400035a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400035e	        0x488d45d8	                   lea rax, [rbp - 0x28]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000362	          0x4889ce	                            mov rsi, rcx	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000365	          0x4889c7	                            mov rdi, rax	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000368	      0xe800000000	                          call 0x400036d	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400036d	            0x85c0	                           test eax, eax	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400036f	            0x740a	                            je 0x400037b	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000371	      0xb801000000	                              mov eax, 1	        90	fsck.c	FUNCTION_3	IF_1	IF_2
0x4000376	      0xe996000000	                           jmp 0x4000411	        90	fsck.c	FUNCTION_3	IF_1	IF_2
0x400037b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x400037f	        0x488d45e0	                   lea rax, [rbp - 0x20]	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x4000383	      0xbe00000000	                              mov esi, 0	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x4000388	          0x4889c7	                            mov rdi, rax	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x400038b	      0xb800000000	                              mov eax, 0	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x4000390	      0xe800000000	                          call 0x4000395	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x4000395	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x4000399	          0x4889c7	                            mov rdi, rax	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x400039c	      0xe800000000	                          call 0x40003a1	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x40003a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x40003a5	          0x4889c6	                            mov rsi, rax	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x40003a8	      0xbf00000000	                              mov edi, 0	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x40003ad	      0xe800000000	                          call 0x40003b2	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x40003b2	        0x488d45e0	                   lea rax, [rbp - 0x20]	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x40003b6	          0x4889c7	                            mov rdi, rax	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x40003b9	      0xe800000000	                          call 0x40003be	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x40003be	      0xb800000000	                              mov eax, 0	        95	fsck.c	FUNCTION_3	IF_1
0x40003c3	            0xeb4c	                           jmp 0x4000411	        95	fsck.c	FUNCTION_3	IF_1
0x40003c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003c9	        0x488d55c8	                   lea rdx, [rbp - 0x38]	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003cd	      0xbe00000000	                              mov esi, 0	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003d2	          0x4889c7	                            mov rdi, rax	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003d5	      0xe871fcffff	                    call sym.skip_prefix	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003da	            0x85c0	                           test eax, eax	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003dc	            0x741c	                            je 0x40003fa	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x40003de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x40003e2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x40003e6	          0x4889c6	                            mov rsi, rax	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x40003e9	      0xbf00000000	                              mov edi, 0	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x40003ee	      0xe800000000	                          call 0x40003f3	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x40003f3	      0xb800000000	                              mov eax, 0	       100	fsck.c	FUNCTION_3	IF_3
0x40003f8	            0xeb17	                           jmp 0x4000411	       100	fsck.c	FUNCTION_3	IF_3
0x40003fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       103	fsck.c	FUNCTION_3	CALL_9
0x40003fe	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       103	fsck.c	FUNCTION_3	CALL_9
0x4000402	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       103	fsck.c	FUNCTION_3	CALL_9
0x4000406	          0x4889ce	                            mov rsi, rcx	       103	fsck.c	FUNCTION_3	CALL_9
0x4000409	          0x4889c7	                            mov rdi, rax	       103	fsck.c	FUNCTION_3	CALL_9
0x400040c	      0xe800000000	                          call 0x4000411	       103	fsck.c	FUNCTION_3	CALL_9
0x4000411	        0x488b4df8	                mov rcx, qword [rbp - 8]	       104	fsck.c	FUNCTION_3
0x4000415	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	fsck.c	FUNCTION_3
0x400041e	            0x7405	                            je 0x4000425	       104	fsck.c	FUNCTION_3
0x4000420	      0xe800000000	                          call 0x4000425	       104	fsck.c	FUNCTION_3
0x4000425	              0xc9	                                   leave	       104	fsck.c	FUNCTION_3
0x4000426	              0xc3	                                     ret	       104	fsck.c	FUNCTION_3
check_connectivity	FOR,1:CALL,5:DO,0:functions,0:SWITCH,0:IF,2:WHILE,0:ELSE,0	33
0x4000ba1	              0x55	                                push rbp	       324	fsck.c	FUNCTION_15
0x4000ba2	          0x4889e5	                            mov rbp, rsp	       324	fsck.c	FUNCTION_15
0x4000ba5	        0x4883ec10	                           sub rsp, 0x10	       324	fsck.c	FUNCTION_15
0x4000ba9	      0xe8ddfbffff	             call sym.traverse_reachable	       328	fsck.c	FUNCTION_15	CALL_1
0x4000bae	      0xe800000000	                          call 0x4000bb3	       331	fsck.c	FUNCTION_15	CALL_2
0x4000bb3	          0x8945f4	              mov dword [rbp - 0xc], eax	       331	fsck.c	FUNCTION_15	CALL_2
0x4000bb6	    0x8b0500000000	            mov eax, dword [0x04000bbc] 	       332	fsck.c	FUNCTION_15	IF_1
0x4000bbc	            0x85c0	                           test eax, eax	       332	fsck.c	FUNCTION_15	IF_1
0x4000bbe	            0x741c	                            je 0x4000bdc	       332	fsck.c	FUNCTION_15	IF_1
0x4000bc0	    0x488b05000000	            mov rax, qword [0x04000bc7] 	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bc7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bca	      0xbe00000000	                              mov esi, 0	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bcf	          0x4889c7	                            mov rdi, rax	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bd2	      0xb800000000	                              mov eax, 0	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bd7	      0xe800000000	                          call 0x4000bdc	       333	fsck.c	FUNCTION_15	CALL_3
0x4000bdc	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       335	fsck.c	FUNCTION_15	FOR_1
0x4000be3	            0xeb25	                           jmp 0x4000c0a	       335	fsck.c	FUNCTION_15	FOR_1
0x4000be5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0x4000be8	            0x89c7	                            mov edi, eax	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0x4000bea	      0xe800000000	                          call 0x4000bef	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0x4000bef	        0x488945f8	                mov qword [rbp - 8], rax	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0x4000bf3	      0x48837df800	                  cmp qword [rbp - 8], 0	       338	fsck.c	FUNCTION_15	FOR_1	IF_2
0x4000bf8	            0x740c	                            je 0x4000c06	       338	fsck.c	FUNCTION_15	FOR_1	IF_2
0x4000bfa	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0x4000bfe	          0x4889c7	                            mov rdi, rax	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0x4000c01	      0xe82bffffff	                   call sym.check_object	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0x4000c06	        0x8345f001	               add dword [rbp - 0x10], 1	       335	fsck.c	FUNCTION_15	FOR_1
0x4000c0a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       335	fsck.c	FUNCTION_15	FOR_1
0x4000c0d	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       335	fsck.c	FUNCTION_15	FOR_1
0x4000c10	            0x7cd3	                            jl 0x4000be5	       335	fsck.c	FUNCTION_15	FOR_1
0x4000c12	              0x90	                                     nop	       341	fsck.c	FUNCTION_15
0x4000c13	              0xc9	                                   leave	       341	fsck.c	FUNCTION_15
0x4000c14	              0xc3	                                     ret	       341	fsck.c	FUNCTION_15
check_unreachable_object	FOR,0:CALL,19:DO,0:functions,0:SWITCH,0:IF,9:WHILE,0:ELSE,1	141
0x400092d	              0x55	                                push rbp	       244	fsck.c	FUNCTION_13
0x400092e	          0x4889e5	                            mov rbp, rsp	       244	fsck.c	FUNCTION_13
0x4000931	              0x53	                                push rbx	       244	fsck.c	FUNCTION_13
0x4000932	        0x4883ec28	                           sub rsp, 0x28	       244	fsck.c	FUNCTION_13
0x4000936	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       244	fsck.c	FUNCTION_13
0x400093a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	fsck.c	FUNCTION_13	IF_1
0x400093e	            0x8b00	                    mov eax, dword [rax]	       251	fsck.c	FUNCTION_13	IF_1
0x4000940	          0xc1e804	                              shr eax, 4	       251	fsck.c	FUNCTION_13	IF_1
0x4000943	      0x25ffffff07	                      and eax, 0x7ffffff	       251	fsck.c	FUNCTION_13	IF_1
0x4000948	          0x83e004	                              and eax, 4	       251	fsck.c	FUNCTION_13	IF_1
0x400094b	            0x85c0	                           test eax, eax	       251	fsck.c	FUNCTION_13	IF_1
0x400094d	     0xf84d3010000	                            je 0x4000b26	       251	fsck.c	FUNCTION_13	IF_1
0x4000953	    0x8b0500000000	            mov eax, dword [0x04000959] 	       258	fsck.c	FUNCTION_13	IF_2
0x4000959	            0x85c0	                           test eax, eax	       258	fsck.c	FUNCTION_13	IF_2
0x400095b	            0x7435	                            je 0x4000992	       258	fsck.c	FUNCTION_13	IF_2
0x400095d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000961	          0x4889c7	                            mov rdi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000964	      0xe884f8ffff	                call sym.describe_object	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000969	          0x4889c3	                            mov rbx, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x400096c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000970	          0x4889c7	                            mov rdi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000973	      0xe803f9ffff	                 call sym.printable_type	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000978	          0x4889da	                            mov rdx, rbx	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x400097b	          0x4889c6	                            mov rsi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x400097e	      0xbf00000000	                              mov edi, 0	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000983	      0xb800000000	                              mov eax, 0	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x4000988	      0xe800000000	                          call 0x400098d	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x400098d	      0xe998010000	                           jmp 0x4000b2a	       261	fsck.c	FUNCTION_13	IF_2
0x4000992	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	fsck.c	FUNCTION_13	IF_3
0x4000996	            0x8b00	                    mov eax, dword [rax]	       276	fsck.c	FUNCTION_13	IF_3
0x4000998	          0xc1e804	                              shr eax, 4	       276	fsck.c	FUNCTION_13	IF_3
0x400099b	      0x25ffffff07	                      and eax, 0x7ffffff	       276	fsck.c	FUNCTION_13	IF_3
0x40009a0	          0x83e008	                              and eax, 8	       276	fsck.c	FUNCTION_13	IF_3
0x40009a3	            0x85c0	                           test eax, eax	       276	fsck.c	FUNCTION_13	IF_3
0x40009a5	     0xf857f010000	                           jne 0x4000b2a	       276	fsck.c	FUNCTION_13	IF_3
0x40009ab	    0x8b0500000000	            mov eax, dword [0x040009b1] 	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x40009b1	            0x85c0	                           test eax, eax	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x40009b3	            0x7430	                            je 0x40009e5	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x40009b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009b9	          0x4889c7	                            mov rdi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009bc	      0xe82cf8ffff	                call sym.describe_object	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009c1	          0x4889c3	                            mov rbx, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009c8	          0x4889c7	                            mov rdi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009cb	      0xe8abf8ffff	                 call sym.printable_type	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009d0	          0x4889da	                            mov rdx, rbx	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009d3	          0x4889c6	                            mov rsi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009d6	      0xbf00000000	                              mov edi, 0	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009db	      0xb800000000	                              mov eax, 0	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009e0	      0xe800000000	                          call 0x40009e5	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x40009e5	    0x8b0500000000	            mov eax, dword [0x040009eb] 	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x40009eb	            0x85c0	                           test eax, eax	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x40009ed	     0xf8436010000	                            je 0x4000b29	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x40009f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x40009f7	          0x4889c7	                            mov rdi, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x40009fa	      0xe8eef7ffff	                call sym.describe_object	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x40009ff	          0x4889c2	                            mov rdx, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x4000a06	           0xfb600	                   movzx eax, byte [rax]	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x4000a09	          0x83e00e	                            and eax, 0xe	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x4000a0c	            0x3c02	                               cmp al, 2	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a0e	            0x7507	                           jne 0x4000a17	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a10	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a15	            0xeb05	                           jmp 0x4000a1c	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a17	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a1c	          0x4889c6	                            mov rsi, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a1f	      0xbf00000000	                              mov edi, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a24	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a29	      0xe800000000	                          call 0x4000a2e	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a2e	        0x488945e0	             mov qword [rbp - 0x20], rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x4000a32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x4000a36	          0x4889c7	                            mov rdi, rax	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x4000a39	      0xe800000000	                          call 0x4000a3e	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x4000a3e	            0x85c0	                           test eax, eax	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x4000a40	            0x7425	                            je 0x4000a67	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x4000a42	      0xbf00000000	                              mov edi, 0	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0x4000a47	      0xb800000000	                              mov eax, 0	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0x4000a4c	      0xe800000000	                          call 0x4000a51	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0x4000a51	      0xe8eaf5ffff	                    call sym.const_error	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0x4000a56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0x4000a5a	          0x4889c7	                            mov rdi, rax	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0x4000a5d	      0xe800000000	                          call 0x4000a62	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0x4000a62	      0xe9c3000000	                           jmp 0x4000b2a	       289	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0x4000a67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_11
0x4000a6b	      0xbe00000000	                              mov esi, 0	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_11
0x4000a70	          0x4889c7	                            mov rdi, rax	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_11
0x4000a73	      0xe800000000	                          call 0x4000a78	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_11
0x4000a78	        0x488945e8	             mov qword [rbp - 0x18], rax	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_11
0x4000a7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0x4000a80	           0xfb600	                   movzx eax, byte [rax]	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0x4000a83	          0x83e00e	                            and eax, 0xe	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0x4000a86	            0x3c06	                               cmp al, 6	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0x4000a88	            0x7542	                           jne 0x4000acc	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0x4000a8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000a8e	        0x488d5804	                      lea rbx, [rax + 4]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000a92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000a96	          0x4889c7	                            mov rdi, rax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000a99	      0xe800000000	                          call 0x4000a9e	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000a9e	      0xb901000000	                              mov ecx, 1	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000aa3	      0xba00000000	                              mov edx, 0	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000aa8	          0x4889de	                            mov rsi, rbx	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000aab	            0x89c7	                            mov edi, eax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000aad	      0xe800000000	                          call 0x4000ab2	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000ab2	            0x85c0	                           test eax, eax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000ab4	            0x743b	                            je 0x4000af1	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_13
0x4000ab6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_14
0x4000aba	          0x4889c6	                            mov rsi, rax	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_14
0x4000abd	      0xbf00000000	                              mov edi, 0	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_14
0x4000ac2	      0xb800000000	                              mov eax, 0	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_14
0x4000ac7	      0xe800000000	                          call 0x4000acc	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_14
0x4000acc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000ad0	          0x4889c7	                            mov rdi, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000ad3	      0xe815f7ffff	                call sym.describe_object	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000ad8	          0x4889c2	                            mov rdx, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000adb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000adf	      0xbe00000000	                              mov esi, 0	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000ae4	          0x4889c7	                            mov rdi, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000ae7	      0xb800000000	                              mov eax, 0	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000aec	      0xe800000000	                          call 0x4000af1	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_16
0x4000af1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_17
0x4000af5	          0x4889c7	                            mov rdi, rax	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_17
0x4000af8	      0xe800000000	                          call 0x4000afd	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_17
0x4000afd	            0x85c0	                           test eax, eax	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_17
0x4000aff	            0x7416	                            je 0x4000b17	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_17
0x4000b01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0x4000b05	          0x4889c6	                            mov rsi, rax	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0x4000b08	      0xbf00000000	                              mov edi, 0	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0x4000b0d	      0xb800000000	                              mov eax, 0	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0x4000b12	      0xe800000000	                          call 0x4000b17	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0x4000b17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_19
0x4000b1b	          0x4889c7	                            mov rdi, rax	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_19
0x4000b1e	      0xe800000000	                          call 0x4000b23	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_19
0x4000b23	              0x90	                                     nop	       302	fsck.c	FUNCTION_13	IF_3
0x4000b24	            0xeb03	                           jmp 0x4000b29	       302	fsck.c	FUNCTION_13	IF_3
0x4000b26	              0x90	                                     nop	       252	fsck.c	FUNCTION_13	IF_1
0x4000b27	            0xeb01	                           jmp 0x4000b2a	       252	fsck.c	FUNCTION_13	IF_1
0x4000b29	              0x90	                                     nop	       302	fsck.c	FUNCTION_13	IF_3
0x4000b2a	        0x4883c428	                           add rsp, 0x28	       310	fsck.c	FUNCTION_13
0x4000b2e	              0x5b	                                 pop rbx	       310	fsck.c	FUNCTION_13
0x4000b2f	              0x5d	                                 pop rbp	       310	fsck.c	FUNCTION_13
0x4000b30	              0xc3	                                     ret	       310	fsck.c	FUNCTION_13
strbuf_addstr	FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	17
0x400013b	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_42
0x400013c	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_42
0x400013f	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_42
0x4000143	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_42
0x4000147	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_42
0x400014b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_42	CALL_2
0x400014f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000152	      0xe800000000	                          call 0x4000157	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000157	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x400015a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_42	CALL_2
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000162	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000165	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_42	CALL_2
0x4000168	      0xe800000000	                          call 0x400016d	       279	strbuf.h	FUNCTION_42	CALL_2
0x400016d	              0x90	                                     nop	       280	strbuf.h	FUNCTION_42
0x400016e	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_42
0x400016f	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_42
mark_loose_for_connectivity	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	12
0x400190d	              0x55	                                push rbp	       648	fsck.c	FUNCTION_31
0x400190e	          0x4889e5	                            mov rbp, rsp	       648	fsck.c	FUNCTION_31
0x4001911	        0x4883ec20	                           sub rsp, 0x20	       648	fsck.c	FUNCTION_31
0x4001915	        0x48897df8	                mov qword [rbp - 8], rdi	       648	fsck.c	FUNCTION_31
0x4001919	        0x488975f0	             mov qword [rbp - 0x10], rsi	       648	fsck.c	FUNCTION_31
0x400191d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       648	fsck.c	FUNCTION_31
0x4001921	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	fsck.c	FUNCTION_31	CALL_1
0x4001925	          0x4889c7	                            mov rdi, rax	       649	fsck.c	FUNCTION_31	CALL_1
0x4001928	      0xe893ffffff	   call sym.mark_object_for_connectivity	       649	fsck.c	FUNCTION_31	CALL_1
0x400192d	      0xb800000000	                              mov eax, 0	       650	fsck.c	FUNCTION_31
0x4001932	              0xc9	                                   leave	       651	fsck.c	FUNCTION_31
0x4001933	              0xc3	                                     ret	       651	fsck.c	FUNCTION_31
cmd_fsck	FOR,5:CALL,32:DO,0:functions,0:SWITCH,0:IF,20:WHILE,0:ELSE,1	346
0x400195e	              0x55	                                push rbp	       686	fsck.c	FUNCTION_33
0x400195f	          0x4889e5	                            mov rbp, rsp	       686	fsck.c	FUNCTION_33
0x4001962	              0x53	                                push rbx	       686	fsck.c	FUNCTION_33
0x4001963	    0x4881ec980000	                           sub rsp, 0x98	       686	fsck.c	FUNCTION_33
0x400196a	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       686	fsck.c	FUNCTION_33
0x4001970	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       686	fsck.c	FUNCTION_33
0x4001977	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       686	fsck.c	FUNCTION_33
0x400197e	    0x64488b042528	                mov rax, qword fs:[0x28]	       686	fsck.c	FUNCTION_33
0x4001987	        0x488945e8	             mov qword [rbp - 0x18], rax	       686	fsck.c	FUNCTION_33
0x400198b	            0x31c0	                            xor eax, eax	       686	fsck.c	FUNCTION_33
0x400198d	    0xc70500000000	               mov dword [0x04001997], 0	       691	fsck.c	FUNCTION_33
0x4001997	    0xc70500000000	               mov dword [0x040019a1], 0	       693	fsck.c	FUNCTION_33
0x40019a1	    0xc70500000000	               mov dword [0x040019ab], 0	       694	fsck.c	FUNCTION_33
0x40019ab	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       696	fsck.c	FUNCTION_33	CALL_1
0x40019b2	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       696	fsck.c	FUNCTION_33	CALL_1
0x40019b9	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       696	fsck.c	FUNCTION_33	CALL_1
0x40019bf	    0x41b900000000	                              mov r9d, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x40019c5	    0x41b800000000	                              mov r8d, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x40019cb	      0xb900000000	                              mov ecx, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x40019d0	            0x89c7	                            mov edi, eax	       696	fsck.c	FUNCTION_33	CALL_1
0x40019d2	      0xe800000000	                          call 0x40019d7	       696	fsck.c	FUNCTION_33	CALL_1
0x40019d7	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       696	fsck.c	FUNCTION_33	CALL_1
0x40019dd	    0x48c705000000	               mov qword [0x040019e8], 0	       698	fsck.c	FUNCTION_33
0x40019e8	    0x48c705000000	               mov qword [0x040019f3], 0	       699	fsck.c	FUNCTION_33
0x40019f3	    0x48c705000000	               mov qword [0x040019fe], 0	       700	fsck.c	FUNCTION_33
0x40019fe	    0x8b0500000000	            mov eax, dword [0x04001a04] 	       701	fsck.c	FUNCTION_33	IF_1
0x4001a04	            0x85c0	                           test eax, eax	       701	fsck.c	FUNCTION_33	IF_1
0x4001a06	            0x7410	                            je 0x4001a18	       701	fsck.c	FUNCTION_33	IF_1
0x4001a08	     0xfb605000000	           movzx eax, byte [0x04001a0f] 	       702	fsck.c	FUNCTION_33	IF_1
0x4001a0f	          0x83c801	                               or eax, 1	       702	fsck.c	FUNCTION_33	IF_1
0x4001a12	    0x880500000000	               mov byte [0x04001a18], al	       702	fsck.c	FUNCTION_33	IF_1
0x4001a18	    0x8b0500000000	            mov eax, dword [0x04001a1e] 	       704	fsck.c	FUNCTION_33	IF_2
0x4001a1e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       704	fsck.c	FUNCTION_33	IF_2
0x4001a21	            0x7510	                           jne 0x4001a33	       704	fsck.c	FUNCTION_33	IF_2
0x4001a23	      0xbf02000000	                              mov edi, 2	       705	fsck.c	FUNCTION_33	CALL_2
0x4001a28	      0xe800000000	                          call 0x4001a2d	       705	fsck.c	FUNCTION_33	CALL_2
0x4001a2d	    0x890500000000	            mov dword [0x04001a33], eax 	       705	fsck.c	FUNCTION_33	CALL_2
0x4001a33	    0x8b0500000000	            mov eax, dword [0x04001a39] 	       706	fsck.c	FUNCTION_33	IF_3
0x4001a39	            0x85c0	                           test eax, eax	       706	fsck.c	FUNCTION_33	IF_3
0x4001a3b	            0x740a	                            je 0x4001a47	       706	fsck.c	FUNCTION_33	IF_3
0x4001a3d	    0xc70500000000	               mov dword [0x04001a47], 0	       707	fsck.c	FUNCTION_33	IF_3
0x4001a47	    0x8b0500000000	            mov eax, dword [0x04001a4d] 	       709	fsck.c	FUNCTION_33	IF_4
0x4001a4d	            0x85c0	                           test eax, eax	       709	fsck.c	FUNCTION_33	IF_4
0x4001a4f	            0x7414	                            je 0x4001a65	       709	fsck.c	FUNCTION_33	IF_4
0x4001a51	    0xc70500000000	               mov dword [0x04001a5b], 1	       710	fsck.c	FUNCTION_33	IF_4
0x4001a5b	    0xc70500000000	               mov dword [0x04001a65], 0	       711	fsck.c	FUNCTION_33	IF_4
0x4001a65	    0x8b0500000000	            mov eax, dword [0x04001a6b] 	       714	fsck.c	FUNCTION_33	IF_5
0x4001a6b	            0x85c0	                           test eax, eax	       714	fsck.c	FUNCTION_33	IF_5
0x4001a6d	            0x7416	                            je 0x4001a85	       714	fsck.c	FUNCTION_33	IF_5
0x4001a6f	      0xbe18000000	                           mov esi, 0x18	       716	fsck.c	FUNCTION_33	CALL_3
0x4001a74	      0xbf01000000	                              mov edi, 1	       716	fsck.c	FUNCTION_33	CALL_3
0x4001a79	      0xe800000000	                          call 0x4001a7e	       716	fsck.c	FUNCTION_33	CALL_3
0x4001a7e	    0x488905000000	            mov qword [0x04001a85], rax 	       715	fsck.c	FUNCTION_33	IF_5
0x4001a85	      0xbe00000000	                              mov esi, 0	       718	fsck.c	FUNCTION_33	CALL_4
0x4001a8a	      0xbf00000000	                              mov edi, 0	       718	fsck.c	FUNCTION_33	CALL_4
0x4001a8f	      0xe800000000	                          call 0x4001a94	       718	fsck.c	FUNCTION_33	CALL_4
0x4001a94	      0xe85ffbffff	                 call sym.fsck_head_link	       720	fsck.c	FUNCTION_33	CALL_5
0x4001a99	    0x8b0500000000	            mov eax, dword [0x04001a9f] 	       721	fsck.c	FUNCTION_33	IF_6
0x4001a9f	            0x85c0	                           test eax, eax	       721	fsck.c	FUNCTION_33	IF_6
0x4001aa1	            0x742d	                            je 0x4001ad0	       721	fsck.c	FUNCTION_33	IF_6
0x4001aa3	      0xba00000000	                              mov edx, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x4001aa8	      0xbe00000000	                              mov esi, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x4001aad	      0xbf00000000	                              mov edi, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x4001ab2	      0xe800000000	                          call 0x4001ab7	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x4001ab7	      0xba00000000	                              mov edx, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x4001abc	      0xbe00000000	                              mov esi, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x4001ac1	      0xbf00000000	                              mov edi, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x4001ac6	      0xe800000000	                          call 0x4001acb	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x4001acb	      0xe953010000	                           jmp 0x4001c23	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x4001ad0	      0xe800000000	                          call 0x4001ad5	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x4001ad5	          0x4889c7	                            mov rdi, rax	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x4001ad8	      0xe855faffff	                call sym.fsck_object_dir	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x4001add	    0x488b05000000	            mov rax, qword [0x04001ae4] 	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x4001ae4	          0x4889c7	                            mov rdi, rax	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x4001ae7	      0xe800000000	                          call 0x4001aec	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x4001aec	    0x488b05000000	            mov rax, qword [0x04001af3] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x4001af3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x4001af7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x4001afb	        0x488945a8	             mov qword [rbp - 0x58], rax	       730	fsck.c	FUNCTION_33	ELSE_1
0x4001aff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b03	        0x48894598	             mov qword [rbp - 0x68], rax	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b07	            0xeb1d	                           jmp 0x4001b26	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b09	        0x488b4598	             mov rax, qword [rbp - 0x68]	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x4001b0d	    0x480540010000	                          add rax, 0x140	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x4001b13	          0x4889c7	                            mov rdi, rax	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x4001b16	      0xe817faffff	                call sym.fsck_object_dir	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x4001b1b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b1f	          0x488b00	                    mov rax, qword [rax]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b22	        0x48894598	             mov qword [rbp - 0x68], rax	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b26	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b2b	            0x75dc	                           jne 0x4001b09	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x4001b2d	    0x8b0500000000	            mov eax, dword [0x04001b33] 	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b33	            0x85c0	                           test eax, eax	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b35	     0xf84e8000000	                            je 0x4001c23	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b3b	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       736	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b42	    0xc74588000000	               mov dword [rbp - 0x78], 0	       736	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b49	    0x48c745900000	               mov qword [rbp - 0x70], 0	       737	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x4001b51	    0x8b0500000000	            mov eax, dword [0x04001b57] 	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x4001b57	            0x85c0	                           test eax, eax	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x4001b59	            0x7460	                            je 0x4001bbb	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x4001b5b	    0x488b05000000	            mov rax, qword [0x04001b62] 	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b62	          0x4889c7	                            mov rdi, rax	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b65	      0xe800000000	                          call 0x4001b6a	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b6a	        0x488945a0	             mov qword [rbp - 0x60], rax	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b6e	            0xeb28	                           jmp 0x4001b98	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b70	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x4001b74	          0x4889c7	                            mov rdi, rax	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x4001b77	      0xe800000000	                          call 0x4001b7c	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x4001b7c	            0x85c0	                           test eax, eax	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x4001b7e	            0x750c	                           jne 0x4001b8c	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x4001b80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b84	          0x8b4038	            mov eax, dword [rax + 0x38] 	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b87	           0x14584	             add dword [rbp - 0x7c], eax	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b8a	            0xeb01	                           jmp 0x4001b8d	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b8c	              0x90	                                     nop	       743	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9
0x4001b8d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b91	          0x488b00	                    mov rax, qword [rax]	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b94	        0x488945a0	             mov qword [rbp - 0x60], rax	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x4001b98	      0x48837da000	               cmp qword [rbp - 0x60], 0	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b9d	            0x75d1	                           jne 0x4001b70	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x4001b9f	          0x8b5d84	             mov ebx, dword [rbp - 0x7c]	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001ba2	      0xbf00000000	                              mov edi, 0	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001ba7	      0xe8c4e5ffff	                               call sym.	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001bac	          0x4889de	                            mov rsi, rbx	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001baf	          0x4889c7	                            mov rdi, rax	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001bb2	      0xe800000000	                          call 0x4001bb7	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001bb7	        0x48894590	             mov qword [rbp - 0x70], rax	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x4001bbb	    0x488b05000000	            mov rax, qword [0x04001bc2] 	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001bc2	          0x4889c7	                            mov rdi, rax	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001bc5	      0xe800000000	                          call 0x4001bca	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001bca	        0x488945a0	             mov qword [rbp - 0x60], rax	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001bce	            0xeb40	                           jmp 0x4001c10	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001bd0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001bd4	          0x8b4d88	             mov ecx, dword [rbp - 0x78]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001bd7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001bdb	      0xbe00000000	                              mov esi, 0	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001be0	          0x4889c7	                            mov rdi, rax	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001be3	      0xe800000000	                          call 0x4001be8	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001be8	            0x85c0	                           test eax, eax	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001bea	            0x740f	                            je 0x4001bfb	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x4001bec	    0x8b0500000000	            mov eax, dword [0x04001bf2] 	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x4001bf2	          0x83c804	                               or eax, 4	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x4001bf5	    0x890500000000	            mov dword [0x04001bfb], eax 	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x4001bfb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001bff	          0x8b4038	            mov eax, dword [rax + 0x38] 	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001c02	           0x14588	             add dword [rbp - 0x78], eax	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001c05	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001c09	          0x488b00	                    mov rax, qword [rax]	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001c0c	        0x488945a0	             mov qword [rbp - 0x60], rax	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x4001c10	      0x48837da000	               cmp qword [rbp - 0x60], 0	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001c15	            0x75b9	                           jne 0x4001bd0	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x4001c17	        0x488d4590	                   lea rax, [rbp - 0x70]	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x4001c1b	          0x4889c7	                            mov rdi, rax	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x4001c1e	      0xe800000000	                          call 0x4001c23	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x4001c23	    0xc74580000000	               mov dword [rbp - 0x80], 0	       761	fsck.c	FUNCTION_33	FOR_4
0x4001c2a	      0xe94c010000	                           jmp 0x4001d7b	       761	fsck.c	FUNCTION_33	FOR_4
0x4001c2f	          0x8b4580	             mov eax, dword [rbp - 0x80]	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c32	            0x4898	                                    cdqe	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c34	    0x488d14c50000	                        lea rdx, [rax*8]	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c3c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c43	          0x4801d0	                            add rax, rdx	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c46	          0x488b00	                    mov rax, qword [rax]	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c49	        0x488945b0	             mov qword [rbp - 0x50], rax	       762	fsck.c	FUNCTION_33	FOR_4
0x4001c4d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c51	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c55	          0x4889d6	                            mov rsi, rdx	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c58	          0x4889c7	                            mov rdi, rax	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c5b	      0xe800000000	                          call 0x4001c60	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c60	            0x85c0	                           test eax, eax	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c62	     0xf85e2000000	                           jne 0x4001d4a	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x4001c68	        0x488d45d0	                   lea rax, [rbp - 0x30]	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x4001c6c	          0x4889c7	                            mov rdi, rax	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x4001c6f	      0xe800000000	                          call 0x4001c74	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x4001c74	        0x488945b8	             mov qword [rbp - 0x48], rax	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x4001c78	      0x48837db800	               cmp qword [rbp - 0x48], 0	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c7d	            0x7415	                            je 0x4001c94	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c7f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c83	            0x8b00	                    mov eax, dword [rax]	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c85	          0xc1e804	                              shr eax, 4	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c88	      0x25ffffff07	                      and eax, 0x7ffffff	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c8d	          0x83e004	                              and eax, 4	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c90	            0x85c0	                           test eax, eax	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c92	            0x754b	                           jne 0x4001cdf	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001c94	        0x488d45d0	                   lea rax, [rbp - 0x30]	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x4001c98	          0x4889c7	                            mov rdi, rax	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x4001c9b	      0xe800000000	                          call 0x4001ca0	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x4001ca0	            0x85c0	                           test eax, eax	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x4001ca2	     0xf85ce000000	                           jne 0x4001d76	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x4001ca8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cac	          0x4889c7	                            mov rdi, rax	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001caf	      0xe800000000	                          call 0x4001cb4	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cb4	          0x4889c6	                            mov rsi, rax	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cb7	      0xbf00000000	                              mov edi, 0	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cbc	      0xb800000000	                              mov eax, 0	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cc1	      0xe800000000	                          call 0x4001cc6	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001cc6	      0xe875e3ffff	                    call sym.const_error	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_22
0x4001ccb	    0x8b0500000000	            mov eax, dword [0x04001cd1] 	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001cd1	          0x83c801	                               or eax, 1	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001cd4	    0x890500000000	            mov dword [0x04001cda], eax 	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001cda	      0xe998000000	                           jmp 0x4001d77	       772	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x4001cdf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001ce3	            0x8b00	                    mov eax, dword [rax]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001ce5	          0xc1e804	                              shr eax, 4	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001ce8	      0x25ffffff07	                      and eax, 0x7ffffff	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001ced	          0x83c808	                               or eax, 8	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001cf0	            0x89c2	                            mov edx, eax	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001cf2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001cf6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001cfc	            0x89d1	                            mov ecx, edx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001cfe	          0xc1e104	                              shl ecx, 4	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d01	            0x8b10	                    mov edx, dword [rax]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d03	    0x81e20f000080	                     and edx, 0x8000000f	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d09	             0x9ca	                             or edx, ecx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d0b	            0x8910	                    mov dword [rax], edx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d0d	    0x8b0500000000	            mov eax, dword [0x04001d13] 	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x4001d13	            0x85c0	                           test eax, eax	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x4001d15	            0x7425	                            je 0x4001d3c	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x4001d17	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_24
0x4001d1b	          0x4889c7	                            mov rdi, rax	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_24
0x4001d1e	      0xe800000000	                          call 0x4001d23	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_24
0x4001d23	          0x4889c2	                            mov rdx, rax	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_24
0x4001d26	    0x488b05000000	            mov rax, qword [0x04001d2d] 	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_23
0x4001d2d	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_23
0x4001d31	          0x4889ce	                            mov rsi, rcx	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_23
0x4001d34	          0x4889c7	                            mov rdi, rax	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_23
0x4001d37	      0xe800000000	                          call 0x4001d3c	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_23
0x4001d3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x4001d40	          0x4889c7	                            mov rdi, rax	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x4001d43	      0xe8cbe9ffff	          call sym.mark_object_reachable	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x4001d48	            0xeb2d	                           jmp 0x4001d77	       780	fsck.c	FUNCTION_33	FOR_4	IF_11
0x4001d4a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d4e	          0x4889c6	                            mov rsi, rax	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d51	      0xbf00000000	                              mov edi, 0	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d56	      0xb800000000	                              mov eax, 0	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d5b	      0xe800000000	                          call 0x4001d60	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d60	      0xe8dbe2ffff	                    call sym.const_error	       782	fsck.c	FUNCTION_33	FOR_4
0x4001d65	    0x8b0500000000	            mov eax, dword [0x04001d6b] 	       783	fsck.c	FUNCTION_33	FOR_4
0x4001d6b	          0x83c801	                               or eax, 1	       783	fsck.c	FUNCTION_33	FOR_4
0x4001d6e	    0x890500000000	            mov dword [0x04001d74], eax 	       783	fsck.c	FUNCTION_33	FOR_4
0x4001d74	            0xeb01	                           jmp 0x4001d77	       783	fsck.c	FUNCTION_33	FOR_4
0x4001d76	              0x90	                                     nop	       769	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13
0x4001d77	        0x83458001	               add dword [rbp - 0x80], 1	       761	fsck.c	FUNCTION_33	FOR_4
0x4001d7b	          0x8b4580	             mov eax, dword [rbp - 0x80]	       761	fsck.c	FUNCTION_33	FOR_4
0x4001d7e	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       761	fsck.c	FUNCTION_33	FOR_4
0x4001d84	     0xf8ca5feffff	                            jl 0x4001c2f	       761	fsck.c	FUNCTION_33	FOR_4
0x4001d8a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       791	fsck.c	FUNCTION_33	IF_15
0x4001d91	            0x750f	                           jne 0x4001da2	       791	fsck.c	FUNCTION_33	IF_15
0x4001d93	      0xe8d4f4ffff	              call sym.get_default_heads	       792	fsck.c	FUNCTION_33	IF_15	CALL_26
0x4001d98	    0xc70500000000	               mov dword [0x04001da2], 1	       793	fsck.c	FUNCTION_33	IF_15
0x4001da2	    0x8b0500000000	            mov eax, dword [0x04001da8] 	       796	fsck.c	FUNCTION_33	IF_16
0x4001da8	            0x85c0	                           test eax, eax	       796	fsck.c	FUNCTION_33	IF_16
0x4001daa	     0xf8454010000	                            je 0x4001f04	       796	fsck.c	FUNCTION_33	IF_16
0x4001db0	    0xc70500000000	               mov dword [0x04001dba], 1	       797	fsck.c	FUNCTION_33	IF_16
0x4001dba	    0xc70500000000	               mov dword [0x04001dc4], 1	       798	fsck.c	FUNCTION_33	IF_16
0x4001dc4	      0xbf00000000	                              mov edi, 0	       799	fsck.c	FUNCTION_33	IF_16
0x4001dc9	      0xe800000000	                          call 0x4001dce	       799	fsck.c	FUNCTION_33	IF_16
0x4001dce	    0xc74580000000	               mov dword [rbp - 0x80], 0	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001dd5	      0xe9fe000000	                           jmp 0x4001ed8	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001dda	    0x488b05000000	            mov rax, qword [0x04001de1] 	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001de1	          0x8b5580	             mov edx, dword [rbp - 0x80]	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001de4	          0x4863d2	                         movsxd rdx, edx	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001de7	        0x48c1e203	                              shl rdx, 3	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001deb	          0x4801d0	                            add rax, rdx	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001dee	          0x488b00	                    mov rax, qword [rax]	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001df1	          0x8b4034	            mov eax, dword [rax + 0x34] 	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001df4	          0x89458c	             mov dword [rbp - 0x74], eax	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001df7	          0x8b458c	             mov eax, dword [rbp - 0x74]	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001dfa	      0x2500f00000	                         and eax, 0xf000	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001dff	      0x3d00e00000	                         cmp eax, 0xe000	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001e04	     0xf84c6000000	                            je 0x4001ed0	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001e0a	    0x488b05000000	            mov rax, qword [0x04001e11] 	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e11	          0x8b5580	             mov edx, dword [rbp - 0x80]	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e14	          0x4863d2	                         movsxd rdx, edx	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e17	        0x48c1e203	                              shl rdx, 3	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e1b	          0x4801d0	                            add rax, rdx	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e1e	          0x488b00	                    mov rax, qword [rax]	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e21	        0x4883c044	                           add rax, 0x44	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e25	          0x4889c7	                            mov rdi, rax	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e28	      0xe800000000	                          call 0x4001e2d	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e2d	        0x488945c0	             mov qword [rbp - 0x40], rax	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_27
0x4001e31	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       809	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x4001e36	     0xf8497000000	                            je 0x4001ed3	       809	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x4001e3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       811	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e40	        0x488945c8	             mov qword [rbp - 0x38], rax	       811	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e48	            0x8b00	                    mov eax, dword [rax]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e4a	          0xc1e804	                              shr eax, 4	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e4d	      0x25ffffff07	                      and eax, 0x7ffffff	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e52	          0x83c808	                               or eax, 8	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e55	            0x89c2	                            mov edx, eax	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e57	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e5b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e61	            0x89d1	                            mov ecx, edx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e63	          0xc1e104	                              shl ecx, 4	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e66	            0x8b10	                    mov edx, dword [rax]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e68	    0x81e20f000080	                     and edx, 0x8000000f	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e6e	             0x9ca	                             or edx, ecx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e70	            0x8910	                    mov dword [rax], edx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001e72	    0x8b0500000000	            mov eax, dword [0x04001e78] 	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x4001e78	            0x85c0	                           test eax, eax	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x4001e7a	            0x7446	                            je 0x4001ec2	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x4001e7c	    0x488b05000000	            mov rax, qword [0x04001e83] 	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e83	          0x8b5580	             mov edx, dword [rbp - 0x80]	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e86	          0x4863d2	                         movsxd rdx, edx	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e89	        0x48c1e203	                              shl rdx, 3	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e8d	          0x4801d0	                            add rax, rdx	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e90	          0x488b00	                    mov rax, qword [rax]	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e93	        0x4883c058	                           add rax, 0x58	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e97	          0x4889c6	                            mov rsi, rax	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e9a	      0xbf00000000	                              mov edi, 0	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001e9f	      0xb800000000	                              mov eax, 0	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001ea4	      0xe800000000	                          call 0x4001ea9	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001ea9	          0x4889c2	                            mov rdx, rax	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_29
0x4001eac	    0x488b05000000	            mov rax, qword [0x04001eb3] 	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_28
0x4001eb3	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_28
0x4001eb7	          0x4889ce	                            mov rsi, rcx	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_28
0x4001eba	          0x4889c7	                            mov rdi, rax	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_28
0x4001ebd	      0xe800000000	                          call 0x4001ec2	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_28
0x4001ec2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_30
0x4001ec6	          0x4889c7	                            mov rdi, rax	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_30
0x4001ec9	      0xe845e8ffff	          call sym.mark_object_reachable	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_30
0x4001ece	            0xeb04	                           jmp 0x4001ed4	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_30
0x4001ed0	              0x90	                                     nop	       807	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001ed1	            0xeb01	                           jmp 0x4001ed4	       807	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x4001ed3	              0x90	                                     nop	       810	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x4001ed4	        0x83458001	               add dword [rbp - 0x80], 1	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001ed8	    0x8b1500000000	            mov edx, dword [0x04001ede] 	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001ede	          0x8b4580	             mov eax, dword [rbp - 0x80]	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001ee1	            0x39c2	                            cmp edx, eax	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001ee3	     0xf87f1feffff	                            ja 0x4001dda	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x4001ee9	    0x488b05000000	            mov rax, qword [0x04001ef0] 	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x4001ef0	          0x4885c0	                           test rax, rax	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x4001ef3	            0x740f	                            je 0x4001f04	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x4001ef5	    0x488b05000000	            mov rax, qword [0x04001efc] 	       820	fsck.c	FUNCTION_33	IF_16	CALL_31
0x4001efc	          0x4889c7	                            mov rdi, rax	       820	fsck.c	FUNCTION_33	IF_16	CALL_31
0x4001eff	      0xe84bf8ffff	                call sym.fsck_cache_tree	       820	fsck.c	FUNCTION_33	IF_16	CALL_31
0x4001f04	      0xe898ecffff	             call sym.check_connectivity	       823	fsck.c	FUNCTION_33	CALL_32
0x4001f09	    0x8b0500000000	            mov eax, dword [0x04001f0f] 	       824	fsck.c	FUNCTION_33
0x4001f0f	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       825	fsck.c	FUNCTION_33
0x4001f13	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       825	fsck.c	FUNCTION_33
0x4001f1c	            0x7405	                            je 0x4001f23	       825	fsck.c	FUNCTION_33
0x4001f1e	      0xe800000000	                          call 0x4001f23	       825	fsck.c	FUNCTION_33
0x4001f23	    0x4881c4980000	                           add rsp, 0x98	       825	fsck.c	FUNCTION_33
0x4001f2a	              0x5b	                                 pop rbx	       825	fsck.c	FUNCTION_33
0x4001f2b	              0x5d	                                 pop rbp	       825	fsck.c	FUNCTION_33
0x4001f2c	              0xc3	                                     ret	       825	fsck.c	FUNCTION_33
describe_object	FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	36
0x40001ed	              0x55	                                push rbp	        52	fsck.c	FUNCTION_1
0x40001ee	          0x4889e5	                            mov rbp, rsp	        52	fsck.c	FUNCTION_1
0x40001f1	        0x4883ec20	                           sub rsp, 0x20	        52	fsck.c	FUNCTION_1
0x40001f5	        0x48897de8	             mov qword [rbp - 0x18], rdi	        52	fsck.c	FUNCTION_1
0x40001f9	    0x8b0500000000	            mov eax, dword [0x040001ff] 	        54	fsck.c	FUNCTION_1
0x40001ff	            0x85c0	                           test eax, eax	        55	fsck.c	FUNCTION_1	CALL_1
0x4000201	            0x7418	                            je 0x400021b	        55	fsck.c	FUNCTION_1	CALL_1
0x4000203	    0x488b05000000	            mov rax, qword [0x0400020a] 	        55	fsck.c	FUNCTION_1	CALL_1
0x400020a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        55	fsck.c	FUNCTION_1	CALL_1
0x400020e	          0x4889d6	                            mov rsi, rdx	        55	fsck.c	FUNCTION_1	CALL_1
0x4000211	          0x4889c7	                            mov rdi, rax	        55	fsck.c	FUNCTION_1	CALL_1
0x4000214	      0xe800000000	                          call 0x4000219	        55	fsck.c	FUNCTION_1	CALL_1
0x4000219	            0xeb05	                           jmp 0x4000220	        55	fsck.c	FUNCTION_1	CALL_1
0x400021b	      0xb800000000	                              mov eax, 0	        55	fsck.c	FUNCTION_1	CALL_1
0x4000220	        0x488945f8	                mov qword [rbp - 8], rax	        54	fsck.c	FUNCTION_1
0x4000224	      0xbe00000000	                              mov esi, 0	        57	fsck.c	FUNCTION_1
0x4000229	      0xbf00000000	                              mov edi, 0	        57	fsck.c	FUNCTION_1
0x400022e	      0xe86efeffff	                  call sym.strbuf_setlen	        57	fsck.c	FUNCTION_1
0x4000233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	fsck.c	FUNCTION_1	CALL_3
0x4000237	        0x4883c004	                              add rax, 4	        58	fsck.c	FUNCTION_1	CALL_3
0x400023b	          0x4889c7	                            mov rdi, rax	        58	fsck.c	FUNCTION_1	CALL_3
0x400023e	      0xe800000000	                          call 0x4000243	        58	fsck.c	FUNCTION_1	CALL_3
0x4000243	          0x4889c6	                            mov rsi, rax	        58	fsck.c	FUNCTION_1	CALL_3
0x4000246	      0xbf00000000	                              mov edi, 0	        58	fsck.c	FUNCTION_1	CALL_3
0x400024b	      0xe8ebfeffff	                  call sym.strbuf_addstr	        58	fsck.c	FUNCTION_1	CALL_3
0x4000250	      0x48837df800	                  cmp qword [rbp - 8], 0	        59	fsck.c	FUNCTION_1	IF_1
0x4000255	            0x741b	                            je 0x4000272	        59	fsck.c	FUNCTION_1	IF_1
0x4000257	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	fsck.c	FUNCTION_1	CALL_4
0x400025b	          0x4889c2	                            mov rdx, rax	        60	fsck.c	FUNCTION_1	CALL_4
0x400025e	      0xbe00000000	                              mov esi, 0	        60	fsck.c	FUNCTION_1	CALL_4
0x4000263	      0xbf00000000	                              mov edi, 0	        60	fsck.c	FUNCTION_1	CALL_4
0x4000268	      0xb800000000	                              mov eax, 0	        60	fsck.c	FUNCTION_1	CALL_4
0x400026d	      0xe800000000	                          call 0x4000272	        60	fsck.c	FUNCTION_1	CALL_4
0x4000272	    0x488b05000000	            mov rax, qword [0x04000279] 	        62	fsck.c	FUNCTION_1
0x4000279	              0xc9	                                   leave	        63	fsck.c	FUNCTION_1
0x400027a	              0xc3	                                     ret	        63	fsck.c	FUNCTION_1
hashcmp	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	13
0x400019c	              0x55	                                push rbp	       974	cache.h	FUNCTION_83
0x400019d	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_83
0x40001a0	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_83
0x40001a4	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_83
0x40001a8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_83
0x40001ac	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_83	CALL_1
0x40001b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_83	CALL_1
0x40001b4	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_83	CALL_1
0x40001b9	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_83	CALL_1
0x40001bc	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_83	CALL_1
0x40001bf	      0xe800000000	                          call 0x40001c4	       975	cache.h	FUNCTION_83	CALL_1
0x40001c4	              0xc9	                                   leave	       976	cache.h	FUNCTION_83
0x40001c5	              0xc3	                                     ret	       976	cache.h	FUNCTION_83
fsck_handle_ref	FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,4:WHILE,0:ELSE,0	92
0x400110b	              0x55	                                push rbp	       452	fsck.c	FUNCTION_21
0x400110c	          0x4889e5	                            mov rbp, rsp	       452	fsck.c	FUNCTION_21
0x400110f	        0x4883ec30	                           sub rsp, 0x30	       452	fsck.c	FUNCTION_21
0x4001113	        0x48897de8	             mov qword [rbp - 0x18], rdi	       452	fsck.c	FUNCTION_21
0x4001117	        0x488975e0	             mov qword [rbp - 0x20], rsi	       452	fsck.c	FUNCTION_21
0x400111b	          0x8955dc	             mov dword [rbp - 0x24], edx	       452	fsck.c	FUNCTION_21
0x400111e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       452	fsck.c	FUNCTION_21
0x4001122	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	fsck.c	FUNCTION_21	CALL_1
0x4001126	          0x4889c7	                            mov rdi, rax	       455	fsck.c	FUNCTION_21	CALL_1
0x4001129	      0xe800000000	                          call 0x400112e	       455	fsck.c	FUNCTION_21	CALL_1
0x400112e	        0x488945f8	                mov qword [rbp - 8], rax	       455	fsck.c	FUNCTION_21	CALL_1
0x4001132	      0x48837df800	                  cmp qword [rbp - 8], 0	       456	fsck.c	FUNCTION_21	IF_1
0x4001137	            0x756c	                           jne 0x40011a5	       456	fsck.c	FUNCTION_21	IF_1
0x4001139	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400113d	          0x4889c7	                            mov rdi, rax	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4001140	      0xe800000000	                          call 0x4001145	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4001145	            0x85c0	                           test eax, eax	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4001147	            0x7419	                            je 0x4001162	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x4001149	    0x8b0500000000	            mov eax, dword [0x0400114f] 	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x400114f	          0x83c001	                              add eax, 1	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x4001152	    0x890500000000	            mov dword [0x04001158], eax 	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x4001158	      0xb800000000	                              mov eax, 0	       463	fsck.c	FUNCTION_21	IF_1	IF_2
0x400115d	      0xe908010000	                           jmp 0x400126a	       463	fsck.c	FUNCTION_21	IF_1	IF_2
0x4001162	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001166	          0x4889c7	                            mov rdi, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001169	      0xe800000000	                          call 0x400116e	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x400116e	          0x4889c2	                            mov rdx, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001175	          0x4889c6	                            mov rsi, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001178	      0xbf00000000	                              mov edi, 0	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x400117d	      0xb800000000	                              mov eax, 0	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001182	      0xe800000000	                          call 0x4001187	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x4001187	      0xe8b4eeffff	                    call sym.const_error	       465	fsck.c	FUNCTION_21	IF_1	CALL_3
0x400118c	    0x8b0500000000	            mov eax, dword [0x04001192] 	       466	fsck.c	FUNCTION_21	IF_1
0x4001192	          0x83c802	                               or eax, 2	       466	fsck.c	FUNCTION_21	IF_1
0x4001195	    0x890500000000	            mov dword [0x0400119b], eax 	       466	fsck.c	FUNCTION_21	IF_1
0x400119b	      0xb800000000	                              mov eax, 0	       468	fsck.c	FUNCTION_21	IF_1
0x40011a0	      0xe9c5000000	                           jmp 0x400126a	       468	fsck.c	FUNCTION_21	IF_1
0x40011a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011a9	           0xfb600	                   movzx eax, byte [rax]	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011ac	          0x83e00e	                            and eax, 0xe	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011af	            0x3c02	                               cmp al, 2	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011b1	            0x743a	                            je 0x40011ed	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011b7	          0x4889c7	                            mov rdi, rax	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011ba	      0xe800000000	                          call 0x40011bf	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011bf	            0x85c0	                           test eax, eax	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011c1	            0x742a	                            je 0x40011ed	       470	fsck.c	FUNCTION_21	IF_3	CALL_4
0x40011c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       471	fsck.c	FUNCTION_21	IF_3
0x40011c7	          0x4889c6	                            mov rsi, rax	       471	fsck.c	FUNCTION_21	IF_3
0x40011ca	      0xbf00000000	                              mov edi, 0	       471	fsck.c	FUNCTION_21	IF_3
0x40011cf	      0xb800000000	                              mov eax, 0	       471	fsck.c	FUNCTION_21	IF_3
0x40011d4	      0xe800000000	                          call 0x40011d9	       471	fsck.c	FUNCTION_21	IF_3
0x40011d9	      0xe862eeffff	                    call sym.const_error	       471	fsck.c	FUNCTION_21	IF_3
0x40011de	    0x8b0500000000	            mov eax, dword [0x040011e4] 	       472	fsck.c	FUNCTION_21	IF_3
0x40011e4	          0x83c808	                               or eax, 8	       472	fsck.c	FUNCTION_21	IF_3
0x40011e7	    0x890500000000	            mov dword [0x040011ed], eax 	       472	fsck.c	FUNCTION_21	IF_3
0x40011ed	    0x8b0500000000	            mov eax, dword [0x040011f3] 	       474	fsck.c	FUNCTION_21
0x40011f3	          0x83c001	                              add eax, 1	       474	fsck.c	FUNCTION_21
0x40011f6	    0x890500000000	            mov dword [0x040011fc], eax 	       474	fsck.c	FUNCTION_21
0x40011fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	fsck.c	FUNCTION_21
0x4001200	            0x8b00	                    mov eax, dword [rax]	       475	fsck.c	FUNCTION_21
0x4001202	          0xc1e804	                              shr eax, 4	       475	fsck.c	FUNCTION_21
0x4001205	      0x25ffffff07	                      and eax, 0x7ffffff	       475	fsck.c	FUNCTION_21
0x400120a	          0x83c808	                               or eax, 8	       475	fsck.c	FUNCTION_21
0x400120d	            0x89c2	                            mov edx, eax	       475	fsck.c	FUNCTION_21
0x400120f	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	fsck.c	FUNCTION_21
0x4001213	    0x81e2ffffff07	                      and edx, 0x7ffffff	       475	fsck.c	FUNCTION_21
0x4001219	            0x89d1	                            mov ecx, edx	       475	fsck.c	FUNCTION_21
0x400121b	          0xc1e104	                              shl ecx, 4	       475	fsck.c	FUNCTION_21
0x400121e	            0x8b10	                    mov edx, dword [rax]	       475	fsck.c	FUNCTION_21
0x4001220	    0x81e20f000080	                     and edx, 0x8000000f	       475	fsck.c	FUNCTION_21
0x4001226	             0x9ca	                             or edx, ecx	       475	fsck.c	FUNCTION_21
0x4001228	            0x8910	                    mov dword [rax], edx	       475	fsck.c	FUNCTION_21
0x400122a	    0x8b0500000000	            mov eax, dword [0x04001230] 	       476	fsck.c	FUNCTION_21	IF_4
0x4001230	            0x85c0	                           test eax, eax	       476	fsck.c	FUNCTION_21	IF_4
0x4001232	            0x7425	                            je 0x4001259	       476	fsck.c	FUNCTION_21	IF_4
0x4001234	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	fsck.c	FUNCTION_21	CALL_6
0x4001238	          0x4889c7	                            mov rdi, rax	       478	fsck.c	FUNCTION_21	CALL_6
0x400123b	      0xe800000000	                          call 0x4001240	       478	fsck.c	FUNCTION_21	CALL_6
0x4001240	          0x4889c2	                            mov rdx, rax	       478	fsck.c	FUNCTION_21	CALL_6
0x4001243	    0x488b05000000	            mov rax, qword [0x0400124a] 	       477	fsck.c	FUNCTION_21	IF_4	CALL_5
0x400124a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       477	fsck.c	FUNCTION_21	IF_4	CALL_5
0x400124e	          0x4889ce	                            mov rsi, rcx	       477	fsck.c	FUNCTION_21	IF_4	CALL_5
0x4001251	          0x4889c7	                            mov rdi, rax	       477	fsck.c	FUNCTION_21	IF_4	CALL_5
0x4001254	      0xe800000000	                          call 0x4001259	       477	fsck.c	FUNCTION_21	IF_4	CALL_5
0x4001259	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	fsck.c	FUNCTION_21	CALL_7
0x400125d	          0x4889c7	                            mov rdi, rax	       479	fsck.c	FUNCTION_21	CALL_7
0x4001260	      0xe8aef4ffff	          call sym.mark_object_reachable	       479	fsck.c	FUNCTION_21	CALL_7
0x4001265	      0xb800000000	                              mov eax, 0	       481	fsck.c	FUNCTION_21
0x400126a	              0xc9	                                   leave	       482	fsck.c	FUNCTION_21
0x400126b	              0xc3	                                     ret	       482	fsck.c	FUNCTION_21
fsck_cruft	FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	21
0x40014b4	              0x55	                                push rbp	       551	fsck.c	FUNCTION_25
0x40014b5	          0x4889e5	                            mov rbp, rsp	       551	fsck.c	FUNCTION_25
0x40014b8	        0x4883ec20	                           sub rsp, 0x20	       551	fsck.c	FUNCTION_25
0x40014bc	        0x48897df8	                mov qword [rbp - 8], rdi	       551	fsck.c	FUNCTION_25
0x40014c0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       551	fsck.c	FUNCTION_25
0x40014c4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       551	fsck.c	FUNCTION_25
0x40014c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014cc	      0xbe00000000	                              mov esi, 0	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014d1	          0x4889c7	                            mov rdi, rax	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014d4	      0xe800000000	                          call 0x40014d9	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014d9	            0x85c0	                           test eax, eax	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014db	            0x751d	                           jne 0x40014fa	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x40014dd	    0x488b05000000	            mov rax, qword [0x040014e4] 	       553	fsck.c	FUNCTION_25	CALL_2
0x40014e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	fsck.c	FUNCTION_25	CALL_2
0x40014e8	      0xbe00000000	                              mov esi, 0	       553	fsck.c	FUNCTION_25	CALL_2
0x40014ed	          0x4889c7	                            mov rdi, rax	       553	fsck.c	FUNCTION_25	CALL_2
0x40014f0	      0xb800000000	                              mov eax, 0	       553	fsck.c	FUNCTION_25	CALL_2
0x40014f5	      0xe800000000	                          call 0x40014fa	       553	fsck.c	FUNCTION_25	CALL_2
0x40014fa	      0xb800000000	                              mov eax, 0	       554	fsck.c	FUNCTION_25
0x40014ff	              0xc9	                                   leave	       555	fsck.c	FUNCTION_25
0x4001500	              0xc3	                                     ret	       555	fsck.c	FUNCTION_25
skip_prefix	FOR,0:CALL,0:DO,1:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_55
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_55
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_55
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_55
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_55
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_55	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_55	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_55	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_55
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_55
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_55
fsck_obj	FOR,0:CALL,15:DO,0:functions,0:SWITCH,0:IF,10:WHILE,0:ELSE,0	147
0x4000c15	              0x55	                                push rbp	       344	fsck.c	FUNCTION_16
0x4000c16	          0x4889e5	                            mov rbp, rsp	       344	fsck.c	FUNCTION_16
0x4000c19	              0x53	                                push rbx	       344	fsck.c	FUNCTION_16
0x4000c1a	        0x4883ec38	                           sub rsp, 0x38	       344	fsck.c	FUNCTION_16
0x4000c1e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       344	fsck.c	FUNCTION_16
0x4000c22	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	fsck.c	FUNCTION_16	IF_1
0x4000c26	            0x8b00	                    mov eax, dword [rax]	       347	fsck.c	FUNCTION_16	IF_1
0x4000c28	          0xc1e804	                              shr eax, 4	       347	fsck.c	FUNCTION_16	IF_1
0x4000c2b	      0x25ffffff07	                      and eax, 0x7ffffff	       347	fsck.c	FUNCTION_16	IF_1
0x4000c30	          0x83e002	                              and eax, 2	       347	fsck.c	FUNCTION_16	IF_1
0x4000c33	            0x85c0	                           test eax, eax	       347	fsck.c	FUNCTION_16	IF_1
0x4000c35	            0x740a	                            je 0x4000c41	       347	fsck.c	FUNCTION_16	IF_1
0x4000c37	      0xb800000000	                              mov eax, 0	       348	fsck.c	FUNCTION_16	IF_1
0x4000c3c	      0xe9dc010000	                           jmp 0x4000e1d	       348	fsck.c	FUNCTION_16	IF_1
0x4000c41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       349	fsck.c	FUNCTION_16
0x4000c45	            0x8b00	                    mov eax, dword [rax]	       349	fsck.c	FUNCTION_16
0x4000c47	          0xc1e804	                              shr eax, 4	       349	fsck.c	FUNCTION_16
0x4000c4a	      0x25ffffff07	                      and eax, 0x7ffffff	       349	fsck.c	FUNCTION_16
0x4000c4f	          0x83c802	                               or eax, 2	       349	fsck.c	FUNCTION_16
0x4000c52	            0x89c2	                            mov edx, eax	       349	fsck.c	FUNCTION_16
0x4000c54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       349	fsck.c	FUNCTION_16
0x4000c58	    0x81e2ffffff07	                      and edx, 0x7ffffff	       349	fsck.c	FUNCTION_16
0x4000c5e	            0x89d1	                            mov ecx, edx	       349	fsck.c	FUNCTION_16
0x4000c60	          0xc1e104	                              shl ecx, 4	       349	fsck.c	FUNCTION_16
0x4000c63	            0x8b10	                    mov edx, dword [rax]	       349	fsck.c	FUNCTION_16
0x4000c65	    0x81e20f000080	                     and edx, 0x8000000f	       349	fsck.c	FUNCTION_16
0x4000c6b	             0x9ca	                             or edx, ecx	       349	fsck.c	FUNCTION_16
0x4000c6d	            0x8910	                    mov dword [rax], edx	       349	fsck.c	FUNCTION_16
0x4000c6f	    0x8b0500000000	            mov eax, dword [0x04000c75] 	       351	fsck.c	FUNCTION_16	IF_2
0x4000c75	            0x85c0	                           test eax, eax	       351	fsck.c	FUNCTION_16	IF_2
0x4000c77	            0x743a	                            je 0x4000cb3	       351	fsck.c	FUNCTION_16	IF_2
0x4000c79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c7d	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c80	      0xe868f5ffff	                call sym.describe_object	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c85	          0x4889c3	                            mov rbx, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c8c	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c8f	      0xe8e7f5ffff	                 call sym.printable_type	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c94	          0x4889c2	                            mov rdx, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c97	    0x488b05000000	            mov rax, qword [0x04000c9e] 	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000c9e	          0x4889d9	                            mov rcx, rbx	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000ca1	      0xbe00000000	                              mov esi, 0	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000ca6	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000ca9	      0xb800000000	                              mov eax, 0	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000cae	      0xe800000000	                          call 0x4000cb3	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0x4000cb3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000cb7	      0xba00000000	                              mov edx, 0	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000cbc	      0xbe00000000	                              mov esi, 0	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000cc1	          0x4889c7	                            mov rdi, rax	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000cc4	      0xe800000000	                          call 0x4000cc9	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000cc9	            0x85c0	                           test eax, eax	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000ccb	            0x7411	                            je 0x4000cde	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0x4000ccd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	fsck.c	FUNCTION_16	CALL_5
0x4000cd1	      0xbe00000000	                              mov esi, 0	       356	fsck.c	FUNCTION_16	CALL_5
0x4000cd6	          0x4889c7	                            mov rdi, rax	       356	fsck.c	FUNCTION_16	CALL_5
0x4000cd9	      0xe8aef7ffff	                       call sym.objerror	       356	fsck.c	FUNCTION_16	CALL_5
0x4000cde	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       357	fsck.c	FUNCTION_16	CALL_6
0x4000ce2	      0xb900000000	                              mov ecx, 0	       357	fsck.c	FUNCTION_16	CALL_6
0x4000ce7	      0xba00000000	                              mov edx, 0	       357	fsck.c	FUNCTION_16	CALL_6
0x4000cec	      0xbe00000000	                              mov esi, 0	       357	fsck.c	FUNCTION_16	CALL_6
0x4000cf1	          0x4889c7	                            mov rdi, rax	       357	fsck.c	FUNCTION_16	CALL_6
0x4000cf4	      0xe800000000	                          call 0x4000cf9	       357	fsck.c	FUNCTION_16	CALL_6
0x4000cf9	          0x8945dc	             mov dword [rbp - 0x24], eax	       357	fsck.c	FUNCTION_16	CALL_6
0x4000cfc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       358	fsck.c	FUNCTION_16	IF_4
0x4000d00	     0xf85df000000	                           jne 0x4000de5	       358	fsck.c	FUNCTION_16	IF_4
0x4000d06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       361	fsck.c	FUNCTION_16	IF_5
0x4000d0a	           0xfb600	                   movzx eax, byte [rax]	       361	fsck.c	FUNCTION_16	IF_5
0x4000d0d	          0x83e00e	                            and eax, 0xe	       361	fsck.c	FUNCTION_16	IF_5
0x4000d10	            0x3c02	                               cmp al, 2	       361	fsck.c	FUNCTION_16	IF_5
0x4000d12	            0x753d	                           jne 0x4000d51	       361	fsck.c	FUNCTION_16	IF_5
0x4000d14	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	fsck.c	FUNCTION_16	IF_5
0x4000d18	        0x488945e0	             mov qword [rbp - 0x20], rax	       362	fsck.c	FUNCTION_16	IF_5
0x4000d1c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d20	        0x488b4030	            mov rax, qword [rax + 0x30] 	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d24	          0x4885c0	                           test rax, rax	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d27	            0x7528	                           jne 0x4000d51	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d29	    0x8b0500000000	            mov eax, dword [0x04000d2f] 	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d2f	            0x85c0	                           test eax, eax	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d31	            0x741e	                            je 0x4000d51	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0x4000d33	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d37	          0x4889c7	                            mov rdi, rax	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d3a	      0xe8aef4ffff	                call sym.describe_object	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d3f	          0x4889c6	                            mov rsi, rax	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d42	      0xbf00000000	                              mov edi, 0	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d47	      0xb800000000	                              mov eax, 0	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d4c	      0xe800000000	                          call 0x4000d51	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0x4000d51	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       368	fsck.c	FUNCTION_16	IF_7
0x4000d55	           0xfb600	                   movzx eax, byte [rax]	       368	fsck.c	FUNCTION_16	IF_7
0x4000d58	          0x83e00e	                            and eax, 0xe	       368	fsck.c	FUNCTION_16	IF_7
0x4000d5b	            0x3c08	                               cmp al, 8	       368	fsck.c	FUNCTION_16	IF_7
0x4000d5d	     0xf8583000000	                           jne 0x4000de6	       368	fsck.c	FUNCTION_16	IF_7
0x4000d63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       369	fsck.c	FUNCTION_16	IF_7
0x4000d67	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	fsck.c	FUNCTION_16	IF_7
0x4000d6b	    0x8b0500000000	            mov eax, dword [0x04000d71] 	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d71	            0x85c0	                           test eax, eax	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d73	            0x7471	                            je 0x4000de6	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d79	        0x488b4018	            mov rax, qword [rax + 0x18] 	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d7d	          0x4885c0	                           test rax, rax	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d80	            0x7464	                            je 0x4000de6	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0x4000d82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d86	        0x488b4018	            mov rax, qword [rax + 0x18] 	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d8a	          0x4889c7	                            mov rdi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d8d	      0xe85bf4ffff	                call sym.describe_object	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d92	          0x4889c3	                            mov rbx, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d99	        0x488b4018	            mov rax, qword [rax + 0x18] 	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000d9d	          0x4889c7	                            mov rdi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000da0	      0xe8d6f4ffff	                 call sym.printable_type	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000da5	          0x4889da	                            mov rdx, rbx	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000da8	          0x4889c6	                            mov rsi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000dab	      0xbf00000000	                              mov edi, 0	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000db0	      0xb800000000	                              mov eax, 0	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000db5	      0xe800000000	                          call 0x4000dba	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0x4000dba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dbe	          0x4889c7	                            mov rdi, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dc1	      0xe827f4ffff	                call sym.describe_object	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dc6	          0x4889c2	                            mov rdx, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dcd	        0x488b4020	            mov rax, qword [rax + 0x20] 	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dd1	          0x4889c6	                            mov rsi, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dd4	      0xbf00000000	                              mov edi, 0	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dd9	      0xb800000000	                              mov eax, 0	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000dde	      0xe800000000	                          call 0x4000de3	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000de3	            0xeb01	                           jmp 0x4000de6	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0x4000de5	              0x90	                                     nop	       359	fsck.c	FUNCTION_16	IF_4
0x4000de6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       380	fsck.c	FUNCTION_16	IF_9
0x4000dea	           0xfb600	                   movzx eax, byte [rax]	       380	fsck.c	FUNCTION_16	IF_9
0x4000ded	          0x83e00e	                            and eax, 0xe	       380	fsck.c	FUNCTION_16	IF_9
0x4000df0	            0x3c04	                               cmp al, 4	       380	fsck.c	FUNCTION_16	IF_9
0x4000df2	            0x750c	                           jne 0x4000e00	       380	fsck.c	FUNCTION_16	IF_9
0x4000df4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       381	fsck.c	FUNCTION_16	CALL_14
0x4000df8	          0x4889c7	                            mov rdi, rax	       381	fsck.c	FUNCTION_16	CALL_14
0x4000dfb	      0xe800000000	                          call 0x4000e00	       381	fsck.c	FUNCTION_16	CALL_14
0x4000e00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       382	fsck.c	FUNCTION_16	IF_10
0x4000e04	           0xfb600	                   movzx eax, byte [rax]	       382	fsck.c	FUNCTION_16	IF_10
0x4000e07	          0x83e00e	                            and eax, 0xe	       382	fsck.c	FUNCTION_16	IF_10
0x4000e0a	            0x3c02	                               cmp al, 2	       382	fsck.c	FUNCTION_16	IF_10
0x4000e0c	            0x750c	                           jne 0x4000e1a	       382	fsck.c	FUNCTION_16	IF_10
0x4000e0e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       383	fsck.c	FUNCTION_16	CALL_15
0x4000e12	          0x4889c7	                            mov rdi, rax	       383	fsck.c	FUNCTION_16	CALL_15
0x4000e15	      0xe800000000	                          call 0x4000e1a	       383	fsck.c	FUNCTION_16	CALL_15
0x4000e1a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       384	fsck.c	FUNCTION_16
0x4000e1d	        0x4883c438	                           add rsp, 0x38	       385	fsck.c	FUNCTION_16
0x4000e21	              0x5b	                                 pop rbx	       385	fsck.c	FUNCTION_16
0x4000e22	              0x5d	                                 pop rbp	       385	fsck.c	FUNCTION_16
0x4000e23	              0xc3	                                     ret	       385	fsck.c	FUNCTION_16
fsck_loose	FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,2:WHILE,0:ELSE,0	69
0x40013b8	              0x55	                                push rbp	       533	fsck.c	FUNCTION_24
0x40013b9	          0x4889e5	                            mov rbp, rsp	       533	fsck.c	FUNCTION_24
0x40013bc	        0x4883ec30	                           sub rsp, 0x30	       533	fsck.c	FUNCTION_24
0x40013c0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       533	fsck.c	FUNCTION_24
0x40013c4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       533	fsck.c	FUNCTION_24
0x40013c8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       533	fsck.c	FUNCTION_24
0x40013cc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       534	fsck.c	FUNCTION_24	CALL_1
0x40013d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	fsck.c	FUNCTION_24	CALL_1
0x40013d4	          0x4889d6	                            mov rsi, rdx	       534	fsck.c	FUNCTION_24	CALL_1
0x40013d7	          0x4889c7	                            mov rdi, rax	       534	fsck.c	FUNCTION_24	CALL_1
0x40013da	      0xe821ffffff	             call sym.parse_loose_object	       534	fsck.c	FUNCTION_24	CALL_1
0x40013df	        0x488945f8	                mov qword [rbp - 8], rax	       534	fsck.c	FUNCTION_24	CALL_1
0x40013e3	      0x48837df800	                  cmp qword [rbp - 8], 0	       536	fsck.c	FUNCTION_24	IF_1
0x40013e8	            0x7546	                           jne 0x4001430	       536	fsck.c	FUNCTION_24	IF_1
0x40013ea	    0x8b0500000000	            mov eax, dword [0x040013f0] 	       537	fsck.c	FUNCTION_24	IF_1
0x40013f0	          0x83c801	                               or eax, 1	       537	fsck.c	FUNCTION_24	IF_1
0x40013f3	    0x890500000000	            mov dword [0x040013f9], eax 	       537	fsck.c	FUNCTION_24	IF_1
0x40013f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	fsck.c	FUNCTION_24	IF_1
0x40013fd	          0x4889c7	                            mov rdi, rax	       538	fsck.c	FUNCTION_24	IF_1
0x4001400	      0xe800000000	                          call 0x4001405	       538	fsck.c	FUNCTION_24	IF_1
0x4001405	          0x4889c1	                            mov rcx, rax	       538	fsck.c	FUNCTION_24	IF_1
0x4001408	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       538	fsck.c	FUNCTION_24	IF_1
0x400140c	          0x4889c2	                            mov rdx, rax	       538	fsck.c	FUNCTION_24	IF_1
0x400140f	          0x4889ce	                            mov rsi, rcx	       538	fsck.c	FUNCTION_24	IF_1
0x4001412	      0xbf00000000	                              mov edi, 0	       538	fsck.c	FUNCTION_24	IF_1
0x4001417	      0xb800000000	                              mov eax, 0	       538	fsck.c	FUNCTION_24	IF_1
0x400141c	      0xe800000000	                          call 0x4001421	       538	fsck.c	FUNCTION_24	IF_1
0x4001421	      0xe81aecffff	                    call sym.const_error	       538	fsck.c	FUNCTION_24	IF_1
0x4001426	      0xb800000000	                              mov eax, 0	       540	fsck.c	FUNCTION_24	IF_1
0x400142b	      0xe982000000	                           jmp 0x40014b2	       540	fsck.c	FUNCTION_24	IF_1
0x4001430	        0x488b45f8	                mov rax, qword [rbp - 8]	       543	fsck.c	FUNCTION_24
0x4001434	            0x8b00	                    mov eax, dword [rax]	       543	fsck.c	FUNCTION_24
0x4001436	          0xc1e804	                              shr eax, 4	       543	fsck.c	FUNCTION_24
0x4001439	      0x25ffffff07	                      and eax, 0x7ffffff	       543	fsck.c	FUNCTION_24
0x400143e	      0x25fcffff07	                      and eax, 0x7fffffc	       543	fsck.c	FUNCTION_24
0x4001443	            0x89c2	                            mov edx, eax	       543	fsck.c	FUNCTION_24
0x4001445	        0x488b45f8	                mov rax, qword [rbp - 8]	       543	fsck.c	FUNCTION_24
0x4001449	    0x81e2ffffff07	                      and edx, 0x7ffffff	       543	fsck.c	FUNCTION_24
0x400144f	            0x89d1	                            mov ecx, edx	       543	fsck.c	FUNCTION_24
0x4001451	          0xc1e104	                              shl ecx, 4	       543	fsck.c	FUNCTION_24
0x4001454	            0x8b10	                    mov edx, dword [rax]	       543	fsck.c	FUNCTION_24
0x4001456	    0x81e20f000080	                     and edx, 0x8000000f	       543	fsck.c	FUNCTION_24
0x400145c	             0x9ca	                             or edx, ecx	       543	fsck.c	FUNCTION_24
0x400145e	            0x8910	                    mov dword [rax], edx	       543	fsck.c	FUNCTION_24
0x4001460	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	fsck.c	FUNCTION_24
0x4001464	            0x8b00	                    mov eax, dword [rax]	       544	fsck.c	FUNCTION_24
0x4001466	          0xc1e804	                              shr eax, 4	       544	fsck.c	FUNCTION_24
0x4001469	      0x25ffffff07	                      and eax, 0x7ffffff	       544	fsck.c	FUNCTION_24
0x400146e	          0x83c804	                               or eax, 4	       544	fsck.c	FUNCTION_24
0x4001471	            0x89c2	                            mov edx, eax	       544	fsck.c	FUNCTION_24
0x4001473	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	fsck.c	FUNCTION_24
0x4001477	    0x81e2ffffff07	                      and edx, 0x7ffffff	       544	fsck.c	FUNCTION_24
0x400147d	            0x89d1	                            mov ecx, edx	       544	fsck.c	FUNCTION_24
0x400147f	          0xc1e104	                              shl ecx, 4	       544	fsck.c	FUNCTION_24
0x4001482	            0x8b10	                    mov edx, dword [rax]	       544	fsck.c	FUNCTION_24
0x4001484	    0x81e20f000080	                     and edx, 0x8000000f	       544	fsck.c	FUNCTION_24
0x400148a	             0x9ca	                             or edx, ecx	       544	fsck.c	FUNCTION_24
0x400148c	            0x8910	                    mov dword [rax], edx	       544	fsck.c	FUNCTION_24
0x400148e	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	fsck.c	FUNCTION_24	IF_2	CALL_3
0x4001492	          0x4889c7	                            mov rdi, rax	       545	fsck.c	FUNCTION_24	IF_2	CALL_3
0x4001495	      0xe87bf7ffff	                       call sym.fsck_obj	       545	fsck.c	FUNCTION_24	IF_2	CALL_3
0x400149a	            0x85c0	                           test eax, eax	       545	fsck.c	FUNCTION_24	IF_2	CALL_3
0x400149c	            0x740f	                            je 0x40014ad	       545	fsck.c	FUNCTION_24	IF_2	CALL_3
0x400149e	    0x8b0500000000	            mov eax, dword [0x040014a4] 	       546	fsck.c	FUNCTION_24	IF_2
0x40014a4	          0x83c801	                               or eax, 1	       546	fsck.c	FUNCTION_24	IF_2
0x40014a7	    0x890500000000	            mov dword [0x040014ad], eax 	       546	fsck.c	FUNCTION_24	IF_2
0x40014ad	      0xb800000000	                              mov eax, 0	       547	fsck.c	FUNCTION_24
0x40014b2	              0xc9	                                   leave	       548	fsck.c	FUNCTION_24
0x40014b3	              0xc3	                                     ret	       548	fsck.c	FUNCTION_24
is_null_oid	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	13
0x40001c6	              0x55	                                push rbp	       989	cache.h	FUNCTION_86
0x40001c7	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_86
0x40001ca	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_86
0x40001ce	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_86
0x40001d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_86	CALL_1
0x40001d6	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_86	CALL_1
0x40001db	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_86	CALL_1
0x40001de	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_86	CALL_1
0x40001e3	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_86	CALL_1
0x40001e5	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_86	CALL_1
0x40001e8	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_86	CALL_1
0x40001eb	              0xc9	                                   leave	       991	cache.h	FUNCTION_86
0x40001ec	              0xc3	                                     ret	       991	cache.h	FUNCTION_86
fsck_handle_reflog_ent	FOR,0:CALL,5:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	46
0x4001030	              0x55	                                push rbp	       431	fsck.c	FUNCTION_19
0x4001031	          0x4889e5	                            mov rbp, rsp	       431	fsck.c	FUNCTION_19
0x4001034	              0x53	                                push rbx	       431	fsck.c	FUNCTION_19
0x4001035	        0x4883ec48	                           sub rsp, 0x48	       431	fsck.c	FUNCTION_19
0x4001039	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       431	fsck.c	FUNCTION_19
0x400103d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       431	fsck.c	FUNCTION_19
0x4001041	        0x488955c8	             mov qword [rbp - 0x38], rdx	       431	fsck.c	FUNCTION_19
0x4001045	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       431	fsck.c	FUNCTION_19
0x4001049	        0x448945bc	             mov dword [rbp - 0x44], r8d	       431	fsck.c	FUNCTION_19
0x400104d	        0x4c894db0	              mov qword [rbp - 0x50], r9	       431	fsck.c	FUNCTION_19
0x4001051	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       432	fsck.c	FUNCTION_19
0x4001055	        0x488945e8	             mov qword [rbp - 0x18], rax	       432	fsck.c	FUNCTION_19
0x4001059	    0x8b0500000000	            mov eax, dword [0x0400105f] 	       434	fsck.c	FUNCTION_19	IF_1
0x400105f	            0x85c0	                           test eax, eax	       434	fsck.c	FUNCTION_19	IF_1
0x4001061	            0x743a	                            je 0x400109d	       434	fsck.c	FUNCTION_19	IF_1
0x4001063	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001067	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x400106a	      0xe800000000	                          call 0x400106f	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x400106f	          0x4889c3	                            mov rbx, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001072	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001076	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001079	      0xe800000000	                          call 0x400107e	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x400107e	          0x4889c2	                            mov rdx, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001081	    0x488b05000000	            mov rax, qword [0x04001088] 	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001088	          0x4889d9	                            mov rcx, rbx	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x400108b	      0xbe00000000	                              mov esi, 0	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001090	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001093	      0xb800000000	                              mov eax, 0	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x4001098	      0xe800000000	                          call 0x400109d	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x400109d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       438	fsck.c	FUNCTION_19	CALL_4
0x40010a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	fsck.c	FUNCTION_19	CALL_4
0x40010a5	      0xba00000000	                              mov edx, 0	       438	fsck.c	FUNCTION_19	CALL_4
0x40010aa	          0x4889ce	                            mov rsi, rcx	       438	fsck.c	FUNCTION_19	CALL_4
0x40010ad	          0x4889c7	                            mov rdi, rax	       438	fsck.c	FUNCTION_19	CALL_4
0x40010b0	      0xe853feffff	         call sym.fsck_handle_reflog_oid	       438	fsck.c	FUNCTION_19	CALL_4
0x40010b5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       439	fsck.c	FUNCTION_19	CALL_5
0x40010b9	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       439	fsck.c	FUNCTION_19	CALL_5
0x40010bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	fsck.c	FUNCTION_19	CALL_5
0x40010c1	          0x4889ce	                            mov rsi, rcx	       439	fsck.c	FUNCTION_19	CALL_5
0x40010c4	          0x4889c7	                            mov rdi, rax	       439	fsck.c	FUNCTION_19	CALL_5
0x40010c7	      0xe83cfeffff	         call sym.fsck_handle_reflog_oid	       439	fsck.c	FUNCTION_19	CALL_5
0x40010cc	      0xb800000000	                              mov eax, 0	       440	fsck.c	FUNCTION_19
0x40010d1	        0x4883c448	                           add rsp, 0x48	       441	fsck.c	FUNCTION_19
0x40010d5	              0x5b	                                 pop rbx	       441	fsck.c	FUNCTION_19
0x40010d6	              0x5d	                                 pop rbp	       441	fsck.c	FUNCTION_19
0x40010d7	              0xc3	                                     ret	       441	fsck.c	FUNCTION_19
const_error	FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_54
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_54
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_54
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_54
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_54
fsck_cache_tree	FOR,1:CALL,8:DO,0:functions,0:SWITCH,0:IF,5:WHILE,0:ELSE,0	98
0x400174f	              0x55	                                push rbp	       611	fsck.c	FUNCTION_29
0x4001750	          0x4889e5	                            mov rbp, rsp	       611	fsck.c	FUNCTION_29
0x4001753	        0x4883ec20	                           sub rsp, 0x20	       611	fsck.c	FUNCTION_29
0x4001757	        0x48897de8	             mov qword [rbp - 0x18], rdi	       611	fsck.c	FUNCTION_29
0x400175b	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       613	fsck.c	FUNCTION_29
0x4001762	    0x8b0500000000	            mov eax, dword [0x04001768] 	       615	fsck.c	FUNCTION_29	IF_1
0x4001768	            0x85c0	                           test eax, eax	       615	fsck.c	FUNCTION_29	IF_1
0x400176a	            0x741e	                            je 0x400178a	       615	fsck.c	FUNCTION_29	IF_1
0x400176c	    0x488b05000000	            mov rax, qword [0x04001773] 	       616	fsck.c	FUNCTION_29	CALL_1
0x4001773	          0x4889c1	                            mov rcx, rax	       616	fsck.c	FUNCTION_29	CALL_1
0x4001776	      0xba14000000	                           mov edx, 0x14	       616	fsck.c	FUNCTION_29	CALL_1
0x400177b	      0xbe01000000	                              mov esi, 1	       616	fsck.c	FUNCTION_29	CALL_1
0x4001780	      0xbf00000000	                              mov edi, 0	       616	fsck.c	FUNCTION_29	CALL_1
0x4001785	      0xe800000000	                          call 0x400178a	       616	fsck.c	FUNCTION_29	CALL_1
0x400178a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       618	fsck.c	FUNCTION_29	IF_2
0x400178e	            0x8b00	                    mov eax, dword [rax]	       618	fsck.c	FUNCTION_29	IF_2
0x4001790	            0x85c0	                           test eax, eax	       618	fsck.c	FUNCTION_29	IF_2
0x4001792	     0xf88e4000000	                            js 0x400187c	       618	fsck.c	FUNCTION_29	IF_2
0x4001798	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x400179c	        0x4883c004	                              add rax, 4	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x40017a0	          0x4889c7	                            mov rdi, rax	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x40017a3	      0xe800000000	                          call 0x40017a8	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x40017a8	        0x488945f8	                mov qword [rbp - 8], rax	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x40017ac	      0x48837df800	                  cmp qword [rbp - 8], 0	       620	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017b1	            0x7540	                           jne 0x40017f3	       620	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017b7	        0x4883c004	                              add rax, 4	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017bb	          0x4889c7	                            mov rdi, rax	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017be	      0xe800000000	                          call 0x40017c3	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017c3	          0x4889c6	                            mov rsi, rax	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017c6	      0xbf00000000	                              mov edi, 0	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017cb	      0xb800000000	                              mov eax, 0	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017d0	      0xe800000000	                          call 0x40017d5	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017d5	      0xe866e8ffff	                    call sym.const_error	       621	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017da	    0x8b0500000000	            mov eax, dword [0x040017e0] 	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017e0	          0x83c808	                               or eax, 8	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017e3	    0x890500000000	            mov dword [0x040017e9], eax 	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017e9	      0xb801000000	                              mov eax, 1	       624	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017ee	      0xe9cb000000	                           jmp 0x40018be	       624	fsck.c	FUNCTION_29	IF_2	IF_3
0x40017f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	fsck.c	FUNCTION_29	IF_2
0x40017f7	            0x8b00	                    mov eax, dword [rax]	       626	fsck.c	FUNCTION_29	IF_2
0x40017f9	          0xc1e804	                              shr eax, 4	       626	fsck.c	FUNCTION_29	IF_2
0x40017fc	      0x25ffffff07	                      and eax, 0x7ffffff	       626	fsck.c	FUNCTION_29	IF_2
0x4001801	          0x83c808	                               or eax, 8	       626	fsck.c	FUNCTION_29	IF_2
0x4001804	            0x89c2	                            mov edx, eax	       626	fsck.c	FUNCTION_29	IF_2
0x4001806	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	fsck.c	FUNCTION_29	IF_2
0x400180a	    0x81e2ffffff07	                      and edx, 0x7ffffff	       626	fsck.c	FUNCTION_29	IF_2
0x4001810	            0x89d1	                            mov ecx, edx	       626	fsck.c	FUNCTION_29	IF_2
0x4001812	          0xc1e104	                              shl ecx, 4	       626	fsck.c	FUNCTION_29	IF_2
0x4001815	            0x8b10	                    mov edx, dword [rax]	       626	fsck.c	FUNCTION_29	IF_2
0x4001817	    0x81e20f000080	                     and edx, 0x8000000f	       626	fsck.c	FUNCTION_29	IF_2
0x400181d	             0x9ca	                             or edx, ecx	       626	fsck.c	FUNCTION_29	IF_2
0x400181f	            0x8910	                    mov dword [rax], edx	       626	fsck.c	FUNCTION_29	IF_2
0x4001821	    0x8b0500000000	            mov eax, dword [0x04001827] 	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x4001827	            0x85c0	                           test eax, eax	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x4001829	            0x7423	                            je 0x400184e	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x400182b	      0xbf00000000	                              mov edi, 0	       629	fsck.c	FUNCTION_29	IF_2	CALL_5
0x4001830	      0xe800000000	                          call 0x4001835	       629	fsck.c	FUNCTION_29	IF_2	CALL_5
0x4001835	          0x4889c2	                            mov rdx, rax	       629	fsck.c	FUNCTION_29	IF_2	CALL_5
0x4001838	    0x488b05000000	            mov rax, qword [0x0400183f] 	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_4
0x400183f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_4
0x4001843	          0x4889ce	                            mov rsi, rcx	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_4
0x4001846	          0x4889c7	                            mov rdi, rax	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_4
0x4001849	      0xe800000000	                          call 0x400184e	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_4
0x400184e	        0x488b45f8	                mov rax, qword [rbp - 8]	       630	fsck.c	FUNCTION_29	IF_2	CALL_6
0x4001852	          0x4889c7	                            mov rdi, rax	       630	fsck.c	FUNCTION_29	IF_2	CALL_6
0x4001855	      0xe8b9eeffff	          call sym.mark_object_reachable	       630	fsck.c	FUNCTION_29	IF_2	CALL_6
0x400185a	        0x488b45f8	                mov rax, qword [rbp - 8]	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x400185e	           0xfb600	                   movzx eax, byte [rax]	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x4001861	          0x83e00e	                            and eax, 0xe	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x4001864	            0x3c04	                               cmp al, 4	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x4001866	            0x7414	                            je 0x400187c	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x4001868	        0x488b45f8	                mov rax, qword [rbp - 8]	       632	fsck.c	FUNCTION_29	IF_2	CALL_7
0x400186c	      0xbe00000000	                              mov esi, 0	       632	fsck.c	FUNCTION_29	IF_2	CALL_7
0x4001871	          0x4889c7	                            mov rdi, rax	       632	fsck.c	FUNCTION_29	IF_2	CALL_7
0x4001874	      0xe813ecffff	                       call sym.objerror	       632	fsck.c	FUNCTION_29	IF_2	CALL_7
0x4001879	           0x945f4	               or dword [rbp - 0xc], eax	       632	fsck.c	FUNCTION_29	IF_2	CALL_7
0x400187c	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       634	fsck.c	FUNCTION_29	FOR_1
0x4001883	            0xeb2a	                           jmp 0x40018af	       634	fsck.c	FUNCTION_29	FOR_1
0x4001885	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       635	fsck.c	FUNCTION_29	CALL_8
0x4001889	        0x488b4020	            mov rax, qword [rax + 0x20] 	       635	fsck.c	FUNCTION_29	CALL_8
0x400188d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       635	fsck.c	FUNCTION_29	CALL_8
0x4001890	          0x4863d2	                         movsxd rdx, edx	       635	fsck.c	FUNCTION_29	CALL_8
0x4001893	        0x48c1e203	                              shl rdx, 3	       635	fsck.c	FUNCTION_29	CALL_8
0x4001897	          0x4801d0	                            add rax, rdx	       635	fsck.c	FUNCTION_29	CALL_8
0x400189a	          0x488b00	                    mov rax, qword [rax]	       635	fsck.c	FUNCTION_29	CALL_8
0x400189d	          0x488b00	                    mov rax, qword [rax]	       635	fsck.c	FUNCTION_29	CALL_8
0x40018a0	          0x4889c7	                            mov rdi, rax	       635	fsck.c	FUNCTION_29	CALL_8
0x40018a3	      0xe8a7feffff	                call sym.fsck_cache_tree	       635	fsck.c	FUNCTION_29	CALL_8
0x40018a8	           0x945f4	               or dword [rbp - 0xc], eax	       635	fsck.c	FUNCTION_29	CALL_8
0x40018ab	        0x8345f001	               add dword [rbp - 0x10], 1	       634	fsck.c	FUNCTION_29	FOR_1
0x40018af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	fsck.c	FUNCTION_29	FOR_1
0x40018b3	          0x8b4018	            mov eax, dword [rax + 0x18] 	       634	fsck.c	FUNCTION_29	FOR_1
0x40018b6	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       634	fsck.c	FUNCTION_29	FOR_1
0x40018b9	            0x7fca	                            jg 0x4001885	       634	fsck.c	FUNCTION_29	FOR_1
0x40018bb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       636	fsck.c	FUNCTION_29
0x40018be	              0xc9	                                   leave	       637	fsck.c	FUNCTION_29
0x40018bf	              0xc3	                                     ret	       637	fsck.c	FUNCTION_29
fsck_handle_reflog	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	15
0x40010d8	              0x55	                                push rbp	       445	fsck.c	FUNCTION_20
0x40010d9	          0x4889e5	                            mov rbp, rsp	       445	fsck.c	FUNCTION_20
0x40010dc	        0x4883ec20	                           sub rsp, 0x20	       445	fsck.c	FUNCTION_20
0x40010e0	        0x48897df8	                mov qword [rbp - 8], rdi	       445	fsck.c	FUNCTION_20
0x40010e4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       445	fsck.c	FUNCTION_20
0x40010e8	          0x8955ec	             mov dword [rbp - 0x14], edx	       445	fsck.c	FUNCTION_20
0x40010eb	        0x48894de0	             mov qword [rbp - 0x20], rcx	       445	fsck.c	FUNCTION_20
0x40010ef	        0x488b55f8	                mov rdx, qword [rbp - 8]	       446	fsck.c	FUNCTION_20	CALL_1
0x40010f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       446	fsck.c	FUNCTION_20	CALL_1
0x40010f7	      0xbe00000000	                              mov esi, 0	       446	fsck.c	FUNCTION_20	CALL_1
0x40010fc	          0x4889c7	                            mov rdi, rax	       446	fsck.c	FUNCTION_20	CALL_1
0x40010ff	      0xe800000000	                          call 0x4001104	       446	fsck.c	FUNCTION_20	CALL_1
0x4001104	      0xb800000000	                              mov eax, 0	       447	fsck.c	FUNCTION_20
0x4001109	              0xc9	                                   leave	       448	fsck.c	FUNCTION_20
0x400110a	              0xc3	                                     ret	       448	fsck.c	FUNCTION_20
fsck_subdir	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	16
0x4001501	              0x55	                                push rbp	       558	fsck.c	FUNCTION_26
0x4001502	          0x4889e5	                            mov rbp, rsp	       558	fsck.c	FUNCTION_26
0x4001505	        0x4883ec20	                           sub rsp, 0x20	       558	fsck.c	FUNCTION_26
0x4001509	          0x897dfc	                mov dword [rbp - 4], edi	       558	fsck.c	FUNCTION_26
0x400150c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       558	fsck.c	FUNCTION_26
0x4001510	        0x488955e8	             mov qword [rbp - 0x18], rdx	       558	fsck.c	FUNCTION_26
0x4001514	          0x8b45fc	                mov eax, dword [rbp - 4]	       559	fsck.c	FUNCTION_26	CALL_1
0x4001517	          0x83c001	                              add eax, 1	       559	fsck.c	FUNCTION_26	CALL_1
0x400151a	            0x89c2	                            mov edx, eax	       559	fsck.c	FUNCTION_26	CALL_1
0x400151c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	fsck.c	FUNCTION_26	CALL_1
0x4001520	          0x4889d6	                            mov rsi, rdx	       559	fsck.c	FUNCTION_26	CALL_1
0x4001523	          0x4889c7	                            mov rdi, rax	       559	fsck.c	FUNCTION_26	CALL_1
0x4001526	      0xe800000000	                          call 0x400152b	       559	fsck.c	FUNCTION_26	CALL_1
0x400152b	      0xb800000000	                              mov eax, 0	       560	fsck.c	FUNCTION_26
0x4001530	              0xc9	                                   leave	       561	fsck.c	FUNCTION_26
0x4001531	              0xc3	                                     ret	       561	fsck.c	FUNCTION_26
mark_packed_for_connectivity	FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:WHILE,0:ELSE,0	13
0x4001934	              0x55	                                push rbp	       657	fsck.c	FUNCTION_32
0x4001935	          0x4889e5	                            mov rbp, rsp	       657	fsck.c	FUNCTION_32
0x4001938	        0x4883ec20	                           sub rsp, 0x20	       657	fsck.c	FUNCTION_32
0x400193c	        0x48897df8	                mov qword [rbp - 8], rdi	       657	fsck.c	FUNCTION_32
0x4001940	        0x488975f0	             mov qword [rbp - 0x10], rsi	       657	fsck.c	FUNCTION_32
0x4001944	          0x8955ec	             mov dword [rbp - 0x14], edx	       657	fsck.c	FUNCTION_32
0x4001947	        0x48894de0	             mov qword [rbp - 0x20], rcx	       657	fsck.c	FUNCTION_32
0x400194b	        0x488b45f8	                mov rax, qword [rbp - 8]	       658	fsck.c	FUNCTION_32	CALL_1
0x400194f	          0x4889c7	                            mov rdi, rax	       658	fsck.c	FUNCTION_32	CALL_1
0x4001952	      0xe869ffffff	   call sym.mark_object_for_connectivity	       658	fsck.c	FUNCTION_32	CALL_1
0x4001957	      0xb800000000	                              mov eax, 0	       659	fsck.c	FUNCTION_32
0x400195c	              0xc9	                                   leave	       660	fsck.c	FUNCTION_32
0x400195d	              0xc3	                                     ret	       660	fsck.c	FUNCTION_32
mark_used	FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	27
0x4000840	              0x55	                                push rbp	       211	fsck.c	FUNCTION_11
0x4000841	          0x4889e5	                            mov rbp, rsp	       211	fsck.c	FUNCTION_11
0x4000844	        0x48897df8	                mov qword [rbp - 8], rdi	       211	fsck.c	FUNCTION_11
0x4000848	          0x8975f4	              mov dword [rbp - 0xc], esi	       211	fsck.c	FUNCTION_11
0x400084b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       211	fsck.c	FUNCTION_11
0x400084f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       211	fsck.c	FUNCTION_11
0x4000853	      0x48837df800	                  cmp qword [rbp - 8], 0	       212	fsck.c	FUNCTION_11	IF_1
0x4000858	            0x7507	                           jne 0x4000861	       212	fsck.c	FUNCTION_11	IF_1
0x400085a	      0xb801000000	                              mov eax, 1	       213	fsck.c	FUNCTION_11	IF_1
0x400085f	            0xeb33	                           jmp 0x4000894	       213	fsck.c	FUNCTION_11	IF_1
0x4000861	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	fsck.c	FUNCTION_11
0x4000865	            0x8b00	                    mov eax, dword [rax]	       214	fsck.c	FUNCTION_11
0x4000867	          0xc1e804	                              shr eax, 4	       214	fsck.c	FUNCTION_11
0x400086a	      0x25ffffff07	                      and eax, 0x7ffffff	       214	fsck.c	FUNCTION_11
0x400086f	          0x83c808	                               or eax, 8	       214	fsck.c	FUNCTION_11
0x4000872	            0x89c2	                            mov edx, eax	       214	fsck.c	FUNCTION_11
0x4000874	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	fsck.c	FUNCTION_11
0x4000878	    0x81e2ffffff07	                      and edx, 0x7ffffff	       214	fsck.c	FUNCTION_11
0x400087e	            0x89d1	                            mov ecx, edx	       214	fsck.c	FUNCTION_11
0x4000880	          0xc1e104	                              shl ecx, 4	       214	fsck.c	FUNCTION_11
0x4000883	            0x8b10	                    mov edx, dword [rax]	       214	fsck.c	FUNCTION_11
0x4000885	    0x81e20f000080	                     and edx, 0x8000000f	       214	fsck.c	FUNCTION_11
0x400088b	             0x9ca	                             or edx, ecx	       214	fsck.c	FUNCTION_11
0x400088d	            0x8910	                    mov dword [rax], edx	       214	fsck.c	FUNCTION_11
0x400088f	      0xb800000000	                              mov eax, 0	       215	fsck.c	FUNCTION_11
0x4000894	              0x5d	                                 pop rbp	       216	fsck.c	FUNCTION_11
0x4000895	              0xc3	                                     ret	       216	fsck.c	FUNCTION_11
fsck_handle_reflog_oid	FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,4:WHILE,0:ELSE,1	80
0x4000f08	              0x55	                                push rbp	       409	fsck.c	FUNCTION_18
0x4000f09	          0x4889e5	                            mov rbp, rsp	       409	fsck.c	FUNCTION_18
0x4000f0c	        0x4883ec30	                           sub rsp, 0x30	       409	fsck.c	FUNCTION_18
0x4000f10	        0x48897de8	             mov qword [rbp - 0x18], rdi	       409	fsck.c	FUNCTION_18
0x4000f14	        0x488975e0	             mov qword [rbp - 0x20], rsi	       409	fsck.c	FUNCTION_18
0x4000f18	        0x488955d8	             mov qword [rbp - 0x28], rdx	       409	fsck.c	FUNCTION_18
0x4000f1c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0x4000f20	          0x4889c7	                            mov rdi, rax	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0x4000f23	      0xe89ef2ffff	                    call sym.is_null_oid	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0x4000f28	            0x85c0	                           test eax, eax	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0x4000f2a	     0xf85fd000000	                           jne 0x400102d	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0x4000f30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0x4000f34	          0x4889c7	                            mov rdi, rax	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0x4000f37	      0xe800000000	                          call 0x4000f3c	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0x4000f3c	        0x488945f8	                mov qword [rbp - 8], rax	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0x4000f40	      0x48837df800	                  cmp qword [rbp - 8], 0	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f45	     0xf8499000000	                            je 0x4000fe4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f4f	            0x8b00	                    mov eax, dword [rax]	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f51	          0xc1e804	                              shr eax, 4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f54	      0x25ffffff07	                      and eax, 0x7ffffff	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f59	          0x83e004	                              and eax, 4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f5c	            0x85c0	                           test eax, eax	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f5e	     0xf8480000000	                            je 0x4000fe4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000f64	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0x4000f69	            0x743d	                            je 0x4000fa8	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0x4000f6b	    0x8b0500000000	            mov eax, dword [0x04000f71] 	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0x4000f71	            0x85c0	                           test eax, eax	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0x4000f73	            0x7433	                            je 0x4000fa8	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0x4000f75	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f7d	          0x4889c6	                            mov rsi, rax	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f80	      0xbf00000000	                              mov edi, 0	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f85	      0xb800000000	                              mov eax, 0	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f8a	      0xe800000000	                          call 0x4000f8f	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f8f	          0x4889c2	                            mov rdx, rax	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0x4000f92	    0x488b05000000	            mov rax, qword [0x04000f99] 	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x4000f99	        0x488b4df8	                mov rcx, qword [rbp - 8]	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x4000f9d	          0x4889ce	                            mov rsi, rcx	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x4000fa0	          0x4889c7	                            mov rdi, rax	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0x4000fa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fac	            0x8b00	                    mov eax, dword [rax]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fae	          0xc1e804	                              shr eax, 4	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fb1	      0x25ffffff07	                      and eax, 0x7ffffff	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fb6	          0x83c808	                               or eax, 8	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fb9	            0x89c2	                            mov edx, eax	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fbf	    0x81e2ffffff07	                      and edx, 0x7ffffff	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fc5	            0x89d1	                            mov ecx, edx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fc7	          0xc1e104	                              shl ecx, 4	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fca	            0x8b10	                    mov edx, dword [rax]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fcc	    0x81e20f000080	                     and edx, 0x8000000f	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fd2	             0x9ca	                             or edx, ecx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fd4	            0x8910	                    mov dword [rax], edx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0x4000fd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x4000fda	          0x4889c7	                            mov rdi, rax	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x4000fdd	      0xe831f7ffff	          call sym.mark_object_reachable	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0x4000fe2	            0xeb49	                           jmp 0x400102d	       426	fsck.c	FUNCTION_18
0x4000fe4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0x4000fe8	          0x4889c7	                            mov rdi, rax	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0x4000feb	      0xe800000000	                          call 0x4000ff0	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0x4000ff0	            0x85c0	                           test eax, eax	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0x4000ff2	            0x7539	                           jne 0x400102d	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0x4000ff4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4000ff8	          0x4889c7	                            mov rdi, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4000ffb	      0xe800000000	                          call 0x4001000	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4001000	          0x4889c2	                            mov rdx, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4001003	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4001007	          0x4889c6	                            mov rsi, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x400100a	      0xbf00000000	                              mov edi, 0	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x400100f	      0xb800000000	                              mov eax, 0	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4001014	      0xe800000000	                          call 0x4001019	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x4001019	      0xe822f0ffff	                    call sym.const_error	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_7
0x400101e	    0x8b0500000000	            mov eax, dword [0x04001024] 	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0x4001024	          0x83c802	                               or eax, 2	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0x4001027	    0x890500000000	            mov dword [0x0400102d], eax 	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0x400102d	              0x90	                                     nop	       426	fsck.c	FUNCTION_18
0x400102e	              0xc9	                                   leave	       426	fsck.c	FUNCTION_18
0x400102f	              0xc3	                                     ret	       426	fsck.c	FUNCTION_18
traverse_one_object	FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:WHILE,0:ELSE,0	24
0x400073d	              0x55	                                push rbp	       185	fsck.c	FUNCTION_9
0x400073e	          0x4889e5	                            mov rbp, rsp	       185	fsck.c	FUNCTION_9
0x4000741	        0x4883ec20	                           sub rsp, 0x20	       185	fsck.c	FUNCTION_9
0x4000745	        0x48897de8	             mov qword [rbp - 0x18], rdi	       185	fsck.c	FUNCTION_9
0x4000749	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       186	fsck.c	FUNCTION_9	CALL_1
0x400074d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	fsck.c	FUNCTION_9	CALL_1
0x4000751	      0xba00000000	                              mov edx, 0	       186	fsck.c	FUNCTION_9	CALL_1
0x4000756	          0x4889ce	                            mov rsi, rcx	       186	fsck.c	FUNCTION_9	CALL_1
0x4000759	          0x4889c7	                            mov rdi, rax	       186	fsck.c	FUNCTION_9	CALL_1
0x400075c	      0xe800000000	                          call 0x4000761	       186	fsck.c	FUNCTION_9	CALL_1
0x4000761	          0x8945f4	              mov dword [rbp - 0xc], eax	       186	fsck.c	FUNCTION_9	CALL_1
0x4000764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	fsck.c	FUNCTION_9	IF_1
0x4000768	           0xfb600	                   movzx eax, byte [rax]	       188	fsck.c	FUNCTION_9	IF_1
0x400076b	          0x83e00e	                            and eax, 0xe	       188	fsck.c	FUNCTION_9	IF_1
0x400076e	            0x3c04	                               cmp al, 4	       188	fsck.c	FUNCTION_9	IF_1
0x4000770	            0x7514	                           jne 0x4000786	       188	fsck.c	FUNCTION_9	IF_1
0x4000772	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	fsck.c	FUNCTION_9	IF_1
0x4000776	        0x488945f8	                mov qword [rbp - 8], rax	       189	fsck.c	FUNCTION_9	IF_1
0x400077a	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x400077e	          0x4889c7	                            mov rdi, rax	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x4000781	      0xe800000000	                          call 0x4000786	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x4000786	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       192	fsck.c	FUNCTION_9
0x4000789	              0xc9	                                   leave	       193	fsck.c	FUNCTION_9
0x400078a	              0xc3	                                     ret	       193	fsck.c	FUNCTION_9
check_reachable_object	FOR,0:CALL,5:DO,0:functions,0:SWITCH,0:IF,3:WHILE,0:ELSE,0	48
0x4000896	              0x55	                                push rbp	       222	fsck.c	FUNCTION_12
0x4000897	          0x4889e5	                            mov rbp, rsp	       222	fsck.c	FUNCTION_12
0x400089a	              0x53	                                push rbx	       222	fsck.c	FUNCTION_12
0x400089b	        0x4883ec18	                           sub rsp, 0x18	       222	fsck.c	FUNCTION_12
0x400089f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       222	fsck.c	FUNCTION_12
0x40008a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	fsck.c	FUNCTION_12	IF_1
0x40008a7	            0x8b00	                    mov eax, dword [rax]	       228	fsck.c	FUNCTION_12	IF_1
0x40008a9	          0xc1e804	                              shr eax, 4	       228	fsck.c	FUNCTION_12	IF_1
0x40008ac	      0x25ffffff07	                      and eax, 0x7ffffff	       228	fsck.c	FUNCTION_12	IF_1
0x40008b1	          0x83e004	                              and eax, 4	       228	fsck.c	FUNCTION_12	IF_1
0x40008b4	            0x85c0	                           test eax, eax	       228	fsck.c	FUNCTION_12	IF_1
0x40008b6	            0x756e	                           jne 0x4000926	       228	fsck.c	FUNCTION_12	IF_1
0x40008b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008bc	        0x4883c004	                              add rax, 4	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008c0	          0x4889c7	                            mov rdi, rax	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008c3	      0xe800000000	                          call 0x40008c8	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008c8	            0x85c0	                           test eax, eax	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008ca	            0x7556	                           jne 0x4000922	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x40008cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008d0	        0x4883c004	                              add rax, 4	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008d4	          0x4889c7	                            mov rdi, rax	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008d7	      0xe800000000	                          call 0x40008dc	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008dc	            0x85c0	                           test eax, eax	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008de	            0x7545	                           jne 0x4000925	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x40008e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008e4	          0x4889c7	                            mov rdi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008e7	      0xe801f9ffff	                call sym.describe_object	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008ec	          0x4889c3	                            mov rbx, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008f3	          0x4889c7	                            mov rdi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008f6	      0xe880f9ffff	                 call sym.printable_type	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008fb	          0x4889da	                            mov rdx, rbx	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x40008fe	          0x4889c6	                            mov rsi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x4000901	      0xbf00000000	                              mov edi, 0	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x4000906	      0xb800000000	                              mov eax, 0	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x400090b	      0xe800000000	                          call 0x4000910	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x4000910	    0x8b0500000000	            mov eax, dword [0x04000916] 	       235	fsck.c	FUNCTION_12	IF_1
0x4000916	          0x83c802	                               or eax, 2	       235	fsck.c	FUNCTION_12	IF_1
0x4000919	    0x890500000000	            mov dword [0x0400091f], eax 	       235	fsck.c	FUNCTION_12	IF_1
0x400091f	              0x90	                                     nop	       236	fsck.c	FUNCTION_12	IF_1
0x4000920	            0xeb04	                           jmp 0x4000926	       236	fsck.c	FUNCTION_12	IF_1
0x4000922	              0x90	                                     nop	       230	fsck.c	FUNCTION_12	IF_1	IF_2
0x4000923	            0xeb01	                           jmp 0x4000926	       230	fsck.c	FUNCTION_12	IF_1	IF_2
0x4000925	              0x90	                                     nop	       232	fsck.c	FUNCTION_12	IF_1	IF_3
0x4000926	        0x4883c418	                           add rsp, 0x18	       238	fsck.c	FUNCTION_12
0x400092a	              0x5b	                                 pop rbx	       238	fsck.c	FUNCTION_12
0x400092b	              0x5d	                                 pop rbp	       238	fsck.c	FUNCTION_12
0x400092c	              0xc3	                                     ret	       238	fsck.c	FUNCTION_12
