preload_index	IF,7:CALL,9:functions,0:FOR,2:WHILE,0:SWITCH,0:DO,0:ELSE,0	146
0x4000416	              0x55	                                push rbp	        78	preload-index.c	FUNCTION_3
0x4000417	          0x4889e5	                            mov rbp, rsp	        78	preload-index.c	FUNCTION_3
0x400041a	    0x4881ec100400	                          sub rsp, 0x410	        78	preload-index.c	FUNCTION_3
0x4000421	    0x4889bdf8fbff	            mov qword [rbp - 0x408], rdi	        78	preload-index.c	FUNCTION_3
0x4000428	    0x4889b5f0fbff	            mov qword [rbp - 0x410], rsi	        78	preload-index.c	FUNCTION_3
0x400042f	    0x64488b042528	                mov rax, qword fs:[0x28]	        78	preload-index.c	FUNCTION_3
0x4000438	        0x488945f8	                mov qword [rbp - 8], rax	        78	preload-index.c	FUNCTION_3
0x400043c	            0x31c0	                            xor eax, eax	        78	preload-index.c	FUNCTION_3
0x400043e	      0xe800000000	                          call 0x4000443	        81	preload-index.c	FUNCTION_3	CALL_1
0x4000443	    0x48898518fcff	            mov qword [rbp - 0x3e8], rax	        81	preload-index.c	FUNCTION_3	CALL_1
0x400044a	    0x8b0500000000	            mov eax, dword [0x04000450] 	        83	preload-index.c	FUNCTION_3	IF_1
0x4000450	            0x85c0	                           test eax, eax	        83	preload-index.c	FUNCTION_3	IF_1
0x4000452	     0xf8452020000	                            je 0x40006aa	        83	preload-index.c	FUNCTION_3	IF_1
0x4000458	    0x488b85f8fbff	            mov rax, qword [rbp - 0x408]	        86	preload-index.c	FUNCTION_3
0x400045f	          0x8b400c	              mov eax, dword [rax + 0xc]	        86	preload-index.c	FUNCTION_3
0x4000462	      0xbad34d6210	                     mov edx, 0x10624dd3	        86	preload-index.c	FUNCTION_3
0x4000467	            0xf7e2	                                 mul edx	        86	preload-index.c	FUNCTION_3
0x4000469	            0x89d0	                            mov eax, edx	        86	preload-index.c	FUNCTION_3
0x400046b	          0xc1e805	                              shr eax, 5	        86	preload-index.c	FUNCTION_3
0x400046e	    0x898508fcffff	            mov dword [rbp - 0x3f8], eax	        86	preload-index.c	FUNCTION_3
0x4000474	    0x488b85f8fbff	            mov rax, qword [rbp - 0x408]	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x400047b	          0x8b400c	              mov eax, dword [rax + 0xc]	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x400047e	          0x83f801	                              cmp eax, 1	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x4000481	            0x7622	                           jbe 0x40004a5	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x4000483	    0x83bd08fcffff	              cmp dword [rbp - 0x3f8], 1	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x400048a	            0x7f19	                            jg 0x40004a5	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x400048c	      0xbf00000000	                              mov edi, 0	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x4000491	      0xe800000000	                          call 0x4000496	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x4000496	          0x4885c0	                           test rax, rax	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x4000499	            0x740a	                            je 0x40004a5	        87	preload-index.c	FUNCTION_3	IF_2	CALL_2
0x400049b	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 2	        88	preload-index.c	FUNCTION_3	IF_2
0x40004a5	    0x83bd08fcffff	              cmp dword [rbp - 0x3f8], 1	        89	preload-index.c	FUNCTION_3	IF_3
0x40004ac	     0xf8efb010000	                           jle 0x40006ad	        89	preload-index.c	FUNCTION_3	IF_3
0x40004b2	    0x83bd08fcffff	          cmp dword [rbp - 0x3f8], 0x14 	        91	preload-index.c	FUNCTION_3	IF_4
0x40004b9	            0x7e0a	                           jle 0x40004c5	        91	preload-index.c	FUNCTION_3	IF_4
0x40004bb	    0xc78508fcffff	          mov dword [rbp - 0x3f8], 0x14 	        92	preload-index.c	FUNCTION_3	IF_4
0x40004c5	    0xc78510fcffff	              mov dword [rbp - 0x3f0], 0	        93	preload-index.c	FUNCTION_3
0x40004cf	    0x488b85f8fbff	            mov rax, qword [rbp - 0x408]	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004d6	          0x8b500c	              mov edx, dword [rax + 0xc]	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004d9	    0x8b8508fcffff	            mov eax, dword [rbp - 0x3f8]	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004df	             0x1d0	                            add eax, edx	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004e1	          0x83e801	                              sub eax, 1	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004e4	    0x8b8d08fcffff	            mov ecx, dword [rbp - 0x3f8]	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004ea	      0xba00000000	                              mov edx, 0	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004ef	            0xf7f1	                                 div ecx	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004f1	    0x898514fcffff	            mov dword [rbp - 0x3ec], eax	        94	preload-index.c	FUNCTION_3	CALL_3
0x40004f7	    0x488d8530fcff	                  lea rax, [rbp - 0x3d0]	        95	preload-index.c	FUNCTION_3	CALL_4
0x40004fe	      0xbac0030000	                          mov edx, 0x3c0	        95	preload-index.c	FUNCTION_3	CALL_4
0x4000503	      0xbe00000000	                              mov esi, 0	        95	preload-index.c	FUNCTION_3	CALL_4
0x4000508	          0x4889c7	                            mov rdi, rax	        95	preload-index.c	FUNCTION_3	CALL_4
0x400050b	      0xe800000000	                          call 0x4000510	        95	preload-index.c	FUNCTION_3	CALL_4
0x4000510	    0xc7850cfcffff	              mov dword [rbp - 0x3f4], 0	        96	preload-index.c	FUNCTION_3	FOR_1
0x400051a	      0xe9cc000000	                           jmp 0x40005eb	        96	preload-index.c	FUNCTION_3	FOR_1
0x400051f	    0x8b850cfcffff	            mov eax, dword [rbp - 0x3f4]	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000525	          0x4863d0	                         movsxd rdx, eax	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000528	          0x4889d0	                            mov rax, rdx	        97	preload-index.c	FUNCTION_3	FOR_1
0x400052b	          0x4801c0	                            add rax, rax	        97	preload-index.c	FUNCTION_3	FOR_1
0x400052e	          0x4801d0	                            add rax, rdx	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000531	        0x48c1e004	                              shl rax, 4	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000535	          0x4889c2	                            mov rdx, rax	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000538	    0x488d8530fcff	                  lea rax, [rbp - 0x3d0]	        97	preload-index.c	FUNCTION_3	FOR_1
0x400053f	          0x4801d0	                            add rax, rdx	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000542	    0x48898520fcff	            mov qword [rbp - 0x3e0], rax	        97	preload-index.c	FUNCTION_3	FOR_1
0x4000549	    0x488b8520fcff	            mov rax, qword [rbp - 0x3e0]	        98	preload-index.c	FUNCTION_3	FOR_1
0x4000550	    0x488b95f8fbff	            mov rdx, qword [rbp - 0x408]	        98	preload-index.c	FUNCTION_3	FOR_1
0x4000557	        0x48895008	                mov qword [rax + 8], rdx	        98	preload-index.c	FUNCTION_3	FOR_1
0x400055b	    0x4883bdf0fbff	              cmp qword [rbp - 0x410], 0	        99	preload-index.c	FUNCTION_3	FOR_1	IF_5
0x4000563	            0x741d	                            je 0x4000582	        99	preload-index.c	FUNCTION_3	FOR_1	IF_5
0x4000565	    0x488b8520fcff	            mov rax, qword [rbp - 0x3e0]	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x400056c	        0x488d5010	                   lea rdx, [rax + 0x10]	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x4000570	    0x488b85f0fbff	            mov rax, qword [rbp - 0x410]	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x4000577	          0x4889c6	                            mov rsi, rax	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x400057a	          0x4889d7	                            mov rdi, rdx	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x400057d	      0xe800000000	                          call 0x4000582	       100	preload-index.c	FUNCTION_3	FOR_1	CALL_5
0x4000582	    0x488b8520fcff	            mov rax, qword [rbp - 0x3e0]	       101	preload-index.c	FUNCTION_3	FOR_1
0x4000589	    0x8b9510fcffff	            mov edx, dword [rbp - 0x3f0]	       101	preload-index.c	FUNCTION_3	FOR_1
0x400058f	          0x895028	             mov dword [rax + 0x28], edx	       101	preload-index.c	FUNCTION_3	FOR_1
0x4000592	    0x488b8520fcff	            mov rax, qword [rbp - 0x3e0]	       102	preload-index.c	FUNCTION_3	FOR_1
0x4000599	    0x8b9514fcffff	            mov edx, dword [rbp - 0x3ec]	       102	preload-index.c	FUNCTION_3	FOR_1
0x400059f	          0x89502c	             mov dword [rax + 0x2c], edx	       102	preload-index.c	FUNCTION_3	FOR_1
0x40005a2	    0x8b8514fcffff	            mov eax, dword [rbp - 0x3ec]	       103	preload-index.c	FUNCTION_3	FOR_1
0x40005a8	     0x18510fcffff	            add dword [rbp - 0x3f0], eax	       103	preload-index.c	FUNCTION_3	FOR_1
0x40005ae	    0x488b8520fcff	            mov rax, qword [rbp - 0x3e0]	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005b5	    0x488b9520fcff	            mov rdx, qword [rbp - 0x3e0]	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005bc	          0x4889d1	                            mov rcx, rdx	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005bf	      0xba00000000	                              mov edx, 0	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005c4	      0xbe00000000	                              mov esi, 0	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005c9	          0x4889c7	                            mov rdi, rax	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005cc	      0xe800000000	                          call 0x40005d1	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005d1	            0x85c0	                           test eax, eax	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005d3	            0x740f	                            je 0x40005e4	       104	preload-index.c	FUNCTION_3	FOR_1	IF_6	CALL_6
0x40005d5	      0xbf00000000	                              mov edi, 0	       105	preload-index.c	FUNCTION_3	FOR_1	CALL_7
0x40005da	      0xb800000000	                              mov eax, 0	       105	preload-index.c	FUNCTION_3	FOR_1	CALL_7
0x40005df	      0xe800000000	                          call 0x40005e4	       105	preload-index.c	FUNCTION_3	FOR_1	CALL_7
0x40005e4	    0x83850cfcffff	              add dword [rbp - 0x3f4], 1	        96	preload-index.c	FUNCTION_3	FOR_1
0x40005eb	    0x8b850cfcffff	            mov eax, dword [rbp - 0x3f4]	        96	preload-index.c	FUNCTION_3	FOR_1
0x40005f1	    0x3b8508fcffff	            cmp eax, dword [rbp - 0x3f8]	        96	preload-index.c	FUNCTION_3	FOR_1
0x40005f7	     0xf8c22ffffff	                            jl 0x400051f	        96	preload-index.c	FUNCTION_3	FOR_1
0x40005fd	    0xc7850cfcffff	              mov dword [rbp - 0x3f4], 0	       107	preload-index.c	FUNCTION_3	FOR_2
0x4000607	            0xeb5b	                           jmp 0x4000664	       107	preload-index.c	FUNCTION_3	FOR_2
0x4000609	    0x8b850cfcffff	            mov eax, dword [rbp - 0x3f4]	       108	preload-index.c	FUNCTION_3	FOR_2
0x400060f	          0x4863d0	                         movsxd rdx, eax	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000612	          0x4889d0	                            mov rax, rdx	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000615	          0x4801c0	                            add rax, rax	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000618	          0x4801d0	                            add rax, rdx	       108	preload-index.c	FUNCTION_3	FOR_2
0x400061b	        0x48c1e004	                              shl rax, 4	       108	preload-index.c	FUNCTION_3	FOR_2
0x400061f	          0x4889c2	                            mov rdx, rax	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000622	    0x488d8530fcff	                  lea rax, [rbp - 0x3d0]	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000629	          0x4801d0	                            add rax, rdx	       108	preload-index.c	FUNCTION_3	FOR_2
0x400062c	    0x48898528fcff	            mov qword [rbp - 0x3d8], rax	       108	preload-index.c	FUNCTION_3	FOR_2
0x4000633	    0x488b8528fcff	            mov rax, qword [rbp - 0x3d8]	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x400063a	          0x488b00	                    mov rax, qword [rax]	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x400063d	      0xbe00000000	                              mov esi, 0	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x4000642	          0x4889c7	                            mov rdi, rax	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x4000645	      0xe800000000	                          call 0x400064a	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x400064a	            0x85c0	                           test eax, eax	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x400064c	            0x740f	                            je 0x400065d	       109	preload-index.c	FUNCTION_3	FOR_2	IF_7	CALL_8
0x400064e	      0xbf00000000	                              mov edi, 0	       110	preload-index.c	FUNCTION_3	FOR_2	CALL_9
0x4000653	      0xb800000000	                              mov eax, 0	       110	preload-index.c	FUNCTION_3	FOR_2	CALL_9
0x4000658	      0xe800000000	                          call 0x400065d	       110	preload-index.c	FUNCTION_3	FOR_2	CALL_9
0x400065d	    0x83850cfcffff	              add dword [rbp - 0x3f4], 1	       107	preload-index.c	FUNCTION_3	FOR_2
0x4000664	    0x8b850cfcffff	            mov eax, dword [rbp - 0x3f4]	       107	preload-index.c	FUNCTION_3	FOR_2
0x400066a	    0x3b8508fcffff	            cmp eax, dword [rbp - 0x3f8]	       107	preload-index.c	FUNCTION_3	FOR_2
0x4000670	            0x7c97	                            jl 0x4000609	       107	preload-index.c	FUNCTION_3	FOR_2
0x4000672	      0xbf00000000	                              mov edi, 0	       112	preload-index.c	FUNCTION_3
0x4000677	      0xe8c4f9ffff	                  call sym.trace_pass_fl	       112	preload-index.c	FUNCTION_3
0x400067c	            0x85c0	                           test eax, eax	       112	preload-index.c	FUNCTION_3
0x400067e	            0x742e	                            je 0x40006ae	       112	preload-index.c	FUNCTION_3
0x4000680	      0xe800000000	                          call 0x4000685	       112	preload-index.c	FUNCTION_3
0x4000685	    0x482b8518fcff	            sub rax, qword [rbp - 0x3e8]	       112	preload-index.c	FUNCTION_3
0x400068c	      0xb900000000	                              mov ecx, 0	       112	preload-index.c	FUNCTION_3
0x4000691	          0x4889c2	                            mov rdx, rax	       112	preload-index.c	FUNCTION_3
0x4000694	      0xbe70000000	                           mov esi, 0x70	       112	preload-index.c	FUNCTION_3
0x4000699	      0xbf00000000	                              mov edi, 0	       112	preload-index.c	FUNCTION_3
0x400069e	      0xb800000000	                              mov eax, 0	       112	preload-index.c	FUNCTION_3
0x40006a3	      0xe800000000	                          call 0x40006a8	       112	preload-index.c	FUNCTION_3
0x40006a8	            0xeb04	                           jmp 0x40006ae	       112	preload-index.c	FUNCTION_3
0x40006aa	              0x90	                                     nop	        84	preload-index.c	FUNCTION_3	IF_1
0x40006ab	            0xeb01	                           jmp 0x40006ae	        84	preload-index.c	FUNCTION_3	IF_1
0x40006ad	              0x90	                                     nop	        90	preload-index.c	FUNCTION_3	IF_3
0x40006ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	preload-index.c	FUNCTION_3
0x40006b2	    0x644833042528	                xor rax, qword fs:[0x28]	       113	preload-index.c	FUNCTION_3
0x40006bb	            0x7405	                            je 0x40006c2	       113	preload-index.c	FUNCTION_3
0x40006bd	      0xe800000000	                          call 0x40006c2	       113	preload-index.c	FUNCTION_3
0x40006c2	              0xc9	                                   leave	       113	preload-index.c	FUNCTION_3
0x40006c3	              0xc3	                                     ret	       113	preload-index.c	FUNCTION_3
preload_thread	IF,10:CALL,6:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,1:ELSE,0	152
0x4000168	              0x55	                                push rbp	        36	preload-index.c	FUNCTION_2
0x4000169	          0x4889e5	                            mov rbp, rsp	        36	preload-index.c	FUNCTION_2
0x400016c	    0x4881ec100100	                          sub rsp, 0x110	        36	preload-index.c	FUNCTION_2
0x4000173	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	        36	preload-index.c	FUNCTION_2
0x400017a	    0x64488b042528	                mov rax, qword fs:[0x28]	        36	preload-index.c	FUNCTION_2
0x4000183	        0x488945f8	                mov qword [rbp - 8], rax	        36	preload-index.c	FUNCTION_2
0x4000187	            0x31c0	                            xor eax, eax	        36	preload-index.c	FUNCTION_2
0x4000189	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	        38	preload-index.c	FUNCTION_2
0x4000190	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	        38	preload-index.c	FUNCTION_2
0x4000197	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        39	preload-index.c	FUNCTION_2
0x400019e	        0x488b4008	                mov rax, qword [rax + 8]	        39	preload-index.c	FUNCTION_2
0x40001a2	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	        39	preload-index.c	FUNCTION_2
0x40001a9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        40	preload-index.c	FUNCTION_2
0x40001b0	          0x488b10	                    mov rdx, qword [rax]	        40	preload-index.c	FUNCTION_2
0x40001b3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        40	preload-index.c	FUNCTION_2
0x40001ba	          0x8b4028	            mov eax, dword [rax + 0x28] 	        40	preload-index.c	FUNCTION_2
0x40001bd	            0x4898	                                    cdqe	        40	preload-index.c	FUNCTION_2
0x40001bf	        0x48c1e003	                              shl rax, 3	        40	preload-index.c	FUNCTION_2
0x40001c3	          0x4801d0	                            add rax, rdx	        40	preload-index.c	FUNCTION_2
0x40001c6	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	        40	preload-index.c	FUNCTION_2
0x40001cd	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	        41	preload-index.c	FUNCTION_2
0x40001d8	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        41	preload-index.c	FUNCTION_2
0x40001e3	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	        41	preload-index.c	FUNCTION_2
0x40001ee	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	        41	preload-index.c	FUNCTION_2
0x40001f8	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	        41	preload-index.c	FUNCTION_2
0x4000202	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	        41	preload-index.c	FUNCTION_2
0x400020c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        43	preload-index.c	FUNCTION_2
0x4000213	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        43	preload-index.c	FUNCTION_2
0x4000216	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	        43	preload-index.c	FUNCTION_2
0x400021c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        44	preload-index.c	FUNCTION_2	IF_1
0x4000223	          0x8b5028	            mov edx, dword [rax + 0x28] 	        44	preload-index.c	FUNCTION_2	IF_1
0x4000226	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	        44	preload-index.c	FUNCTION_2	IF_1
0x400022c	             0x1d0	                            add eax, edx	        44	preload-index.c	FUNCTION_2	IF_1
0x400022e	            0x89c2	                            mov edx, eax	        44	preload-index.c	FUNCTION_2	IF_1
0x4000230	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        44	preload-index.c	FUNCTION_2	IF_1
0x4000237	          0x8b400c	              mov eax, dword [rax + 0xc]	        44	preload-index.c	FUNCTION_2	IF_1
0x400023a	            0x39c2	                            cmp edx, eax	        44	preload-index.c	FUNCTION_2	IF_1
0x400023c	            0x761e	                           jbe 0x400025c	        44	preload-index.c	FUNCTION_2	IF_1
0x400023e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        45	preload-index.c	FUNCTION_2	IF_1
0x4000245	          0x8b500c	              mov edx, dword [rax + 0xc]	        45	preload-index.c	FUNCTION_2	IF_1
0x4000248	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        45	preload-index.c	FUNCTION_2	IF_1
0x400024f	          0x8b4028	            mov eax, dword [rax + 0x28] 	        45	preload-index.c	FUNCTION_2	IF_1
0x4000252	            0x29c2	                            sub edx, eax	        45	preload-index.c	FUNCTION_2	IF_1
0x4000254	            0x89d0	                            mov eax, edx	        45	preload-index.c	FUNCTION_2	IF_1
0x4000256	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	        45	preload-index.c	FUNCTION_2	IF_1
0x400025c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	        48	preload-index.c	FUNCTION_2	DO_1
0x4000263	        0x488d5008	                      lea rdx, [rax + 8]	        48	preload-index.c	FUNCTION_2	DO_1
0x4000267	    0x48899510ffff	             mov qword [rbp - 0xf0], rdx	        48	preload-index.c	FUNCTION_2	DO_1
0x400026e	          0x488b00	                    mov rax, qword [rax]	        48	preload-index.c	FUNCTION_2	DO_1
0x4000271	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        48	preload-index.c	FUNCTION_2	DO_1
0x4000278	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x400027f	          0x8b4038	            mov eax, dword [rax + 0x38] 	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x4000282	      0x2500300000	                         and eax, 0x3000	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x4000287	          0xc1e80c	                            shr eax, 0xc	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x400028a	            0x85c0	                           test eax, eax	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x400028c	     0xf852d010000	                           jne 0x40003bf	        51	preload-index.c	FUNCTION_2	DO_1	IF_2
0x4000292	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        53	preload-index.c	FUNCTION_2	DO_1	IF_3
0x4000299	          0x8b4034	            mov eax, dword [rax + 0x34] 	        53	preload-index.c	FUNCTION_2	DO_1	IF_3
0x400029c	      0x2500f00000	                         and eax, 0xf000	        53	preload-index.c	FUNCTION_2	DO_1	IF_3
0x40002a1	      0x3d00e00000	                         cmp eax, 0xe000	        53	preload-index.c	FUNCTION_2	DO_1	IF_3
0x40002a6	     0xf8416010000	                            je 0x40003c2	        53	preload-index.c	FUNCTION_2	DO_1	IF_3
0x40002ac	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        55	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40002b3	          0x8b4038	            mov eax, dword [rax + 0x38] 	        55	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40002b6	      0x2500000400	                        and eax, 0x40000	        55	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40002bb	            0x85c0	                           test eax, eax	        55	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40002bd	     0xf8502010000	                           jne 0x40003c5	        55	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40002c3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        57	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40002ca	          0x8b4038	            mov eax, dword [rax + 0x38] 	        57	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40002cd	      0x2500000040	                     and eax, 0x40000000	        57	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40002d2	            0x85c0	                           test eax, eax	        57	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40002d4	     0xf85ee000000	                           jne 0x40003c8	        57	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40002da	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        59	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40002e1	          0x8b4038	            mov eax, dword [rax + 0x38] 	        59	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40002e4	      0x2500002000	                       and eax, 0x200000	        59	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40002e9	            0x85c0	                           test eax, eax	        59	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40002eb	     0xf85da000000	                           jne 0x40003cb	        59	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40002f1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x40002f8	        0x488d4810	                   lea rcx, [rax + 0x10]	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x40002fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x4000303	      0xba00000000	                              mov edx, 0	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x4000308	          0x4889ce	                            mov rsi, rcx	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x400030b	          0x4889c7	                            mov rdi, rax	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x400030e	      0xe878fdffff	                  call sym.ce_path_match	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x4000313	            0x85c0	                           test eax, eax	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x4000315	     0xf84b3000000	                            je 0x40003ce	        61	preload-index.c	FUNCTION_2	DO_1	IF_7	CALL_1
0x400031b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000322	          0x8b403c	            mov eax, dword [rax + 0x3c] 	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000325	            0x89c2	                            mov edx, eax	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000327	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x400032e	        0x488d4858	                   lea rcx, [rax + 0x58]	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000332	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000339	          0x4889ce	                            mov rsi, rcx	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x400033c	          0x4889c7	                            mov rdi, rax	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x400033f	      0xe800000000	                          call 0x4000344	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000344	            0x85c0	                           test eax, eax	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x4000346	     0xf8585000000	                           jne 0x40003d1	        63	preload-index.c	FUNCTION_2	DO_1	IF_8	CALL_2
0x400034c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x4000353	        0x488d5058	                   lea rdx, [rax + 0x58]	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x4000357	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x400035e	          0x4889c6	                            mov rsi, rax	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x4000361	          0x4889d7	                            mov rdi, rdx	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x4000364	      0xe800000000	                          call 0x4000369	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x4000369	            0x85c0	                           test eax, eax	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x400036b	            0x7567	                           jne 0x40003d4	        65	preload-index.c	FUNCTION_2	DO_1	IF_9	CALL_3
0x400036d	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x4000374	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x400037b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x4000382	      0xb922000000	                           mov ecx, 0x22	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x4000387	          0x4889c7	                            mov rdi, rax	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x400038a	      0xe800000000	                          call 0x400038f	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x400038f	            0x85c0	                           test eax, eax	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x4000391	            0x7544	                           jne 0x40003d7	        67	preload-index.c	FUNCTION_2	DO_1	IF_10	CALL_4
0x4000393	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        69	preload-index.c	FUNCTION_2	DO_1
0x400039a	          0x8b4038	            mov eax, dword [rax + 0x38] 	        69	preload-index.c	FUNCTION_2	DO_1
0x400039d	       0xd00000400	                         or eax, 0x40000	        69	preload-index.c	FUNCTION_2	DO_1
0x40003a2	            0x89c2	                            mov edx, eax	        69	preload-index.c	FUNCTION_2	DO_1
0x40003a4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        69	preload-index.c	FUNCTION_2	DO_1
0x40003ab	          0x895038	             mov dword [rax + 0x38], edx	        69	preload-index.c	FUNCTION_2	DO_1
0x40003ae	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        70	preload-index.c	FUNCTION_2	DO_1	CALL_5
0x40003b5	          0x4889c7	                            mov rdi, rax	        70	preload-index.c	FUNCTION_2	DO_1	CALL_5
0x40003b8	      0xe844fdffff	           call sym.mark_fsmonitor_valid	        70	preload-index.c	FUNCTION_2	DO_1	CALL_5
0x40003bd	            0xeb19	                           jmp 0x40003d8	        70	preload-index.c	FUNCTION_2	DO_1	CALL_5
0x40003bf	              0x90	                                     nop	        52	preload-index.c	FUNCTION_2	DO_1	IF_2
0x40003c0	            0xeb16	                           jmp 0x40003d8	        52	preload-index.c	FUNCTION_2	DO_1	IF_2
0x40003c2	              0x90	                                     nop	        54	preload-index.c	FUNCTION_2	DO_1	IF_3
0x40003c3	            0xeb13	                           jmp 0x40003d8	        54	preload-index.c	FUNCTION_2	DO_1	IF_3
0x40003c5	              0x90	                                     nop	        56	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40003c6	            0xeb10	                           jmp 0x40003d8	        56	preload-index.c	FUNCTION_2	DO_1	IF_4
0x40003c8	              0x90	                                     nop	        58	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40003c9	            0xeb0d	                           jmp 0x40003d8	        58	preload-index.c	FUNCTION_2	DO_1	IF_5
0x40003cb	              0x90	                                     nop	        60	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40003cc	            0xeb0a	                           jmp 0x40003d8	        60	preload-index.c	FUNCTION_2	DO_1	IF_6
0x40003ce	              0x90	                                     nop	        62	preload-index.c	FUNCTION_2	DO_1	IF_7
0x40003cf	            0xeb07	                           jmp 0x40003d8	        62	preload-index.c	FUNCTION_2	DO_1	IF_7
0x40003d1	              0x90	                                     nop	        64	preload-index.c	FUNCTION_2	DO_1	IF_8
0x40003d2	            0xeb04	                           jmp 0x40003d8	        64	preload-index.c	FUNCTION_2	DO_1	IF_8
0x40003d4	              0x90	                                     nop	        66	preload-index.c	FUNCTION_2	DO_1	IF_9
0x40003d5	            0xeb01	                           jmp 0x40003d8	        66	preload-index.c	FUNCTION_2	DO_1	IF_9
0x40003d7	              0x90	                                     nop	        68	preload-index.c	FUNCTION_2	DO_1	IF_10
0x40003d8	    0x83ad0cffffff	               sub dword [rbp - 0xf4], 1	        71	preload-index.c	FUNCTION_2	DO_1
0x40003df	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	        71	preload-index.c	FUNCTION_2	DO_1
0x40003e6	     0xf8f70feffff	                            jg 0x400025c	        71	preload-index.c	FUNCTION_2	DO_1
0x40003ec	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	        72	preload-index.c	FUNCTION_2	CALL_6
0x40003f3	          0x4889c7	                            mov rdi, rax	        72	preload-index.c	FUNCTION_2	CALL_6
0x40003f6	      0xe875fcffff	                call sym.cache_def_clear	        72	preload-index.c	FUNCTION_2	CALL_6
0x40003fb	      0xb800000000	                              mov eax, 0	        73	preload-index.c	FUNCTION_2
0x4000400	        0x488b4df8	                mov rcx, qword [rbp - 8]	        74	preload-index.c	FUNCTION_2
0x4000404	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	preload-index.c	FUNCTION_2
0x400040d	            0x7405	                            je 0x4000414	        74	preload-index.c	FUNCTION_2
0x400040f	      0xe800000000	                          call 0x4000414	        74	preload-index.c	FUNCTION_2
0x4000414	              0xc9	                                   leave	        74	preload-index.c	FUNCTION_2
0x4000415	              0xc3	                                     ret	        74	preload-index.c	FUNCTION_2
trace_pass_fl	IF,0:CALL,0:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,0:ELSE,0	17
0x4000040	              0x55	                                push rbp	       134	trace.h	FUNCTION_7
0x4000041	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_7
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_7
0x4000048	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_7
0x400004c	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_7
0x400004f	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_7
0x4000051	            0x750f	                           jne 0x4000062	       135	trace.h	FUNCTION_7
0x4000053	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_7
0x4000057	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_7
0x400005b	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_7
0x400005e	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_7
0x4000060	            0x7507	                           jne 0x4000069	       135	trace.h	FUNCTION_7
0x4000062	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_7
0x4000067	            0xeb05	                           jmp 0x400006e	       135	trace.h	FUNCTION_7
0x4000069	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_7
0x400006e	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_7
0x400006f	              0xc3	                                     ret	       136	trace.h	FUNCTION_7
cache_def_clear	IF,0:CALL,1:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,0:ELSE,0	10
0x4000070	              0x55	                                push rbp	      1539	cache.h	FUNCTION_33
0x4000071	          0x4889e5	                            mov rbp, rsp	      1539	cache.h	FUNCTION_33
0x4000074	        0x4883ec10	                           sub rsp, 0x10	      1539	cache.h	FUNCTION_33
0x4000078	        0x48897df8	                mov qword [rbp - 8], rdi	      1539	cache.h	FUNCTION_33
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1540	cache.h	FUNCTION_33	CALL_1
0x4000080	          0x4889c7	                            mov rdi, rax	      1540	cache.h	FUNCTION_33	CALL_1
0x4000083	      0xe800000000	                          call 0x4000088	      1540	cache.h	FUNCTION_33	CALL_1
0x4000088	              0x90	                                     nop	      1541	cache.h	FUNCTION_33
0x4000089	              0xc9	                                   leave	      1541	cache.h	FUNCTION_33
0x400008a	              0xc3	                                     ret	      1541	cache.h	FUNCTION_33
ce_path_match	IF,0:CALL,2:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,0:ELSE,0	34
0x400008b	              0x55	                                push rbp	       335	dir.h	FUNCTION_36
0x400008c	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_36
0x400008f	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_36
0x4000093	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_36
0x4000097	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_36
0x400009b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_36
0x400009f	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_36	CALL_2
0x40000a3	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_36	CALL_2
0x40000a6	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_36	CALL_2
0x40000ab	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_36	CALL_1
0x40000b0	            0x7413	                            je 0x40000c5	       336	dir.h	FUNCTION_36	CALL_1
0x40000b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_36	CALL_2
0x40000b6	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_36	CALL_2
0x40000b9	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_36	CALL_2
0x40000be	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_36	CALL_1
0x40000c3	            0x7507	                           jne 0x40000cc	       336	dir.h	FUNCTION_36	CALL_1
0x40000c5	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_36	CALL_1
0x40000ca	            0xeb05	                           jmp 0x40000d1	       336	dir.h	FUNCTION_36	CALL_1
0x40000cc	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_36	CALL_1
0x40000d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_36	CALL_1
0x40000d5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_36	CALL_1
0x40000d8	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_36	CALL_1
0x40000da	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_36	CALL_1
0x40000de	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_36	CALL_1
0x40000e2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_36	CALL_1
0x40000e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_36	CALL_1
0x40000ea	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_36	CALL_1
0x40000ed	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_36	CALL_1
0x40000f0	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_36	CALL_1
0x40000f5	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_36	CALL_1
0x40000f7	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_36	CALL_1
0x40000fa	      0xe800000000	                          call 0x40000ff	       336	dir.h	FUNCTION_36	CALL_1
0x40000ff	              0xc9	                                   leave	       338	dir.h	FUNCTION_36
0x4000100	              0xc3	                                     ret	       338	dir.h	FUNCTION_36
mark_fsmonitor_valid	IF,1:CALL,0:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,0:ELSE,0	29
0x4000101	              0x55	                                push rbp	        50	fsmonitor.h	FUNCTION_5
0x4000102	          0x4889e5	                            mov rbp, rsp	        50	fsmonitor.h	FUNCTION_5
0x4000105	        0x4883ec10	                           sub rsp, 0x10	        50	fsmonitor.h	FUNCTION_5
0x4000109	        0x48897df8	                mov qword [rbp - 8], rdi	        50	fsmonitor.h	FUNCTION_5
0x400010d	    0x488b05000000	            mov rax, qword [0x04000114] 	        51	fsmonitor.h	FUNCTION_5	IF_1
0x4000114	          0x4885c0	                           test rax, rax	        51	fsmonitor.h	FUNCTION_5	IF_1
0x4000117	            0x744c	                            je 0x4000165	        51	fsmonitor.h	FUNCTION_5	IF_1
0x4000119	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	fsmonitor.h	FUNCTION_5	IF_1
0x400011d	          0x8b4038	            mov eax, dword [rax + 0x38] 	        52	fsmonitor.h	FUNCTION_5	IF_1
0x4000120	       0xd00002000	                        or eax, 0x200000	        52	fsmonitor.h	FUNCTION_5	IF_1
0x4000125	            0x89c2	                            mov edx, eax	        52	fsmonitor.h	FUNCTION_5	IF_1
0x4000127	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	fsmonitor.h	FUNCTION_5	IF_1
0x400012b	          0x895038	             mov dword [rax + 0x38], edx	        52	fsmonitor.h	FUNCTION_5	IF_1
0x400012e	      0xbf00000000	                              mov edi, 0	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000133	      0xe808ffffff	                  call sym.trace_pass_fl	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000138	            0x85c0	                           test eax, eax	        53	fsmonitor.h	FUNCTION_5	IF_1
0x400013a	            0x7429	                            je 0x4000165	        53	fsmonitor.h	FUNCTION_5	IF_1
0x400013c	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000140	        0x4883c058	                           add rax, 0x58	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000144	          0x4989c0	                             mov r8, rax	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000147	      0xb900000000	                              mov ecx, 0	        53	fsmonitor.h	FUNCTION_5	IF_1
0x400014c	      0xba00000000	                              mov edx, 0	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000151	      0xbe35000000	                           mov esi, 0x35	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000156	      0xbf00000000	                              mov edi, 0	        53	fsmonitor.h	FUNCTION_5	IF_1
0x400015b	      0xb800000000	                              mov eax, 0	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000160	      0xe800000000	                          call 0x4000165	        53	fsmonitor.h	FUNCTION_5	IF_1
0x4000165	              0x90	                                     nop	        55	fsmonitor.h	FUNCTION_5
0x4000166	              0xc9	                                   leave	        55	fsmonitor.h	FUNCTION_5
0x4000167	              0xc3	                                     ret	        55	fsmonitor.h	FUNCTION_5
read_index_preload	IF,0:CALL,2:functions,0:FOR,0:WHILE,0:SWITCH,0:DO,0:ELSE,0	17
0x40006c4	              0x55	                                push rbp	       118	preload-index.c	FUNCTION_4
0x40006c5	          0x4889e5	                            mov rbp, rsp	       118	preload-index.c	FUNCTION_4
0x40006c8	        0x4883ec20	                           sub rsp, 0x20	       118	preload-index.c	FUNCTION_4
0x40006cc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       118	preload-index.c	FUNCTION_4
0x40006d0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       118	preload-index.c	FUNCTION_4
0x40006d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	preload-index.c	FUNCTION_4	CALL_1
0x40006d8	          0x4889c7	                            mov rdi, rax	       119	preload-index.c	FUNCTION_4	CALL_1
0x40006db	      0xe800000000	                          call 0x40006e0	       119	preload-index.c	FUNCTION_4	CALL_1
0x40006e0	          0x8945fc	                mov dword [rbp - 4], eax	       119	preload-index.c	FUNCTION_4	CALL_1
0x40006e3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       121	preload-index.c	FUNCTION_4	CALL_2
0x40006e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       121	preload-index.c	FUNCTION_4	CALL_2
0x40006eb	          0x4889d6	                            mov rsi, rdx	       121	preload-index.c	FUNCTION_4	CALL_2
0x40006ee	          0x4889c7	                            mov rdi, rax	       121	preload-index.c	FUNCTION_4	CALL_2
0x40006f1	      0xe820fdffff	                  call sym.preload_index	       121	preload-index.c	FUNCTION_4	CALL_2
0x40006f6	          0x8b45fc	                mov eax, dword [rbp - 4]	       122	preload-index.c	FUNCTION_4
0x40006f9	              0xc9	                                   leave	       123	preload-index.c	FUNCTION_4
0x40006fa	              0xc3	                                     ret	       123	preload-index.c	FUNCTION_4
