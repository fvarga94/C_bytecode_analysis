check_ignore	DO,0:WHILE,0:SWITCH,0:IF,5:FOR,1:functions,0:CALL,7:ELSE,0	108
0x400037d	              0x55	                                push rbp	        72	check-ignore.c	FUNCTION_2
0x400037e	          0x4889e5	                            mov rbp, rsp	        72	check-ignore.c	FUNCTION_2
0x4000381	        0x4883ec70	                           sub rsp, 0x70	        72	check-ignore.c	FUNCTION_2
0x4000385	        0x48897da8	             mov qword [rbp - 0x58], rdi	        72	check-ignore.c	FUNCTION_2
0x4000389	        0x488975a0	             mov qword [rbp - 0x60], rsi	        72	check-ignore.c	FUNCTION_2
0x400038d	          0x89559c	             mov dword [rbp - 0x64], edx	        72	check-ignore.c	FUNCTION_2
0x4000390	        0x48894d90	             mov qword [rbp - 0x70], rcx	        72	check-ignore.c	FUNCTION_2
0x4000394	    0x64488b042528	                mov rax, qword fs:[0x28]	        72	check-ignore.c	FUNCTION_2
0x400039d	        0x488945f8	                mov qword [rbp - 8], rax	        72	check-ignore.c	FUNCTION_2
0x40003a1	            0x31c0	                            xor eax, eax	        72	check-ignore.c	FUNCTION_2
0x40003a3	    0xc745c0000000	               mov dword [rbp - 0x40], 0	        75	check-ignore.c	FUNCTION_2
0x40003aa	        0x837d9c00	               cmp dword [rbp - 0x64], 0	        79	check-ignore.c	FUNCTION_2	IF_1
0x40003ae	            0x7532	                           jne 0x40003e2	        79	check-ignore.c	FUNCTION_2	IF_1
0x40003b0	    0x8b0500000000	            mov eax, dword [0x040003b6] 	        80	check-ignore.c	FUNCTION_2	IF_1	IF_2
0x40003b6	            0x85c0	                           test eax, eax	        80	check-ignore.c	FUNCTION_2	IF_1	IF_2
0x40003b8	            0x751e	                           jne 0x40003d8	        80	check-ignore.c	FUNCTION_2	IF_1	IF_2
0x40003ba	    0x488b05000000	            mov rax, qword [0x040003c1] 	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003c1	          0x4889c1	                            mov rcx, rax	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003c4	      0xba13000000	                           mov edx, 0x13	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003c9	      0xbe01000000	                              mov esi, 1	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003ce	      0xbf00000000	                              mov edi, 0	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003d3	      0xe800000000	                          call 0x40003d8	        81	check-ignore.c	FUNCTION_2	IF_1	CALL_1
0x40003d8	      0xb800000000	                              mov eax, 0	        82	check-ignore.c	FUNCTION_2	IF_1
0x40003dd	      0xe931010000	                           jmp 0x4000513	        82	check-ignore.c	FUNCTION_2	IF_1
0x40003e2	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003e6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003ea	        0x488d45e0	                   lea rax, [rbp - 0x20]	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003ee	          0x4989c8	                             mov r8, rcx	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003f1	          0x4889d1	                            mov rcx, rdx	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003f4	      0xba28000000	                           mov edx, 0x28	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003f9	      0xbe7e000000	                           mov esi, 0x7e	        89	check-ignore.c	FUNCTION_2	CALL_2
0x40003fe	          0x4889c7	                            mov rdi, rax	        89	check-ignore.c	FUNCTION_2	CALL_2
0x4000401	      0xe800000000	                          call 0x4000406	        89	check-ignore.c	FUNCTION_2	CALL_2
0x4000406	        0x488d45e0	                   lea rax, [rbp - 0x20]	        95	check-ignore.c	FUNCTION_2	CALL_3
0x400040a	          0x4889c6	                            mov rsi, rax	        95	check-ignore.c	FUNCTION_2	CALL_3
0x400040d	      0xbf00000000	                              mov edi, 0	        95	check-ignore.c	FUNCTION_2	CALL_3
0x4000412	      0xe800000000	                          call 0x4000417	        95	check-ignore.c	FUNCTION_2	CALL_3
0x4000417	        0x488d45e0	                   lea rax, [rbp - 0x20]	       102	check-ignore.c	FUNCTION_2	CALL_4
0x400041b	      0xbe00000000	                              mov esi, 0	       102	check-ignore.c	FUNCTION_2	CALL_4
0x4000420	          0x4889c7	                            mov rdi, rax	       102	check-ignore.c	FUNCTION_2	CALL_4
0x4000423	      0xe800000000	                          call 0x4000428	       102	check-ignore.c	FUNCTION_2	CALL_4
0x4000428	        0x488945d0	             mov qword [rbp - 0x30], rax	       102	check-ignore.c	FUNCTION_2	CALL_4
0x400042c	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       103	check-ignore.c	FUNCTION_2	FOR_1
0x4000433	      0xe9c0000000	                           jmp 0x40004f8	       103	check-ignore.c	FUNCTION_2	FOR_1
0x4000438	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       104	check-ignore.c	FUNCTION_2	FOR_1
0x400043c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       104	check-ignore.c	FUNCTION_2	FOR_1
0x400043f	            0x4898	                                    cdqe	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000441	        0x48c1e003	                              shl rax, 3	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000445	    0x488d0cc50000	                        lea rcx, [rax*8]	       104	check-ignore.c	FUNCTION_2	FOR_1
0x400044d	          0x4829c1	                            sub rcx, rax	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000450	          0x4889c8	                            mov rax, rcx	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000453	          0x4801d0	                            add rax, rdx	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000456	          0x488b00	                    mov rax, qword [rax]	       104	check-ignore.c	FUNCTION_2	FOR_1
0x4000459	        0x488945d8	             mov qword [rbp - 0x28], rax	       104	check-ignore.c	FUNCTION_2	FOR_1
0x400045d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       105	check-ignore.c	FUNCTION_2	FOR_1
0x4000465	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000468	          0x4863d0	                         movsxd rdx, eax	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x400046b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x400046f	          0x4801d0	                            add rax, rdx	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000472	           0xfb600	                   movzx eax, byte [rax]	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000475	            0x84c0	                             test al, al	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000477	            0x7524	                           jne 0x400049d	       106	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000479	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       107	check-ignore.c	FUNCTION_2	FOR_1	IF_3
0x4000480	        0x488d4dbc	                   lea rcx, [rbp - 0x44]	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000484	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000488	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400048c	      0xbe00000000	                              mov esi, 0	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000491	          0x4889c7	                            mov rdi, rax	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000494	      0xe800000000	                          call 0x4000499	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x4000499	        0x488945c8	             mov qword [rbp - 0x38], rax	       108	check-ignore.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x400049d	    0x8b0500000000	            mov eax, dword [0x040004a3] 	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004a3	            0x85c0	                           test eax, eax	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004a5	            0x7542	                           jne 0x40004e9	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004a7	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004ac	            0x750a	                           jne 0x40004b8	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004ae	    0x8b0500000000	            mov eax, dword [0x040004b4] 	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004b4	            0x85c0	                           test eax, eax	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004b6	            0x7431	                            je 0x40004e9	       111	check-ignore.c	FUNCTION_2	FOR_1	IF_4
0x40004b8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004bc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004bf	            0x4898	                                    cdqe	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004c1	        0x48c1e003	                              shl rax, 3	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004c5	    0x488d0cc50000	                        lea rcx, [rax*8]	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004cd	          0x4829c1	                            sub rcx, rax	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004d0	          0x4889c8	                            mov rax, rcx	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004d3	          0x4801d0	                            add rax, rdx	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004d6	        0x488b4008	                mov rax, qword [rax + 8]	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004da	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004de	          0x4889d6	                            mov rsi, rdx	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004e1	          0x4889c7	                            mov rdi, rax	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004e4	      0xe8b1fcffff	                 call sym.output_exclude	       112	check-ignore.c	FUNCTION_2	FOR_1	CALL_6
0x40004e9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       113	check-ignore.c	FUNCTION_2	FOR_1	IF_5
0x40004ee	            0x7404	                            je 0x40004f4	       113	check-ignore.c	FUNCTION_2	FOR_1	IF_5
0x40004f0	        0x8345c001	               add dword [rbp - 0x40], 1	       114	check-ignore.c	FUNCTION_2	FOR_1	IF_5
0x40004f4	        0x8345c401	               add dword [rbp - 0x3c], 1	       103	check-ignore.c	FUNCTION_2	FOR_1
0x40004f8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       103	check-ignore.c	FUNCTION_2	FOR_1
0x40004fb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       103	check-ignore.c	FUNCTION_2	FOR_1
0x40004fe	     0xf8f34ffffff	                            jg 0x4000438	       103	check-ignore.c	FUNCTION_2	FOR_1
0x4000504	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       116	check-ignore.c	FUNCTION_2	CALL_7
0x4000508	          0x4889c7	                            mov rdi, rax	       116	check-ignore.c	FUNCTION_2	CALL_7
0x400050b	      0xe800000000	                          call 0x4000510	       116	check-ignore.c	FUNCTION_2	CALL_7
0x4000510	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       118	check-ignore.c	FUNCTION_2
0x4000513	        0x488b75f8	                mov rsi, qword [rbp - 8]	       119	check-ignore.c	FUNCTION_2
0x4000517	    0x644833342528	                xor rsi, qword fs:[0x28]	       119	check-ignore.c	FUNCTION_2
0x4000520	            0x7405	                            je 0x4000527	       119	check-ignore.c	FUNCTION_2
0x4000522	      0xe800000000	                          call 0x4000527	       119	check-ignore.c	FUNCTION_2
0x4000527	              0xc9	                                   leave	       119	check-ignore.c	FUNCTION_2
0x4000528	              0xc3	                                     ret	       119	check-ignore.c	FUNCTION_2
cmd_check_ignore	DO,0:WHILE,0:SWITCH,0:IF,10:FOR,0:functions,0:CALL,23:ELSE,2	128
0x400069e	              0x55	                                push rbp	       148	check-ignore.c	FUNCTION_4
0x400069f	          0x4889e5	                            mov rbp, rsp	       148	check-ignore.c	FUNCTION_4
0x40006a2	    0x4881ec500100	                          sub rsp, 0x150	       148	check-ignore.c	FUNCTION_4
0x40006a9	    0x89bdccfeffff	            mov dword [rbp - 0x134], edi	       148	check-ignore.c	FUNCTION_4
0x40006af	    0x4889b5c0feff	            mov qword [rbp - 0x140], rsi	       148	check-ignore.c	FUNCTION_4
0x40006b6	    0x488995b8feff	            mov qword [rbp - 0x148], rdx	       148	check-ignore.c	FUNCTION_4
0x40006bd	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	check-ignore.c	FUNCTION_4
0x40006c6	        0x488945f8	                mov qword [rbp - 8], rax	       148	check-ignore.c	FUNCTION_4
0x40006ca	            0x31c0	                            xor eax, eax	       148	check-ignore.c	FUNCTION_4
0x40006cc	      0xbe00000000	                              mov esi, 0	       152	check-ignore.c	FUNCTION_4	CALL_1
0x40006d1	      0xbf00000000	                              mov edi, 0	       152	check-ignore.c	FUNCTION_4	CALL_1
0x40006d6	      0xe800000000	                          call 0x40006db	       152	check-ignore.c	FUNCTION_4	CALL_1
0x40006db	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	       154	check-ignore.c	FUNCTION_4	CALL_2
0x40006e2	    0x488bb5c0feff	            mov rsi, qword [rbp - 0x140]	       154	check-ignore.c	FUNCTION_4	CALL_2
0x40006e9	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       154	check-ignore.c	FUNCTION_4	CALL_2
0x40006ef	    0x41b900000000	                              mov r9d, 0	       154	check-ignore.c	FUNCTION_4	CALL_2
0x40006f5	    0x41b800000000	                              mov r8d, 0	       154	check-ignore.c	FUNCTION_4	CALL_2
0x40006fb	      0xb900000000	                              mov ecx, 0	       154	check-ignore.c	FUNCTION_4	CALL_2
0x4000700	            0x89c7	                            mov edi, eax	       154	check-ignore.c	FUNCTION_4	CALL_2
0x4000702	      0xe800000000	                          call 0x4000707	       154	check-ignore.c	FUNCTION_4	CALL_2
0x4000707	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	       154	check-ignore.c	FUNCTION_4	CALL_2
0x400070d	    0x8b0500000000	            mov eax, dword [0x04000713] 	       157	check-ignore.c	FUNCTION_4	IF_1
0x4000713	            0x85c0	                           test eax, eax	       157	check-ignore.c	FUNCTION_4	IF_1
0x4000715	            0x7420	                            je 0x4000737	       157	check-ignore.c	FUNCTION_4	IF_1
0x4000717	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       158	check-ignore.c	FUNCTION_4	IF_1	IF_2
0x400071e	            0x7e58	                           jle 0x4000778	       158	check-ignore.c	FUNCTION_4	IF_1	IF_2
0x4000720	      0xbf00000000	                              mov edi, 0	       159	check-ignore.c	FUNCTION_4	IF_1	CALL_4
0x4000725	      0xe844faffff	                               call sym.	       159	check-ignore.c	FUNCTION_4	IF_1	CALL_4
0x400072a	          0x4889c7	                            mov rdi, rax	       159	check-ignore.c	FUNCTION_4	IF_1	CALL_4
0x400072d	      0xb800000000	                              mov eax, 0	       159	check-ignore.c	FUNCTION_4	IF_1	CALL_4
0x4000732	      0xe800000000	                          call 0x4000737	       159	check-ignore.c	FUNCTION_4	IF_1	CALL_4
0x4000737	    0x8b0500000000	            mov eax, dword [0x0400073d] 	       161	check-ignore.c	FUNCTION_4	ELSE_1	IF_3
0x400073d	            0x85c0	                           test eax, eax	       161	check-ignore.c	FUNCTION_4	ELSE_1	IF_3
0x400073f	            0x7417	                            je 0x4000758	       161	check-ignore.c	FUNCTION_4	ELSE_1	IF_3
0x4000741	      0xbf00000000	                              mov edi, 0	       162	check-ignore.c	FUNCTION_4	ELSE_1	CALL_6
0x4000746	      0xe823faffff	                               call sym.	       162	check-ignore.c	FUNCTION_4	ELSE_1	CALL_6
0x400074b	          0x4889c7	                            mov rdi, rax	       162	check-ignore.c	FUNCTION_4	ELSE_1	CALL_6
0x400074e	      0xb800000000	                              mov eax, 0	       162	check-ignore.c	FUNCTION_4	ELSE_1	CALL_6
0x4000753	      0xe800000000	                          call 0x4000758	       162	check-ignore.c	FUNCTION_4	ELSE_1	CALL_6
0x4000758	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       163	check-ignore.c	FUNCTION_4	ELSE_1	IF_4
0x400075f	            0x7517	                           jne 0x4000778	       163	check-ignore.c	FUNCTION_4	ELSE_1	IF_4
0x4000761	      0xbf00000000	                              mov edi, 0	       164	check-ignore.c	FUNCTION_4	ELSE_1	CALL_8
0x4000766	      0xe803faffff	                               call sym.	       164	check-ignore.c	FUNCTION_4	ELSE_1	CALL_8
0x400076b	          0x4889c7	                            mov rdi, rax	       164	check-ignore.c	FUNCTION_4	ELSE_1	CALL_8
0x400076e	      0xb800000000	                              mov eax, 0	       164	check-ignore.c	FUNCTION_4	ELSE_1	CALL_8
0x4000773	      0xe800000000	                          call 0x4000778	       164	check-ignore.c	FUNCTION_4	ELSE_1	CALL_8
0x4000778	    0x8b0500000000	            mov eax, dword [0x0400077e] 	       166	check-ignore.c	FUNCTION_4	IF_5
0x400077e	            0x85c0	                           test eax, eax	       166	check-ignore.c	FUNCTION_4	IF_5
0x4000780	            0x7441	                            je 0x40007c3	       166	check-ignore.c	FUNCTION_4	IF_5
0x4000782	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 1	       167	check-ignore.c	FUNCTION_4	IF_5	IF_6
0x4000789	            0x7e17	                           jle 0x40007a2	       167	check-ignore.c	FUNCTION_4	IF_5	IF_6
0x400078b	      0xbf00000000	                              mov edi, 0	       168	check-ignore.c	FUNCTION_4	IF_5	CALL_10
0x4000790	      0xe8d9f9ffff	                               call sym.	       168	check-ignore.c	FUNCTION_4	IF_5	CALL_10
0x4000795	          0x4889c7	                            mov rdi, rax	       168	check-ignore.c	FUNCTION_4	IF_5	CALL_10
0x4000798	      0xb800000000	                              mov eax, 0	       168	check-ignore.c	FUNCTION_4	IF_5	CALL_10
0x400079d	      0xe800000000	                          call 0x40007a2	       168	check-ignore.c	FUNCTION_4	IF_5	CALL_10
0x40007a2	    0x8b0500000000	            mov eax, dword [0x040007a8] 	       169	check-ignore.c	FUNCTION_4	IF_5	IF_7
0x40007a8	            0x85c0	                           test eax, eax	       169	check-ignore.c	FUNCTION_4	IF_5	IF_7
0x40007aa	            0x7417	                            je 0x40007c3	       169	check-ignore.c	FUNCTION_4	IF_5	IF_7
0x40007ac	      0xbf00000000	                              mov edi, 0	       170	check-ignore.c	FUNCTION_4	IF_5	CALL_12
0x40007b1	      0xe8b8f9ffff	                               call sym.	       170	check-ignore.c	FUNCTION_4	IF_5	CALL_12
0x40007b6	          0x4889c7	                            mov rdi, rax	       170	check-ignore.c	FUNCTION_4	IF_5	CALL_12
0x40007b9	      0xb800000000	                              mov eax, 0	       170	check-ignore.c	FUNCTION_4	IF_5	CALL_12
0x40007be	      0xe800000000	                          call 0x40007c3	       170	check-ignore.c	FUNCTION_4	IF_5	CALL_12
0x40007c3	    0x8b0500000000	            mov eax, dword [0x040007c9] 	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007c9	            0x85c0	                           test eax, eax	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007cb	            0x7421	                            je 0x40007ee	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007cd	    0x8b0500000000	            mov eax, dword [0x040007d3] 	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007d3	            0x85c0	                           test eax, eax	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007d5	            0x7517	                           jne 0x40007ee	       172	check-ignore.c	FUNCTION_4	IF_8
0x40007d7	      0xbf00000000	                              mov edi, 0	       173	check-ignore.c	FUNCTION_4	CALL_14
0x40007dc	      0xe88df9ffff	                               call sym.	       173	check-ignore.c	FUNCTION_4	CALL_14
0x40007e1	          0x4889c7	                            mov rdi, rax	       173	check-ignore.c	FUNCTION_4	CALL_14
0x40007e4	      0xb800000000	                              mov eax, 0	       173	check-ignore.c	FUNCTION_4	CALL_14
0x40007e9	      0xe800000000	                          call 0x40007ee	       173	check-ignore.c	FUNCTION_4	CALL_14
0x40007ee	    0x8b0500000000	            mov eax, dword [0x040007f4] 	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x40007f4	            0x85c0	                           test eax, eax	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x40007f6	            0x7525	                           jne 0x400081d	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x40007f8	      0xbf00000000	                              mov edi, 0	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x40007fd	      0xe800000000	                          call 0x4000802	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x4000802	            0x85c0	                           test eax, eax	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x4000804	            0x7917	                           jns 0x400081d	       176	check-ignore.c	FUNCTION_4	IF_9	CALL_15
0x4000806	      0xbf00000000	                              mov edi, 0	       177	check-ignore.c	FUNCTION_4	CALL_17
0x400080b	      0xe85ef9ffff	                               call sym.	       177	check-ignore.c	FUNCTION_4	CALL_17
0x4000810	          0x4889c7	                            mov rdi, rax	       177	check-ignore.c	FUNCTION_4	CALL_17
0x4000813	      0xb800000000	                              mov eax, 0	       177	check-ignore.c	FUNCTION_4	CALL_17
0x4000818	      0xe800000000	                          call 0x400081d	       177	check-ignore.c	FUNCTION_4	CALL_17
0x400081d	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       179	check-ignore.c	FUNCTION_4	CALL_18
0x4000824	      0xba10010000	                          mov edx, 0x110	       179	check-ignore.c	FUNCTION_4	CALL_18
0x4000829	      0xbe00000000	                              mov esi, 0	       179	check-ignore.c	FUNCTION_4	CALL_18
0x400082e	          0x4889c7	                            mov rdi, rax	       179	check-ignore.c	FUNCTION_4	CALL_18
0x4000831	      0xe800000000	                          call 0x4000836	       179	check-ignore.c	FUNCTION_4	CALL_18
0x4000836	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       180	check-ignore.c	FUNCTION_4	CALL_19
0x400083d	          0x4889c7	                            mov rdi, rax	       180	check-ignore.c	FUNCTION_4	CALL_19
0x4000840	      0xe800000000	                          call 0x4000845	       180	check-ignore.c	FUNCTION_4	CALL_19
0x4000845	    0x8b0500000000	            mov eax, dword [0x0400084b] 	       182	check-ignore.c	FUNCTION_4	IF_10
0x400084b	            0x85c0	                           test eax, eax	       182	check-ignore.c	FUNCTION_4	IF_10
0x400084d	            0x7421	                            je 0x4000870	       182	check-ignore.c	FUNCTION_4	IF_10
0x400084f	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x4000856	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x400085d	          0x4889d6	                            mov rsi, rdx	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x4000860	          0x4889c7	                            mov rdi, rax	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x4000863	      0xe8c1fcffff	       call sym.check_ignore_stdin_paths	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x4000868	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x400086e	            0xeb3d	                           jmp 0x40008ad	       183	check-ignore.c	FUNCTION_4	IF_10	CALL_20
0x4000870	    0x488b8dc0feff	            mov rcx, qword [rbp - 0x140]	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x4000877	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x400087d	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x4000884	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x400088b	          0x4889c7	                            mov rdi, rax	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x400088e	      0xe8eafaffff	                   call sym.check_ignore	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x4000893	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	       185	check-ignore.c	FUNCTION_4	ELSE_2	CALL_21
0x4000899	    0x488b05000000	            mov rax, qword [0x040008a0] 	       186	check-ignore.c	FUNCTION_4	ELSE_2	CALL_22
0x40008a0	      0xbe00000000	                              mov esi, 0	       186	check-ignore.c	FUNCTION_4	ELSE_2	CALL_22
0x40008a5	          0x4889c7	                            mov rdi, rax	       186	check-ignore.c	FUNCTION_4	ELSE_2	CALL_22
0x40008a8	      0xe800000000	                          call 0x40008ad	       186	check-ignore.c	FUNCTION_4	ELSE_2	CALL_22
0x40008ad	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       189	check-ignore.c	FUNCTION_4	CALL_23
0x40008b4	          0x4889c7	                            mov rdi, rax	       189	check-ignore.c	FUNCTION_4	CALL_23
0x40008b7	      0xe800000000	                          call 0x40008bc	       189	check-ignore.c	FUNCTION_4	CALL_23
0x40008bc	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	       191	check-ignore.c	FUNCTION_4
0x40008c3	           0xf94c0	                                 sete al	       191	check-ignore.c	FUNCTION_4
0x40008c6	           0xfb6c0	                           movzx eax, al	       191	check-ignore.c	FUNCTION_4
0x40008c9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       192	check-ignore.c	FUNCTION_4
0x40008cd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       192	check-ignore.c	FUNCTION_4
0x40008d6	            0x7405	                            je 0x40008dd	       192	check-ignore.c	FUNCTION_4
0x40008d8	      0xe800000000	                          call 0x40008dd	       192	check-ignore.c	FUNCTION_4
0x40008dd	              0xc9	                                   leave	       192	check-ignore.c	FUNCTION_4
0x40008de	              0xc3	                                     ret	       192	check-ignore.c	FUNCTION_4
strbuf_swap	DO,0:WHILE,0:SWITCH,0:IF,0:FOR,0:functions,0:CALL,1:ELSE,0	39
0x4000040	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_5
0x4000041	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_5
0x4000044	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_5
0x4000048	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_5
0x400004c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_5
0x4000050	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_5
0x4000059	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_5
0x400005d	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_5
0x400005f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000063	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000067	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_5	CALL_1
0x400006b	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_5	CALL_1
0x400006f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000073	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000076	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_5	CALL_1
0x400007a	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_5	CALL_1
0x400007e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000082	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000086	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_5	CALL_1
0x400008a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_5	CALL_1
0x400008e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000092	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_5	CALL_1
0x4000097	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_5	CALL_1
0x400009a	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_5	CALL_1
0x400009d	      0xe800000000	                          call 0x40000a2	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000a6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000aa	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000ad	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000b1	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000b9	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_5	CALL_1
0x40000bd	              0x90	                                     nop	       128	strbuf.h	FUNCTION_5
0x40000be	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_5
0x40000c2	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_5
0x40000cb	            0x7405	                            je 0x40000d2	       128	strbuf.h	FUNCTION_5
0x40000cd	      0xe800000000	                          call 0x40000d2	       128	strbuf.h	FUNCTION_5
0x40000d2	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_5
0x40000d3	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_5
strbuf_setlen	DO,0:WHILE,0:SWITCH,0:IF,2:FOR,0:functions,0:CALL,2:ELSE,1	43
0x40000d4	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_7
0x40000d5	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_7
0x40000d8	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_7
0x40000dc	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_7
0x40000e0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_7
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_7	IF_1
0x40000e8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_7	IF_1
0x40000eb	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_7	IF_1
0x40000ee	            0x740d	                            je 0x40000fd	       162	strbuf.h	FUNCTION_7	IF_1
0x40000f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_7	IF_1
0x40000f4	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_7	IF_1
0x40000f7	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_7	IF_1
0x40000fb	            0xeb05	                           jmp 0x4000102	       162	strbuf.h	FUNCTION_7	IF_1
0x40000fd	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_7	IF_1
0x4000102	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_7	IF_1
0x4000106	            0x730f	                           jae 0x4000117	       162	strbuf.h	FUNCTION_7	IF_1
0x4000108	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_7	CALL_1
0x400010d	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_7	CALL_1
0x4000112	      0xe800000000	                          call 0x4000117	       163	strbuf.h	FUNCTION_7	CALL_1
0x4000117	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_7
0x400011b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_7
0x400011f	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_7
0x4000123	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_7	IF_2
0x4000127	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_7	IF_2
0x400012b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_7	IF_2
0x4000131	            0x7414	                            je 0x4000147	       165	strbuf.h	FUNCTION_7	IF_2
0x4000133	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_7	IF_2
0x4000137	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_7	IF_2
0x400013b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_7	IF_2
0x400013f	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_7	IF_2
0x4000142	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_7	IF_2
0x4000145	            0xeb24	                           jmp 0x400016b	       169	strbuf.h	FUNCTION_7
0x4000147	     0xfb605000000	           movzx eax, byte [0x0400014e] 	       168	strbuf.h	FUNCTION_7	CALL_2
0x400014e	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_7	CALL_2
0x4000150	            0x7419	                            je 0x400016b	       168	strbuf.h	FUNCTION_7	CALL_2
0x4000152	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x4000157	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_7	CALL_2
0x400015c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x4000161	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x4000166	      0xe800000000	                          call 0x400016b	       168	strbuf.h	FUNCTION_7	CALL_2
0x400016b	              0x90	                                     nop	       169	strbuf.h	FUNCTION_7
0x400016c	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_7
0x400016d	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_7
check_ignore_stdin_paths	DO,0:WHILE,1:SWITCH,0:IF,2:FOR,0:functions,0:CALL,8:ELSE,0	87
0x4000529	              0x55	                                push rbp	       122	check-ignore.c	FUNCTION_3
0x400052a	          0x4889e5	                            mov rbp, rsp	       122	check-ignore.c	FUNCTION_3
0x400052d	        0x4883c480	             add rsp, 0xffffffffffffff80	       122	check-ignore.c	FUNCTION_3
0x4000531	        0x48897d88	             mov qword [rbp - 0x78], rdi	       122	check-ignore.c	FUNCTION_3
0x4000535	        0x48897580	             mov qword [rbp - 0x80], rsi	       122	check-ignore.c	FUNCTION_3
0x4000539	    0x64488b042528	                mov rax, qword fs:[0x28]	       122	check-ignore.c	FUNCTION_3
0x4000542	        0x488945f8	                mov qword [rbp - 8], rax	       122	check-ignore.c	FUNCTION_3
0x4000546	            0x31c0	                            xor eax, eax	       122	check-ignore.c	FUNCTION_3
0x4000548	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       123	check-ignore.c	FUNCTION_3
0x4000550	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       123	check-ignore.c	FUNCTION_3
0x4000558	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       123	check-ignore.c	FUNCTION_3
0x4000560	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       124	check-ignore.c	FUNCTION_3
0x4000568	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       124	check-ignore.c	FUNCTION_3
0x4000570	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       124	check-ignore.c	FUNCTION_3
0x4000578	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       125	check-ignore.c	FUNCTION_3
0x4000580	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       125	check-ignore.c	FUNCTION_3
0x4000588	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       127	check-ignore.c	FUNCTION_3
0x400058f	    0x8b0500000000	            mov eax, dword [0x04000595] 	       129	check-ignore.c	FUNCTION_3
0x4000595	            0x85c0	                           test eax, eax	       129	check-ignore.c	FUNCTION_3
0x4000597	            0x7407	                            je 0x40005a0	       129	check-ignore.c	FUNCTION_3
0x4000599	      0xb800000000	                              mov eax, 0	       129	check-ignore.c	FUNCTION_3
0x400059e	            0xeb05	                           jmp 0x40005a5	       129	check-ignore.c	FUNCTION_3
0x40005a0	      0xb800000000	                              mov eax, 0	       129	check-ignore.c	FUNCTION_3
0x40005a5	        0x48894598	             mov qword [rbp - 0x68], rax	       129	check-ignore.c	FUNCTION_3
0x40005a9	      0xe99f000000	                           jmp 0x400064d	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x40005ae	    0x8b0500000000	            mov eax, dword [0x040005b4] 	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005b4	            0x85c0	                           test eax, eax	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005b6	            0x755a	                           jne 0x4000612	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005bc	           0xfb600	                   movzx eax, byte [rax]	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005bf	            0x3c22	                            cmp al, 0x22	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005c1	            0x754f	                           jne 0x4000612	       131	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005c3	        0x488d45c0	                   lea rax, [rbp - 0x40]	       132	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005c7	      0xbe00000000	                              mov esi, 0	       132	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005cc	          0x4889c7	                            mov rdi, rax	       132	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005cf	      0xe800fbffff	                  call sym.strbuf_setlen	       132	check-ignore.c	FUNCTION_3	WHILE_1	IF_1
0x40005d4	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005d8	        0x488d45c0	                   lea rax, [rbp - 0x40]	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005dc	      0xba00000000	                              mov edx, 0	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005e1	          0x4889ce	                            mov rsi, rcx	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005e4	          0x4889c7	                            mov rdi, rax	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005e7	      0xe800000000	                          call 0x40005ec	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005ec	            0x85c0	                           test eax, eax	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005ee	            0x740f	                            je 0x40005ff	       133	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	IF_2	CALL_2
0x40005f0	      0xbf00000000	                              mov edi, 0	       134	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x40005f5	      0xb800000000	                              mov eax, 0	       134	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x40005fa	      0xe800000000	                          call 0x40005ff	       134	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_3
0x40005ff	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       135	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_4
0x4000603	        0x488d45a0	                   lea rax, [rbp - 0x60]	       135	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_4
0x4000607	          0x4889d6	                            mov rsi, rdx	       135	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_4
0x400060a	          0x4889c7	                            mov rdi, rax	       135	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_4
0x400060d	      0xe82efaffff	                    call sym.strbuf_swap	       135	check-ignore.c	FUNCTION_3	WHILE_1	IF_1	CALL_4
0x4000612	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       137	check-ignore.c	FUNCTION_3	WHILE_1
0x4000616	        0x488945e0	             mov qword [rbp - 0x20], rax	       137	check-ignore.c	FUNCTION_3	WHILE_1
0x400061a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x400061e	        0x488b7580	             mov rsi, qword [rbp - 0x80]	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000622	        0x488b4588	             mov rax, qword [rbp - 0x78]	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000626	          0x4889d1	                            mov rcx, rdx	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000629	      0xba01000000	                              mov edx, 1	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x400062e	          0x4889c7	                            mov rdi, rax	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000631	      0xe847fdffff	                   call sym.check_ignore	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000636	           0x14594	             add dword [rbp - 0x6c], eax	       138	check-ignore.c	FUNCTION_3	WHILE_1	CALL_5
0x4000639	    0x488b05000000	            mov rax, qword [0x04000640] 	       140	check-ignore.c	FUNCTION_3	WHILE_1	CALL_6
0x4000640	      0xbe00000000	                              mov esi, 0	       140	check-ignore.c	FUNCTION_3	WHILE_1	CALL_6
0x4000645	          0x4889c7	                            mov rdi, rax	       140	check-ignore.c	FUNCTION_3	WHILE_1	CALL_6
0x4000648	      0xe800000000	                          call 0x400064d	       140	check-ignore.c	FUNCTION_3	WHILE_1	CALL_6
0x400064d	    0x488b0d000000	            mov rcx, qword [0x04000654] 	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x4000654	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x4000658	        0x488b4598	             mov rax, qword [rbp - 0x68]	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x400065c	          0x4889ce	                            mov rsi, rcx	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x400065f	          0x4889d7	                            mov rdi, rdx	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x4000662	            0xffd0	                                call rax	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x4000664	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x4000667	     0xf8541ffffff	                           jne 0x40005ae	       130	check-ignore.c	FUNCTION_3	WHILE_1	CALL_1
0x400066d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       142	check-ignore.c	FUNCTION_3	CALL_7
0x4000671	          0x4889c7	                            mov rdi, rax	       142	check-ignore.c	FUNCTION_3	CALL_7
0x4000674	      0xe800000000	                          call 0x4000679	       142	check-ignore.c	FUNCTION_3	CALL_7
0x4000679	        0x488d45c0	                   lea rax, [rbp - 0x40]	       143	check-ignore.c	FUNCTION_3	CALL_8
0x400067d	          0x4889c7	                            mov rdi, rax	       143	check-ignore.c	FUNCTION_3	CALL_8
0x4000680	      0xe800000000	                          call 0x4000685	       143	check-ignore.c	FUNCTION_3	CALL_8
0x4000685	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       144	check-ignore.c	FUNCTION_3
0x4000688	        0x488b4df8	                mov rcx, qword [rbp - 8]	       145	check-ignore.c	FUNCTION_3
0x400068c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       145	check-ignore.c	FUNCTION_3
0x4000695	            0x7405	                            je 0x400069c	       145	check-ignore.c	FUNCTION_3
0x4000697	      0xe800000000	                          call 0x400069c	       145	check-ignore.c	FUNCTION_3
0x400069c	              0xc9	                                   leave	       145	check-ignore.c	FUNCTION_3
0x400069d	              0xc3	                                     ret	       145	check-ignore.c	FUNCTION_3
_	DO,0:WHILE,0:SWITCH,0:IF,1:FOR,0:functions,0:CALL,0:ELSE,0	15
0x400016e	              0x55	                                push rbp	        51	gettext.h	FUNCTION_18
0x400016f	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_18
0x4000172	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_18
0x4000176	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_18
0x400017a	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_18	IF_1
0x400017e	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_18	IF_1
0x4000181	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_18	IF_1
0x4000183	            0x7507	                           jne 0x400018c	        52	gettext.h	FUNCTION_18	IF_1
0x4000185	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_18	IF_1
0x400018a	            0xeb0c	                           jmp 0x4000198	        53	gettext.h	FUNCTION_18	IF_1
0x400018c	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_18
0x4000190	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_18
0x4000193	      0xe800000000	                          call 0x4000198	        54	gettext.h	FUNCTION_18
0x4000198	              0xc9	                                   leave	        55	gettext.h	FUNCTION_18
0x4000199	              0xc3	                                     ret	        55	gettext.h	FUNCTION_18
output_exclude	DO,0:WHILE,0:SWITCH,0:IF,5:FOR,0:functions,0:CALL,9:ELSE,5	124
0x400019a	              0x55	                                push rbp	        35	check-ignore.c	FUNCTION_1
0x400019b	          0x4889e5	                            mov rbp, rsp	        35	check-ignore.c	FUNCTION_1
0x400019e	        0x4883ec20	                           sub rsp, 0x20	        35	check-ignore.c	FUNCTION_1
0x40001a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        35	check-ignore.c	FUNCTION_1
0x40001a6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        35	check-ignore.c	FUNCTION_1
0x40001aa	      0x48837de000	               cmp qword [rbp - 0x20], 0	        36	check-ignore.c	FUNCTION_1
0x40001af	            0x7415	                            je 0x40001c6	        36	check-ignore.c	FUNCTION_1
0x40001b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	check-ignore.c	FUNCTION_1
0x40001b5	          0x8b4024	            mov eax, dword [rax + 0x24] 	        36	check-ignore.c	FUNCTION_1
0x40001b8	          0x83e010	                           and eax, 0x10	        36	check-ignore.c	FUNCTION_1
0x40001bb	            0x85c0	                           test eax, eax	        36	check-ignore.c	FUNCTION_1
0x40001bd	            0x7407	                            je 0x40001c6	        36	check-ignore.c	FUNCTION_1
0x40001bf	      0xb800000000	                              mov eax, 0	        36	check-ignore.c	FUNCTION_1
0x40001c4	            0xeb05	                           jmp 0x40001cb	        36	check-ignore.c	FUNCTION_1
0x40001c6	      0xb800000000	                              mov eax, 0	        36	check-ignore.c	FUNCTION_1
0x40001cb	        0x488945f0	             mov qword [rbp - 0x10], rax	        36	check-ignore.c	FUNCTION_1
0x40001cf	      0x48837de000	               cmp qword [rbp - 0x20], 0	        37	check-ignore.c	FUNCTION_1
0x40001d4	            0x7415	                            je 0x40001eb	        37	check-ignore.c	FUNCTION_1
0x40001d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	check-ignore.c	FUNCTION_1
0x40001da	          0x8b4024	            mov eax, dword [rax + 0x24] 	        37	check-ignore.c	FUNCTION_1
0x40001dd	          0x83e008	                              and eax, 8	        37	check-ignore.c	FUNCTION_1
0x40001e0	            0x85c0	                           test eax, eax	        37	check-ignore.c	FUNCTION_1
0x40001e2	            0x7407	                            je 0x40001eb	        37	check-ignore.c	FUNCTION_1
0x40001e4	      0xb800000000	                              mov eax, 0	        37	check-ignore.c	FUNCTION_1
0x40001e9	            0xeb05	                           jmp 0x40001f0	        37	check-ignore.c	FUNCTION_1
0x40001eb	      0xb800000000	                              mov eax, 0	        37	check-ignore.c	FUNCTION_1
0x40001f0	        0x488945f8	                mov qword [rbp - 8], rax	        37	check-ignore.c	FUNCTION_1
0x40001f4	    0x8b0500000000	            mov eax, dword [0x040001fa] 	        38	check-ignore.c	FUNCTION_1	IF_1
0x40001fa	            0x85c0	                           test eax, eax	        38	check-ignore.c	FUNCTION_1	IF_1
0x40001fc	     0xf85c7000000	                           jne 0x40002c9	        38	check-ignore.c	FUNCTION_1	IF_1
0x4000202	    0x8b0500000000	            mov eax, dword [0x04000208] 	        39	check-ignore.c	FUNCTION_1	IF_1	IF_2
0x4000208	            0x85c0	                           test eax, eax	        39	check-ignore.c	FUNCTION_1	IF_1	IF_2
0x400020a	            0x7520	                           jne 0x400022c	        39	check-ignore.c	FUNCTION_1	IF_1	IF_2
0x400020c	    0x488b0d000000	            mov rcx, qword [0x04000213] 	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000213	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000217	      0xba0a000000	                            mov edx, 0xa	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400021c	          0x4889ce	                            mov rsi, rcx	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400021f	          0x4889c7	                            mov rdi, rax	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000222	      0xe800000000	                          call 0x4000227	        40	check-ignore.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000227	      0xe94e010000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_1
0x400022c	      0x48837de000	               cmp qword [rbp - 0x20], 0	        42	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000231	            0x7451	                            je 0x4000284	        42	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x4000233	    0x488b15000000	            mov rdx, qword [0x0400023a] 	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x400023a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x400023e	          0x488b00	                    mov rax, qword [rax]	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x4000241	        0x488b4010	            mov rax, qword [rax + 0x10] 	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x4000245	      0xb900000000	                              mov ecx, 0	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x400024a	      0xbe00000000	                              mov esi, 0	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x400024f	          0x4889c7	                            mov rdi, rax	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x4000252	      0xe800000000	                          call 0x4000257	        43	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_2
0x4000257	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x400025b	        0x488b4808	                mov rcx, qword [rax + 8]	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x400025f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000263	          0x8b4028	            mov eax, dword [rax + 0x28] 	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000266	        0x488b75f8	                mov rsi, qword [rbp - 8]	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x400026a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x400026e	          0x4989f0	                             mov r8, rsi	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000271	            0x89c6	                            mov esi, eax	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000273	      0xbf00000000	                              mov edi, 0	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000278	      0xb800000000	                              mov eax, 0	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x400027d	      0xe800000000	                          call 0x4000282	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000282	            0xeb0f	                           jmp 0x4000293	        44	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	IF_3	CALL_3
0x4000284	      0xbf00000000	                              mov edi, 0	        49	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	ELSE_2	CALL_4
0x4000289	      0xb800000000	                              mov eax, 0	        49	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	ELSE_2	CALL_4
0x400028e	      0xe800000000	                          call 0x4000293	        49	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	ELSE_2	CALL_4
0x4000293	    0x488b15000000	            mov rdx, qword [0x0400029a] 	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x400029a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x400029e	      0xb900000000	                              mov ecx, 0	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x40002a3	      0xbe00000000	                              mov esi, 0	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x40002a8	          0x4889c7	                            mov rdi, rax	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x40002ab	      0xe800000000	                          call 0x40002b0	        51	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_5
0x40002b0	    0x488b05000000	            mov rax, qword [0x040002b7] 	        52	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_6
0x40002b7	          0x4889c6	                            mov rsi, rax	        52	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_6
0x40002ba	      0xbf0a000000	                            mov edi, 0xa	        52	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_6
0x40002bf	      0xe800000000	                          call 0x40002c4	        52	check-ignore.c	FUNCTION_1	IF_1	ELSE_1	CALL_6
0x40002c4	      0xe9b1000000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_1
0x40002c9	    0x8b0500000000	            mov eax, dword [0x040002cf] 	        55	check-ignore.c	FUNCTION_1	ELSE_3	IF_4
0x40002cf	            0x85c0	                           test eax, eax	        55	check-ignore.c	FUNCTION_1	ELSE_3	IF_4
0x40002d1	            0x7520	                           jne 0x40002f3	        55	check-ignore.c	FUNCTION_1	ELSE_3	IF_4
0x40002d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002d7	      0xba00000000	                              mov edx, 0	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002dc	          0x4889c6	                            mov rsi, rax	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002df	      0xbf00000000	                              mov edi, 0	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002e4	      0xb800000000	                              mov eax, 0	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002e9	      0xe800000000	                          call 0x40002ee	        56	check-ignore.c	FUNCTION_1	ELSE_3	IF_4	CALL_7
0x40002ee	      0xe987000000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_1
0x40002f3	      0x48837de000	               cmp qword [rbp - 0x20], 0	        58	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5
0x40002f8	            0x7455	                            je 0x400034f	        58	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5
0x40002fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x40002fe	        0x488b4808	                mov rcx, qword [rax + 8]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000302	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000306	          0x8b5028	            mov edx, dword [rax + 0x28] 	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000309	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5
0x400030d	          0x488b00	                    mov rax, qword [rax]	        60	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5
0x4000310	        0x488b4010	            mov rax, qword [rax + 0x10] 	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000314	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000318	        0x4883ec08	                              sub rsp, 8	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400031c	            0x6a00	                                  push 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400031e	          0xff75e8	                 push qword [rbp - 0x18]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000321	            0x6a00	                                  push 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000323	          0xff75f8	                    push qword [rbp - 8]	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000326	              0x51	                                push rcx	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000327	          0x4989f1	                             mov r9, rsi	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400032a	    0x41b800000000	                              mov r8d, 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000330	            0x89d1	                            mov ecx, edx	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000332	      0xba00000000	                              mov edx, 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000337	          0x4889c6	                            mov rsi, rax	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400033a	      0xbf00000000	                              mov edi, 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400033f	      0xb800000000	                              mov eax, 0	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000344	      0xe800000000	                          call 0x4000349	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x4000349	        0x4883c430	                           add rsp, 0x30	        59	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	IF_5	CALL_8
0x400034d	            0xeb2b	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_1
0x400034f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000353	    0x41b900000000	                              mov r9d, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000359	          0x4989c0	                             mov r8, rax	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x400035c	      0xb900000000	                              mov ecx, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000361	      0xba00000000	                              mov edx, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000366	      0xbe00000000	                              mov esi, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x400036b	      0xbf00000000	                              mov edi, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000370	      0xb800000000	                              mov eax, 0	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x4000375	      0xe800000000	                          call 0x400037a	        65	check-ignore.c	FUNCTION_1	ELSE_3	ELSE_4	CALL_9
0x400037a	              0x90	                                     nop	        68	check-ignore.c	FUNCTION_1
0x400037b	              0xc9	                                   leave	        68	check-ignore.c	FUNCTION_1
0x400037c	              0xc3	                                     ret	        68	check-ignore.c	FUNCTION_1
