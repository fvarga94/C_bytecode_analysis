ref_array_sort	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	24
0x40062e2	              0x55	                                push rbp	      2196	ref-filter.c	FUNCTION_81
0x40062e3	          0x4889e5	                            mov rbp, rsp	      2196	ref-filter.c	FUNCTION_81
0x40062e6	        0x4883ec10	                           sub rsp, 0x10	      2196	ref-filter.c	FUNCTION_81
0x40062ea	        0x48897df8	                mov qword [rbp - 8], rdi	      2196	ref-filter.c	FUNCTION_81
0x40062ee	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2196	ref-filter.c	FUNCTION_81
0x40062f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2197	ref-filter.c	FUNCTION_81
0x40062f6	            0x8b00	                    mov eax, dword [rax]	      2197	ref-filter.c	FUNCTION_81
0x40062f8	          0x4863f0	                         movsxd rsi, eax	      2197	ref-filter.c	FUNCTION_81
0x40062fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2197	ref-filter.c	FUNCTION_81
0x40062ff	        0x488b4008	                mov rax, qword [rax + 8]	      2197	ref-filter.c	FUNCTION_81
0x4006303	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2197	ref-filter.c	FUNCTION_81
0x4006307	          0x4989d0	                             mov r8, rdx	      2197	ref-filter.c	FUNCTION_81
0x400630a	      0xb900000000	                              mov ecx, 0	      2197	ref-filter.c	FUNCTION_81
0x400630f	      0xba08000000	                              mov edx, 8	      2197	ref-filter.c	FUNCTION_81
0x4006314	          0x4889c7	                            mov rdi, rax	      2197	ref-filter.c	FUNCTION_81
0x4006317	      0xe800000000	                          call 0x400631c	      2197	ref-filter.c	FUNCTION_81
0x400631c	            0x85c0	                           test eax, eax	      2197	ref-filter.c	FUNCTION_81
0x400631e	            0x740f	                            je 0x400632f	      2197	ref-filter.c	FUNCTION_81
0x4006320	      0xbf00000000	                              mov edi, 0	      2197	ref-filter.c	FUNCTION_81
0x4006325	      0xb800000000	                              mov eax, 0	      2197	ref-filter.c	FUNCTION_81
0x400632a	      0xe800000000	                          call 0x400632f	      2197	ref-filter.c	FUNCTION_81
0x400632f	              0x90	                                     nop	      2198	ref-filter.c	FUNCTION_81
0x4006330	              0xc9	                                   leave	      2198	ref-filter.c	FUNCTION_81
0x4006331	              0xc3	                                     ret	      2198	ref-filter.c	FUNCTION_81
grab_objectname	WHILE,0:FOR,0:CALL,8:DO,0:functions,0:SWITCH,0:IF,4:ELSE,3	67
0x40024df	              0x55	                                push rbp	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024e0	          0x4889e5	                            mov rbp, rsp	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024e3	        0x4883ec20	                           sub rsp, 0x20	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024e7	        0x48897df8	                mov qword [rbp - 8], rdi	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024eb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024ef	        0x488955e8	             mov qword [rbp - 0x18], rdx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024f3	        0x48894de0	             mov qword [rbp - 0x20], rcx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x40024f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40024fb	      0xbe00000000	                              mov esi, 0	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4002500	          0x4889c7	                            mov rdi, rax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4002503	      0xe800000000	                          call 0x4002508	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4002508	            0x85c0	                           test eax, eax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x400250a	     0xf84b7000000	                            je 0x40025c7	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x4002510	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002514	          0x8b4010	            mov eax, dword [rax + 0x10] 	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002517	          0x83f802	                              cmp eax, 2	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400251a	            0x7530	                           jne 0x400254c	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400251c	    0x8b1500000000	            mov edx, dword [0x04002522] 	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002522	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002526	            0x89d6	                            mov esi, edx	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002528	          0x4889c7	                            mov rdi, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x400252b	      0xe800000000	                          call 0x4002530	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002530	          0x4889c7	                            mov rdi, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002533	      0xe800000000	                          call 0x4002538	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002538	          0x4889c2	                            mov rdx, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x400253b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x400253f	          0x488910	                    mov qword [rax], rdx	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x4002542	      0xb801000000	                              mov eax, 1	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002547	      0xe980000000	                           jmp 0x40025cc	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x400254c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002550	          0x8b4010	            mov eax, dword [rax + 0x10] 	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002553	            0x85c0	                           test eax, eax	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002555	            0x7525	                           jne 0x400257c	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002557	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400255b	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400255e	      0xe800000000	                          call 0x4002563	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002563	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002566	      0xe800000000	                          call 0x400256b	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400256b	          0x4889c2	                            mov rdx, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400256e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002572	          0x488910	                    mov qword [rax], rdx	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002575	      0xb801000000	                              mov eax, 1	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x400257a	            0xeb50	                           jmp 0x40025cc	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x400257c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4002580	          0x8b4010	            mov eax, dword [rax + 0x10] 	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4002583	          0x83f801	                              cmp eax, 1	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4002586	            0x7530	                           jne 0x40025b8	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4002588	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400258c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400258f	            0x89c2	                            mov edx, eax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002591	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002595	            0x89d6	                            mov esi, edx	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002597	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400259a	      0xe800000000	                          call 0x400259f	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400259f	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40025a2	      0xe800000000	                          call 0x40025a7	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40025a7	          0x4889c2	                            mov rdx, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40025aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40025ae	          0x488910	                    mov qword [rax], rdx	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40025b1	      0xb801000000	                              mov eax, 1	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x40025b6	            0xeb14	                           jmp 0x40025cc	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x40025b8	      0xbf00000000	                              mov edi, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40025bd	      0xb800000000	                              mov eax, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40025c2	      0xe800000000	                          call 0x40025c7	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x40025c7	      0xb800000000	                              mov eax, 0	       829	ref-filter.c	FUNCTION_32	ELSE_1
0x40025cc	              0xc9	                                   leave	       830	ref-filter.c	FUNCTION_32	ELSE_1
0x40025cd	              0xc3	                                     ret	       830	ref-filter.c	FUNCTION_32	ELSE_1
subject_atom_parser	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	23
0x4000c35	              0x55	                                push rbp	       213	ref-filter.c	FUNCTION_7
0x4000c36	          0x4889e5	                            mov rbp, rsp	       213	ref-filter.c	FUNCTION_7
0x4000c39	        0x4883ec20	                           sub rsp, 0x20	       213	ref-filter.c	FUNCTION_7
0x4000c3d	        0x48897df8	                mov qword [rbp - 8], rdi	       213	ref-filter.c	FUNCTION_7
0x4000c41	        0x488975f0	             mov qword [rbp - 0x10], rsi	       213	ref-filter.c	FUNCTION_7
0x4000c45	        0x488955e8	             mov qword [rbp - 0x18], rdx	       213	ref-filter.c	FUNCTION_7
0x4000c49	        0x48894de0	             mov qword [rbp - 0x20], rcx	       213	ref-filter.c	FUNCTION_7
0x4000c4d	      0x48837de800	               cmp qword [rbp - 0x18], 0	       214	ref-filter.c	FUNCTION_7	IF_1
0x4000c52	            0x7425	                            je 0x4000c79	       214	ref-filter.c	FUNCTION_7	IF_1
0x4000c54	      0xbf00000000	                              mov edi, 0	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c59	      0xe83ff8ffff	                               call sym.	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c5e	          0x4889c2	                            mov rdx, rax	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c65	      0xbeffffffff	                     mov esi, 0xffffffff	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c6a	          0x4889c7	                            mov rdi, rax	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c6d	      0xb800000000	                              mov eax, 0	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c72	      0xe8ddf9ffff	                call sym.strbuf_addf_ret	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c77	            0xeb10	                           jmp 0x4000c89	       215	ref-filter.c	FUNCTION_7	CALL_2
0x4000c79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	ref-filter.c	FUNCTION_7
0x4000c7d	    0xc74010050000	               mov dword [rax + 0x10], 5	       216	ref-filter.c	FUNCTION_7
0x4000c84	      0xb800000000	                              mov eax, 0	       217	ref-filter.c	FUNCTION_7
0x4000c89	              0xc9	                                   leave	       218	ref-filter.c	FUNCTION_7
0x4000c8a	              0xc3	                                     ret	       218	ref-filter.c	FUNCTION_7
get_symref	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,1	20
0x4004188	              0x55	                                push rbp	      1420	ref-filter.c	FUNCTION_54
0x4004189	          0x4889e5	                            mov rbp, rsp	      1420	ref-filter.c	FUNCTION_54
0x400418c	        0x4883ec10	                           sub rsp, 0x10	      1420	ref-filter.c	FUNCTION_54
0x4004190	        0x48897df8	                mov qword [rbp - 8], rdi	      1420	ref-filter.c	FUNCTION_54
0x4004194	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1420	ref-filter.c	FUNCTION_54
0x4004198	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1421	ref-filter.c	FUNCTION_54	IF_1
0x400419c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1421	ref-filter.c	FUNCTION_54	IF_1
0x40041a0	          0x4885c0	                           test rax, rax	      1421	ref-filter.c	FUNCTION_54	IF_1
0x40041a3	            0x7507	                           jne 0x40041ac	      1421	ref-filter.c	FUNCTION_54	IF_1
0x40041a5	      0xb800000000	                              mov eax, 0	      1422	ref-filter.c	FUNCTION_54	IF_1
0x40041aa	            0xeb1b	                           jmp 0x40041c7	      1422	ref-filter.c	FUNCTION_54	IF_1
0x40041ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041b8	        0x4883c210	                           add rdx, 0x10	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041bc	          0x4889c6	                            mov rsi, rax	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041bf	          0x4889d7	                            mov rdi, rdx	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041c2	      0xe817faffff	                       call sym.show_ref	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x40041c7	              0xc9	                                   leave	      1425	ref-filter.c	FUNCTION_54
0x40041c8	              0xc3	                                     ret	      1425	ref-filter.c	FUNCTION_54
ref_filter_handler	WHILE,0:FOR,0:CALL,11:DO,0:functions,0:SWITCH,0:IF,9:ELSE,0	155
0x40058e5	              0x55	                                push rbp	      1976	ref-filter.c	FUNCTION_74
0x40058e6	          0x4889e5	                            mov rbp, rsp	      1976	ref-filter.c	FUNCTION_74
0x40058e9	        0x4883ec50	                           sub rsp, 0x50	      1976	ref-filter.c	FUNCTION_74
0x40058ed	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1976	ref-filter.c	FUNCTION_74
0x40058f1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1976	ref-filter.c	FUNCTION_74
0x40058f5	          0x8955bc	             mov dword [rbp - 0x44], edx	      1976	ref-filter.c	FUNCTION_74
0x40058f8	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1976	ref-filter.c	FUNCTION_74
0x40058fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1977	ref-filter.c	FUNCTION_74
0x4005900	        0x488945e8	             mov qword [rbp - 0x18], rax	      1977	ref-filter.c	FUNCTION_74
0x4005904	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1978	ref-filter.c	FUNCTION_74
0x4005908	        0x488b4008	                mov rax, qword [rax + 8]	      1978	ref-filter.c	FUNCTION_74
0x400590c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1978	ref-filter.c	FUNCTION_74
0x4005910	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1980	ref-filter.c	FUNCTION_74
0x4005918	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1983	ref-filter.c	FUNCTION_74	IF_1
0x400591b	          0x83e008	                              and eax, 8	      1983	ref-filter.c	FUNCTION_74	IF_1
0x400591e	            0x85c0	                           test eax, eax	      1983	ref-filter.c	FUNCTION_74	IF_1
0x4005920	            0x742b	                            je 0x400594d	      1983	ref-filter.c	FUNCTION_74	IF_1
0x4005922	      0xbf00000000	                              mov edi, 0	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4005927	      0xe871abffff	                               call sym.	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x400592c	          0x4889c2	                            mov rdx, rax	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x400592f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4005933	          0x4889c6	                            mov rsi, rax	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4005936	          0x4889d7	                            mov rdi, rdx	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4005939	      0xb800000000	                              mov eax, 0	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x400593e	      0xe800000000	                          call 0x4005943	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x4005943	      0xb800000000	                              mov eax, 0	      1985	ref-filter.c	FUNCTION_74	IF_1
0x4005948	      0xe9c8010000	                           jmp 0x4005b15	      1985	ref-filter.c	FUNCTION_74	IF_1
0x400594d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4005950	          0x83e004	                              and eax, 4	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4005953	            0x85c0	                           test eax, eax	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4005955	            0x742b	                            je 0x4005982	      1988	ref-filter.c	FUNCTION_74	IF_2
0x4005957	      0xbf00000000	                              mov edi, 0	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400595c	      0xe83cabffff	                               call sym.	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4005961	          0x4889c2	                            mov rdx, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4005964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4005968	          0x4889c6	                            mov rsi, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400596b	          0x4889d7	                            mov rdi, rdx	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x400596e	      0xb800000000	                              mov eax, 0	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4005973	      0xe800000000	                          call 0x4005978	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x4005978	      0xb800000000	                              mov eax, 0	      1990	ref-filter.c	FUNCTION_74	IF_2
0x400597d	      0xe993010000	                           jmp 0x4005b15	      1990	ref-filter.c	FUNCTION_74	IF_2
0x4005982	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x4005986	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x400598a	          0x4889d6	                            mov rsi, rdx	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x400598d	          0x4889c7	                            mov rdi, rax	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x4005990	      0xe805ffffff	                call sym.filter_ref_kind	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x4005995	          0x8945dc	             mov dword [rbp - 0x24], eax	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x4005998	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1995	ref-filter.c	FUNCTION_74	IF_3
0x400599c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1995	ref-filter.c	FUNCTION_74	IF_3
0x400599f	          0x2345dc	             and eax, dword [rbp - 0x24]	      1995	ref-filter.c	FUNCTION_74	IF_3
0x40059a2	            0x85c0	                           test eax, eax	      1995	ref-filter.c	FUNCTION_74	IF_3
0x40059a4	            0x750a	                           jne 0x40059b0	      1995	ref-filter.c	FUNCTION_74	IF_3
0x40059a6	      0xb800000000	                              mov eax, 0	      1996	ref-filter.c	FUNCTION_74	IF_3
0x40059ab	      0xe965010000	                           jmp 0x4005b15	      1996	ref-filter.c	FUNCTION_74	IF_3
0x40059b0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059b8	          0x4889d6	                            mov rsi, rdx	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059bb	          0x4889c7	                            mov rdi, rax	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059be	      0xe83bfaffff	           call sym.filter_pattern_match	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059c3	            0x85c0	                           test eax, eax	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059c5	            0x750a	                           jne 0x40059d1	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x40059c7	      0xb800000000	                              mov eax, 0	      1999	ref-filter.c	FUNCTION_74	IF_4
0x40059cc	      0xe944010000	                           jmp 0x4005b15	      1999	ref-filter.c	FUNCTION_74	IF_4
0x40059d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059d5	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059d8	            0x85c0	                           test eax, eax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059da	            0x742a	                            je 0x4005a06	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059e0	        0x488d4808	                      lea rcx, [rax + 8]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059e4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059ec	          0x4889c6	                            mov rsi, rax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059ef	          0x4889cf	                            mov rdi, rcx	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059f2	      0xe8ecfbffff	                call sym.match_points_at	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059f7	          0x4885c0	                           test rax, rax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059fa	            0x750a	                           jne 0x4005a06	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x40059fc	      0xb800000000	                              mov eax, 0	      2002	ref-filter.c	FUNCTION_74	IF_5
0x4005a01	      0xe90f010000	                           jmp 0x4005b15	      2002	ref-filter.c	FUNCTION_74	IF_5
0x4005a06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a0a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a0e	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a11	            0x7529	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a17	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a1b	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a1e	            0x751c	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a24	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a28	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a2b	            0x750f	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a31	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a34	            0x85c0	                           test eax, eax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a36	     0xf8496000000	                            je 0x4005ad2	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4005a3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4005a40	      0xbe01000000	                              mov esi, 1	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4005a45	          0x4889c7	                            mov rdi, rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4005a48	      0xe800000000	                          call 0x4005a4d	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4005a4d	        0x488945e0	             mov qword [rbp - 0x20], rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4005a51	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4005a56	            0x750a	                           jne 0x4005a62	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4005a58	      0xb800000000	                              mov eax, 0	      2012	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4005a5d	      0xe9b3000000	                           jmp 0x4005b15	      2012	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4005a62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a66	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a6a	          0x4885c0	                           test rax, rax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a6d	            0x742b	                            je 0x4005a9a	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a73	        0x488d4810	                   lea rcx, [rax + 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a77	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a7b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a7f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a87	          0x4889c7	                            mov rdi, rax	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a8a	      0xe82af7ffff	                call sym.commit_contains	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4005a8f	            0x85c0	                           test eax, eax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a91	            0x7507	                           jne 0x4005a9a	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a93	      0xb800000000	                              mov eax, 0	      2016	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a98	            0xeb7b	                           jmp 0x4005b15	      2016	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4005a9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005a9e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005aa2	          0x4885c0	                           test rax, rax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005aa5	            0x742b	                            je 0x4005ad2	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005aa7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005aab	        0x488d4828	                   lea rcx, [rax + 0x28]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005aaf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005ab3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005ab7	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005abb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005abf	          0x4889c7	                            mov rdi, rax	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005ac2	      0xe8f2f6ffff	                call sym.commit_contains	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4005ac7	            0x85c0	                           test eax, eax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005ac9	            0x7407	                            je 0x4005ad2	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005acb	      0xb800000000	                              mov eax, 0	      2020	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005ad0	            0xeb43	                           jmp 0x4005b15	      2020	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4005ad2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005ad6	          0x488b00	                    mov rax, qword [rax]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005ad9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005add	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005ae1	          0x4889ce	                            mov rsi, rcx	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005ae4	          0x4889c7	                            mov rdi, rax	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005ae7	      0xe800000000	                          call 0x4005aec	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005aec	        0x488945f8	                mov qword [rbp - 8], rax	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4005af0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2029	ref-filter.c	FUNCTION_74
0x4005af4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2029	ref-filter.c	FUNCTION_74
0x4005af8	        0x48895028	             mov qword [rax + 0x28], rdx	      2029	ref-filter.c	FUNCTION_74
0x4005afc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2030	ref-filter.c	FUNCTION_74
0x4005b00	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2030	ref-filter.c	FUNCTION_74
0x4005b03	          0x895014	             mov dword [rax + 0x14], edx	      2030	ref-filter.c	FUNCTION_74
0x4005b06	        0x488b45f8	                mov rax, qword [rbp - 8]	      2031	ref-filter.c	FUNCTION_74
0x4005b0a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2031	ref-filter.c	FUNCTION_74
0x4005b0d	          0x895018	             mov dword [rax + 0x18], edx	      2031	ref-filter.c	FUNCTION_74
0x4005b10	      0xb800000000	                              mov eax, 0	      2033	ref-filter.c	FUNCTION_74
0x4005b15	              0xc9	                                   leave	      2034	ref-filter.c	FUNCTION_74
0x4005b16	              0xc3	                                     ret	      2034	ref-filter.c	FUNCTION_74
ref_kind_from_refname	WHILE,0:FOR,1:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	35
0x4005824	              0x55	                                push rbp	      1939	ref-filter.c	FUNCTION_72
0x4005825	          0x4889e5	                            mov rbp, rsp	      1939	ref-filter.c	FUNCTION_72
0x4005828	        0x4883ec20	                           sub rsp, 0x20	      1939	ref-filter.c	FUNCTION_72
0x400582c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1939	ref-filter.c	FUNCTION_72
0x4005830	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4005834	      0xbe00000000	                              mov esi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4005839	          0x4889c7	                            mov rdi, rax	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400583c	      0xe800000000	                          call 0x4005841	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4005841	            0x85c0	                           test eax, eax	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4005843	            0x7507	                           jne 0x400584c	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4005845	      0xb820000000	                           mov eax, 0x20	      1952	ref-filter.c	FUNCTION_72	IF_1
0x400584a	            0xeb4c	                           jmp 0x4005898	      1952	ref-filter.c	FUNCTION_72	IF_1
0x400584c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4005853	            0xeb38	                           jmp 0x400588d	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4005855	          0x8b45fc	                mov eax, dword [rbp - 4]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005858	        0x48c1e004	                              shl rax, 4	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400585c	    0x480500000000	                              add rax, 0	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005862	          0x488b10	                    mov rdx, qword [rax]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005865	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005869	          0x4889d6	                            mov rsi, rdx	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400586c	          0x4889c7	                            mov rdi, rax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400586f	      0xe800000000	                          call 0x4005874	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005874	            0x85c0	                           test eax, eax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005876	            0x7411	                            je 0x4005889	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4005878	          0x8b45fc	                mov eax, dword [rbp - 4]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x400587b	        0x48c1e004	                              shl rax, 4	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x400587f	    0x480500000000	                              add rax, 0	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4005885	            0x8b00	                    mov eax, dword [rax]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4005887	            0xeb0f	                           jmp 0x4005898	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4005889	        0x8345fc01	                  add dword [rbp - 4], 1	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x400588d	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4005891	            0x76c2	                           jbe 0x4005855	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4005893	      0xb810000000	                           mov eax, 0x10	      1959	ref-filter.c	FUNCTION_72
0x4005898	              0xc9	                                   leave	      1960	ref-filter.c	FUNCTION_72
0x4005899	              0xc3	                                     ret	      1960	ref-filter.c	FUNCTION_72
ref_default_sorting	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	17
0x4006831	              0x55	                                push rbp	      2310	ref-filter.c	FUNCTION_87
0x4006832	          0x4889e5	                            mov rbp, rsp	      2310	ref-filter.c	FUNCTION_87
0x4006835	        0x4883ec10	                           sub rsp, 0x10	      2310	ref-filter.c	FUNCTION_87
0x4006839	      0xbe10000000	                           mov esi, 0x10	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x400683e	      0xbf01000000	                              mov edi, 1	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4006843	      0xe800000000	                          call 0x4006848	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x4006848	        0x488945f8	                mov qword [rbp - 8], rax	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x400684c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2315	ref-filter.c	FUNCTION_87
0x4006850	    0x48c700000000	                      mov qword [rax], 0	      2315	ref-filter.c	FUNCTION_87
0x4006857	      0xbf00000000	                              mov edi, 0	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x400685c	      0xe808ffffff	             call sym.parse_sorting_atom	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4006861	            0x89c2	                            mov edx, eax	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4006863	        0x488b45f8	                mov rax, qword [rbp - 8]	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4006867	          0x895008	                mov dword [rax + 8], edx	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x400686a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2317	ref-filter.c	FUNCTION_87
0x400686e	              0xc9	                                   leave	      2318	ref-filter.c	FUNCTION_87
0x400686f	              0xc3	                                     ret	      2318	ref-filter.c	FUNCTION_87
read_object_file	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	14
0x4000569	              0x55	                                push rbp	      1199	cache.h	FUNCTION_112
0x400056a	          0x4889e5	                            mov rbp, rsp	      1199	cache.h	FUNCTION_112
0x400056d	        0x4883ec20	                           sub rsp, 0x20	      1199	cache.h	FUNCTION_112
0x4000571	        0x48897df8	                mov qword [rbp - 8], rdi	      1199	cache.h	FUNCTION_112
0x4000575	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1199	cache.h	FUNCTION_112
0x4000579	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1199	cache.h	FUNCTION_112
0x400057d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1200	cache.h	FUNCTION_112	CALL_1
0x4000581	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1200	cache.h	FUNCTION_112	CALL_1
0x4000585	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	cache.h	FUNCTION_112	CALL_1
0x4000589	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_112	CALL_1
0x400058e	          0x4889c7	                            mov rdi, rax	      1200	cache.h	FUNCTION_112	CALL_1
0x4000591	      0xe800000000	                          call 0x4000596	      1200	cache.h	FUNCTION_112	CALL_1
0x4000596	              0xc9	                                   leave	      1201	cache.h	FUNCTION_112
0x4000597	              0xc3	                                     ret	      1201	cache.h	FUNCTION_112
parse_opt_merge_filter	WHILE,0:FOR,0:CALL,8:DO,0:functions,0:SWITCH,0:IF,4:ELSE,1	85
0x4006968	              0x55	                                push rbp	      2347	ref-filter.c	FUNCTION_90
0x4006969	          0x4889e5	                            mov rbp, rsp	      2347	ref-filter.c	FUNCTION_90
0x400696c	        0x4883ec50	                           sub rsp, 0x50	      2347	ref-filter.c	FUNCTION_90
0x4006970	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2347	ref-filter.c	FUNCTION_90
0x4006974	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2347	ref-filter.c	FUNCTION_90
0x4006978	          0x8955bc	             mov dword [rbp - 0x44], edx	      2347	ref-filter.c	FUNCTION_90
0x400697b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2347	ref-filter.c	FUNCTION_90
0x4006984	        0x488945f8	                mov qword [rbp - 8], rax	      2347	ref-filter.c	FUNCTION_90
0x4006988	            0x31c0	                            xor eax, eax	      2347	ref-filter.c	FUNCTION_90
0x400698a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2348	ref-filter.c	FUNCTION_90
0x400698e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2348	ref-filter.c	FUNCTION_90
0x4006992	        0x488945d8	             mov qword [rbp - 0x28], rax	      2348	ref-filter.c	FUNCTION_90
0x4006996	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x400699a	        0x488b4008	                mov rax, qword [rax + 8]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x400699e	      0xbe00000000	                              mov esi, 0	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x40069a3	          0x4889c7	                            mov rdi, rax	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x40069a6	      0xe800000000	                          call 0x40069ab	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x40069ab	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x40069ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2352	ref-filter.c	FUNCTION_90	IF_1
0x40069b2	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2352	ref-filter.c	FUNCTION_90	IF_1
0x40069b5	            0x85c0	                           test eax, eax	      2352	ref-filter.c	FUNCTION_90	IF_1
0x40069b7	            0x7446	                            je 0x40069ff	      2352	ref-filter.c	FUNCTION_90	IF_1
0x40069b9	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x40069bd	            0x7420	                            je 0x40069df	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x40069bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069c3	      0xba00000000	                              mov edx, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069c8	      0xbe00000000	                              mov esi, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069cd	          0x4889c7	                            mov rdi, rax	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069d0	      0xe800000000	                          call 0x40069d5	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069d5	      0xe86696ffff	                    call sym.const_error	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069da	      0xe9bc000000	                           jmp 0x4006a9b	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x40069df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069e3	      0xba00000000	                              mov edx, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069e8	      0xbe00000000	                              mov esi, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069ed	          0x4889c7	                            mov rdi, rax	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069f0	      0xe800000000	                          call 0x40069f5	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069f5	      0xe84696ffff	                    call sym.const_error	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069fa	      0xe99c000000	                           jmp 0x4006a9b	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40069ff	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2360	ref-filter.c	FUNCTION_90
0x4006a03	            0x7407	                            je 0x4006a0c	      2360	ref-filter.c	FUNCTION_90
0x4006a05	      0xba02000000	                              mov edx, 2	      2360	ref-filter.c	FUNCTION_90
0x4006a0a	            0xeb05	                           jmp 0x4006a11	      2360	ref-filter.c	FUNCTION_90
0x4006a0c	      0xba01000000	                              mov edx, 1	      2360	ref-filter.c	FUNCTION_90
0x4006a11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2360	ref-filter.c	FUNCTION_90
0x4006a15	          0x895030	             mov dword [rax + 0x30], edx	      2360	ref-filter.c	FUNCTION_90
0x4006a18	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a1c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a20	          0x4889d6	                            mov rsi, rdx	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a23	          0x4889c7	                            mov rdi, rax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a26	      0xe800000000	                          call 0x4006a2b	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a2b	            0x85c0	                           test eax, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a2d	            0x7421	                            je 0x4006a50	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4006a2f	      0xbf00000000	                              mov edi, 0	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a34	      0xe8649affff	                               call sym.	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a39	          0x4889c2	                            mov rdx, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a3c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a40	          0x4889c6	                            mov rsi, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a43	          0x4889d7	                            mov rdi, rdx	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a46	      0xb800000000	                              mov eax, 0	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a4b	      0xe800000000	                          call 0x4006a50	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4006a50	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a54	      0xbe00000000	                              mov esi, 0	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a59	          0x4889c7	                            mov rdi, rax	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a5c	      0xe800000000	                          call 0x4006a61	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a61	          0x4889c2	                            mov rdx, rax	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a68	        0x48895038	             mov qword [rax + 0x38], rdx	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x4006a6c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4006a70	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4006a74	          0x4885c0	                           test rax, rax	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4006a77	            0x751d	                           jne 0x4006a96	      2368	ref-filter.c	FUNCTION_90	IF_4
0x4006a79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a7d	      0xba00000000	                              mov edx, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a82	      0xbe00000000	                              mov esi, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a87	          0x4889c7	                            mov rdi, rax	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a8a	      0xe800000000	                          call 0x4006a8f	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a8f	      0xe8ac95ffff	                    call sym.const_error	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a94	            0xeb05	                           jmp 0x4006a9b	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4006a96	      0xb800000000	                              mov eax, 0	      2371	ref-filter.c	FUNCTION_90
0x4006a9b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2372	ref-filter.c	FUNCTION_90
0x4006a9f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2372	ref-filter.c	FUNCTION_90
0x4006aa8	            0x7405	                            je 0x4006aaf	      2372	ref-filter.c	FUNCTION_90
0x4006aaa	      0xe800000000	                          call 0x4006aaf	      2372	ref-filter.c	FUNCTION_90
0x4006aaf	              0xc9	                                   leave	      2372	ref-filter.c	FUNCTION_90
0x4006ab0	              0xc3	                                     ret	      2372	ref-filter.c	FUNCTION_90
trailers_atom_parser	WHILE,0:FOR,1:CALL,7:DO,0:functions,0:SWITCH,0:IF,3:ELSE,2	85
0x4000c8b	              0x55	                                push rbp	       222	ref-filter.c	FUNCTION_8
0x4000c8c	          0x4889e5	                            mov rbp, rsp	       222	ref-filter.c	FUNCTION_8
0x4000c8f	        0x4883ec60	                           sub rsp, 0x60	       222	ref-filter.c	FUNCTION_8
0x4000c93	        0x48897db8	             mov qword [rbp - 0x48], rdi	       222	ref-filter.c	FUNCTION_8
0x4000c97	        0x488975b0	             mov qword [rbp - 0x50], rsi	       222	ref-filter.c	FUNCTION_8
0x4000c9b	        0x488955a8	             mov qword [rbp - 0x58], rdx	       222	ref-filter.c	FUNCTION_8
0x4000c9f	        0x48894da0	             mov qword [rbp - 0x60], rcx	       222	ref-filter.c	FUNCTION_8
0x4000ca3	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	ref-filter.c	FUNCTION_8
0x4000cac	        0x488945f8	                mov qword [rbp - 8], rax	       222	ref-filter.c	FUNCTION_8
0x4000cb0	            0x31c0	                            xor eax, eax	       222	ref-filter.c	FUNCTION_8
0x4000cb2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       223	ref-filter.c	FUNCTION_8
0x4000cba	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       223	ref-filter.c	FUNCTION_8
0x4000cc1	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       223	ref-filter.c	FUNCTION_8
0x4000cc8	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       223	ref-filter.c	FUNCTION_8
0x4000ccc	          0x83c801	                               or eax, 1	       223	ref-filter.c	FUNCTION_8
0x4000ccf	          0x8845e0	               mov byte [rbp - 0x20], al	       223	ref-filter.c	FUNCTION_8
0x4000cd2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       223	ref-filter.c	FUNCTION_8
0x4000cda	      0x48837da800	               cmp qword [rbp - 0x58], 0	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000cdf	     0xf84d1000000	                            je 0x4000db6	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000ce5	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000ce9	        0x488d45d0	                   lea rax, [rbp - 0x30]	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000ced	      0xb9ffffffff	                     mov ecx, 0xffffffff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000cf2	      0xba2c000000	                           mov edx, 0x2c	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000cf7	          0x4889c7	                            mov rdi, rax	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000cfa	      0xe800000000	                          call 0x4000cff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000cff	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d06	      0xe99d000000	                           jmp 0x4000da8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d0f	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d12	          0x4863d2	                         movsxd rdx, edx	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d15	        0x48c1e204	                              shl rdx, 4	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d19	          0x4801d0	                            add rax, rdx	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d1c	          0x488b00	                    mov rax, qword [rax]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d1f	        0x488945c8	             mov qword [rbp - 0x38], rax	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000d23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d27	      0xbe00000000	                              mov esi, 0	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d2c	          0x4889c7	                            mov rdi, rax	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d2f	      0xe800000000	                          call 0x4000d34	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d34	            0x85c0	                           test eax, eax	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d36	            0x750d	                           jne 0x4000d45	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000d38	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x4000d3c	    0xc74024010000	               mov dword [rax + 0x24], 1	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x4000d43	            0xeb5f	                           jmp 0x4000da4	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x4000d45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d49	      0xbe00000000	                              mov esi, 0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d4e	          0x4889c7	                            mov rdi, rax	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d51	      0xe800000000	                          call 0x4000d56	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d56	            0x85c0	                           test eax, eax	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d58	            0x750d	                           jne 0x4000d67	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000d5a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4000d5e	    0xc7401c010000	               mov dword [rax + 0x1c], 1	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4000d65	            0xeb3d	                           jmp 0x4000da4	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4000d67	      0xbf00000000	                              mov edi, 0	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d6c	      0xe82cf7ffff	                               call sym.	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d71	          0x4889c1	                            mov rcx, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d74	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d78	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d7c	          0x4889ce	                            mov rsi, rcx	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d7f	          0x4889c7	                            mov rdi, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d82	      0xb800000000	                              mov eax, 0	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d87	      0xe800000000	                          call 0x4000d8c	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4000d8c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4000d90	      0xbe00000000	                              mov esi, 0	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4000d95	          0x4889c7	                            mov rdi, rax	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4000d98	      0xe800000000	                          call 0x4000d9d	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4000d9d	      0xb8ffffffff	                     mov eax, 0xffffffff	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4000da2	            0xeb33	                           jmp 0x4000dd7	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4000da4	        0x8345c401	               add dword [rbp - 0x3c], 1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000da8	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000dab	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000dae	            0x39c2	                            cmp edx, eax	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000db0	     0xf8755ffffff	                            ja 0x4000d0b	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000db6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       241	ref-filter.c	FUNCTION_8
0x4000dba	    0xc74010060000	               mov dword [rax + 0x10], 6	       241	ref-filter.c	FUNCTION_8
0x4000dc1	        0x488d45d0	                   lea rax, [rbp - 0x30]	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000dc5	      0xbe00000000	                              mov esi, 0	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000dca	          0x4889c7	                            mov rdi, rax	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000dcd	      0xe800000000	                          call 0x4000dd2	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4000dd2	      0xb800000000	                              mov eax, 0	       243	ref-filter.c	FUNCTION_8
0x4000dd7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       244	ref-filter.c	FUNCTION_8
0x4000ddb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       244	ref-filter.c	FUNCTION_8
0x4000de4	            0x7405	                            je 0x4000deb	       244	ref-filter.c	FUNCTION_8
0x4000de6	      0xe800000000	                          call 0x4000deb	       244	ref-filter.c	FUNCTION_8
0x4000deb	              0xc9	                                   leave	       244	ref-filter.c	FUNCTION_8
0x4000dec	              0xc3	                                     ret	       244	ref-filter.c	FUNCTION_8
lstrip_ref_components	WHILE,1:FOR,1:CALL,0:DO,0:functions,0:SWITCH,1:IF,1:ELSE,0	62
0x4003a48	              0x55	                                push rbp	      1242	ref-filter.c	FUNCTION_49
0x4003a49	          0x4889e5	                            mov rbp, rsp	      1242	ref-filter.c	FUNCTION_49
0x4003a4c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1242	ref-filter.c	FUNCTION_49
0x4003a50	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1242	ref-filter.c	FUNCTION_49
0x4003a53	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1243	ref-filter.c	FUNCTION_49
0x4003a56	            0x4898	                                    cdqe	      1243	ref-filter.c	FUNCTION_49
0x4003a58	        0x488945e8	             mov qword [rbp - 0x18], rax	      1243	ref-filter.c	FUNCTION_49
0x4003a5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	ref-filter.c	FUNCTION_49
0x4003a60	        0x488945f0	             mov qword [rbp - 0x10], rax	      1244	ref-filter.c	FUNCTION_49
0x4003a64	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1246	ref-filter.c	FUNCTION_49	IF_1
0x4003a68	     0xf898d000000	                           jns 0x4003afb	      1246	ref-filter.c	FUNCTION_49	IF_1
0x4003a6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1248	ref-filter.c	FUNCTION_49	IF_1
0x4003a72	        0x488945f8	                mov qword [rbp - 8], rax	      1248	ref-filter.c	FUNCTION_49	IF_1
0x4003a76	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a7d	            0xeb2b	                           jmp 0x4003aaa	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a7f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a82	          0x4863d0	                         movsxd rdx, eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a85	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a89	          0x4801d0	                            add rax, rdx	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a8c	           0xfb600	                   movzx eax, byte [rax]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a8f	            0x3c2f	                            cmp al, 0x2f	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a91	            0x750b	                           jne 0x4003a9e	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a93	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a96	          0x83c001	                              add eax, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a99	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a9c	            0xeb0c	                           jmp 0x4003aaa	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003a9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003aa2	        0x4883c001	                              add rax, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003aa6	        0x488945f8	                mov qword [rbp - 8], rax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003aaa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003aad	          0x4863d0	                         movsxd rdx, eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003ab4	          0x4801d0	                            add rax, rdx	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003ab7	           0xfb600	                   movzx eax, byte [rax]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003aba	            0x84c0	                             test al, al	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003abc	            0x75c1	                           jne 0x4003a7f	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x4003abe	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003ac1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003ac4	             0x1d0	                            add eax, edx	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003ac6	          0x83c001	                              add eax, 1	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003ac9	            0x4898	                                    cdqe	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003acb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1259	ref-filter.c	FUNCTION_49	IF_1
0x4003acf	            0xeb2a	                           jmp 0x4003afb	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x4003ad1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ad5	        0x488d5001	                      lea rdx, [rax + 1]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ad9	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003add	           0xfb600	                   movzx eax, byte [rax]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ae0	           0xfbec0	                           movsx eax, al	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ae3	            0x85c0	                           test eax, eax	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ae5	            0x7407	                            je 0x4003aee	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003ae7	          0x83f82f	                           cmp eax, 0x2f	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003aea	            0x7409	                            je 0x4003af5	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003aec	            0xeb0d	                           jmp 0x4003afb	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003aee	      0xb800000000	                              mov eax, 0	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003af3	            0xeb11	                           jmp 0x4003b06	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003af5	      0x48836de801	               sub qword [rbp - 0x18], 1	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003afa	              0x90	                                     nop	      1268	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x4003afb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x4003b00	            0x7fcf	                            jg 0x4003ad1	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x4003b02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1272	ref-filter.c	FUNCTION_49
0x4003b06	              0x5d	                                 pop rbp	      1273	ref-filter.c	FUNCTION_49
0x4003b07	              0xc3	                                     ret	      1273	ref-filter.c	FUNCTION_49
copy_advance	WHILE,1:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	20
0x4003a0c	              0x55	                                push rbp	      1235	ref-filter.c	FUNCTION_48
0x4003a0d	          0x4889e5	                            mov rbp, rsp	      1235	ref-filter.c	FUNCTION_48
0x4003a10	        0x48897df8	                mov qword [rbp - 8], rdi	      1235	ref-filter.c	FUNCTION_48
0x4003a14	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1235	ref-filter.c	FUNCTION_48
0x4003a18	            0xeb1d	                           jmp 0x4003a37	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a1e	        0x488d5001	                      lea rdx, [rax + 1]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a22	        0x488955f8	                mov qword [rbp - 8], rdx	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a26	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a2a	        0x488d4a01	                      lea rcx, [rdx + 1]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a2e	        0x48894df0	             mov qword [rbp - 0x10], rcx	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a32	           0xfb612	                   movzx edx, byte [rdx]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a35	            0x8810	                      mov byte [rax], dl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a3b	           0xfb600	                   movzx eax, byte [rax]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a3e	            0x84c0	                             test al, al	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a40	            0x75d8	                           jne 0x4003a1a	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4003a42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	ref-filter.c	FUNCTION_48
0x4003a46	              0x5d	                                 pop rbp	      1239	ref-filter.c	FUNCTION_48
0x4003a47	              0xc3	                                     ret	      1239	ref-filter.c	FUNCTION_48
color_atom_parser	WHILE,0:FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,3:ELSE,0	53
0x400072a	              0x55	                                push rbp	       119	ref-filter.c	FUNCTION_3
0x400072b	          0x4889e5	                            mov rbp, rsp	       119	ref-filter.c	FUNCTION_3
0x400072e	        0x4883ec20	                           sub rsp, 0x20	       119	ref-filter.c	FUNCTION_3
0x4000732	        0x48897df8	                mov qword [rbp - 8], rdi	       119	ref-filter.c	FUNCTION_3
0x4000736	        0x488975f0	             mov qword [rbp - 0x10], rsi	       119	ref-filter.c	FUNCTION_3
0x400073a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       119	ref-filter.c	FUNCTION_3
0x400073e	        0x48894de0	             mov qword [rbp - 0x20], rcx	       119	ref-filter.c	FUNCTION_3
0x4000742	      0x48837de800	               cmp qword [rbp - 0x18], 0	       120	ref-filter.c	FUNCTION_3	IF_1
0x4000747	            0x7525	                           jne 0x400076e	       120	ref-filter.c	FUNCTION_3	IF_1
0x4000749	      0xbf00000000	                              mov edi, 0	       121	ref-filter.c	FUNCTION_3	CALL_2
0x400074e	      0xe84afdffff	                               call sym.	       121	ref-filter.c	FUNCTION_3	CALL_2
0x4000753	          0x4889c2	                            mov rdx, rax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x4000756	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       121	ref-filter.c	FUNCTION_3	CALL_2
0x400075a	      0xbeffffffff	                     mov esi, 0xffffffff	       121	ref-filter.c	FUNCTION_3	CALL_2
0x400075f	          0x4889c7	                            mov rdi, rax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x4000762	      0xb800000000	                              mov eax, 0	       121	ref-filter.c	FUNCTION_3	CALL_2
0x4000767	      0xe8e8feffff	                call sym.strbuf_addf_ret	       121	ref-filter.c	FUNCTION_3	CALL_2
0x400076c	            0xeb7b	                           jmp 0x40007e9	       121	ref-filter.c	FUNCTION_3	CALL_2
0x400076e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000772	        0x488d5010	                   lea rdx, [rax + 0x10]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000776	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x400077a	          0x4889d6	                            mov rsi, rdx	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x400077d	          0x4889c7	                            mov rdi, rax	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000780	      0xe800000000	                          call 0x4000785	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000785	            0x85c0	                           test eax, eax	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000787	            0x792f	                           jns 0x40007b8	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x4000789	      0xbf00000000	                              mov edi, 0	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400078e	      0xe80afdffff	                               call sym.	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000793	          0x4889c6	                            mov rsi, rax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x4000796	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400079a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x400079e	          0x4889d1	                            mov rcx, rdx	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007a1	          0x4889f2	                            mov rdx, rsi	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007a4	      0xbeffffffff	                     mov esi, 0xffffffff	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007a9	          0x4889c7	                            mov rdi, rax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007ac	      0xb800000000	                              mov eax, 0	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007b1	      0xe89efeffff	                call sym.strbuf_addf_ret	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007b6	            0xeb31	                           jmp 0x40007e9	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x40007b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007bc	          0x8b400c	              mov eax, dword [rax + 0xc]	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007bf	            0x89c6	                            mov esi, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007c1	      0xbf01000000	                              mov edi, 1	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007c6	      0xe800000000	                          call 0x40007cb	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007cb	            0x85c0	                           test eax, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007cd	            0x7515	                           jne 0x40007e4	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x40007cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       130	ref-filter.c	FUNCTION_3	CALL_7
0x40007d3	        0x4883c010	                           add rax, 0x10	       130	ref-filter.c	FUNCTION_3	CALL_7
0x40007d7	          0x4889c6	                            mov rsi, rax	       130	ref-filter.c	FUNCTION_3	CALL_7
0x40007da	      0xbf00000000	                              mov edi, 0	       130	ref-filter.c	FUNCTION_3	CALL_7
0x40007df	      0xe800000000	                          call 0x40007e4	       130	ref-filter.c	FUNCTION_3	CALL_7
0x40007e4	      0xb800000000	                              mov eax, 0	       131	ref-filter.c	FUNCTION_3
0x40007e9	              0xc9	                                   leave	       132	ref-filter.c	FUNCTION_3
0x40007ea	              0xc3	                                     ret	       132	ref-filter.c	FUNCTION_3
contains_tag_algo	WHILE,1:FOR,0:CALL,8:DO,0:functions,0:SWITCH,1:IF,2:ELSE,1	108
0x4005029	              0x55	                                push rbp	      1699	ref-filter.c	FUNCTION_62
0x400502a	          0x4889e5	                            mov rbp, rsp	      1699	ref-filter.c	FUNCTION_62
0x400502d	        0x4883ec60	                           sub rsp, 0x60	      1699	ref-filter.c	FUNCTION_62
0x4005031	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1699	ref-filter.c	FUNCTION_62
0x4005035	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1699	ref-filter.c	FUNCTION_62
0x4005039	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1699	ref-filter.c	FUNCTION_62
0x400503d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	ref-filter.c	FUNCTION_62
0x4005046	        0x488945f8	                mov qword [rbp - 8], rax	      1699	ref-filter.c	FUNCTION_62
0x400504a	            0x31c0	                            xor eax, eax	      1699	ref-filter.c	FUNCTION_62
0x400504c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1700	ref-filter.c	FUNCTION_62
0x4005053	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1700	ref-filter.c	FUNCTION_62
0x400505a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1700	ref-filter.c	FUNCTION_62
0x4005062	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4005066	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x400506a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x400506e	          0x4889ce	                            mov rsi, rcx	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4005071	          0x4889c7	                            mov rdi, rax	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4005074	      0xe82ffeffff	                  call sym.contains_test	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x4005079	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x400507c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4005080	            0x7408	                            je 0x400508a	      1703	ref-filter.c	FUNCTION_62	IF_1
0x4005082	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1704	ref-filter.c	FUNCTION_62	IF_1
0x4005085	      0xe919010000	                           jmp 0x40051a3	      1704	ref-filter.c	FUNCTION_62	IF_1
0x400508a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x400508e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4005092	          0x4889d6	                            mov rsi, rdx	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4005095	          0x4889c7	                            mov rdi, rax	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x4005098	      0xe883feffff	         call sym.push_to_contains_stack	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x400509d	      0xe9d3000000	                           jmp 0x4005175	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x40050a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050a6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050a9	          0x4863d2	                         movsxd rdx, edx	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050ac	        0x48c1e204	                              shl rdx, 4	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050b0	        0x4883ea10	                           sub rdx, 0x10	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050b4	          0x4801d0	                            add rax, rdx	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050b7	        0x488945c8	             mov qword [rbp - 0x38], rax	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x40050bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x40050bf	          0x488b00	                    mov rax, qword [rax]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x40050c2	        0x488945d0	             mov qword [rbp - 0x30], rax	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x40050c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x40050ca	        0x488b4008	                mov rax, qword [rax + 8]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x40050ce	        0x488945d8	             mov qword [rbp - 0x28], rax	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x40050d2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050d7	            0x7524	                           jne 0x40050fd	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050d9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050e1	          0x4889d6	                            mov rsi, rdx	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050e4	          0x4889c7	                            mov rdi, rax	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050e7	      0xe813fdffff	              call sym.contains_cache_at	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050ec	    0xc70001000000	                      mov dword [rax], 1	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x40050f2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050f5	          0x83e801	                              sub eax, 1	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050f8	          0x8945e0	             mov dword [rbp - 0x20], eax	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050fb	            0xeb78	                           jmp 0x4005175	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x40050fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005101	          0x488b00	                    mov rax, qword [rax]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005104	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005108	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400510c	          0x4889ce	                            mov rsi, rcx	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400510f	          0x4889c7	                            mov rdi, rax	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005112	      0xe891fdffff	                  call sym.contains_test	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005117	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400511a	            0x7430	                            je 0x400514c	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400511c	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400511f	            0x723d	                            jb 0x400515e	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005121	          0x83f802	                              cmp eax, 2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005124	            0x7402	                            je 0x4005128	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005126	            0xeb4d	                           jmp 0x4005175	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4005128	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x400512c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4005130	          0x4889d6	                            mov rsi, rdx	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4005133	          0x4889c7	                            mov rdi, rax	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4005136	      0xe8c4fcffff	              call sym.contains_cache_at	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x400513b	    0xc70002000000	                      mov dword [rax], 2	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4005141	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005144	          0x83e801	                              sub eax, 1	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005147	          0x8945e0	             mov dword [rbp - 0x20], eax	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x400514a	            0xeb29	                           jmp 0x4005175	      1724	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x400514c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005150	        0x488b5008	                mov rdx, qword [rax + 8]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005154	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005158	        0x48895008	                mov qword [rax + 8], rdx	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x400515c	            0xeb17	                           jmp 0x4005175	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x400515e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4005162	          0x488b00	                    mov rax, qword [rax]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4005165	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4005169	          0x4889d6	                            mov rsi, rdx	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x400516c	          0x4889c7	                            mov rdi, rax	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x400516f	      0xe8acfdffff	         call sym.push_to_contains_stack	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4005174	              0x90	                                     nop	      1730	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4005175	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4005178	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x400517a	     0xf8522ffffff	                           jne 0x40050a2	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4005180	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4005184	          0x4889c7	                            mov rdi, rax	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4005187	      0xe800000000	                          call 0x400518c	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x400518c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4005190	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4005194	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x4005198	          0x4889ce	                            mov rsi, rcx	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x400519b	          0x4889c7	                            mov rdi, rax	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x400519e	      0xe805fdffff	                  call sym.contains_test	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x40051a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1735	ref-filter.c	FUNCTION_62
0x40051a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1735	ref-filter.c	FUNCTION_62
0x40051b0	            0x7405	                            je 0x40051b7	      1735	ref-filter.c	FUNCTION_62
0x40051b2	      0xe800000000	                          call 0x40051b7	      1735	ref-filter.c	FUNCTION_62
0x40051b7	              0xc9	                                   leave	      1735	ref-filter.c	FUNCTION_62
0x40051b8	              0xc3	                                     ret	      1735	ref-filter.c	FUNCTION_62
compare_refs	WHILE,0:FOR,1:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	34
0x4006270	              0x55	                                push rbp	      2182	ref-filter.c	FUNCTION_80
0x4006271	          0x4889e5	                            mov rbp, rsp	      2182	ref-filter.c	FUNCTION_80
0x4006274	        0x4883ec40	                           sub rsp, 0x40	      2182	ref-filter.c	FUNCTION_80
0x4006278	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2182	ref-filter.c	FUNCTION_80
0x400627c	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2182	ref-filter.c	FUNCTION_80
0x4006280	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2182	ref-filter.c	FUNCTION_80
0x4006284	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	ref-filter.c	FUNCTION_80
0x4006288	          0x488b00	                    mov rax, qword [rax]	      2183	ref-filter.c	FUNCTION_80
0x400628b	        0x488945f0	             mov qword [rbp - 0x10], rax	      2183	ref-filter.c	FUNCTION_80
0x400628f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2184	ref-filter.c	FUNCTION_80
0x4006293	          0x488b00	                    mov rax, qword [rax]	      2184	ref-filter.c	FUNCTION_80
0x4006296	        0x488945f8	                mov qword [rbp - 8], rax	      2184	ref-filter.c	FUNCTION_80
0x400629a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x400629e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062a2	            0xeb30	                           jmp 0x40062d4	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062a4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062a8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062b0	          0x4889ce	                            mov rsi, rcx	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062b3	          0x4889c7	                            mov rdi, rax	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062b6	      0xe8dffdffff	                call sym.cmp_ref_sorting	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062bb	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x40062be	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40062c2	            0x7405	                            je 0x40062c9	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40062c4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2190	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40062c7	            0xeb17	                           jmp 0x40062e0	      2190	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40062c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062cd	          0x488b00	                    mov rax, qword [rax]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062d0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062d4	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062d9	            0x75c9	                           jne 0x40062a4	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40062db	      0xb800000000	                              mov eax, 0	      2192	ref-filter.c	FUNCTION_80
0x40062e0	              0xc9	                                   leave	      2193	ref-filter.c	FUNCTION_80
0x40062e1	              0xc3	                                     ret	      2193	ref-filter.c	FUNCTION_80
filter_refs	WHILE,0:FOR,0:CALL,11:DO,0:functions,0:SWITCH,0:IF,8:ELSE,4	124
0x4005ed9	              0x55	                                push rbp	      2104	ref-filter.c	FUNCTION_78
0x4005eda	          0x4889e5	                            mov rbp, rsp	      2104	ref-filter.c	FUNCTION_78
0x4005edd	        0x4883c480	             add rsp, 0xffffffffffffff80	      2104	ref-filter.c	FUNCTION_78
0x4005ee1	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2104	ref-filter.c	FUNCTION_78
0x4005ee5	        0x48897590	             mov qword [rbp - 0x70], rsi	      2104	ref-filter.c	FUNCTION_78
0x4005ee9	          0x89558c	             mov dword [rbp - 0x74], edx	      2104	ref-filter.c	FUNCTION_78
0x4005eec	    0x64488b042528	                mov rax, qword fs:[0x28]	      2104	ref-filter.c	FUNCTION_78
0x4005ef5	        0x488945f8	                mov qword [rbp - 8], rax	      2104	ref-filter.c	FUNCTION_78
0x4005ef9	            0x31c0	                            xor eax, eax	      2104	ref-filter.c	FUNCTION_78
0x4005efb	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      2106	ref-filter.c	FUNCTION_78
0x4005f02	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2107	ref-filter.c	FUNCTION_78
0x4005f09	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2109	ref-filter.c	FUNCTION_78
0x4005f0d	        0x488945b0	             mov qword [rbp - 0x50], rax	      2109	ref-filter.c	FUNCTION_78
0x4005f11	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2110	ref-filter.c	FUNCTION_78
0x4005f15	        0x488945b8	             mov qword [rbp - 0x48], rax	      2110	ref-filter.c	FUNCTION_78
0x4005f19	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2112	ref-filter.c	FUNCTION_78	IF_1
0x4005f1c	          0x83e001	                              and eax, 1	      2112	ref-filter.c	FUNCTION_78	IF_1
0x4005f1f	            0x85c0	                           test eax, eax	      2112	ref-filter.c	FUNCTION_78	IF_1
0x4005f21	            0x7407	                            je 0x4005f2a	      2112	ref-filter.c	FUNCTION_78	IF_1
0x4005f23	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      2113	ref-filter.c	FUNCTION_78	IF_1
0x4005f2a	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2114	ref-filter.c	FUNCTION_78
0x4005f2d	          0x83e03e	                           and eax, 0x3e	      2114	ref-filter.c	FUNCTION_78
0x4005f30	            0x89c2	                            mov edx, eax	      2114	ref-filter.c	FUNCTION_78
0x4005f32	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2114	ref-filter.c	FUNCTION_78
0x4005f36	          0x895044	             mov dword [rax + 0x44], edx	      2114	ref-filter.c	FUNCTION_78
0x4005f39	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x4005f3d	        0x4883c010	                           add rax, 0x10	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x4005f41	          0x4889c7	                            mov rdi, rax	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x4005f44	      0xe8b4ecffff	            call sym.init_contains_cache	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x4005f49	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x4005f4d	        0x4883c028	                           add rax, 0x28	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x4005f51	          0x4889c7	                            mov rdi, rax	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x4005f54	      0xe8a4ecffff	            call sym.init_contains_cache	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x4005f59	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4005f5d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4005f60	            0x85c0	                           test eax, eax	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4005f62	            0x750f	                           jne 0x4005f73	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4005f64	      0xbf00000000	                              mov edi, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4005f69	      0xb800000000	                              mov eax, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4005f6e	      0xe800000000	                          call 0x4005f73	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x4005f73	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4005f77	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4005f7a	          0x83f804	                              cmp eax, 4	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4005f7d	            0x7523	                           jne 0x4005fa2	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4005f7f	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f82	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f86	            0x89d1	                            mov ecx, edx	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f88	          0x4889c2	                            mov rdx, rax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f8b	      0xbe00000000	                              mov esi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f90	      0xbf00000000	                              mov edi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f95	      0xe800000000	                          call 0x4005f9a	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f9a	          0x8945a8	             mov dword [rbp - 0x58], eax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005f9d	      0xe981000000	                           jmp 0x4006023	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4005fa2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fa6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fa9	          0x83f808	                              cmp eax, 8	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fac	            0x7520	                           jne 0x4005fce	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fae	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fb1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fb5	            0x89d1	                            mov ecx, edx	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fb7	          0x4889c2	                            mov rdx, rax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fba	      0xbe00000000	                              mov esi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fbf	      0xbf00000000	                              mov edi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fc4	      0xe800000000	                          call 0x4005fc9	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fc9	          0x8945a8	             mov dword [rbp - 0x58], eax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fcc	            0xeb55	                           jmp 0x4006023	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4005fce	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fd2	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fd5	          0x83f802	                              cmp eax, 2	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fd8	            0x7520	                           jne 0x4005ffa	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fda	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fdd	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fe1	            0x89d1	                            mov ecx, edx	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fe3	          0x4889c2	                            mov rdx, rax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005fe6	      0xbe00000000	                              mov esi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005feb	      0xbf00000000	                              mov edi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005ff0	      0xe800000000	                          call 0x4005ff5	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005ff5	          0x8945a8	             mov dword [rbp - 0x58], eax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005ff8	            0xeb29	                           jmp 0x4006023	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4005ffa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4005ffe	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006001	          0x83e01e	                           and eax, 0x1e	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006004	            0x85c0	                           test eax, eax	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006006	            0x741b	                            je 0x4006023	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006008	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x400600b	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x400600f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006013	      0xbe00000000	                              mov esi, 0	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006018	          0x4889c7	                            mov rdi, rax	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x400601b	      0xe8abf4ffff	    call sym.for_each_fullref_in_pattern	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006020	          0x8945a8	             mov dword [rbp - 0x58], eax	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4006023	        0x837da800	               cmp dword [rbp - 0x58], 0	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006027	            0x751f	                           jne 0x4006048	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006029	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x400602d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006030	          0x83e020	                           and eax, 0x20	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006033	            0x85c0	                           test eax, eax	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006035	            0x7411	                            je 0x4006048	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4006037	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x400603b	          0x4889c6	                            mov rsi, rax	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x400603e	      0xbf00000000	                              mov edi, 0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4006043	      0xe800000000	                          call 0x4006048	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4006048	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x400604c	        0x4883c010	                           add rax, 0x10	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4006050	          0x4889c7	                            mov rdi, rax	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4006053	      0xe8c5ebffff	           call sym.clear_contains_cache	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x4006058	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x400605c	        0x4883c028	                           add rax, 0x28	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x4006060	          0x4889c7	                            mov rdi, rax	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x4006063	      0xe8b5ebffff	           call sym.clear_contains_cache	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x4006068	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2145	ref-filter.c	FUNCTION_78	IF_8
0x400606c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2145	ref-filter.c	FUNCTION_78	IF_8
0x4006070	          0x4885c0	                           test rax, rax	      2145	ref-filter.c	FUNCTION_78	IF_8
0x4006073	            0x740c	                            je 0x4006081	      2145	ref-filter.c	FUNCTION_78	IF_8
0x4006075	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4006079	          0x4889c7	                            mov rdi, rax	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x400607c	      0xe83cfbffff	                call sym.do_merge_filter	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4006081	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2148	ref-filter.c	FUNCTION_78
0x4006084	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2149	ref-filter.c	FUNCTION_78
0x4006088	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2149	ref-filter.c	FUNCTION_78
0x4006091	            0x7405	                            je 0x4006098	      2149	ref-filter.c	FUNCTION_78
0x4006093	      0xe800000000	                          call 0x4006098	      2149	ref-filter.c	FUNCTION_78
0x4006098	              0xc9	                                   leave	      2149	ref-filter.c	FUNCTION_78
0x4006099	              0xc3	                                     ret	      2149	ref-filter.c	FUNCTION_78
const_error	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_134
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_134
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_134
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_134
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_134
free_array_item	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	14
0x4005b17	              0x55	                                push rbp	      2038	ref-filter.c	FUNCTION_75
0x4005b18	          0x4889e5	                            mov rbp, rsp	      2038	ref-filter.c	FUNCTION_75
0x4005b1b	        0x4883ec10	                           sub rsp, 0x10	      2038	ref-filter.c	FUNCTION_75
0x4005b1f	        0x48897df8	                mov qword [rbp - 8], rdi	      2038	ref-filter.c	FUNCTION_75
0x4005b23	        0x488b45f8	                mov rax, qword [rbp - 8]	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4005b27	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4005b2b	          0x4889c7	                            mov rdi, rax	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4005b2e	      0xe800000000	                          call 0x4005b33	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4005b33	        0x488b45f8	                mov rax, qword [rbp - 8]	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4005b37	          0x4889c7	                            mov rdi, rax	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4005b3a	      0xe800000000	                          call 0x4005b3f	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4005b3f	              0x90	                                     nop	      2041	ref-filter.c	FUNCTION_75
0x4005b40	              0xc9	                                   leave	      2041	ref-filter.c	FUNCTION_75
0x4005b41	              0xc3	                                     ret	      2041	ref-filter.c	FUNCTION_75
get_ref_atom_value	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	35
0x4004b2e	              0x55	                                push rbp	      1612	ref-filter.c	FUNCTION_58
0x4004b2f	          0x4889e5	                            mov rbp, rsp	      1612	ref-filter.c	FUNCTION_58
0x4004b32	        0x4883ec20	                           sub rsp, 0x20	      1612	ref-filter.c	FUNCTION_58
0x4004b36	        0x48897df8	                mov qword [rbp - 8], rdi	      1612	ref-filter.c	FUNCTION_58
0x4004b3a	          0x8975f4	              mov dword [rbp - 0xc], esi	      1612	ref-filter.c	FUNCTION_58
0x4004b3d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1612	ref-filter.c	FUNCTION_58
0x4004b41	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1612	ref-filter.c	FUNCTION_58
0x4004b45	        0x488b45f8	                mov rax, qword [rbp - 8]	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004b49	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004b4d	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004b50	            0x752e	                           jne 0x4004b80	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004b52	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b56	        0x488b45f8	                mov rax, qword [rbp - 8]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b5a	          0x4889d6	                            mov rsi, rdx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b5d	          0x4889c7	                            mov rdi, rax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b60	      0xe8ebf7ffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b65	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b67	            0x7407	                            je 0x4004b70	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004b69	      0xb8ffffffff	                     mov eax, 0xffffffff	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x4004b6e	            0xeb31	                           jmp 0x4004ba1	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x4004b70	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004b74	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004b78	          0x4889c7	                            mov rdi, rax	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004b7b	      0xe8b1ecffff	            call sym.fill_missing_values	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4004b80	        0x488b45f8	                mov rax, qword [rbp - 8]	      1618	ref-filter.c	FUNCTION_58
0x4004b84	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1618	ref-filter.c	FUNCTION_58
0x4004b88	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1618	ref-filter.c	FUNCTION_58
0x4004b8b	          0x4863d2	                         movsxd rdx, edx	      1618	ref-filter.c	FUNCTION_58
0x4004b8e	        0x48c1e205	                              shl rdx, 5	      1618	ref-filter.c	FUNCTION_58
0x4004b92	          0x4801c2	                            add rdx, rax	      1618	ref-filter.c	FUNCTION_58
0x4004b95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1618	ref-filter.c	FUNCTION_58
0x4004b99	          0x488910	                    mov qword [rax], rdx	      1618	ref-filter.c	FUNCTION_58
0x4004b9c	      0xb800000000	                              mov eax, 0	      1619	ref-filter.c	FUNCTION_58
0x4004ba1	              0xc9	                                   leave	      1620	ref-filter.c	FUNCTION_58
0x4004ba2	              0xc3	                                     ret	      1620	ref-filter.c	FUNCTION_58
refname_atom_parser_internal	WHILE,0:FOR,0:CALL,12:DO,0:functions,0:SWITCH,0:IF,6:ELSE,4	105
0x40007eb	              0x55	                                push rbp	       136	ref-filter.c	FUNCTION_4
0x40007ec	          0x4889e5	                            mov rbp, rsp	       136	ref-filter.c	FUNCTION_4
0x40007ef	              0x53	                                push rbx	       136	ref-filter.c	FUNCTION_4
0x40007f0	        0x4883ec28	                           sub rsp, 0x28	       136	ref-filter.c	FUNCTION_4
0x40007f4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       136	ref-filter.c	FUNCTION_4
0x40007f8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       136	ref-filter.c	FUNCTION_4
0x40007fc	        0x488955d8	             mov qword [rbp - 0x28], rdx	       136	ref-filter.c	FUNCTION_4
0x4000800	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       136	ref-filter.c	FUNCTION_4
0x4000804	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	ref-filter.c	FUNCTION_4	IF_1
0x4000808	          0x4885c0	                           test rax, rax	       137	ref-filter.c	FUNCTION_4	IF_1
0x400080b	            0x750f	                           jne 0x400081c	       137	ref-filter.c	FUNCTION_4	IF_1
0x400080d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	ref-filter.c	FUNCTION_4	IF_1
0x4000811	    0xc70000000000	                      mov dword [rax], 0	       138	ref-filter.c	FUNCTION_4	IF_1
0x4000817	      0xe952010000	                           jmp 0x400096e	       138	ref-filter.c	FUNCTION_4	IF_1
0x400081c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4000820	      0xbe00000000	                              mov esi, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4000825	          0x4889c7	                            mov rdi, rax	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4000828	      0xe800000000	                          call 0x400082d	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x400082d	            0x85c0	                           test eax, eax	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x400082f	            0x750f	                           jne 0x4000840	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4000831	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4000835	    0xc70001000000	                      mov dword [rax], 1	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x400083b	      0xe92e010000	                           jmp 0x400096e	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4000840	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000844	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000848	      0xbe00000000	                              mov esi, 0	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x400084d	          0x4889c7	                            mov rdi, rax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000850	      0xe8f6f7ffff	                    call sym.skip_prefix	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000855	            0x85c0	                           test eax, eax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000857	            0x7519	                           jne 0x4000872	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000859	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x400085d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x4000861	      0xbe00000000	                              mov esi, 0	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x4000866	          0x4889c7	                            mov rdi, rax	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x4000869	      0xe8ddf7ffff	                    call sym.skip_prefix	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x400086e	            0x85c0	                           test eax, eax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000870	            0x745a	                            je 0x40008cc	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x4000872	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	ref-filter.c	FUNCTION_4	ELSE_2	IF_3
0x4000876	    0xc70002000000	                      mov dword [rax], 2	       143	ref-filter.c	FUNCTION_4	ELSE_2	IF_3
0x400087c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000880	        0x488d5004	                      lea rdx, [rax + 4]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000884	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000888	      0xbe0a000000	                            mov esi, 0xa	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x400088d	          0x4889c7	                            mov rdi, rax	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000890	      0xe860f9ffff	                       call sym.strtol_i	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000895	            0x85c0	                           test eax, eax	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x4000897	     0xf84d1000000	                            je 0x400096e	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x400089d	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008a1	      0xbf00000000	                              mov edi, 0	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008a6	      0xe8f2fbffff	                               call sym.	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008ab	          0x4889c2	                            mov rdx, rax	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008b2	          0x4889d9	                            mov rcx, rbx	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008b5	      0xbeffffffff	                     mov esi, 0xffffffff	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008ba	          0x4889c7	                            mov rdi, rax	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008bd	      0xb800000000	                              mov eax, 0	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008c2	      0xe88dfdffff	                call sym.strbuf_addf_ret	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008c7	      0xe9a7000000	                           jmp 0x4000973	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x40008cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008d0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008d4	      0xbe00000000	                              mov esi, 0	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008d9	          0x4889c7	                            mov rdi, rax	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008dc	      0xe86af7ffff	                    call sym.skip_prefix	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008e1	            0x85c0	                           test eax, eax	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008e3	            0x7453	                            je 0x4000938	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x40008e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	ref-filter.c	FUNCTION_4	ELSE_3	IF_5
0x40008e9	    0xc70003000000	                      mov dword [rax], 3	       147	ref-filter.c	FUNCTION_4	ELSE_3	IF_5
0x40008ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x40008f3	        0x488d5008	                      lea rdx, [rax + 8]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x40008f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x40008fb	      0xbe0a000000	                            mov esi, 0xa	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x4000900	          0x4889c7	                            mov rdi, rax	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x4000903	      0xe8edf8ffff	                       call sym.strtol_i	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x4000908	            0x85c0	                           test eax, eax	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x400090a	            0x7462	                            je 0x400096e	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x400090c	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000910	      0xbf00000000	                              mov edi, 0	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000915	      0xe883fbffff	                               call sym.	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400091a	          0x4889c2	                            mov rdx, rax	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400091d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000921	          0x4889d9	                            mov rcx, rbx	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000924	      0xbeffffffff	                     mov esi, 0xffffffff	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000929	          0x4889c7	                            mov rdi, rax	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x400092c	      0xb800000000	                              mov eax, 0	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000931	      0xe81efdffff	                call sym.strbuf_addf_ret	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000936	            0xeb3b	                           jmp 0x4000973	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x4000938	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400093c	      0xbf00000000	                              mov edi, 0	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000941	      0xe857fbffff	                               call sym.	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000946	          0x4889c6	                            mov rsi, rax	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000949	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400094d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000951	          0x4989d8	                             mov r8, rbx	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000954	          0x4889d1	                            mov rcx, rdx	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000957	          0x4889f2	                            mov rdx, rsi	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400095a	      0xbeffffffff	                     mov esi, 0xffffffff	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400095f	          0x4889c7	                            mov rdi, rax	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000962	      0xb800000000	                              mov eax, 0	       151	ref-filter.c	FUNCTION_4	CALL_12
0x4000967	      0xe8e8fcffff	                call sym.strbuf_addf_ret	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400096c	            0xeb05	                           jmp 0x4000973	       151	ref-filter.c	FUNCTION_4	CALL_12
0x400096e	      0xb800000000	                              mov eax, 0	       152	ref-filter.c	FUNCTION_4
0x4000973	        0x4883c428	                           add rsp, 0x28	       153	ref-filter.c	FUNCTION_4
0x4000977	              0x5b	                                 pop rbx	       153	ref-filter.c	FUNCTION_4
0x4000978	              0x5d	                                 pop rbp	       153	ref-filter.c	FUNCTION_4
0x4000979	              0xc3	                                     ret	       153	ref-filter.c	FUNCTION_4
is_empty	WHILE,1:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	23
0x4001e13	              0x55	                                push rbp	       653	ref-filter.c	FUNCTION_25
0x4001e14	          0x4889e5	                            mov rbp, rsp	       653	ref-filter.c	FUNCTION_25
0x4001e17	        0x48897df8	                mov qword [rbp - 8], rdi	       653	ref-filter.c	FUNCTION_25
0x4001e1b	            0xeb29	                           jmp 0x4001e46	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e21	           0xfb600	                   movzx eax, byte [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e24	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e27	            0x4898	                                    cdqe	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e29	     0xfb680000000	                   movzx eax, byte [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e30	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e33	          0x83e001	                              and eax, 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e36	            0x85c0	                           test eax, eax	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e38	            0x7507	                           jne 0x4001e41	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e3a	      0xb800000000	                              mov eax, 0	       656	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e3f	            0xeb15	                           jmp 0x4001e56	       656	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4001e41	      0x488345f801	                  add qword [rbp - 8], 1	       657	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e46	        0x488b45f8	                mov rax, qword [rbp - 8]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e4a	           0xfb600	                   movzx eax, byte [rax]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e4d	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e4f	            0x75cc	                           jne 0x4001e1d	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4001e51	      0xb801000000	                              mov eax, 1	       659	ref-filter.c	FUNCTION_25
0x4001e56	              0x5d	                                 pop rbp	       660	ref-filter.c	FUNCTION_25
0x4001e57	              0xc3	                                     ret	       660	ref-filter.c	FUNCTION_25
find_subpos	WHILE,4:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,3:ELSE,0	137
0x40031fb	              0x55	                                push rbp	      1071	ref-filter.c	FUNCTION_43
0x40031fc	          0x4889e5	                            mov rbp, rsp	      1071	ref-filter.c	FUNCTION_43
0x40031ff	        0x4883ec40	                           sub rsp, 0x40	      1071	ref-filter.c	FUNCTION_43
0x4003203	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1071	ref-filter.c	FUNCTION_43
0x4003207	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1071	ref-filter.c	FUNCTION_43
0x400320b	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1071	ref-filter.c	FUNCTION_43
0x400320f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1071	ref-filter.c	FUNCTION_43
0x4003213	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1071	ref-filter.c	FUNCTION_43
0x4003217	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1071	ref-filter.c	FUNCTION_43
0x400321b	            0xeb2d	                           jmp 0x400324a	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x400321d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x4003221	      0xbe0a000000	                            mov esi, 0xa	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x4003226	          0x4889c7	                            mov rdi, rax	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x4003229	      0xe800000000	                          call 0x400322e	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x400322e	        0x488945f8	                mov qword [rbp - 8], rax	      1075	ref-filter.c	FUNCTION_43	WHILE_1
0x4003232	        0x488b45f8	                mov rax, qword [rbp - 8]	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x4003236	           0xfb600	                   movzx eax, byte [rax]	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x4003239	            0x84c0	                             test al, al	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x400323b	            0x7405	                            je 0x4003242	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x400323d	      0x488345f801	                  add qword [rbp - 8], 1	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x4003242	        0x488b45f8	                mov rax, qword [rbp - 8]	      1078	ref-filter.c	FUNCTION_43	WHILE_1
0x4003246	        0x488945e8	             mov qword [rbp - 0x18], rax	      1078	ref-filter.c	FUNCTION_43	WHILE_1
0x400324a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x400324e	           0xfb600	                   movzx eax, byte [rax]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x4003251	            0x84c0	                             test al, al	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x4003253	            0x7412	                            je 0x4003267	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x4003255	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x4003259	           0xfb600	                   movzx eax, byte [rax]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x400325c	            0x3c0a	                             cmp al, 0xa	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x400325e	            0x75bd	                           jne 0x400321d	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x4003260	            0xeb05	                           jmp 0x4003267	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4003262	      0x488345e801	               add qword [rbp - 0x18], 1	      1082	ref-filter.c	FUNCTION_43	WHILE_2
0x4003267	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x400326b	           0xfb600	                   movzx eax, byte [rax]	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x400326e	            0x3c0a	                             cmp al, 0xa	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4003270	            0x74f0	                            je 0x4003262	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x4003272	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003276	          0x4889c7	                            mov rdi, rax	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003279	      0xe800000000	                          call 0x400327e	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400327e	          0x4889c2	                            mov rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003281	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003285	          0x4889d6	                            mov rsi, rdx	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003288	          0x4889c7	                            mov rdi, rax	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400328b	      0xe800000000	                          call 0x4003290	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003290	          0x4889c2	                            mov rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x4003297	          0x4801c2	                            add rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400329a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x400329e	          0x488910	                    mov qword [rax], rdx	      1085	ref-filter.c	FUNCTION_43	CALL_2
0x40032a1	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032a5	          0x488b00	                    mov rax, qword [rax]	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032a8	          0x4889c7	                            mov rdi, rax	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032ab	      0xe800000000	                          call 0x40032b0	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032b0	          0x4889c2	                            mov rdx, rax	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032b3	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032b7	          0x488910	                    mov qword [rax], rdx	      1086	ref-filter.c	FUNCTION_43	CALL_3
0x40032ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	ref-filter.c	FUNCTION_43
0x40032be	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1089	ref-filter.c	FUNCTION_43
0x40032c2	          0x488910	                    mov qword [rax], rdx	      1089	ref-filter.c	FUNCTION_43
0x40032c5	            0xeb2d	                           jmp 0x40032f4	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x40032c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40032cb	      0xbe0a000000	                            mov esi, 0xa	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40032d0	          0x4889c7	                            mov rdi, rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40032d3	      0xe800000000	                          call 0x40032d8	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40032d8	        0x488945f8	                mov qword [rbp - 8], rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3
0x40032dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x40032e0	           0xfb600	                   movzx eax, byte [rax]	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x40032e3	            0x84c0	                             test al, al	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x40032e5	            0x7405	                            je 0x40032ec	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x40032e7	      0x488345f801	                  add qword [rbp - 8], 1	      1094	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x40032ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1095	ref-filter.c	FUNCTION_43	WHILE_3
0x40032f0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1095	ref-filter.c	FUNCTION_43	WHILE_3
0x40032f4	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x40032f8	          0x488b00	                    mov rax, qword [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x40032fb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x40032ff	            0x7616	                           jbe 0x4003317	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003305	           0xfb600	                   movzx eax, byte [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003308	            0x84c0	                             test al, al	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x400330a	            0x740b	                            je 0x4003317	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x400330c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003310	           0xfb600	                   movzx eax, byte [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003313	            0x3c0a	                             cmp al, 0xa	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003315	            0x75b0	                           jne 0x40032c7	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x4003317	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1097	ref-filter.c	FUNCTION_43
0x400331b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1097	ref-filter.c	FUNCTION_43
0x400331f	          0x488b00	                    mov rax, qword [rax]	      1097	ref-filter.c	FUNCTION_43
0x4003322	          0x4829c2	                            sub rdx, rax	      1097	ref-filter.c	FUNCTION_43
0x4003325	          0x4889d0	                            mov rax, rdx	      1097	ref-filter.c	FUNCTION_43
0x4003328	          0x4889c2	                            mov rdx, rax	      1097	ref-filter.c	FUNCTION_43
0x400332b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1097	ref-filter.c	FUNCTION_43
0x400332f	          0x488910	                    mov qword [rax], rdx	      1097	ref-filter.c	FUNCTION_43
0x4003332	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003336	          0x488b00	                    mov rax, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003339	          0x4885c0	                           test rax, rax	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400333c	            0x7435	                            je 0x4003373	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400333e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003342	          0x488b10	                    mov rdx, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003345	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003349	          0x488b00	                    mov rax, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400334c	        0x4883e801	                              sub rax, 1	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003350	          0x4801d0	                            add rax, rdx	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003353	           0xfb600	                   movzx eax, byte [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003356	            0x3c0a	                             cmp al, 0xa	      1099	ref-filter.c	FUNCTION_43	IF_3
0x4003358	            0x7519	                           jne 0x4003373	      1099	ref-filter.c	FUNCTION_43	IF_3
0x400335a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x400335e	          0x488b00	                    mov rax, qword [rax]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x4003361	        0x488d50ff	                      lea rdx, [rax - 1]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x4003365	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x4003369	          0x488910	                    mov qword [rax], rdx	      1100	ref-filter.c	FUNCTION_43	IF_3
0x400336c	            0xeb05	                           jmp 0x4003373	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x400336e	      0x488345e801	               add qword [rbp - 0x18], 1	      1104	ref-filter.c	FUNCTION_43	WHILE_4
0x4003373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x4003377	           0xfb600	                   movzx eax, byte [rax]	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x400337a	            0x3c0a	                             cmp al, 0xa	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x400337c	            0x74f0	                            je 0x400336e	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x400337e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1105	ref-filter.c	FUNCTION_43
0x4003382	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1105	ref-filter.c	FUNCTION_43
0x4003386	          0x488910	                    mov qword [rax], rdx	      1105	ref-filter.c	FUNCTION_43
0x4003389	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x400338d	          0x4889c7	                            mov rdi, rax	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x4003390	      0xe800000000	                          call 0x4003395	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x4003395	          0x4889c2	                            mov rdx, rax	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x4003398	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x400339c	          0x488910	                    mov qword [rax], rdx	      1106	ref-filter.c	FUNCTION_43	CALL_4
0x400339f	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1107	ref-filter.c	FUNCTION_43
0x40033a3	          0x488b00	                    mov rax, qword [rax]	      1107	ref-filter.c	FUNCTION_43
0x40033a6	          0x4889c2	                            mov rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x40033a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1107	ref-filter.c	FUNCTION_43
0x40033ad	          0x4829c2	                            sub rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x40033b0	          0x4889d0	                            mov rax, rdx	      1107	ref-filter.c	FUNCTION_43
0x40033b3	          0x4889c2	                            mov rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x40033b6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1107	ref-filter.c	FUNCTION_43
0x40033ba	          0x488910	                    mov qword [rax], rdx	      1107	ref-filter.c	FUNCTION_43
0x40033bd	              0x90	                                     nop	      1108	ref-filter.c	FUNCTION_43
0x40033be	              0xc9	                                   leave	      1108	ref-filter.c	FUNCTION_43
0x40033bf	              0xc3	                                     ret	      1108	ref-filter.c	FUNCTION_43
grab_common_values	WHILE,0:FOR,1:CALL,5:DO,0:functions,0:SWITCH,0:IF,5:ELSE,2	99
0x40025ce	              0x55	                                push rbp	       834	ref-filter.c	FUNCTION_33
0x40025cf	          0x4889e5	                            mov rbp, rsp	       834	ref-filter.c	FUNCTION_33
0x40025d2	        0x4883ec50	                           sub rsp, 0x50	       834	ref-filter.c	FUNCTION_33
0x40025d6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       834	ref-filter.c	FUNCTION_33
0x40025da	          0x8975d4	             mov dword [rbp - 0x2c], esi	       834	ref-filter.c	FUNCTION_33
0x40025dd	        0x488955c8	             mov qword [rbp - 0x38], rdx	       834	ref-filter.c	FUNCTION_33
0x40025e1	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       834	ref-filter.c	FUNCTION_33
0x40025e5	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       834	ref-filter.c	FUNCTION_33
0x40025e9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40025f0	      0xe922010000	                           jmp 0x4002717	       837	ref-filter.c	FUNCTION_33	FOR_1
0x40025f5	    0x488b0d000000	            mov rcx, qword [0x040025fc] 	       838	ref-filter.c	FUNCTION_33	FOR_1
0x40025fc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x40025ff	          0x4863d0	                         movsxd rdx, eax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002602	          0x4889d0	                            mov rax, rdx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002605	          0x4801c0	                            add rax, rax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002608	          0x4801d0	                            add rax, rdx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x400260b	        0x48c1e005	                              shl rax, 5	       838	ref-filter.c	FUNCTION_33	FOR_1
0x400260f	          0x4801c8	                            add rax, rcx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002612	          0x488b00	                    mov rax, qword [rax]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002615	        0x488945f0	             mov qword [rbp - 0x10], rax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002619	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       839	ref-filter.c	FUNCTION_33	FOR_1
0x400261c	            0x4898	                                    cdqe	       839	ref-filter.c	FUNCTION_33	FOR_1
0x400261e	        0x48c1e005	                              shl rax, 5	       839	ref-filter.c	FUNCTION_33	FOR_1
0x4002622	          0x4889c2	                            mov rdx, rax	       839	ref-filter.c	FUNCTION_33	FOR_1
0x4002625	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	ref-filter.c	FUNCTION_33	FOR_1
0x4002629	          0x4801d0	                            add rax, rdx	       839	ref-filter.c	FUNCTION_33	FOR_1
0x400262c	        0x488945f8	                mov qword [rbp - 8], rax	       839	ref-filter.c	FUNCTION_33	FOR_1
0x4002630	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002634	           0xf95c2	                                setne dl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002637	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400263b	           0xfb600	                   movzx eax, byte [rax]	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400263e	            0x3c2a	                            cmp al, 0x2a	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002640	           0xf94c0	                                 sete al	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002643	            0x31d0	                            xor eax, edx	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002645	            0x84c0	                             test al, al	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002647	     0xf85c5000000	                           jne 0x4002712	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400264d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       842	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4002651	            0x7405	                            je 0x4002658	       842	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4002653	      0x488345f001	               add qword [rbp - 0x10], 1	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x4002658	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400265c	      0xbe00000000	                              mov esi, 0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4002661	          0x4889c7	                            mov rdi, rax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4002664	      0xe800000000	                          call 0x4002669	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x4002669	            0x85c0	                           test eax, eax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400266b	            0x7525	                           jne 0x4002692	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x400266d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002671	           0xfb600	                   movzx eax, byte [rax]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002674	            0xd0e8	                               shr al, 1	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002676	          0x83e007	                              and eax, 7	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002679	           0xfb6c0	                           movzx eax, al	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400267c	            0x89c7	                            mov edi, eax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400267e	      0xe800000000	                          call 0x4002683	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002683	          0x4889c2	                            mov rdx, rax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002686	        0x488b45f8	                mov rax, qword [rbp - 8]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400268a	          0x488910	                    mov qword [rax], rdx	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x400268d	      0xe981000000	                           jmp 0x4002713	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x4002692	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x4002696	      0xbe00000000	                              mov esi, 0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400269b	          0x4889c7	                            mov rdi, rax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x400269e	      0xe800000000	                          call 0x40026a3	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40026a3	            0x85c0	                           test eax, eax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40026a5	            0x752e	                           jne 0x40026d5	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40026a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40026ab	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40026af	        0x48895010	             mov qword [rax + 0x10], rdx	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40026b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026b7	          0x4889c6	                            mov rsi, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026ba	      0xbf00000000	                              mov edi, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026bf	      0xb800000000	                              mov eax, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026c4	      0xe800000000	                          call 0x40026c9	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026c9	          0x4889c2	                            mov rdx, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026d0	          0x488910	                    mov qword [rax], rdx	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026d3	            0xeb3e	                           jmp 0x4002713	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40026d5	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026d9	            0x7438	                            je 0x4002713	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026db	    0x488b0d000000	            mov rcx, qword [0x040026e2] 	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026e5	          0x4863d0	                         movsxd rdx, eax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026e8	          0x4889d0	                            mov rax, rdx	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026eb	          0x4801c0	                            add rax, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026ee	          0x4801d0	                            add rax, rdx	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026f1	        0x48c1e005	                              shl rax, 5	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026f5	          0x4801c1	                            add rcx, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40026fc	        0x488d7004	                      lea rsi, [rax + 4]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002700	        0x488b55f8	                mov rdx, qword [rbp - 8]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002704	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002708	          0x4889c7	                            mov rdi, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400270b	      0xe8cffdffff	                call sym.grab_objectname	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002710	            0xeb01	                           jmp 0x4002713	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002712	              0x90	                                     nop	       841	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002713	        0x8345ec01	               add dword [rbp - 0x14], 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002717	    0x8b0500000000	            mov eax, dword [0x0400271d] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400271d	          0x3945ec	            cmp dword [rbp - 0x14], eax 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002720	     0xf8ccffeffff	                            jl 0x40025f5	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002726	              0x90	                                     nop	       853	ref-filter.c	FUNCTION_33
0x4002727	              0xc9	                                   leave	       853	ref-filter.c	FUNCTION_33
0x4002728	              0xc3	                                     ret	       853	ref-filter.c	FUNCTION_33
commit_contains	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	29
0x40051b9	              0x55	                                push rbp	      1739	ref-filter.c	FUNCTION_63
0x40051ba	          0x4889e5	                            mov rbp, rsp	      1739	ref-filter.c	FUNCTION_63
0x40051bd	        0x4883ec20	                           sub rsp, 0x20	      1739	ref-filter.c	FUNCTION_63
0x40051c1	        0x48897df8	                mov qword [rbp - 8], rdi	      1739	ref-filter.c	FUNCTION_63
0x40051c5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1739	ref-filter.c	FUNCTION_63
0x40051c9	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1739	ref-filter.c	FUNCTION_63
0x40051cd	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1739	ref-filter.c	FUNCTION_63
0x40051d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40051d5	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40051d9	          0x83e001	                              and eax, 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40051dc	            0x84c0	                             test al, al	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40051de	            0x7422	                            je 0x4005202	      1740	ref-filter.c	FUNCTION_63	IF_1
0x40051e0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051e4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051ec	          0x4889ce	                            mov rsi, rcx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051ef	          0x4889c7	                            mov rdi, rax	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051f2	      0xe832feffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051f7	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051fa	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x40051fd	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4005200	            0xeb13	                           jmp 0x4005215	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4005202	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4005206	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x400520a	          0x4889d6	                            mov rsi, rdx	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x400520d	          0x4889c7	                            mov rdi, rax	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4005210	      0xe800000000	                          call 0x4005215	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4005215	              0xc9	                                   leave	      1743	ref-filter.c	FUNCTION_63
0x4005216	              0xc3	                                     ret	      1743	ref-filter.c	FUNCTION_63
for_each_fullref_in_pattern	WHILE,0:FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,3:ELSE,0	74
0x40054cb	              0x55	                                push rbp	      1842	ref-filter.c	FUNCTION_68
0x40054cc	          0x4889e5	                            mov rbp, rsp	      1842	ref-filter.c	FUNCTION_68
0x40054cf	        0x4883ec50	                           sub rsp, 0x50	      1842	ref-filter.c	FUNCTION_68
0x40054d3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1842	ref-filter.c	FUNCTION_68
0x40054d7	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1842	ref-filter.c	FUNCTION_68
0x40054db	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1842	ref-filter.c	FUNCTION_68
0x40054df	          0x894db4	             mov dword [rbp - 0x4c], ecx	      1842	ref-filter.c	FUNCTION_68
0x40054e2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1842	ref-filter.c	FUNCTION_68
0x40054eb	        0x488945f8	                mov qword [rbp - 8], rax	      1842	ref-filter.c	FUNCTION_68
0x40054ef	            0x31c0	                            xor eax, eax	      1842	ref-filter.c	FUNCTION_68
0x40054f1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1843	ref-filter.c	FUNCTION_68
0x40054f9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1843	ref-filter.c	FUNCTION_68
0x4005501	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1843	ref-filter.c	FUNCTION_68
0x4005509	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1846	ref-filter.c	FUNCTION_68	IF_1
0x400550d	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4005511	          0x83e002	                              and eax, 2	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4005514	            0x84c0	                             test al, al	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4005516	            0x751d	                           jne 0x4005535	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4005518	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x400551b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x400551f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x4005523	          0x4889c6	                            mov rsi, rax	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x4005526	      0xbf00000000	                              mov edi, 0	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x400552b	      0xe800000000	                          call 0x4005530	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x4005530	      0xe998000000	                           jmp 0x40055cd	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x4005535	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4005539	          0x488b00	                    mov rax, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x400553c	          0x488b00	                    mov rax, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x400553f	          0x4885c0	                           test rax, rax	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4005542	            0x751a	                           jne 0x400555e	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4005544	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x4005547	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x400554b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x400554f	          0x4889c6	                            mov rsi, rax	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x4005552	      0xbf00000000	                              mov edi, 0	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x4005557	      0xe800000000	                          call 0x400555c	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x400555c	            0xeb6f	                           jmp 0x40055cd	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x400555e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4005562	          0x488b00	                    mov rax, qword [rax]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4005565	        0x4883c008	                              add rax, 8	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4005569	          0x488b00	                    mov rax, qword [rax]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x400556c	          0x4885c0	                           test rax, rax	      1860	ref-filter.c	FUNCTION_68	IF_3
0x400556f	            0x741a	                            je 0x400558b	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4005571	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4005574	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4005578	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x400557c	          0x4889c6	                            mov rsi, rax	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x400557f	      0xbf00000000	                              mov edi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4005584	      0xe800000000	                          call 0x4005589	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4005589	            0xeb42	                           jmp 0x40055cd	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x400558b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x400558f	          0x488b00	                    mov rax, qword [rax]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x4005592	          0x488b10	                    mov rdx, qword [rax]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x4005595	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x4005599	          0x4889d6	                            mov rsi, rdx	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x400559c	          0x4889c7	                            mov rdi, rax	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x400559f	      0xe8b9feffff	            call sym.find_longest_prefix	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x40055a4	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055ab	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055af	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055b3	          0x4889c7	                            mov rdi, rax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055b6	      0xe800000000	                          call 0x40055bb	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055bb	          0x8945dc	             mov dword [rbp - 0x24], eax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x40055be	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x40055c2	          0x4889c7	                            mov rdi, rax	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x40055c5	      0xe800000000	                          call 0x40055ca	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x40055ca	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1875	ref-filter.c	FUNCTION_68
0x40055cd	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1876	ref-filter.c	FUNCTION_68
0x40055d1	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1876	ref-filter.c	FUNCTION_68
0x40055da	            0x7405	                            je 0x40055e1	      1876	ref-filter.c	FUNCTION_68
0x40055dc	      0xe800000000	                          call 0x40055e1	      1876	ref-filter.c	FUNCTION_68
0x40055e1	              0xc9	                                   leave	      1876	ref-filter.c	FUNCTION_68
0x40055e2	              0xc3	                                     ret	      1876	ref-filter.c	FUNCTION_68
append_lines	WHILE,0:FOR,1:CALL,3:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	70
0x40033c0	              0x55	                                push rbp	      1115	ref-filter.c	FUNCTION_44
0x40033c1	          0x4889e5	                            mov rbp, rsp	      1115	ref-filter.c	FUNCTION_44
0x40033c4	        0x4883ec40	                           sub rsp, 0x40	      1115	ref-filter.c	FUNCTION_44
0x40033c8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1115	ref-filter.c	FUNCTION_44
0x40033cc	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1115	ref-filter.c	FUNCTION_44
0x40033d0	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1115	ref-filter.c	FUNCTION_44
0x40033d4	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1115	ref-filter.c	FUNCTION_44
0x40033d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	ref-filter.c	FUNCTION_44
0x40033db	        0x488945e8	             mov qword [rbp - 0x18], rax	      1120	ref-filter.c	FUNCTION_44
0x40033df	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40033e6	      0xe9a8000000	                           jmp 0x4003493	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40033eb	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x40033ef	            0x7411	                            je 0x4003402	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x40033f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x40033f5	      0xbe00000000	                              mov esi, 0	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x40033fa	          0x4889c7	                            mov rdi, rax	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x40033fd	      0xe866d0ffff	                  call sym.strbuf_addstr	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x4003402	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003406	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x400340a	          0x4829c2	                            sub rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x400340d	          0x4889d0	                            mov rax, rdx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003410	          0x4889c2	                            mov rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003413	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003417	          0x4829d0	                            sub rax, rdx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x400341a	          0x4889c2	                            mov rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x400341d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003421	      0xbe0a000000	                            mov esi, 0xa	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003426	          0x4889c7	                            mov rdi, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003429	      0xe800000000	                          call 0x400342e	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x400342e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x4003432	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003437	            0x7410	                            je 0x4003449	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003439	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x400343d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003441	          0x4829c2	                            sub rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003444	          0x4889d0	                            mov rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003447	            0xeb18	                           jmp 0x4003461	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003449	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x400344d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003451	          0x4829c2	                            sub rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003454	          0x4889d0	                            mov rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003457	          0x4889c2	                            mov rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x400345a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x400345e	          0x4829d0	                            sub rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003461	        0x488945f8	                mov qword [rbp - 8], rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x4003465	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4003469	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x400346d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4003471	          0x4889ce	                            mov rsi, rcx	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4003474	          0x4889c7	                            mov rdi, rax	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x4003477	      0xe800000000	                          call 0x400347c	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x400347c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1128	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x4003481	            0x742f	                            je 0x40034b2	      1128	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x4003483	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x4003487	        0x4883c001	                              add rax, 1	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x400348b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x400348f	        0x8345e401	               add dword [rbp - 0x1c], 1	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4003493	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4003496	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x4003499	            0x7d18	                           jge 0x40034b3	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x400349b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x400349f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40034a3	          0x4801d0	                            add rax, rdx	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40034a6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40034aa	     0xf873bffffff	                            ja 0x40033eb	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x40034b0	            0xeb01	                           jmp 0x40034b3	      1132	ref-filter.c	FUNCTION_44
0x40034b2	              0x90	                                     nop	      1129	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x40034b3	              0x90	                                     nop	      1132	ref-filter.c	FUNCTION_44
0x40034b4	              0xc9	                                   leave	      1132	ref-filter.c	FUNCTION_44
0x40034b5	              0xc3	                                     ret	      1132	ref-filter.c	FUNCTION_44
get_head_description	WHILE,0:FOR,0:CALL,18:DO,0:functions,0:SWITCH,0:IF,5:ELSE,5	120
0x4003f89	              0x55	                                push rbp	      1379	ref-filter.c	FUNCTION_53
0x4003f8a	          0x4889e5	                            mov rbp, rsp	      1379	ref-filter.c	FUNCTION_53
0x4003f8d	              0x53	                                push rbx	      1379	ref-filter.c	FUNCTION_53
0x4003f8e	    0x4881ecb80000	                           sub rsp, 0xb8	      1379	ref-filter.c	FUNCTION_53
0x4003f95	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	ref-filter.c	FUNCTION_53
0x4003f9e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1379	ref-filter.c	FUNCTION_53
0x4003fa2	            0x31c0	                            xor eax, eax	      1379	ref-filter.c	FUNCTION_53
0x4003fa4	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1380	ref-filter.c	FUNCTION_53
0x4003faf	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1380	ref-filter.c	FUNCTION_53
0x4003fba	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1380	ref-filter.c	FUNCTION_53
0x4003fc5	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x4003fcc	      0xba80000000	                           mov edx, 0x80	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x4003fd1	      0xbe00000000	                              mov esi, 0	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x4003fd6	          0x4889c7	                            mov rdi, rax	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x4003fd9	      0xe800000000	                          call 0x4003fde	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x4003fde	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003fe5	      0xbe01000000	                              mov esi, 1	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003fea	          0x4889c7	                            mov rdi, rax	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003fed	      0xe800000000	                          call 0x4003ff2	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003ff2	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003ff8	            0x85c0	                           test eax, eax	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003ffa	            0x750a	                           jne 0x4004006	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003ffc	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1385	ref-filter.c	FUNCTION_53	IF_1
0x4004002	            0x85c0	                           test eax, eax	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4004004	            0x7469	                            je 0x400406f	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4004006	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400400a	          0x4885c0	                           test rax, rax	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400400d	            0x7430	                            je 0x400403f	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400400f	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004013	      0xbf00000000	                              mov edi, 0	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004018	      0xe880c4ffff	                               call sym.	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400401d	          0x4889c1	                            mov rcx, rax	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004020	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004027	          0x4889da	                            mov rdx, rbx	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400402a	          0x4889ce	                            mov rsi, rcx	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400402d	          0x4889c7	                            mov rdi, rax	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004030	      0xb800000000	                              mov eax, 0	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x4004035	      0xe800000000	                          call 0x400403a	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x400403a	      0xe9f3000000	                           jmp 0x4004132	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400403f	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004043	      0xbf00000000	                              mov edi, 0	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004048	      0xe850c4ffff	                               call sym.	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400404d	          0x4889c1	                            mov rcx, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004050	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004057	          0x4889da	                            mov rdx, rbx	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400405a	          0x4889ce	                            mov rsi, rcx	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400405d	          0x4889c7	                            mov rdi, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004060	      0xb800000000	                              mov eax, 0	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4004065	      0xe800000000	                          call 0x400406a	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400406a	      0xe9c3000000	                           jmp 0x4004132	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x400406f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4004075	            0x85c0	                           test eax, eax	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4004077	            0x7430	                            je 0x40040a9	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4004079	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x400407d	      0xbf00000000	                              mov edi, 0	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4004082	      0xe816c4ffff	                               call sym.	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4004087	          0x4889c1	                            mov rcx, rax	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x400408a	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4004091	          0x4889da	                            mov rdx, rbx	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4004094	          0x4889ce	                            mov rsi, rcx	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4004097	          0x4889c7	                            mov rdi, rax	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x400409a	      0xb800000000	                              mov eax, 0	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x400409f	      0xe800000000	                          call 0x40040a4	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40040a4	      0xe989000000	                           jmp 0x4004132	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x40040a9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40040ad	          0x4885c0	                           test rax, rax	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40040b0	            0x7461	                            je 0x4004113	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x40040b2	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x40040b5	            0x85c0	                           test eax, eax	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x40040b7	            0x742d	                            je 0x40040e6	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x40040b9	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040bd	      0xbf00000000	                              mov edi, 0	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040c2	      0xe8d6c3ffff	                               call sym.	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040c7	          0x4889c1	                            mov rcx, rax	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040ca	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040d1	          0x4889da	                            mov rdx, rbx	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040d4	          0x4889ce	                            mov rsi, rcx	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040d7	          0x4889c7	                            mov rdi, rax	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040da	      0xb800000000	                              mov eax, 0	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040df	      0xe800000000	                          call 0x40040e4	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040e4	            0xeb4c	                           jmp 0x4004132	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40040e6	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40040ea	      0xbf00000000	                              mov edi, 0	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40040ef	      0xe8a9c3ffff	                               call sym.	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40040f4	          0x4889c1	                            mov rcx, rax	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40040f7	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40040fe	          0x4889da	                            mov rdx, rbx	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4004101	          0x4889ce	                            mov rsi, rcx	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4004104	          0x4889c7	                            mov rdi, rax	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4004107	      0xb800000000	                              mov eax, 0	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x400410c	      0xe800000000	                          call 0x4004111	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4004111	            0xeb1f	                           jmp 0x4004132	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x4004113	      0xbf00000000	                              mov edi, 0	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x4004118	      0xe880c3ffff	                               call sym.	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x400411d	          0x4889c2	                            mov rdx, rax	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x4004120	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x4004127	          0x4889d6	                            mov rsi, rdx	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x400412a	          0x4889c7	                            mov rdi, rax	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x400412d	      0xe836c3ffff	                  call sym.strbuf_addstr	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x4004132	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4004136	          0x4889c7	                            mov rdi, rax	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4004139	      0xe800000000	                          call 0x400413e	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x400413e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4004142	          0x4889c7	                            mov rdi, rax	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4004145	      0xe800000000	                          call 0x400414a	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x400414a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x400414e	          0x4889c7	                            mov rdi, rax	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4004151	      0xe800000000	                          call 0x4004156	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4004156	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x400415d	      0xbe00000000	                              mov esi, 0	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4004162	          0x4889c7	                            mov rdi, rax	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4004165	      0xe800000000	                          call 0x400416a	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x400416a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1417	ref-filter.c	FUNCTION_53
0x400416e	    0x644833142528	                xor rdx, qword fs:[0x28]	      1417	ref-filter.c	FUNCTION_53
0x4004177	            0x7405	                            je 0x400417e	      1417	ref-filter.c	FUNCTION_53
0x4004179	      0xe800000000	                          call 0x400417e	      1417	ref-filter.c	FUNCTION_53
0x400417e	    0x4881c4b80000	                           add rsp, 0xb8	      1417	ref-filter.c	FUNCTION_53
0x4004185	              0x5b	                                 pop rbx	      1417	ref-filter.c	FUNCTION_53
0x4004186	              0x5d	                                 pop rbp	      1417	ref-filter.c	FUNCTION_53
0x4004187	              0xc3	                                     ret	      1417	ref-filter.c	FUNCTION_53
copy_line	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	20
0x4002b63	              0x55	                                push rbp	       930	ref-filter.c	FUNCTION_37
0x4002b64	          0x4889e5	                            mov rbp, rsp	       930	ref-filter.c	FUNCTION_37
0x4002b67	        0x4883ec20	                           sub rsp, 0x20	       930	ref-filter.c	FUNCTION_37
0x4002b6b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       930	ref-filter.c	FUNCTION_37
0x4002b6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       931	ref-filter.c	FUNCTION_37
0x4002b73	      0xbe0a000000	                            mov esi, 0xa	       931	ref-filter.c	FUNCTION_37
0x4002b78	          0x4889c7	                            mov rdi, rax	       931	ref-filter.c	FUNCTION_37
0x4002b7b	      0xe800000000	                          call 0x4002b80	       931	ref-filter.c	FUNCTION_37
0x4002b80	        0x488945f8	                mov qword [rbp - 8], rax	       931	ref-filter.c	FUNCTION_37
0x4002b84	        0x488b55f8	                mov rdx, qword [rbp - 8]	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b8c	          0x4829c2	                            sub rdx, rax	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b8f	          0x4889d0	                            mov rax, rdx	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b92	          0x4889c2	                            mov rdx, rax	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b99	          0x4889d6	                            mov rsi, rdx	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b9c	          0x4889c7	                            mov rdi, rax	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002b9f	      0xe800000000	                          call 0x4002ba4	       932	ref-filter.c	FUNCTION_37	CALL_1
0x4002ba4	              0xc9	                                   leave	       933	ref-filter.c	FUNCTION_37
0x4002ba5	              0xc3	                                     ret	       933	ref-filter.c	FUNCTION_37
grab_commit_values	WHILE,0:FOR,2:CALL,12:DO,0:functions,0:SWITCH,0:IF,6:ELSE,2	142
0x400288d	              0x55	                                push rbp	       879	ref-filter.c	FUNCTION_35
0x400288e	          0x4889e5	                            mov rbp, rsp	       879	ref-filter.c	FUNCTION_35
0x4002891	        0x4883c480	             add rsp, 0xffffffffffffff80	       879	ref-filter.c	FUNCTION_35
0x4002895	        0x48897da8	             mov qword [rbp - 0x58], rdi	       879	ref-filter.c	FUNCTION_35
0x4002899	          0x8975a4	             mov dword [rbp - 0x5c], esi	       879	ref-filter.c	FUNCTION_35
0x400289c	        0x48895598	             mov qword [rbp - 0x68], rdx	       879	ref-filter.c	FUNCTION_35
0x40028a0	        0x48894d90	             mov qword [rbp - 0x70], rcx	       879	ref-filter.c	FUNCTION_35
0x40028a4	        0x4c894588	              mov qword [rbp - 0x78], r8	       879	ref-filter.c	FUNCTION_35
0x40028a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       879	ref-filter.c	FUNCTION_35
0x40028b1	        0x488945f8	                mov qword [rbp - 8], rax	       879	ref-filter.c	FUNCTION_35
0x40028b5	            0x31c0	                            xor eax, eax	       879	ref-filter.c	FUNCTION_35
0x40028b7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       881	ref-filter.c	FUNCTION_35
0x40028bb	        0x488945c8	             mov qword [rbp - 0x38], rax	       881	ref-filter.c	FUNCTION_35
0x40028bf	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40028c6	      0xe9bb010000	                           jmp 0x4002a86	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40028cb	    0x488b0d000000	            mov rcx, qword [0x040028d2] 	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028d2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028d5	          0x4863d0	                         movsxd rdx, eax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028d8	          0x4889d0	                            mov rax, rdx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028db	          0x4801c0	                            add rax, rax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028de	          0x4801d0	                            add rax, rdx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028e1	        0x48c1e005	                              shl rax, 5	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028e5	          0x4801c8	                            add rax, rcx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028e8	          0x488b00	                    mov rax, qword [rax]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028eb	        0x488945b8	             mov qword [rbp - 0x48], rax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40028ef	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       885	ref-filter.c	FUNCTION_35	FOR_1
0x40028f2	            0x4898	                                    cdqe	       885	ref-filter.c	FUNCTION_35	FOR_1
0x40028f4	        0x48c1e005	                              shl rax, 5	       885	ref-filter.c	FUNCTION_35	FOR_1
0x40028f8	          0x4889c2	                            mov rdx, rax	       885	ref-filter.c	FUNCTION_35	FOR_1
0x40028fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       885	ref-filter.c	FUNCTION_35	FOR_1
0x40028ff	          0x4801d0	                            add rax, rdx	       885	ref-filter.c	FUNCTION_35	FOR_1
0x4002902	        0x488945d0	             mov qword [rbp - 0x30], rax	       885	ref-filter.c	FUNCTION_35	FOR_1
0x4002906	        0x837da400	               cmp dword [rbp - 0x5c], 0	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x400290a	           0xf95c2	                                setne dl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x400290d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002911	           0xfb600	                   movzx eax, byte [rax]	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002914	            0x3c2a	                            cmp al, 0x2a	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002916	           0xf94c0	                                 sete al	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002919	            0x31d0	                            xor eax, edx	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x400291b	            0x84c0	                             test al, al	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x400291d	     0xf855e010000	                           jne 0x4002a81	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002923	        0x837da400	               cmp dword [rbp - 0x5c], 0	       888	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x4002927	            0x7405	                            je 0x400292e	       888	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x4002929	      0x488345b801	               add qword [rbp - 0x48], 1	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x400292e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4002932	      0xbe00000000	                              mov esi, 0	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4002937	          0x4889c7	                            mov rdi, rax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x400293a	      0xe800000000	                          call 0x400293f	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x400293f	            0x85c0	                           test eax, eax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4002941	            0x752b	                           jne 0x400296e	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x4002943	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002947	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400294a	      0xe800000000	                          call 0x400294f	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400294f	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002952	      0xe800000000	                          call 0x4002957	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002957	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400295a	      0xe800000000	                          call 0x400295f	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400295f	          0x4889c2	                            mov rdx, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002962	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002966	          0x488910	                    mov qword [rax], rdx	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002969	      0xe914010000	                           jmp 0x4002a82	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400296e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002972	      0xbe00000000	                              mov esi, 0	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002977	          0x4889c7	                            mov rdi, rax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400297a	      0xe800000000	                          call 0x400297f	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x400297f	            0x85c0	                           test eax, eax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002981	            0x7543	                           jne 0x40029c6	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x4002983	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002987	        0x488b4030	            mov rax, qword [rax + 0x30] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x400298b	          0x4889c7	                            mov rdi, rax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x400298e	      0xe800000000	                          call 0x4002993	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002993	            0x89c2	                            mov edx, eax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002995	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002999	        0x48895010	             mov qword [rax + 0x10], rdx	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x400299d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029a1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029a5	          0x4889c6	                            mov rsi, rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029a8	      0xbf00000000	                              mov edi, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029ad	      0xb800000000	                              mov eax, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029b2	      0xe800000000	                          call 0x40029b7	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029b7	          0x4889c2	                            mov rdx, rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029be	          0x488910	                    mov qword [rax], rdx	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029c1	      0xe9bc000000	                           jmp 0x4002a82	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x40029c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029ca	      0xbe00000000	                              mov esi, 0	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029cf	          0x4889c7	                            mov rdi, rax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029d2	      0xe800000000	                          call 0x40029d7	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029d7	            0x85c0	                           test eax, eax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029d9	     0xf85a3000000	                           jne 0x4002a82	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40029df	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40029e7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40029ef	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x40029f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40029fb	        0x488b4030	            mov rax, qword [rax + 0x30] 	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x40029ff	        0x488945c0	             mov qword [rbp - 0x40], rax	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a03	            0xeb58	                           jmp 0x4002a5d	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a05	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a09	          0x488b00	                    mov rax, qword [rax]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a0c	        0x488945d8	             mov qword [rbp - 0x28], rax	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002a14	        0x488b4030	            mov rax, qword [rax + 0x30] 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002a18	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002a1c	            0x7411	                            je 0x4002a2f	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002a1e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x4002a22	      0xbe20000000	                           mov esi, 0x20	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x4002a27	          0x4889c7	                            mov rdi, rax	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x4002a2a	      0xe8cbd9ffff	                   call sym.strbuf_addch	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x4002a2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a33	        0x4883c004	                              add rax, 4	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a37	          0x4889c7	                            mov rdi, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a3a	      0xe800000000	                          call 0x4002a3f	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a3f	          0x4889c2	                            mov rdx, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a42	        0x488d45e0	                   lea rax, [rbp - 0x20]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a46	          0x4889d6	                            mov rsi, rdx	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a49	          0x4889c7	                            mov rdi, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a4c	      0xe817daffff	                  call sym.strbuf_addstr	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002a51	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a55	        0x488b4008	                mov rax, qword [rax + 8]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a59	        0x488945c0	             mov qword [rbp - 0x40], rax	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a5d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a62	            0x75a1	                           jne 0x4002a05	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a64	        0x488d45e0	                   lea rax, [rbp - 0x20]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a68	      0xbe00000000	                              mov esi, 0	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a6d	          0x4889c7	                            mov rdi, rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a70	      0xe800000000	                          call 0x4002a75	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a75	          0x4889c2	                            mov rdx, rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a78	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a7c	          0x488910	                    mov qword [rax], rdx	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a7f	            0xeb01	                           jmp 0x4002a82	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002a81	              0x90	                                     nop	       887	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x4002a82	        0x8345b401	               add dword [rbp - 0x4c], 1	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002a86	    0x8b0500000000	            mov eax, dword [0x04002a8c] 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002a8c	          0x3945b4	            cmp dword [rbp - 0x4c], eax 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002a8f	     0xf8c36feffff	                            jl 0x40028cb	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002a95	              0x90	                                     nop	       909	ref-filter.c	FUNCTION_35
0x4002a96	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	ref-filter.c	FUNCTION_35
0x4002a9a	    0x644833042528	                xor rax, qword fs:[0x28]	       909	ref-filter.c	FUNCTION_35
0x4002aa3	            0x7405	                            je 0x4002aaa	       909	ref-filter.c	FUNCTION_35
0x4002aa5	      0xe800000000	                          call 0x4002aaa	       909	ref-filter.c	FUNCTION_35
0x4002aaa	              0xc9	                                   leave	       909	ref-filter.c	FUNCTION_35
0x4002aab	              0xc3	                                     ret	       909	ref-filter.c	FUNCTION_35
find_next	WHILE,1:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,3:ELSE,1	29
0x4002244	              0x55	                                push rbp	       746	ref-filter.c	FUNCTION_29
0x4002245	          0x4889e5	                            mov rbp, rsp	       746	ref-filter.c	FUNCTION_29
0x4002248	        0x48897df8	                mov qword [rbp - 8], rdi	       746	ref-filter.c	FUNCTION_29
0x400224c	            0xeb39	                           jmp 0x4002287	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400224e	        0x488b45f8	                mov rax, qword [rbp - 8]	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4002252	           0xfb600	                   movzx eax, byte [rax]	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4002255	            0x3c25	                            cmp al, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4002257	            0x7529	                           jne 0x4002282	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4002259	        0x488b45f8	                mov rax, qword [rbp - 8]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400225d	        0x4883c001	                              add rax, 1	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4002261	           0xfb600	                   movzx eax, byte [rax]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4002264	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4002266	            0x7506	                           jne 0x400226e	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4002268	        0x488b45f8	                mov rax, qword [rbp - 8]	       754	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400226c	            0xeb29	                           jmp 0x4002297	       754	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400226e	        0x488b45f8	                mov rax, qword [rbp - 8]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4002272	        0x4883c001	                              add rax, 1	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4002276	           0xfb600	                   movzx eax, byte [rax]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4002279	            0x3c25	                            cmp al, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400227b	            0x7505	                           jne 0x4002282	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400227d	      0x488345f801	                  add qword [rbp - 8], 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4002282	      0x488345f801	                  add qword [rbp - 8], 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4002287	        0x488b45f8	                mov rax, qword [rbp - 8]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400228b	           0xfb600	                   movzx eax, byte [rax]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400228e	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4002290	            0x75bc	                           jne 0x400224e	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4002292	      0xb800000000	                              mov eax, 0	       761	ref-filter.c	FUNCTION_29
0x4002297	              0x5d	                                 pop rbp	       762	ref-filter.c	FUNCTION_29
0x4002298	              0xc3	                                     ret	       762	ref-filter.c	FUNCTION_29
push_to_contains_stack	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	87
0x4004f20	              0x55	                                push rbp	      1690	ref-filter.c	FUNCTION_61
0x4004f21	          0x4889e5	                            mov rbp, rsp	      1690	ref-filter.c	FUNCTION_61
0x4004f24	        0x4883ec10	                           sub rsp, 0x10	      1690	ref-filter.c	FUNCTION_61
0x4004f28	        0x48897df8	                mov qword [rbp - 8], rdi	      1690	ref-filter.c	FUNCTION_61
0x4004f2c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1690	ref-filter.c	FUNCTION_61
0x4004f30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f34	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61
0x4004f36	          0x8d5001	                      lea edx, [rax + 1]	      1691	ref-filter.c	FUNCTION_61
0x4004f39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f3d	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61
0x4004f40	            0x39c2	                            cmp edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f42	     0xf8e93000000	                           jle 0x4004fdb	      1691	ref-filter.c	FUNCTION_61
0x4004f48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f4c	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61
0x4004f4f	          0x8d5010	                   lea edx, [rax + 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f52	            0x89d0	                            mov eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f54	             0x1c0	                            add eax, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f56	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f58	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f5a	          0xc1ea1f	                           shr edx, 0x1f	      1691	ref-filter.c	FUNCTION_61
0x4004f5d	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f5f	            0xd1f8	                              sar eax, 1	      1691	ref-filter.c	FUNCTION_61
0x4004f61	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f67	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61
0x4004f69	          0x83c001	                              add eax, 1	      1691	ref-filter.c	FUNCTION_61
0x4004f6c	            0x39c2	                            cmp edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f6e	            0x7d12	                           jge 0x4004f82	      1691	ref-filter.c	FUNCTION_61
0x4004f70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f74	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61
0x4004f76	          0x8d5001	                      lea edx, [rax + 1]	      1691	ref-filter.c	FUNCTION_61
0x4004f79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f7d	          0x895004	                mov dword [rax + 4], edx	      1691	ref-filter.c	FUNCTION_61
0x4004f80	            0xeb22	                           jmp 0x4004fa4	      1691	ref-filter.c	FUNCTION_61
0x4004f82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f86	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61
0x4004f89	          0x8d5010	                   lea edx, [rax + 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004f8c	            0x89d0	                            mov eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f8e	             0x1c0	                            add eax, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f90	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f92	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f94	          0xc1ea1f	                           shr edx, 0x1f	      1691	ref-filter.c	FUNCTION_61
0x4004f97	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4004f99	            0xd1f8	                              sar eax, 1	      1691	ref-filter.c	FUNCTION_61
0x4004f9b	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4004f9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004fa1	          0x895004	                mov dword [rax + 4], edx	      1691	ref-filter.c	FUNCTION_61
0x4004fa4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004fa8	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61
0x4004fab	            0x4898	                                    cdqe	      1691	ref-filter.c	FUNCTION_61
0x4004fad	          0x4889c6	                            mov rsi, rax	      1691	ref-filter.c	FUNCTION_61
0x4004fb0	      0xbf10000000	                           mov edi, 0x10	      1691	ref-filter.c	FUNCTION_61
0x4004fb5	      0xe82bb1ffff	                        call sym.st_mult	      1691	ref-filter.c	FUNCTION_61
0x4004fba	          0x4889c2	                            mov rdx, rax	      1691	ref-filter.c	FUNCTION_61
0x4004fbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004fc1	        0x488b4008	                mov rax, qword [rax + 8]	      1691	ref-filter.c	FUNCTION_61
0x4004fc5	          0x4889d6	                            mov rsi, rdx	      1691	ref-filter.c	FUNCTION_61
0x4004fc8	          0x4889c7	                            mov rdi, rax	      1691	ref-filter.c	FUNCTION_61
0x4004fcb	      0xe800000000	                          call 0x4004fd0	      1691	ref-filter.c	FUNCTION_61
0x4004fd0	          0x4889c2	                            mov rdx, rax	      1691	ref-filter.c	FUNCTION_61
0x4004fd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61
0x4004fd7	        0x48895008	                mov qword [rax + 8], rdx	      1691	ref-filter.c	FUNCTION_61
0x4004fdb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1692	ref-filter.c	FUNCTION_61
0x4004fdf	        0x488b5008	                mov rdx, qword [rax + 8]	      1692	ref-filter.c	FUNCTION_61
0x4004fe3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1692	ref-filter.c	FUNCTION_61
0x4004fe7	            0x8b00	                    mov eax, dword [rax]	      1692	ref-filter.c	FUNCTION_61
0x4004fe9	            0x4898	                                    cdqe	      1692	ref-filter.c	FUNCTION_61
0x4004feb	        0x48c1e004	                              shl rax, 4	      1692	ref-filter.c	FUNCTION_61
0x4004fef	          0x4801c2	                            add rdx, rax	      1692	ref-filter.c	FUNCTION_61
0x4004ff2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	ref-filter.c	FUNCTION_61
0x4004ff6	          0x488902	                    mov qword [rdx], rax	      1692	ref-filter.c	FUNCTION_61
0x4004ff9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x4004ffd	        0x488b7008	                mov rsi, qword [rax + 8]	      1693	ref-filter.c	FUNCTION_61
0x4005001	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x4005005	            0x8b00	                    mov eax, dword [rax]	      1693	ref-filter.c	FUNCTION_61
0x4005007	          0x8d4801	                      lea ecx, [rax + 1]	      1693	ref-filter.c	FUNCTION_61
0x400500a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x400500e	            0x890a	                    mov dword [rdx], ecx	      1693	ref-filter.c	FUNCTION_61
0x4005010	            0x4898	                                    cdqe	      1693	ref-filter.c	FUNCTION_61
0x4005012	        0x48c1e004	                              shl rax, 4	      1693	ref-filter.c	FUNCTION_61
0x4005016	        0x488d1406	                    lea rdx, [rsi + rax]	      1693	ref-filter.c	FUNCTION_61
0x400501a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1693	ref-filter.c	FUNCTION_61
0x400501e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x4005022	        0x48894208	                mov qword [rdx + 8], rax	      1693	ref-filter.c	FUNCTION_61
0x4005026	              0x90	                                     nop	      1694	ref-filter.c	FUNCTION_61
0x4005027	              0xc9	                                   leave	      1694	ref-filter.c	FUNCTION_61
0x4005028	              0xc3	                                     ret	      1694	ref-filter.c	FUNCTION_61
append_literal	WHILE,1:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,3:ELSE,1	56
0x4006332	              0x55	                                push rbp	      2201	ref-filter.c	FUNCTION_82
0x4006333	          0x4889e5	                            mov rbp, rsp	      2201	ref-filter.c	FUNCTION_82
0x4006336	        0x4883ec30	                           sub rsp, 0x30	      2201	ref-filter.c	FUNCTION_82
0x400633a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2201	ref-filter.c	FUNCTION_82
0x400633e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2201	ref-filter.c	FUNCTION_82
0x4006342	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2201	ref-filter.c	FUNCTION_82
0x4006346	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2202	ref-filter.c	FUNCTION_82
0x400634a	        0x488b4008	                mov rax, qword [rax + 8]	      2202	ref-filter.c	FUNCTION_82
0x400634e	        0x4883c008	                              add rax, 8	      2202	ref-filter.c	FUNCTION_82
0x4006352	        0x488945f8	                mov qword [rbp - 8], rax	      2202	ref-filter.c	FUNCTION_82
0x4006356	            0xeb6f	                           jmp 0x40063c7	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x4006358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x400635c	           0xfb600	                   movzx eax, byte [rax]	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x400635f	            0x3c25	                            cmp al, 0x25	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x4006361	            0x7547	                           jne 0x40063aa	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x4006363	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4006367	        0x4883c001	                              add rax, 1	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x400636b	           0xfb600	                   movzx eax, byte [rax]	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x400636e	            0x3c25	                            cmp al, 0x25	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4006370	            0x7507	                           jne 0x4006379	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4006372	      0x488345e801	               add qword [rbp - 0x18], 1	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4006377	            0xeb31	                           jmp 0x40063aa	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x4006379	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x400637d	        0x4883c001	                              add rax, 1	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x4006381	          0x4889c7	                            mov rdi, rax	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x4006384	      0xe82aa2ffff	                        call sym.hex2chr	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x4006389	          0x8945f4	              mov dword [rbp - 0xc], eax	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x400638c	        0x837df400	                cmp dword [rbp - 0xc], 0	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4006390	            0x7818	                            js 0x40063aa	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x4006392	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x4006395	        0x488b45f8	                mov rax, qword [rbp - 8]	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x4006399	            0x89d6	                            mov esi, edx	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x400639b	          0x4889c7	                            mov rdi, rax	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x400639e	      0xe857a0ffff	                   call sym.strbuf_addch	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x40063a3	      0x488345e803	               add qword [rbp - 0x18], 3	      2212	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x40063a8	            0xeb1d	                           jmp 0x40063c7	      2213	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x40063aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063ae	           0xfb600	                   movzx eax, byte [rax]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063b1	           0xfbed0	                           movsx edx, al	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063b8	            0x89d6	                            mov esi, edx	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063ba	          0x4889c7	                            mov rdi, rax	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063bd	      0xe838a0ffff	                   call sym.strbuf_addch	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x40063c2	      0x488345e801	               add qword [rbp - 0x18], 1	      2218	ref-filter.c	FUNCTION_82	WHILE_1
0x40063c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063cb	           0xfb600	                   movzx eax, byte [rax]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063ce	            0x84c0	                             test al, al	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063d0	            0x7419	                            je 0x40063eb	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063d2	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063d7	     0xf847bffffff	                            je 0x4006358	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063e1	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063e5	     0xf826dffffff	                            jb 0x4006358	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x40063eb	              0x90	                                     nop	      2220	ref-filter.c	FUNCTION_82
0x40063ec	              0xc9	                                   leave	      2220	ref-filter.c	FUNCTION_82
0x40063ed	              0xc3	                                     ret	      2220	ref-filter.c	FUNCTION_82
in_commit_list	WHILE,0:FOR,1:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	26
0x4004e53	              0x55	                                push rbp	      1657	ref-filter.c	FUNCTION_59
0x4004e54	          0x4889e5	                            mov rbp, rsp	      1657	ref-filter.c	FUNCTION_59
0x4004e57	        0x4883ec10	                           sub rsp, 0x10	      1657	ref-filter.c	FUNCTION_59
0x4004e5b	        0x48897df8	                mov qword [rbp - 8], rdi	      1657	ref-filter.c	FUNCTION_59
0x4004e5f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1657	ref-filter.c	FUNCTION_59
0x4004e63	            0xeb35	                           jmp 0x4004e9a	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004e65	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e69	        0x488d5004	                      lea rdx, [rax + 4]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e71	          0x488b00	                    mov rax, qword [rax]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e74	        0x4883c004	                              add rax, 4	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e78	          0x4889d6	                            mov rsi, rdx	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e7b	          0x4889c7	                            mov rdi, rax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e7e	      0xe870b6ffff	                         call sym.oidcmp	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e83	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e85	            0x7507	                           jne 0x4004e8e	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4004e87	      0xb801000000	                              mov eax, 1	      1660	ref-filter.c	FUNCTION_59	FOR_1	IF_1
0x4004e8c	            0xeb18	                           jmp 0x4004ea6	      1660	ref-filter.c	FUNCTION_59	FOR_1	IF_1
0x4004e8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004e92	        0x488b4008	                mov rax, qword [rax + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004e96	        0x488945f8	                mov qword [rbp - 8], rax	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004e9a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004e9f	            0x75c4	                           jne 0x4004e65	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4004ea1	      0xb800000000	                              mov eax, 0	      1661	ref-filter.c	FUNCTION_59
0x4004ea6	              0xc9	                                   leave	      1662	ref-filter.c	FUNCTION_59
0x4004ea7	              0xc3	                                     ret	      1662	ref-filter.c	FUNCTION_59
match_name_as_path	WHILE,0:FOR,1:CALL,4:DO,0:functions,0:SWITCH,0:IF,3:ELSE,0	81
0x40052ed	              0x55	                                push rbp	      1782	ref-filter.c	FUNCTION_65
0x40052ee	          0x4889e5	                            mov rbp, rsp	      1782	ref-filter.c	FUNCTION_65
0x40052f1	        0x4883ec30	                           sub rsp, 0x30	      1782	ref-filter.c	FUNCTION_65
0x40052f5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1782	ref-filter.c	FUNCTION_65
0x40052f9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1782	ref-filter.c	FUNCTION_65
0x40052fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1783	ref-filter.c	FUNCTION_65
0x4005301	          0x488b00	                    mov rax, qword [rax]	      1783	ref-filter.c	FUNCTION_65
0x4005304	        0x488945f0	             mov qword [rbp - 0x10], rax	      1783	ref-filter.c	FUNCTION_65
0x4005308	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x400530c	          0x4889c7	                            mov rdi, rax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x400530f	      0xe800000000	                          call 0x4005314	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4005314	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4005317	    0xc745e8020000	               mov dword [rbp - 0x18], 2	      1785	ref-filter.c	FUNCTION_65
0x400531e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1787	ref-filter.c	FUNCTION_65	IF_1
0x4005322	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1787	ref-filter.c	FUNCTION_65	IF_1
0x4005326	          0x83e004	                              and eax, 4	      1787	ref-filter.c	FUNCTION_65	IF_1
0x4005329	            0x84c0	                             test al, al	      1787	ref-filter.c	FUNCTION_65	IF_1
0x400532b	     0xf84b6000000	                            je 0x40053e7	      1787	ref-filter.c	FUNCTION_65	IF_1
0x4005331	        0x834de801	                or dword [rbp - 0x18], 1	      1788	ref-filter.c	FUNCTION_65	IF_1
0x4005335	      0xe9ad000000	                           jmp 0x40053e7	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x400533a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x400533e	          0x488b00	                    mov rax, qword [rax]	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x4005341	        0x488945f8	                mov qword [rbp - 8], rax	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x4005345	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4005349	          0x4889c7	                            mov rdi, rax	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x400534c	      0xe800000000	                          call 0x4005351	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4005351	          0x8945ec	             mov dword [rbp - 0x14], eax	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4005354	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005357	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400535a	            0x7f63	                            jg 0x40053bf	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400535c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400535f	          0x4863d0	                         movsxd rdx, eax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4005362	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4005366	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400536a	          0x4889ce	                            mov rsi, rcx	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400536d	          0x4889c7	                            mov rdi, rax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4005370	      0xe800000000	                          call 0x4005375	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4005375	            0x85c0	                           test eax, eax	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005377	            0x7546	                           jne 0x40053bf	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005379	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400537c	          0x4863d0	                         movsxd rdx, eax	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400537f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005383	          0x4801d0	                            add rax, rdx	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005386	           0xfb600	                   movzx eax, byte [rax]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005389	            0x84c0	                             test al, al	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400538b	            0x742b	                            je 0x40053b8	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x400538d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005390	          0x4863d0	                         movsxd rdx, eax	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005393	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4005397	          0x4801d0	                            add rax, rdx	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400539a	           0xfb600	                   movzx eax, byte [rax]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400539d	            0x3c2f	                            cmp al, 0x2f	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x400539f	            0x7417	                            je 0x40053b8	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053a4	            0x4898	                                    cdqe	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053a6	        0x488d50ff	                      lea rdx, [rax - 1]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053ae	          0x4801d0	                            add rax, rdx	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053b1	           0xfb600	                   movzx eax, byte [rax]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053b4	            0x3c2f	                            cmp al, 0x2f	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053b6	            0x7507	                           jne 0x40053bf	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053b8	      0xb801000000	                              mov eax, 1	      1799	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053bd	            0xeb3d	                           jmp 0x40053fc	      1799	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x40053bf	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053c7	      0xba02000000	                              mov edx, 2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053cc	          0x4889ce	                            mov rsi, rcx	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053cf	          0x4889c7	                            mov rdi, rax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053d2	      0xe800000000	                          call 0x40053d7	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053d7	            0x85c0	                           test eax, eax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053d9	            0x7507	                           jne 0x40053e2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x40053db	      0xb801000000	                              mov eax, 1	      1801	ref-filter.c	FUNCTION_65	FOR_1	IF_3
0x40053e0	            0xeb1a	                           jmp 0x40053fc	      1801	ref-filter.c	FUNCTION_65	FOR_1	IF_3
0x40053e2	      0x488345f008	               add qword [rbp - 0x10], 8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x40053e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x40053eb	          0x488b00	                    mov rax, qword [rax]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x40053ee	          0x4885c0	                           test rax, rax	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x40053f1	     0xf8543ffffff	                           jne 0x400533a	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x40053f7	      0xb800000000	                              mov eax, 0	      1803	ref-filter.c	FUNCTION_65
0x40053fc	              0xc9	                                   leave	      1804	ref-filter.c	FUNCTION_65
0x40053fd	              0xc3	                                     ret	      1804	ref-filter.c	FUNCTION_65
if_atom_parser	WHILE,0:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,3:ELSE,3	50
0x4001443	              0x55	                                push rbp	       360	ref-filter.c	FUNCTION_14
0x4001444	          0x4889e5	                            mov rbp, rsp	       360	ref-filter.c	FUNCTION_14
0x4001447	        0x4883ec20	                           sub rsp, 0x20	       360	ref-filter.c	FUNCTION_14
0x400144b	        0x48897df8	                mov qword [rbp - 8], rdi	       360	ref-filter.c	FUNCTION_14
0x400144f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       360	ref-filter.c	FUNCTION_14
0x4001453	        0x488955e8	             mov qword [rbp - 0x18], rdx	       360	ref-filter.c	FUNCTION_14
0x4001457	        0x48894de0	             mov qword [rbp - 0x20], rcx	       360	ref-filter.c	FUNCTION_14
0x400145b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       361	ref-filter.c	FUNCTION_14	IF_1
0x4001460	            0x7515	                           jne 0x4001477	       361	ref-filter.c	FUNCTION_14	IF_1
0x4001462	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	ref-filter.c	FUNCTION_14	IF_1
0x4001466	    0xc74010020000	               mov dword [rax + 0x10], 2	       362	ref-filter.c	FUNCTION_14	IF_1
0x400146d	      0xb800000000	                              mov eax, 0	       363	ref-filter.c	FUNCTION_14	IF_1
0x4001472	      0xe988000000	                           jmp 0x40014ff	       363	ref-filter.c	FUNCTION_14	IF_1
0x4001477	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x400147b	        0x488d5018	                   lea rdx, [rax + 0x18]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x400147f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x4001483	      0xbe00000000	                              mov esi, 0	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x4001488	          0x4889c7	                            mov rdi, rax	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x400148b	      0xe8bbebffff	                    call sym.skip_prefix	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x4001490	            0x85c0	                           test eax, eax	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x4001492	            0x740d	                            je 0x40014a1	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x4001494	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x4001498	    0xc74010000000	               mov dword [rax + 0x10], 0	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x400149f	            0xeb59	                           jmp 0x40014fa	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x40014a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014a5	        0x488d5018	                   lea rdx, [rax + 0x18]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014ad	      0xbe00000000	                              mov esi, 0	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014b2	          0x4889c7	                            mov rdi, rax	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014b5	      0xe891ebffff	                    call sym.skip_prefix	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014ba	            0x85c0	                           test eax, eax	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014bc	            0x740d	                            je 0x40014cb	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x40014be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x40014c2	    0xc74010010000	               mov dword [rax + 0x10], 1	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x40014c9	            0xeb2f	                           jmp 0x40014fa	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x40014cb	      0xbf00000000	                              mov edi, 0	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014d0	      0xe8c8efffff	                               call sym.	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014d5	          0x4889c6	                            mov rsi, rax	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014e0	          0x4889d1	                            mov rcx, rdx	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014e3	          0x4889f2	                            mov rdx, rsi	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014e6	      0xbeffffffff	                     mov esi, 0xffffffff	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014eb	          0x4889c7	                            mov rdi, rax	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014ee	      0xb800000000	                              mov eax, 0	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014f3	      0xe85cf1ffff	                call sym.strbuf_addf_ret	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014f8	            0xeb05	                           jmp 0x40014ff	       369	ref-filter.c	FUNCTION_14	CALL_4
0x40014fa	      0xb800000000	                              mov eax, 0	       370	ref-filter.c	FUNCTION_14
0x40014ff	              0xc9	                                   leave	       371	ref-filter.c	FUNCTION_14
0x4001500	              0xc3	                                     ret	       371	ref-filter.c	FUNCTION_14
remote_ref_atom_parser	WHILE,0:FOR,1:CALL,12:DO,0:functions,0:SWITCH,0:IF,8:ELSE,5	156
0x400097a	              0x55	                                push rbp	       157	ref-filter.c	FUNCTION_5
0x400097b	          0x4889e5	                            mov rbp, rsp	       157	ref-filter.c	FUNCTION_5
0x400097e	        0x4883ec60	                           sub rsp, 0x60	       157	ref-filter.c	FUNCTION_5
0x4000982	        0x48897db8	             mov qword [rbp - 0x48], rdi	       157	ref-filter.c	FUNCTION_5
0x4000986	        0x488975b0	             mov qword [rbp - 0x50], rsi	       157	ref-filter.c	FUNCTION_5
0x400098a	        0x488955a8	             mov qword [rbp - 0x58], rdx	       157	ref-filter.c	FUNCTION_5
0x400098e	        0x48894da0	             mov qword [rbp - 0x60], rcx	       157	ref-filter.c	FUNCTION_5
0x4000992	    0x64488b042528	                mov rax, qword fs:[0x28]	       157	ref-filter.c	FUNCTION_5
0x400099b	        0x488945f8	                mov qword [rbp - 8], rax	       157	ref-filter.c	FUNCTION_5
0x400099f	            0x31c0	                            xor eax, eax	       157	ref-filter.c	FUNCTION_5
0x40009a1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       158	ref-filter.c	FUNCTION_5
0x40009a9	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       158	ref-filter.c	FUNCTION_5
0x40009b0	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       158	ref-filter.c	FUNCTION_5
0x40009b7	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       158	ref-filter.c	FUNCTION_5
0x40009bb	          0x83c801	                               or eax, 1	       158	ref-filter.c	FUNCTION_5
0x40009be	          0x8845e0	               mov byte [rbp - 0x20], al	       158	ref-filter.c	FUNCTION_5
0x40009c1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       158	ref-filter.c	FUNCTION_5
0x40009c9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009cd	          0x488b00	                    mov rax, qword [rax]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009d0	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009d5	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009d8	      0xe800000000	                          call 0x40009dd	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009dd	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009df	            0x7418	                            je 0x40009f9	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009e1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009e5	          0x488b00	                    mov rax, qword [rax]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009e8	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009ed	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009f0	      0xe800000000	                          call 0x40009f5	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009f5	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009f7	            0x740e	                            je 0x4000a07	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40009f9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       162	ref-filter.c	FUNCTION_5	IF_1
0x40009fd	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       162	ref-filter.c	FUNCTION_5	IF_1
0x4000a01	          0x83ca02	                               or edx, 2	       162	ref-filter.c	FUNCTION_5	IF_1
0x4000a04	          0x885020	               mov byte [rax + 0x20], dl	       162	ref-filter.c	FUNCTION_5	IF_1
0x4000a07	      0x48837da800	               cmp qword [rbp - 0x58], 0	       164	ref-filter.c	FUNCTION_5	IF_2
0x4000a0c	            0x752f	                           jne 0x4000a3d	       164	ref-filter.c	FUNCTION_5	IF_2
0x4000a0e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       165	ref-filter.c	FUNCTION_5	IF_2
0x4000a12	    0xc74010000000	               mov dword [rax + 0x10], 0	       165	ref-filter.c	FUNCTION_5	IF_2
0x4000a19	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a1d	          0x488b10	                    mov rdx, qword [rax]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a20	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a24	        0x488d7814	                   lea rdi, [rax + 0x14]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a28	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a2c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a30	          0x4889c6	                            mov rsi, rax	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a33	      0xe8b3fdffff	   call sym.refname_atom_parser_internal	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a38	      0xe98c010000	                           jmp 0x4000bc9	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x4000a3d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       170	ref-filter.c	FUNCTION_5
0x4000a41	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       170	ref-filter.c	FUNCTION_5
0x4000a45	          0x83e2fe	                     and edx, 0xfffffffe	       170	ref-filter.c	FUNCTION_5
0x4000a48	          0x885020	               mov byte [rax + 0x20], dl	       170	ref-filter.c	FUNCTION_5
0x4000a4b	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a4f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a53	      0xb9ffffffff	                     mov ecx, 0xffffffff	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a58	      0xba2c000000	                           mov edx, 0x2c	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a5d	          0x4889c7	                            mov rdi, rax	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a60	      0xe800000000	                          call 0x4000a65	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4000a65	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000a6c	      0xe934010000	                           jmp 0x4000ba5	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000a71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a75	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a78	          0x4863d2	                         movsxd rdx, edx	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a7b	        0x48c1e204	                              shl rdx, 4	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a7f	          0x4801d0	                            add rax, rdx	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a82	          0x488b00	                    mov rax, qword [rax]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a85	        0x488945c8	             mov qword [rbp - 0x38], rax	       174	ref-filter.c	FUNCTION_5	FOR_1
0x4000a89	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a8d	      0xbe00000000	                              mov esi, 0	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a92	          0x4889c7	                            mov rdi, rax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a95	      0xe800000000	                          call 0x4000a9a	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a9a	            0x85c0	                           test eax, eax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a9c	            0x7510	                           jne 0x4000aae	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x4000a9e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x4000aa2	    0xc74010010000	               mov dword [rax + 0x10], 1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x4000aa9	      0xe9f3000000	                           jmp 0x4000ba1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x4000aae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000ab2	      0xbe00000000	                              mov esi, 0	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000ab7	          0x4889c7	                            mov rdi, rax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000aba	      0xe800000000	                          call 0x4000abf	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000abf	            0x85c0	                           test eax, eax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000ac1	            0x7510	                           jne 0x4000ad3	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x4000ac3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000ac7	    0xc74010020000	               mov dword [rax + 0x10], 2	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000ace	      0xe9ce000000	                           jmp 0x4000ba1	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4000ad3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000ad7	      0xbe00000000	                              mov esi, 0	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000adc	          0x4889c7	                            mov rdi, rax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000adf	      0xe800000000	                          call 0x4000ae4	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000ae4	            0x85c0	                           test eax, eax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000ae6	            0x7513	                           jne 0x4000afb	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4000ae8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4000aec	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4000af0	          0x83ca01	                               or edx, 1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4000af3	          0x885020	               mov byte [rax + 0x20], dl	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4000af6	      0xe9a6000000	                           jmp 0x4000ba1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4000afb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000aff	      0xbe00000000	                              mov esi, 0	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000b04	          0x4889c7	                            mov rdi, rax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000b07	      0xe800000000	                          call 0x4000b0c	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000b0c	            0x85c0	                           test eax, eax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000b0e	            0x751b	                           jne 0x4000b2b	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4000b10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b14	    0xc74010030000	               mov dword [rax + 0x10], 3	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b1f	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b23	          0x83ca04	                               or edx, 4	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b26	          0x885020	               mov byte [rax + 0x20], dl	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b29	            0xeb76	                           jmp 0x4000ba1	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4000b2b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b2f	      0xbe00000000	                              mov esi, 0	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b34	          0x4889c7	                            mov rdi, rax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b37	      0xe800000000	                          call 0x4000b3c	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b3c	            0x85c0	                           test eax, eax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b3e	            0x751b	                           jne 0x4000b5b	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4000b40	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b44	    0xc74010040000	               mov dword [rax + 0x10], 4	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b4b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b4f	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b53	          0x83ca04	                               or edx, 4	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b56	          0x885020	               mov byte [rax + 0x20], dl	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b59	            0xeb46	                           jmp 0x4000ba1	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4000b5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0x4000b5f	    0xc74010000000	               mov dword [rax + 0x10], 0	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0x4000b66	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b6a	          0x488b10	                    mov rdx, qword [rax]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b6d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b71	        0x488d7814	                   lea rdi, [rax + 0x14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b75	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b79	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b7d	          0x4889c6	                            mov rsi, rax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b80	      0xe866fcffff	   call sym.refname_atom_parser_internal	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b85	            0x85c0	                           test eax, eax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b87	            0x7418	                            je 0x4000ba1	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4000b89	        0x488d45d0	                   lea rax, [rbp - 0x30]	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4000b8d	      0xbe00000000	                              mov esi, 0	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4000b92	          0x4889c7	                            mov rdi, rax	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4000b95	      0xe800000000	                          call 0x4000b9a	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4000b9a	      0xb8ffffffff	                     mov eax, 0xffffffff	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4000b9f	            0xeb28	                           jmp 0x4000bc9	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4000ba1	        0x8345c401	               add dword [rbp - 0x3c], 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000ba5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000ba8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000bab	            0x39c2	                            cmp edx, eax	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000bad	     0xf87befeffff	                            ja 0x4000a71	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4000bb3	        0x488d45d0	                   lea rax, [rbp - 0x30]	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4000bb7	      0xbe00000000	                              mov esi, 0	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4000bbc	          0x4889c7	                            mov rdi, rax	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       198	ref-filter.c	FUNCTION_5	CALL_12
0x4000bc4	      0xb800000000	                              mov eax, 0	       199	ref-filter.c	FUNCTION_5
0x4000bc9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       200	ref-filter.c	FUNCTION_5
0x4000bcd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       200	ref-filter.c	FUNCTION_5
0x4000bd6	            0x7405	                            je 0x4000bdd	       200	ref-filter.c	FUNCTION_5
0x4000bd8	      0xe800000000	                          call 0x4000bdd	       200	ref-filter.c	FUNCTION_5
0x4000bdd	              0xc9	                                   leave	       200	ref-filter.c	FUNCTION_5
0x4000bde	              0xc3	                                     ret	       200	ref-filter.c	FUNCTION_5
do_merge_filter	WHILE,0:FOR,2:CALL,11:DO,0:functions,0:SWITCH,0:IF,2:ELSE,1	173
0x4005bbd	              0x55	                                push rbp	      2055	ref-filter.c	FUNCTION_77
0x4005bbe	          0x4889e5	                            mov rbp, rsp	      2055	ref-filter.c	FUNCTION_77
0x4005bc1	    0x4881ec100900	                          sub rsp, 0x910	      2055	ref-filter.c	FUNCTION_77
0x4005bc8	    0x4889bdf8f6ff	            mov qword [rbp - 0x908], rdi	      2055	ref-filter.c	FUNCTION_77
0x4005bcf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2055	ref-filter.c	FUNCTION_77
0x4005bd8	        0x488945f8	                mov qword [rbp - 8], rax	      2055	ref-filter.c	FUNCTION_77
0x4005bdc	            0x31c0	                            xor eax, eax	      2055	ref-filter.c	FUNCTION_77
0x4005bde	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2058	ref-filter.c	FUNCTION_77
0x4005be5	        0x488b4008	                mov rax, qword [rax + 8]	      2058	ref-filter.c	FUNCTION_77
0x4005be9	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      2058	ref-filter.c	FUNCTION_77
0x4005bf0	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2059	ref-filter.c	FUNCTION_77
0x4005bf7	          0x488b00	                    mov rax, qword [rax]	      2059	ref-filter.c	FUNCTION_77
0x4005bfa	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	      2059	ref-filter.c	FUNCTION_77
0x4005c01	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c08	            0x8b00	                    mov eax, dword [rax]	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c0a	            0x4898	                                    cdqe	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c0c	          0x4889c6	                            mov rsi, rax	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c0f	      0xbf08000000	                              mov edi, 8	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c14	      0xe800000000	                          call 0x4005c19	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c19	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x4005c20	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4005c27	      0xbe00000000	                              mov esi, 0	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4005c2c	          0x4889c7	                            mov rdi, rax	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4005c2f	      0xe800000000	                          call 0x4005c34	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x4005c34	    0xc78504f7ffff	              mov dword [rbp - 0x8fc], 0	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005c3e	            0xeb7f	                           jmp 0x4005cbf	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005c40	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c47	        0x488b4008	                mov rax, qword [rax + 8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c4b	    0x8b9504f7ffff	            mov edx, dword [rbp - 0x8fc]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c51	          0x4863d2	                         movsxd rdx, edx	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c54	        0x48c1e203	                              shl rdx, 3	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c58	          0x4801d0	                            add rax, rdx	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c5b	          0x488b00	                    mov rax, qword [rax]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c5e	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x4005c65	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c6c	        0x488d5038	                   lea rdx, [rax + 0x38]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c70	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c77	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c7b	          0x4889c1	                            mov rcx, rax	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c7e	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c85	          0x4889ce	                            mov rsi, rcx	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c88	          0x4889c7	                            mov rdi, rax	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c8b	      0xe800000000	                          call 0x4005c90	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x4005c90	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005c96	            0x4898	                                    cdqe	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005c98	    0x488d14c50000	                        lea rdx, [rax*8]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005ca0	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005ca7	          0x4801c2	                            add rdx, rax	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005caa	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005cb1	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005cb5	          0x488902	                    mov qword [rdx], rax	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x4005cb8	    0x838504f7ffff	              add dword [rbp - 0x8fc], 1	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005cbf	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005cc6	            0x8b00	                    mov eax, dword [rax]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005cc8	    0x3b8504f7ffff	            cmp eax, dword [rbp - 0x8fc]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005cce	     0xf8f6cffffff	                            jg 0x4005c40	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x4005cd4	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2070	ref-filter.c	FUNCTION_77
0x4005cdb	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2070	ref-filter.c	FUNCTION_77
0x4005cdf	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2070	ref-filter.c	FUNCTION_77
0x4005ce6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2070	ref-filter.c	FUNCTION_77
0x4005cea	            0x8b00	                    mov eax, dword [rax]	      2070	ref-filter.c	FUNCTION_77
0x4005cec	          0xc1e804	                              shr eax, 4	      2070	ref-filter.c	FUNCTION_77
0x4005cef	      0x25ffffff07	                      and eax, 0x7ffffff	      2070	ref-filter.c	FUNCTION_77
0x4005cf4	          0x83c802	                               or eax, 2	      2070	ref-filter.c	FUNCTION_77
0x4005cf7	      0x25ffffff07	                      and eax, 0x7ffffff	      2070	ref-filter.c	FUNCTION_77
0x4005cfc	          0xc1e004	                              shl eax, 4	      2070	ref-filter.c	FUNCTION_77
0x4005cff	            0x89c1	                            mov ecx, eax	      2070	ref-filter.c	FUNCTION_77
0x4005d01	            0x8b02	                    mov eax, dword [rdx]	      2070	ref-filter.c	FUNCTION_77
0x4005d03	      0x250f000080	                     and eax, 0x8000000f	      2070	ref-filter.c	FUNCTION_77
0x4005d08	             0x9c8	                             or eax, ecx	      2070	ref-filter.c	FUNCTION_77
0x4005d0a	            0x8902	                    mov dword [rdx], eax	      2070	ref-filter.c	FUNCTION_77
0x4005d0c	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d13	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d17	          0x4889c1	                            mov rcx, rax	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d1a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d21	      0xba00000000	                              mov edx, 0	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d26	          0x4889ce	                            mov rsi, rcx	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d29	          0x4889c7	                            mov rdi, rax	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d2c	      0xe800000000	                          call 0x4005d31	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x4005d31	     0xfb685b6f7ff	           movzx eax, byte [rbp - 0x84a]	      2073	ref-filter.c	FUNCTION_77
0x4005d38	          0x83c804	                               or eax, 4	      2073	ref-filter.c	FUNCTION_77
0x4005d3b	    0x8885b6f7ffff	              mov byte [rbp - 0x84a], al	      2073	ref-filter.c	FUNCTION_77
0x4005d41	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4005d48	          0x4889c7	                            mov rdi, rax	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4005d4b	      0xe800000000	                          call 0x4005d50	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4005d50	            0x85c0	                           test eax, eax	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4005d52	            0x7417	                            je 0x4005d6b	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x4005d54	      0xbf00000000	                              mov edi, 0	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4005d59	      0xe83fa7ffff	                               call sym.	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4005d5e	          0x4889c7	                            mov rdi, rax	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4005d61	      0xb800000000	                              mov eax, 0	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4005d66	      0xe800000000	                          call 0x4005d6b	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x4005d6b	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2077	ref-filter.c	FUNCTION_77
0x4005d72	            0x8b00	                    mov eax, dword [rax]	      2077	ref-filter.c	FUNCTION_77
0x4005d74	    0x898508f7ffff	            mov dword [rbp - 0x8f8], eax	      2077	ref-filter.c	FUNCTION_77
0x4005d7a	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2078	ref-filter.c	FUNCTION_77
0x4005d81	    0xc70000000000	                      mov dword [rax], 0	      2078	ref-filter.c	FUNCTION_77
0x4005d87	    0xc78504f7ffff	              mov dword [rbp - 0x8fc], 0	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005d91	      0xe9d7000000	                           jmp 0x4005e6d	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005d96	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005d9d	        0x488b4008	                mov rax, qword [rax + 8]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005da1	    0x8b9504f7ffff	            mov edx, dword [rbp - 0x8fc]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005da7	          0x4863d2	                         movsxd rdx, edx	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005daa	        0x48c1e203	                              shl rdx, 3	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005dae	          0x4801d0	                            add rax, rdx	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005db1	          0x488b00	                    mov rax, qword [rax]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005db4	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x4005dbb	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x4005dc2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x4005dc6	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x4005dcd	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005dd4	            0x8b00	                    mov eax, dword [rax]	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005dd6	          0xc1e804	                              shr eax, 4	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005dd9	      0x25ffffff07	                      and eax, 0x7ffffff	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005dde	          0x83e002	                              and eax, 2	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005de1	            0x85c0	                           test eax, eax	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005de3	           0xf95c0	                                setne al	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005de6	           0xfb6c0	                           movzx eax, al	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005de9	    0x89850cf7ffff	            mov dword [rbp - 0x8f4], eax	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x4005def	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005df6	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005df9	          0x83f801	                              cmp eax, 1	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005dfc	           0xf94c0	                                 sete al	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005dff	           0xfb6c0	                           movzx eax, al	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e02	    0x3b850cf7ffff	            cmp eax, dword [rbp - 0x8f4]	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e08	            0x754d	                           jne 0x4005e57	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e0a	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e11	        0x488b7008	                mov rsi, qword [rax + 8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e15	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e1c	            0x8b00	                    mov eax, dword [rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e1e	          0x8d4801	                      lea ecx, [rax + 1]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e21	    0x488b9518f7ff	            mov rdx, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e28	            0x890a	                    mov dword [rdx], ecx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e2a	            0x4898	                                    cdqe	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e2c	        0x48c1e003	                              shl rax, 3	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e30	        0x488d1406	                    lea rdx, [rsi + rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e34	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e3b	        0x488b4008	                mov rax, qword [rax + 8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e3f	    0x8b8d04f7ffff	            mov ecx, dword [rbp - 0x8fc]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e45	          0x4863c9	                         movsxd rcx, ecx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e48	        0x48c1e103	                              shl rcx, 3	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e4c	          0x4801c8	                            add rax, rcx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e4f	          0x488b00	                    mov rax, qword [rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e52	          0x488902	                    mov qword [rdx], rax	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e55	            0xeb0f	                           jmp 0x4005e66	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x4005e57	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x4005e5e	          0x4889c7	                            mov rdi, rax	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x4005e61	      0xe8b1fcffff	                call sym.free_array_item	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x4005e66	    0x838504f7ffff	              add dword [rbp - 0x8fc], 1	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005e6d	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005e73	    0x3b8508f7ffff	            cmp eax, dword [rbp - 0x8f8]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005e79	     0xf8c17ffffff	                            jl 0x4005d96	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x4005e7f	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e86	    0x8b8508f7ffff	            mov eax, dword [rbp - 0x8f8]	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e8c	      0xbaff070004	                      mov edx, 0x40007ff	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e91	          0x4889ce	                            mov rsi, rcx	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e94	            0x89c7	                            mov edi, eax	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e96	      0xe800000000	                          call 0x4005e9b	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x4005e9b	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4005ea2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4005ea6	      0xbeff070004	                      mov esi, 0x40007ff	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4005eab	          0x4889c7	                            mov rdi, rax	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4005eae	      0xe800000000	                          call 0x4005eb3	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x4005eb3	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x4005eba	          0x4889c7	                            mov rdi, rax	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x4005ebd	      0xe800000000	                          call 0x4005ec2	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x4005ec2	              0x90	                                     nop	      2095	ref-filter.c	FUNCTION_77
0x4005ec3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2095	ref-filter.c	FUNCTION_77
0x4005ec7	    0x644833042528	                xor rax, qword fs:[0x28]	      2095	ref-filter.c	FUNCTION_77
0x4005ed0	            0x7405	                            je 0x4005ed7	      2095	ref-filter.c	FUNCTION_77
0x4005ed2	      0xe800000000	                          call 0x4005ed7	      2095	ref-filter.c	FUNCTION_77
0x4005ed7	              0xc9	                                   leave	      2095	ref-filter.c	FUNCTION_77
0x4005ed8	              0xc3	                                     ret	      2095	ref-filter.c	FUNCTION_77
grab_person	WHILE,0:FOR,2:CALL,20:DO,0:functions,0:SWITCH,0:IF,17:ELSE,4	263
0x4002e6a	              0x55	                                push rbp	      1008	ref-filter.c	FUNCTION_42
0x4002e6b	          0x4889e5	                            mov rbp, rsp	      1008	ref-filter.c	FUNCTION_42
0x4002e6e	        0x4883ec60	                           sub rsp, 0x60	      1008	ref-filter.c	FUNCTION_42
0x4002e72	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1008	ref-filter.c	FUNCTION_42
0x4002e76	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1008	ref-filter.c	FUNCTION_42
0x4002e7a	          0x8955bc	             mov dword [rbp - 0x44], edx	      1008	ref-filter.c	FUNCTION_42
0x4002e7d	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1008	ref-filter.c	FUNCTION_42
0x4002e81	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1008	ref-filter.c	FUNCTION_42
0x4002e85	        0x4c894da0	              mov qword [rbp - 0x60], r9	      1008	ref-filter.c	FUNCTION_42
0x4002e89	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002e8d	          0x4889c7	                            mov rdi, rax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002e90	      0xe800000000	                          call 0x4002e95	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002e95	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x4002e98	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1011	ref-filter.c	FUNCTION_42
0x4002ea0	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002ea7	      0xe900020000	                           jmp 0x40030ac	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x4002eac	    0x488b0d000000	            mov rcx, qword [0x04002eb3] 	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002eb3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002eb6	          0x4863d0	                         movsxd rdx, eax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002eb9	          0x4889d0	                            mov rax, rdx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ebc	          0x4801c0	                            add rax, rax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ebf	          0x4801d0	                            add rax, rdx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ec2	        0x48c1e005	                              shl rax, 5	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ec6	          0x4801c8	                            add rax, rcx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ec9	          0x488b00	                    mov rax, qword [rax]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ecc	        0x488945e0	             mov qword [rbp - 0x20], rax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x4002ed0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ed3	            0x4898	                                    cdqe	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ed5	        0x48c1e005	                              shl rax, 5	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ed9	          0x4889c2	                            mov rdx, rax	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002edc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ee0	          0x4801d0	                            add rax, rdx	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ee3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x4002ee7	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002eeb	           0xf95c2	                                setne dl	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002eee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002ef2	           0xfb600	                   movzx eax, byte [rax]	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002ef5	            0x3c2a	                            cmp al, 0x2a	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002ef7	           0xf94c0	                                 sete al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002efa	            0x31d0	                            xor eax, edx	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002efc	            0x84c0	                             test al, al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002efe	     0xf859d010000	                           jne 0x40030a1	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x4002f04	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1018	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x4002f08	            0x7405	                            je 0x4002f0f	      1018	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x4002f0a	      0x488345e001	               add qword [rbp - 0x20], 1	      1019	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x4002f0f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f12	          0x4863d0	                         movsxd rdx, eax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f15	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f1d	          0x4889ce	                            mov rsi, rcx	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f20	          0x4889c7	                            mov rdi, rax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f23	      0xe800000000	                          call 0x4002f28	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f28	            0x85c0	                           test eax, eax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f2a	     0xf8574010000	                           jne 0x40030a4	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x4002f30	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f33	          0x4863d0	                         movsxd rdx, eax	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f3a	          0x4801d0	                            add rax, rdx	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f3d	           0xfb600	                   movzx eax, byte [rax]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f40	            0x84c0	                             test al, al	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f42	            0x745e	                            je 0x4002fa2	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f44	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f47	          0x4863d0	                         movsxd rdx, eax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f4e	          0x4801d0	                            add rax, rdx	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f51	      0xbe00000000	                              mov esi, 0	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f56	          0x4889c7	                            mov rdi, rax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f59	      0xe800000000	                          call 0x4002f5e	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f5e	            0x85c0	                           test eax, eax	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f60	            0x7440	                            je 0x4002fa2	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x4002f62	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f65	          0x4863d0	                         movsxd rdx, eax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f6c	          0x4801d0	                            add rax, rdx	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f6f	      0xbe00000000	                              mov esi, 0	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f74	          0x4889c7	                            mov rdi, rax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f77	      0xe800000000	                          call 0x4002f7c	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f7c	            0x85c0	                           test eax, eax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f7e	            0x7422	                            je 0x4002fa2	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x4002f80	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f83	          0x4863d0	                         movsxd rdx, eax	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f86	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f8a	          0x4801d0	                            add rax, rdx	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f8d	      0xbe00000000	                              mov esi, 0	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f92	          0x4889c7	                            mov rdi, rax	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f95	      0xe800000000	                          call 0x4002f9a	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x4002f9a	            0x85c0	                           test eax, eax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002f9c	     0xf8405010000	                            je 0x40030a7	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x4002fa2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x4002fa7	            0x751b	                           jne 0x4002fc4	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x4002fa9	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fad	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fb1	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fb8	          0x4889c7	                            mov rdi, rax	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fbb	      0xe8ecfaffff	                   call sym.find_wholine	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fc0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x4002fc4	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x4002fc9	     0xf8423020000	                            je 0x40031f2	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x4002fcf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fd2	          0x4863d0	                         movsxd rdx, eax	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fd9	          0x4801d0	                            add rax, rdx	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fdc	           0xfb600	                   movzx eax, byte [rax]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fdf	            0x84c0	                             test al, al	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fe1	            0x751b	                           jne 0x4002ffe	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x4002fe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002fe7	          0x4889c7	                            mov rdi, rax	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002fea	      0xe874fbffff	                      call sym.copy_line	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002fef	          0x4889c2	                            mov rdx, rax	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002ff2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002ff6	          0x488910	                    mov qword [rax], rdx	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002ff9	      0xe9aa000000	                           jmp 0x40030a8	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x4002ffe	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003001	          0x4863d0	                         movsxd rdx, eax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003004	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003008	          0x4801d0	                            add rax, rdx	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x400300b	      0xbe00000000	                              mov esi, 0	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003010	          0x4889c7	                            mov rdi, rax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003013	      0xe800000000	                          call 0x4003018	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x4003018	            0x85c0	                           test eax, eax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x400301a	            0x7518	                           jne 0x4003034	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x400301c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4003020	          0x4889c7	                            mov rdi, rax	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4003023	      0xe87efbffff	                      call sym.copy_name	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4003028	          0x4889c2	                            mov rdx, rax	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x400302b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x400302f	          0x488910	                    mov qword [rax], rdx	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4003032	            0xeb74	                           jmp 0x40030a8	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x4003034	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003037	          0x4863d0	                         movsxd rdx, eax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x400303a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x400303e	          0x4801d0	                            add rax, rdx	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003041	      0xbe00000000	                              mov esi, 0	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003046	          0x4889c7	                            mov rdi, rax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003049	      0xe800000000	                          call 0x400304e	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x400304e	            0x85c0	                           test eax, eax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003050	            0x7518	                           jne 0x400306a	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x4003052	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4003056	          0x4889c7	                            mov rdi, rax	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4003059	      0xe8bcfbffff	                     call sym.copy_email	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x400305e	          0x4889c2	                            mov rdx, rax	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4003061	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4003065	          0x488910	                    mov qword [rax], rdx	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x4003068	            0xeb3e	                           jmp 0x40030a8	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x400306a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x400306d	          0x4863d0	                         movsxd rdx, eax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003070	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003074	          0x4801d0	                            add rax, rdx	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003077	      0xbe00000000	                              mov esi, 0	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x400307c	          0x4889c7	                            mov rdi, rax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x400307f	      0xe800000000	                          call 0x4003084	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003084	            0x85c0	                           test eax, eax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003086	            0x7420	                            je 0x40030a8	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x4003088	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x400308c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4003090	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4003094	          0x4889ce	                            mov rsi, rcx	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x4003097	          0x4889c7	                            mov rdi, rax	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x400309a	      0xe85ffcffff	                      call sym.grab_date	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x400309f	            0xeb07	                           jmp 0x40030a8	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x40030a1	              0x90	                                     nop	      1017	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x40030a2	            0xeb04	                           jmp 0x40030a8	      1017	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x40030a4	              0x90	                                     nop	      1021	ref-filter.c	FUNCTION_42	FOR_1	IF_3
0x40030a5	            0xeb01	                           jmp 0x40030a8	      1021	ref-filter.c	FUNCTION_42	FOR_1	IF_3
0x40030a7	              0x90	                                     nop	      1026	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x40030a8	        0x8345d001	               add dword [rbp - 0x30], 1	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x40030ac	    0x8b0500000000	            mov eax, dword [0x040030b2] 	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x40030b2	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x40030b5	     0xf8cf1fdffff	                            jl 0x4002eac	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x40030bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030bf	      0xbe00000000	                              mov esi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030c4	          0x4889c7	                            mov rdi, rax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030c7	      0xe800000000	                          call 0x40030cc	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030cc	            0x85c0	                           test eax, eax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030ce	            0x7419	                            je 0x40030e9	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d4	      0xbe00000000	                              mov esi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030d9	          0x4889c7	                            mov rdi, rax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030dc	      0xe800000000	                          call 0x40030e1	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030e1	            0x85c0	                           test eax, eax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030e3	     0xf850c010000	                           jne 0x40031f5	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x40030e9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1047	ref-filter.c	FUNCTION_42	IF_12
0x40030ee	            0x751b	                           jne 0x400310b	      1047	ref-filter.c	FUNCTION_42	IF_12
0x40030f0	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x40030f4	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x40030f8	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x40030fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x40030ff	          0x4889c7	                            mov rdi, rax	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4003102	      0xe8a5f9ffff	                   call sym.find_wholine	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x4003107	        0x488945d8	             mov qword [rbp - 0x28], rax	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x400310b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1049	ref-filter.c	FUNCTION_42	IF_13
0x4003110	     0xf84e2000000	                            je 0x40031f8	      1049	ref-filter.c	FUNCTION_42	IF_13
0x4003116	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x400311d	      0xe9bf000000	                           jmp 0x40031e1	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x4003122	    0x488b0d000000	            mov rcx, qword [0x04003129] 	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003129	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x400312c	          0x4863d0	                         movsxd rdx, eax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x400312f	          0x4889d0	                            mov rax, rdx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003132	          0x4801c0	                            add rax, rax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003135	          0x4801d0	                            add rax, rdx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003138	        0x48c1e005	                              shl rax, 5	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x400313c	          0x4801c8	                            add rax, rcx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x400313f	          0x488b00	                    mov rax, qword [rax]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003142	        0x488945e8	             mov qword [rbp - 0x18], rax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x4003146	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x4003149	            0x4898	                                    cdqe	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x400314b	        0x48c1e005	                              shl rax, 5	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x400314f	          0x4889c2	                            mov rdx, rax	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x4003152	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x4003156	          0x4801d0	                            add rax, rdx	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x4003159	        0x488945f8	                mov qword [rbp - 8], rax	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x400315d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003161	           0xf95c2	                                setne dl	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003164	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003168	           0xfb600	                   movzx eax, byte [rax]	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x400316b	            0x3c2a	                            cmp al, 0x2a	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x400316d	           0xf94c0	                                 sete al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003170	            0x31d0	                            xor eax, edx	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003172	            0x84c0	                             test al, al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003174	            0x7566	                           jne 0x40031dc	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x4003176	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1056	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x400317a	            0x7405	                            je 0x4003181	      1056	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x400317c	      0x488345e801	               add qword [rbp - 0x18], 1	      1057	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x4003181	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003185	      0xbe00000000	                              mov esi, 0	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x400318a	          0x4889c7	                            mov rdi, rax	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x400318d	      0xe800000000	                          call 0x4003192	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003192	            0x85c0	                           test eax, eax	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003194	            0x7419	                            je 0x40031af	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x4003196	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x400319a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x400319e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x40031a2	          0x4889ce	                            mov rsi, rcx	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x40031a5	          0x4889c7	                            mov rdi, rax	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x40031a8	      0xe851fbffff	                      call sym.grab_date	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x40031ad	            0xeb2e	                           jmp 0x40031dd	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x40031af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031b3	      0xbe00000000	                              mov esi, 0	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031b8	          0x4889c7	                            mov rdi, rax	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031bb	      0xe800000000	                          call 0x40031c0	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031c0	            0x85c0	                           test eax, eax	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031c2	            0x7519	                           jne 0x40031dd	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x40031c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031c8	          0x4889c7	                            mov rdi, rax	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031cb	      0xe893f9ffff	                      call sym.copy_line	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031d0	          0x4889c2	                            mov rdx, rax	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031d7	          0x488910	                    mov qword [rax], rdx	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031da	            0xeb01	                           jmp 0x40031dd	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x40031dc	              0x90	                                     nop	      1055	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x40031dd	        0x8345d001	               add dword [rbp - 0x30], 1	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x40031e1	    0x8b0500000000	            mov eax, dword [0x040031e7] 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x40031e7	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x40031ea	     0xf8c32ffffff	                            jl 0x4003122	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x40031f0	            0xeb07	                           jmp 0x40031f9	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x40031f2	              0x90	                                     nop	      1030	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x40031f3	            0xeb04	                           jmp 0x40031f9	      1030	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x40031f5	              0x90	                                     nop	      1046	ref-filter.c	FUNCTION_42	IF_11
0x40031f6	            0xeb01	                           jmp 0x40031f9	      1046	ref-filter.c	FUNCTION_42	IF_11
0x40031f8	              0x90	                                     nop	      1050	ref-filter.c	FUNCTION_42	IF_13
0x40031f9	              0xc9	                                   leave	      1064	ref-filter.c	FUNCTION_42
0x40031fa	              0xc3	                                     ret	      1064	ref-filter.c	FUNCTION_42
strbuf_avail	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	18
0x400032a	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_119
0x400032b	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_119
0x400032e	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_119
0x4000332	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_119
0x4000336	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_119
0x4000339	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_119
0x400033c	            0x741b	                            je 0x4000359	       141	strbuf.h	FUNCTION_119
0x400033e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_119
0x4000342	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_119
0x4000345	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_119
0x4000349	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_119
0x400034d	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_119
0x4000350	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_119
0x4000353	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_119
0x4000357	            0xeb05	                           jmp 0x400035e	       141	strbuf.h	FUNCTION_119
0x4000359	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_119
0x400035e	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_119
0x400035f	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_119
grab_values	WHILE,0:FOR,0:CALL,9:DO,0:functions,0:SWITCH,1:IF,0:ELSE,0	111
0x4003882	              0x55	                                push rbp	      1209	ref-filter.c	FUNCTION_47
0x4003883	          0x4889e5	                            mov rbp, rsp	      1209	ref-filter.c	FUNCTION_47
0x4003886	        0x4883ec30	                           sub rsp, 0x30	      1209	ref-filter.c	FUNCTION_47
0x400388a	        0x48897df8	                mov qword [rbp - 8], rdi	      1209	ref-filter.c	FUNCTION_47
0x400388e	          0x8975f4	              mov dword [rbp - 0xc], esi	      1209	ref-filter.c	FUNCTION_47
0x4003891	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1209	ref-filter.c	FUNCTION_47
0x4003895	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1209	ref-filter.c	FUNCTION_47
0x4003899	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1209	ref-filter.c	FUNCTION_47
0x400389d	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038a1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038a5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038a9	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038b0	          0x4989f8	                             mov r8, rdi	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038b3	          0x4889c7	                            mov rdi, rax	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038b6	      0xe813edffff	             call sym.grab_common_values	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x40038bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038bf	           0xfb600	                   movzx eax, byte [rax]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038c2	            0xd0e8	                               shr al, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038c4	          0x83e007	                              and eax, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038c7	           0xfb6c0	                           movzx eax, al	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038ca	          0x83f802	                              cmp eax, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038cd	     0xf8432010000	                            je 0x4003a05	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038d3	          0x83f802	                              cmp eax, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038d6	            0x7f0a	                            jg 0x40038e2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038d8	          0x83f801	                              cmp eax, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038db	            0x747e	                            je 0x400395b	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038dd	      0xe903010000	                           jmp 0x40039e5	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038e2	          0x83f803	                              cmp eax, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038e5	     0xf841d010000	                            je 0x4003a08	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038eb	          0x83f804	                              cmp eax, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038ee	     0xf85f1000000	                           jne 0x40039e5	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40038f4	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x40038f8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x40038fc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x4003900	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x4003903	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x4003907	          0x4989f8	                             mov r8, rdi	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x400390a	          0x4889c7	                            mov rdi, rax	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x400390d	      0xe817eeffff	                call sym.grab_tag_values	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x4003912	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003916	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400391a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400391e	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003921	        0x488b45f8	                mov rax, qword [rbp - 8]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003925	          0x4989f8	                             mov r8, rdi	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003928	          0x4889c7	                            mov rdi, rax	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400392b	      0xe886fbffff	         call sym.grab_sub_body_contents	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4003930	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003934	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003938	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x400393c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x400393f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003943	          0x4989f9	                             mov r9, rdi	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003946	          0x4989f0	                             mov r8, rsi	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003949	          0x4889c6	                            mov rsi, rax	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x400394c	      0xbf00000000	                              mov edi, 0	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003951	      0xe814f5ffff	                    call sym.grab_person	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4003956	      0xe9ae000000	                           jmp 0x4003a09	      1216	ref-filter.c	FUNCTION_47	SWITCH_1
0x400395b	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x400395f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x4003963	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x4003967	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x400396a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x400396e	          0x4989f8	                             mov r8, rdi	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x4003971	          0x4889c7	                            mov rdi, rax	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x4003974	      0xe814efffff	             call sym.grab_commit_values	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x4003979	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400397d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003981	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003985	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003988	        0x488b45f8	                mov rax, qword [rbp - 8]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400398c	          0x4989f8	                             mov r8, rdi	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400398f	          0x4889c7	                            mov rdi, rax	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003992	      0xe81ffbffff	         call sym.grab_sub_body_contents	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4003997	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400399b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400399f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039a3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039aa	          0x4989f9	                             mov r9, rdi	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039ad	          0x4989f0	                             mov r8, rsi	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039b0	          0x4889c6	                            mov rsi, rax	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039b3	      0xbf00000000	                              mov edi, 0	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039b8	      0xe8adf4ffff	                    call sym.grab_person	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x40039bd	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039c1	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039c5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039c9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039d0	          0x4989f9	                             mov r9, rdi	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039d3	          0x4989f0	                             mov r8, rsi	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039d6	          0x4889c6	                            mov rsi, rax	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039d9	      0xbf00000000	                              mov edi, 0	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039de	      0xe887f4ffff	                    call sym.grab_person	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x40039e3	            0xeb24	                           jmp 0x4003a09	      1222	ref-filter.c	FUNCTION_47	SWITCH_1
0x40039e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039e9	           0xfb600	                   movzx eax, byte [rax]	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039ec	            0xd0e8	                               shr al, 1	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039ee	          0x83e007	                              and eax, 7	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039f1	           0xfb6c0	                           movzx eax, al	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039f4	            0x89c6	                            mov esi, eax	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039f6	      0xbf00000000	                              mov edi, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x40039fb	      0xb800000000	                              mov eax, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4003a00	      0xe800000000	                          call 0x4003a05	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4003a05	              0x90	                                     nop	      1225	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003a06	            0xeb01	                           jmp 0x4003a09	      1225	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003a08	              0x90	                                     nop	      1228	ref-filter.c	FUNCTION_47	SWITCH_1
0x4003a09	              0x90	                                     nop	      1232	ref-filter.c	FUNCTION_47
0x4003a0a	              0xc9	                                   leave	      1232	ref-filter.c	FUNCTION_47
0x4003a0b	              0xc3	                                     ret	      1232	ref-filter.c	FUNCTION_47
end_atom_handler	WHILE,0:FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	70
0x400212d	              0x55	                                push rbp	       717	ref-filter.c	FUNCTION_28
0x400212e	          0x4889e5	                            mov rbp, rsp	       717	ref-filter.c	FUNCTION_28
0x4002131	        0x4883ec50	                           sub rsp, 0x50	       717	ref-filter.c	FUNCTION_28
0x4002135	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       717	ref-filter.c	FUNCTION_28
0x4002139	        0x488975c0	             mov qword [rbp - 0x40], rsi	       717	ref-filter.c	FUNCTION_28
0x400213d	        0x488955b8	             mov qword [rbp - 0x48], rdx	       717	ref-filter.c	FUNCTION_28
0x4002141	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	ref-filter.c	FUNCTION_28
0x400214a	        0x488945f8	                mov qword [rbp - 8], rax	       717	ref-filter.c	FUNCTION_28
0x400214e	            0x31c0	                            xor eax, eax	       717	ref-filter.c	FUNCTION_28
0x4002150	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       718	ref-filter.c	FUNCTION_28
0x4002154	        0x488b4008	                mov rax, qword [rax + 8]	       718	ref-filter.c	FUNCTION_28
0x4002158	        0x488945d8	             mov qword [rbp - 0x28], rax	       718	ref-filter.c	FUNCTION_28
0x400215c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       719	ref-filter.c	FUNCTION_28
0x4002164	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       719	ref-filter.c	FUNCTION_28
0x400216c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       719	ref-filter.c	FUNCTION_28
0x4002174	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       721	ref-filter.c	FUNCTION_28	IF_1
0x4002178	        0x488b4020	            mov rax, qword [rax + 0x20] 	       721	ref-filter.c	FUNCTION_28	IF_1
0x400217c	          0x4885c0	                           test rax, rax	       721	ref-filter.c	FUNCTION_28	IF_1
0x400217f	            0x7528	                           jne 0x40021a9	       721	ref-filter.c	FUNCTION_28	IF_1
0x4002181	      0xbf00000000	                              mov edi, 0	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4002186	      0xe812e3ffff	                               call sym.	       722	ref-filter.c	FUNCTION_28	CALL_2
0x400218b	          0x4889c2	                            mov rdx, rax	       722	ref-filter.c	FUNCTION_28	CALL_2
0x400218e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4002192	      0xbeffffffff	                     mov esi, 0xffffffff	       722	ref-filter.c	FUNCTION_28	CALL_2
0x4002197	          0x4889c7	                            mov rdi, rax	       722	ref-filter.c	FUNCTION_28	CALL_2
0x400219a	      0xb800000000	                              mov eax, 0	       722	ref-filter.c	FUNCTION_28	CALL_2
0x400219f	      0xe8b0e4ffff	                call sym.strbuf_addf_ret	       722	ref-filter.c	FUNCTION_28	CALL_2
0x40021a4	      0xe985000000	                           jmp 0x400222e	       722	ref-filter.c	FUNCTION_28	CALL_2
0x40021a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021ad	        0x488b4020	            mov rax, qword [rax + 0x20] 	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021b1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021b5	        0x4883c208	                              add rdx, 8	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021b9	          0x4889d7	                            mov rdi, rdx	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021bc	            0xffd0	                                call rax	       723	ref-filter.c	FUNCTION_28	CALL_3
0x40021be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       726	ref-filter.c	FUNCTION_28
0x40021c2	        0x488b4008	                mov rax, qword [rax + 8]	       726	ref-filter.c	FUNCTION_28
0x40021c6	        0x488945d8	             mov qword [rbp - 0x28], rax	       726	ref-filter.c	FUNCTION_28
0x40021ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       733	ref-filter.c	FUNCTION_28	IF_2
0x40021ce	          0x488b00	                    mov rax, qword [rax]	       733	ref-filter.c	FUNCTION_28	IF_2
0x40021d1	          0x488b00	                    mov rax, qword [rax]	       733	ref-filter.c	FUNCTION_28	IF_2
0x40021d4	          0x4885c0	                           test rax, rax	       733	ref-filter.c	FUNCTION_28	IF_2
0x40021d7	            0x7534	                           jne 0x400220d	       733	ref-filter.c	FUNCTION_28	IF_2
0x40021d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021dd	            0x8b10	                    mov edx, dword [rax]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021e3	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021e7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021eb	          0x4889ce	                            mov rsi, rcx	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021ee	          0x4889c7	                            mov rdi, rax	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021f1	      0xe8a8f7ffff	               call sym.quote_formatting	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x40021f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x40021fa	        0x488d5008	                      lea rdx, [rax + 8]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x40021fe	        0x488d45e0	                   lea rax, [rbp - 0x20]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x4002202	          0x4889c6	                            mov rsi, rax	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x4002205	          0x4889d7	                            mov rdi, rdx	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x4002208	      0xe889e0ffff	                    call sym.strbuf_swap	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x400220d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       737	ref-filter.c	FUNCTION_28	CALL_6
0x4002211	          0x4889c7	                            mov rdi, rax	       737	ref-filter.c	FUNCTION_28	CALL_6
0x4002214	      0xe800000000	                          call 0x4002219	       737	ref-filter.c	FUNCTION_28	CALL_6
0x4002219	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       738	ref-filter.c	FUNCTION_28	CALL_7
0x400221d	        0x4883c008	                              add rax, 8	       738	ref-filter.c	FUNCTION_28	CALL_7
0x4002221	          0x4889c7	                            mov rdi, rax	       738	ref-filter.c	FUNCTION_28	CALL_7
0x4002224	      0xe8c5f8ffff	              call sym.pop_stack_element	       738	ref-filter.c	FUNCTION_28	CALL_7
0x4002229	      0xb800000000	                              mov eax, 0	       739	ref-filter.c	FUNCTION_28
0x400222e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       740	ref-filter.c	FUNCTION_28
0x4002232	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       740	ref-filter.c	FUNCTION_28
0x400223b	            0x7405	                            je 0x4002242	       740	ref-filter.c	FUNCTION_28
0x400223d	      0xe800000000	                          call 0x4002242	       740	ref-filter.c	FUNCTION_28
0x4002242	              0xc9	                                   leave	       740	ref-filter.c	FUNCTION_28
0x4002243	              0xc3	                                     ret	       740	ref-filter.c	FUNCTION_28
grab_date	WHILE,0:FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,4:ELSE,0	89
0x4002cfe	              0x55	                                push rbp	       970	ref-filter.c	FUNCTION_41
0x4002cff	          0x4889e5	                            mov rbp, rsp	       970	ref-filter.c	FUNCTION_41
0x4002d02	        0x4883ec70	                           sub rsp, 0x70	       970	ref-filter.c	FUNCTION_41
0x4002d06	        0x48897da8	             mov qword [rbp - 0x58], rdi	       970	ref-filter.c	FUNCTION_41
0x4002d0a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       970	ref-filter.c	FUNCTION_41
0x4002d0e	        0x48895598	             mov qword [rbp - 0x68], rdx	       970	ref-filter.c	FUNCTION_41
0x4002d12	    0x64488b042528	                mov rax, qword fs:[0x28]	       970	ref-filter.c	FUNCTION_41
0x4002d1b	        0x488945f8	                mov qword [rbp - 8], rax	       970	ref-filter.c	FUNCTION_41
0x4002d1f	            0x31c0	                            xor eax, eax	       970	ref-filter.c	FUNCTION_41
0x4002d21	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       971	ref-filter.c	FUNCTION_41	CALL_1
0x4002d25	      0xbe00000000	                              mov esi, 0	       971	ref-filter.c	FUNCTION_41	CALL_1
0x4002d2a	          0x4889c7	                            mov rdi, rax	       971	ref-filter.c	FUNCTION_41	CALL_1
0x4002d2d	      0xe800000000	                          call 0x4002d32	       971	ref-filter.c	FUNCTION_41	CALL_1
0x4002d32	        0x488945c0	             mov qword [rbp - 0x40], rax	       971	ref-filter.c	FUNCTION_41	CALL_1
0x4002d36	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       975	ref-filter.c	FUNCTION_41
0x4002d3e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       975	ref-filter.c	FUNCTION_41
0x4002d46	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       975	ref-filter.c	FUNCTION_41
0x4002d4e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       984	ref-filter.c	FUNCTION_41	CALL_2
0x4002d52	      0xbe3a000000	                           mov esi, 0x3a	       984	ref-filter.c	FUNCTION_41	CALL_2
0x4002d57	          0x4889c7	                            mov rdi, rax	       984	ref-filter.c	FUNCTION_41	CALL_2
0x4002d5a	      0xe800000000	                          call 0x4002d5f	       984	ref-filter.c	FUNCTION_41	CALL_2
0x4002d5f	        0x488945c8	             mov qword [rbp - 0x38], rax	       984	ref-filter.c	FUNCTION_41	CALL_2
0x4002d63	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       985	ref-filter.c	FUNCTION_41	IF_1
0x4002d68	            0x7418	                            je 0x4002d82	       985	ref-filter.c	FUNCTION_41	IF_1
0x4002d6a	      0x488345c801	               add qword [rbp - 0x38], 1	       986	ref-filter.c	FUNCTION_41	IF_1
0x4002d6f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x4002d73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x4002d77	          0x4889d6	                            mov rsi, rdx	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x4002d7a	          0x4889c7	                            mov rdi, rax	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x4002d7d	      0xe800000000	                          call 0x4002d82	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x4002d82	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       990	ref-filter.c	FUNCTION_41	IF_2
0x4002d87	     0xf84a9000000	                            je 0x4002e36	       990	ref-filter.c	FUNCTION_41	IF_2
0x4002d8d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       992	ref-filter.c	FUNCTION_41
0x4002d91	        0x488d4802	                      lea rcx, [rax + 2]	       992	ref-filter.c	FUNCTION_41
0x4002d95	        0x488d45b8	                   lea rax, [rbp - 0x48]	       992	ref-filter.c	FUNCTION_41
0x4002d99	      0xba0a000000	                            mov edx, 0xa	       992	ref-filter.c	FUNCTION_41
0x4002d9e	          0x4889c6	                            mov rsi, rax	       992	ref-filter.c	FUNCTION_41
0x4002da1	          0x4889cf	                            mov rdi, rcx	       992	ref-filter.c	FUNCTION_41
0x4002da4	      0xe800000000	                          call 0x4002da9	       992	ref-filter.c	FUNCTION_41
0x4002da9	        0x488945d0	             mov qword [rbp - 0x30], rax	       992	ref-filter.c	FUNCTION_41
0x4002dad	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	       993	ref-filter.c	FUNCTION_41	IF_3
0x4002db2	     0xf8481000000	                            je 0x4002e39	       993	ref-filter.c	FUNCTION_41	IF_3
0x4002db8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dbc	      0xba0a000000	                            mov edx, 0xa	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dc1	      0xbe00000000	                              mov esi, 0	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dc6	          0x4889c7	                            mov rdi, rax	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dc9	      0xe800000000	                          call 0x4002dce	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dce	        0x488945d8	             mov qword [rbp - 0x28], rax	       995	ref-filter.c	FUNCTION_41	CALL_4
0x4002dd2	    0x48b800000000	          movabs rax, 0x8000000000000000	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002ddc	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002de0	            0x7410	                            je 0x4002df2	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002de2	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002dec	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002df0	            0x750c	                           jne 0x4002dfe	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002df2	      0xe800000000	                          call 0x4002df7	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002df7	            0x8b00	                    mov eax, dword [rax]	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002df9	          0x83f822	                           cmp eax, 0x22	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002dfc	            0x743e	                            je 0x4002e3c	       996	ref-filter.c	FUNCTION_41	IF_4
0x4002dfe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e02	            0x89c1	                            mov ecx, eax	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e04	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e0c	            0x89ce	                            mov esi, ecx	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e0e	          0x4889c7	                            mov rdi, rax	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e11	      0xe800000000	                          call 0x4002e16	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e16	          0x4889c7	                            mov rdi, rax	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e19	      0xe800000000	                          call 0x4002e1e	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e1e	          0x4889c2	                            mov rdx, rax	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e21	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e25	          0x488910	                    mov qword [rax], rdx	       998	ref-filter.c	FUNCTION_41	CALL_6
0x4002e28	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       999	ref-filter.c	FUNCTION_41
0x4002e2c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       999	ref-filter.c	FUNCTION_41
0x4002e30	        0x48895010	             mov qword [rax + 0x10], rdx	       999	ref-filter.c	FUNCTION_41
0x4002e34	            0xeb1e	                           jmp 0x4002e54	       999	ref-filter.c	FUNCTION_41
0x4002e36	              0x90	                                     nop	       991	ref-filter.c	FUNCTION_41	IF_2
0x4002e37	            0xeb04	                           jmp 0x4002e3d	       991	ref-filter.c	FUNCTION_41	IF_2
0x4002e39	              0x90	                                     nop	       994	ref-filter.c	FUNCTION_41	IF_3
0x4002e3a	            0xeb01	                           jmp 0x4002e3d	       994	ref-filter.c	FUNCTION_41	IF_3
0x4002e3c	              0x90	                                     nop	       997	ref-filter.c	FUNCTION_41	IF_4
0x4002e3d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1002	ref-filter.c	FUNCTION_41
0x4002e41	    0x48c700000000	                      mov qword [rax], 0	      1002	ref-filter.c	FUNCTION_41
0x4002e48	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1003	ref-filter.c	FUNCTION_41
0x4002e4c	    0x48c740100000	               mov qword [rax + 0x10], 0	      1003	ref-filter.c	FUNCTION_41
0x4002e54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ref-filter.c	FUNCTION_41
0x4002e58	    0x644833042528	                xor rax, qword fs:[0x28]	      1004	ref-filter.c	FUNCTION_41
0x4002e61	            0x7405	                            je 0x4002e68	      1004	ref-filter.c	FUNCTION_41
0x4002e63	      0xe800000000	                          call 0x4002e68	      1004	ref-filter.c	FUNCTION_41
0x4002e68	              0xc9	                                   leave	      1004	ref-filter.c	FUNCTION_41
0x4002e69	              0xc3	                                     ret	      1004	ref-filter.c	FUNCTION_41
grab_tag_values	WHILE,0:FOR,1:CALL,6:DO,0:functions,0:SWITCH,0:IF,5:ELSE,2	103
0x4002729	              0x55	                                push rbp	       857	ref-filter.c	FUNCTION_34
0x400272a	          0x4889e5	                            mov rbp, rsp	       857	ref-filter.c	FUNCTION_34
0x400272d	        0x4883ec50	                           sub rsp, 0x50	       857	ref-filter.c	FUNCTION_34
0x4002731	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       857	ref-filter.c	FUNCTION_34
0x4002735	          0x8975d4	             mov dword [rbp - 0x2c], esi	       857	ref-filter.c	FUNCTION_34
0x4002738	        0x488955c8	             mov qword [rbp - 0x38], rdx	       857	ref-filter.c	FUNCTION_34
0x400273c	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       857	ref-filter.c	FUNCTION_34
0x4002740	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       857	ref-filter.c	FUNCTION_34
0x4002744	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       859	ref-filter.c	FUNCTION_34
0x4002748	        0x488945f0	             mov qword [rbp - 0x10], rax	       859	ref-filter.c	FUNCTION_34
0x400274c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002753	      0xe923010000	                           jmp 0x400287b	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002758	    0x488b0d000000	            mov rcx, qword [0x0400275f] 	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400275f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002762	          0x4863d0	                         movsxd rdx, eax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002765	          0x4889d0	                            mov rax, rdx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002768	          0x4801c0	                            add rax, rax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400276b	          0x4801d0	                            add rax, rdx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400276e	        0x48c1e005	                              shl rax, 5	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002772	          0x4801c8	                            add rax, rcx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002775	          0x488b00	                    mov rax, qword [rax]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002778	        0x488945e8	             mov qword [rbp - 0x18], rax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400277c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       863	ref-filter.c	FUNCTION_34	FOR_1
0x400277f	            0x4898	                                    cdqe	       863	ref-filter.c	FUNCTION_34	FOR_1
0x4002781	        0x48c1e005	                              shl rax, 5	       863	ref-filter.c	FUNCTION_34	FOR_1
0x4002785	          0x4889c2	                            mov rdx, rax	       863	ref-filter.c	FUNCTION_34	FOR_1
0x4002788	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       863	ref-filter.c	FUNCTION_34	FOR_1
0x400278c	          0x4801d0	                            add rax, rdx	       863	ref-filter.c	FUNCTION_34	FOR_1
0x400278f	        0x488945f8	                mov qword [rbp - 8], rax	       863	ref-filter.c	FUNCTION_34	FOR_1
0x4002793	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002797	           0xf95c2	                                setne dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400279a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400279e	           0xfb600	                   movzx eax, byte [rax]	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027a1	            0x3c2a	                            cmp al, 0x2a	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027a3	           0xf94c0	                                 sete al	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027a6	            0x31d0	                            xor eax, edx	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027a8	            0x84c0	                             test al, al	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027aa	     0xf85c6000000	                           jne 0x4002876	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x40027b0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       866	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x40027b4	            0x7405	                            je 0x40027bb	       866	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x40027b6	      0x488345e801	               add qword [rbp - 0x18], 1	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x40027bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027bf	      0xbe00000000	                              mov esi, 0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027c4	          0x4889c7	                            mov rdi, rax	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027c7	      0xe800000000	                          call 0x40027cc	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027cc	            0x85c0	                           test eax, eax	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027ce	            0x7514	                           jne 0x40027e4	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x40027d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027d4	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027dc	          0x488910	                    mov qword [rax], rdx	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027df	      0xe993000000	                           jmp 0x4002877	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x40027e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027e8	      0xbe00000000	                              mov esi, 0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027ed	          0x4889c7	                            mov rdi, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027f0	      0xe800000000	                          call 0x40027f5	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027f5	            0x85c0	                           test eax, eax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027f7	            0x7533	                           jne 0x400282c	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40027fd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x4002801	          0x4885c0	                           test rax, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x4002804	            0x7426	                            je 0x400282c	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x4002806	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x400280a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x400280e	           0xfb600	                   movzx eax, byte [rax]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002811	            0xd0e8	                               shr al, 1	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002813	          0x83e007	                              and eax, 7	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002816	           0xfb6c0	                           movzx eax, al	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002819	            0x89c7	                            mov edi, eax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x400281b	      0xe800000000	                          call 0x4002820	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002820	          0x4889c2	                            mov rdx, rax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002823	        0x488b45f8	                mov rax, qword [rbp - 8]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4002827	          0x488910	                    mov qword [rax], rdx	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x400282a	            0xeb4b	                           jmp 0x4002877	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x400282c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002830	      0xbe00000000	                              mov esi, 0	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002835	          0x4889c7	                            mov rdi, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002838	      0xe800000000	                          call 0x400283d	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x400283d	            0x85c0	                           test eax, eax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x400283f	            0x7536	                           jne 0x4002877	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002841	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002845	        0x488b4018	            mov rax, qword [rax + 0x18] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x4002849	          0x4885c0	                           test rax, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x400284c	            0x7429	                            je 0x4002877	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x400284e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002852	        0x488b4018	            mov rax, qword [rax + 0x18] 	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002856	        0x4883c004	                              add rax, 4	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x400285a	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x400285d	      0xe800000000	                          call 0x4002862	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002862	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002865	      0xe800000000	                          call 0x400286a	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x400286a	          0x4889c2	                            mov rdx, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x400286d	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002871	          0x488910	                    mov qword [rax], rdx	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002874	            0xeb01	                           jmp 0x4002877	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x4002876	              0x90	                                     nop	       865	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002877	        0x8345e401	               add dword [rbp - 0x1c], 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400287b	    0x8b0500000000	            mov eax, dword [0x04002881] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002881	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002884	     0xf8ccefeffff	                            jl 0x4002758	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400288a	              0x90	                                     nop	       875	ref-filter.c	FUNCTION_34
0x400288b	              0xc9	                                   leave	       875	ref-filter.c	FUNCTION_34
0x400288c	              0xc3	                                     ret	       875	ref-filter.c	FUNCTION_34
align_atom_handler	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	23
0x4001c01	              0x55	                                push rbp	       591	ref-filter.c	FUNCTION_22
0x4001c02	          0x4889e5	                            mov rbp, rsp	       591	ref-filter.c	FUNCTION_22
0x4001c05	        0x4883ec30	                           sub rsp, 0x30	       591	ref-filter.c	FUNCTION_22
0x4001c09	        0x48897de8	             mov qword [rbp - 0x18], rdi	       591	ref-filter.c	FUNCTION_22
0x4001c0d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       591	ref-filter.c	FUNCTION_22
0x4001c11	        0x488955d8	             mov qword [rbp - 0x28], rdx	       591	ref-filter.c	FUNCTION_22
0x4001c15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4001c19	        0x4883c008	                              add rax, 8	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4001c1d	          0x4889c7	                            mov rdi, rax	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4001c20	      0xe879feffff	             call sym.push_stack_element	       594	ref-filter.c	FUNCTION_22	CALL_1
0x4001c25	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       595	ref-filter.c	FUNCTION_22
0x4001c29	        0x488b4008	                mov rax, qword [rax + 8]	       595	ref-filter.c	FUNCTION_22
0x4001c2d	        0x488945f8	                mov qword [rbp - 8], rax	       595	ref-filter.c	FUNCTION_22
0x4001c31	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	ref-filter.c	FUNCTION_22
0x4001c35	    0x48c740200000	               mov qword [rax + 0x20], 0	       596	ref-filter.c	FUNCTION_22
0x4001c3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	ref-filter.c	FUNCTION_22
0x4001c41	        0x488b4018	            mov rax, qword [rax + 0x18] 	       597	ref-filter.c	FUNCTION_22
0x4001c45	        0x488d5010	                   lea rdx, [rax + 0x10]	       597	ref-filter.c	FUNCTION_22
0x4001c49	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	ref-filter.c	FUNCTION_22
0x4001c4d	        0x48895028	             mov qword [rax + 0x28], rdx	       597	ref-filter.c	FUNCTION_22
0x4001c51	      0xb800000000	                              mov eax, 0	       598	ref-filter.c	FUNCTION_22
0x4001c56	              0xc9	                                   leave	       599	ref-filter.c	FUNCTION_22
0x4001c57	              0xc3	                                     ret	       599	ref-filter.c	FUNCTION_22
cmp_ref_sorting	WHILE,0:FOR,0:CALL,8:DO,0:functions,0:SWITCH,0:IF,6:ELSE,4	129
0x400609a	              0x55	                                push rbp	      2152	ref-filter.c	FUNCTION_79
0x400609b	          0x4889e5	                            mov rbp, rsp	      2152	ref-filter.c	FUNCTION_79
0x400609e	        0x4883ec60	                           sub rsp, 0x60	      2152	ref-filter.c	FUNCTION_79
0x40060a2	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2152	ref-filter.c	FUNCTION_79
0x40060a6	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2152	ref-filter.c	FUNCTION_79
0x40060aa	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2152	ref-filter.c	FUNCTION_79
0x40060ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      2152	ref-filter.c	FUNCTION_79
0x40060b7	        0x488945f8	                mov qword [rbp - 8], rax	      2152	ref-filter.c	FUNCTION_79
0x40060bb	            0x31c0	                            xor eax, eax	      2152	ref-filter.c	FUNCTION_79
0x40060bd	    0x488b0d000000	            mov rcx, qword [0x040060c4] 	      2155	ref-filter.c	FUNCTION_79
0x40060c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2155	ref-filter.c	FUNCTION_79
0x40060c8	          0x8b4008	                mov eax, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x40060cb	          0x4863d0	                         movsxd rdx, eax	      2155	ref-filter.c	FUNCTION_79
0x40060ce	          0x4889d0	                            mov rax, rdx	      2155	ref-filter.c	FUNCTION_79
0x40060d1	          0x4801c0	                            add rax, rax	      2155	ref-filter.c	FUNCTION_79
0x40060d4	          0x4801d0	                            add rax, rdx	      2155	ref-filter.c	FUNCTION_79
0x40060d7	        0x48c1e005	                              shl rax, 5	      2155	ref-filter.c	FUNCTION_79
0x40060db	          0x4801c8	                            add rax, rcx	      2155	ref-filter.c	FUNCTION_79
0x40060de	          0x8b4008	                mov eax, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x40060e1	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2155	ref-filter.c	FUNCTION_79
0x40060e4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2157	ref-filter.c	FUNCTION_79
0x40060ec	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2157	ref-filter.c	FUNCTION_79
0x40060f4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2157	ref-filter.c	FUNCTION_79
0x40060fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006100	          0x8b7008	                mov esi, dword [rax + 8]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006103	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006107	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400610b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400610f	          0x4889c7	                            mov rdi, rax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006112	      0xe817eaffff	             call sym.get_ref_atom_value	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006117	            0x85c0	                           test eax, eax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x4006119	            0x7416	                            je 0x4006131	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x400611b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x400611f	          0x4889c6	                            mov rsi, rax	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4006122	      0xbf00000000	                              mov edi, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4006127	      0xb800000000	                              mov eax, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x400612c	      0xe800000000	                          call 0x4006131	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x4006131	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006135	          0x8b7008	                mov esi, dword [rax + 8]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006138	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400613c	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006140	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006144	          0x4889c7	                            mov rdi, rax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006147	      0xe8e2e9ffff	             call sym.get_ref_atom_value	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400614c	            0x85c0	                           test eax, eax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x400614e	            0x7416	                            je 0x4006166	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x4006150	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4006154	          0x4889c6	                            mov rsi, rax	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4006157	      0xbf00000000	                              mov edi, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x400615c	      0xb800000000	                              mov eax, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4006161	      0xe800000000	                          call 0x4006166	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x4006166	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x400616a	          0x4889c7	                            mov rdi, rax	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x400616d	      0xe800000000	                          call 0x4006172	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x4006172	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2164	ref-filter.c	FUNCTION_79
0x4006176	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2164	ref-filter.c	FUNCTION_79
0x400617a	          0x83e002	                              and eax, 2	      2164	ref-filter.c	FUNCTION_79
0x400617d	            0x84c0	                             test al, al	      2164	ref-filter.c	FUNCTION_79
0x400617f	            0x7407	                            je 0x4006188	      2164	ref-filter.c	FUNCTION_79
0x4006181	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x4006186	            0xeb05	                           jmp 0x400618d	      2164	ref-filter.c	FUNCTION_79
0x4006188	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x400618d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2164	ref-filter.c	FUNCTION_79
0x4006191	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2165	ref-filter.c	FUNCTION_79	IF_3
0x4006195	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2165	ref-filter.c	FUNCTION_79	IF_3
0x4006199	          0x83e004	                              and eax, 4	      2165	ref-filter.c	FUNCTION_79	IF_3
0x400619c	            0x84c0	                             test al, al	      2165	ref-filter.c	FUNCTION_79	IF_3
0x400619e	            0x7421	                            je 0x40061c1	      2165	ref-filter.c	FUNCTION_79	IF_3
0x40061a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061a4	          0x488b10	                    mov rdx, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061ab	          0x488b00	                    mov rax, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061ae	          0x4889d6	                            mov rsi, rdx	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061b1	          0x4889c7	                            mov rdi, rax	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061b4	      0xe800000000	                          call 0x40061b9	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061b9	          0x8945c0	             mov dword [rbp - 0x40], eax	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061bc	      0xe980000000	                           jmp 0x4006241	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x40061c1	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061c5	            0x751f	                           jne 0x40061e6	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061cb	          0x488b08	                    mov rcx, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061d2	          0x488b10	                    mov rdx, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061d9	          0x4889ce	                            mov rsi, rcx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061dc	          0x4889d7	                            mov rdi, rdx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061df	            0xffd0	                                call rax	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061e1	          0x8945c0	             mov dword [rbp - 0x40], eax	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061e4	            0xeb5b	                           jmp 0x4006241	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40061e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061ea	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061f6	          0x4839c2	                            cmp rdx, rax	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061f9	            0x7309	                           jae 0x4006204	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x40061fb	    0xc745c0ffffff	     mov dword [rbp - 0x40], 0xffffffff 	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4006202	            0xeb3d	                           jmp 0x4006241	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4006204	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006208	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400620c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006210	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006214	          0x4839c2	                            cmp rdx, rax	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006217	            0x7521	                           jne 0x400623a	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006219	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400621d	        0x488d4838	                   lea rcx, [rax + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006221	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006225	        0x488d5038	                   lea rdx, [rax + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006229	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400622d	          0x4889ce	                            mov rsi, rcx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006230	          0x4889d7	                            mov rdi, rdx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006233	            0xffd0	                                call rax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006235	          0x8945c0	             mov dword [rbp - 0x40], eax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4006238	            0xeb07	                           jmp 0x4006241	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400623a	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      2175	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_4
0x4006241	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2178	ref-filter.c	FUNCTION_79
0x4006245	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2178	ref-filter.c	FUNCTION_79
0x4006249	          0x83e001	                              and eax, 1	      2178	ref-filter.c	FUNCTION_79
0x400624c	            0x84c0	                             test al, al	      2178	ref-filter.c	FUNCTION_79
0x400624e	            0x7407	                            je 0x4006257	      2178	ref-filter.c	FUNCTION_79
0x4006250	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2178	ref-filter.c	FUNCTION_79
0x4006253	            0xf7d8	                                 neg eax	      2178	ref-filter.c	FUNCTION_79
0x4006255	            0xeb03	                           jmp 0x400625a	      2178	ref-filter.c	FUNCTION_79
0x4006257	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2178	ref-filter.c	FUNCTION_79
0x400625a	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2179	ref-filter.c	FUNCTION_79
0x400625e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2179	ref-filter.c	FUNCTION_79
0x4006267	            0x7405	                            je 0x400626e	      2179	ref-filter.c	FUNCTION_79
0x4006269	      0xe800000000	                          call 0x400626e	      2179	ref-filter.c	FUNCTION_79
0x400626e	              0xc9	                                   leave	      2179	ref-filter.c	FUNCTION_79
0x400626f	              0xc3	                                     ret	      2179	ref-filter.c	FUNCTION_79
hashcmp	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	13
0x40004c9	              0x55	                                push rbp	       974	cache.h	FUNCTION_98
0x40004ca	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_98
0x40004cd	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_98
0x40004d1	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_98
0x40004d5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_98
0x40004d9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_98	CALL_1
0x40004dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_98	CALL_1
0x40004e1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_98	CALL_1
0x40004e6	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_98	CALL_1
0x40004e9	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_98	CALL_1
0x40004ec	      0xe800000000	                          call 0x40004f1	       975	cache.h	FUNCTION_98	CALL_1
0x40004f1	              0xc9	                                   leave	       976	cache.h	FUNCTION_98
0x40004f2	              0xc3	                                     ret	       976	cache.h	FUNCTION_98
parse_ref_filter_atom	WHILE,0:FOR,2:CALL,13:DO,0:functions,0:SWITCH,0:IF,10:ELSE,0	311
0x4001544	              0x55	                                push rbp	       455	ref-filter.c	FUNCTION_16
0x4001545	          0x4889e5	                            mov rbp, rsp	       455	ref-filter.c	FUNCTION_16
0x4001548	              0x53	                                push rbx	       455	ref-filter.c	FUNCTION_16
0x4001549	        0x4883ec58	                           sub rsp, 0x58	       455	ref-filter.c	FUNCTION_16
0x400154d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       455	ref-filter.c	FUNCTION_16
0x4001551	        0x488975b0	             mov qword [rbp - 0x50], rsi	       455	ref-filter.c	FUNCTION_16
0x4001555	        0x488955a8	             mov qword [rbp - 0x58], rdx	       455	ref-filter.c	FUNCTION_16
0x4001559	        0x48894da0	             mov qword [rbp - 0x60], rcx	       455	ref-filter.c	FUNCTION_16
0x400155d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       460	ref-filter.c	FUNCTION_16
0x4001561	        0x488945e0	             mov qword [rbp - 0x20], rax	       460	ref-filter.c	FUNCTION_16
0x4001565	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	ref-filter.c	FUNCTION_16	IF_1
0x4001569	           0xfb600	                   movzx eax, byte [rax]	       461	ref-filter.c	FUNCTION_16	IF_1
0x400156c	            0x3c2a	                            cmp al, 0x2a	       461	ref-filter.c	FUNCTION_16	IF_1
0x400156e	            0x750f	                           jne 0x400157f	       461	ref-filter.c	FUNCTION_16	IF_1
0x4001570	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	ref-filter.c	FUNCTION_16	IF_1
0x4001574	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       461	ref-filter.c	FUNCTION_16	IF_1
0x4001578	            0x7305	                           jae 0x400157f	       461	ref-filter.c	FUNCTION_16	IF_1
0x400157a	      0x488345e001	               add qword [rbp - 0x20], 1	       462	ref-filter.c	FUNCTION_16	IF_1
0x400157f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001583	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001587	            0x7744	                            ja 0x40015cd	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001589	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       465	ref-filter.c	FUNCTION_16	IF_2
0x400158d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       465	ref-filter.c	FUNCTION_16	IF_2
0x4001591	          0x4829c2	                            sub rdx, rax	       465	ref-filter.c	FUNCTION_16	IF_2
0x4001594	          0x4889d0	                            mov rax, rdx	       465	ref-filter.c	FUNCTION_16	IF_2
0x4001597	            0x89c3	                            mov ebx, eax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x4001599	      0xbf00000000	                              mov edi, 0	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x400159e	      0xe8faeeffff	                               call sym.	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015a3	          0x4889c6	                            mov rsi, rax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015a6	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015aa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015ae	          0x4989d0	                             mov r8, rdx	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015b1	            0x89d9	                            mov ecx, ebx	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015b3	          0x4889f2	                            mov rdx, rsi	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015b6	      0xbeffffffff	                     mov esi, 0xffffffff	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015bb	          0x4889c7	                            mov rdi, rax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015be	      0xb800000000	                              mov eax, 0	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015c3	      0xe88cf0ffff	                call sym.strbuf_addf_ret	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015c8	      0xe9ca030000	                           jmp 0x4001997	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x40015cd	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       468	ref-filter.c	FUNCTION_16	FOR_1
0x40015d4	      0xe98b000000	                           jmp 0x4001664	       468	ref-filter.c	FUNCTION_16	FOR_1
0x40015d9	    0x488b0d000000	            mov rcx, qword [0x040015e0] 	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015e0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015e3	          0x4863d0	                         movsxd rdx, eax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015e6	          0x4889d0	                            mov rax, rdx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015e9	          0x4801c0	                            add rax, rax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015ec	          0x4801d0	                            add rax, rdx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015ef	        0x48c1e005	                              shl rax, 5	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015f3	          0x4801c8	                            add rax, rcx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015f6	          0x488b00	                    mov rax, qword [rax]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015f9	          0x4889c7	                            mov rdi, rax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x40015fc	      0xe800000000	                          call 0x4001601	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4001601	          0x8945d0	             mov dword [rbp - 0x30], eax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4001604	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001607	            0x4898	                                    cdqe	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001609	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400160d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001611	          0x4829d1	                            sub rcx, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001614	          0x4889ca	                            mov rdx, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001617	          0x4839d0	                            cmp rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400161a	            0x7544	                           jne 0x4001660	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400161c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400161f	          0x4863f0	                         movsxd rsi, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001622	    0x488b0d000000	            mov rcx, qword [0x04001629] 	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001629	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400162c	          0x4863d0	                         movsxd rdx, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400162f	          0x4889d0	                            mov rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001632	          0x4801c0	                            add rax, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001635	          0x4801d0	                            add rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001638	        0x48c1e005	                              shl rax, 5	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400163c	          0x4801c8	                            add rax, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400163f	          0x488b00	                    mov rax, qword [rax]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001642	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001646	          0x4889f2	                            mov rdx, rsi	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001649	          0x4889ce	                            mov rsi, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400164c	          0x4889c7	                            mov rdi, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400164f	      0xe800000000	                          call 0x4001654	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001654	            0x85c0	                           test eax, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001656	            0x7508	                           jne 0x4001660	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001658	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       471	ref-filter.c	FUNCTION_16	FOR_1	IF_3
0x400165b	      0xe937030000	                           jmp 0x4001997	       471	ref-filter.c	FUNCTION_16	FOR_1	IF_3
0x4001660	        0x8345cc01	               add dword [rbp - 0x34], 1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001664	    0x8b0500000000	            mov eax, dword [0x0400166a] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400166a	          0x3945cc	            cmp dword [rbp - 0x34], eax 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400166d	     0xf8c66ffffff	                            jl 0x40015d9	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001673	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001677	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400167b	          0x4829c2	                            sub rdx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400167e	          0x4889d0	                            mov rax, rdx	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001681	          0x4889c2	                            mov rdx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001684	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001688	      0xbe3a000000	                           mov esi, 0x3a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400168d	          0x4889c7	                            mov rdi, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001690	      0xe800000000	                          call 0x4001695	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001695	        0x488945e8	             mov qword [rbp - 0x18], rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001699	      0x48837de800	               cmp qword [rbp - 0x18], 0	       481	ref-filter.c	FUNCTION_16
0x400169e	            0x7406	                            je 0x40016a6	       481	ref-filter.c	FUNCTION_16
0x40016a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	ref-filter.c	FUNCTION_16
0x40016a4	            0xeb04	                           jmp 0x40016aa	       481	ref-filter.c	FUNCTION_16
0x40016a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       481	ref-filter.c	FUNCTION_16
0x40016aa	          0x4889c2	                            mov rdx, rax	       481	ref-filter.c	FUNCTION_16
0x40016ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       481	ref-filter.c	FUNCTION_16
0x40016b1	          0x4829c2	                            sub rdx, rax	       481	ref-filter.c	FUNCTION_16
0x40016b4	          0x4889d0	                            mov rax, rdx	       481	ref-filter.c	FUNCTION_16
0x40016b7	          0x8945d4	             mov dword [rbp - 0x2c], eax	       481	ref-filter.c	FUNCTION_16
0x40016ba	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40016c1	            0xeb6b	                           jmp 0x400172e	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40016c3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016c6	          0x4863d0	                         movsxd rdx, eax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016c9	          0x4889d0	                            mov rax, rdx	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016cc	          0x4801c0	                            add rax, rax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016cf	          0x4801d0	                            add rax, rdx	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016d2	        0x48c1e003	                              shl rax, 3	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016d6	    0x480500000000	                              add rax, 0	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016dc	          0x488b00	                    mov rax, qword [rax]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016df	          0x4889c7	                            mov rdi, rax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016e2	      0xe800000000	                          call 0x40016e7	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016e7	          0x8945d8	             mov dword [rbp - 0x28], eax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40016ea	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016ed	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016f0	            0x7538	                           jne 0x400172a	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016f2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016f5	          0x4863f0	                         movsxd rsi, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016f8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016fb	          0x4863d0	                         movsxd rdx, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40016fe	          0x4889d0	                            mov rax, rdx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001701	          0x4801c0	                            add rax, rax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001704	          0x4801d0	                            add rax, rdx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001707	        0x48c1e003	                              shl rax, 3	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400170b	    0x480500000000	                              add rax, 0	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001711	          0x488b00	                    mov rax, qword [rax]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001714	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001718	          0x4889f2	                            mov rdx, rsi	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400171b	          0x4889ce	                            mov rsi, rcx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400171e	          0x4889c7	                            mov rdi, rax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001721	      0xe800000000	                          call 0x4001726	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001726	            0x85c0	                           test eax, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x4001728	            0x740e	                            je 0x4001738	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x400172a	        0x8345cc01	               add dword [rbp - 0x34], 1	       484	ref-filter.c	FUNCTION_16	FOR_2
0x400172e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4001731	          0x83f826	                           cmp eax, 0x26	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4001734	            0x768d	                           jbe 0x40016c3	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4001736	            0xeb01	                           jmp 0x4001739	       484	ref-filter.c	FUNCTION_16	FOR_2
0x4001738	              0x90	                                     nop	       487	ref-filter.c	FUNCTION_16	FOR_2	IF_4
0x4001739	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       490	ref-filter.c	FUNCTION_16	IF_5
0x400173c	          0x83f826	                           cmp eax, 0x26	       490	ref-filter.c	FUNCTION_16	IF_5
0x400173f	            0x7644	                           jbe 0x4001785	       490	ref-filter.c	FUNCTION_16	IF_5
0x4001741	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       492	ref-filter.c	FUNCTION_16	IF_5
0x4001745	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       492	ref-filter.c	FUNCTION_16	IF_5
0x4001749	          0x4829c2	                            sub rdx, rax	       492	ref-filter.c	FUNCTION_16	IF_5
0x400174c	          0x4889d0	                            mov rax, rdx	       492	ref-filter.c	FUNCTION_16	IF_5
0x400174f	            0x89c3	                            mov ebx, eax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001751	      0xbf00000000	                              mov edi, 0	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001756	      0xe842edffff	                               call sym.	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400175b	          0x4889c6	                            mov rsi, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400175e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001762	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001766	          0x4989d0	                             mov r8, rdx	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001769	            0x89d9	                            mov ecx, ebx	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400176b	          0x4889f2	                            mov rdx, rsi	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400176e	      0xbeffffffff	                     mov esi, 0xffffffff	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001773	          0x4889c7	                            mov rdi, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001776	      0xb800000000	                              mov eax, 0	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400177b	      0xe8d4eeffff	                call sym.strbuf_addf_ret	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001780	      0xe912020000	                           jmp 0x4001997	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001785	    0x8b0500000000	            mov eax, dword [0x0400178b] 	       495	ref-filter.c	FUNCTION_16
0x400178b	          0x8945dc	             mov dword [rbp - 0x24], eax	       495	ref-filter.c	FUNCTION_16
0x400178e	    0x8b0500000000	            mov eax, dword [0x04001794] 	       496	ref-filter.c	FUNCTION_16
0x4001794	          0x83c001	                              add eax, 1	       496	ref-filter.c	FUNCTION_16
0x4001797	    0x890500000000	            mov dword [0x0400179d], eax 	       496	ref-filter.c	FUNCTION_16
0x400179d	    0x8b0500000000	            mov eax, dword [0x040017a3] 	       497	ref-filter.c	FUNCTION_16
0x40017a3	            0x4898	                                    cdqe	       497	ref-filter.c	FUNCTION_16
0x40017a5	          0x4889c6	                            mov rsi, rax	       497	ref-filter.c	FUNCTION_16
0x40017a8	      0xbf60000000	                           mov edi, 0x60	       497	ref-filter.c	FUNCTION_16
0x40017ad	      0xe833e9ffff	                        call sym.st_mult	       497	ref-filter.c	FUNCTION_16
0x40017b2	          0x4889c2	                            mov rdx, rax	       497	ref-filter.c	FUNCTION_16
0x40017b5	    0x488b05000000	            mov rax, qword [0x040017bc] 	       497	ref-filter.c	FUNCTION_16
0x40017bc	          0x4889d6	                            mov rsi, rdx	       497	ref-filter.c	FUNCTION_16
0x40017bf	          0x4889c7	                            mov rdi, rax	       497	ref-filter.c	FUNCTION_16
0x40017c2	      0xe800000000	                          call 0x40017c7	       497	ref-filter.c	FUNCTION_16
0x40017c7	    0x488905000000	            mov qword [0x040017ce], rax 	       497	ref-filter.c	FUNCTION_16
0x40017ce	    0x488b0d000000	            mov rcx, qword [0x040017d5] 	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017d5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017d8	          0x4863d0	                         movsxd rdx, eax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017db	          0x4889d0	                            mov rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017de	          0x4801c0	                            add rax, rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017e1	          0x4801d0	                            add rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017e4	        0x48c1e005	                              shl rax, 5	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017e8	        0x488d1c01	                    lea rbx, [rcx + rax]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017ec	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017f4	          0x4829c2	                            sub rdx, rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017f7	          0x4889d0	                            mov rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017fa	          0x4889c2	                            mov rdx, rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x40017fd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001801	          0x4889d6	                            mov rsi, rdx	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001804	          0x4889c7	                            mov rdi, rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001807	      0xe800000000	                          call 0x400180c	       498	ref-filter.c	FUNCTION_16	CALL_10
0x400180c	          0x488903	                    mov qword [rbx], rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x400180f	    0x488b0d000000	            mov rcx, qword [0x04001816] 	       499	ref-filter.c	FUNCTION_16
0x4001816	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       499	ref-filter.c	FUNCTION_16
0x4001819	          0x4863d0	                         movsxd rdx, eax	       499	ref-filter.c	FUNCTION_16
0x400181c	          0x4889d0	                            mov rax, rdx	       499	ref-filter.c	FUNCTION_16
0x400181f	          0x4801c0	                            add rax, rax	       499	ref-filter.c	FUNCTION_16
0x4001822	          0x4801d0	                            add rax, rdx	       499	ref-filter.c	FUNCTION_16
0x4001825	        0x48c1e005	                              shl rax, 5	       499	ref-filter.c	FUNCTION_16
0x4001829	          0x4801c1	                            add rcx, rax	       499	ref-filter.c	FUNCTION_16
0x400182c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       499	ref-filter.c	FUNCTION_16
0x400182f	          0x4863d0	                         movsxd rdx, eax	       499	ref-filter.c	FUNCTION_16
0x4001832	          0x4889d0	                            mov rax, rdx	       499	ref-filter.c	FUNCTION_16
0x4001835	          0x4801c0	                            add rax, rax	       499	ref-filter.c	FUNCTION_16
0x4001838	          0x4801d0	                            add rax, rdx	       499	ref-filter.c	FUNCTION_16
0x400183b	        0x48c1e003	                              shl rax, 3	       499	ref-filter.c	FUNCTION_16
0x400183f	    0x480500000000	                              add rax, 0	       499	ref-filter.c	FUNCTION_16
0x4001845	            0x8b00	                    mov eax, dword [rax]	       499	ref-filter.c	FUNCTION_16
0x4001847	          0x894108	                mov dword [rcx + 8], eax	       499	ref-filter.c	FUNCTION_16
0x400184a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       500	ref-filter.c	FUNCTION_16	IF_6
0x400184f	            0x744c	                            je 0x400189d	       500	ref-filter.c	FUNCTION_16	IF_6
0x4001851	    0x488b0d000000	            mov rcx, qword [0x04001858] 	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001858	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       501	ref-filter.c	FUNCTION_16	IF_6
0x400185b	          0x4863d0	                         movsxd rdx, eax	       501	ref-filter.c	FUNCTION_16	IF_6
0x400185e	          0x4889d0	                            mov rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001861	          0x4801c0	                            add rax, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001864	          0x4801d0	                            add rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001867	        0x48c1e005	                              shl rax, 5	       501	ref-filter.c	FUNCTION_16	IF_6
0x400186b	          0x4801c8	                            add rax, rcx	       501	ref-filter.c	FUNCTION_16	IF_6
0x400186e	          0x488b00	                    mov rax, qword [rax]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001871	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001875	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001879	          0x4829d1	                            sub rcx, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x400187c	          0x4889ca	                            mov rdx, rcx	       501	ref-filter.c	FUNCTION_16	IF_6
0x400187f	        0x4883c201	                              add rdx, 1	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001883	          0x4801d0	                            add rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001886	        0x488945e8	             mov qword [rbp - 0x18], rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x400188a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x400188e	           0xfb600	                   movzx eax, byte [rax]	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001891	            0x84c0	                             test al, al	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001893	            0x7508	                           jne 0x400189d	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001895	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x400189d	    0x488b0d000000	            mov rcx, qword [0x040018a4] 	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018a4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018a7	          0x4863d0	                         movsxd rdx, eax	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018aa	          0x4889d0	                            mov rax, rdx	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018ad	          0x4801c0	                            add rax, rax	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018b0	          0x4801d0	                            add rax, rdx	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018b3	        0x48c1e005	                              shl rax, 5	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018b7	          0x4801c8	                            add rax, rcx	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018ba	        0x4883c010	                           add rax, 0x10	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018be	      0xba50000000	                           mov edx, 0x50	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018c3	      0xbe00000000	                              mov esi, 0	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018c8	          0x4889c7	                            mov rdi, rax	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018cb	      0xe800000000	                          call 0x40018d0	       510	ref-filter.c	FUNCTION_16	CALL_11
0x40018d0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018d3	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018d6	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018d9	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018dc	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018df	        0x48c1e003	                              shl rax, 3	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018e3	    0x480500000000	                              add rax, 0	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018e9	          0x488b00	                    mov rax, qword [rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018ec	          0x4885c0	                           test rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018ef	            0x7457	                            je 0x4001948	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018f1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018f4	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018f7	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018fa	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40018fd	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001900	        0x48c1e003	                              shl rax, 3	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001904	    0x480500000000	                              add rax, 0	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400190a	          0x4c8b00	                     mov r8, qword [rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400190d	    0x488b0d000000	            mov rcx, qword [0x04001914] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001914	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001917	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400191a	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400191d	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001920	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001923	        0x48c1e005	                              shl rax, 5	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001927	        0x488d3401	                    lea rsi, [rcx + rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400192b	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400192f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001933	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001937	          0x4889c7	                            mov rdi, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400193a	          0x41ffd0	                                 call r8	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400193d	            0x85c0	                           test eax, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x400193f	            0x7407	                            je 0x4001948	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x4001941	      0xb8ffffffff	                     mov eax, 0xffffffff	       512	ref-filter.c	FUNCTION_16	IF_8
0x4001946	            0xeb4f	                           jmp 0x4001997	       512	ref-filter.c	FUNCTION_16	IF_8
0x4001948	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       513	ref-filter.c	FUNCTION_16	IF_9
0x400194c	           0xfb600	                   movzx eax, byte [rax]	       513	ref-filter.c	FUNCTION_16	IF_9
0x400194f	            0x3c2a	                            cmp al, 0x2a	       513	ref-filter.c	FUNCTION_16	IF_9
0x4001951	            0x750a	                           jne 0x400195d	       513	ref-filter.c	FUNCTION_16	IF_9
0x4001953	    0xc70500000000	               mov dword [0x0400195d], 1	       514	ref-filter.c	FUNCTION_16	IF_9
0x400195d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001960	          0x4863d0	                         movsxd rdx, eax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001963	          0x4889d0	                            mov rax, rdx	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001966	          0x4801c0	                            add rax, rax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001969	          0x4801d0	                            add rax, rdx	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x400196c	        0x48c1e003	                              shl rax, 3	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001970	    0x480500000000	                              add rax, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001976	          0x488b00	                    mov rax, qword [rax]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001979	      0xbe00000000	                              mov esi, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x400197e	          0x4889c7	                            mov rdi, rax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001981	      0xe800000000	                          call 0x4001986	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001986	            0x85c0	                           test eax, eax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001988	            0x750a	                           jne 0x4001994	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x400198a	    0xc70500000000	               mov dword [0x04001994], 1	       516	ref-filter.c	FUNCTION_16	IF_10
0x4001994	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       517	ref-filter.c	FUNCTION_16
0x4001997	        0x4883c458	                           add rsp, 0x58	       518	ref-filter.c	FUNCTION_16
0x400199b	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x400199c	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x400199d	              0xc3	                                     ret	       518	ref-filter.c	FUNCTION_16
fill_remote_ref_details	WHILE,0:FOR,0:CALL,15:DO,0:functions,0:SWITCH,0:IF,16:ELSE,14	224
0x4003c59	              0x55	                                push rbp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c5a	          0x4889e5	                            mov rbp, rsp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c5d	        0x4883ec50	                           sub rsp, 0x50	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c61	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c65	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c69	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c6d	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c71	    0x64488b042528	                mov rax, qword fs:[0x28]	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c7a	        0x488945f8	                mov qword [rbp - 8], rax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c7e	            0x31c0	                            xor eax, eax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x4003c80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4003c84	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4003c87	            0x85c0	                           test eax, eax	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4003c89	            0x7526	                           jne 0x4003cb1	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x4003c8b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003c8f	        0x488d5014	                   lea rdx, [rax + 0x14]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003c93	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003c97	          0x4889c6	                            mov rsi, rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003c9a	          0x4889d7	                            mov rdi, rdx	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003c9d	      0xe83cffffff	                       call sym.show_ref	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003ca2	          0x4889c2	                            mov rdx, rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003ca5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003ca9	          0x488910	                    mov qword [rax], rdx	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003cac	      0xe9c2020000	                           jmp 0x4003f73	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4003cb1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4003cb5	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4003cb8	          0x83f801	                              cmp eax, 1	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4003cbb	     0xf853e010000	                           jne 0x4003dff	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x4003cc1	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003cc5	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003cc9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003ccd	    0x41b801000000	                              mov r8d, 1	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003cd3	      0xb900000000	                              mov ecx, 0	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003cd8	          0x4889c7	                            mov rdi, rax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003cdb	      0xe800000000	                          call 0x4003ce0	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003ce0	            0x85c0	                           test eax, eax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003ce2	            0x791e	                           jns 0x4003d02	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4003ce4	    0x488b05000000	            mov rax, qword [0x04003ceb] 	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003ceb	          0x4889c7	                            mov rdi, rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003cee	      0xe800000000	                          call 0x4003cf3	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003cf3	          0x4889c2	                            mov rdx, rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003cf6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003cfa	          0x488910	                    mov qword [rax], rdx	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003cfd	      0xe999000000	                           jmp 0x4003d9b	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x4003d02	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d05	            0x85c0	                           test eax, eax	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d07	            0x7514	                           jne 0x4003d1d	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d09	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d0c	            0x85c0	                           test eax, eax	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d0e	            0x750d	                           jne 0x4003d1d	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d14	    0x48c700000000	                      mov qword [rax], 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d1b	            0xeb7e	                           jmp 0x4003d9b	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4003d1d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x4003d20	            0x85c0	                           test eax, eax	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x4003d22	            0x7525	                           jne 0x4003d49	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x4003d24	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d27	    0x488b05000000	            mov rax, qword [0x04003d2e] 	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d2e	            0x89d6	                            mov esi, edx	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d30	          0x4889c7	                            mov rdi, rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d33	      0xb800000000	                              mov eax, 0	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d38	      0xe800000000	                          call 0x4003d3d	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d3d	          0x4889c2	                            mov rdx, rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d40	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d44	          0x488910	                    mov qword [rax], rdx	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d47	            0xeb52	                           jmp 0x4003d9b	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4003d49	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d4c	            0x85c0	                           test eax, eax	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d4e	            0x7525	                           jne 0x4003d75	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d50	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d53	    0x488b05000000	            mov rax, qword [0x04003d5a] 	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d5a	            0x89d6	                            mov esi, edx	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d5c	          0x4889c7	                            mov rdi, rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d5f	      0xb800000000	                              mov eax, 0	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d64	      0xe800000000	                          call 0x4003d69	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d69	          0x4889c2	                            mov rdx, rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d6c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d70	          0x488910	                    mov qword [rax], rdx	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d73	            0xeb26	                           jmp 0x4003d9b	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x4003d75	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d78	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d7b	    0x488b05000000	            mov rax, qword [0x04003d82] 	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d82	            0x89ce	                            mov esi, ecx	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d84	          0x4889c7	                            mov rdi, rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d87	      0xb800000000	                              mov eax, 0	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d8c	      0xe800000000	                          call 0x4003d91	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d91	          0x4889c2	                            mov rdx, rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d94	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d98	          0x488910	                    mov qword [rax], rdx	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x4003d9b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003d9f	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003da3	          0x83e001	                              and eax, 1	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003da6	            0x84c0	                             test al, al	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003da8	     0xf85c5010000	                           jne 0x4003f73	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dae	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003db2	          0x488b00	                    mov rax, qword [rax]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003db5	           0xfb600	                   movzx eax, byte [rax]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003db8	            0x84c0	                             test al, al	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dba	     0xf84b3010000	                            je 0x4003f73	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dc0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dc4	          0x488b00	                    mov rax, qword [rax]	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dc7	        0x488945e0	             mov qword [rbp - 0x20], rax	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x4003dcb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003dcf	          0x488b00	                    mov rax, qword [rax]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003dd2	          0x4889c6	                            mov rsi, rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003dd5	      0xbf00000000	                              mov edi, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003dda	      0xb800000000	                              mov eax, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003ddf	      0xe800000000	                          call 0x4003de4	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003de4	          0x4889c2	                            mov rdx, rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003de7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003deb	          0x488910	                    mov qword [rax], rdx	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x4003dee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4003df2	          0x4889c7	                            mov rdi, rax	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4003df5	      0xe800000000	                          call 0x4003dfa	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4003dfa	      0xe974010000	                           jmp 0x4003f73	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4003dff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4003e03	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4003e06	          0x83f802	                              cmp eax, 2	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4003e09	     0xf8583000000	                           jne 0x4003e92	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x4003e0f	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e13	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e1b	    0x41b801000000	                              mov r8d, 1	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e21	      0xb900000000	                              mov ecx, 0	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e26	          0x4889c7	                            mov rdi, rax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e29	      0xe800000000	                          call 0x4003e2e	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e2e	            0x85c0	                           test eax, eax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e30	     0xf883c010000	                            js 0x4003f72	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4003e36	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e39	            0x85c0	                           test eax, eax	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e3b	            0x7517	                           jne 0x4003e54	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e3d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e40	            0x85c0	                           test eax, eax	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e42	            0x7510	                           jne 0x4003e54	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e44	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e48	    0x48c700000000	                      mov qword [rax], 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e4f	      0xe91f010000	                           jmp 0x4003f73	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4003e54	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e57	            0x85c0	                           test eax, eax	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e59	            0x7510	                           jne 0x4003e6b	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e5f	    0x48c700000000	                      mov qword [rax], 0	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e66	      0xe908010000	                           jmp 0x4003f73	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x4003e6b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e6e	            0x85c0	                           test eax, eax	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e70	            0x7510	                           jne 0x4003e82	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e72	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e76	    0x48c700000000	                      mov qword [rax], 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e7d	      0xe9f1000000	                           jmp 0x4003f73	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4003e82	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x4003e86	    0x48c700000000	                      mov qword [rax], 0	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x4003e8d	      0xe9e1000000	                           jmp 0x4003f73	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x4003e92	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003e96	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003e99	          0x83f803	                              cmp eax, 3	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003e9c	            0x7567	                           jne 0x4003f05	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003e9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003ea2	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003ea6	          0x83e002	                              and eax, 2	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003ea9	            0x84c0	                             test al, al	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003eab	            0x7415	                            je 0x4003ec2	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ead	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003eb1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003eb5	          0x4889d6	                            mov rsi, rdx	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003eb8	          0x4889c7	                            mov rdi, rax	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ebb	      0xe800000000	                          call 0x4003ec0	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ec0	            0xeb13	                           jmp 0x4003ed5	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ec2	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ec6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003eca	          0x4889d6	                            mov rsi, rdx	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ecd	          0x4889c7	                            mov rdi, rax	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ed0	      0xe800000000	                          call 0x4003ed5	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4003ed5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x4003ed9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x4003edc	            0x85c0	                           test eax, eax	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x4003ede	            0x7418	                            je 0x4003ef8	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x4003ee0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003ee4	          0x4889c7	                            mov rdi, rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003ee7	      0xe800000000	                          call 0x4003eec	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003eec	          0x4889c2	                            mov rdx, rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003eef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003ef3	          0x488910	                    mov qword [rax], rdx	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003ef6	            0xeb7b	                           jmp 0x4003f73	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x4003ef8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003efc	    0x48c700000000	                      mov qword [rax], 0	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f03	            0xeb6e	                           jmp 0x4003f73	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f09	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f0c	          0x83f804	                              cmp eax, 4	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f0f	            0x7552	                           jne 0x4003f63	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x4003f11	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f15	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f19	            0xd0e8	                               shr al, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f1b	          0x83e001	                              and eax, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f1e	           0xfb6c8	                           movzx ecx, al	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f21	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f25	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f29	            0x89ce	                            mov esi, ecx	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f2b	          0x4889c7	                            mov rdi, rax	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f2e	      0xe800000000	                          call 0x4003f33	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f33	        0x488945f0	             mov qword [rbp - 0x10], rax	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4003f37	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4003f3a	            0x85c0	                           test eax, eax	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4003f3c	            0x7418	                            je 0x4003f56	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4003f3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f42	          0x4889c7	                            mov rdi, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f45	      0xe800000000	                          call 0x4003f4a	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f4a	          0x4889c2	                            mov rdx, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f4d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f51	          0x488910	                    mov qword [rax], rdx	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f54	            0xeb1d	                           jmp 0x4003f73	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4003f56	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x4003f5a	    0x48c700000000	                      mov qword [rax], 0	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x4003f61	            0xeb10	                           jmp 0x4003f73	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x4003f63	      0xbf00000000	                              mov edi, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x4003f68	      0xb800000000	                              mov eax, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x4003f6d	      0xe800000000	                          call 0x4003f72	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x4003f72	              0x90	                                     nop	      1345	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9
0x4003f73	        0x488b45f8	                mov rax, qword [rbp - 8]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4003f77	    0x644833042528	                xor rax, qword fs:[0x28]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4003f80	            0x7405	                            je 0x4003f87	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4003f82	      0xe800000000	                          call 0x4003f87	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4003f87	              0xc9	                                   leave	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4003f88	              0xc3	                                     ret	      1376	ref-filter.c	FUNCTION_52	ELSE_3
filter_ref_kind	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	25
0x400589a	              0x55	                                push rbp	      1963	ref-filter.c	FUNCTION_73
0x400589b	          0x4889e5	                            mov rbp, rsp	      1963	ref-filter.c	FUNCTION_73
0x400589e	        0x4883ec10	                           sub rsp, 0x10	      1963	ref-filter.c	FUNCTION_73
0x40058a2	        0x48897df8	                mov qword [rbp - 8], rdi	      1963	ref-filter.c	FUNCTION_73
0x40058a6	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1963	ref-filter.c	FUNCTION_73
0x40058aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058ae	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058b1	          0x83f804	                              cmp eax, 4	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058b4	            0x7418	                            je 0x40058ce	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40058ba	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40058bd	          0x83f808	                              cmp eax, 8	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058c0	            0x740c	                            je 0x40058ce	      1964	ref-filter.c	FUNCTION_73	IF_1
0x40058c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1966	ref-filter.c	FUNCTION_73	IF_1
0x40058c6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1966	ref-filter.c	FUNCTION_73	IF_1
0x40058c9	          0x83f802	                              cmp eax, 2	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40058cc	            0x7509	                           jne 0x40058d7	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40058ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1967	ref-filter.c	FUNCTION_73	IF_1
0x40058d2	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1967	ref-filter.c	FUNCTION_73	IF_1
0x40058d5	            0xeb0c	                           jmp 0x40058e3	      1967	ref-filter.c	FUNCTION_73	IF_1
0x40058d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x40058db	          0x4889c7	                            mov rdi, rax	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x40058de	      0xe841ffffff	          call sym.ref_kind_from_refname	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x40058e3	              0xc9	                                   leave	      1969	ref-filter.c	FUNCTION_73
0x40058e4	              0xc3	                                     ret	      1969	ref-filter.c	FUNCTION_73
strbuf_addf_ret	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	41
0x4000654	              0x55	                                push rbp	       109	ref-filter.c	FUNCTION_2
0x4000655	          0x4889e5	                            mov rbp, rsp	       109	ref-filter.c	FUNCTION_2
0x4000658	    0x4881ecf00000	                           sub rsp, 0xf0	       109	ref-filter.c	FUNCTION_2
0x400065f	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       109	ref-filter.c	FUNCTION_2
0x4000666	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	       109	ref-filter.c	FUNCTION_2
0x400066c	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       109	ref-filter.c	FUNCTION_2
0x4000673	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       109	ref-filter.c	FUNCTION_2
0x400067a	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       109	ref-filter.c	FUNCTION_2
0x4000681	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       109	ref-filter.c	FUNCTION_2
0x4000688	            0x84c0	                             test al, al	       109	ref-filter.c	FUNCTION_2
0x400068a	            0x7420	                            je 0x40006ac	       109	ref-filter.c	FUNCTION_2
0x400068c	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       109	ref-filter.c	FUNCTION_2
0x4000690	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       109	ref-filter.c	FUNCTION_2
0x4000694	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       109	ref-filter.c	FUNCTION_2
0x4000698	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       109	ref-filter.c	FUNCTION_2
0x400069c	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       109	ref-filter.c	FUNCTION_2
0x40006a0	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       109	ref-filter.c	FUNCTION_2
0x40006a4	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       109	ref-filter.c	FUNCTION_2
0x40006a8	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       109	ref-filter.c	FUNCTION_2
0x40006ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       109	ref-filter.c	FUNCTION_2
0x40006b5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       109	ref-filter.c	FUNCTION_2
0x40006bc	            0x31c0	                            xor eax, eax	       109	ref-filter.c	FUNCTION_2
0x40006be	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006c8	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006d2	        0x488d4510	                   lea rax, [rbp + 0x10]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006d6	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006dd	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006e4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x40006eb	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x40006f2	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x40006f9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x4000700	          0x4889ce	                            mov rsi, rcx	       112	ref-filter.c	FUNCTION_2	CALL_2
0x4000703	          0x4889c7	                            mov rdi, rax	       112	ref-filter.c	FUNCTION_2	CALL_2
0x4000706	      0xe800000000	                          call 0x400070b	       112	ref-filter.c	FUNCTION_2	CALL_2
0x400070b	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       114	ref-filter.c	FUNCTION_2
0x4000711	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       115	ref-filter.c	FUNCTION_2
0x4000718	    0x644833342528	                xor rsi, qword fs:[0x28]	       115	ref-filter.c	FUNCTION_2
0x4000721	            0x7405	                            je 0x4000728	       115	ref-filter.c	FUNCTION_2
0x4000723	      0xe800000000	                          call 0x4000728	       115	ref-filter.c	FUNCTION_2
0x4000728	              0xc9	                                   leave	       115	ref-filter.c	FUNCTION_2
0x4000729	              0xc3	                                     ret	       115	ref-filter.c	FUNCTION_2
fill_missing_values	WHILE,0:FOR,1:CALL,0:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	25
0x4003831	              0x55	                                push rbp	      1192	ref-filter.c	FUNCTION_46
0x4003832	          0x4889e5	                            mov rbp, rsp	      1192	ref-filter.c	FUNCTION_46
0x4003835	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1192	ref-filter.c	FUNCTION_46
0x4003839	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4003840	            0xeb32	                           jmp 0x4003874	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4003842	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x4003845	            0x4898	                                    cdqe	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x4003847	        0x48c1e005	                              shl rax, 5	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x400384b	          0x4889c2	                            mov rdx, rax	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x400384e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x4003852	          0x4801d0	                            add rax, rdx	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x4003855	        0x488945f8	                mov qword [rbp - 8], rax	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x4003859	        0x488b45f8	                mov rax, qword [rbp - 8]	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400385d	          0x488b00	                    mov rax, qword [rax]	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4003860	          0x4885c0	                           test rax, rax	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4003863	            0x750b	                           jne 0x4003870	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4003865	        0x488b45f8	                mov rax, qword [rbp - 8]	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4003869	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4003870	        0x8345f401	                add dword [rbp - 0xc], 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4003874	    0x8b0500000000	            mov eax, dword [0x0400387a] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400387a	          0x3945f4	              cmp dword [rbp - 0xc], eax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400387d	            0x7cc3	                            jl 0x4003842	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400387f	              0x90	                                     nop	      1199	ref-filter.c	FUNCTION_46
0x4003880	              0x5d	                                 pop rbp	      1199	ref-filter.c	FUNCTION_46
0x4003881	              0xc3	                                     ret	      1199	ref-filter.c	FUNCTION_46
objectname_atom_parser	WHILE,0:FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,5:ELSE,3	81
0x4000fa0	              0x55	                                push rbp	       272	ref-filter.c	FUNCTION_10
0x4000fa1	          0x4889e5	                            mov rbp, rsp	       272	ref-filter.c	FUNCTION_10
0x4000fa4	              0x53	                                push rbx	       272	ref-filter.c	FUNCTION_10
0x4000fa5	        0x4883ec28	                           sub rsp, 0x28	       272	ref-filter.c	FUNCTION_10
0x4000fa9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       272	ref-filter.c	FUNCTION_10
0x4000fad	        0x488975e0	             mov qword [rbp - 0x20], rsi	       272	ref-filter.c	FUNCTION_10
0x4000fb1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       272	ref-filter.c	FUNCTION_10
0x4000fb5	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       272	ref-filter.c	FUNCTION_10
0x4000fb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	ref-filter.c	FUNCTION_10	IF_1
0x4000fbd	          0x4885c0	                           test rax, rax	       273	ref-filter.c	FUNCTION_10	IF_1
0x4000fc0	            0x7510	                           jne 0x4000fd2	       273	ref-filter.c	FUNCTION_10	IF_1
0x4000fc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       274	ref-filter.c	FUNCTION_10	IF_1
0x4000fc6	    0xc74010000000	               mov dword [rax + 0x10], 0	       274	ref-filter.c	FUNCTION_10	IF_1
0x4000fcd	      0xe9ef000000	                           jmp 0x40010c1	       274	ref-filter.c	FUNCTION_10	IF_1
0x4000fd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fd6	      0xbe00000000	                              mov esi, 0	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fdb	          0x4889c7	                            mov rdi, rax	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fde	      0xe800000000	                          call 0x4000fe3	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fe3	            0x85c0	                           test eax, eax	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fe5	            0x7510	                           jne 0x4000ff7	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0x4000fe7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0x4000feb	    0xc74010020000	               mov dword [rax + 0x10], 2	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0x4000ff2	      0xe9ca000000	                           jmp 0x40010c1	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0x4000ff7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x4000ffb	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x4000fff	      0xbe00000000	                              mov esi, 0	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x4001004	          0x4889c7	                            mov rdi, rax	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x4001007	      0xe83ff0ffff	                    call sym.skip_prefix	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x400100c	            0x85c0	                           test eax, eax	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x400100e	     0xf8481000000	                            je 0x4001095	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0x4001014	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	ref-filter.c	FUNCTION_10	ELSE_2	IF_3
0x4001018	    0xc74010010000	               mov dword [rax + 0x10], 1	       278	ref-filter.c	FUNCTION_10	ELSE_2	IF_3
0x400101f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001023	        0x488d5014	                   lea rdx, [rax + 0x14]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001027	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x400102b	      0xbe0a000000	                            mov esi, 0xa	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001030	          0x4889c7	                            mov rdi, rax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001033	      0xe8fff0ffff	                     call sym.strtoul_ui	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001038	            0x85c0	                           test eax, eax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x400103a	            0x750b	                           jne 0x4001047	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x400103c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4
0x4001040	          0x8b4014	            mov eax, dword [rax + 0x14] 	       280	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4
0x4001043	            0x85c0	                           test eax, eax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001045	            0x752c	                           jne 0x4001073	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x4001047	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x400104b	      0xbf00000000	                              mov edi, 0	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001050	      0xe848f4ffff	                               call sym.	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001055	          0x4889c2	                            mov rdx, rax	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001058	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x400105c	          0x4889d9	                            mov rcx, rbx	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x400105f	      0xbeffffffff	                     mov esi, 0xffffffff	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001064	          0x4889c7	                            mov rdi, rax	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001067	      0xb800000000	                              mov eax, 0	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x400106c	      0xe8e3f5ffff	                call sym.strbuf_addf_ret	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001071	            0xeb53	                           jmp 0x40010c6	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x4001073	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001077	          0x8b4014	            mov eax, dword [rax + 0x14] 	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x400107a	    0x8b1500000000	            mov edx, dword [0x04001080] 	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001080	            0x39d0	                            cmp eax, edx	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001082	            0x733d	                           jae 0x40010c1	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001084	    0x8b0500000000	            mov eax, dword [0x0400108a] 	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x400108a	            0x89c2	                            mov edx, eax	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x400108c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001090	          0x895014	             mov dword [rax + 0x14], edx	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001093	            0xeb2c	                           jmp 0x40010c1	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x4001095	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       285	ref-filter.c	FUNCTION_10	CALL_7
0x4001099	      0xbf00000000	                              mov edi, 0	       285	ref-filter.c	FUNCTION_10	CALL_7
0x400109e	      0xe8faf3ffff	                               call sym.	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010a3	          0x4889c2	                            mov rdx, rax	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010aa	          0x4889d9	                            mov rcx, rbx	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010ad	      0xbeffffffff	                     mov esi, 0xffffffff	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010b2	          0x4889c7	                            mov rdi, rax	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010b5	      0xb800000000	                              mov eax, 0	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010ba	      0xe895f5ffff	                call sym.strbuf_addf_ret	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010bf	            0xeb05	                           jmp 0x40010c6	       285	ref-filter.c	FUNCTION_10	CALL_7
0x40010c1	      0xb800000000	                              mov eax, 0	       286	ref-filter.c	FUNCTION_10
0x40010c6	        0x4883c428	                           add rsp, 0x28	       287	ref-filter.c	FUNCTION_10
0x40010ca	              0x5b	                                 pop rbx	       287	ref-filter.c	FUNCTION_10
0x40010cb	              0x5d	                                 pop rbp	       287	ref-filter.c	FUNCTION_10
0x40010cc	              0xc3	                                     ret	       287	ref-filter.c	FUNCTION_10
quote_formatting	WHILE,0:FOR,0:CALL,5:DO,0:functions,0:SWITCH,1:IF,0:ELSE,0	44
0x400199e	              0x55	                                push rbp	       521	ref-filter.c	FUNCTION_17
0x400199f	          0x4889e5	                            mov rbp, rsp	       521	ref-filter.c	FUNCTION_17
0x40019a2	        0x4883ec20	                           sub rsp, 0x20	       521	ref-filter.c	FUNCTION_17
0x40019a6	        0x48897df8	                mov qword [rbp - 8], rdi	       521	ref-filter.c	FUNCTION_17
0x40019aa	        0x488975f0	             mov qword [rbp - 0x10], rsi	       521	ref-filter.c	FUNCTION_17
0x40019ae	          0x8955ec	             mov dword [rbp - 0x14], edx	       521	ref-filter.c	FUNCTION_17
0x40019b1	        0x837dec08	               cmp dword [rbp - 0x14], 8	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019b5	            0x7775	                            ja 0x4001a2c	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019b7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019ba	    0x488b04c50000	                  mov rax, qword [rax*8]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019c2	            0xffe0	                                 jmp rax	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019c4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x40019c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x40019cc	          0x4889d6	                            mov rsi, rdx	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x40019cf	          0x4889c7	                            mov rdi, rax	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x40019d2	      0xe891eaffff	                  call sym.strbuf_addstr	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x40019d7	            0xeb53	                           jmp 0x4001a2c	       525	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019d9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40019dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40019e1	          0x4889d6	                            mov rsi, rdx	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40019e4	          0x4889c7	                            mov rdi, rax	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40019e7	      0xe800000000	                          call 0x40019ec	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40019ec	            0xeb3e	                           jmp 0x4001a2c	       528	ref-filter.c	FUNCTION_17	SWITCH_1
0x40019ee	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40019f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40019f6	          0x4889d6	                            mov rsi, rdx	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40019f9	          0x4889c7	                            mov rdi, rax	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40019fc	      0xe800000000	                          call 0x4001a01	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x4001a01	            0xeb29	                           jmp 0x4001a2c	       531	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001a03	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x4001a07	        0x488b45f8	                mov rax, qword [rbp - 8]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x4001a0b	          0x4889d6	                            mov rsi, rdx	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x4001a0e	          0x4889c7	                            mov rdi, rax	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x4001a11	      0xe800000000	                          call 0x4001a16	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x4001a16	            0xeb14	                           jmp 0x4001a2c	       534	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001a18	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001a1c	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001a20	          0x4889d6	                            mov rsi, rdx	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001a23	          0x4889c7	                            mov rdi, rax	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001a26	      0xe800000000	                          call 0x4001a2b	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x4001a2b	              0x90	                                     nop	       537	ref-filter.c	FUNCTION_17	SWITCH_1
0x4001a2c	              0x90	                                     nop	       539	ref-filter.c	FUNCTION_17
0x4001a2d	              0xc9	                                   leave	       539	ref-filter.c	FUNCTION_17
0x4001a2e	              0xc3	                                     ret	       539	ref-filter.c	FUNCTION_17
hashcpy	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	14
0x4000518	              0x55	                                push rbp	       994	cache.h	FUNCTION_102
0x4000519	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_102
0x400051c	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_102
0x4000520	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_102
0x4000524	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_102
0x4000528	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_102	CALL_1
0x400052c	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_102	CALL_1
0x4000530	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_102	CALL_1
0x4000535	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_102	CALL_1
0x4000538	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_102	CALL_1
0x400053b	      0xe800000000	                          call 0x4000540	       995	cache.h	FUNCTION_102	CALL_1
0x4000540	              0x90	                                     nop	       996	cache.h	FUNCTION_102
0x4000541	              0xc9	                                   leave	       996	cache.h	FUNCTION_102
0x4000542	              0xc3	                                     ret	       996	cache.h	FUNCTION_102
get_obj	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,1	41
0x4002444	              0x55	                                push rbp	       802	ref-filter.c	FUNCTION_31
0x4002445	          0x4889e5	                            mov rbp, rsp	       802	ref-filter.c	FUNCTION_31
0x4002448	        0x4883ec40	                           sub rsp, 0x40	       802	ref-filter.c	FUNCTION_31
0x400244c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       802	ref-filter.c	FUNCTION_31
0x4002450	        0x488975d0	             mov qword [rbp - 0x30], rsi	       802	ref-filter.c	FUNCTION_31
0x4002454	        0x488955c8	             mov qword [rbp - 0x38], rdx	       802	ref-filter.c	FUNCTION_31
0x4002458	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       802	ref-filter.c	FUNCTION_31
0x400245c	    0x64488b042528	                mov rax, qword fs:[0x28]	       802	ref-filter.c	FUNCTION_31
0x4002465	        0x488945f8	                mov qword [rbp - 8], rax	       802	ref-filter.c	FUNCTION_31
0x4002469	            0x31c0	                            xor eax, eax	       802	ref-filter.c	FUNCTION_31
0x400246b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x400246f	        0x488d4dec	                   lea rcx, [rbp - 0x14]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x4002473	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x4002477	          0x4889ce	                            mov rsi, rcx	       804	ref-filter.c	FUNCTION_31	CALL_1
0x400247a	          0x4889c7	                            mov rdi, rax	       804	ref-filter.c	FUNCTION_31	CALL_1
0x400247d	      0xe8e7e0ffff	               call sym.read_object_file	       804	ref-filter.c	FUNCTION_31	CALL_1
0x4002482	        0x488945f0	             mov qword [rbp - 0x10], rax	       804	ref-filter.c	FUNCTION_31	CALL_1
0x4002486	      0x48837df000	               cmp qword [rbp - 0x10], 0	       806	ref-filter.c	FUNCTION_31	IF_1
0x400248b	            0x742d	                            je 0x40024ba	       806	ref-filter.c	FUNCTION_31	IF_1
0x400248d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002491	          0x488b10	                    mov rdx, qword [rax]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002494	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002497	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400249b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400249f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024a3	          0x4989f8	                             mov r8, rdi	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024a6	          0x4889c7	                            mov rdi, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024a9	      0xe800000000	                          call 0x40024ae	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024ae	          0x4889c2	                            mov rdx, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024b5	          0x488910	                    mov qword [rax], rdx	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024b8	            0xeb0b	                           jmp 0x40024c5	       807	ref-filter.c	FUNCTION_31	CALL_2
0x40024ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x40024be	    0x48c700000000	                      mov qword [rax], 0	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x40024c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       810	ref-filter.c	FUNCTION_31	ELSE_1
0x40024c9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x40024cd	    0x644833342528	                xor rsi, qword fs:[0x28]	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x40024d6	            0x7405	                            je 0x40024dd	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x40024d8	      0xe800000000	                          call 0x40024dd	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x40024dd	              0xc9	                                   leave	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x40024de	              0xc3	                                     ret	       811	ref-filter.c	FUNCTION_31	ELSE_1
push_stack_element	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	23
0x4001a9e	              0x55	                                push rbp	       558	ref-filter.c	FUNCTION_19
0x4001a9f	          0x4889e5	                            mov rbp, rsp	       558	ref-filter.c	FUNCTION_19
0x4001aa2	        0x4883ec20	                           sub rsp, 0x20	       558	ref-filter.c	FUNCTION_19
0x4001aa6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       558	ref-filter.c	FUNCTION_19
0x4001aaa	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001aaf	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001ab4	      0xe800000000	                          call 0x4001ab9	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001ab9	        0x488945f8	                mov qword [rbp - 8], rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001abd	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001ac1	        0x4883c008	                              add rax, 8	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001ac5	      0xbe00000000	                              mov esi, 0	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001aca	          0x4889c7	                            mov rdi, rax	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001acd	      0xe800000000	                          call 0x4001ad2	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001ad2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	ref-filter.c	FUNCTION_19
0x4001ad6	          0x488b10	                    mov rdx, qword [rax]	       562	ref-filter.c	FUNCTION_19
0x4001ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	       562	ref-filter.c	FUNCTION_19
0x4001add	          0x488910	                    mov qword [rax], rdx	       562	ref-filter.c	FUNCTION_19
0x4001ae0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	ref-filter.c	FUNCTION_19
0x4001ae4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	ref-filter.c	FUNCTION_19
0x4001ae8	          0x488910	                    mov qword [rax], rdx	       563	ref-filter.c	FUNCTION_19
0x4001aeb	              0x90	                                     nop	       564	ref-filter.c	FUNCTION_19
0x4001aec	              0xc9	                                   leave	       564	ref-filter.c	FUNCTION_19
0x4001aed	              0xc3	                                     ret	       564	ref-filter.c	FUNCTION_19
pop_stack_element	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	32
0x4001aee	              0x55	                                push rbp	       567	ref-filter.c	FUNCTION_20
0x4001aef	          0x4889e5	                            mov rbp, rsp	       567	ref-filter.c	FUNCTION_20
0x4001af2	        0x4883ec20	                           sub rsp, 0x20	       567	ref-filter.c	FUNCTION_20
0x4001af6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       567	ref-filter.c	FUNCTION_20
0x4001afa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	ref-filter.c	FUNCTION_20
0x4001afe	          0x488b00	                    mov rax, qword [rax]	       568	ref-filter.c	FUNCTION_20
0x4001b01	        0x488945f0	             mov qword [rbp - 0x10], rax	       568	ref-filter.c	FUNCTION_20
0x4001b05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       569	ref-filter.c	FUNCTION_20
0x4001b09	          0x488b00	                    mov rax, qword [rax]	       569	ref-filter.c	FUNCTION_20
0x4001b0c	        0x488945f8	                mov qword [rbp - 8], rax	       569	ref-filter.c	FUNCTION_20
0x4001b10	      0x48837df800	                  cmp qword [rbp - 8], 0	       571	ref-filter.c	FUNCTION_20	IF_1
0x4001b15	            0x741b	                            je 0x4001b32	       571	ref-filter.c	FUNCTION_20	IF_1
0x4001b17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b1b	        0x488d5008	                      lea rdx, [rax + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b23	        0x4883c008	                              add rax, 8	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b27	          0x4889d6	                            mov rsi, rdx	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b2a	          0x4889c7	                            mov rdi, rax	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b2d	      0xe800000000	                          call 0x4001b32	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4001b32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001b36	        0x4883c008	                              add rax, 8	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001b3a	          0x4889c7	                            mov rdi, rax	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001b3d	      0xe800000000	                          call 0x4001b42	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4001b42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4001b46	          0x4889c7	                            mov rdi, rax	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4001b49	      0xe800000000	                          call 0x4001b4e	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4001b4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	ref-filter.c	FUNCTION_20
0x4001b52	        0x488b55f8	                mov rdx, qword [rbp - 8]	       575	ref-filter.c	FUNCTION_20
0x4001b56	          0x488910	                    mov qword [rax], rdx	       575	ref-filter.c	FUNCTION_20
0x4001b59	              0x90	                                     nop	       576	ref-filter.c	FUNCTION_20
0x4001b5a	              0xc9	                                   leave	       576	ref-filter.c	FUNCTION_20
0x4001b5b	              0xc3	                                     ret	       576	ref-filter.c	FUNCTION_20
parse_sorting_atom	WHILE,0:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	45
0x4006769	              0x55	                                push rbp	      2293	ref-filter.c	FUNCTION_86
0x400676a	          0x4889e5	                            mov rbp, rsp	      2293	ref-filter.c	FUNCTION_86
0x400676d	        0x4883ec60	                           sub rsp, 0x60	      2293	ref-filter.c	FUNCTION_86
0x4006771	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2293	ref-filter.c	FUNCTION_86
0x4006775	    0x64488b042528	                mov rax, qword fs:[0x28]	      2293	ref-filter.c	FUNCTION_86
0x400677e	        0x488945f8	                mov qword [rbp - 8], rax	      2293	ref-filter.c	FUNCTION_86
0x4006782	            0x31c0	                            xor eax, eax	      2293	ref-filter.c	FUNCTION_86
0x4006784	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2298	ref-filter.c	FUNCTION_86
0x400678c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2298	ref-filter.c	FUNCTION_86
0x4006794	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2298	ref-filter.c	FUNCTION_86
0x400679c	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x40067a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067a7	          0x4889c7	                            mov rdi, rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067aa	      0xe800000000	                          call 0x40067af	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067af	          0x4889c2	                            mov rdx, rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067b6	          0x4801d0	                            add rax, rdx	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067b9	        0x488945b8	             mov qword [rbp - 0x48], rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x40067bd	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x40067c5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2300	ref-filter.c	FUNCTION_86
0x40067cd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2300	ref-filter.c	FUNCTION_86
0x40067d5	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067d9	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067dd	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067e1	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067e5	          0x4889c7	                            mov rdi, rax	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067e8	      0xe857adffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067ed	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40067f0	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2302	ref-filter.c	FUNCTION_86	IF_1
0x40067f4	            0x7916	                           jns 0x400680c	      2302	ref-filter.c	FUNCTION_86	IF_1
0x40067f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x40067fa	          0x4889c6	                            mov rsi, rax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x40067fd	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4006802	      0xb800000000	                              mov eax, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4006807	      0xe800000000	                          call 0x400680c	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x400680c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4006810	          0x4889c7	                            mov rdi, rax	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4006813	      0xe800000000	                          call 0x4006818	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4006818	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2305	ref-filter.c	FUNCTION_86
0x400681b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2306	ref-filter.c	FUNCTION_86
0x400681f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2306	ref-filter.c	FUNCTION_86
0x4006828	            0x7405	                            je 0x400682f	      2306	ref-filter.c	FUNCTION_86
0x400682a	      0xe800000000	                          call 0x400682f	      2306	ref-filter.c	FUNCTION_86
0x400682f	              0xc9	                                   leave	      2306	ref-filter.c	FUNCTION_86
0x4006830	              0xc3	                                     ret	      2306	ref-filter.c	FUNCTION_86
verify_ref_format	WHILE,0:FOR,1:CALL,9:DO,0:functions,0:SWITCH,0:IF,4:ELSE,0	108
0x4002299	              0x55	                                push rbp	       769	ref-filter.c	FUNCTION_30
0x400229a	          0x4889e5	                            mov rbp, rsp	       769	ref-filter.c	FUNCTION_30
0x400229d	        0x4883ec60	                           sub rsp, 0x60	       769	ref-filter.c	FUNCTION_30
0x40022a1	        0x48897da8	             mov qword [rbp - 0x58], rdi	       769	ref-filter.c	FUNCTION_30
0x40022a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	ref-filter.c	FUNCTION_30
0x40022ae	        0x488945f8	                mov qword [rbp - 8], rax	       769	ref-filter.c	FUNCTION_30
0x40022b2	            0x31c0	                            xor eax, eax	       769	ref-filter.c	FUNCTION_30
0x40022b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       772	ref-filter.c	FUNCTION_30
0x40022b8	    0xc74010000000	               mov dword [rax + 0x10], 0	       772	ref-filter.c	FUNCTION_30
0x40022bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40022c3	          0x488b00	                    mov rax, qword [rax]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40022c6	        0x488945c8	             mov qword [rbp - 0x38], rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40022ca	      0xe907010000	                           jmp 0x40023d6	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40022cf	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40022d7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40022df	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x40022e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40022eb	      0xbe29000000	                           mov esi, 0x29	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40022f0	          0x4889c7	                            mov rdi, rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40022f3	      0xe800000000	                          call 0x40022f8	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40022f8	        0x488945d8	             mov qword [rbp - 0x28], rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x40022fc	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x4002301	            0x752b	                           jne 0x400232e	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x4002303	      0xbf00000000	                              mov edi, 0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002308	      0xe890e1ffff	                               call sym.	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x400230d	          0x4889c2	                            mov rdx, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002310	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002314	          0x4889c6	                            mov rsi, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002317	          0x4889d7	                            mov rdi, rdx	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x400231a	      0xb800000000	                              mov eax, 0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x400231f	      0xe800000000	                          call 0x4002324	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002324	      0xe817ddffff	                    call sym.const_error	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4002329	      0xe900010000	                           jmp 0x400242e	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x400232e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4002332	        0x488d7002	                      lea rsi, [rax + 2]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4002336	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400233a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400233e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4002342	          0x4889c7	                            mov rdi, rax	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4002345	      0xe8faf1ffff	          call sym.parse_ref_filter_atom	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400234a	          0x8945bc	             mov dword [rbp - 0x44], eax	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x400234d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x4002351	            0x7916	                           jns 0x4002369	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x4002353	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4002357	          0x4889c6	                            mov rsi, rax	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x400235a	      0xbf00000000	                              mov edi, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x400235f	      0xb800000000	                              mov eax, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4002364	      0xe800000000	                          call 0x4002369	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4002369	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	ref-filter.c	FUNCTION_30	FOR_1
0x400236d	        0x4883c001	                              add rax, 1	       784	ref-filter.c	FUNCTION_30	FOR_1
0x4002371	        0x488945c8	             mov qword [rbp - 0x38], rax	       784	ref-filter.c	FUNCTION_30	FOR_1
0x4002375	    0x488b0d000000	            mov rcx, qword [0x0400237c] 	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400237c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400237f	          0x4863d0	                         movsxd rdx, eax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002382	          0x4889d0	                            mov rax, rdx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002385	          0x4801c0	                            add rax, rax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002388	          0x4801d0	                            add rax, rdx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400238b	        0x48c1e005	                              shl rax, 5	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400238f	          0x4801c8	                            add rax, rcx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002392	          0x488b00	                    mov rax, qword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002395	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4002399	      0xbe00000000	                              mov esi, 0	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x400239e	          0x4889c7	                            mov rdi, rax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x40023a1	      0xe8a5dcffff	                    call sym.skip_prefix	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x40023a6	            0x85c0	                           test eax, eax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x40023a8	            0x7420	                            je 0x40023ca	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x40023aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023ae	      0xbe00000000	                              mov esi, 0	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023b3	          0x4889c7	                            mov rdi, rax	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023b6	      0xe800000000	                          call 0x40023bb	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023bb	            0x85c0	                           test eax, eax	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023bd	           0xf95c0	                                setne al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023c0	           0xfb6d0	                           movzx edx, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023c7	          0x895010	             mov dword [rax + 0x10], edx	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x40023ca	        0x488d45e0	                   lea rax, [rbp - 0x20]	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x40023ce	          0x4889c7	                            mov rdi, rax	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x40023d1	      0xe800000000	                          call 0x40023d6	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x40023d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023da	           0xfb600	                   movzx eax, byte [rax]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023dd	            0x84c0	                             test al, al	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023df	            0x741b	                            je 0x40023fc	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023e5	          0x4889c7	                            mov rdi, rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023e8	      0xe857feffff	                      call sym.find_next	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023ed	        0x488945d0	             mov qword [rbp - 0x30], rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023f1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023f6	     0xf85d3feffff	                           jne 0x40022cf	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x40023fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002400	          0x8b4010	            mov eax, dword [rax + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002403	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002405	            0x7422	                            je 0x4002429	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002407	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400240b	          0x8b400c	              mov eax, dword [rax + 0xc]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400240e	            0x89c6	                            mov esi, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002410	      0xbf01000000	                              mov edi, 1	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4002415	      0xe800000000	                          call 0x400241a	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400241a	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400241c	            0x750b	                           jne 0x4002429	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x400241e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       791	ref-filter.c	FUNCTION_30	IF_4
0x4002422	    0xc74010000000	               mov dword [rax + 0x10], 0	       791	ref-filter.c	FUNCTION_30	IF_4
0x4002429	      0xb800000000	                              mov eax, 0	       792	ref-filter.c	FUNCTION_30
0x400242e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       793	ref-filter.c	FUNCTION_30
0x4002432	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       793	ref-filter.c	FUNCTION_30
0x400243b	            0x7405	                            je 0x4002442	       793	ref-filter.c	FUNCTION_30
0x400243d	      0xe800000000	                          call 0x4002442	       793	ref-filter.c	FUNCTION_30
0x4002442	              0xc9	                                   leave	       793	ref-filter.c	FUNCTION_30
0x4002443	              0xc3	                                     ret	       793	ref-filter.c	FUNCTION_30
filter_pattern_match	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	30
0x40053fe	              0x55	                                push rbp	      1808	ref-filter.c	FUNCTION_66
0x40053ff	          0x4889e5	                            mov rbp, rsp	      1808	ref-filter.c	FUNCTION_66
0x4005402	        0x4883ec10	                           sub rsp, 0x10	      1808	ref-filter.c	FUNCTION_66
0x4005406	        0x48897df8	                mov qword [rbp - 8], rdi	      1808	ref-filter.c	FUNCTION_66
0x400540a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1808	ref-filter.c	FUNCTION_66
0x400540e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4005412	          0x488b00	                    mov rax, qword [rax]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4005415	          0x488b00	                    mov rax, qword [rax]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4005418	          0x4885c0	                           test rax, rax	      1809	ref-filter.c	FUNCTION_66	IF_1
0x400541b	            0x7507	                           jne 0x4005424	      1809	ref-filter.c	FUNCTION_66	IF_1
0x400541d	      0xb801000000	                              mov eax, 1	      1810	ref-filter.c	FUNCTION_66	IF_1
0x4005422	            0xeb37	                           jmp 0x400545b	      1810	ref-filter.c	FUNCTION_66	IF_1
0x4005424	        0x488b45f8	                mov rax, qword [rbp - 8]	      1811	ref-filter.c	FUNCTION_66	IF_2
0x4005428	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1811	ref-filter.c	FUNCTION_66	IF_2
0x400542c	          0x83e002	                              and eax, 2	      1811	ref-filter.c	FUNCTION_66	IF_2
0x400542f	            0x84c0	                             test al, al	      1811	ref-filter.c	FUNCTION_66	IF_2
0x4005431	            0x7415	                            je 0x4005448	      1811	ref-filter.c	FUNCTION_66	IF_2
0x4005433	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x4005437	        0x488b45f8	                mov rax, qword [rbp - 8]	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x400543b	          0x4889d6	                            mov rsi, rdx	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x400543e	          0x4889c7	                            mov rdi, rax	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x4005441	      0xe8a7feffff	             call sym.match_name_as_path	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x4005446	            0xeb13	                           jmp 0x400545b	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x4005448	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x400544c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x4005450	          0x4889d6	                            mov rsi, rdx	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x4005453	          0x4889c7	                            mov rdi, rax	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x4005456	      0xe8bcfdffff	                  call sym.match_pattern	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x400545b	              0xc9	                                   leave	      1814	ref-filter.c	FUNCTION_66
0x400545c	              0xc3	                                     ret	      1814	ref-filter.c	FUNCTION_66
st_add	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	20
0x40000a1	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_142
0x40000a2	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_142
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_142
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_142
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_142
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_142	IF_1
0x40000b5	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_142	IF_1
0x40000b8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_142	IF_1
0x40000bc	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_142	IF_1
0x40000be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000c6	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000c9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000ce	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000d3	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_142	IF_1	CALL_1
0x40000d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_142
0x40000dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_142
0x40000e0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_142
0x40000e3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_142
0x40000e4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_142
format_ref_array_item	WHILE,0:FOR,1:CALL,17:DO,0:functions,0:SWITCH,0:IF,6:ELSE,0	153
0x40063ee	              0x55	                                push rbp	      2226	ref-filter.c	FUNCTION_83
0x40063ef	          0x4889e5	                            mov rbp, rsp	      2226	ref-filter.c	FUNCTION_83
0x40063f2	        0x4883c480	             add rsp, 0xffffffffffffff80	      2226	ref-filter.c	FUNCTION_83
0x40063f6	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2226	ref-filter.c	FUNCTION_83
0x40063fa	        0x48897590	             mov qword [rbp - 0x70], rsi	      2226	ref-filter.c	FUNCTION_83
0x40063fe	        0x48895588	             mov qword [rbp - 0x78], rdx	      2226	ref-filter.c	FUNCTION_83
0x4006402	        0x48894d80	             mov qword [rbp - 0x80], rcx	      2226	ref-filter.c	FUNCTION_83
0x4006406	    0x64488b042528	                mov rax, qword fs:[0x28]	      2226	ref-filter.c	FUNCTION_83
0x400640f	        0x488945f8	                mov qword [rbp - 8], rax	      2226	ref-filter.c	FUNCTION_83
0x4006413	            0x31c0	                            xor eax, eax	      2226	ref-filter.c	FUNCTION_83
0x4006415	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2228	ref-filter.c	FUNCTION_83
0x400641c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2228	ref-filter.c	FUNCTION_83
0x4006424	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2230	ref-filter.c	FUNCTION_83
0x4006428	          0x8b4008	                mov eax, dword [rax + 8]	      2230	ref-filter.c	FUNCTION_83
0x400642b	          0x8945c0	             mov dword [rbp - 0x40], eax	      2230	ref-filter.c	FUNCTION_83
0x400642e	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4006432	        0x4883c008	                              add rax, 8	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4006436	          0x4889c7	                            mov rdi, rax	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x4006439	      0xe860b6ffff	             call sym.push_stack_element	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x400643e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006442	          0x488b00	                    mov rax, qword [rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006445	        0x488945a8	             mov qword [rbp - 0x58], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006449	      0xe9b9000000	                           jmp 0x4006507	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400644e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4006452	      0xbe29000000	                           mov esi, 0x29	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4006457	          0x4889c7	                            mov rdi, rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x400645a	      0xe800000000	                          call 0x400645f	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x400645f	        0x488945b8	             mov qword [rbp - 0x48], rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x4006463	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x4006467	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x400646b	            0x7317	                           jae 0x4006484	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x400646d	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4006471	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4006475	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4006479	          0x4889ce	                            mov rsi, rcx	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x400647c	          0x4889c7	                            mov rdi, rax	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x400647f	      0xe8aefeffff	                 call sym.append_literal	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4006484	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4006488	        0x488d7002	                      lea rsi, [rax + 2]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x400648c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4006490	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4006494	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4006498	          0x4889c7	                            mov rdi, rax	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x400649b	      0xe8a4b0ffff	          call sym.parse_ref_filter_atom	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40064a0	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40064a3	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064a7	            0x7838	                            js 0x40064e1	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064a9	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064ad	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064b1	          0x8b75a4	             mov esi, dword [rbp - 0x5c]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064b4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064b8	          0x4889c7	                            mov rdi, rax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064bb	      0xe86ee6ffff	             call sym.get_ref_atom_value	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064c0	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064c2	            0x751d	                           jne 0x40064e1	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064c8	        0x488b4008	                mov rax, qword [rax + 8]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064cc	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064d0	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064d4	        0x488d75c0	                   lea rsi, [rbp - 0x40]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064d8	          0x4889cf	                            mov rdi, rcx	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064db	            0xffd0	                                call rax	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x40064dd	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064df	            0x741a	                            je 0x40064fb	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x40064e1	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40064e5	        0x4883c008	                              add rax, 8	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40064e9	          0x4889c7	                            mov rdi, rax	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40064ec	      0xe8fdb5ffff	              call sym.pop_stack_element	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x40064f1	      0xb8ffffffff	                     mov eax, 0xffffffff	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x40064f6	      0xe920010000	                           jmp 0x400661b	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x40064fb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x40064ff	        0x4883c001	                              add rax, 1	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006503	        0x488945a8	             mov qword [rbp - 0x58], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006507	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400650b	           0xfb600	                   movzx eax, byte [rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400650e	            0x84c0	                             test al, al	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006510	            0x741b	                            je 0x400652d	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006512	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006516	          0x4889c7	                            mov rdi, rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006519	      0xe826bdffff	                      call sym.find_next	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400651e	        0x488945b0	             mov qword [rbp - 0x50], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006522	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4006527	     0xf8521ffffff	                           jne 0x400644e	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400652d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4006531	           0xfb600	                   movzx eax, byte [rax]	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4006534	            0x84c0	                             test al, al	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4006536	            0x7431	                            je 0x4006569	      2247	ref-filter.c	FUNCTION_83	IF_3
0x4006538	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x400653c	          0x4889c7	                            mov rdi, rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x400653f	      0xe800000000	                          call 0x4006544	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4006544	          0x4889c2	                            mov rdx, rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4006547	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x400654b	          0x4801d0	                            add rax, rdx	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x400654e	        0x488945b0	             mov qword [rbp - 0x50], rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4006552	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4006556	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x400655a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x400655e	          0x4889ce	                            mov rsi, rcx	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4006561	          0x4889c7	                            mov rdi, rax	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4006564	      0xe8c9fdffff	                 call sym.append_literal	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4006569	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2251	ref-filter.c	FUNCTION_83	IF_4
0x400656d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4006570	            0x85c0	                           test eax, eax	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4006572	            0x743a	                            je 0x40065ae	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4006574	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2253	ref-filter.c	FUNCTION_83	IF_4
0x400657c	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006580	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006584	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006588	          0x4889ce	                            mov rsi, rcx	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x400658b	          0x4889c7	                            mov rdi, rax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x400658e	      0xe89cb4ffff	                    call sym.append_atom	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006593	            0x85c0	                           test eax, eax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006595	            0x7417	                            je 0x40065ae	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x4006597	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x400659b	        0x4883c008	                              add rax, 8	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x400659f	          0x4889c7	                            mov rdi, rax	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x40065a2	      0xe847b5ffff	              call sym.pop_stack_element	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x40065a7	      0xb8ffffffff	                     mov eax, 0xffffffff	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x40065ac	            0xeb6d	                           jmp 0x400661b	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x40065ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2259	ref-filter.c	FUNCTION_83	IF_6
0x40065b2	          0x488b00	                    mov rax, qword [rax]	      2259	ref-filter.c	FUNCTION_83	IF_6
0x40065b5	          0x4885c0	                           test rax, rax	      2259	ref-filter.c	FUNCTION_83	IF_6
0x40065b8	            0x7435	                            je 0x40065ef	      2259	ref-filter.c	FUNCTION_83	IF_6
0x40065ba	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x40065be	        0x4883c008	                              add rax, 8	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x40065c2	          0x4889c7	                            mov rdi, rax	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x40065c5	      0xe824b5ffff	              call sym.pop_stack_element	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x40065ca	      0xbf00000000	                              mov edi, 0	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065cf	      0xe8c99effff	                               call sym.	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065d4	          0x4889c2	                            mov rdx, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065d7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065db	      0xbeffffffff	                     mov esi, 0xffffffff	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065e0	          0x4889c7	                            mov rdi, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065e3	      0xb800000000	                              mov eax, 0	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065e8	      0xe867a0ffff	                call sym.strbuf_addf_ret	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065ed	            0xeb2c	                           jmp 0x400661b	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40065ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x40065f3	        0x488d5008	                      lea rdx, [rax + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x40065f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x40065fb	          0x4889d6	                            mov rsi, rdx	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x40065fe	          0x4889c7	                            mov rdi, rax	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4006601	      0xe800000000	                          call 0x4006606	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4006606	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x400660a	        0x4883c008	                              add rax, 8	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x400660e	          0x4889c7	                            mov rdi, rax	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4006611	      0xe8d8b4ffff	              call sym.pop_stack_element	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x4006616	      0xb800000000	                              mov eax, 0	      2265	ref-filter.c	FUNCTION_83
0x400661b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2266	ref-filter.c	FUNCTION_83
0x400661f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2266	ref-filter.c	FUNCTION_83
0x4006628	            0x7405	                            je 0x400662f	      2266	ref-filter.c	FUNCTION_83
0x400662a	      0xe800000000	                          call 0x400662f	      2266	ref-filter.c	FUNCTION_83
0x400662f	              0xc9	                                   leave	      2266	ref-filter.c	FUNCTION_83
0x4006630	              0xc3	                                     ret	      2266	ref-filter.c	FUNCTION_83
if_then_else_handler	WHILE,0:FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,4:ELSE,2	84
0x4001c58	              0x55	                                push rbp	       602	ref-filter.c	FUNCTION_23
0x4001c59	          0x4889e5	                            mov rbp, rsp	       602	ref-filter.c	FUNCTION_23
0x4001c5c	        0x4883ec30	                           sub rsp, 0x30	       602	ref-filter.c	FUNCTION_23
0x4001c60	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       602	ref-filter.c	FUNCTION_23
0x4001c64	    0x64488b042528	                mov rax, qword fs:[0x28]	       602	ref-filter.c	FUNCTION_23
0x4001c6d	        0x488945f8	                mov qword [rbp - 8], rax	       602	ref-filter.c	FUNCTION_23
0x4001c71	            0x31c0	                            xor eax, eax	       602	ref-filter.c	FUNCTION_23
0x4001c73	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       603	ref-filter.c	FUNCTION_23
0x4001c77	          0x488b00	                    mov rax, qword [rax]	       603	ref-filter.c	FUNCTION_23
0x4001c7a	        0x488945e0	             mov qword [rbp - 0x20], rax	       603	ref-filter.c	FUNCTION_23
0x4001c7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	ref-filter.c	FUNCTION_23
0x4001c82	          0x488b00	                    mov rax, qword [rax]	       604	ref-filter.c	FUNCTION_23
0x4001c85	        0x488945e8	             mov qword [rbp - 0x18], rax	       604	ref-filter.c	FUNCTION_23
0x4001c89	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       605	ref-filter.c	FUNCTION_23
0x4001c8d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       605	ref-filter.c	FUNCTION_23
0x4001c91	        0x488945f0	             mov qword [rbp - 0x10], rax	       605	ref-filter.c	FUNCTION_23
0x4001c95	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       607	ref-filter.c	FUNCTION_23	IF_1
0x4001c99	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       607	ref-filter.c	FUNCTION_23	IF_1
0x4001c9d	          0x83e001	                              and eax, 1	       607	ref-filter.c	FUNCTION_23	IF_1
0x4001ca0	            0x84c0	                             test al, al	       607	ref-filter.c	FUNCTION_23	IF_1
0x4001ca2	            0x7517	                           jne 0x4001cbb	       607	ref-filter.c	FUNCTION_23	IF_1
0x4001ca4	      0xbf00000000	                              mov edi, 0	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4001ca9	      0xe8efe7ffff	                               call sym.	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4001cae	          0x4889c7	                            mov rdi, rax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4001cb1	      0xb800000000	                              mov eax, 0	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4001cb6	      0xe800000000	                          call 0x4001cbb	       608	ref-filter.c	FUNCTION_23	CALL_2
0x4001cbb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       610	ref-filter.c	FUNCTION_23	IF_2
0x4001cbf	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       610	ref-filter.c	FUNCTION_23	IF_2
0x4001cc3	          0x83e002	                              and eax, 2	       610	ref-filter.c	FUNCTION_23	IF_2
0x4001cc6	            0x84c0	                             test al, al	       610	ref-filter.c	FUNCTION_23	IF_2
0x4001cc8	            0x7470	                            je 0x4001d3a	       610	ref-filter.c	FUNCTION_23	IF_2
0x4001cca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cce	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cd2	          0x83e004	                              and eax, 4	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cd5	            0x84c0	                             test al, al	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cd7	            0x7423	                            je 0x4001cfc	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cd9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cdd	        0x4883c008	                              add rax, 8	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001ce1	      0xbe00000000	                              mov esi, 0	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001ce6	          0x4889c7	                            mov rdi, rax	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001ce9	      0xe872e6ffff	                  call sym.strbuf_setlen	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4001cee	        0x488d45e0	                   lea rax, [rbp - 0x20]	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x4001cf2	          0x4889c7	                            mov rdi, rax	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x4001cf5	      0xe8f4fdffff	              call sym.pop_stack_element	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x4001cfa	            0xeb62	                           jmp 0x4001d5e	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x4001cfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d00	        0x488d5008	                      lea rdx, [rax + 8]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d04	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d08	        0x4883c008	                              add rax, 8	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d0c	          0x4889d6	                            mov rsi, rdx	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d0f	          0x4889c7	                            mov rdi, rax	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d12	      0xe87fe5ffff	                    call sym.strbuf_swap	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x4001d17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1
0x4001d1b	        0x4883c008	                              add rax, 8	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1
0x4001d1f	      0xbe00000000	                              mov esi, 0	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1
0x4001d24	          0x4889c7	                            mov rdi, rax	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1
0x4001d27	      0xe834e6ffff	                  call sym.strbuf_setlen	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1
0x4001d2c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4001d30	          0x4889c7	                            mov rdi, rax	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4001d33	      0xe8b6fdffff	              call sym.pop_stack_element	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4001d38	            0xeb24	                           jmp 0x4001d5e	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x4001d3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d3e	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d42	          0x83e004	                              and eax, 4	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d45	            0x84c0	                             test al, al	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d47	            0x7515	                           jne 0x4001d5e	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d4d	        0x4883c008	                              add rax, 8	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d51	      0xbe00000000	                              mov esi, 0	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d56	          0x4889c7	                            mov rdi, rax	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d59	      0xe802e6ffff	                  call sym.strbuf_setlen	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4001d5e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       632	ref-filter.c	FUNCTION_23
0x4001d62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       632	ref-filter.c	FUNCTION_23
0x4001d66	          0x488910	                    mov qword [rax], rdx	       632	ref-filter.c	FUNCTION_23
0x4001d69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4001d6d	          0x4889c7	                            mov rdi, rax	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4001d70	      0xe800000000	                          call 0x4001d75	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4001d75	              0x90	                                     nop	       634	ref-filter.c	FUNCTION_23
0x4001d76	        0x488b45f8	                mov rax, qword [rbp - 8]	       634	ref-filter.c	FUNCTION_23
0x4001d7a	    0x644833042528	                xor rax, qword fs:[0x28]	       634	ref-filter.c	FUNCTION_23
0x4001d83	            0x7405	                            je 0x4001d8a	       634	ref-filter.c	FUNCTION_23
0x4001d85	      0xe800000000	                          call 0x4001d8a	       634	ref-filter.c	FUNCTION_23
0x4001d8a	              0xc9	                                   leave	       634	ref-filter.c	FUNCTION_23
0x4001d8b	              0xc3	                                     ret	       634	ref-filter.c	FUNCTION_23
oidcmp	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	12
0x40004f3	              0x55	                                push rbp	       979	cache.h	FUNCTION_99
0x40004f4	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_99
0x40004f7	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_99
0x40004fb	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_99
0x40004ff	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_99
0x4000503	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_99	CALL_1
0x4000507	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_99	CALL_1
0x400050b	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_99	CALL_1
0x400050e	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_99	CALL_1
0x4000511	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_99	CALL_1
0x4000516	              0xc9	                                   leave	       981	cache.h	FUNCTION_99
0x4000517	              0xc3	                                     ret	       981	cache.h	FUNCTION_99
find_wholine	WHILE,1:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,3:ELSE,0	55
0x4002aac	              0x55	                                push rbp	       912	ref-filter.c	FUNCTION_36
0x4002aad	          0x4889e5	                            mov rbp, rsp	       912	ref-filter.c	FUNCTION_36
0x4002ab0	        0x4883ec30	                           sub rsp, 0x30	       912	ref-filter.c	FUNCTION_36
0x4002ab4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       912	ref-filter.c	FUNCTION_36
0x4002ab8	          0x8975e4	             mov dword [rbp - 0x1c], esi	       912	ref-filter.c	FUNCTION_36
0x4002abb	        0x488955d8	             mov qword [rbp - 0x28], rdx	       912	ref-filter.c	FUNCTION_36
0x4002abf	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       912	ref-filter.c	FUNCTION_36
0x4002ac3	      0xe985000000	                           jmp 0x4002b4d	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4002ac8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002acb	          0x4863d0	                         movsxd rdx, eax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ace	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ad2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ad6	          0x4889ce	                            mov rsi, rcx	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ad9	          0x4889c7	                            mov rdi, rax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002adc	      0xe800000000	                          call 0x4002ae1	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ae1	            0x85c0	                           test eax, eax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ae3	            0x7526	                           jne 0x4002b0b	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002ae5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002ae8	          0x4863d0	                         movsxd rdx, eax	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002aeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002aef	          0x4801d0	                            add rax, rdx	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002af2	           0xfb600	                   movzx eax, byte [rax]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002af5	            0x3c20	                            cmp al, 0x20	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002af7	            0x7512	                           jne 0x4002b0b	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4002af9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002afc	            0x4898	                                    cdqe	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002afe	        0x488d5001	                      lea rdx, [rax + 1]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002b02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002b06	          0x4801d0	                            add rax, rdx	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002b09	            0xeb56	                           jmp 0x4002b61	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x4002b0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4002b0f	      0xbe0a000000	                            mov esi, 0xa	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4002b14	          0x4889c7	                            mov rdi, rax	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4002b17	      0xe800000000	                          call 0x4002b1c	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4002b1c	        0x488945f8	                mov qword [rbp - 8], rax	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x4002b20	      0x48837df800	                  cmp qword [rbp - 8], 0	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4002b25	            0x7507	                           jne 0x4002b2e	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4002b27	      0xb800000000	                              mov eax, 0	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4002b2c	            0xeb33	                           jmp 0x4002b61	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x4002b2e	      0x488345f801	                  add qword [rbp - 8], 1	       921	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b33	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b37	           0xfb600	                   movzx eax, byte [rax]	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b3a	            0x3c0a	                             cmp al, 0xa	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b3c	            0x7507	                           jne 0x4002b45	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b3e	      0xb800000000	                              mov eax, 0	       923	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b43	            0xeb1c	                           jmp 0x4002b61	       923	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x4002b45	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b49	        0x488945d8	             mov qword [rbp - 0x28], rax	       924	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b51	           0xfb600	                   movzx eax, byte [rax]	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b54	            0x84c0	                             test al, al	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b56	     0xf856cffffff	                           jne 0x4002ac8	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x4002b5c	      0xb800000000	                              mov eax, 0	       926	ref-filter.c	FUNCTION_36
0x4002b61	              0xc9	                                   leave	       927	ref-filter.c	FUNCTION_36
0x4002b62	              0xc3	                                     ret	       927	ref-filter.c	FUNCTION_36
body_atom_parser	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	23
0x4000bdf	              0x55	                                push rbp	       204	ref-filter.c	FUNCTION_6
0x4000be0	          0x4889e5	                            mov rbp, rsp	       204	ref-filter.c	FUNCTION_6
0x4000be3	        0x4883ec20	                           sub rsp, 0x20	       204	ref-filter.c	FUNCTION_6
0x4000be7	        0x48897df8	                mov qword [rbp - 8], rdi	       204	ref-filter.c	FUNCTION_6
0x4000beb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       204	ref-filter.c	FUNCTION_6
0x4000bef	        0x488955e8	             mov qword [rbp - 0x18], rdx	       204	ref-filter.c	FUNCTION_6
0x4000bf3	        0x48894de0	             mov qword [rbp - 0x20], rcx	       204	ref-filter.c	FUNCTION_6
0x4000bf7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       205	ref-filter.c	FUNCTION_6	IF_1
0x4000bfc	            0x7425	                            je 0x4000c23	       205	ref-filter.c	FUNCTION_6	IF_1
0x4000bfe	      0xbf00000000	                              mov edi, 0	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c03	      0xe895f8ffff	                               call sym.	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c08	          0x4889c2	                            mov rdx, rax	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c0f	      0xbeffffffff	                     mov esi, 0xffffffff	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c14	          0x4889c7	                            mov rdi, rax	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c17	      0xb800000000	                              mov eax, 0	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c1c	      0xe833faffff	                call sym.strbuf_addf_ret	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c21	            0xeb10	                           jmp 0x4000c33	       206	ref-filter.c	FUNCTION_6	CALL_2
0x4000c23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	ref-filter.c	FUNCTION_6
0x4000c27	    0xc74010020000	               mov dword [rax + 0x10], 2	       207	ref-filter.c	FUNCTION_6
0x4000c2e	      0xb800000000	                              mov eax, 0	       208	ref-filter.c	FUNCTION_6
0x4000c33	              0xc9	                                   leave	       209	ref-filter.c	FUNCTION_6
0x4000c34	              0xc3	                                     ret	       209	ref-filter.c	FUNCTION_6
rstrip_ref_components	WHILE,1:FOR,1:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,1	65
0x4003b08	              0x55	                                push rbp	      1276	ref-filter.c	FUNCTION_50
0x4003b09	          0x4889e5	                            mov rbp, rsp	      1276	ref-filter.c	FUNCTION_50
0x4003b0c	        0x4883ec40	                           sub rsp, 0x40	      1276	ref-filter.c	FUNCTION_50
0x4003b10	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1276	ref-filter.c	FUNCTION_50
0x4003b14	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1276	ref-filter.c	FUNCTION_50
0x4003b17	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1277	ref-filter.c	FUNCTION_50
0x4003b1a	            0x4898	                                    cdqe	      1277	ref-filter.c	FUNCTION_50
0x4003b1c	        0x488945e0	             mov qword [rbp - 0x20], rax	      1277	ref-filter.c	FUNCTION_50
0x4003b20	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x4003b24	          0x4889c7	                            mov rdi, rax	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x4003b27	      0xe800000000	                          call 0x4003b2c	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x4003b2c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x4003b30	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1280	ref-filter.c	FUNCTION_50	IF_1
0x4003b34	     0xf898d000000	                           jns 0x4003bc7	      1280	ref-filter.c	FUNCTION_50	IF_1
0x4003b3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1282	ref-filter.c	FUNCTION_50	IF_1
0x4003b3e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1282	ref-filter.c	FUNCTION_50	IF_1
0x4003b42	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b49	            0xeb2b	                           jmp 0x4003b76	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b4e	          0x4863d0	                         movsxd rdx, eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b55	          0x4801d0	                            add rax, rdx	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b58	           0xfb600	                   movzx eax, byte [rax]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b5b	            0x3c2f	                            cmp al, 0x2f	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b5d	            0x750b	                           jne 0x4003b6a	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b5f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b62	          0x83c001	                              add eax, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b65	          0x8945dc	             mov dword [rbp - 0x24], eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b68	            0xeb0c	                           jmp 0x4003b76	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b6e	        0x4883c001	                              add rax, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b72	        0x488945e8	             mov qword [rbp - 0x18], rax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b76	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b79	          0x4863d0	                         movsxd rdx, eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b80	          0x4801d0	                            add rax, rdx	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b83	           0xfb600	                   movzx eax, byte [rax]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b86	            0x84c0	                             test al, al	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b88	            0x75c1	                           jne 0x4003b4b	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x4003b8a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b8d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b90	             0x1d0	                            add eax, edx	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b92	          0x83c001	                              add eax, 1	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b95	            0x4898	                                    cdqe	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b97	        0x488945e0	             mov qword [rbp - 0x20], rax	      1293	ref-filter.c	FUNCTION_50	IF_1
0x4003b9b	            0xeb2a	                           jmp 0x4003bc7	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003b9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x4003ba1	      0xbe2f000000	                           mov esi, 0x2f	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x4003ba6	          0x4889c7	                            mov rdi, rax	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x4003ba9	      0xe800000000	                          call 0x4003bae	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x4003bae	        0x488945f8	                mov qword [rbp - 8], rax	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x4003bb2	      0x48837df800	                  cmp qword [rbp - 8], 0	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x4003bb7	            0x7507	                           jne 0x4003bc0	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x4003bb9	      0xb800000000	                              mov eax, 0	      1299	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x4003bbe	            0xeb1c	                           jmp 0x4003bdc	      1299	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x4003bc0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1301	ref-filter.c	FUNCTION_50	WHILE_1	ELSE_1
0x4003bc4	          0xc60000	                       mov byte [rax], 0	      1301	ref-filter.c	FUNCTION_50	WHILE_1	ELSE_1
0x4003bc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003bcb	        0x488d50ff	                      lea rdx, [rax - 1]	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003bcf	        0x488955e0	             mov qword [rbp - 0x20], rdx	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003bd3	          0x4885c0	                           test rax, rax	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003bd6	            0x7fc5	                            jg 0x4003b9d	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x4003bd8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x4003bdc	              0xc9	                                   leave	      1304	ref-filter.c	FUNCTION_50	ELSE_1
0x4003bdd	              0xc3	                                     ret	      1304	ref-filter.c	FUNCTION_50	ELSE_1
parse_align_position	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,3:ELSE,2	31
0x4001106	              0x55	                                push rbp	       296	ref-filter.c	FUNCTION_12
0x4001107	          0x4889e5	                            mov rbp, rsp	       296	ref-filter.c	FUNCTION_12
0x400110a	        0x4883ec10	                           sub rsp, 0x10	       296	ref-filter.c	FUNCTION_12
0x400110e	        0x48897df8	                mov qword [rbp - 8], rdi	       296	ref-filter.c	FUNCTION_12
0x4001112	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4001116	      0xbe00000000	                              mov esi, 0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x400111b	          0x4889c7	                            mov rdi, rax	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x400111e	      0xe800000000	                          call 0x4001123	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4001123	            0x85c0	                           test eax, eax	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4001125	            0x7507	                           jne 0x400112e	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4001127	      0xb802000000	                              mov eax, 2	       298	ref-filter.c	FUNCTION_12	IF_1
0x400112c	            0xeb3d	                           jmp 0x400116b	       298	ref-filter.c	FUNCTION_12	IF_1
0x400112e	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001132	      0xbe00000000	                              mov esi, 0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001137	          0x4889c7	                            mov rdi, rax	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x400113a	      0xe800000000	                          call 0x400113f	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x400113f	            0x85c0	                           test eax, eax	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001141	            0x7507	                           jne 0x400114a	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001143	      0xb801000000	                              mov eax, 1	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x4001148	            0xeb21	                           jmp 0x400116b	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x400114a	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x400114e	      0xbe00000000	                              mov esi, 0	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4001153	          0x4889c7	                            mov rdi, rax	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4001156	      0xe800000000	                          call 0x400115b	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x400115b	            0x85c0	                           test eax, eax	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x400115d	            0x7507	                           jne 0x4001166	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x400115f	      0xb800000000	                              mov eax, 0	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4001164	            0xeb05	                           jmp 0x400116b	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4001166	      0xb8ffffffff	                     mov eax, 0xffffffff	       303	ref-filter.c	FUNCTION_12
0x400116b	              0xc9	                                   leave	       304	ref-filter.c	FUNCTION_12
0x400116c	              0xc3	                                     ret	       304	ref-filter.c	FUNCTION_12
contains_test	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	36
0x4004ea8	              0x55	                                push rbp	      1671	ref-filter.c	FUNCTION_60
0x4004ea9	          0x4889e5	                            mov rbp, rsp	      1671	ref-filter.c	FUNCTION_60
0x4004eac	        0x4883ec30	                           sub rsp, 0x30	      1671	ref-filter.c	FUNCTION_60
0x4004eb0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1671	ref-filter.c	FUNCTION_60
0x4004eb4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1671	ref-filter.c	FUNCTION_60
0x4004eb8	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1671	ref-filter.c	FUNCTION_60
0x4004ebc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004ec0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004ec4	          0x4889d6	                            mov rsi, rdx	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004ec7	          0x4889c7	                            mov rdi, rax	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004eca	      0xe830ffffff	              call sym.contains_cache_at	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004ecf	        0x488945f8	                mov qword [rbp - 8], rax	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4004ed3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4004ed7	            0x8b00	                    mov eax, dword [rax]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4004ed9	            0x85c0	                           test eax, eax	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4004edb	            0x7408	                            je 0x4004ee5	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4004edd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4004ee1	            0x8b00	                    mov eax, dword [rax]	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4004ee3	            0xeb39	                           jmp 0x4004f1e	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4004ee5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004ee9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004eed	          0x4889d6	                            mov rsi, rdx	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004ef0	          0x4889c7	                            mov rdi, rax	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004ef3	      0xe85bffffff	                 call sym.in_commit_list	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004ef8	            0x85c0	                           test eax, eax	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004efa	            0x7411	                            je 0x4004f0d	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4004efc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4004f00	    0xc70002000000	                      mov dword [rax], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4004f06	      0xb802000000	                              mov eax, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4004f0b	            0xeb11	                           jmp 0x4004f1e	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4004f0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4004f11	          0x4889c7	                            mov rdi, rax	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4004f14	      0xe800000000	                          call 0x4004f19	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4004f19	      0xb800000000	                              mov eax, 0	      1686	ref-filter.c	FUNCTION_60
0x4004f1e	              0xc9	                                   leave	      1687	ref-filter.c	FUNCTION_60
0x4004f1f	              0xc3	                                     ret	      1687	ref-filter.c	FUNCTION_60
head_atom_parser	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	18
0x4001501	              0x55	                                push rbp	       375	ref-filter.c	FUNCTION_15
0x4001502	          0x4889e5	                            mov rbp, rsp	       375	ref-filter.c	FUNCTION_15
0x4001505	        0x4883ec20	                           sub rsp, 0x20	       375	ref-filter.c	FUNCTION_15
0x4001509	        0x48897df8	                mov qword [rbp - 8], rdi	       375	ref-filter.c	FUNCTION_15
0x400150d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       375	ref-filter.c	FUNCTION_15
0x4001511	        0x488955e8	             mov qword [rbp - 0x18], rdx	       375	ref-filter.c	FUNCTION_15
0x4001515	        0x48894de0	             mov qword [rbp - 0x20], rcx	       375	ref-filter.c	FUNCTION_15
0x4001519	      0xb900000000	                              mov ecx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x400151e	      0xba00000000	                              mov edx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4001523	      0xbe01000000	                              mov esi, 1	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4001528	      0xbf00000000	                              mov edi, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x400152d	      0xe800000000	                          call 0x4001532	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4001532	          0x4889c2	                            mov rdx, rax	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4001535	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4001539	        0x48895010	             mov qword [rax + 0x10], rdx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x400153d	      0xb800000000	                              mov eax, 0	       377	ref-filter.c	FUNCTION_15
0x4001542	              0xc9	                                   leave	       378	ref-filter.c	FUNCTION_15
0x4001543	              0xc3	                                     ret	       378	ref-filter.c	FUNCTION_15
hex2chr	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	31
0x40005b3	              0x55	                                push rbp	      1281	cache.h	FUNCTION_115
0x40005b4	          0x4889e5	                            mov rbp, rsp	      1281	cache.h	FUNCTION_115
0x40005b7	              0x53	                                push rbx	      1281	cache.h	FUNCTION_115
0x40005b8	        0x4883ec18	                           sub rsp, 0x18	      1281	cache.h	FUNCTION_115
0x40005bc	        0x48897de0	             mov qword [rbp - 0x20], rdi	      1281	cache.h	FUNCTION_115
0x40005c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1282	cache.h	FUNCTION_115	CALL_1
0x40005c4	           0xfb600	                   movzx eax, byte [rax]	      1282	cache.h	FUNCTION_115	CALL_1
0x40005c7	           0xfb6c0	                           movzx eax, al	      1282	cache.h	FUNCTION_115	CALL_1
0x40005ca	            0x89c7	                            mov edi, eax	      1282	cache.h	FUNCTION_115	CALL_1
0x40005cc	      0xe8c7ffffff	                         call sym.hexval	      1282	cache.h	FUNCTION_115	CALL_1
0x40005d1	          0x8945f4	              mov dword [rbp - 0xc], eax	      1282	cache.h	FUNCTION_115	CALL_1
0x40005d4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_115	CALL_2
0x40005d7	          0x83e0f0	                     and eax, 0xfffffff0	      1283	cache.h	FUNCTION_115	CALL_2
0x40005da	            0x85c0	                           test eax, eax	      1283	cache.h	FUNCTION_115	CALL_2
0x40005dc	            0x7521	                           jne 0x40005ff	      1283	cache.h	FUNCTION_115	CALL_2
0x40005de	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_115	CALL_2
0x40005e1	          0xc1e004	                              shl eax, 4	      1283	cache.h	FUNCTION_115	CALL_2
0x40005e4	            0x89c3	                            mov ebx, eax	      1283	cache.h	FUNCTION_115	CALL_2
0x40005e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1283	cache.h	FUNCTION_115	CALL_2
0x40005ea	        0x4883c001	                              add rax, 1	      1283	cache.h	FUNCTION_115	CALL_2
0x40005ee	           0xfb600	                   movzx eax, byte [rax]	      1283	cache.h	FUNCTION_115	CALL_2
0x40005f1	           0xfb6c0	                           movzx eax, al	      1283	cache.h	FUNCTION_115	CALL_2
0x40005f4	            0x89c7	                            mov edi, eax	      1283	cache.h	FUNCTION_115	CALL_2
0x40005f6	      0xe89dffffff	                         call sym.hexval	      1283	cache.h	FUNCTION_115	CALL_2
0x40005fb	             0x9d8	                             or eax, ebx	      1283	cache.h	FUNCTION_115	CALL_2
0x40005fd	            0xeb03	                           jmp 0x4000602	      1283	cache.h	FUNCTION_115	CALL_2
0x40005ff	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1283	cache.h	FUNCTION_115	CALL_2
0x4000602	        0x4883c418	                           add rsp, 0x18	      1284	cache.h	FUNCTION_115
0x4000606	              0x5b	                                 pop rbx	      1284	cache.h	FUNCTION_115
0x4000607	              0x5d	                                 pop rbp	      1284	cache.h	FUNCTION_115
0x4000608	              0xc3	                                     ret	      1284	cache.h	FUNCTION_115
get_refname	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	21
0x40041c9	              0x55	                                push rbp	      1428	ref-filter.c	FUNCTION_55
0x40041ca	          0x4889e5	                            mov rbp, rsp	      1428	ref-filter.c	FUNCTION_55
0x40041cd	        0x4883ec10	                           sub rsp, 0x10	      1428	ref-filter.c	FUNCTION_55
0x40041d1	        0x48897df8	                mov qword [rbp - 8], rdi	      1428	ref-filter.c	FUNCTION_55
0x40041d5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1428	ref-filter.c	FUNCTION_55
0x40041d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1429	ref-filter.c	FUNCTION_55	IF_1
0x40041dd	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1429	ref-filter.c	FUNCTION_55	IF_1
0x40041e0	          0x83e020	                           and eax, 0x20	      1429	ref-filter.c	FUNCTION_55	IF_1
0x40041e3	            0x85c0	                           test eax, eax	      1429	ref-filter.c	FUNCTION_55	IF_1
0x40041e5	            0x7407	                            je 0x40041ee	      1429	ref-filter.c	FUNCTION_55	IF_1
0x40041e7	      0xe800000000	                          call 0x40041ec	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x40041ec	            0xeb1b	                           jmp 0x4004209	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x40041ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x40041f2	        0x488d5038	                   lea rdx, [rax + 0x38]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x40041f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x40041fa	        0x4883c010	                           add rax, 0x10	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x40041fe	          0x4889d6	                            mov rsi, rdx	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4004201	          0x4889c7	                            mov rdi, rax	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4004204	      0xe8d5f9ffff	                       call sym.show_ref	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4004209	              0xc9	                                   leave	      1432	ref-filter.c	FUNCTION_55
0x400420a	              0xc3	                                     ret	      1432	ref-filter.c	FUNCTION_55
st_mult	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	22
0x40000e5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_143
0x40000e6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_143
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_143
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_143
0x40000f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_143
0x40000f5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_143	IF_1
0x40000fa	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_143	IF_1
0x40000fc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_143	IF_1
0x4000103	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_143	IF_1
0x4000108	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_143	IF_1
0x400010c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_143	IF_1
0x4000110	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_143	IF_1
0x4000112	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x4000116	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x400011a	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x400011d	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x4000122	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x4000127	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_143	IF_1	CALL_1
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_143
0x4000130	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_143
0x4000135	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_143
0x4000136	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_143
grab_sub_body_contents	WHILE,0:FOR,1:CALL,14:DO,0:functions,0:SWITCH,0:IF,11:ELSE,6	226
0x40034b6	              0x55	                                push rbp	      1136	ref-filter.c	FUNCTION_45
0x40034b7	          0x4889e5	                            mov rbp, rsp	      1136	ref-filter.c	FUNCTION_45
0x40034ba	    0x4881ecb00000	                           sub rsp, 0xb0	      1136	ref-filter.c	FUNCTION_45
0x40034c1	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1136	ref-filter.c	FUNCTION_45
0x40034c8	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      1136	ref-filter.c	FUNCTION_45
0x40034ce	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1136	ref-filter.c	FUNCTION_45
0x40034d5	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	      1136	ref-filter.c	FUNCTION_45
0x40034dc	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      1136	ref-filter.c	FUNCTION_45
0x40034e3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1136	ref-filter.c	FUNCTION_45
0x40034ec	        0x488945f8	                mov qword [rbp - 8], rax	      1136	ref-filter.c	FUNCTION_45
0x40034f0	            0x31c0	                            xor eax, eax	      1136	ref-filter.c	FUNCTION_45
0x40034f2	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1138	ref-filter.c	FUNCTION_45
0x40034fa	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1138	ref-filter.c	FUNCTION_45
0x4003502	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1138	ref-filter.c	FUNCTION_45
0x400350a	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1139	ref-filter.c	FUNCTION_45
0x4003512	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1139	ref-filter.c	FUNCTION_45
0x400351a	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1139	ref-filter.c	FUNCTION_45
0x4003522	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1139	ref-filter.c	FUNCTION_45
0x400352a	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4003531	      0xe9d5020000	                           jmp 0x400380b	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4003536	    0x488b0d000000	            mov rcx, qword [0x0400353d] 	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x400353d	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003540	          0x4863d0	                         movsxd rdx, eax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003543	          0x4889d0	                            mov rax, rdx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003546	          0x4801c0	                            add rax, rax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003549	          0x4801d0	                            add rax, rdx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x400354c	        0x48c1e005	                              shl rax, 5	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003550	          0x4801c8	                            add rax, rcx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003553	        0x488945c8	             mov qword [rbp - 0x38], rax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x4003557	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x400355b	          0x488b00	                    mov rax, qword [rax]	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x400355e	        0x488945c0	             mov qword [rbp - 0x40], rax	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x4003562	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x4003565	            0x4898	                                    cdqe	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x4003567	        0x48c1e005	                              shl rax, 5	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x400356b	          0x4889c2	                            mov rdx, rax	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x400356e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x4003575	          0x4801d0	                            add rax, rdx	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x4003578	        0x488945d0	             mov qword [rbp - 0x30], rax	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x400357c	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003583	           0xf95c2	                                setne dl	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003586	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400358a	           0xfb600	                   movzx eax, byte [rax]	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400358d	            0x3c2a	                            cmp al, 0x2a	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400358f	           0xf94c0	                                 sete al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003592	            0x31d0	                            xor eax, edx	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003594	            0x84c0	                             test al, al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003596	     0xf8567020000	                           jne 0x4003803	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x400359c	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1147	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x40035a3	            0x7405	                            je 0x40035aa	      1147	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x40035a5	      0x488345c001	               add qword [rbp - 0x40], 1	      1148	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x40035aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035ae	      0xbe00000000	                              mov esi, 0	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035b3	          0x4889c7	                            mov rdi, rax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035b6	      0xe800000000	                          call 0x40035bb	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035bb	            0x85c0	                           test eax, eax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035bd	            0x7443	                            je 0x4003602	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035c3	      0xbe00000000	                              mov esi, 0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035c8	          0x4889c7	                            mov rdi, rax	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035cb	      0xe800000000	                          call 0x40035d0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035d0	            0x85c0	                           test eax, eax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035d2	            0x742e	                            je 0x4003602	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x40035d4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40035d8	      0xbe00000000	                              mov esi, 0	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40035dd	          0x4889c7	                            mov rdi, rax	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40035e0	      0xe800000000	                          call 0x40035e5	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40035e5	            0x85c0	                           test eax, eax	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035e7	            0x7519	                           jne 0x4003602	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x40035e9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40035ed	      0xbe00000000	                              mov esi, 0	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40035f2	          0x4889c7	                            mov rdi, rax	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40035f5	      0xe800000000	                          call 0x40035fa	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x40035fa	            0x85c0	                           test eax, eax	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x40035fc	     0xf8404020000	                            je 0x4003806	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x4003602	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x4003606	          0x4885c0	                           test rax, rax	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x4003609	            0x753d	                           jne 0x4003648	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x400360b	        0x4c8d4da8	                    lea r9, [rbp - 0x58]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400360f	        0x4c8d4590	                    lea r8, [rbp - 0x70]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003613	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003617	        0x488d5588	                   lea rdx, [rbp - 0x78]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400361b	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003622	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003629	        0x4883ec08	                              sub rsp, 8	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400362d	        0x488d7db8	                   lea rdi, [rbp - 0x48]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003631	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003632	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003636	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003637	        0x488d7db0	                   lea rdi, [rbp - 0x50]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400363b	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400363c	          0x4889c7	                            mov rdi, rax	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x400363f	      0xe8b7fbffff	                    call sym.find_subpos	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003644	        0x4883c420	                           add rsp, 0x20	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x4003648	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x400364c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x400364f	          0x83f805	                              cmp eax, 5	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x4003652	            0x7522	                           jne 0x4003676	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x4003654	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4003658	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x400365c	          0x4889d6	                            mov rsi, rdx	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x400365f	          0x4889c7	                            mov rdi, rax	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4003662	      0xe82ef6ffff	                   call sym.copy_subject	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4003667	          0x4889c2	                            mov rdx, rax	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x400366a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x400366e	          0x488910	                    mov qword [rax], rdx	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4003671	      0xe991010000	                           jmp 0x4003807	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x4003676	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400367a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400367d	          0x83f802	                              cmp eax, 2	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003680	            0x7522	                           jne 0x40036a4	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003682	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003686	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400368a	          0x4889d6	                            mov rsi, rdx	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400368d	          0x4889c7	                            mov rdi, rax	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003690	      0xe800000000	                          call 0x4003695	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003695	          0x4889c2	                            mov rdx, rax	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x4003698	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400369c	          0x488910	                    mov qword [rax], rdx	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x400369f	      0xe963010000	                           jmp 0x4003807	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x40036a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036a8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036ab	          0x83f801	                              cmp eax, 1	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036ae	            0x7522	                           jne 0x40036d2	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036b0	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036b4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036b8	          0x4889d6	                            mov rsi, rdx	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036bb	          0x4889c7	                            mov rdi, rax	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036be	      0xe800000000	                          call 0x40036c3	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036c3	          0x4889c2	                            mov rdx, rax	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036ca	          0x488910	                    mov qword [rax], rdx	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036cd	      0xe935010000	                           jmp 0x4003807	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x40036d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036d6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036d9	          0x83f804	                              cmp eax, 4	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036dc	            0x7522	                           jne 0x4003700	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036de	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036e2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036e6	          0x4889d6	                            mov rsi, rdx	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036e9	          0x4889c7	                            mov rdi, rax	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036ec	      0xe800000000	                          call 0x40036f1	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036f1	          0x4889c2	                            mov rdx, rax	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036f8	          0x488910	                    mov qword [rax], rdx	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x40036fb	      0xe907010000	                           jmp 0x4003807	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x4003700	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003704	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003707	          0x83f803	                              cmp eax, 3	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x400370a	            0x7578	                           jne 0x4003784	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x400370c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003714	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x400371c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003724	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003728	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x400372c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003730	          0x4829d1	                            sub rcx, rdx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003733	          0x4889ca	                            mov rdx, rcx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003736	          0x4801d0	                            add rax, rdx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x4003739	        0x488945d8	             mov qword [rbp - 0x28], rax	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x400373d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003741	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003744	            0x89c1	                            mov ecx, eax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003746	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x400374a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x400374e	          0x4829d0	                            sub rax, rdx	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003751	          0x4889c2	                            mov rdx, rax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003754	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003758	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x400375c	          0x4889c7	                            mov rdi, rax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x400375f	      0xe85cfcffff	                   call sym.append_lines	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x4003764	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4003768	      0xbe00000000	                              mov esi, 0	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x400376d	          0x4889c7	                            mov rdi, rax	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4003770	      0xe800000000	                          call 0x4003775	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4003775	          0x4889c2	                            mov rdx, rax	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4003778	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x400377c	          0x488910	                    mov qword [rax], rdx	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x400377f	      0xe983000000	                           jmp 0x4003807	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x4003784	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4003788	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x400378b	          0x83f806	                              cmp eax, 6	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x400378e	            0x7550	                           jne 0x40037e0	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4003790	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x4003798	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x40037a0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x40037a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037ac	        0x488d5014	                   lea rdx, [rax + 0x14]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037b0	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037b4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037b8	          0x4889ce	                            mov rsi, rcx	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037bb	          0x4889c7	                            mov rdi, rax	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037be	      0xe800000000	                          call 0x40037c3	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x40037c3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037c7	      0xbe00000000	                              mov esi, 0	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037cc	          0x4889c7	                            mov rdi, rax	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037cf	      0xe800000000	                          call 0x40037d4	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037d4	          0x4889c2	                            mov rdx, rax	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037db	          0x488910	                    mov qword [rax], rdx	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037de	            0xeb27	                           jmp 0x4003807	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x40037e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037e4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037e7	            0x85c0	                           test eax, eax	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037e9	            0x751c	                           jne 0x4003807	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037eb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037ef	          0x4889c7	                            mov rdi, rax	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037f2	      0xe800000000	                          call 0x40037f7	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037f7	          0x4889c2	                            mov rdx, rax	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x40037fe	          0x488910	                    mov qword [rax], rdx	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4003801	            0xeb04	                           jmp 0x4003807	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x4003803	              0x90	                                     nop	      1146	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003804	            0xeb01	                           jmp 0x4003807	      1146	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x4003806	              0x90	                                     nop	      1153	ref-filter.c	FUNCTION_45	FOR_1	IF_3
0x4003807	        0x83458401	               add dword [rbp - 0x7c], 1	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x400380b	    0x8b0500000000	            mov eax, dword [0x04003811] 	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4003811	          0x394584	            cmp dword [rbp - 0x7c], eax 	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x4003814	     0xf8c1cfdffff	                            jl 0x4003536	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x400381a	              0x90	                                     nop	      1185	ref-filter.c	FUNCTION_45
0x400381b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1185	ref-filter.c	FUNCTION_45
0x400381f	    0x644833042528	                xor rax, qword fs:[0x28]	      1185	ref-filter.c	FUNCTION_45
0x4003828	            0x7405	                            je 0x400382f	      1185	ref-filter.c	FUNCTION_45
0x400382a	      0xe800000000	                          call 0x400382f	      1185	ref-filter.c	FUNCTION_45
0x400382f	              0xc9	                                   leave	      1185	ref-filter.c	FUNCTION_45
0x4003830	              0xc3	                                     ret	      1185	ref-filter.c	FUNCTION_45
align_atom_parser	WHILE,0:FOR,1:CALL,22:DO,0:functions,0:SWITCH,0:IF,8:ELSE,4	183
0x400116d	              0x55	                                push rbp	       308	ref-filter.c	FUNCTION_13
0x400116e	          0x4889e5	                            mov rbp, rsp	       308	ref-filter.c	FUNCTION_13
0x4001171	              0x53	                                push rbx	       308	ref-filter.c	FUNCTION_13
0x4001172	        0x4883ec78	                           sub rsp, 0x78	       308	ref-filter.c	FUNCTION_13
0x4001176	        0x48897d98	             mov qword [rbp - 0x68], rdi	       308	ref-filter.c	FUNCTION_13
0x400117a	        0x48897590	             mov qword [rbp - 0x70], rsi	       308	ref-filter.c	FUNCTION_13
0x400117e	        0x48895588	             mov qword [rbp - 0x78], rdx	       308	ref-filter.c	FUNCTION_13
0x4001182	        0x48894d80	             mov qword [rbp - 0x80], rcx	       308	ref-filter.c	FUNCTION_13
0x4001186	    0x64488b042528	                mov rax, qword fs:[0x28]	       308	ref-filter.c	FUNCTION_13
0x400118f	        0x488945e8	             mov qword [rbp - 0x18], rax	       308	ref-filter.c	FUNCTION_13
0x4001193	            0x31c0	                            xor eax, eax	       308	ref-filter.c	FUNCTION_13
0x4001195	        0x488b4590	             mov rax, qword [rbp - 0x70]	       309	ref-filter.c	FUNCTION_13
0x4001199	        0x4883c010	                           add rax, 0x10	       309	ref-filter.c	FUNCTION_13
0x400119d	        0x488945b8	             mov qword [rbp - 0x48], rax	       309	ref-filter.c	FUNCTION_13
0x40011a1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       310	ref-filter.c	FUNCTION_13
0x40011a9	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       310	ref-filter.c	FUNCTION_13
0x40011b0	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       310	ref-filter.c	FUNCTION_13
0x40011b7	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       310	ref-filter.c	FUNCTION_13
0x40011bb	          0x83c801	                               or eax, 1	       310	ref-filter.c	FUNCTION_13
0x40011be	          0x8845d0	               mov byte [rbp - 0x30], al	       310	ref-filter.c	FUNCTION_13
0x40011c1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       310	ref-filter.c	FUNCTION_13
0x40011c9	    0xc745a4ffffff	     mov dword [rbp - 0x5c], 0xffffffff 	       312	ref-filter.c	FUNCTION_13
0x40011d0	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       314	ref-filter.c	FUNCTION_13	IF_1
0x40011d5	            0x7528	                           jne 0x40011ff	       314	ref-filter.c	FUNCTION_13	IF_1
0x40011d7	      0xbf00000000	                              mov edi, 0	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011dc	      0xe8bcf2ffff	                               call sym.	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011e1	          0x4889c2	                            mov rdx, rax	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011e4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011e8	      0xbeffffffff	                     mov esi, 0xffffffff	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011ed	          0x4889c7	                            mov rdi, rax	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011f0	      0xb800000000	                              mov eax, 0	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011f5	      0xe85af4ffff	                call sym.strbuf_addf_ret	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011fa	      0xe929020000	                           jmp 0x4001428	       315	ref-filter.c	FUNCTION_13	CALL_2
0x40011ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       317	ref-filter.c	FUNCTION_13
0x4001203	    0xc70000000000	                      mov dword [rax], 0	       317	ref-filter.c	FUNCTION_13
0x4001209	        0x488b7588	             mov rsi, qword [rbp - 0x78]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400120d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4001211	      0xb9ffffffff	                     mov ecx, 0xffffffff	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4001216	      0xba2c000000	                           mov edx, 0x2c	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400121b	          0x4889c7	                            mov rdi, rax	       319	ref-filter.c	FUNCTION_13	CALL_3
0x400121e	      0xe800000000	                          call 0x4001223	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4001223	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400122a	      0xe98d010000	                           jmp 0x40013bc	       320	ref-filter.c	FUNCTION_13	FOR_1
0x400122f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001233	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001236	          0x4863d2	                         movsxd rdx, edx	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001239	        0x48c1e204	                              shl rdx, 4	       321	ref-filter.c	FUNCTION_13	FOR_1
0x400123d	          0x4801d0	                            add rax, rdx	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001240	          0x488b00	                    mov rax, qword [rax]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001243	        0x488945b0	             mov qword [rbp - 0x50], rax	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4001247	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x400124b	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x400124f	      0xbe00000000	                              mov esi, 0	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x4001254	          0x4889c7	                            mov rdi, rax	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x4001257	      0xe8efedffff	                    call sym.skip_prefix	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x400125c	            0x85c0	                           test eax, eax	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x400125e	            0x7466	                            je 0x40012c6	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x4001260	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x4001264	          0x4889c7	                            mov rdi, rax	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x4001267	      0xe89afeffff	           call sym.parse_align_position	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x400126c	          0x8945ac	             mov dword [rbp - 0x54], eax	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x400126f	        0x837dac00	               cmp dword [rbp - 0x54], 0	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x4001273	            0x7943	                           jns 0x40012b8	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x4001275	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001279	      0xbf00000000	                              mov edi, 0	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x400127e	      0xe81af2ffff	                               call sym.	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001283	          0x4889c1	                            mov rcx, rax	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001286	        0x488b4580	             mov rax, qword [rbp - 0x80]	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x400128a	          0x4889da	                            mov rdx, rbx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x400128d	          0x4889ce	                            mov rsi, rcx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001290	          0x4889c7	                            mov rdi, rax	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001293	      0xb800000000	                              mov eax, 0	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4001298	      0xe800000000	                          call 0x400129d	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x400129d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40012a1	      0xbe00000000	                              mov esi, 0	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40012a6	          0x4889c7	                            mov rdi, rax	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40012a9	      0xe800000000	                          call 0x40012ae	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x40012ae	      0xb8ffffffff	                     mov eax, 0xffffffff	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40012b3	      0xe970010000	                           jmp 0x4001428	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x40012b8	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40012bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40012bf	            0x8910	                    mov dword [rax], edx	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40012c1	      0xe9f2000000	                           jmp 0x40013b8	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x40012c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012ca	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012ce	      0xbe00000000	                              mov esi, 0	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012d3	          0x4889c7	                            mov rdi, rax	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012d6	      0xe870edffff	                    call sym.skip_prefix	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012db	            0x85c0	                           test eax, eax	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012dd	            0x7460	                            je 0x400133f	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x40012df	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012e3	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012e7	      0xbe0a000000	                            mov esi, 0xa	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012ec	          0x4889c7	                            mov rdi, rax	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012ef	      0xe843eeffff	                     call sym.strtoul_ui	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012f4	            0x85c0	                           test eax, eax	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012f6	     0xf84bc000000	                            je 0x40013b8	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x40012fc	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001300	      0xbf00000000	                              mov edi, 0	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001305	      0xe893f1ffff	                               call sym.	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x400130a	          0x4889c1	                            mov rcx, rax	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x400130d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001311	          0x4889da	                            mov rdx, rbx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001314	          0x4889ce	                            mov rsi, rcx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001317	          0x4889c7	                            mov rdi, rax	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x400131a	      0xb800000000	                              mov eax, 0	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x400131f	      0xe800000000	                          call 0x4001324	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4001324	        0x488d45c0	                   lea rax, [rbp - 0x40]	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x4001328	      0xbe00000000	                              mov esi, 0	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x400132d	          0x4889c7	                            mov rdi, rax	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x4001330	      0xe800000000	                          call 0x4001335	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x4001335	      0xb8ffffffff	                     mov eax, 0xffffffff	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x400133a	      0xe9e9000000	                           jmp 0x4001428	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x400133f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x4001343	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x4001347	      0xbe0a000000	                            mov esi, 0xa	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x400134c	          0x4889c7	                            mov rdi, rax	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x400134f	      0xe8e3edffff	                     call sym.strtoul_ui	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x4001354	            0x85c0	                           test eax, eax	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x4001356	            0x7460	                            je 0x40013b8	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x4001358	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400135c	          0x4889c7	                            mov rdi, rax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400135f	      0xe8a2fdffff	           call sym.parse_align_position	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4001364	          0x8945ac	             mov dword [rbp - 0x54], eax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x4001367	        0x837dac00	               cmp dword [rbp - 0x54], 0	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400136b	            0x780b	                            js 0x4001378	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x400136d	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4001370	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4001374	            0x8910	                    mov dword [rax], edx	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4001376	            0xeb40	                           jmp 0x40013b8	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4001378	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x400137c	      0xbf00000000	                              mov edi, 0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001381	      0xe817f1ffff	                               call sym.	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001386	          0x4889c1	                            mov rcx, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001389	        0x488b4580	             mov rax, qword [rbp - 0x80]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x400138d	          0x4889da	                            mov rdx, rbx	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001390	          0x4889ce	                            mov rsi, rcx	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001393	          0x4889c7	                            mov rdi, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4001396	      0xb800000000	                              mov eax, 0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x400139b	      0xe800000000	                          call 0x40013a0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x40013a0	        0x488d45c0	                   lea rax, [rbp - 0x40]	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40013a4	      0xbe00000000	                              mov esi, 0	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40013a9	          0x4889c7	                            mov rdi, rax	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40013ac	      0xe800000000	                          call 0x40013b1	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x40013b1	      0xb8ffffffff	                     mov eax, 0xffffffff	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x40013b6	            0xeb70	                           jmp 0x4001428	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x40013b8	        0x8345a801	               add dword [rbp - 0x58], 1	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40013bc	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40013bf	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40013c2	            0x39c2	                            cmp edx, eax	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40013c4	     0xf8765feffff	                            ja 0x400122f	       320	ref-filter.c	FUNCTION_13	FOR_1
0x40013ca	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       349	ref-filter.c	FUNCTION_13	IF_8
0x40013cd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       349	ref-filter.c	FUNCTION_13	IF_8
0x40013d0	            0x7536	                           jne 0x4001408	       349	ref-filter.c	FUNCTION_13	IF_8
0x40013d2	        0x488d45c0	                   lea rax, [rbp - 0x40]	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40013d6	      0xbe00000000	                              mov esi, 0	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40013db	          0x4889c7	                            mov rdi, rax	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40013de	      0xe800000000	                          call 0x40013e3	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x40013e3	      0xbf00000000	                              mov edi, 0	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013e8	      0xe8b0f0ffff	                               call sym.	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013ed	          0x4889c2	                            mov rdx, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013f0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013f4	      0xbeffffffff	                     mov esi, 0xffffffff	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013f9	          0x4889c7	                            mov rdi, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x40013fc	      0xb800000000	                              mov eax, 0	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4001401	      0xe84ef2ffff	                call sym.strbuf_addf_ret	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4001406	            0xeb20	                           jmp 0x4001428	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4001408	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       353	ref-filter.c	FUNCTION_13
0x400140b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       353	ref-filter.c	FUNCTION_13
0x400140f	          0x895004	                mov dword [rax + 4], edx	       353	ref-filter.c	FUNCTION_13
0x4001412	        0x488d45c0	                   lea rax, [rbp - 0x40]	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4001416	      0xbe00000000	                              mov esi, 0	       354	ref-filter.c	FUNCTION_13	CALL_22
0x400141b	          0x4889c7	                            mov rdi, rax	       354	ref-filter.c	FUNCTION_13	CALL_22
0x400141e	      0xe800000000	                          call 0x4001423	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4001423	      0xb800000000	                              mov eax, 0	       355	ref-filter.c	FUNCTION_13
0x4001428	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       356	ref-filter.c	FUNCTION_13
0x400142c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       356	ref-filter.c	FUNCTION_13
0x4001435	            0x7405	                            je 0x400143c	       356	ref-filter.c	FUNCTION_13
0x4001437	      0xe800000000	                          call 0x400143c	       356	ref-filter.c	FUNCTION_13
0x400143c	        0x4883c478	                           add rsp, 0x78	       356	ref-filter.c	FUNCTION_13
0x4001440	              0x5b	                                 pop rbx	       356	ref-filter.c	FUNCTION_13
0x4001441	              0x5d	                                 pop rbp	       356	ref-filter.c	FUNCTION_13
0x4001442	              0xc3	                                     ret	       356	ref-filter.c	FUNCTION_13
if_atom_handler	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	35
0x4001d8c	              0x55	                                push rbp	       638	ref-filter.c	FUNCTION_24
0x4001d8d	          0x4889e5	                            mov rbp, rsp	       638	ref-filter.c	FUNCTION_24
0x4001d90	        0x4883ec30	                           sub rsp, 0x30	       638	ref-filter.c	FUNCTION_24
0x4001d94	        0x48897de8	             mov qword [rbp - 0x18], rdi	       638	ref-filter.c	FUNCTION_24
0x4001d98	        0x488975e0	             mov qword [rbp - 0x20], rsi	       638	ref-filter.c	FUNCTION_24
0x4001d9c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       638	ref-filter.c	FUNCTION_24
0x4001da0	      0xbe01000000	                              mov esi, 1	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4001da5	      0xbf18000000	                           mov edi, 0x18	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4001daa	      0xe800000000	                          call 0x4001daf	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4001daf	        0x488945f0	             mov qword [rbp - 0x10], rax	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4001db3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ref-filter.c	FUNCTION_24
0x4001db7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4001dbb	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4001dbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       642	ref-filter.c	FUNCTION_24
0x4001dc3	        0x48895008	                mov qword [rax + 8], rdx	       642	ref-filter.c	FUNCTION_24
0x4001dc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	ref-filter.c	FUNCTION_24
0x4001dcb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       643	ref-filter.c	FUNCTION_24
0x4001dcf	          0x8b5010	            mov edx, dword [rax + 0x10] 	       643	ref-filter.c	FUNCTION_24
0x4001dd2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       643	ref-filter.c	FUNCTION_24
0x4001dd6	            0x8910	                    mov dword [rax], edx	       643	ref-filter.c	FUNCTION_24
0x4001dd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4001ddc	        0x4883c008	                              add rax, 8	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4001de0	          0x4889c7	                            mov rdi, rax	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4001de3	      0xe8b6fcffff	             call sym.push_stack_element	       645	ref-filter.c	FUNCTION_24	CALL_2
0x4001de8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	ref-filter.c	FUNCTION_24
0x4001dec	        0x488b4008	                mov rax, qword [rax + 8]	       646	ref-filter.c	FUNCTION_24
0x4001df0	        0x488945f8	                mov qword [rbp - 8], rax	       646	ref-filter.c	FUNCTION_24
0x4001df4	        0x488b45f8	                mov rax, qword [rbp - 8]	       647	ref-filter.c	FUNCTION_24
0x4001df8	    0x48c740200000	               mov qword [rax + 0x20], 0	       647	ref-filter.c	FUNCTION_24
0x4001e00	        0x488b45f8	                mov rax, qword [rbp - 8]	       648	ref-filter.c	FUNCTION_24
0x4001e04	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       648	ref-filter.c	FUNCTION_24
0x4001e08	        0x48895028	             mov qword [rax + 0x28], rdx	       648	ref-filter.c	FUNCTION_24
0x4001e0c	      0xb800000000	                              mov eax, 0	       649	ref-filter.c	FUNCTION_24
0x4001e11	              0xc9	                                   leave	       650	ref-filter.c	FUNCTION_24
0x4001e12	              0xc3	                                     ret	       650	ref-filter.c	FUNCTION_24
strbuf_addstr	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	17
0x4000468	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_122
0x4000469	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_122
0x400046c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_122
0x4000470	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_122
0x4000474	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_122
0x4000478	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_122	CALL_2
0x400047c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x400047f	      0xe800000000	                          call 0x4000484	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000484	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000487	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_122	CALL_2
0x400048b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_122	CALL_2
0x400048f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000492	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000495	      0xe800000000	                          call 0x400049a	       279	strbuf.h	FUNCTION_122	CALL_2
0x400049a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_122
0x400049b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_122
0x400049c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_122
show_ref_array_item	WHILE,0:FOR,0:CALL,6:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	48
0x4006631	              0x55	                                push rbp	      2270	ref-filter.c	FUNCTION_84
0x4006632	          0x4889e5	                            mov rbp, rsp	      2270	ref-filter.c	FUNCTION_84
0x4006635	        0x4883ec50	                           sub rsp, 0x50	      2270	ref-filter.c	FUNCTION_84
0x4006639	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2270	ref-filter.c	FUNCTION_84
0x400663d	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2270	ref-filter.c	FUNCTION_84
0x4006641	    0x64488b042528	                mov rax, qword fs:[0x28]	      2270	ref-filter.c	FUNCTION_84
0x400664a	        0x488945f8	                mov qword [rbp - 8], rax	      2270	ref-filter.c	FUNCTION_84
0x400664e	            0x31c0	                            xor eax, eax	      2270	ref-filter.c	FUNCTION_84
0x4006650	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2271	ref-filter.c	FUNCTION_84
0x4006658	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2271	ref-filter.c	FUNCTION_84
0x4006660	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2271	ref-filter.c	FUNCTION_84
0x4006668	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2272	ref-filter.c	FUNCTION_84
0x4006670	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2272	ref-filter.c	FUNCTION_84
0x4006678	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2272	ref-filter.c	FUNCTION_84
0x4006680	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x4006684	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x4006688	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x400668c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x4006690	          0x4889c7	                            mov rdi, rax	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x4006693	      0xe800000000	                          call 0x4006698	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x4006698	            0x85c0	                           test eax, eax	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x400669a	            0x7416	                            je 0x40066b2	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x400669c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x40066a0	          0x4889c6	                            mov rsi, rax	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x40066a3	      0xbf00000000	                              mov edi, 0	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x40066a8	      0xb800000000	                              mov eax, 0	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x40066ad	      0xe800000000	                          call 0x40066b2	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x40066b2	    0x488b0d000000	            mov rcx, qword [0x040066b9] 	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066b9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066c1	      0xbe01000000	                              mov esi, 1	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066c6	          0x4889c7	                            mov rdi, rax	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066c9	      0xe800000000	                          call 0x40066ce	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x40066ce	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x40066d2	          0x4889c7	                            mov rdi, rax	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x40066d5	      0xe800000000	                          call 0x40066da	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x40066da	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x40066de	          0x4889c7	                            mov rdi, rax	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x40066e1	      0xe800000000	                          call 0x40066e6	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x40066e6	      0xbf0a000000	                            mov edi, 0xa	      2279	ref-filter.c	FUNCTION_84	CALL_6
0x40066eb	      0xe800000000	                          call 0x40066f0	      2279	ref-filter.c	FUNCTION_84	CALL_6
0x40066f0	              0x90	                                     nop	      2280	ref-filter.c	FUNCTION_84
0x40066f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2280	ref-filter.c	FUNCTION_84
0x40066f5	    0x644833042528	                xor rax, qword fs:[0x28]	      2280	ref-filter.c	FUNCTION_84
0x40066fe	            0x7405	                            je 0x4006705	      2280	ref-filter.c	FUNCTION_84
0x4006700	      0xe800000000	                          call 0x4006705	      2280	ref-filter.c	FUNCTION_84
0x4006705	              0xc9	                                   leave	      2280	ref-filter.c	FUNCTION_84
0x4006706	              0xc3	                                     ret	      2280	ref-filter.c	FUNCTION_84
refname_atom_parser	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	17
0x40010cd	              0x55	                                push rbp	       291	ref-filter.c	FUNCTION_11
0x40010ce	          0x4889e5	                            mov rbp, rsp	       291	ref-filter.c	FUNCTION_11
0x40010d1	        0x4883ec20	                           sub rsp, 0x20	       291	ref-filter.c	FUNCTION_11
0x40010d5	        0x48897df8	                mov qword [rbp - 8], rdi	       291	ref-filter.c	FUNCTION_11
0x40010d9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       291	ref-filter.c	FUNCTION_11
0x40010dd	        0x488955e8	             mov qword [rbp - 0x18], rdx	       291	ref-filter.c	FUNCTION_11
0x40010e1	        0x48894de0	             mov qword [rbp - 0x20], rcx	       291	ref-filter.c	FUNCTION_11
0x40010e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010e9	          0x488b10	                    mov rdx, qword [rax]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010f0	        0x488d7810	                   lea rdi, [rax + 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010f4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010fc	          0x4889c6	                            mov rsi, rax	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40010ff	      0xe8e7f6ffff	   call sym.refname_atom_parser_internal	       292	ref-filter.c	FUNCTION_11	CALL_1
0x4001104	              0xc9	                                   leave	       293	ref-filter.c	FUNCTION_11
0x4001105	              0xc3	                                     ret	       293	ref-filter.c	FUNCTION_11
pretty_print_ref	WHILE,0:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	29
0x4006707	              0x55	                                push rbp	      2284	ref-filter.c	FUNCTION_85
0x4006708	          0x4889e5	                            mov rbp, rsp	      2284	ref-filter.c	FUNCTION_85
0x400670b	        0x4883ec30	                           sub rsp, 0x30	      2284	ref-filter.c	FUNCTION_85
0x400670f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2284	ref-filter.c	FUNCTION_85
0x4006713	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2284	ref-filter.c	FUNCTION_85
0x4006717	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2284	ref-filter.c	FUNCTION_85
0x400671b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x400671f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4006723	          0x4889d6	                            mov rsi, rdx	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4006726	          0x4889c7	                            mov rdi, rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4006729	      0xe86fefffff	             call sym.new_ref_array_item	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x400672e	        0x488945f8	                mov qword [rbp - 8], rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x4006732	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4006736	          0x4889c7	                            mov rdi, rax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4006739	      0xe8e6f0ffff	          call sym.ref_kind_from_refname	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x400673e	            0x89c2	                            mov edx, eax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4006740	        0x488b45f8	                mov rax, qword [rbp - 8]	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4006744	          0x895018	             mov dword [rax + 0x18], edx	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x4006747	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x400674b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x400674f	          0x4889d6	                            mov rsi, rdx	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4006752	          0x4889c7	                            mov rdi, rax	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x4006755	      0xe800000000	                          call 0x400675a	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x400675a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x400675e	          0x4889c7	                            mov rdi, rax	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x4006761	      0xe8b1f3ffff	                call sym.free_array_item	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x4006766	              0x90	                                     nop	      2290	ref-filter.c	FUNCTION_85
0x4006767	              0xc9	                                   leave	      2290	ref-filter.c	FUNCTION_85
0x4006768	              0xc3	                                     ret	      2290	ref-filter.c	FUNCTION_85
then_atom_handler	WHILE,0:FOR,0:CALL,9:DO,0:functions,0:SWITCH,0:IF,9:ELSE,2	118
0x4001e58	              0x55	                                push rbp	       664	ref-filter.c	FUNCTION_26
0x4001e59	          0x4889e5	                            mov rbp, rsp	       664	ref-filter.c	FUNCTION_26
0x4001e5c	        0x4883ec30	                           sub rsp, 0x30	       664	ref-filter.c	FUNCTION_26
0x4001e60	        0x48897de8	             mov qword [rbp - 0x18], rdi	       664	ref-filter.c	FUNCTION_26
0x4001e64	        0x488975e0	             mov qword [rbp - 0x20], rsi	       664	ref-filter.c	FUNCTION_26
0x4001e68	        0x488955d8	             mov qword [rbp - 0x28], rdx	       664	ref-filter.c	FUNCTION_26
0x4001e6c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       665	ref-filter.c	FUNCTION_26
0x4001e70	        0x488b4008	                mov rax, qword [rax + 8]	       665	ref-filter.c	FUNCTION_26
0x4001e74	        0x488945f8	                mov qword [rbp - 8], rax	       665	ref-filter.c	FUNCTION_26
0x4001e78	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       666	ref-filter.c	FUNCTION_26
0x4001e80	        0x488b45f8	                mov rax, qword [rbp - 8]	       668	ref-filter.c	FUNCTION_26	IF_1
0x4001e84	        0x488b4020	            mov rax, qword [rax + 0x20] 	       668	ref-filter.c	FUNCTION_26	IF_1
0x4001e88	    0x483d00000000	                              cmp rax, 0	       668	ref-filter.c	FUNCTION_26	IF_1
0x4001e8e	            0x750c	                           jne 0x4001e9c	       668	ref-filter.c	FUNCTION_26	IF_1
0x4001e90	        0x488b45f8	                mov rax, qword [rbp - 8]	       669	ref-filter.c	FUNCTION_26	IF_1
0x4001e94	        0x488b4028	            mov rax, qword [rax + 0x28] 	       669	ref-filter.c	FUNCTION_26	IF_1
0x4001e98	        0x488945f0	             mov qword [rbp - 0x10], rax	       669	ref-filter.c	FUNCTION_26	IF_1
0x4001e9c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       670	ref-filter.c	FUNCTION_26	IF_2
0x4001ea1	            0x7528	                           jne 0x4001ecb	       670	ref-filter.c	FUNCTION_26	IF_2
0x4001ea3	      0xbf00000000	                              mov edi, 0	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ea8	      0xe8f0e5ffff	                               call sym.	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ead	          0x4889c2	                            mov rdx, rax	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001eb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001eb4	      0xbeffffffff	                     mov esi, 0xffffffff	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001eb9	          0x4889c7	                            mov rdi, rax	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ebc	      0xb800000000	                              mov eax, 0	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ec1	      0xe88ee7ffff	                call sym.strbuf_addf_ret	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ec6	      0xe938010000	                           jmp 0x4002003	       671	ref-filter.c	FUNCTION_26	CALL_2
0x4001ecb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       672	ref-filter.c	FUNCTION_26	IF_3
0x4001ecf	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       672	ref-filter.c	FUNCTION_26	IF_3
0x4001ed3	          0x83e001	                              and eax, 1	       672	ref-filter.c	FUNCTION_26	IF_3
0x4001ed6	            0x84c0	                             test al, al	       672	ref-filter.c	FUNCTION_26	IF_3
0x4001ed8	            0x7428	                            je 0x4001f02	       672	ref-filter.c	FUNCTION_26	IF_3
0x4001eda	      0xbf00000000	                              mov edi, 0	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001edf	      0xe8b9e5ffff	                               call sym.	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001ee4	          0x4889c2	                            mov rdx, rax	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001ee7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001eeb	      0xbeffffffff	                     mov esi, 0xffffffff	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001ef0	          0x4889c7	                            mov rdi, rax	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001ef3	      0xb800000000	                              mov eax, 0	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001ef8	      0xe857e7ffff	                call sym.strbuf_addf_ret	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001efd	      0xe901010000	                           jmp 0x4002003	       673	ref-filter.c	FUNCTION_26	CALL_4
0x4001f02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       674	ref-filter.c	FUNCTION_26	IF_4
0x4001f06	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       674	ref-filter.c	FUNCTION_26	IF_4
0x4001f0a	          0x83e002	                              and eax, 2	       674	ref-filter.c	FUNCTION_26	IF_4
0x4001f0d	            0x84c0	                             test al, al	       674	ref-filter.c	FUNCTION_26	IF_4
0x4001f0f	            0x7428	                            je 0x4001f39	       674	ref-filter.c	FUNCTION_26	IF_4
0x4001f11	      0xbf00000000	                              mov edi, 0	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f16	      0xe882e5ffff	                               call sym.	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f1b	          0x4889c2	                            mov rdx, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f22	      0xbeffffffff	                     mov esi, 0xffffffff	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f27	          0x4889c7	                            mov rdi, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f2a	      0xb800000000	                              mov eax, 0	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f2f	      0xe820e7ffff	                call sym.strbuf_addf_ret	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f34	      0xe9ca000000	                           jmp 0x4002003	       675	ref-filter.c	FUNCTION_26	CALL_6
0x4001f39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       676	ref-filter.c	FUNCTION_26
0x4001f3d	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       676	ref-filter.c	FUNCTION_26
0x4001f41	          0x83ca01	                               or edx, 1	       676	ref-filter.c	FUNCTION_26
0x4001f44	          0x885010	               mov byte [rax + 0x10], dl	       676	ref-filter.c	FUNCTION_26
0x4001f47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       682	ref-filter.c	FUNCTION_26	IF_5
0x4001f4b	            0x8b00	                    mov eax, dword [rax]	       682	ref-filter.c	FUNCTION_26	IF_5
0x4001f4d	            0x85c0	                           test eax, eax	       682	ref-filter.c	FUNCTION_26	IF_5
0x4001f4f	            0x752f	                           jne 0x4001f80	       682	ref-filter.c	FUNCTION_26	IF_5
0x4001f51	        0x488b45f8	                mov rax, qword [rbp - 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f55	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f59	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f5d	        0x488b4008	                mov rax, qword [rax + 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f61	          0x4889d6	                            mov rsi, rdx	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f64	          0x4889c7	                            mov rdi, rax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f67	      0xe800000000	                          call 0x4001f6c	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f6c	            0x85c0	                           test eax, eax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f6e	            0x7579	                           jne 0x4001fe9	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4001f70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4001f74	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4001f78	          0x83ca04	                               or edx, 4	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4001f7b	          0x885010	               mov byte [rax + 0x10], dl	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4001f7e	            0xeb69	                           jmp 0x4001fe9	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x4001f80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4001f84	            0x8b00	                    mov eax, dword [rax]	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4001f86	          0x83f801	                              cmp eax, 1	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4001f89	            0x752f	                           jne 0x4001fba	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4001f8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001f8f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001f93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001f97	        0x488b4008	                mov rax, qword [rax + 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001f9b	          0x4889d6	                            mov rsi, rdx	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001f9e	          0x4889c7	                            mov rdi, rax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001fa1	      0xe800000000	                          call 0x4001fa6	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001fa6	            0x85c0	                           test eax, eax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001fa8	            0x743f	                            je 0x4001fe9	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x4001faa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4001fae	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4001fb2	          0x83ca04	                               or edx, 4	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4001fb5	          0x885010	               mov byte [rax + 0x10], dl	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4001fb8	            0xeb2f	                           jmp 0x4001fe9	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4001fba	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fbe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fc2	          0x4885c0	                           test rax, rax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fc5	            0x7422	                            je 0x4001fe9	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fcb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fcf	          0x4889c7	                            mov rdi, rax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fd2	      0xe83cfeffff	                       call sym.is_empty	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fd7	            0x85c0	                           test eax, eax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fd9	            0x750e	                           jne 0x4001fe9	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4001fdb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4001fdf	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4001fe3	          0x83ca04	                               or edx, 4	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4001fe6	          0x885010	               mov byte [rax + 0x10], dl	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4001fe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	ref-filter.c	FUNCTION_26
0x4001fed	        0x4883c008	                              add rax, 8	       690	ref-filter.c	FUNCTION_26
0x4001ff1	      0xbe00000000	                              mov esi, 0	       690	ref-filter.c	FUNCTION_26
0x4001ff6	          0x4889c7	                            mov rdi, rax	       690	ref-filter.c	FUNCTION_26
0x4001ff9	      0xe862e3ffff	                  call sym.strbuf_setlen	       690	ref-filter.c	FUNCTION_26
0x4001ffe	      0xb800000000	                              mov eax, 0	       691	ref-filter.c	FUNCTION_26
0x4002003	              0xc9	                                   leave	       692	ref-filter.c	FUNCTION_26
0x4002004	              0xc3	                                     ret	       692	ref-filter.c	FUNCTION_26
find_longest_prefix	WHILE,0:FOR,1:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	35
0x400545d	              0x55	                                push rbp	      1824	ref-filter.c	FUNCTION_67
0x400545e	          0x4889e5	                            mov rbp, rsp	      1824	ref-filter.c	FUNCTION_67
0x4005461	        0x4883ec20	                           sub rsp, 0x20	      1824	ref-filter.c	FUNCTION_67
0x4005465	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1824	ref-filter.c	FUNCTION_67
0x4005469	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1824	ref-filter.c	FUNCTION_67
0x400546d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005471	        0x488945f8	                mov qword [rbp - 8], rax	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005475	            0xeb05	                           jmp 0x400547c	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005477	      0x488345f801	                  add qword [rbp - 8], 1	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400547c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005480	           0xfb600	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005483	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005485	            0x741d	                            je 0x40054a4	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005487	        0x488b45f8	                mov rax, qword [rbp - 8]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400548b	           0xfb600	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400548e	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005491	            0x4898	                                    cdqe	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005493	     0xfb680000000	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400549a	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x400549d	          0x83e008	                              and eax, 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x40054a0	            0x85c0	                           test eax, eax	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x40054a2	            0x74d3	                            je 0x4005477	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x40054a4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054ac	          0x4829c2	                            sub rdx, rax	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054af	          0x4889d0	                            mov rax, rdx	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054b2	          0x4889c2	                            mov rdx, rax	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054b5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054bd	          0x4889ce	                            mov rsi, rcx	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054c0	          0x4889c7	                            mov rdi, rax	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054c3	      0xe800000000	                          call 0x40054c8	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x40054c8	              0x90	                                     nop	      1831	ref-filter.c	FUNCTION_67
0x40054c9	              0xc9	                                   leave	      1831	ref-filter.c	FUNCTION_67
0x40054ca	              0xc3	                                     ret	      1831	ref-filter.c	FUNCTION_67
copy_subject	WHILE,0:FOR,1:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	33
0x4002c95	              0x55	                                push rbp	       958	ref-filter.c	FUNCTION_40
0x4002c96	          0x4889e5	                            mov rbp, rsp	       958	ref-filter.c	FUNCTION_40
0x4002c99	        0x4883ec20	                           sub rsp, 0x20	       958	ref-filter.c	FUNCTION_40
0x4002c9d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       958	ref-filter.c	FUNCTION_40
0x4002ca1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       958	ref-filter.c	FUNCTION_40
0x4002ca5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002ca9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002cad	          0x4889d6	                            mov rsi, rdx	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002cb0	          0x4889c7	                            mov rdi, rax	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002cb3	      0xe800000000	                          call 0x4002cb8	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002cb8	        0x488945f8	                mov qword [rbp - 8], rax	       959	ref-filter.c	FUNCTION_40	CALL_1
0x4002cbc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cc3	            0xeb28	                           jmp 0x4002ced	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cc5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cc8	          0x4863d0	                         movsxd rdx, eax	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002ccb	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002ccf	          0x4801d0	                            add rax, rdx	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cd2	           0xfb600	                   movzx eax, byte [rax]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cd5	            0x3c0a	                             cmp al, 0xa	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cd7	            0x7510	                           jne 0x4002ce9	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cd9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cdc	          0x4863d0	                         movsxd rdx, eax	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002cdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002ce3	          0x4801d0	                            add rax, rdx	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002ce6	          0xc60020	                    mov byte [rax], 0x20	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x4002ce9	        0x8345f401	                add dword [rbp - 0xc], 1	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002ced	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cf0	            0x4898	                                    cdqe	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cf2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cf6	            0x72cd	                            jb 0x4002cc5	       962	ref-filter.c	FUNCTION_40	FOR_1
0x4002cf8	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	ref-filter.c	FUNCTION_40
0x4002cfc	              0xc9	                                   leave	       967	ref-filter.c	FUNCTION_40
0x4002cfd	              0xc3	                                     ret	       967	ref-filter.c	FUNCTION_40
skip_prefix	WHILE,0:FOR,0:CALL,0:DO,1:functions,0:SWITCH,0:IF,1:ELSE,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_135
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_135
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_135
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_135
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_135
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_135	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_135	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_135	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_135
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_135
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_135
strbuf_swap	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	39
0x4000296	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_118
0x4000297	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_118
0x400029a	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_118
0x400029e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_118
0x40002a2	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_118
0x40002a6	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_118
0x40002af	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_118
0x40002b3	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_118
0x40002b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_118
0x40002b9	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_118
0x40002bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_118
0x40002c1	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_118
0x40002c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_118
0x40002c9	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_118
0x40002cc	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_118
0x40002d0	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_118
0x40002d4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_118
0x40002d8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_118
0x40002dc	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_118
0x40002e0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_118
0x40002e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_118
0x40002e8	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_118
0x40002ed	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_118
0x40002f0	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_118
0x40002f3	      0xe800000000	                          call 0x40002f8	       127	strbuf.h	FUNCTION_118
0x40002f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_118
0x40002fc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_118
0x4000300	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_118
0x4000303	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_118
0x4000307	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_118
0x400030b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_118
0x400030f	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_118
0x4000313	              0x90	                                     nop	       128	strbuf.h	FUNCTION_118
0x4000314	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_118
0x4000318	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_118
0x4000321	            0x7405	                            je 0x4000328	       128	strbuf.h	FUNCTION_118
0x4000323	      0xe800000000	                          call 0x4000328	       128	strbuf.h	FUNCTION_118
0x4000328	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_118
0x4000329	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_118
show_ref	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,3:ELSE,3	40
0x4003bde	              0x55	                                push rbp	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x4003bdf	          0x4889e5	                            mov rbp, rsp	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x4003be2	        0x4883ec10	                           sub rsp, 0x10	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x4003be6	        0x48897df8	                mov qword [rbp - 8], rdi	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x4003bea	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x4003bee	        0x488b45f8	                mov rax, qword [rbp - 8]	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x4003bf2	            0x8b00	                    mov eax, dword [rax]	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x4003bf4	          0x83f801	                              cmp eax, 1	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x4003bf7	            0x7516	                           jne 0x4003c0f	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x4003bf9	    0x8b1500000000	            mov edx, dword [0x04003bff] 	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003bff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003c03	            0x89d6	                            mov esi, edx	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003c05	          0x4889c7	                            mov rdi, rax	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003c08	      0xe800000000	                          call 0x4003c0d	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003c0d	            0xeb48	                           jmp 0x4003c57	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x4003c0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1310	ref-filter.c	FUNCTION_51	IF_2
0x4003c13	            0x8b00	                    mov eax, dword [rax]	      1310	ref-filter.c	FUNCTION_51	IF_2
0x4003c15	          0x83f802	                              cmp eax, 2	      1310	ref-filter.c	FUNCTION_51	IF_2
0x4003c18	            0x7517	                           jne 0x4003c31	      1310	ref-filter.c	FUNCTION_51	IF_2
0x4003c1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c1e	          0x8b5004	                mov edx, dword [rax + 4]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c21	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c25	            0x89d6	                            mov esi, edx	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c27	          0x4889c7	                            mov rdi, rax	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c2a	      0xe819feffff	          call sym.lstrip_ref_components	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c2f	            0xeb26	                           jmp 0x4003c57	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x4003c31	        0x488b45f8	                mov rax, qword [rbp - 8]	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c35	            0x8b00	                    mov eax, dword [rax]	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c37	          0x83f803	                              cmp eax, 3	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c3a	            0x7517	                           jne 0x4003c53	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c3c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c40	          0x8b5008	                mov edx, dword [rax + 8]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c47	            0x89d6	                            mov esi, edx	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c49	          0x4889c7	                            mov rdi, rax	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c4c	      0xe8b7feffff	          call sym.rstrip_ref_components	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c51	            0xeb04	                           jmp 0x4003c57	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x4003c53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1315	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4003c57	              0xc9	                                   leave	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x4003c58	              0xc3	                                     ret	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
_	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	15
0x400049d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_158
0x400049e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_158
0x40004a1	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_158
0x40004a5	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_158
0x40004a9	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_158	IF_1
0x40004ad	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_158	IF_1
0x40004b0	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_158	IF_1
0x40004b2	            0x7507	                           jne 0x40004bb	        52	gettext.h	FUNCTION_158	IF_1
0x40004b4	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_158	IF_1
0x40004b9	            0xeb0c	                           jmp 0x40004c7	        53	gettext.h	FUNCTION_158	IF_1
0x40004bb	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_158
0x40004bf	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_158
0x40004c2	      0xe800000000	                          call 0x40004c7	        54	gettext.h	FUNCTION_158
0x40004c7	              0xc9	                                   leave	        55	gettext.h	FUNCTION_158
0x40004c8	              0xc3	                                     ret	        55	gettext.h	FUNCTION_158
populate_value	WHILE,0:FOR,2:CALL,33:DO,0:functions,0:SWITCH,0:IF,31:ELSE,17	429
0x4004350	              0x55	                                push rbp	      1458	ref-filter.c	FUNCTION_57
0x4004351	          0x4889e5	                            mov rbp, rsp	      1458	ref-filter.c	FUNCTION_57
0x4004354	    0x4881ec700100	                          sub rsp, 0x170	      1458	ref-filter.c	FUNCTION_57
0x400435b	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	      1458	ref-filter.c	FUNCTION_57
0x4004362	    0x4889b590feff	            mov qword [rbp - 0x170], rsi	      1458	ref-filter.c	FUNCTION_57
0x4004369	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	ref-filter.c	FUNCTION_57
0x4004372	        0x488945f8	                mov qword [rbp - 8], rax	      1458	ref-filter.c	FUNCTION_57
0x4004376	            0x31c0	                            xor eax, eax	      1458	ref-filter.c	FUNCTION_57
0x4004378	    0x8b0500000000	            mov eax, dword [0x0400437e] 	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x400437e	            0x4898	                                    cdqe	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4004380	      0xbe20000000	                           mov esi, 0x20	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4004385	          0x4889c7	                            mov rdi, rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4004388	      0xe800000000	                          call 0x400438d	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x400438d	          0x4889c2	                            mov rdx, rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4004390	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4004397	        0x48895030	             mov qword [rax + 0x30], rdx	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x400439b	    0x8b0500000000	            mov eax, dword [0x040043a1] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043a1	            0x85c0	                           test eax, eax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043a3	            0x7470	                            je 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043a5	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043ac	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043af	          0x83e001	                              and eax, 1	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043b2	            0x85c0	                           test eax, eax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043b4	            0x745f	                            je 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043b6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043bd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043c1	          0x4885c0	                           test rax, rax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043c4	            0x754f	                           jne 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40043c6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043cd	        0x4883c038	                           add rax, 0x38	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043d1	      0xb900000000	                              mov ecx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043d6	      0xba00000000	                              mov edx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043db	      0xbe01000000	                              mov esi, 1	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043e0	          0x4889c7	                            mov rdi, rax	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043e3	      0xe800000000	                          call 0x40043e8	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043e8	          0x4889c2	                            mov rdx, rax	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043eb	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043f2	        0x48895020	             mov qword [rax + 0x20], rdx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40043f6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x40043fd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004401	          0x4885c0	                           test rax, rax	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004404	            0x750f	                           jne 0x4004415	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004406	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x400440d	    0x48c740200000	               mov qword [rax + 0x20], 0	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004415	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x400441f	      0xe9d4050000	                           jmp 0x40049f8	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004424	    0x488b0d000000	            mov rcx, qword [0x0400442b] 	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x400442b	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004431	          0x4863d0	                         movsxd rdx, eax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004434	          0x4889d0	                            mov rax, rdx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004437	          0x4801c0	                            add rax, rax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x400443a	          0x4801d0	                            add rax, rdx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x400443d	        0x48c1e005	                              shl rax, 5	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004441	          0x4801c8	                            add rax, rcx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004444	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x400444b	    0x488b0d000000	            mov rcx, qword [0x04004452] 	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004452	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004458	          0x4863d0	                         movsxd rdx, eax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x400445b	          0x4889d0	                            mov rax, rdx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x400445e	          0x4801c0	                            add rax, rax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004461	          0x4801d0	                            add rax, rdx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004464	        0x48c1e005	                              shl rax, 5	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004468	          0x4801c8	                            add rax, rcx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x400446b	          0x488b00	                    mov rax, qword [rax]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x400446e	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004475	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x400447c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4004480	    0x8b95a0feffff	            mov edx, dword [rbp - 0x160]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4004486	          0x4863d2	                         movsxd rdx, edx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4004489	        0x48c1e205	                              shl rdx, 5	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x400448d	          0x4801d0	                            add rax, rdx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4004490	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4004497	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      1477	ref-filter.c	FUNCTION_57	FOR_1
0x40044a1	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      1479	ref-filter.c	FUNCTION_57	FOR_1
0x40044ac	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x40044b3	    0x48c740080000	                  mov qword [rax + 8], 0	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x40044bb	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x40044c2	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x40044c9	        0x48895018	             mov qword [rax + 0x18], rdx	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x40044cd	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044d4	           0xfb600	                   movzx eax, byte [rax]	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044d7	            0x3c2a	                            cmp al, 0x2a	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044d9	            0x7512	                           jne 0x40044ed	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044db	    0xc785a4feffff	              mov dword [rbp - 0x15c], 1	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044e5	    0x488385b0feff	              add qword [rbp - 0x150], 1	      1486	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x40044ed	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x40044f4	      0xbe00000000	                              mov esi, 0	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x40044f9	          0x4889c7	                            mov rdi, rax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x40044fc	      0xe800000000	                          call 0x4004501	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004501	            0x85c0	                           test eax, eax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004503	            0x7425	                            je 0x400452a	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004505	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x400450c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x4004513	          0x4889d6	                            mov rsi, rdx	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x4004516	          0x4889c7	                            mov rdi, rax	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x4004519	      0xe8abfcffff	                    call sym.get_refname	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x400451e	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x4004525	      0xe973040000	                           jmp 0x400499d	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x400452a	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004531	      0xbe00000000	                              mov esi, 0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004536	          0x4889c7	                            mov rdi, rax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004539	      0xe800000000	                          call 0x400453e	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x400453e	            0x85c0	                           test eax, eax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004540	            0x7425	                            je 0x4004567	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004542	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004549	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004550	          0x4889d6	                            mov rsi, rdx	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004553	          0x4889c7	                            mov rdi, rax	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004556	      0xe82dfcffff	                     call sym.get_symref	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x400455b	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004562	      0xe936040000	                           jmp 0x400499d	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4004567	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x400456e	      0xbe00000000	                              mov esi, 0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4004573	          0x4889c7	                            mov rdi, rax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4004576	      0xe800000000	                          call 0x400457b	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x400457b	            0x85c0	                           test eax, eax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x400457d	     0xf8493000000	                            je 0x4004616	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4004583	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x400458a	        0x488d4838	                   lea rcx, [rax + 0x38]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x400458e	    0x488d85a8feff	                  lea rax, [rbp - 0x158]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4004595	          0x4889c2	                            mov rdx, rax	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4004598	      0xbe00000000	                              mov esi, 0	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x400459d	          0x4889cf	                            mov rdi, rcx	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40045a0	      0xe8a6baffff	                    call sym.skip_prefix	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40045a5	            0x85c0	                           test eax, eax	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40045a7	     0xf8434040000	                            je 0x40049e1	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40045ad	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40045b4	          0x4889c7	                            mov rdi, rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40045b7	      0xe800000000	                          call 0x40045bc	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40045bc	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40045c3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40045ca	      0xbe00000000	                              mov esi, 0	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40045cf	          0x4889c7	                            mov rdi, rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40045d2	      0xe800000000	                          call 0x40045d7	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40045d7	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40045de	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x40045e6	     0xf84f8030000	                            je 0x40049e4	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x40045ec	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40045f3	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40045fa	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004601	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004608	          0x4889c7	                            mov rdi, rax	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x400460b	      0xe849f6ffff	        call sym.fill_remote_ref_details	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004610	              0x90	                                     nop	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x4004611	      0xe9ce030000	                           jmp 0x40049e4	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x4004616	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x400461d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4004621	          0x83e002	                              and eax, 2	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4004624	            0x84c0	                             test al, al	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4004626	     0xf84b2000000	                            je 0x40046de	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x400462c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004633	        0x488d4838	                   lea rcx, [rax + 0x38]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004637	    0x488d85a8feff	                  lea rax, [rbp - 0x158]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400463e	          0x4889c2	                            mov rdx, rax	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004641	      0xbe00000000	                              mov esi, 0	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004646	          0x4889cf	                            mov rdi, rcx	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004649	      0xe8fdb9ffff	                    call sym.skip_prefix	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400464e	            0x85c0	                           test eax, eax	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004650	     0xf8491030000	                            je 0x40049e7	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004656	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x400465d	          0x4889c7	                            mov rdi, rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4004660	      0xe800000000	                          call 0x4004665	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4004665	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x400466c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4004673	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4004677	          0x83e004	                              and eax, 4	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x400467a	            0x84c0	                             test al, al	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x400467c	            0x740d	                            je 0x400468b	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x400467e	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4004689	            0xeb29	                           jmp 0x40046b4	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x400468b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4004692	      0xbe00000000	                              mov esi, 0	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4004697	          0x4889c7	                            mov rdi, rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x400469a	      0xe800000000	                          call 0x400469f	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x400469f	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x40046a6	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x40046ae	     0xf8436030000	                            je 0x40049ea	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x40046b4	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046bb	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046c2	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046c9	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046d0	          0x4889c7	                            mov rdi, rax	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046d3	      0xe881f5ffff	        call sym.fill_remote_ref_details	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40046d8	              0x90	                                     nop	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x40046d9	      0xe913030000	                           jmp 0x40049f1	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x40046de	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046e5	      0xbe00000000	                              mov esi, 0	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046ea	          0x4889c7	                            mov rdi, rax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046ed	      0xe800000000	                          call 0x40046f2	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046f2	            0x85c0	                           test eax, eax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046f4	            0x741a	                            je 0x4004710	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x40046f6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x40046fd	        0x488d5010	                   lea rdx, [rax + 0x10]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4004701	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4004708	          0x488910	                    mov qword [rax], rdx	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x400470b	      0xe9e1020000	                           jmp 0x40049f1	      1523	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4004710	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4004717	      0xbe00000000	                              mov esi, 0	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400471c	          0x4889c7	                            mov rdi, rax	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400471f	      0xe800000000	                          call 0x4004724	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4004724	            0x85c0	                           test eax, eax	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4004726	     0xf85b8000000	                           jne 0x40047e4	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400472c	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x4004733	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x400473a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4004741	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4004744	          0x83e001	                              and eax, 1	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4004747	            0x85c0	                           test eax, eax	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4004749	            0x741b	                            je 0x4004766	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x400474b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4004752	      0xbe00000000	                              mov esi, 0	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4004757	          0x4889c7	                            mov rdi, rax	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x400475a	      0xe8adf2ffff	                   call sym.copy_advance	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x400475f	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4004766	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x400476d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004770	          0x83e002	                              and eax, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004773	            0x85c0	                           test eax, eax	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004775	            0x741b	                            je 0x4004792	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4004777	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x400477e	      0xbe00000000	                              mov esi, 0	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4004783	          0x4889c7	                            mov rdi, rax	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4004786	      0xe881f2ffff	                   call sym.copy_advance	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x400478b	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4004792	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4004799	    0x483985c0feff	           cmp qword [rbp - 0x140], rax 	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40047a0	            0x7513	                           jne 0x40047b5	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40047a2	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40047a9	    0x48c700000000	                      mov qword [rax], 0	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40047b0	      0xe93c020000	                           jmp 0x40049f1	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40047b5	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x40047bc	          0xc60000	                       mov byte [rax], 0	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x40047bf	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047c6	        0x4883c001	                              add rax, 1	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047ca	          0x4889c7	                            mov rdi, rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047cd	      0xe800000000	                          call 0x40047d2	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047d2	          0x4889c2	                            mov rdx, rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047d5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047dc	          0x488910	                    mov qword [rax], rdx	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047df	      0xe90d020000	                           jmp 0x40049f1	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40047e4	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x40047eb	            0x752c	                           jne 0x4004819	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x40047ed	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x40047f4	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x40047fb	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004802	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004809	          0x4889c7	                            mov rdi, rax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x400480c	      0xe8cedcffff	                call sym.grab_objectname	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004811	            0x85c0	                           test eax, eax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004813	     0xf85d4010000	                           jne 0x40049ed	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004819	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004820	      0xbe00000000	                              mov esi, 0	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004825	          0x4889c7	                            mov rdi, rax	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004828	      0xe800000000	                          call 0x400482d	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x400482d	            0x85c0	                           test eax, eax	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x400482f	            0x755b	                           jne 0x400488c	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004831	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004838	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400483c	          0x4885c0	                           test rax, rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400483f	            0x7438	                            je 0x4004879	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004841	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004848	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400484c	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004853	        0x4883c238	                           add rdx, 0x38	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004857	          0x4889c6	                            mov rsi, rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400485a	          0x4889d7	                            mov rdi, rdx	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400485d	      0xe800000000	                          call 0x4004862	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004862	            0x85c0	                           test eax, eax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004864	            0x7513	                           jne 0x4004879	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004866	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x400486d	    0x48c700000000	                      mov qword [rax], 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004874	      0xe978010000	                           jmp 0x40049f1	      1544	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4004879	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4004880	    0x48c700000000	                      mov qword [rax], 0	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4004887	      0xe965010000	                           jmp 0x40049f1	      1544	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x400488c	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004893	      0xbe00000000	                              mov esi, 0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004898	          0x4889c7	                            mov rdi, rax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400489b	      0xe800000000	                          call 0x40048a0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x40048a0	            0x85c0	                           test eax, eax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x40048a2	            0x7414	                            je 0x40048b8	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x40048a4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x40048ab	    0x48c740080000	                  mov qword [rax + 8], 0	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x40048b3	      0xe939010000	                           jmp 0x40049f1	      1547	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x40048b8	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048bf	      0xbe00000000	                              mov esi, 0	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048c4	          0x4889c7	                            mov rdi, rax	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048c7	      0xe800000000	                          call 0x40048cc	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048cc	            0x85c0	                           test eax, eax	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048ce	            0x7514	                           jne 0x40048e4	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x40048d0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40048d7	    0x48c740080000	                  mov qword [rax + 8], 0	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40048df	      0xe90d010000	                           jmp 0x40049f1	      1550	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40048e4	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048eb	      0xbe00000000	                              mov esi, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048f0	          0x4889c7	                            mov rdi, rax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048f3	      0xe800000000	                          call 0x40048f8	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048f8	            0x85c0	                           test eax, eax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048fa	            0x744f	                            je 0x400494b	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x40048fc	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x4004903	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x400490a	      0xbe00000000	                              mov esi, 0	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x400490f	          0x4889c7	                            mov rdi, rax	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x4004912	      0xe834b7ffff	                    call sym.skip_prefix	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x4004917	            0x85c0	                           test eax, eax	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x4004919	            0x741c	                            je 0x4004937	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x400491b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004922	          0x4889c7	                            mov rdi, rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004925	      0xe800000000	                          call 0x400492a	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x400492a	          0x4889c2	                            mov rdx, rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x400492d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004934	          0x488910	                    mov qword [rax], rdx	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004937	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x400493e	    0x48c740080000	                  mov qword [rax + 8], 0	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4004946	      0xe9a6000000	                           jmp 0x40049f1	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x400494b	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4004952	      0xbe00000000	                              mov esi, 0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4004957	          0x4889c7	                            mov rdi, rax	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x400495a	      0xe800000000	                          call 0x400495f	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x400495f	            0x85c0	                           test eax, eax	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4004961	            0x7511	                           jne 0x4004974	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4004963	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x400496a	    0x48c740080000	                  mov qword [rax + 8], 0	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4004972	            0xeb7d	                           jmp 0x40049f1	      1560	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4004974	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x400497b	      0xbe00000000	                              mov esi, 0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4004980	          0x4889c7	                            mov rdi, rax	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4004983	      0xe800000000	                          call 0x4004988	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4004988	            0x85c0	                           test eax, eax	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x400498a	            0x7564	                           jne 0x40049f0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x400498c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4004993	    0x48c740080000	                  mov qword [rax + 8], 0	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x400499b	            0xeb54	                           jmp 0x40049f1	      1563	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x400499d	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049a4	            0x7513	                           jne 0x40049b9	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049a6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049ad	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049b4	          0x488910	                    mov qword [rax], rdx	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049b7	            0xeb38	                           jmp 0x40049f1	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x40049b9	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049c0	          0x4889c6	                            mov rsi, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049c3	      0xbf00000000	                              mov edi, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049c8	      0xb800000000	                              mov eax, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049cd	      0xe800000000	                          call 0x40049d2	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049d2	          0x4889c2	                            mov rdx, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049d5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049dc	          0x488910	                    mov qword [rax], rdx	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049df	            0xeb10	                           jmp 0x40049f1	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x40049e1	              0x90	                                     nop	      1498	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7
0x40049e2	            0xeb0d	                           jmp 0x40049f1	      1498	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7
0x40049e4	              0x90	                                     nop	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x40049e5	            0xeb0a	                           jmp 0x40049f1	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x40049e7	              0x90	                                     nop	      1509	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10
0x40049e8	            0xeb07	                           jmp 0x40049f1	      1509	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10
0x40049ea	              0x90	                                     nop	      1517	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x40049eb	            0xeb04	                           jmp 0x40049f1	      1517	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x40049ed	              0x90	                                     nop	      1538	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18
0x40049ee	            0xeb01	                           jmp 0x40049f1	      1538	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18
0x40049f0	              0x90	                                     nop	      1565	ref-filter.c	FUNCTION_57	FOR_1	ELSE_16
0x40049f1	    0x8385a0feffff	              add dword [rbp - 0x160], 1	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x40049f8	    0x8b0500000000	            mov eax, dword [0x040049fe] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x40049fe	    0x3985a0feffff	           cmp dword [rbp - 0x160], eax 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004a04	     0xf8c1afaffff	                            jl 0x4004424	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4004a0a	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a14	            0xeb38	                           jmp 0x4004a4e	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a16	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a1d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a21	    0x8b95a0feffff	            mov edx, dword [rbp - 0x160]	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a27	          0x4863d2	                         movsxd rdx, edx	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a2a	        0x48c1e205	                              shl rdx, 5	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a2e	          0x4801d0	                            add rax, rdx	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a31	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004a38	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004a3f	          0x488b00	                    mov rax, qword [rax]	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004a42	          0x4885c0	                           test rax, rax	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004a45	            0x7417	                            je 0x4004a5e	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004a47	    0x8385a0feffff	              add dword [rbp - 0x160], 1	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a4e	    0x8b0500000000	            mov eax, dword [0x04004a54] 	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a54	    0x3985a0feffff	           cmp dword [rbp - 0x160], eax 	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a5a	            0x7cba	                            jl 0x4004a16	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a5c	            0xeb01	                           jmp 0x4004a5f	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004a5e	              0x90	                                     nop	      1576	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004a5f	    0x8b0500000000	            mov eax, dword [0x04004a65] 	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4004a65	    0x3b85a0feffff	            cmp eax, dword [rbp - 0x160]	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4004a6b	            0x7f0a	                            jg 0x4004a77	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4004a6d	      0xb800000000	                              mov eax, 0	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4004a72	      0xe9a1000000	                           jmp 0x4004b18	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4004a77	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a7e	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a85	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a8c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a93	          0x4989c8	                             mov r8, rcx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a96	          0x4889d1	                            mov rcx, rdx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a99	      0xba00000000	                              mov edx, 0	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004a9e	          0x4889c7	                            mov rdi, rax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004aa1	      0xe865f7ffff	                     call sym.get_object	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004aa6	            0x85c0	                           test eax, eax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004aa8	            0x7407	                            je 0x4004ab1	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004aaa	      0xb8ffffffff	                     mov eax, 0xffffffff	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4004aaf	            0xeb67	                           jmp 0x4004b18	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4004ab1	    0x8b0500000000	            mov eax, dword [0x04004ab7] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004ab7	            0x85c0	                           test eax, eax	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004ab9	            0x7411	                            je 0x4004acc	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004abb	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004ac2	           0xfb600	                   movzx eax, byte [rax]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004ac5	          0x83e00e	                            and eax, 0xe	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004ac8	            0x3c08	                               cmp al, 8	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004aca	            0x7407	                            je 0x4004ad3	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004acc	      0xb800000000	                              mov eax, 0	      1589	ref-filter.c	FUNCTION_57	IF_31
0x4004ad1	            0xeb45	                           jmp 0x4004b18	      1589	ref-filter.c	FUNCTION_57	IF_31
0x4004ad3	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1595	ref-filter.c	FUNCTION_57
0x4004ada	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1595	ref-filter.c	FUNCTION_57
0x4004ade	        0x4883c004	                              add rax, 4	      1595	ref-filter.c	FUNCTION_57
0x4004ae2	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      1595	ref-filter.c	FUNCTION_57
0x4004ae9	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004af0	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004af7	    0x488bb5e8feff	            mov rsi, qword [rbp - 0x118]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004afe	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b05	          0x4989c8	                             mov r8, rcx	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b08	          0x4889d1	                            mov rcx, rdx	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b0b	      0xba01000000	                              mov edx, 1	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b10	          0x4889c7	                            mov rdi, rax	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b13	      0xe8f3f6ffff	                     call sym.get_object	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004b18	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1604	ref-filter.c	FUNCTION_57
0x4004b1c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1604	ref-filter.c	FUNCTION_57
0x4004b25	            0x7405	                            je 0x4004b2c	      1604	ref-filter.c	FUNCTION_57
0x4004b27	      0xe800000000	                          call 0x4004b2c	      1604	ref-filter.c	FUNCTION_57
0x4004b2c	              0xc9	                                   leave	      1604	ref-filter.c	FUNCTION_57
0x4004b2d	              0xc3	                                     ret	      1604	ref-filter.c	FUNCTION_57
get_object	WHILE,0:FOR,0:CALL,9:DO,0:functions,0:SWITCH,0:IF,3:ELSE,2	89
0x400420b	              0x55	                                push rbp	      1436	ref-filter.c	FUNCTION_56
0x400420c	          0x4889e5	                            mov rbp, rsp	      1436	ref-filter.c	FUNCTION_56
0x400420f	            0x4154	                                push r12	      1436	ref-filter.c	FUNCTION_56
0x4004211	              0x53	                                push rbx	      1436	ref-filter.c	FUNCTION_56
0x4004212	        0x4883ec50	                           sub rsp, 0x50	      1436	ref-filter.c	FUNCTION_56
0x4004216	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1436	ref-filter.c	FUNCTION_56
0x400421a	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1436	ref-filter.c	FUNCTION_56
0x400421e	          0x8955bc	             mov dword [rbp - 0x44], edx	      1436	ref-filter.c	FUNCTION_56
0x4004221	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1436	ref-filter.c	FUNCTION_56
0x4004225	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1436	ref-filter.c	FUNCTION_56
0x4004229	    0x64488b042528	                mov rax, qword fs:[0x28]	      1436	ref-filter.c	FUNCTION_56
0x4004232	        0x488945e8	             mov qword [rbp - 0x18], rax	      1436	ref-filter.c	FUNCTION_56
0x4004236	            0x31c0	                            xor eax, eax	      1436	ref-filter.c	FUNCTION_56
0x4004238	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1438	ref-filter.c	FUNCTION_56
0x400423f	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4004243	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4004247	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x400424b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x400424f	          0x4889c7	                            mov rdi, rax	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4004252	      0xe8ede1ffff	                        call sym.get_obj	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4004257	        0x488945e0	             mov qword [rbp - 0x20], rax	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x400425b	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1441	ref-filter.c	FUNCTION_56	IF_1
0x4004260	            0x7545	                           jne 0x40042a7	      1441	ref-filter.c	FUNCTION_56	IF_1
0x4004262	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1443	ref-filter.c	FUNCTION_56	CALL_4
0x4004266	        0x488d5838	                   lea rbx, [rax + 0x38]	      1443	ref-filter.c	FUNCTION_56	CALL_4
0x400426a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400426e	          0x4889c7	                            mov rdi, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004271	      0xe800000000	                          call 0x4004276	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004276	          0x4989c4	                            mov r12, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004279	      0xbf00000000	                              mov edi, 0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400427e	      0xe81ac2ffff	                               call sym.	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004283	          0x4889c2	                            mov rdx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004286	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400428a	          0x4989d8	                             mov r8, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400428d	          0x4c89e1	                            mov rcx, r12	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004290	      0xbeffffffff	                     mov esi, 0xffffffff	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004295	          0x4889c7	                            mov rdi, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4004298	      0xb800000000	                              mov eax, 0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x400429d	      0xe8b2c3ffff	                call sym.strbuf_addf_ret	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40042a2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40042a5	            0xeb76	                           jmp 0x400431d	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40042a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042ab	          0x488b00	                    mov rax, qword [rax]	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042ae	          0x4885c0	                           test rax, rax	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042b1	            0x7545	                           jne 0x40042f8	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1446	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042b7	        0x488d5838	                   lea rbx, [rax + 0x38]	      1446	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x40042bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042bf	          0x4889c7	                            mov rdi, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042c2	      0xe800000000	                          call 0x40042c7	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042c7	          0x4989c4	                            mov r12, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042ca	      0xbf00000000	                              mov edi, 0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042cf	      0xe8c9c1ffff	                               call sym.	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042d4	          0x4889c2	                            mov rdx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042d7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042db	          0x4989d8	                             mov r8, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042de	          0x4c89e1	                            mov rcx, r12	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042e1	      0xbeffffffff	                     mov esi, 0xffffffff	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042e6	          0x4889c7	                            mov rdi, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042e9	      0xb800000000	                              mov eax, 0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042ee	      0xe861c3ffff	                call sym.strbuf_addf_ret	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042f3	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042f6	            0xeb25	                           jmp 0x400431d	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40042f8	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x40042fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004300	          0x488b10	                    mov rdx, qword [rax]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004303	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004307	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x400430b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x400430f	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004312	          0x4989f8	                             mov r8, rdi	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004315	          0x4889c7	                            mov rdi, rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4004318	      0xe865f5ffff	                    call sym.grab_values	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x400431d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4004320	            0x85c0	                           test eax, eax	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4004322	            0x750c	                           jne 0x4004330	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4004324	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4004328	          0x4889c7	                            mov rdi, rax	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400432b	      0xe800000000	                          call 0x4004330	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4004330	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1451	ref-filter.c	FUNCTION_56
0x4004333	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1452	ref-filter.c	FUNCTION_56
0x4004337	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1452	ref-filter.c	FUNCTION_56
0x4004340	            0x7405	                            je 0x4004347	      1452	ref-filter.c	FUNCTION_56
0x4004342	      0xe800000000	                          call 0x4004347	      1452	ref-filter.c	FUNCTION_56
0x4004347	        0x4883c450	                           add rsp, 0x50	      1452	ref-filter.c	FUNCTION_56
0x400434b	              0x5b	                                 pop rbx	      1452	ref-filter.c	FUNCTION_56
0x400434c	            0x415c	                                 pop r12	      1452	ref-filter.c	FUNCTION_56
0x400434e	              0x5d	                                 pop rbp	      1452	ref-filter.c	FUNCTION_56
0x400434f	              0xc3	                                     ret	      1452	ref-filter.c	FUNCTION_56
parse_opt_ref_sorting	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	19
0x4006929	              0x55	                                push rbp	      2339	ref-filter.c	FUNCTION_89
0x400692a	          0x4889e5	                            mov rbp, rsp	      2339	ref-filter.c	FUNCTION_89
0x400692d	        0x4883ec20	                           sub rsp, 0x20	      2339	ref-filter.c	FUNCTION_89
0x4006931	        0x48897df8	                mov qword [rbp - 8], rdi	      2339	ref-filter.c	FUNCTION_89
0x4006935	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2339	ref-filter.c	FUNCTION_89
0x4006939	          0x8955ec	             mov dword [rbp - 0x14], edx	      2339	ref-filter.c	FUNCTION_89
0x400693c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4006941	            0x7507	                           jne 0x400694a	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4006943	      0xb8ffffffff	                     mov eax, 0xffffffff	      2341	ref-filter.c	FUNCTION_89	IF_1
0x4006948	            0xeb1c	                           jmp 0x4006966	      2341	ref-filter.c	FUNCTION_89	IF_1
0x400694a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x400694e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4006952	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4006956	          0x4889d6	                            mov rsi, rdx	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4006959	          0x4889c7	                            mov rdi, rax	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x400695c	      0xe800000000	                          call 0x4006961	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4006961	      0xb800000000	                              mov eax, 0	      2343	ref-filter.c	FUNCTION_89
0x4006966	              0xc9	                                   leave	      2344	ref-filter.c	FUNCTION_89
0x4006967	              0xc3	                                     ret	      2344	ref-filter.c	FUNCTION_89
hexval	WHILE,0:FOR,0:CALL,0:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	10
0x4000598	              0x55	                                push rbp	      1272	cache.h	FUNCTION_114
0x4000599	          0x4889e5	                            mov rbp, rsp	      1272	cache.h	FUNCTION_114
0x400059c	            0x89f8	                            mov eax, edi	      1272	cache.h	FUNCTION_114
0x400059e	          0x8845fc	                  mov byte [rbp - 4], al	      1272	cache.h	FUNCTION_114
0x40005a1	         0xfb645fc	               movzx eax, byte [rbp - 4]	      1273	cache.h	FUNCTION_114
0x40005a5	            0x4898	                                    cdqe	      1273	cache.h	FUNCTION_114
0x40005a7	     0xfb680000000	                   movzx eax, byte [rax]	      1273	cache.h	FUNCTION_114
0x40005ae	           0xfbec0	                           movsx eax, al	      1273	cache.h	FUNCTION_114
0x40005b1	              0x5d	                                 pop rbp	      1274	cache.h	FUNCTION_114
0x40005b2	              0xc3	                                     ret	      1274	cache.h	FUNCTION_114
parse_ref_sorting	WHILE,0:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	54
0x4006870	              0x55	                                push rbp	      2321	ref-filter.c	FUNCTION_88
0x4006871	          0x4889e5	                            mov rbp, rsp	      2321	ref-filter.c	FUNCTION_88
0x4006874	        0x4883ec20	                           sub rsp, 0x20	      2321	ref-filter.c	FUNCTION_88
0x4006878	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2321	ref-filter.c	FUNCTION_88
0x400687c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2321	ref-filter.c	FUNCTION_88
0x4006880	      0xbe10000000	                           mov esi, 0x10	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4006885	      0xbf01000000	                              mov edi, 1	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x400688a	      0xe800000000	                          call 0x400688f	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x400688f	        0x488945f8	                mov qword [rbp - 8], rax	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x4006893	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2325	ref-filter.c	FUNCTION_88
0x4006897	          0x488b10	                    mov rdx, qword [rax]	      2325	ref-filter.c	FUNCTION_88
0x400689a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2325	ref-filter.c	FUNCTION_88
0x400689e	          0x488910	                    mov qword [rax], rdx	      2325	ref-filter.c	FUNCTION_88
0x40068a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2326	ref-filter.c	FUNCTION_88
0x40068a5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2326	ref-filter.c	FUNCTION_88
0x40068a9	          0x488910	                    mov qword [rax], rdx	      2326	ref-filter.c	FUNCTION_88
0x40068ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40068b0	           0xfb600	                   movzx eax, byte [rax]	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40068b3	            0x3c2d	                            cmp al, 0x2d	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40068b5	            0x751a	                           jne 0x40068d1	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40068b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2329	ref-filter.c	FUNCTION_88	IF_1
0x40068bb	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      2329	ref-filter.c	FUNCTION_88	IF_1
0x40068bf	          0x83ca01	                               or edx, 1	      2329	ref-filter.c	FUNCTION_88	IF_1
0x40068c2	          0x88500c	                mov byte [rax + 0xc], dl	      2329	ref-filter.c	FUNCTION_88	IF_1
0x40068c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40068c9	        0x4883c001	                              add rax, 1	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40068cd	        0x488945e0	             mov qword [rbp - 0x20], rax	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40068d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068d5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068d9	      0xbe00000000	                              mov esi, 0	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068de	          0x4889c7	                            mov rdi, rax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068e1	      0xe86597ffff	                    call sym.skip_prefix	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068e6	            0x85c0	                           test eax, eax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068e8	            0x7519	                           jne 0x4006903	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x40068ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x40068ee	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x40068f2	      0xbe00000000	                              mov esi, 0	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x40068f7	          0x4889c7	                            mov rdi, rax	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x40068fa	      0xe84c97ffff	                    call sym.skip_prefix	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x40068ff	            0x85c0	                           test eax, eax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x4006901	            0x740e	                            je 0x4006911	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x4006903	        0x488b45f8	                mov rax, qword [rbp - 8]	      2334	ref-filter.c	FUNCTION_88	IF_2
0x4006907	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      2334	ref-filter.c	FUNCTION_88	IF_2
0x400690b	          0x83ca04	                               or edx, 4	      2334	ref-filter.c	FUNCTION_88	IF_2
0x400690e	          0x88500c	                mov byte [rax + 0xc], dl	      2334	ref-filter.c	FUNCTION_88	IF_2
0x4006911	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4006915	          0x4889c7	                            mov rdi, rax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4006918	      0xe84cfeffff	             call sym.parse_sorting_atom	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x400691d	            0x89c2	                            mov edx, eax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x400691f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4006923	          0x895008	                mov dword [rax + 8], edx	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4006926	              0x90	                                     nop	      2336	ref-filter.c	FUNCTION_88
0x4006927	              0xc9	                                   leave	      2336	ref-filter.c	FUNCTION_88
0x4006928	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
new_ref_array_item	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	35
0x400569d	              0x55	                                push rbp	      1917	ref-filter.c	FUNCTION_70
0x400569e	          0x4889e5	                            mov rbp, rsp	      1917	ref-filter.c	FUNCTION_70
0x40056a1	        0x4883ec20	                           sub rsp, 0x20	      1917	ref-filter.c	FUNCTION_70
0x40056a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1917	ref-filter.c	FUNCTION_70
0x40056a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1917	ref-filter.c	FUNCTION_70
0x40056ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1920	ref-filter.c	FUNCTION_70
0x40056b1	          0x4889c7	                            mov rdi, rax	      1920	ref-filter.c	FUNCTION_70
0x40056b4	      0xe800000000	                          call 0x40056b9	      1920	ref-filter.c	FUNCTION_70
0x40056b9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	ref-filter.c	FUNCTION_70
0x40056bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1920	ref-filter.c	FUNCTION_70
0x40056c1	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70
0x40056c4	      0xbf38000000	                           mov edi, 0x38	      1920	ref-filter.c	FUNCTION_70
0x40056c9	      0xe8d3a9ffff	                         call sym.st_add	      1920	ref-filter.c	FUNCTION_70
0x40056ce	      0xbe01000000	                              mov esi, 1	      1920	ref-filter.c	FUNCTION_70
0x40056d3	          0x4889c7	                            mov rdi, rax	      1920	ref-filter.c	FUNCTION_70
0x40056d6	      0xe8c6a9ffff	                         call sym.st_add	      1920	ref-filter.c	FUNCTION_70
0x40056db	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70
0x40056de	      0xbf01000000	                              mov edi, 1	      1920	ref-filter.c	FUNCTION_70
0x40056e3	      0xe800000000	                          call 0x40056e8	      1920	ref-filter.c	FUNCTION_70
0x40056e8	        0x488945f8	                mov qword [rbp - 8], rax	      1920	ref-filter.c	FUNCTION_70
0x40056ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1920	ref-filter.c	FUNCTION_70
0x40056f0	        0x488d4838	                   lea rcx, [rax + 0x38]	      1920	ref-filter.c	FUNCTION_70
0x40056f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1920	ref-filter.c	FUNCTION_70
0x40056f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1920	ref-filter.c	FUNCTION_70
0x40056fc	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70
0x40056ff	          0x4889cf	                            mov rdi, rcx	      1920	ref-filter.c	FUNCTION_70
0x4005702	      0xe800000000	                          call 0x4005707	      1920	ref-filter.c	FUNCTION_70
0x4005707	        0x488b45f8	                mov rax, qword [rbp - 8]	      1921	ref-filter.c	FUNCTION_70	CALL_1
0x400570b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1921	ref-filter.c	FUNCTION_70	CALL_1
0x400570f	          0x4889d6	                            mov rsi, rdx	      1921	ref-filter.c	FUNCTION_70	CALL_1
0x4005712	          0x4889c7	                            mov rdi, rax	      1921	ref-filter.c	FUNCTION_70	CALL_1
0x4005715	      0xe829aeffff	                         call sym.oidcpy	      1921	ref-filter.c	FUNCTION_70	CALL_1
0x400571a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1923	ref-filter.c	FUNCTION_70
0x400571e	              0xc9	                                   leave	      1924	ref-filter.c	FUNCTION_70
0x400571f	              0xc3	                                     ret	      1924	ref-filter.c	FUNCTION_70
else_atom_handler	WHILE,0:FOR,0:CALL,7:DO,0:functions,0:SWITCH,0:IF,4:ELSE,0	77
0x4002005	              0x55	                                push rbp	       696	ref-filter.c	FUNCTION_27
0x4002006	          0x4889e5	                            mov rbp, rsp	       696	ref-filter.c	FUNCTION_27
0x4002009	        0x4883ec30	                           sub rsp, 0x30	       696	ref-filter.c	FUNCTION_27
0x400200d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       696	ref-filter.c	FUNCTION_27
0x4002011	        0x488975e0	             mov qword [rbp - 0x20], rsi	       696	ref-filter.c	FUNCTION_27
0x4002015	        0x488955d8	             mov qword [rbp - 0x28], rdx	       696	ref-filter.c	FUNCTION_27
0x4002019	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       697	ref-filter.c	FUNCTION_27
0x400201d	        0x488b4008	                mov rax, qword [rax + 8]	       697	ref-filter.c	FUNCTION_27
0x4002021	        0x488945f8	                mov qword [rbp - 8], rax	       697	ref-filter.c	FUNCTION_27
0x4002025	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       698	ref-filter.c	FUNCTION_27
0x400202d	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	ref-filter.c	FUNCTION_27	IF_1
0x4002031	        0x488b4020	            mov rax, qword [rax + 0x20] 	       700	ref-filter.c	FUNCTION_27	IF_1
0x4002035	    0x483d00000000	                              cmp rax, 0	       700	ref-filter.c	FUNCTION_27	IF_1
0x400203b	            0x750c	                           jne 0x4002049	       700	ref-filter.c	FUNCTION_27	IF_1
0x400203d	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	ref-filter.c	FUNCTION_27	IF_1
0x4002041	        0x488b4028	            mov rax, qword [rax + 0x28] 	       701	ref-filter.c	FUNCTION_27	IF_1
0x4002045	        0x488945f0	             mov qword [rbp - 0x10], rax	       701	ref-filter.c	FUNCTION_27	IF_1
0x4002049	      0x48837df000	               cmp qword [rbp - 0x10], 0	       702	ref-filter.c	FUNCTION_27	IF_2
0x400204e	            0x7528	                           jne 0x4002078	       702	ref-filter.c	FUNCTION_27	IF_2
0x4002050	      0xbf00000000	                              mov edi, 0	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002055	      0xe843e4ffff	                               call sym.	       703	ref-filter.c	FUNCTION_27	CALL_2
0x400205a	          0x4889c2	                            mov rdx, rax	       703	ref-filter.c	FUNCTION_27	CALL_2
0x400205d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002061	      0xbeffffffff	                     mov esi, 0xffffffff	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002066	          0x4889c7	                            mov rdi, rax	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002069	      0xb800000000	                              mov eax, 0	       703	ref-filter.c	FUNCTION_27	CALL_2
0x400206e	      0xe8e1e5ffff	                call sym.strbuf_addf_ret	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002073	      0xe9b3000000	                           jmp 0x400212b	       703	ref-filter.c	FUNCTION_27	CALL_2
0x4002078	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       704	ref-filter.c	FUNCTION_27	IF_3
0x400207c	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002080	          0x83e001	                              and eax, 1	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002083	            0x84c0	                             test al, al	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002085	            0x7525	                           jne 0x40020ac	       704	ref-filter.c	FUNCTION_27	IF_3
0x4002087	      0xbf00000000	                              mov edi, 0	       705	ref-filter.c	FUNCTION_27	CALL_4
0x400208c	      0xe80ce4ffff	                               call sym.	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4002091	          0x4889c2	                            mov rdx, rax	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4002094	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       705	ref-filter.c	FUNCTION_27	CALL_4
0x4002098	      0xbeffffffff	                     mov esi, 0xffffffff	       705	ref-filter.c	FUNCTION_27	CALL_4
0x400209d	          0x4889c7	                            mov rdi, rax	       705	ref-filter.c	FUNCTION_27	CALL_4
0x40020a0	      0xb800000000	                              mov eax, 0	       705	ref-filter.c	FUNCTION_27	CALL_4
0x40020a5	      0xe8aae5ffff	                call sym.strbuf_addf_ret	       705	ref-filter.c	FUNCTION_27	CALL_4
0x40020aa	            0xeb7f	                           jmp 0x400212b	       705	ref-filter.c	FUNCTION_27	CALL_4
0x40020ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	ref-filter.c	FUNCTION_27	IF_4
0x40020b0	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       706	ref-filter.c	FUNCTION_27	IF_4
0x40020b4	          0x83e002	                              and eax, 2	       706	ref-filter.c	FUNCTION_27	IF_4
0x40020b7	            0x84c0	                             test al, al	       706	ref-filter.c	FUNCTION_27	IF_4
0x40020b9	            0x7425	                            je 0x40020e0	       706	ref-filter.c	FUNCTION_27	IF_4
0x40020bb	      0xbf00000000	                              mov edi, 0	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020c0	      0xe8d8e3ffff	                               call sym.	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020c5	          0x4889c2	                            mov rdx, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020cc	      0xbeffffffff	                     mov esi, 0xffffffff	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020d1	          0x4889c7	                            mov rdi, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020d4	      0xb800000000	                              mov eax, 0	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020d9	      0xe876e5ffff	                call sym.strbuf_addf_ret	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020de	            0xeb4b	                           jmp 0x400212b	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40020e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       708	ref-filter.c	FUNCTION_27
0x40020e4	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       708	ref-filter.c	FUNCTION_27
0x40020e8	          0x83ca02	                               or edx, 2	       708	ref-filter.c	FUNCTION_27
0x40020eb	          0x885010	               mov byte [rax + 0x10], dl	       708	ref-filter.c	FUNCTION_27
0x40020ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       709	ref-filter.c	FUNCTION_27	CALL_7
0x40020f2	        0x4883c008	                              add rax, 8	       709	ref-filter.c	FUNCTION_27	CALL_7
0x40020f6	          0x4889c7	                            mov rdi, rax	       709	ref-filter.c	FUNCTION_27	CALL_7
0x40020f9	      0xe8a0f9ffff	             call sym.push_stack_element	       709	ref-filter.c	FUNCTION_27	CALL_7
0x40020fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       710	ref-filter.c	FUNCTION_27
0x4002102	        0x488b4008	                mov rax, qword [rax + 8]	       710	ref-filter.c	FUNCTION_27
0x4002106	        0x488b55f8	                mov rdx, qword [rbp - 8]	       710	ref-filter.c	FUNCTION_27
0x400210a	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       710	ref-filter.c	FUNCTION_27
0x400210e	        0x48895028	             mov qword [rax + 0x28], rdx	       710	ref-filter.c	FUNCTION_27
0x4002112	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       711	ref-filter.c	FUNCTION_27
0x4002116	        0x488b4008	                mov rax, qword [rax + 8]	       711	ref-filter.c	FUNCTION_27
0x400211a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       711	ref-filter.c	FUNCTION_27
0x400211e	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       711	ref-filter.c	FUNCTION_27
0x4002122	        0x48895020	             mov qword [rax + 0x20], rdx	       711	ref-filter.c	FUNCTION_27
0x4002126	      0xb800000000	                              mov eax, 0	       712	ref-filter.c	FUNCTION_27
0x400212b	              0xc9	                                   leave	       713	ref-filter.c	FUNCTION_27
0x400212c	              0xc3	                                     ret	       713	ref-filter.c	FUNCTION_27
contents_atom_parser	WHILE,0:FOR,0:CALL,12:DO,0:functions,0:SWITCH,0:IF,8:ELSE,6	114
0x4000ded	              0x55	                                push rbp	       248	ref-filter.c	FUNCTION_9
0x4000dee	          0x4889e5	                            mov rbp, rsp	       248	ref-filter.c	FUNCTION_9
0x4000df1	              0x53	                                push rbx	       248	ref-filter.c	FUNCTION_9
0x4000df2	        0x4883ec28	                           sub rsp, 0x28	       248	ref-filter.c	FUNCTION_9
0x4000df6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       248	ref-filter.c	FUNCTION_9
0x4000dfa	        0x488975e0	             mov qword [rbp - 0x20], rsi	       248	ref-filter.c	FUNCTION_9
0x4000dfe	        0x488955d8	             mov qword [rbp - 0x28], rdx	       248	ref-filter.c	FUNCTION_9
0x4000e02	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       248	ref-filter.c	FUNCTION_9
0x4000e06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	ref-filter.c	FUNCTION_9	IF_1
0x4000e0a	          0x4885c0	                           test rax, rax	       249	ref-filter.c	FUNCTION_9	IF_1
0x4000e0d	            0x7510	                           jne 0x4000e1f	       249	ref-filter.c	FUNCTION_9	IF_1
0x4000e0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       250	ref-filter.c	FUNCTION_9	IF_1
0x4000e13	    0xc74010000000	               mov dword [rax + 0x10], 0	       250	ref-filter.c	FUNCTION_9	IF_1
0x4000e1a	      0xe975010000	                           jmp 0x4000f94	       250	ref-filter.c	FUNCTION_9	IF_1
0x4000e1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e23	      0xbe00000000	                              mov esi, 0	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e28	          0x4889c7	                            mov rdi, rax	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e2b	      0xe800000000	                          call 0x4000e30	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e30	            0x85c0	                           test eax, eax	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e32	            0x7510	                           jne 0x4000e44	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4000e34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0x4000e38	    0xc74010010000	               mov dword [rax + 0x10], 1	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0x4000e3f	      0xe950010000	                           jmp 0x4000f94	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0x4000e44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e48	      0xbe00000000	                              mov esi, 0	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e4d	          0x4889c7	                            mov rdi, rax	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e50	      0xe800000000	                          call 0x4000e55	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e55	            0x85c0	                           test eax, eax	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e57	            0x7510	                           jne 0x4000e69	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0x4000e59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0x4000e5d	    0xc74010040000	               mov dword [rax + 0x10], 4	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0x4000e64	      0xe92b010000	                           jmp 0x4000f94	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0x4000e69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e6d	      0xbe00000000	                              mov esi, 0	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e72	          0x4889c7	                            mov rdi, rax	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e75	      0xe800000000	                          call 0x4000e7a	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e7a	            0x85c0	                           test eax, eax	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e7c	            0x7510	                           jne 0x4000e8e	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0x4000e7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0x4000e82	    0xc74010050000	               mov dword [rax + 0x10], 5	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0x4000e89	      0xe906010000	                           jmp 0x4000f94	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0x4000e8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000e92	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000e96	      0xbe00000000	                              mov esi, 0	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000e9b	          0x4889c7	                            mov rdi, rax	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000e9e	      0xe8a8f1ffff	                    call sym.skip_prefix	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000ea3	            0x85c0	                           test eax, eax	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000ea5	            0x7454	                            je 0x4000efb	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0x4000ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0x4000eab	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0x4000eaf	      0xbe00000000	                              mov esi, 0	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0x4000eb4	          0x4889c7	                            mov rdi, rax	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0x4000eb7	      0xe88ff1ffff	                    call sym.skip_prefix	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0x4000ebc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ec0	           0xfb600	                   movzx eax, byte [rax]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ec3	            0x84c0	                             test al, al	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ec5	            0x7406	                            je 0x4000ecd	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ec7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ecb	            0xeb05	                           jmp 0x4000ed2	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ecd	      0xb800000000	                              mov eax, 0	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ed2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ed6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000eda	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ede	          0x4889d1	                            mov rcx, rdx	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ee1	          0x4889c2	                            mov rdx, rax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ee4	      0xe8a2fdffff	           call sym.trailers_atom_parser	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ee9	            0x85c0	                           test eax, eax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000eeb	     0xf84a3000000	                            je 0x4000f94	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0x4000ef1	      0xb8ffffffff	                     mov eax, 0xffffffff	       260	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6
0x4000ef6	      0xe99e000000	                           jmp 0x4000f99	       260	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6
0x4000efb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000eff	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f03	      0xbe00000000	                              mov esi, 0	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f08	          0x4889c7	                            mov rdi, rax	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f0b	      0xe83bf1ffff	                    call sym.skip_prefix	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f10	            0x85c0	                           test eax, eax	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f12	            0x7454	                            je 0x4000f68	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0x4000f14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	ref-filter.c	FUNCTION_9	ELSE_5	IF_7
0x4000f18	    0xc74010030000	               mov dword [rax + 0x10], 3	       262	ref-filter.c	FUNCTION_9	ELSE_5	IF_7
0x4000f1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f23	        0x488d5028	                   lea rdx, [rax + 0x28]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f27	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f2b	      0xbe0a000000	                            mov esi, 0xa	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f30	          0x4889c7	                            mov rdi, rax	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f33	      0xe8fff1ffff	                     call sym.strtoul_ui	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f38	            0x85c0	                           test eax, eax	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f3a	            0x7458	                            je 0x4000f94	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0x4000f3c	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f40	      0xbf00000000	                              mov edi, 0	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f45	      0xe853f5ffff	                               call sym.	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f4a	          0x4889c2	                            mov rdx, rax	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f51	          0x4889d9	                            mov rcx, rbx	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f54	      0xbeffffffff	                     mov esi, 0xffffffff	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f59	          0x4889c7	                            mov rdi, rax	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f5c	      0xb800000000	                              mov eax, 0	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f61	      0xe8eef6ffff	                call sym.strbuf_addf_ret	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f66	            0xeb31	                           jmp 0x4000f99	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0x4000f68	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f6c	      0xbf00000000	                              mov edi, 0	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f71	      0xe827f5ffff	                               call sym.	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f76	          0x4889c2	                            mov rdx, rax	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f7d	          0x4889d9	                            mov rcx, rbx	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f80	      0xbeffffffff	                     mov esi, 0xffffffff	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f85	          0x4889c7	                            mov rdi, rax	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f88	      0xb800000000	                              mov eax, 0	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f8d	      0xe8c2f6ffff	                call sym.strbuf_addf_ret	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f92	            0xeb05	                           jmp 0x4000f99	       266	ref-filter.c	FUNCTION_9	CALL_12
0x4000f94	      0xb800000000	                              mov eax, 0	       267	ref-filter.c	FUNCTION_9
0x4000f99	        0x4883c428	                           add rsp, 0x28	       268	ref-filter.c	FUNCTION_9
0x4000f9d	              0x5b	                                 pop rbx	       268	ref-filter.c	FUNCTION_9
0x4000f9e	              0x5d	                                 pop rbp	       268	ref-filter.c	FUNCTION_9
0x4000f9f	              0xc3	                                     ret	       268	ref-filter.c	FUNCTION_9
strtol_i	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	46
0x40001f5	              0x55	                                push rbp	      1026	git-compat-util.h	FUNCTION_152
0x40001f6	          0x4889e5	                            mov rbp, rsp	      1026	git-compat-util.h	FUNCTION_152
0x40001f9	        0x4883ec40	                           sub rsp, 0x40	      1026	git-compat-util.h	FUNCTION_152
0x40001fd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1026	git-compat-util.h	FUNCTION_152
0x4000201	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1026	git-compat-util.h	FUNCTION_152
0x4000204	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1026	git-compat-util.h	FUNCTION_152
0x4000208	    0x64488b042528	                mov rax, qword fs:[0x28]	      1026	git-compat-util.h	FUNCTION_152
0x4000211	        0x488945f8	                mov qword [rbp - 8], rax	      1026	git-compat-util.h	FUNCTION_152
0x4000215	            0x31c0	                            xor eax, eax	      1026	git-compat-util.h	FUNCTION_152
0x4000217	      0xe800000000	                          call 0x400021c	      1030	git-compat-util.h	FUNCTION_152
0x400021c	    0xc70000000000	                      mov dword [rax], 0	      1030	git-compat-util.h	FUNCTION_152
0x4000222	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x4000225	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x4000229	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x400022d	          0x4889ce	                            mov rsi, rcx	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x4000230	          0x4889c7	                            mov rdi, rax	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x4000233	      0xe800000000	                          call 0x4000238	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x4000238	        0x488945f0	             mov qword [rbp - 0x10], rax	      1031	git-compat-util.h	FUNCTION_152	CALL_1
0x400023c	      0xe800000000	                          call 0x4000241	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000241	            0x8b00	                    mov eax, dword [rax]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000243	            0x85c0	                           test eax, eax	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000245	            0x7521	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000247	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x400024b	           0xfb600	                   movzx eax, byte [rax]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x400024e	            0x84c0	                             test al, al	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000250	            0x7516	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000252	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000256	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x400025a	            0x740c	                            je 0x4000268	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x400025c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000260	            0x4898	                                    cdqe	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000262	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000266	            0x7407	                            je 0x400026f	      1032	git-compat-util.h	FUNCTION_152	IF_1
0x4000268	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	git-compat-util.h	FUNCTION_152	IF_1
0x400026d	            0xeb11	                           jmp 0x4000280	      1033	git-compat-util.h	FUNCTION_152	IF_1
0x400026f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	git-compat-util.h	FUNCTION_152
0x4000273	            0x89c2	                            mov edx, eax	      1034	git-compat-util.h	FUNCTION_152
0x4000275	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1034	git-compat-util.h	FUNCTION_152
0x4000279	            0x8910	                    mov dword [rax], edx	      1034	git-compat-util.h	FUNCTION_152
0x400027b	      0xb800000000	                              mov eax, 0	      1035	git-compat-util.h	FUNCTION_152
0x4000280	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1036	git-compat-util.h	FUNCTION_152
0x4000284	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1036	git-compat-util.h	FUNCTION_152
0x400028d	            0x7405	                            je 0x4000294	      1036	git-compat-util.h	FUNCTION_152
0x400028f	      0xe800000000	                          call 0x4000294	      1036	git-compat-util.h	FUNCTION_152
0x4000294	              0xc9	                                   leave	      1036	git-compat-util.h	FUNCTION_152
0x4000295	              0xc3	                                     ret	      1036	git-compat-util.h	FUNCTION_152
ref_array_push	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	84
0x4005720	              0x55	                                push rbp	      1929	ref-filter.c	FUNCTION_71
0x4005721	          0x4889e5	                            mov rbp, rsp	      1929	ref-filter.c	FUNCTION_71
0x4005724	        0x4883ec30	                           sub rsp, 0x30	      1929	ref-filter.c	FUNCTION_71
0x4005728	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1929	ref-filter.c	FUNCTION_71
0x400572c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1929	ref-filter.c	FUNCTION_71
0x4005730	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1929	ref-filter.c	FUNCTION_71
0x4005734	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4005738	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400573c	          0x4889d6	                            mov rsi, rdx	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400573f	          0x4889c7	                            mov rdi, rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4005742	      0xe856ffffff	             call sym.new_ref_array_item	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x4005747	        0x488945f8	                mov qword [rbp - 8], rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x400574b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x400574f	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71
0x4005751	          0x8d5001	                      lea edx, [rax + 1]	      1932	ref-filter.c	FUNCTION_71
0x4005754	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x4005758	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71
0x400575b	            0x39c2	                            cmp edx, eax	      1932	ref-filter.c	FUNCTION_71
0x400575d	     0xf8e93000000	                           jle 0x40057f6	      1932	ref-filter.c	FUNCTION_71
0x4005763	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x4005767	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71
0x400576a	          0x8d5010	                   lea edx, [rax + 0x10]	      1932	ref-filter.c	FUNCTION_71
0x400576d	            0x89d0	                            mov eax, edx	      1932	ref-filter.c	FUNCTION_71
0x400576f	             0x1c0	                            add eax, eax	      1932	ref-filter.c	FUNCTION_71
0x4005771	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71
0x4005773	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71
0x4005775	          0xc1ea1f	                           shr edx, 0x1f	      1932	ref-filter.c	FUNCTION_71
0x4005778	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71
0x400577a	            0xd1f8	                              sar eax, 1	      1932	ref-filter.c	FUNCTION_71
0x400577c	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71
0x400577e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x4005782	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71
0x4005784	          0x83c001	                              add eax, 1	      1932	ref-filter.c	FUNCTION_71
0x4005787	            0x39c2	                            cmp edx, eax	      1932	ref-filter.c	FUNCTION_71
0x4005789	            0x7d12	                           jge 0x400579d	      1932	ref-filter.c	FUNCTION_71
0x400578b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x400578f	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71
0x4005791	          0x8d5001	                      lea edx, [rax + 1]	      1932	ref-filter.c	FUNCTION_71
0x4005794	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x4005798	          0x895004	                mov dword [rax + 4], edx	      1932	ref-filter.c	FUNCTION_71
0x400579b	            0xeb22	                           jmp 0x40057bf	      1932	ref-filter.c	FUNCTION_71
0x400579d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x40057a1	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71
0x40057a4	          0x8d5010	                   lea edx, [rax + 0x10]	      1932	ref-filter.c	FUNCTION_71
0x40057a7	            0x89d0	                            mov eax, edx	      1932	ref-filter.c	FUNCTION_71
0x40057a9	             0x1c0	                            add eax, eax	      1932	ref-filter.c	FUNCTION_71
0x40057ab	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71
0x40057ad	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71
0x40057af	          0xc1ea1f	                           shr edx, 0x1f	      1932	ref-filter.c	FUNCTION_71
0x40057b2	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71
0x40057b4	            0xd1f8	                              sar eax, 1	      1932	ref-filter.c	FUNCTION_71
0x40057b6	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71
0x40057b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x40057bc	          0x895004	                mov dword [rax + 4], edx	      1932	ref-filter.c	FUNCTION_71
0x40057bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x40057c3	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71
0x40057c6	            0x4898	                                    cdqe	      1932	ref-filter.c	FUNCTION_71
0x40057c8	          0x4889c6	                            mov rsi, rax	      1932	ref-filter.c	FUNCTION_71
0x40057cb	      0xbf08000000	                              mov edi, 8	      1932	ref-filter.c	FUNCTION_71
0x40057d0	      0xe810a9ffff	                        call sym.st_mult	      1932	ref-filter.c	FUNCTION_71
0x40057d5	          0x4889c2	                            mov rdx, rax	      1932	ref-filter.c	FUNCTION_71
0x40057d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x40057dc	        0x488b4008	                mov rax, qword [rax + 8]	      1932	ref-filter.c	FUNCTION_71
0x40057e0	          0x4889d6	                            mov rsi, rdx	      1932	ref-filter.c	FUNCTION_71
0x40057e3	          0x4889c7	                            mov rdi, rax	      1932	ref-filter.c	FUNCTION_71
0x40057e6	      0xe800000000	                          call 0x40057eb	      1932	ref-filter.c	FUNCTION_71
0x40057eb	          0x4889c2	                            mov rdx, rax	      1932	ref-filter.c	FUNCTION_71
0x40057ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71
0x40057f2	        0x48895008	                mov qword [rax + 8], rdx	      1932	ref-filter.c	FUNCTION_71
0x40057f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x40057fa	        0x488b7008	                mov rsi, qword [rax + 8]	      1933	ref-filter.c	FUNCTION_71
0x40057fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x4005802	            0x8b00	                    mov eax, dword [rax]	      1933	ref-filter.c	FUNCTION_71
0x4005804	          0x8d4801	                      lea ecx, [rax + 1]	      1933	ref-filter.c	FUNCTION_71
0x4005807	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x400580b	            0x890a	                    mov dword [rdx], ecx	      1933	ref-filter.c	FUNCTION_71
0x400580d	            0x4898	                                    cdqe	      1933	ref-filter.c	FUNCTION_71
0x400580f	        0x48c1e003	                              shl rax, 3	      1933	ref-filter.c	FUNCTION_71
0x4005813	        0x488d1406	                    lea rdx, [rsi + rax]	      1933	ref-filter.c	FUNCTION_71
0x4005817	        0x488b45f8	                mov rax, qword [rbp - 8]	      1933	ref-filter.c	FUNCTION_71
0x400581b	          0x488902	                    mov qword [rdx], rax	      1933	ref-filter.c	FUNCTION_71
0x400581e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1935	ref-filter.c	FUNCTION_71
0x4005822	              0xc9	                                   leave	      1936	ref-filter.c	FUNCTION_71
0x4005823	              0xc3	                                     ret	      1936	ref-filter.c	FUNCTION_71
append_atom	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,1	33
0x4001a2f	              0x55	                                push rbp	       543	ref-filter.c	FUNCTION_18
0x4001a30	          0x4889e5	                            mov rbp, rsp	       543	ref-filter.c	FUNCTION_18
0x4001a33	        0x4883ec20	                           sub rsp, 0x20	       543	ref-filter.c	FUNCTION_18
0x4001a37	        0x48897df8	                mov qword [rbp - 8], rdi	       543	ref-filter.c	FUNCTION_18
0x4001a3b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       543	ref-filter.c	FUNCTION_18
0x4001a3f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       543	ref-filter.c	FUNCTION_18
0x4001a43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       550	ref-filter.c	FUNCTION_18	IF_1
0x4001a47	        0x488b4008	                mov rax, qword [rax + 8]	       550	ref-filter.c	FUNCTION_18	IF_1
0x4001a4b	          0x488b00	                    mov rax, qword [rax]	       550	ref-filter.c	FUNCTION_18	IF_1
0x4001a4e	          0x4885c0	                           test rax, rax	       550	ref-filter.c	FUNCTION_18	IF_1
0x4001a51	            0x7526	                           jne 0x4001a79	       550	ref-filter.c	FUNCTION_18	IF_1
0x4001a53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a57	            0x8b10	                    mov edx, dword [rax]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a59	        0x488b45f8	                mov rax, qword [rbp - 8]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a5d	          0x488b00	                    mov rax, qword [rax]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a60	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a64	        0x488b4908	                mov rcx, qword [rcx + 8]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a68	        0x4883c108	                              add rcx, 8	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a6c	          0x4889c6	                            mov rsi, rax	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a6f	          0x4889cf	                            mov rdi, rcx	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a72	      0xe827ffffff	               call sym.quote_formatting	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a77	            0xeb1e	                           jmp 0x4001a97	       551	ref-filter.c	FUNCTION_18	CALL_1
0x4001a79	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a7d	          0x488b00	                    mov rax, qword [rax]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a80	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a84	        0x488b5208	                mov rdx, qword [rdx + 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a88	        0x4883c208	                              add rdx, 8	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a8c	          0x4889c6	                            mov rsi, rax	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a8f	          0x4889d7	                            mov rdi, rdx	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a92	      0xe8d1e9ffff	                  call sym.strbuf_addstr	       553	ref-filter.c	FUNCTION_18	CALL_2
0x4001a97	      0xb800000000	                              mov eax, 0	       554	ref-filter.c	FUNCTION_18
0x4001a9c	              0xc9	                                   leave	       555	ref-filter.c	FUNCTION_18
0x4001a9d	              0xc3	                                     ret	       555	ref-filter.c	FUNCTION_18
copy_name	WHILE,0:FOR,1:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	36
0x4002ba6	              0x55	                                push rbp	       936	ref-filter.c	FUNCTION_38
0x4002ba7	          0x4889e5	                            mov rbp, rsp	       936	ref-filter.c	FUNCTION_38
0x4002baa	        0x4883ec20	                           sub rsp, 0x20	       936	ref-filter.c	FUNCTION_38
0x4002bae	        0x48897de8	             mov qword [rbp - 0x18], rdi	       936	ref-filter.c	FUNCTION_38
0x4002bb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002bb6	        0x488945f8	                mov qword [rbp - 8], rax	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002bba	            0xeb41	                           jmp 0x4002bfd	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002bbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bc0	      0xba02000000	                              mov edx, 2	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bc5	      0xbe00000000	                              mov esi, 0	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bca	          0x4889c7	                            mov rdi, rax	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bcd	      0xe800000000	                          call 0x4002bd2	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bd2	            0x85c0	                           test eax, eax	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bd4	            0x7522	                           jne 0x4002bf8	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x4002bd6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bde	          0x4829c2	                            sub rdx, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002be1	          0x4889d0	                            mov rax, rdx	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002be4	          0x4889c2	                            mov rdx, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002be7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002beb	          0x4889d6	                            mov rsi, rdx	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bee	          0x4889c7	                            mov rdi, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bf1	      0xe800000000	                          call 0x4002bf6	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bf6	            0xeb20	                           jmp 0x4002c18	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x4002bf8	      0x488345f801	                  add qword [rbp - 8], 1	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002bfd	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c01	           0xfb600	                   movzx eax, byte [rax]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c04	            0x84c0	                             test al, al	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c06	            0x740b	                            je 0x4002c13	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c08	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c0c	           0xfb600	                   movzx eax, byte [rax]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c0f	            0x3c0a	                             cmp al, 0xa	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c11	            0x75a9	                           jne 0x4002bbc	       938	ref-filter.c	FUNCTION_38	FOR_1
0x4002c13	      0xb800000000	                              mov eax, 0	       942	ref-filter.c	FUNCTION_38
0x4002c18	              0xc9	                                   leave	       943	ref-filter.c	FUNCTION_38
0x4002c19	              0xc3	                                     ret	       943	ref-filter.c	FUNCTION_38
strbuf_addch	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,1:ELSE,0	33
0x40003fa	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_121
0x40003fb	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_121
0x40003fe	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_121
0x4000402	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_121
0x4000406	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_121
0x4000409	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_121	IF_1	CALL_1
0x400040d	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_121	IF_1	CALL_1
0x4000410	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_121	IF_1	CALL_1
0x4000415	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_121	IF_1	CALL_1
0x4000418	            0x7511	                           jne 0x400042b	       227	strbuf.h	FUNCTION_121	IF_1	CALL_1
0x400041a	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_121	CALL_2
0x400041e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_121	CALL_2
0x4000423	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_121	CALL_2
0x4000426	      0xe800000000	                          call 0x400042b	       228	strbuf.h	FUNCTION_121	CALL_2
0x400042b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_121
0x400042f	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_121
0x4000433	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_121
0x4000437	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_121
0x400043b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_121
0x400043f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_121
0x4000443	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_121
0x4000447	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_121
0x400044a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_121
0x400044d	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_121
0x400044f	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_121
0x4000453	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_121
0x4000457	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_121
0x400045b	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_121
0x400045f	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_121
0x4000462	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_121
0x4000465	              0x90	                                     nop	       231	strbuf.h	FUNCTION_121
0x4000466	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_121
0x4000467	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_121
strbuf_setlen	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,1	43
0x4000360	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_120
0x4000361	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_120
0x4000364	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_120
0x4000368	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_120
0x400036c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_120
0x4000370	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000374	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000377	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_120	IF_1
0x400037a	            0x740d	                            je 0x4000389	       162	strbuf.h	FUNCTION_120	IF_1
0x400037c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000380	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000383	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_120	IF_1
0x4000387	            0xeb05	                           jmp 0x400038e	       162	strbuf.h	FUNCTION_120	IF_1
0x4000389	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_120	IF_1
0x400038e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000392	            0x730f	                           jae 0x40003a3	       162	strbuf.h	FUNCTION_120	IF_1
0x4000394	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_120	CALL_1
0x4000399	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_120	CALL_1
0x400039e	      0xe800000000	                          call 0x40003a3	       163	strbuf.h	FUNCTION_120	CALL_1
0x40003a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_120
0x40003a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_120
0x40003ab	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_120
0x40003af	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_120	IF_2
0x40003b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_120	IF_2
0x40003b7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_120	IF_2
0x40003bd	            0x7414	                            je 0x40003d3	       165	strbuf.h	FUNCTION_120	IF_2
0x40003bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_120	IF_2
0x40003c3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_120	IF_2
0x40003c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_120	IF_2
0x40003cb	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_120	IF_2
0x40003ce	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_120	IF_2
0x40003d1	            0xeb24	                           jmp 0x40003f7	       169	strbuf.h	FUNCTION_120
0x40003d3	     0xfb605000000	           movzx eax, byte [0x040003da] 	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003da	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003dc	            0x7419	                            je 0x40003f7	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003de	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003e3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003e8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003ed	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003f2	      0xe800000000	                          call 0x40003f7	       168	strbuf.h	FUNCTION_120	CALL_2
0x40003f7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_120
0x40003f8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_120
0x40003f9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_120
copy_email	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	35
0x4002c1a	              0x55	                                push rbp	       946	ref-filter.c	FUNCTION_39
0x4002c1b	          0x4889e5	                            mov rbp, rsp	       946	ref-filter.c	FUNCTION_39
0x4002c1e	        0x4883ec20	                           sub rsp, 0x20	       946	ref-filter.c	FUNCTION_39
0x4002c22	        0x48897de8	             mov qword [rbp - 0x18], rdi	       946	ref-filter.c	FUNCTION_39
0x4002c26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002c2a	      0xbe3c000000	                           mov esi, 0x3c	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002c2f	          0x4889c7	                            mov rdi, rax	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002c32	      0xe800000000	                          call 0x4002c37	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002c37	        0x488945f0	             mov qword [rbp - 0x10], rax	       947	ref-filter.c	FUNCTION_39	CALL_1
0x4002c3b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       949	ref-filter.c	FUNCTION_39	IF_1
0x4002c40	            0x7507	                           jne 0x4002c49	       949	ref-filter.c	FUNCTION_39	IF_1
0x4002c42	      0xb800000000	                              mov eax, 0	       950	ref-filter.c	FUNCTION_39	IF_1
0x4002c47	            0xeb4a	                           jmp 0x4002c93	       950	ref-filter.c	FUNCTION_39	IF_1
0x4002c49	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002c4d	      0xbe3e000000	                           mov esi, 0x3e	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002c52	          0x4889c7	                            mov rdi, rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002c55	      0xe800000000	                          call 0x4002c5a	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002c5a	        0x488945f8	                mov qword [rbp - 8], rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x4002c5e	      0x48837df800	                  cmp qword [rbp - 8], 0	       952	ref-filter.c	FUNCTION_39	IF_2
0x4002c63	            0x7507	                           jne 0x4002c6c	       952	ref-filter.c	FUNCTION_39	IF_2
0x4002c65	      0xb800000000	                              mov eax, 0	       953	ref-filter.c	FUNCTION_39	IF_2
0x4002c6a	            0xeb27	                           jmp 0x4002c93	       953	ref-filter.c	FUNCTION_39	IF_2
0x4002c6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c70	        0x4883c001	                              add rax, 1	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c74	          0x4889c2	                            mov rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c77	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c7b	          0x4829c2	                            sub rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c7e	          0x4889d0	                            mov rax, rdx	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c81	          0x4889c2	                            mov rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c84	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c88	          0x4889d6	                            mov rsi, rdx	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c8b	          0x4889c7	                            mov rdi, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c8e	      0xe800000000	                          call 0x4002c93	       954	ref-filter.c	FUNCTION_39	CALL_3
0x4002c93	              0xc9	                                   leave	       955	ref-filter.c	FUNCTION_39
0x4002c94	              0xc3	                                     ret	       955	ref-filter.c	FUNCTION_39
end_align_handler	WHILE,0:FOR,0:CALL,3:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	41
0x4001b5c	              0x55	                                push rbp	       579	ref-filter.c	FUNCTION_21
0x4001b5d	          0x4889e5	                            mov rbp, rsp	       579	ref-filter.c	FUNCTION_21
0x4001b60	        0x4883ec40	                           sub rsp, 0x40	       579	ref-filter.c	FUNCTION_21
0x4001b64	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       579	ref-filter.c	FUNCTION_21
0x4001b68	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	ref-filter.c	FUNCTION_21
0x4001b71	        0x488945f8	                mov qword [rbp - 8], rax	       579	ref-filter.c	FUNCTION_21
0x4001b75	            0x31c0	                            xor eax, eax	       579	ref-filter.c	FUNCTION_21
0x4001b77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       580	ref-filter.c	FUNCTION_21
0x4001b7b	          0x488b00	                    mov rax, qword [rax]	       580	ref-filter.c	FUNCTION_21
0x4001b7e	        0x488945d0	             mov qword [rbp - 0x30], rax	       580	ref-filter.c	FUNCTION_21
0x4001b82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       581	ref-filter.c	FUNCTION_21
0x4001b86	        0x488b4028	            mov rax, qword [rax + 0x28] 	       581	ref-filter.c	FUNCTION_21
0x4001b8a	        0x488945d8	             mov qword [rbp - 0x28], rax	       581	ref-filter.c	FUNCTION_21
0x4001b8e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       582	ref-filter.c	FUNCTION_21
0x4001b96	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       582	ref-filter.c	FUNCTION_21
0x4001b9e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       582	ref-filter.c	FUNCTION_21
0x4001ba6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001baa	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bb2	          0x8b5004	                mov edx, dword [rax + 4]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bb9	            0x8b30	                    mov esi, dword [rax]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bbb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bbf	          0x4889c7	                            mov rdi, rax	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bc2	      0xe800000000	                          call 0x4001bc7	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4001bc7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bcb	        0x488d5008	                      lea rdx, [rax + 8]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bcf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bd3	          0x4889c6	                            mov rsi, rax	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bd6	          0x4889d7	                            mov rdi, rdx	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bd9	      0xe8b8e6ffff	                    call sym.strbuf_swap	       585	ref-filter.c	FUNCTION_21	CALL_2
0x4001bde	        0x488d45e0	                   lea rax, [rbp - 0x20]	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001be2	          0x4889c7	                            mov rdi, rax	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001be5	      0xe800000000	                          call 0x4001bea	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4001bea	              0x90	                                     nop	       587	ref-filter.c	FUNCTION_21
0x4001beb	        0x488b45f8	                mov rax, qword [rbp - 8]	       587	ref-filter.c	FUNCTION_21
0x4001bef	    0x644833042528	                xor rax, qword fs:[0x28]	       587	ref-filter.c	FUNCTION_21
0x4001bf8	            0x7405	                            je 0x4001bff	       587	ref-filter.c	FUNCTION_21
0x4001bfa	      0xe800000000	                          call 0x4001bff	       587	ref-filter.c	FUNCTION_21
0x4001bff	              0xc9	                                   leave	       587	ref-filter.c	FUNCTION_21
0x4001c00	              0xc3	                                     ret	       587	ref-filter.c	FUNCTION_21
strtoul_ui	WHILE,0:FOR,0:CALL,2:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	54
0x4000137	              0x55	                                push rbp	      1010	git-compat-util.h	FUNCTION_151
0x4000138	          0x4889e5	                            mov rbp, rsp	      1010	git-compat-util.h	FUNCTION_151
0x400013b	        0x4883ec40	                           sub rsp, 0x40	      1010	git-compat-util.h	FUNCTION_151
0x400013f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1010	git-compat-util.h	FUNCTION_151
0x4000143	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1010	git-compat-util.h	FUNCTION_151
0x4000146	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1010	git-compat-util.h	FUNCTION_151
0x400014a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1010	git-compat-util.h	FUNCTION_151
0x4000153	        0x488945f8	                mov qword [rbp - 8], rax	      1010	git-compat-util.h	FUNCTION_151
0x4000157	            0x31c0	                            xor eax, eax	      1010	git-compat-util.h	FUNCTION_151
0x4000159	      0xe800000000	                          call 0x400015e	      1014	git-compat-util.h	FUNCTION_151
0x400015e	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_151
0x4000164	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x4000168	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x400016d	          0x4889c7	                            mov rdi, rax	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x4000170	      0xe800000000	                          call 0x4000175	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x4000175	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x4000178	            0x7407	                            je 0x4000181	      1016	git-compat-util.h	FUNCTION_151	IF_1	CALL_1
0x400017a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1017	git-compat-util.h	FUNCTION_151	IF_1
0x400017f	            0xeb5e	                           jmp 0x40001df	      1017	git-compat-util.h	FUNCTION_151	IF_1
0x4000181	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x4000184	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x4000188	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x400018c	          0x4889ce	                            mov rsi, rcx	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x400018f	          0x4889c7	                            mov rdi, rax	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x4000192	      0xe800000000	                          call 0x4000197	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x4000197	        0x488945f0	             mov qword [rbp - 0x10], rax	      1018	git-compat-util.h	FUNCTION_151	CALL_2
0x400019b	      0xe800000000	                          call 0x40001a0	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001a0	            0x8b00	                    mov eax, dword [rax]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001a2	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001a4	            0x7521	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001aa	           0xfb600	                   movzx eax, byte [rax]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001ad	            0x84c0	                             test al, al	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001af	            0x7516	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001b5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001b9	            0x740c	                            je 0x40001c7	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001bf	            0x89c0	                            mov eax, eax	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001c1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001c5	            0x7407	                            je 0x40001ce	      1019	git-compat-util.h	FUNCTION_151	IF_2
0x40001c7	      0xb8ffffffff	                     mov eax, 0xffffffff	      1020	git-compat-util.h	FUNCTION_151	IF_2
0x40001cc	            0xeb11	                           jmp 0x40001df	      1020	git-compat-util.h	FUNCTION_151	IF_2
0x40001ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1021	git-compat-util.h	FUNCTION_151
0x40001d2	            0x89c2	                            mov edx, eax	      1021	git-compat-util.h	FUNCTION_151
0x40001d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	git-compat-util.h	FUNCTION_151
0x40001d8	            0x8910	                    mov dword [rax], edx	      1021	git-compat-util.h	FUNCTION_151
0x40001da	      0xb800000000	                              mov eax, 0	      1022	git-compat-util.h	FUNCTION_151
0x40001df	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	git-compat-util.h	FUNCTION_151
0x40001e3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	git-compat-util.h	FUNCTION_151
0x40001ec	            0x7405	                            je 0x40001f3	      1023	git-compat-util.h	FUNCTION_151
0x40001ee	      0xe800000000	                          call 0x40001f3	      1023	git-compat-util.h	FUNCTION_151
0x40001f3	              0xc9	                                   leave	      1023	git-compat-util.h	FUNCTION_151
0x40001f4	              0xc3	                                     ret	      1023	git-compat-util.h	FUNCTION_151
oidcpy	WHILE,0:FOR,0:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	13
0x4000543	              0x55	                                push rbp	       999	cache.h	FUNCTION_103
0x4000544	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_103
0x4000547	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_103
0x400054b	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_103
0x400054f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_103
0x4000553	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_103	CALL_1
0x4000557	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_103	CALL_1
0x400055b	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_103	CALL_1
0x400055e	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_103	CALL_1
0x4000561	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_103	CALL_1
0x4000566	              0x90	                                     nop	      1001	cache.h	FUNCTION_103
0x4000567	              0xc9	                                   leave	      1001	cache.h	FUNCTION_103
0x4000568	              0xc3	                                     ret	      1001	cache.h	FUNCTION_103
ref_array_clear	WHILE,0:FOR,1:CALL,1:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	35
0x4005b42	              0x55	                                push rbp	      2045	ref-filter.c	FUNCTION_76
0x4005b43	          0x4889e5	                            mov rbp, rsp	      2045	ref-filter.c	FUNCTION_76
0x4005b46	        0x4883ec20	                           sub rsp, 0x20	      2045	ref-filter.c	FUNCTION_76
0x4005b4a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2045	ref-filter.c	FUNCTION_76
0x4005b4e	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b55	            0xeb24	                           jmp 0x4005b7b	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b5b	        0x488b4008	                mov rax, qword [rax + 8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b5f	          0x8b55fc	                mov edx, dword [rbp - 4]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b62	          0x4863d2	                         movsxd rdx, edx	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b65	        0x48c1e203	                              shl rdx, 3	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b69	          0x4801d0	                            add rax, rdx	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b6c	          0x488b00	                    mov rax, qword [rax]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b6f	          0x4889c7	                            mov rdi, rax	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b72	      0xe8a0ffffff	                call sym.free_array_item	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4005b77	        0x8345fc01	                  add dword [rbp - 4], 1	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b7f	            0x8b00	                    mov eax, dword [rax]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b81	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b84	            0x7fd1	                            jg 0x4005b57	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4005b86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	ref-filter.c	FUNCTION_76
0x4005b8a	        0x488b4008	                mov rax, qword [rax + 8]	      2050	ref-filter.c	FUNCTION_76
0x4005b8e	          0x4889c7	                            mov rdi, rax	      2050	ref-filter.c	FUNCTION_76
0x4005b91	      0xe800000000	                          call 0x4005b96	      2050	ref-filter.c	FUNCTION_76
0x4005b96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	ref-filter.c	FUNCTION_76
0x4005b9a	    0x48c740080000	                  mov qword [rax + 8], 0	      2050	ref-filter.c	FUNCTION_76
0x4005ba2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x4005ba6	    0xc74004000000	                  mov dword [rax + 4], 0	      2051	ref-filter.c	FUNCTION_76
0x4005bad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x4005bb1	          0x8b5004	                mov edx, dword [rax + 4]	      2051	ref-filter.c	FUNCTION_76
0x4005bb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x4005bb8	            0x8910	                    mov dword [rax], edx	      2051	ref-filter.c	FUNCTION_76
0x4005bba	              0x90	                                     nop	      2052	ref-filter.c	FUNCTION_76
0x4005bbb	              0xc9	                                   leave	      2052	ref-filter.c	FUNCTION_76
0x4005bbc	              0xc3	                                     ret	      2052	ref-filter.c	FUNCTION_76
setup_ref_filter_porcelain_msg	WHILE,0:FOR,0:CALL,4:DO,0:functions,0:SWITCH,0:IF,0:ELSE,0	17
0x4000609	              0x55	                                push rbp	        34	ref-filter.c	FUNCTION_1
0x400060a	          0x4889e5	                            mov rbp, rsp	        34	ref-filter.c	FUNCTION_1
0x400060d	      0xbf00000000	                              mov edi, 0	        35	ref-filter.c	FUNCTION_1	CALL_1
0x4000612	      0xe886feffff	                               call sym.	        35	ref-filter.c	FUNCTION_1	CALL_1
0x4000617	    0x488905000000	            mov qword [0x0400061e], rax 	        35	ref-filter.c	FUNCTION_1	CALL_1
0x400061e	      0xbf00000000	                              mov edi, 0	        36	ref-filter.c	FUNCTION_1	CALL_2
0x4000623	      0xe875feffff	                               call sym.	        36	ref-filter.c	FUNCTION_1	CALL_2
0x4000628	    0x488905000000	            mov qword [0x0400062f], rax 	        36	ref-filter.c	FUNCTION_1	CALL_2
0x400062f	      0xbf00000000	                              mov edi, 0	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4000634	      0xe864feffff	                               call sym.	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4000639	    0x488905000000	            mov qword [0x04000640], rax 	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4000640	      0xbf00000000	                              mov edi, 0	        38	ref-filter.c	FUNCTION_1	CALL_4
0x4000645	      0xe853feffff	                               call sym.	        38	ref-filter.c	FUNCTION_1	CALL_4
0x400064a	    0x488905000000	            mov qword [0x04000651], rax 	        38	ref-filter.c	FUNCTION_1	CALL_4
0x4000651	              0x90	                                     nop	        39	ref-filter.c	FUNCTION_1
0x4000652	              0x5d	                                 pop rbp	        39	ref-filter.c	FUNCTION_1
0x4000653	              0xc3	                                     ret	        39	ref-filter.c	FUNCTION_1
match_pattern	WHILE,0:FOR,1:CALL,5:DO,0:functions,0:SWITCH,0:IF,2:ELSE,0	63
0x4005217	              0x55	                                push rbp	      1752	ref-filter.c	FUNCTION_64
0x4005218	          0x4889e5	                            mov rbp, rsp	      1752	ref-filter.c	FUNCTION_64
0x400521b	        0x4883ec20	                           sub rsp, 0x20	      1752	ref-filter.c	FUNCTION_64
0x400521f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1752	ref-filter.c	FUNCTION_64
0x4005223	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1752	ref-filter.c	FUNCTION_64
0x4005227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1753	ref-filter.c	FUNCTION_64
0x400522b	          0x488b00	                    mov rax, qword [rax]	      1753	ref-filter.c	FUNCTION_64
0x400522e	        0x488945f8	                mov qword [rbp - 8], rax	      1753	ref-filter.c	FUNCTION_64
0x4005232	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1754	ref-filter.c	FUNCTION_64
0x4005239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1756	ref-filter.c	FUNCTION_64	IF_1
0x400523d	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1756	ref-filter.c	FUNCTION_64	IF_1
0x4005241	          0x83e004	                              and eax, 4	      1756	ref-filter.c	FUNCTION_64	IF_1
0x4005244	            0x84c0	                             test al, al	      1756	ref-filter.c	FUNCTION_64	IF_1
0x4005246	            0x7404	                            je 0x400524c	      1756	ref-filter.c	FUNCTION_64	IF_1
0x4005248	        0x834df401	                 or dword [rbp - 0xc], 1	      1757	ref-filter.c	FUNCTION_64	IF_1
0x400524c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005250	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005254	      0xbe00000000	                              mov esi, 0	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005259	          0x4889c7	                            mov rdi, rax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x400525c	      0xe8eaadffff	                    call sym.skip_prefix	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005261	            0x85c0	                           test eax, eax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005263	            0x7549	                           jne 0x40052ae	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x4005265	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x4005269	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x400526d	      0xbe00000000	                              mov esi, 0	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x4005272	          0x4889c7	                            mov rdi, rax	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x4005275	      0xe8d1adffff	                    call sym.skip_prefix	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x400527a	            0x85c0	                           test eax, eax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x400527c	            0x7530	                           jne 0x40052ae	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x400527e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x4005282	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x4005286	      0xbe00000000	                              mov esi, 0	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x400528b	          0x4889c7	                            mov rdi, rax	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x400528e	      0xe8b8adffff	                    call sym.skip_prefix	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x4005293	            0x85c0	                           test eax, eax	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x4005295	            0x7517	                           jne 0x40052ae	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x4005297	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x400529b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x400529f	      0xbe00000000	                              mov esi, 0	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x40052a4	          0x4889c7	                            mov rdi, rax	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x40052a7	      0xe89fadffff	                    call sym.skip_prefix	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x40052ac	            0x85c0	                           test eax, eax	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x40052ae	              0x90	                                     nop	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x40052af	            0xeb29	                           jmp 0x40052da	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052b1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052b9	          0x488b00	                    mov rax, qword [rax]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052bc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052bf	          0x4889ce	                            mov rsi, rcx	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052c2	          0x4889c7	                            mov rdi, rax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052c5	      0xe800000000	                          call 0x40052ca	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052ca	            0x85c0	                           test eax, eax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052cc	            0x7507	                           jne 0x40052d5	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x40052ce	      0xb801000000	                              mov eax, 1	      1770	ref-filter.c	FUNCTION_64	FOR_1	IF_2
0x40052d3	            0xeb16	                           jmp 0x40052eb	      1770	ref-filter.c	FUNCTION_64	FOR_1	IF_2
0x40052d5	      0x488345f808	                  add qword [rbp - 8], 8	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052de	          0x488b00	                    mov rax, qword [rax]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052e1	          0x4885c0	                           test rax, rax	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052e4	            0x75cb	                           jne 0x40052b1	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x40052e6	      0xb800000000	                              mov eax, 0	      1772	ref-filter.c	FUNCTION_64
0x40052eb	              0xc9	                                   leave	      1773	ref-filter.c	FUNCTION_64
0x40052ec	              0xc3	                                     ret	      1773	ref-filter.c	FUNCTION_64
match_points_at	WHILE,0:FOR,0:CALL,5:DO,0:functions,0:SWITCH,0:IF,4:ELSE,0	53
0x40055e3	              0x55	                                push rbp	      1894	ref-filter.c	FUNCTION_69
0x40055e4	          0x4889e5	                            mov rbp, rsp	      1894	ref-filter.c	FUNCTION_69
0x40055e7	        0x4883ec30	                           sub rsp, 0x30	      1894	ref-filter.c	FUNCTION_69
0x40055eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1894	ref-filter.c	FUNCTION_69
0x40055ef	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1894	ref-filter.c	FUNCTION_69
0x40055f3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1894	ref-filter.c	FUNCTION_69
0x40055f7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1895	ref-filter.c	FUNCTION_69
0x40055ff	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4005603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4005607	          0x4889d6	                            mov rsi, rdx	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x400560a	          0x4889c7	                            mov rdi, rax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x400560d	      0xe800000000	                          call 0x4005612	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4005612	            0x85c0	                           test eax, eax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4005614	            0x7806	                            js 0x400561c	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4005616	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1899	ref-filter.c	FUNCTION_69	IF_1
0x400561a	            0xeb7f	                           jmp 0x400569b	      1899	ref-filter.c	FUNCTION_69	IF_1
0x400561c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x4005620	          0x4889c7	                            mov rdi, rax	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x4005623	      0xe800000000	                          call 0x4005628	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x4005628	        0x488945f8	                mov qword [rbp - 8], rax	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x400562c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4005631	            0x7521	                           jne 0x4005654	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4005633	      0xbf00000000	                              mov edi, 0	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4005638	      0xe860aeffff	                               call sym.	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x400563d	          0x4889c2	                            mov rdx, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4005640	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4005644	          0x4889c6	                            mov rsi, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4005647	          0x4889d7	                            mov rdi, rdx	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x400564a	      0xb800000000	                              mov eax, 0	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x400564f	      0xe800000000	                          call 0x4005654	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4005654	        0x488b45f8	                mov rax, qword [rbp - 8]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4005658	           0xfb600	                   movzx eax, byte [rax]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x400565b	          0x83e00e	                            and eax, 0xe	      1903	ref-filter.c	FUNCTION_69	IF_3
0x400565e	            0x3c08	                               cmp al, 8	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4005660	            0x7510	                           jne 0x4005672	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4005662	        0x488b45f8	                mov rax, qword [rbp - 8]	      1904	ref-filter.c	FUNCTION_69	IF_3
0x4005666	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1904	ref-filter.c	FUNCTION_69	IF_3
0x400566a	        0x4883c004	                              add rax, 4	      1904	ref-filter.c	FUNCTION_69	IF_3
0x400566e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1904	ref-filter.c	FUNCTION_69	IF_3
0x4005672	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005677	            0x741d	                            je 0x4005696	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005679	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400567d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005681	          0x4889d6	                            mov rsi, rdx	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005684	          0x4889c7	                            mov rdi, rax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005687	      0xe800000000	                          call 0x400568c	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400568c	            0x85c0	                           test eax, eax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x400568e	            0x7806	                            js 0x4005696	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4005690	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1906	ref-filter.c	FUNCTION_69	IF_4
0x4005694	            0xeb05	                           jmp 0x400569b	      1906	ref-filter.c	FUNCTION_69	IF_4
0x4005696	      0xb800000000	                              mov eax, 0	      1907	ref-filter.c	FUNCTION_69
0x400569b	              0xc9	                                   leave	      1908	ref-filter.c	FUNCTION_69
0x400569c	              0xc3	                                     ret	      1908	ref-filter.c	FUNCTION_69
