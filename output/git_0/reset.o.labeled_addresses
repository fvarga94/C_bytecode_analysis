reset_index	FOR,1:ELSE,0:DO,0:SWITCH,1:functions,0:IF,7:WHILE,0:CALL,12	155
0x40001d3	              0x55	                                push rbp	        46	reset.c	FUNCTION_2
0x40001d4	          0x4889e5	                            mov rbp, rsp	        46	reset.c	FUNCTION_2
0x40001d7	              0x53	                                push rbx	        46	reset.c	FUNCTION_2
0x40001d8	    0x4881ecb80300	                          sub rsp, 0x3b8	        46	reset.c	FUNCTION_2
0x40001df	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	        46	reset.c	FUNCTION_2
0x40001e6	    0x89b544fcffff	            mov dword [rbp - 0x3bc], esi	        46	reset.c	FUNCTION_2
0x40001ec	    0x899540fcffff	            mov dword [rbp - 0x3c0], edx	        46	reset.c	FUNCTION_2
0x40001f2	    0x64488b042528	                mov rax, qword fs:[0x28]	        46	reset.c	FUNCTION_2
0x40001fb	        0x488945e8	             mov qword [rbp - 0x18], rax	        46	reset.c	FUNCTION_2
0x40001ff	            0x31c0	                            xor eax, eax	        46	reset.c	FUNCTION_2
0x4000201	    0xc78560fcffff	              mov dword [rbp - 0x3a0], 0	        47	reset.c	FUNCTION_2
0x400020b	    0xc78564fcffff	    mov dword [rbp - 0x39c], 0xffffffff 	        51	reset.c	FUNCTION_2
0x4000215	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	        53	reset.c	FUNCTION_2	CALL_1
0x400021c	      0xba00030000	                          mov edx, 0x300	        53	reset.c	FUNCTION_2	CALL_1
0x4000221	      0xbe00000000	                              mov esi, 0	        53	reset.c	FUNCTION_2	CALL_1
0x4000226	          0x4889c7	                            mov rdi, rax	        53	reset.c	FUNCTION_2	CALL_1
0x4000229	      0xe800000000	                          call 0x400022e	        53	reset.c	FUNCTION_2	CALL_1
0x400022e	    0xc785e0feffff	              mov dword [rbp - 0x120], 1	        54	reset.c	FUNCTION_2
0x4000238	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        55	reset.c	FUNCTION_2
0x4000243	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        56	reset.c	FUNCTION_2
0x400024e	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        57	reset.c	FUNCTION_2
0x4000259	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	        58	reset.c	FUNCTION_2
0x4000263	    0x83bd40fcffff	              cmp dword [rbp - 0x3c0], 0	        59	reset.c	FUNCTION_2	IF_1
0x400026a	            0x750a	                           jne 0x4000276	        59	reset.c	FUNCTION_2	IF_1
0x400026c	    0xc785f8fcffff	              mov dword [rbp - 0x308], 1	        60	reset.c	FUNCTION_2	IF_1
0x4000276	    0x8b8544fcffff	            mov eax, dword [rbp - 0x3bc]	        61	reset.c	FUNCTION_2	SWITCH_1
0x400027c	          0x83f802	                              cmp eax, 2	        61	reset.c	FUNCTION_2	SWITCH_1
0x400027f	            0x7416	                            je 0x4000297	        61	reset.c	FUNCTION_2	SWITCH_1
0x4000281	          0x83f802	                              cmp eax, 2	        61	reset.c	FUNCTION_2	SWITCH_1
0x4000284	            0x7c1b	                            jl 0x40002a1	        61	reset.c	FUNCTION_2	SWITCH_1
0x4000286	          0x83f804	                              cmp eax, 4	        61	reset.c	FUNCTION_2	SWITCH_1
0x4000289	            0x7f16	                            jg 0x40002a1	        61	reset.c	FUNCTION_2	SWITCH_1
0x400028b	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	        64	reset.c	FUNCTION_2	SWITCH_1
0x4000295	            0xeb14	                           jmp 0x40002ab	        65	reset.c	FUNCTION_2	SWITCH_1
0x4000297	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	        67	reset.c	FUNCTION_2	SWITCH_1
0x40002a1	    0xc785e0fcffff	              mov dword [rbp - 0x320], 1	        70	reset.c	FUNCTION_2	SWITCH_1
0x40002ab	      0xbf00000000	                              mov edi, 0	        73	reset.c	FUNCTION_2
0x40002b0	      0xe800000000	                          call 0x40002b5	        73	reset.c	FUNCTION_2
0x40002b5	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 4	        75	reset.c	FUNCTION_2	IF_2
0x40002bc	     0xf85a7000000	                           jne 0x4000369	        75	reset.c	FUNCTION_2	IF_2
0x40002c2	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002c9	          0x4889c6	                            mov rsi, rax	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002cc	      0xbf00000000	                              mov edi, 0	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002d1	      0xe800000000	                          call 0x40002d6	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002d6	            0x85c0	                           test eax, eax	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002d8	            0x7421	                            je 0x40002fb	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40002da	      0xbf00000000	                              mov edi, 0	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002df	      0xe801feffff	                               call sym.	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002e4	          0x4889c7	                            mov rdi, rax	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002e7	      0xb800000000	                              mov eax, 0	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002ec	      0xe800000000	                          call 0x40002f1	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002f1	      0xe84afdffff	                    call sym.const_error	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002f6	      0xe9a4010000	                           jmp 0x400049f	        78	reset.c	FUNCTION_2	IF_2	CALL_3
0x40002fb	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000301	          0x4863d0	                         movsxd rdx, eax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000304	          0x4889d0	                            mov rax, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000307	        0x48c1e002	                              shl rax, 2	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x400030b	          0x4801d0	                            add rax, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x400030e	        0x48c1e003	                              shl rax, 3	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000312	          0x4889c2	                            mov rdx, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000315	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x400031c	          0x4801c2	                            add rdx, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x400031f	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000326	          0x4889c6	                            mov rsi, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000329	          0x4889d7	                            mov rdi, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x400032c	      0xe800000000	                          call 0x4000331	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000331	          0x4885c0	                           test rax, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000334	            0x7521	                           jne 0x4000357	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_4
0x4000336	      0xbf00000000	                              mov edi, 0	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x400033b	      0xe8a5fdffff	                               call sym.	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x4000340	          0x4889c7	                            mov rdi, rax	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x4000343	      0xb800000000	                              mov eax, 0	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x4000348	      0xe800000000	                          call 0x400034d	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x400034d	      0xe8eefcffff	                    call sym.const_error	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x4000352	      0xe948010000	                           jmp 0x400049f	        80	reset.c	FUNCTION_2	IF_2	CALL_5
0x4000357	    0x838560fcffff	              add dword [rbp - 0x3a0], 1	        81	reset.c	FUNCTION_2	IF_2
0x400035e	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        82	reset.c	FUNCTION_2	IF_2
0x4000369	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400036f	          0x4863d0	                         movsxd rdx, eax	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000372	          0x4889d0	                            mov rax, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000375	        0x48c1e002	                              shl rax, 2	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000379	          0x4801d0	                            add rax, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400037c	        0x48c1e003	                              shl rax, 3	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000380	          0x4889c2	                            mov rdx, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000383	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400038a	          0x4801c2	                            add rdx, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400038d	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000394	          0x4889c6	                            mov rsi, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x4000397	          0x4889d7	                            mov rdi, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400039a	      0xe800000000	                          call 0x400039f	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x400039f	          0x4885c0	                           test rax, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x40003a2	            0x7533	                           jne 0x40003d7	        85	reset.c	FUNCTION_2	IF_5	CALL_6
0x40003a4	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003ab	          0x4889c7	                            mov rdi, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003ae	      0xe800000000	                          call 0x40003b3	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003b3	          0x4889c3	                            mov rbx, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003b6	      0xbf00000000	                              mov edi, 0	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003bb	      0xe825fdffff	                               call sym.	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003c0	          0x4889de	                            mov rsi, rbx	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003c3	          0x4889c7	                            mov rdi, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003c6	      0xb800000000	                              mov eax, 0	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003cb	      0xe800000000	                          call 0x40003d0	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003d0	      0xe86bfcffff	                    call sym.const_error	        86	reset.c	FUNCTION_2	IF_5	CALL_8
0x40003d5	            0xeb72	                           jmp 0x4000449	        87	reset.c	FUNCTION_2	IF_5
0x40003d7	    0x838560fcffff	              add dword [rbp - 0x3a0], 1	        89	reset.c	FUNCTION_2
0x40003de	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003e4	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003eb	    0x488d8d90fcff	                  lea rcx, [rbp - 0x370]	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003f2	          0x4889ce	                            mov rsi, rcx	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003f5	            0x89c7	                            mov edi, eax	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003f7	      0xe800000000	                          call 0x40003fc	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003fc	            0x85c0	                           test eax, eax	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x40003fe	            0x7548	                           jne 0x4000448	        91	reset.c	FUNCTION_2	IF_6	CALL_9
0x4000400	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 0	        94	reset.c	FUNCTION_2	IF_7
0x4000407	            0x7409	                            je 0x4000412	        94	reset.c	FUNCTION_2	IF_7
0x4000409	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 2	        94	reset.c	FUNCTION_2	IF_7
0x4000410	            0x752a	                           jne 0x400043c	        94	reset.c	FUNCTION_2	IF_7
0x4000412	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        95	reset.c	FUNCTION_2	IF_7	CALL_10
0x4000419	          0x4889c7	                            mov rdi, rax	        95	reset.c	FUNCTION_2	IF_7	CALL_10
0x400041c	      0xe800000000	                          call 0x4000421	        95	reset.c	FUNCTION_2	IF_7	CALL_10
0x4000421	    0x48898568fcff	            mov qword [rbp - 0x398], rax	        95	reset.c	FUNCTION_2	IF_7	CALL_10
0x4000428	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	        96	reset.c	FUNCTION_2	IF_7	CALL_11
0x400042f	          0x4889c6	                            mov rsi, rax	        96	reset.c	FUNCTION_2	IF_7	CALL_11
0x4000432	      0xbf00000000	                              mov edi, 0	        96	reset.c	FUNCTION_2	IF_7	CALL_11
0x4000437	      0xe800000000	                          call 0x400043c	        96	reset.c	FUNCTION_2	IF_7	CALL_11
0x400043c	    0xc78564fcffff	              mov dword [rbp - 0x39c], 0	        99	reset.c	FUNCTION_2
0x4000446	            0xeb01	                           jmp 0x4000449	        99	reset.c	FUNCTION_2
0x4000448	              0x90	                                     nop	        92	reset.c	FUNCTION_2	IF_6
0x4000449	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	       102	reset.c	FUNCTION_2	FOR_1
0x4000453	            0xeb36	                           jmp 0x400048b	       102	reset.c	FUNCTION_2	FOR_1
0x4000455	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       103	reset.c	FUNCTION_2	CALL_12
0x400045b	          0x4863d0	                         movsxd rdx, eax	       103	reset.c	FUNCTION_2	CALL_12
0x400045e	          0x4889d0	                            mov rax, rdx	       103	reset.c	FUNCTION_2	CALL_12
0x4000461	        0x48c1e002	                              shl rax, 2	       103	reset.c	FUNCTION_2	CALL_12
0x4000465	          0x4801d0	                            add rax, rdx	       103	reset.c	FUNCTION_2	CALL_12
0x4000468	        0x48c1e003	                              shl rax, 3	       103	reset.c	FUNCTION_2	CALL_12
0x400046c	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       103	reset.c	FUNCTION_2	CALL_12
0x4000470	          0x4801c8	                            add rax, rcx	       103	reset.c	FUNCTION_2	CALL_12
0x4000473	    0x482d60030000	                          sub rax, 0x360	       103	reset.c	FUNCTION_2	CALL_12
0x4000479	          0x488b00	                    mov rax, qword [rax]	       103	reset.c	FUNCTION_2	CALL_12
0x400047c	          0x4889c7	                            mov rdi, rax	       103	reset.c	FUNCTION_2	CALL_12
0x400047f	      0xe800000000	                          call 0x4000484	       103	reset.c	FUNCTION_2	CALL_12
0x4000484	    0x83855cfcffff	              add dword [rbp - 0x3a4], 1	       102	reset.c	FUNCTION_2	FOR_1
0x400048b	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       102	reset.c	FUNCTION_2	FOR_1
0x4000491	    0x3b8560fcffff	            cmp eax, dword [rbp - 0x3a0]	       102	reset.c	FUNCTION_2	FOR_1
0x4000497	            0x7cbc	                            jl 0x4000455	       102	reset.c	FUNCTION_2	FOR_1
0x4000499	    0x8b8564fcffff	            mov eax, dword [rbp - 0x39c]	       104	reset.c	FUNCTION_2
0x400049f	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       105	reset.c	FUNCTION_2
0x40004a3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       105	reset.c	FUNCTION_2
0x40004ac	            0x7405	                            je 0x40004b3	       105	reset.c	FUNCTION_2
0x40004ae	      0xe800000000	                          call 0x40004b3	       105	reset.c	FUNCTION_2
0x40004b3	    0x4881c4b80300	                          add rsp, 0x3b8	       105	reset.c	FUNCTION_2
0x40004ba	              0x5b	                                 pop rbx	       105	reset.c	FUNCTION_2
0x40004bb	              0x5d	                                 pop rbp	       105	reset.c	FUNCTION_2
0x40004bc	              0xc3	                                     ret	       105	reset.c	FUNCTION_2
die_if_unmerged_cache	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,1:WHILE,0:CALL,4	29
0x4000875	              0x55	                                push rbp	       187	reset.c	FUNCTION_7
0x4000876	          0x4889e5	                            mov rbp, rsp	       187	reset.c	FUNCTION_7
0x4000879	              0x53	                                push rbx	       187	reset.c	FUNCTION_7
0x400087a	        0x4883ec18	                           sub rsp, 0x18	       187	reset.c	FUNCTION_7
0x400087e	          0x897dec	             mov dword [rbp - 0x14], edi	       187	reset.c	FUNCTION_7
0x4000881	      0xe82df9ffff	                       call sym.is_merge	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x4000886	            0x85c0	                           test eax, eax	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x4000888	            0x750e	                           jne 0x4000898	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x400088a	      0xbf00000000	                              mov edi, 0	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x400088f	      0xe800000000	                          call 0x4000894	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x4000894	            0x85c0	                           test eax, eax	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x4000896	            0x7432	                            je 0x40008ca	       188	reset.c	FUNCTION_7	IF_1	CALL_1
0x4000898	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x400089b	            0x4898	                                    cdqe	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x400089d	    0x488b04c50000	                  mov rax, qword [rax*8]	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008a5	          0x4889c7	                            mov rdi, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008a8	      0xe838f8ffff	                               call sym.	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008ad	          0x4889c3	                            mov rbx, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008b0	      0xbf00000000	                              mov edi, 0	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008b5	      0xe82bf8ffff	                               call sym.	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008ba	          0x4889de	                            mov rsi, rbx	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008bd	          0x4889c7	                            mov rdi, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008c0	      0xb800000000	                              mov eax, 0	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008c5	      0xe800000000	                          call 0x40008ca	       189	reset.c	FUNCTION_7	IF_1	CALL_3
0x40008ca	              0x90	                                     nop	       192	reset.c	FUNCTION_7
0x40008cb	        0x4883c418	                           add rsp, 0x18	       192	reset.c	FUNCTION_7
0x40008cf	              0x5b	                                 pop rbx	       192	reset.c	FUNCTION_7
0x40008d0	              0x5d	                                 pop rbp	       192	reset.c	FUNCTION_7
0x40008d1	              0xc3	                                     ret	       192	reset.c	FUNCTION_7
parse_args	FOR,0:ELSE,3:DO,0:SWITCH,0:functions,0:IF,5:WHILE,0:CALL,9	121
0x40008d2	              0x55	                                push rbp	       198	reset.c	FUNCTION_8
0x40008d3	          0x4889e5	                            mov rbp, rsp	       198	reset.c	FUNCTION_8
0x40008d6	        0x4883ec60	                           sub rsp, 0x60	       198	reset.c	FUNCTION_8
0x40008da	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       198	reset.c	FUNCTION_8
0x40008de	        0x488975c0	             mov qword [rbp - 0x40], rsi	       198	reset.c	FUNCTION_8
0x40008e2	        0x488955b8	             mov qword [rbp - 0x48], rdx	       198	reset.c	FUNCTION_8
0x40008e6	          0x894db4	             mov dword [rbp - 0x4c], ecx	       198	reset.c	FUNCTION_8
0x40008e9	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       198	reset.c	FUNCTION_8
0x40008ed	    0x64488b042528	                mov rax, qword fs:[0x28]	       198	reset.c	FUNCTION_8
0x40008f6	        0x488945f8	                mov qword [rbp - 8], rax	       198	reset.c	FUNCTION_8
0x40008fa	            0x31c0	                            xor eax, eax	       198	reset.c	FUNCTION_8
0x40008fc	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       199	reset.c	FUNCTION_8
0x4000904	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       213	reset.c	FUNCTION_8	IF_1
0x4000908	          0x488b00	                    mov rax, qword [rax]	       213	reset.c	FUNCTION_8	IF_1
0x400090b	          0x4885c0	                           test rax, rax	       213	reset.c	FUNCTION_8	IF_1
0x400090e	     0xf84fd000000	                            je 0x4000a11	       213	reset.c	FUNCTION_8	IF_1
0x4000914	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x4000918	          0x488b00	                    mov rax, qword [rax]	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x400091b	      0xbe00000000	                              mov esi, 0	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x4000920	          0x4889c7	                            mov rdi, rax	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x4000923	      0xe800000000	                          call 0x4000928	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x4000928	            0x85c0	                           test eax, eax	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x400092a	            0x750a	                           jne 0x4000936	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x400092c	      0x488345c008	               add qword [rbp - 0x40], 8	       215	reset.c	FUNCTION_8	IF_1	IF_2
0x4000931	      0xe9db000000	                           jmp 0x4000a11	       215	reset.c	FUNCTION_8	IF_1	IF_2
0x4000936	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x400093a	        0x4883c008	                              add rax, 8	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x400093e	          0x488b00	                    mov rax, qword [rax]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000941	          0x4885c0	                           test rax, rax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000944	            0x7431	                            je 0x4000977	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000946	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x400094a	        0x4883c008	                              add rax, 8	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x400094e	          0x488b00	                    mov rax, qword [rax]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000951	      0xbe00000000	                              mov esi, 0	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000956	          0x4889c7	                            mov rdi, rax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000959	      0xe800000000	                          call 0x400095e	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x400095e	            0x85c0	                           test eax, eax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000960	            0x7515	                           jne 0x4000977	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x4000962	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x4000966	          0x488b00	                    mov rax, qword [rax]	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x4000969	        0x488945d8	             mov qword [rbp - 0x28], rax	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x400096d	      0x488345c010	            add qword [rbp - 0x40], 0x10	       218	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x4000972	      0xe99a000000	                           jmp 0x4000a11	       218	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x4000977	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400097b	        0x4883c008	                              add rax, 8	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400097f	          0x488b00	                    mov rax, qword [rax]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000982	          0x4885c0	                           test rax, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000985	            0x751a	                           jne 0x40009a1	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000987	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400098b	          0x488b00	                    mov rax, qword [rax]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400098e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000992	          0x4889d6	                            mov rsi, rdx	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000995	          0x4889c7	                            mov rdi, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x4000998	      0xe800000000	                          call 0x400099d	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400099d	            0x85c0	                           test eax, eax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x400099f	            0x742a	                            je 0x40009cb	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x40009a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009a5	        0x4883c008	                              add rax, 8	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009a9	          0x488b00	                    mov rax, qword [rax]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009ac	          0x4885c0	                           test rax, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x40009af	            0x7445	                            je 0x40009f6	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x40009b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009b5	          0x488b00	                    mov rax, qword [rax]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009b8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009bc	          0x4889d6	                            mov rsi, rdx	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009bf	          0x4889c7	                            mov rdi, rax	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009c2	      0xe800000000	                          call 0x40009c7	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009c7	            0x85c0	                           test eax, eax	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009c9	            0x752b	                           jne 0x40009f6	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x40009cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009cf	          0x488b10	                    mov rdx, qword [rax]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009d6	          0x4889d6	                            mov rsi, rdx	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009d9	          0x4889c7	                            mov rdi, rax	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009dc	      0xe800000000	                          call 0x40009e1	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x40009e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009e5	        0x488d5008	                      lea rdx, [rax + 8]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009e9	        0x488955c0	             mov qword [rbp - 0x40], rdx	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009ed	          0x488b00	                    mov rax, qword [rax]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009f0	        0x488945d8	             mov qword [rbp - 0x28], rax	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009f4	            0xeb1b	                           jmp 0x4000a11	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x40009f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x40009fa	          0x488b08	                    mov rcx, qword [rax]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x40009fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x4000a01	      0xba01000000	                              mov edx, 1	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x4000a06	          0x4889ce	                            mov rsi, rcx	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x4000a09	          0x4889c7	                            mov rdi, rax	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x4000a0c	      0xe800000000	                          call 0x4000a11	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x4000a11	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       238	reset.c	FUNCTION_8
0x4000a15	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       238	reset.c	FUNCTION_8
0x4000a19	          0x488910	                    mov qword [rax], rdx	       238	reset.c	FUNCTION_8
0x4000a1c	      0xbf00000000	                              mov edi, 0	       240	reset.c	FUNCTION_8	IF_5
0x4000a21	      0xe800000000	                          call 0x4000a26	       240	reset.c	FUNCTION_8	IF_5
0x4000a26	            0x85c0	                           test eax, eax	       240	reset.c	FUNCTION_8	IF_5
0x4000a28	            0x7917	                           jns 0x4000a41	       240	reset.c	FUNCTION_8	IF_5
0x4000a2a	      0xbf00000000	                              mov edi, 0	       241	reset.c	FUNCTION_8	CALL_8
0x4000a2f	      0xe8b1f6ffff	                               call sym.	       241	reset.c	FUNCTION_8	CALL_8
0x4000a34	          0x4889c7	                            mov rdi, rax	       241	reset.c	FUNCTION_8	CALL_8
0x4000a37	      0xb800000000	                              mov eax, 0	       241	reset.c	FUNCTION_8	CALL_8
0x4000a3c	      0xe800000000	                          call 0x4000a41	       241	reset.c	FUNCTION_8	CALL_8
0x4000a41	        0x837db400	               cmp dword [rbp - 0x4c], 0	       243	reset.c	FUNCTION_8	CALL_9
0x4000a45	            0x7407	                            je 0x4000a4e	       243	reset.c	FUNCTION_8	CALL_9
0x4000a47	      0xbe12000000	                           mov esi, 0x12	       243	reset.c	FUNCTION_8	CALL_9
0x4000a4c	            0xeb05	                           jmp 0x4000a53	       243	reset.c	FUNCTION_8	CALL_9
0x4000a4e	      0xbe02000000	                              mov esi, 2	       243	reset.c	FUNCTION_8	CALL_9
0x4000a53	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       243	reset.c	FUNCTION_8	CALL_9
0x4000a57	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       243	reset.c	FUNCTION_8	CALL_9
0x4000a5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       243	reset.c	FUNCTION_8	CALL_9
0x4000a5f	          0x4989c8	                             mov r8, rcx	       243	reset.c	FUNCTION_8	CALL_9
0x4000a62	          0x4889d1	                            mov rcx, rdx	       243	reset.c	FUNCTION_8	CALL_9
0x4000a65	            0x89f2	                            mov edx, esi	       243	reset.c	FUNCTION_8	CALL_9
0x4000a67	      0xbe00000000	                              mov esi, 0	       243	reset.c	FUNCTION_8	CALL_9
0x4000a6c	          0x4889c7	                            mov rdi, rax	       243	reset.c	FUNCTION_8	CALL_9
0x4000a6f	      0xe800000000	                          call 0x4000a74	       243	reset.c	FUNCTION_8	CALL_9
0x4000a74	              0x90	                                     nop	       247	reset.c	FUNCTION_8
0x4000a75	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	reset.c	FUNCTION_8
0x4000a79	    0x644833042528	                xor rax, qword fs:[0x28]	       247	reset.c	FUNCTION_8
0x4000a82	            0x7405	                            je 0x4000a89	       247	reset.c	FUNCTION_8
0x4000a84	      0xe800000000	                          call 0x4000a89	       247	reset.c	FUNCTION_8
0x4000a89	              0xc9	                                   leave	       247	reset.c	FUNCTION_8
0x4000a8a	              0xc3	                                     ret	       247	reset.c	FUNCTION_8
hashcmp	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1	13
0x4000111	              0x55	                                push rbp	       974	cache.h	FUNCTION_19
0x4000112	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_19
0x4000115	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_19
0x4000119	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_19
0x400011d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_19
0x4000121	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_19	CALL_1
0x4000125	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_19	CALL_1
0x4000129	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_19	CALL_1
0x400012e	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_19	CALL_1
0x4000131	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_19	CALL_1
0x4000134	      0xe800000000	                          call 0x4000139	       975	cache.h	FUNCTION_19	CALL_1
0x4000139	              0xc9	                                   leave	       976	cache.h	FUNCTION_19
0x400013a	              0xc3	                                     ret	       976	cache.h	FUNCTION_19
oidcpy	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1	13
0x400018d	              0x55	                                push rbp	       999	cache.h	FUNCTION_24
0x400018e	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_24
0x4000191	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_24
0x4000195	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_24
0x4000199	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_24
0x400019d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_24	CALL_1
0x40001a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_24	CALL_1
0x40001a5	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_24	CALL_1
0x40001a8	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_24	CALL_1
0x40001ab	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_24	CALL_1
0x40001b0	              0x90	                                     nop	      1001	cache.h	FUNCTION_24
0x40001b1	              0xc9	                                   leave	      1001	cache.h	FUNCTION_24
0x40001b2	              0xc3	                                     ret	      1001	cache.h	FUNCTION_24
_	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,1:WHILE,0:CALL,0	15
0x40000e5	              0x55	                                push rbp	        51	gettext.h	FUNCTION_79
0x40000e6	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_79
0x40000e9	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_79
0x40000ed	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_79
0x40000f1	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_79	IF_1
0x40000f5	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_79	IF_1
0x40000f8	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_79	IF_1
0x40000fa	            0x7507	                           jne 0x4000103	        52	gettext.h	FUNCTION_79	IF_1
0x40000fc	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_79	IF_1
0x4000101	            0xeb0c	                           jmp 0x400010f	        53	gettext.h	FUNCTION_79	IF_1
0x4000103	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_79
0x4000107	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_79
0x400010a	      0xe800000000	                          call 0x400010f	        54	gettext.h	FUNCTION_79
0x400010f	              0xc9	                                   leave	        55	gettext.h	FUNCTION_79
0x4000110	              0xc3	                                     ret	        55	gettext.h	FUNCTION_79
git_reset_config	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,1:WHILE,0:CALL,3	27
0x4000bdc	              0x55	                                push rbp	       273	reset.c	FUNCTION_10
0x4000bdd	          0x4889e5	                            mov rbp, rsp	       273	reset.c	FUNCTION_10
0x4000be0	        0x4883ec20	                           sub rsp, 0x20	       273	reset.c	FUNCTION_10
0x4000be4	        0x48897df8	                mov qword [rbp - 8], rdi	       273	reset.c	FUNCTION_10
0x4000be8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       273	reset.c	FUNCTION_10
0x4000bec	        0x488955e8	             mov qword [rbp - 0x18], rdx	       273	reset.c	FUNCTION_10
0x4000bf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000bf4	      0xbe00000000	                              mov esi, 0	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000bf9	          0x4889c7	                            mov rdi, rax	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000bfc	      0xe800000000	                          call 0x4000c01	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000c01	            0x85c0	                           test eax, eax	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000c03	            0x7519	                           jne 0x4000c1e	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0x4000c05	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       275	reset.c	FUNCTION_10	CALL_2
0x4000c09	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       275	reset.c	FUNCTION_10	CALL_2
0x4000c0d	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	reset.c	FUNCTION_10	CALL_2
0x4000c11	          0x4889ce	                            mov rsi, rcx	       275	reset.c	FUNCTION_10	CALL_2
0x4000c14	          0x4889c7	                            mov rdi, rax	       275	reset.c	FUNCTION_10	CALL_2
0x4000c17	      0xe800000000	                          call 0x4000c1c	       275	reset.c	FUNCTION_10	CALL_2
0x4000c1c	            0xeb17	                           jmp 0x4000c35	       275	reset.c	FUNCTION_10	CALL_2
0x4000c1e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       277	reset.c	FUNCTION_10	CALL_3
0x4000c22	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       277	reset.c	FUNCTION_10	CALL_3
0x4000c26	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reset.c	FUNCTION_10	CALL_3
0x4000c2a	          0x4889ce	                            mov rsi, rcx	       277	reset.c	FUNCTION_10	CALL_3
0x4000c2d	          0x4889c7	                            mov rdi, rax	       277	reset.c	FUNCTION_10	CALL_3
0x4000c30	      0xe800000000	                          call 0x4000c35	       277	reset.c	FUNCTION_10	CALL_3
0x4000c35	              0xc9	                                   leave	       278	reset.c	FUNCTION_10
0x4000c36	              0xc3	                                     ret	       278	reset.c	FUNCTION_10
is_merge	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,2	11
0x40001b3	              0x55	                                push rbp	        41	reset.c	FUNCTION_1
0x40001b4	          0x4889e5	                            mov rbp, rsp	        41	reset.c	FUNCTION_1
0x40001b7	      0xe800000000	                          call 0x40001bc	        42	reset.c	FUNCTION_1	CALL_2
0x40001bc	      0xbe00000000	                              mov esi, 0	        42	reset.c	FUNCTION_1	CALL_2
0x40001c1	          0x4889c7	                            mov rdi, rax	        42	reset.c	FUNCTION_1	CALL_2
0x40001c4	      0xe800000000	                          call 0x40001c9	        42	reset.c	FUNCTION_1	CALL_2
0x40001c9	            0x85c0	                           test eax, eax	        42	reset.c	FUNCTION_1	CALL_2
0x40001cb	           0xf94c0	                                 sete al	        42	reset.c	FUNCTION_1	CALL_2
0x40001ce	           0xfb6c0	                           movzx eax, al	        42	reset.c	FUNCTION_1	CALL_2
0x40001d1	              0x5d	                                 pop rbp	        43	reset.c	FUNCTION_1
0x40001d2	              0xc3	                                     ret	        43	reset.c	FUNCTION_1
is_null_oid	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1	13
0x400013b	              0x55	                                push rbp	       989	cache.h	FUNCTION_22
0x400013c	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_22
0x400013f	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_22
0x4000143	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_22
0x4000147	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_22	CALL_1
0x400014b	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_22	CALL_1
0x4000150	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_22	CALL_1
0x4000153	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_22	CALL_1
0x4000158	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_22	CALL_1
0x400015a	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_22	CALL_1
0x400015d	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_22	CALL_1
0x4000160	              0xc9	                                   leave	       991	cache.h	FUNCTION_22
0x4000161	              0xc3	                                     ret	       991	cache.h	FUNCTION_22
print_new_head_line	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,1:WHILE,0:CALL,7	51
0x40004bd	              0x55	                                push rbp	       108	reset.c	FUNCTION_3
0x40004be	          0x4889e5	                            mov rbp, rsp	       108	reset.c	FUNCTION_3
0x40004c1	              0x53	                                push rbx	       108	reset.c	FUNCTION_3
0x40004c2	        0x4883ec38	                           sub rsp, 0x38	       108	reset.c	FUNCTION_3
0x40004c6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       108	reset.c	FUNCTION_3
0x40004ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       108	reset.c	FUNCTION_3
0x40004d3	        0x488945e8	             mov qword [rbp - 0x18], rax	       108	reset.c	FUNCTION_3
0x40004d7	            0x31c0	                            xor eax, eax	       108	reset.c	FUNCTION_3
0x40004d9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       109	reset.c	FUNCTION_3
0x40004e1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       109	reset.c	FUNCTION_3
0x40004e9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       109	reset.c	FUNCTION_3
0x40004f1	    0x8b0500000000	            mov eax, dword [0x040004f7] 	       111	reset.c	FUNCTION_3	CALL_2
0x40004f7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       112	reset.c	FUNCTION_3	CALL_3
0x40004fb	        0x4883c204	                              add rdx, 4	       112	reset.c	FUNCTION_3	CALL_3
0x40004ff	            0x89c6	                            mov esi, eax	       111	reset.c	FUNCTION_3	CALL_2
0x4000501	          0x4889d7	                            mov rdi, rdx	       111	reset.c	FUNCTION_3	CALL_2
0x4000504	      0xe800000000	                          call 0x4000509	       111	reset.c	FUNCTION_3	CALL_2
0x4000509	          0x4889c3	                            mov rbx, rax	       111	reset.c	FUNCTION_3	CALL_2
0x400050c	      0xbf00000000	                              mov edi, 0	       111	reset.c	FUNCTION_3	CALL_2
0x4000511	      0xe8cffbffff	                               call sym.	       111	reset.c	FUNCTION_3	CALL_2
0x4000516	          0x4889de	                            mov rsi, rbx	       111	reset.c	FUNCTION_3	CALL_2
0x4000519	          0x4889c7	                            mov rdi, rax	       111	reset.c	FUNCTION_3	CALL_2
0x400051c	      0xb800000000	                              mov eax, 0	       111	reset.c	FUNCTION_3	CALL_2
0x4000521	      0xe800000000	                          call 0x4000526	       111	reset.c	FUNCTION_3	CALL_2
0x4000526	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       114	reset.c	FUNCTION_3	CALL_4
0x400052a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       114	reset.c	FUNCTION_3	CALL_4
0x400052e	          0x4889c6	                            mov rsi, rax	       114	reset.c	FUNCTION_3	CALL_4
0x4000531	      0xbf05000000	                              mov edi, 5	       114	reset.c	FUNCTION_3	CALL_4
0x4000536	      0xe800000000	                          call 0x400053b	       114	reset.c	FUNCTION_3	CALL_4
0x400053b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	reset.c	FUNCTION_3	IF_1
0x400053f	          0x4885c0	                           test rax, rax	       115	reset.c	FUNCTION_3	IF_1
0x4000542	            0x7416	                            je 0x400055a	       115	reset.c	FUNCTION_3	IF_1
0x4000544	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	reset.c	FUNCTION_3	CALL_5
0x4000548	          0x4889c6	                            mov rsi, rax	       116	reset.c	FUNCTION_3	CALL_5
0x400054b	      0xbf00000000	                              mov edi, 0	       116	reset.c	FUNCTION_3	CALL_5
0x4000550	      0xb800000000	                              mov eax, 0	       116	reset.c	FUNCTION_3	CALL_5
0x4000555	      0xe800000000	                          call 0x400055a	       116	reset.c	FUNCTION_3	CALL_5
0x400055a	      0xbf0a000000	                            mov edi, 0xa	       117	reset.c	FUNCTION_3	CALL_6
0x400055f	      0xe800000000	                          call 0x4000564	       117	reset.c	FUNCTION_3	CALL_6
0x4000564	        0x488d45d0	                   lea rax, [rbp - 0x30]	       118	reset.c	FUNCTION_3	CALL_7
0x4000568	          0x4889c7	                            mov rdi, rax	       118	reset.c	FUNCTION_3	CALL_7
0x400056b	      0xe800000000	                          call 0x4000570	       118	reset.c	FUNCTION_3	CALL_7
0x4000570	              0x90	                                     nop	       119	reset.c	FUNCTION_3
0x4000571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	reset.c	FUNCTION_3
0x4000575	    0x644833042528	                xor rax, qword fs:[0x28]	       119	reset.c	FUNCTION_3
0x400057e	            0x7405	                            je 0x4000585	       119	reset.c	FUNCTION_3
0x4000580	      0xe800000000	                          call 0x4000585	       119	reset.c	FUNCTION_3
0x4000585	        0x4883c438	                           add rsp, 0x38	       119	reset.c	FUNCTION_3
0x4000589	              0x5b	                                 pop rbx	       119	reset.c	FUNCTION_3
0x400058a	              0x5d	                                 pop rbp	       119	reset.c	FUNCTION_3
0x400058b	              0xc3	                                     ret	       119	reset.c	FUNCTION_3
update_index_from_diff	FOR,1:ELSE,0:DO,0:SWITCH,0:functions,0:IF,3:WHILE,0:CALL,5	91
0x400058c	              0x55	                                push rbp	       123	reset.c	FUNCTION_4
0x400058d	          0x4889e5	                            mov rbp, rsp	       123	reset.c	FUNCTION_4
0x4000590	              0x53	                                push rbx	       123	reset.c	FUNCTION_4
0x4000591	        0x4883ec48	                           sub rsp, 0x48	       123	reset.c	FUNCTION_4
0x4000595	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       123	reset.c	FUNCTION_4
0x4000599	        0x488975c0	             mov qword [rbp - 0x40], rsi	       123	reset.c	FUNCTION_4
0x400059d	        0x488955b8	             mov qword [rbp - 0x48], rdx	       123	reset.c	FUNCTION_4
0x40005a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       125	reset.c	FUNCTION_4
0x40005a5	            0x8b00	                    mov eax, dword [rax]	       125	reset.c	FUNCTION_4
0x40005a7	          0x8945d8	             mov dword [rbp - 0x28], eax	       125	reset.c	FUNCTION_4
0x40005aa	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       127	reset.c	FUNCTION_4	FOR_1
0x40005b1	      0xe907010000	                           jmp 0x40006bd	       127	reset.c	FUNCTION_4	FOR_1
0x40005b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       128	reset.c	FUNCTION_4	FOR_1
0x40005ba	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x40005bd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       128	reset.c	FUNCTION_4	FOR_1
0x40005c0	          0x4863d2	                         movsxd rdx, edx	       128	reset.c	FUNCTION_4	FOR_1
0x40005c3	        0x48c1e203	                              shl rdx, 3	       128	reset.c	FUNCTION_4	FOR_1
0x40005c7	          0x4801d0	                            add rax, rdx	       128	reset.c	FUNCTION_4	FOR_1
0x40005ca	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x40005cd	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x40005d0	        0x488945e0	             mov qword [rbp - 0x20], rax	       128	reset.c	FUNCTION_4	FOR_1
0x40005d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005d8	         0xfb74040	           movzx eax, word [rax + 0x40] 	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005dc	          0x6685c0	                             test ax, ax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005df	            0x7410	                            je 0x40005f1	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005e5	          0x4889c7	                            mov rdi, rax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005e8	      0xe84efbffff	                    call sym.is_null_oid	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005ed	            0x85c0	                           test eax, eax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005ef	            0x7407	                            je 0x40005f8	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005f1	      0xb801000000	                              mov eax, 1	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005f6	            0xeb05	                           jmp 0x40005fd	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005f8	      0xb800000000	                              mov eax, 0	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x40005fd	          0x8945dc	             mov dword [rbp - 0x24], eax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x4000600	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000604	            0x7420	                            je 0x4000626	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000606	        0x837dd800	               cmp dword [rbp - 0x28], 0	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x400060a	            0x751a	                           jne 0x4000626	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x400060c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       133	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000610	        0x488b4018	            mov rax, qword [rax + 0x18] 	       133	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000614	          0x4889c6	                            mov rsi, rax	       133	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000617	      0xbf00000000	                              mov edi, 0	       133	reset.c	FUNCTION_4	FOR_1	IF_1
0x400061c	      0xe800000000	                          call 0x4000621	       133	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000621	      0xe993000000	                           jmp 0x40006b9	       134	reset.c	FUNCTION_4	FOR_1	IF_1
0x4000626	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400062a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400062e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x4000632	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x4000636	         0xfb74040	           movzx eax, word [rax + 0x40] 	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400063a	           0xfb7c0	                           movzx eax, ax	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400063d	    0x41b800000000	                              mov r8d, 0	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x4000643	      0xb900000000	                              mov ecx, 0	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x4000648	            0x89c7	                            mov edi, eax	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400064a	      0xe800000000	                          call 0x400064f	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x400064f	        0x488945e8	             mov qword [rbp - 0x18], rax	       137	reset.c	FUNCTION_4	FOR_1	CALL_2
0x4000653	      0x48837de800	               cmp qword [rbp - 0x18], 0	       139	reset.c	FUNCTION_4	FOR_1	IF_2
0x4000658	            0x7522	                           jne 0x400067c	       139	reset.c	FUNCTION_4	FOR_1	IF_2
0x400065a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x400065e	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x4000662	      0xbf00000000	                              mov edi, 0	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x4000667	      0xe879faffff	                               call sym.	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x400066c	          0x4889de	                            mov rsi, rbx	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x400066f	          0x4889c7	                            mov rdi, rax	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x4000672	      0xb800000000	                              mov eax, 0	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x4000677	      0xe800000000	                          call 0x400067c	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_4
0x400067c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       142	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000680	            0x7421	                            je 0x40006a3	       142	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000682	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000686	          0x8b4038	            mov eax, dword [rax + 0x38] 	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000689	       0xd00000020	                      or eax, 0x20000000	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x400068e	            0x89c2	                            mov edx, eax	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000690	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000694	          0x895038	             mov dword [rax + 0x38], edx	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x4000697	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_5
0x400069b	          0x4889c7	                            mov rdi, rax	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_5
0x400069e	      0xe800000000	                          call 0x40006a3	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_5
0x40006a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	reset.c	FUNCTION_4	FOR_1
0x40006a7	      0xba03000000	                              mov edx, 3	       146	reset.c	FUNCTION_4	FOR_1
0x40006ac	          0x4889c6	                            mov rsi, rax	       146	reset.c	FUNCTION_4	FOR_1
0x40006af	      0xbf00000000	                              mov edi, 0	       146	reset.c	FUNCTION_4	FOR_1
0x40006b4	      0xe800000000	                          call 0x40006b9	       146	reset.c	FUNCTION_4	FOR_1
0x40006b9	        0x8345d401	               add dword [rbp - 0x2c], 1	       127	reset.c	FUNCTION_4	FOR_1
0x40006bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	reset.c	FUNCTION_4	FOR_1
0x40006c1	          0x8b400c	              mov eax, dword [rax + 0xc]	       127	reset.c	FUNCTION_4	FOR_1
0x40006c4	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       127	reset.c	FUNCTION_4	FOR_1
0x40006c7	     0xf8fe9feffff	                            jg 0x40005b6	       127	reset.c	FUNCTION_4	FOR_1
0x40006cd	              0x90	                                     nop	       148	reset.c	FUNCTION_4
0x40006ce	        0x4883c448	                           add rsp, 0x48	       148	reset.c	FUNCTION_4
0x40006d2	              0x5b	                                 pop rbx	       148	reset.c	FUNCTION_4
0x40006d3	              0x5d	                                 pop rbp	       148	reset.c	FUNCTION_4
0x40006d4	              0xc3	                                     ret	       148	reset.c	FUNCTION_4
const_error	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_44
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_44
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_44
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_44
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_44
cmd_reset	FOR,0:ELSE,4:DO,0:SWITCH,0:functions,0:IF,26:WHILE,0:CALL,62	410
0x4000c37	              0x55	                                push rbp	       281	reset.c	FUNCTION_11
0x4000c38	          0x4889e5	                            mov rbp, rsp	       281	reset.c	FUNCTION_11
0x4000c3b	              0x53	                                push rbx	       281	reset.c	FUNCTION_11
0x4000c3c	    0x4881ec380300	                          sub rsp, 0x338	       281	reset.c	FUNCTION_11
0x4000c43	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	       281	reset.c	FUNCTION_11
0x4000c49	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	       281	reset.c	FUNCTION_11
0x4000c50	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	       281	reset.c	FUNCTION_11
0x4000c57	    0x64488b042528	                mov rax, qword fs:[0x28]	       281	reset.c	FUNCTION_11
0x4000c60	        0x488945e8	             mov qword [rbp - 0x18], rax	       281	reset.c	FUNCTION_11
0x4000c64	            0x31c0	                            xor eax, eax	       281	reset.c	FUNCTION_11
0x4000c66	    0xc785e0fcffff	              mov dword [rbp - 0x320], 5	       282	reset.c	FUNCTION_11
0x4000c70	    0xc785f0fcffff	              mov dword [rbp - 0x310], 0	       282	reset.c	FUNCTION_11
0x4000c7a	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 0	       282	reset.c	FUNCTION_11
0x4000c84	    0xc785e8fcffff	              mov dword [rbp - 0x318], 0	       283	reset.c	FUNCTION_11
0x4000c8e	    0xc785ecfcffff	              mov dword [rbp - 0x314], 0	       287	reset.c	FUNCTION_11
0x4000c98	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       288	reset.c	FUNCTION_11
0x4000c9f	      0xb800000000	                              mov eax, 0	       288	reset.c	FUNCTION_11
0x4000ca4	      0xb950000000	                           mov ecx, 0x50	       288	reset.c	FUNCTION_11
0x4000ca9	          0x4889d7	                            mov rdi, rdx	       288	reset.c	FUNCTION_11
0x4000cac	          0xf348ab	              rep stosq qword [rdi], rax	       288	reset.c	FUNCTION_11
0x4000caf	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 6	       288	reset.c	FUNCTION_11
0x4000cb9	    0xc78564fdffff	          mov dword [rbp - 0x29c], 0x71 	       288	reset.c	FUNCTION_11
0x4000cc3	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	       288	reset.c	FUNCTION_11
0x4000cce	    0x488d85e4fcff	                  lea rax, [rbp - 0x31c]	       288	reset.c	FUNCTION_11
0x4000cd5	    0x48898570fdff	            mov qword [rbp - 0x290], rax	       288	reset.c	FUNCTION_11
0x4000cdc	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       288	reset.c	FUNCTION_11
0x4000ce7	    0xc78588fdffff	              mov dword [rbp - 0x278], 2	       288	reset.c	FUNCTION_11
0x4000cf1	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	       288	reset.c	FUNCTION_11
0x4000cfb	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       288	reset.c	FUNCTION_11
0x4000d06	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0x4000d0d	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       288	reset.c	FUNCTION_11
0x4000d14	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	       288	reset.c	FUNCTION_11
0x4000d1f	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	       288	reset.c	FUNCTION_11
0x4000d29	    0xc785e0fdffff	              mov dword [rbp - 0x220], 7	       288	reset.c	FUNCTION_11
0x4000d33	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	       288	reset.c	FUNCTION_11
0x4000d3e	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0x4000d45	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	       288	reset.c	FUNCTION_11
0x4000d4c	    0x48c78500feff	              mov qword [rbp - 0x200], 0	       288	reset.c	FUNCTION_11
0x4000d57	    0xc78508feffff	              mov dword [rbp - 0x1f8], 2	       288	reset.c	FUNCTION_11
0x4000d61	    0x48c78518feff	              mov qword [rbp - 0x1e8], 1	       288	reset.c	FUNCTION_11
0x4000d6c	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	       288	reset.c	FUNCTION_11
0x4000d76	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       288	reset.c	FUNCTION_11
0x4000d81	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0x4000d88	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       288	reset.c	FUNCTION_11
0x4000d8f	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       288	reset.c	FUNCTION_11
0x4000d9a	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	       288	reset.c	FUNCTION_11
0x4000da4	    0x48c78558feff	              mov qword [rbp - 0x1a8], 2	       288	reset.c	FUNCTION_11
0x4000daf	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	       288	reset.c	FUNCTION_11
0x4000db9	    0x48c78568feff	              mov qword [rbp - 0x198], 0	       288	reset.c	FUNCTION_11
0x4000dc4	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0x4000dcb	    0x48898570feff	            mov qword [rbp - 0x190], rax	       288	reset.c	FUNCTION_11
0x4000dd2	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       288	reset.c	FUNCTION_11
0x4000ddd	    0xc78588feffff	              mov dword [rbp - 0x178], 2	       288	reset.c	FUNCTION_11
0x4000de7	    0x48c78598feff	              mov qword [rbp - 0x168], 3	       288	reset.c	FUNCTION_11
0x4000df2	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	       288	reset.c	FUNCTION_11
0x4000dfc	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       288	reset.c	FUNCTION_11
0x4000e07	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0x4000e0e	    0x488985b0feff	            mov qword [rbp - 0x150], rax	       288	reset.c	FUNCTION_11
0x4000e15	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       288	reset.c	FUNCTION_11
0x4000e20	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	       288	reset.c	FUNCTION_11
0x4000e2a	    0x48c785d8feff	              mov qword [rbp - 0x128], 4	       288	reset.c	FUNCTION_11
0x4000e35	    0xc785e0feffff	           mov dword [rbp - 0x120], 0xc 	       288	reset.c	FUNCTION_11
0x4000e3f	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       288	reset.c	FUNCTION_11
0x4000e4a	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       288	reset.c	FUNCTION_11
0x4000e55	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       288	reset.c	FUNCTION_11
0x4000e60	    0xc78508ffffff	               mov dword [rbp - 0xf8], 1	       288	reset.c	FUNCTION_11
0x4000e6a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       288	reset.c	FUNCTION_11
0x4000e75	    0xc78520ffffff	               mov dword [rbp - 0xe0], 7	       288	reset.c	FUNCTION_11
0x4000e7f	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x70 	       288	reset.c	FUNCTION_11
0x4000e89	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       288	reset.c	FUNCTION_11
0x4000e94	    0x488d85e8fcff	                  lea rax, [rbp - 0x318]	       288	reset.c	FUNCTION_11
0x4000e9b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       288	reset.c	FUNCTION_11
0x4000ea2	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       288	reset.c	FUNCTION_11
0x4000ead	    0xc78548ffffff	               mov dword [rbp - 0xb8], 2	       288	reset.c	FUNCTION_11
0x4000eb7	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	       288	reset.c	FUNCTION_11
0x4000ec2	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	       288	reset.c	FUNCTION_11
0x4000ecc	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x4e 	       288	reset.c	FUNCTION_11
0x4000ed6	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       288	reset.c	FUNCTION_11
0x4000ee1	    0x488d85ecfcff	                  lea rax, [rbp - 0x314]	       288	reset.c	FUNCTION_11
0x4000ee8	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       288	reset.c	FUNCTION_11
0x4000eef	    0x48c745800000	               mov qword [rbp - 0x80], 0	       288	reset.c	FUNCTION_11
0x4000ef7	    0xc74588020000	               mov dword [rbp - 0x78], 2	       288	reset.c	FUNCTION_11
0x4000efe	    0x48c745980100	               mov qword [rbp - 0x68], 1	       288	reset.c	FUNCTION_11
0x4000f06	      0xbe00000000	                              mov esi, 0	       308	reset.c	FUNCTION_11	CALL_10
0x4000f0b	      0xbf00000000	                              mov edi, 0	       308	reset.c	FUNCTION_11	CALL_10
0x4000f10	      0xe800000000	                          call 0x4000f15	       308	reset.c	FUNCTION_11	CALL_10
0x4000f15	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       310	reset.c	FUNCTION_11	CALL_11
0x4000f1c	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       310	reset.c	FUNCTION_11	CALL_11
0x4000f23	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       310	reset.c	FUNCTION_11	CALL_11
0x4000f2a	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	       310	reset.c	FUNCTION_11	CALL_11
0x4000f30	    0x41b901000000	                              mov r9d, 1	       310	reset.c	FUNCTION_11	CALL_11
0x4000f36	    0x41b800000000	                              mov r8d, 0	       310	reset.c	FUNCTION_11	CALL_11
0x4000f3c	            0x89c7	                            mov edi, eax	       310	reset.c	FUNCTION_11	CALL_11
0x4000f3e	      0xe800000000	                          call 0x4000f43	       310	reset.c	FUNCTION_11	CALL_11
0x4000f43	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	       310	reset.c	FUNCTION_11	CALL_11
0x4000f49	    0x8b8de8fcffff	            mov ecx, dword [rbp - 0x318]	       312	reset.c	FUNCTION_11	CALL_12
0x4000f4f	    0x488dbd08fdff	                  lea rdi, [rbp - 0x2f8]	       312	reset.c	FUNCTION_11	CALL_12
0x4000f56	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       312	reset.c	FUNCTION_11	CALL_12
0x4000f5d	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       312	reset.c	FUNCTION_11	CALL_12
0x4000f64	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       312	reset.c	FUNCTION_11	CALL_12
0x4000f6b	          0x4989f8	                             mov r8, rdi	       312	reset.c	FUNCTION_11	CALL_12
0x4000f6e	          0x4889c7	                            mov rdi, rax	       312	reset.c	FUNCTION_11	CALL_12
0x4000f71	      0xe85cf9ffff	                     call sym.parse_args	       312	reset.c	FUNCTION_11	CALL_12
0x4000f76	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       314	reset.c	FUNCTION_11	CALL_14
0x4000f7d	      0xbe00000000	                              mov esi, 0	       314	reset.c	FUNCTION_11	CALL_14
0x4000f82	          0x4889c7	                            mov rdi, rax	       314	reset.c	FUNCTION_11	CALL_14
0x4000f85	      0xe800000000	                          call 0x4000f8a	       314	reset.c	FUNCTION_11	CALL_14
0x4000f8a	            0x85c0	                           test eax, eax	       314	reset.c	FUNCTION_11	CALL_14
0x4000f8c	            0x751f	                           jne 0x4000fad	       314	reset.c	FUNCTION_11	CALL_14
0x4000f8e	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       314	reset.c	FUNCTION_11	CALL_14
0x4000f95	          0x4889c6	                            mov rsi, rax	       314	reset.c	FUNCTION_11	CALL_14
0x4000f98	      0xbf00000000	                              mov edi, 0	       314	reset.c	FUNCTION_11	CALL_14
0x4000f9d	      0xe800000000	                          call 0x4000fa2	       314	reset.c	FUNCTION_11	CALL_14
0x4000fa2	            0x85c0	                           test eax, eax	       314	reset.c	FUNCTION_11	CALL_14
0x4000fa4	            0x7407	                            je 0x4000fad	       314	reset.c	FUNCTION_11	CALL_14
0x4000fa6	      0xb801000000	                              mov eax, 1	       314	reset.c	FUNCTION_11	CALL_14
0x4000fab	            0xeb05	                           jmp 0x4000fb2	       314	reset.c	FUNCTION_11	CALL_14
0x4000fad	      0xb800000000	                              mov eax, 0	       314	reset.c	FUNCTION_11	CALL_14
0x4000fb2	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	       314	reset.c	FUNCTION_11	CALL_14
0x4000fb8	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	       315	reset.c	FUNCTION_11	IF_1
0x4000fbf	            0x7419	                            je 0x4000fda	       315	reset.c	FUNCTION_11	IF_1
0x4000fc1	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       317	reset.c	FUNCTION_11	IF_1	CALL_15
0x4000fc8	      0xbe00000000	                              mov esi, 0	       317	reset.c	FUNCTION_11	IF_1	CALL_15
0x4000fcd	          0x4889c7	                            mov rdi, rax	       317	reset.c	FUNCTION_11	IF_1	CALL_15
0x4000fd0	      0xe88df1ffff	                        call sym.hashcpy	       317	reset.c	FUNCTION_11	IF_1	CALL_15
0x4000fd5	      0xe94b010000	                           jmp 0x4001125	       317	reset.c	FUNCTION_11	IF_1	CALL_15
0x4000fda	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0x4000fe0	            0x85c0	                           test eax, eax	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0x4000fe2	     0xf85a1000000	                           jne 0x4001089	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0x4000fe8	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4000fef	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4000ff6	          0x4889d6	                            mov rsi, rdx	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4000ff9	          0x4889c7	                            mov rdi, rax	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4000ffc	      0xe800000000	                          call 0x4001001	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4001001	            0x85c0	                           test eax, eax	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4001003	            0x7421	                            je 0x4001026	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_16
0x4001005	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x400100c	      0xbf00000000	                              mov edi, 0	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x4001011	      0xe8cff0ffff	                               call sym.	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x4001016	          0x4889de	                            mov rsi, rbx	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x4001019	          0x4889c7	                            mov rdi, rax	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x400101c	      0xb800000000	                              mov eax, 0	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x4001021	      0xe800000000	                          call 0x4001026	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_18
0x4001026	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_19
0x400102d	          0x4889c7	                            mov rdi, rax	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_19
0x4001030	      0xe800000000	                          call 0x4001035	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_19
0x4001035	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_19
0x400103c	    0x4883bd10fdff	              cmp qword [rbp - 0x2f0], 0	       323	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_4
0x4001044	            0x7521	                           jne 0x4001067	       323	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_4
0x4001046	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x400104d	      0xbf00000000	                              mov edi, 0	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x4001052	      0xe88ef0ffff	                               call sym.	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x4001057	          0x4889de	                            mov rsi, rbx	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x400105a	          0x4889c7	                            mov rdi, rax	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x400105d	      0xb800000000	                              mov eax, 0	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x4001062	      0xe800000000	                          call 0x4001067	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_21
0x4001067	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x400106e	        0x488d5004	                      lea rdx, [rax + 4]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x4001072	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x4001079	          0x4889d6	                            mov rsi, rdx	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x400107c	          0x4889c7	                            mov rdi, rax	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x400107f	      0xe809f1ffff	                         call sym.oidcpy	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x4001084	      0xe99c000000	                           jmp 0x4001125	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_22
0x4001089	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x4001090	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x4001097	          0x4889d6	                            mov rsi, rdx	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x400109a	          0x4889c7	                            mov rdi, rax	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x400109d	      0xe800000000	                          call 0x40010a2	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x40010a2	            0x85c0	                           test eax, eax	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x40010a4	            0x7421	                            je 0x40010c7	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_23
0x40010a6	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010ad	      0xbf00000000	                              mov edi, 0	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010b2	      0xe82ef0ffff	                               call sym.	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010b7	          0x4889de	                            mov rsi, rbx	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010ba	          0x4889c7	                            mov rdi, rax	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010bd	      0xb800000000	                              mov eax, 0	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010c2	      0xe800000000	                          call 0x40010c7	       329	reset.c	FUNCTION_11	ELSE_2	CALL_25
0x40010c7	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       330	reset.c	FUNCTION_11	ELSE_2	CALL_26
0x40010ce	          0x4889c7	                            mov rdi, rax	       330	reset.c	FUNCTION_11	ELSE_2	CALL_26
0x40010d1	      0xe800000000	                          call 0x40010d6	       330	reset.c	FUNCTION_11	ELSE_2	CALL_26
0x40010d6	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       330	reset.c	FUNCTION_11	ELSE_2	CALL_26
0x40010dd	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	       331	reset.c	FUNCTION_11	ELSE_2	IF_6
0x40010e5	            0x7521	                           jne 0x4001108	       331	reset.c	FUNCTION_11	ELSE_2	IF_6
0x40010e7	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x40010ee	      0xbf00000000	                              mov edi, 0	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x40010f3	      0xe8edefffff	                               call sym.	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x40010f8	          0x4889de	                            mov rsi, rbx	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x40010fb	          0x4889c7	                            mov rdi, rax	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x40010fe	      0xb800000000	                              mov eax, 0	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x4001103	      0xe800000000	                          call 0x4001108	       332	reset.c	FUNCTION_11	ELSE_2	CALL_28
0x4001108	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x400110f	        0x488d5004	                      lea rdx, [rax + 4]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x4001113	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x400111a	          0x4889d6	                            mov rsi, rdx	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x400111d	          0x4889c7	                            mov rdi, rax	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x4001120	      0xe868f0ffff	                         call sym.oidcpy	       333	reset.c	FUNCTION_11	ELSE_2	CALL_29
0x4001125	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	       336	reset.c	FUNCTION_11	IF_7
0x400112b	            0x85c0	                           test eax, eax	       336	reset.c	FUNCTION_11	IF_7
0x400112d	            0x7442	                            je 0x4001171	       336	reset.c	FUNCTION_11	IF_7
0x400112f	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x4001135	          0x83f805	                              cmp eax, 5	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x4001138	            0x7417	                            je 0x4001151	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x400113a	      0xbf00000000	                              mov edi, 0	       338	reset.c	FUNCTION_11	IF_7	CALL_31
0x400113f	      0xe8a1efffff	                               call sym.	       338	reset.c	FUNCTION_11	IF_7	CALL_31
0x4001144	          0x4889c7	                            mov rdi, rax	       338	reset.c	FUNCTION_11	IF_7	CALL_31
0x4001147	      0xb800000000	                              mov eax, 0	       338	reset.c	FUNCTION_11	IF_7	CALL_31
0x400114c	      0xe800000000	                          call 0x4001151	       338	reset.c	FUNCTION_11	IF_7	CALL_31
0x4001151	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x4001158	    0x488d9520fdff	                  lea rdx, [rbp - 0x2e0]	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x400115f	      0xbe00000000	                              mov esi, 0	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x4001164	          0x4889c7	                            mov rdi, rax	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x4001167	      0xe800000000	                          call 0x400116c	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x400116c	      0xe931030000	                           jmp 0x40014a2	       339	reset.c	FUNCTION_11	IF_7	CALL_32
0x4001171	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       345	reset.c	FUNCTION_11	IF_9
0x4001177	            0x85c0	                           test eax, eax	       345	reset.c	FUNCTION_11	IF_9
0x4001179	            0x7463	                            je 0x40011de	       345	reset.c	FUNCTION_11	IF_9
0x400117b	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x4001181	            0x85c0	                           test eax, eax	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x4001183	            0x7519	                           jne 0x400119e	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x4001185	      0xbf00000000	                              mov edi, 0	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x400118a	      0xe856efffff	                               call sym.	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x400118f	          0x4889c7	                            mov rdi, rax	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x4001192	      0xb800000000	                              mov eax, 0	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x4001197	      0xe800000000	                          call 0x400119c	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x400119c	            0xeb40	                           jmp 0x40011de	       347	reset.c	FUNCTION_11	IF_9	CALL_34
0x400119e	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x40011a4	          0x83f805	                              cmp eax, 5	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x40011a7	            0x7435	                            je 0x40011de	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x40011a9	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011af	            0x4898	                                    cdqe	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011b1	    0x488b04c50000	                  mov rax, qword [rax*8]	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011b9	          0x4889c7	                            mov rdi, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011bc	      0xe824efffff	                               call sym.	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011c1	          0x4889c3	                            mov rbx, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011c4	      0xbf00000000	                              mov edi, 0	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011c9	      0xe817efffff	                               call sym.	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011ce	          0x4889de	                            mov rsi, rbx	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011d1	          0x4889c7	                            mov rdi, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011d4	      0xb800000000	                              mov eax, 0	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011d9	      0xe800000000	                          call 0x40011de	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_36
0x40011de	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       352	reset.c	FUNCTION_11	IF_12
0x40011e4	          0x83f805	                              cmp eax, 5	       352	reset.c	FUNCTION_11	IF_12
0x40011e7	            0x750a	                           jne 0x40011f3	       352	reset.c	FUNCTION_11	IF_12
0x40011e9	    0xc785e0fcffff	              mov dword [rbp - 0x320], 0	       353	reset.c	FUNCTION_11	IF_12
0x40011f3	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x40011f9	          0x83f801	                              cmp eax, 1	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x40011fc	            0x7419	                            je 0x4001217	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x40011fe	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x4001204	            0x85c0	                           test eax, eax	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x4001206	            0x750a	                           jne 0x4001212	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x4001208	      0xe800000000	                          call 0x400120d	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x400120d	          0x4885c0	                           test rax, rax	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x4001210	            0x7405	                            je 0x4001217	       355	reset.c	FUNCTION_11	IF_13	CALL_38
0x4001212	      0xe800000000	                          call 0x4001217	       356	reset.c	FUNCTION_11	CALL_39
0x4001217	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x400121d	            0x85c0	                           test eax, eax	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x400121f	            0x753e	                           jne 0x400125f	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x4001221	      0xe800000000	                          call 0x4001226	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x4001226	            0x85c0	                           test eax, eax	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x4001228	            0x7435	                            je 0x400125f	       358	reset.c	FUNCTION_11	IF_14	CALL_40
0x400122a	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001230	            0x4898	                                    cdqe	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001232	    0x488b04c50000	                  mov rax, qword [rax*8]	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400123a	          0x4889c7	                            mov rdi, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400123d	      0xe8a3eeffff	                               call sym.	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001242	          0x4889c3	                            mov rbx, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001245	      0xbf00000000	                              mov edi, 0	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400124a	      0xe896eeffff	                               call sym.	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400124f	          0x4889de	                            mov rsi, rbx	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001252	          0x4889c7	                            mov rdi, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x4001255	      0xb800000000	                              mov eax, 0	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400125a	      0xe800000000	                          call 0x400125f	       359	reset.c	FUNCTION_11	IF_14	CALL_42
0x400125f	    0x8b85ecfcffff	            mov eax, dword [rbp - 0x314]	       362	reset.c	FUNCTION_11	IF_15
0x4001265	            0x85c0	                           test eax, eax	       362	reset.c	FUNCTION_11	IF_15
0x4001267	            0x7421	                            je 0x400128a	       362	reset.c	FUNCTION_11	IF_15
0x4001269	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       362	reset.c	FUNCTION_11	IF_15
0x400126f	            0x85c0	                           test eax, eax	       362	reset.c	FUNCTION_11	IF_15
0x4001271	            0x7417	                            je 0x400128a	       362	reset.c	FUNCTION_11	IF_15
0x4001273	      0xbf00000000	                              mov edi, 0	       363	reset.c	FUNCTION_11	CALL_45
0x4001278	      0xe868eeffff	                               call sym.	       363	reset.c	FUNCTION_11	CALL_45
0x400127d	          0x4889c7	                            mov rdi, rax	       363	reset.c	FUNCTION_11	CALL_45
0x4001280	      0xb800000000	                              mov eax, 0	       363	reset.c	FUNCTION_11	CALL_45
0x4001285	      0xe800000000	                          call 0x400128a	       363	reset.c	FUNCTION_11	CALL_45
0x400128a	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       368	reset.c	FUNCTION_11	IF_16
0x4001290	          0x83f801	                              cmp eax, 1	       368	reset.c	FUNCTION_11	IF_16
0x4001293	            0x740b	                            je 0x40012a0	       368	reset.c	FUNCTION_11	IF_16
0x4001295	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       368	reset.c	FUNCTION_11	IF_16
0x400129b	          0x83f804	                              cmp eax, 4	       368	reset.c	FUNCTION_11	IF_16
0x400129e	            0x750d	                           jne 0x40012ad	       368	reset.c	FUNCTION_11	IF_16
0x40012a0	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       369	reset.c	FUNCTION_11	CALL_46
0x40012a6	            0x89c7	                            mov edi, eax	       369	reset.c	FUNCTION_11	CALL_46
0x40012a8	      0xe8c8f5ffff	          call sym.die_if_unmerged_cache	       369	reset.c	FUNCTION_11	CALL_46
0x40012ad	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       371	reset.c	FUNCTION_11	IF_17
0x40012b3	          0x83f801	                              cmp eax, 1	       371	reset.c	FUNCTION_11	IF_17
0x40012b6	     0xf846a010000	                            je 0x4001426	       371	reset.c	FUNCTION_11	IF_17
0x40012bc	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       372	reset.c	FUNCTION_11	IF_17
0x40012c7	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       373	reset.c	FUNCTION_11	IF_17	CALL_47
0x40012ce	      0xbe01000000	                              mov esi, 1	       373	reset.c	FUNCTION_11	IF_17	CALL_47
0x40012d3	          0x4889c7	                            mov rdi, rax	       373	reset.c	FUNCTION_11	IF_17	CALL_47
0x40012d6	      0xe800000000	                          call 0x40012db	       373	reset.c	FUNCTION_11	IF_17	CALL_47
0x40012db	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x40012e1	            0x85c0	                           test eax, eax	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x40012e3	     0xf8588000000	                           jne 0x4001371	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x40012e9	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012ef	            0x85c0	                           test eax, eax	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012f1	            0x7407	                            je 0x40012fa	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012f3	      0xb804000000	                              mov eax, 4	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012f8	            0xeb05	                           jmp 0x40012ff	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012fa	      0xb820000000	                           mov eax, 0x20	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x40012ff	    0x8985fcfcffff	            mov dword [rbp - 0x304], eax	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x4001305	    0x8b95ecfcffff	            mov edx, dword [rbp - 0x314]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x400130b	    0x488d8d40fdff	                  lea rcx, [rbp - 0x2c0]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x4001312	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x4001319	          0x4889ce	                            mov rsi, rcx	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x400131c	          0x4889c7	                            mov rdi, rax	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x400131f	      0xe8b1f3ffff	                 call sym.read_from_tree	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x4001324	            0x85c0	                           test eax, eax	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x4001326	            0x740a	                            je 0x4001332	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_48
0x4001328	      0xb801000000	                              mov eax, 1	       377	reset.c	FUNCTION_11	IF_17	IF_18	IF_19
0x400132d	      0xe970010000	                           jmp 0x40014a2	       377	reset.c	FUNCTION_11	IF_17	IF_18	IF_19
0x4001332	      0xe800000000	                          call 0x4001337	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_49
0x4001337	          0x4885c0	                           test rax, rax	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_49
0x400133a	     0xf84b2000000	                            je 0x40013f2	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_49
0x4001340	      0xbf00000000	                              mov edi, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001345	      0xe89bedffff	                               call sym.	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x400134a	          0x4889c2	                            mov rdx, rax	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x400134d	    0x8b85fcfcffff	            mov eax, dword [rbp - 0x304]	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001353	          0x4989d0	                             mov r8, rdx	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001356	      0xb900000000	                              mov ecx, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x400135b	      0xba00000000	                              mov edx, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001360	            0x89c6	                            mov esi, eax	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001362	      0xbf00000000	                              mov edi, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001367	      0xe800000000	                          call 0x400136c	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x400136c	      0xe981000000	                           jmp 0x40013f2	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_50
0x4001371	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x4001377	    0x8b8de0fcffff	            mov ecx, dword [rbp - 0x320]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x400137d	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x4001384	            0x89ce	                            mov esi, ecx	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x4001386	          0x4889c7	                            mov rdi, rax	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x4001389	      0xe845eeffff	                    call sym.reset_index	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x400138e	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_52
0x4001394	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x400139a	          0x83f804	                              cmp eax, 4	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x400139d	            0x7529	                           jne 0x40013c8	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x400139f	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x40013a6	            0x7520	                           jne 0x40013c8	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x40013a8	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013ae	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013b5	      0xbe00000000	                              mov esi, 0	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013ba	          0x4889c7	                            mov rdi, rax	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013bd	      0xe811eeffff	                    call sym.reset_index	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013c2	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_53
0x40013c8	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	       385	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_22
0x40013cf	            0x7421	                            je 0x40013f2	       385	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_22
0x40013d1	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013d8	      0xbf00000000	                              mov edi, 0	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013dd	      0xe803edffff	                               call sym.	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013e2	          0x4889de	                            mov rsi, rbx	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013e5	          0x4889c7	                            mov rdi, rax	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013e8	      0xb800000000	                              mov eax, 0	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013ed	      0xe800000000	                          call 0x40013f2	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_55
0x40013f2	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x40013f9	      0xba01000000	                              mov edx, 1	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x40013fe	          0x4889c6	                            mov rsi, rax	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x4001401	      0xbf00000000	                              mov edi, 0	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x4001406	      0xe800000000	                          call 0x400140b	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x400140b	            0x85c0	                           test eax, eax	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x400140d	            0x7417	                            je 0x4001426	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_56
0x400140f	      0xbf00000000	                              mov edi, 0	       390	reset.c	FUNCTION_11	IF_17	CALL_58
0x4001414	      0xe8ccecffff	                               call sym.	       390	reset.c	FUNCTION_11	IF_17	CALL_58
0x4001419	          0x4889c7	                            mov rdi, rax	       390	reset.c	FUNCTION_11	IF_17	CALL_58
0x400141c	      0xb800000000	                              mov eax, 0	       390	reset.c	FUNCTION_11	IF_17	CALL_58
0x4001421	      0xe800000000	                          call 0x4001426	       390	reset.c	FUNCTION_11	IF_17	CALL_58
0x4001426	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       393	reset.c	FUNCTION_11	IF_24
0x400142c	            0x85c0	                           test eax, eax	       393	reset.c	FUNCTION_11	IF_24
0x400142e	            0x755d	                           jne 0x400148d	       393	reset.c	FUNCTION_11	IF_24
0x4001430	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	       393	reset.c	FUNCTION_11	IF_24
0x4001437	            0x7554	                           jne 0x400148d	       393	reset.c	FUNCTION_11	IF_24
0x4001439	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x4001440	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x4001447	          0x4889d6	                            mov rsi, rdx	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x400144a	          0x4889c7	                            mov rdi, rax	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x400144d	      0xe839f6ffff	                     call sym.reset_refs	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x4001452	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	       396	reset.c	FUNCTION_11	IF_24	CALL_59
0x4001458	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x400145e	          0x83f802	                              cmp eax, 2	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x4001461	            0x752a	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x4001463	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 0	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x400146a	            0x7521	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x400146c	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x4001472	            0x85c0	                           test eax, eax	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x4001474	            0x7517	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x4001476	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       399	reset.c	FUNCTION_11	IF_24	CALL_61
0x400147d	          0x4889c7	                            mov rdi, rax	       399	reset.c	FUNCTION_11	IF_24	CALL_61
0x4001480	      0xe800000000	                          call 0x4001485	       399	reset.c	FUNCTION_11	IF_24	CALL_61
0x4001485	          0x4889c7	                            mov rdi, rax	       399	reset.c	FUNCTION_11	IF_24	CALL_61
0x4001488	      0xe830f0ffff	            call sym.print_new_head_line	       399	reset.c	FUNCTION_11	IF_24	CALL_61
0x400148d	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       401	reset.c	FUNCTION_11	IF_26
0x4001493	            0x85c0	                           test eax, eax	       401	reset.c	FUNCTION_11	IF_26
0x4001495	            0x7505	                           jne 0x400149c	       401	reset.c	FUNCTION_11	IF_26
0x4001497	      0xe800000000	                          call 0x400149c	       402	reset.c	FUNCTION_11	CALL_62
0x400149c	    0x8b85f0fcffff	            mov eax, dword [rbp - 0x310]	       404	reset.c	FUNCTION_11
0x40014a2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       405	reset.c	FUNCTION_11
0x40014a6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       405	reset.c	FUNCTION_11
0x40014af	            0x7405	                            je 0x40014b6	       405	reset.c	FUNCTION_11
0x40014b1	      0xe800000000	                          call 0x40014b6	       405	reset.c	FUNCTION_11
0x40014b6	    0x4881c4380300	                          add rsp, 0x338	       405	reset.c	FUNCTION_11
0x40014bd	              0x5b	                                 pop rbx	       405	reset.c	FUNCTION_11
0x40014be	              0x5d	                                 pop rbp	       405	reset.c	FUNCTION_11
0x40014bf	              0xc3	                                     ret	       405	reset.c	FUNCTION_11
strbuf_setlen	FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:IF,2:WHILE,0:CALL,2	43
0x400004b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_68
0x400004c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_68
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_68
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_68
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_68
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_68	IF_1
0x400005f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_68	IF_1
0x4000062	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_68	IF_1
0x4000065	            0x740d	                            je 0x4000074	       162	strbuf.h	FUNCTION_68	IF_1
0x4000067	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_68	IF_1
0x400006b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_68	IF_1
0x400006e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_68	IF_1
0x4000072	            0xeb05	                           jmp 0x4000079	       162	strbuf.h	FUNCTION_68	IF_1
0x4000074	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_68	IF_1
0x4000079	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_68	IF_1
0x400007d	            0x730f	                           jae 0x400008e	       162	strbuf.h	FUNCTION_68	IF_1
0x400007f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_68	CALL_1
0x4000084	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_68	CALL_1
0x4000089	      0xe800000000	                          call 0x400008e	       163	strbuf.h	FUNCTION_68	CALL_1
0x400008e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_68
0x4000092	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_68
0x4000096	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_68
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_68	IF_2
0x400009e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_68	IF_2
0x40000a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_68	IF_2
0x40000a8	            0x7414	                            je 0x40000be	       165	strbuf.h	FUNCTION_68	IF_2
0x40000aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_68	IF_2
0x40000ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_68	IF_2
0x40000b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_68	IF_2
0x40000b6	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_68	IF_2
0x40000b9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_68	IF_2
0x40000bc	            0xeb24	                           jmp 0x40000e2	       169	strbuf.h	FUNCTION_68
0x40000be	     0xfb605000000	           movzx eax, byte [0x040000c5] 	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000c5	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000c7	            0x7419	                            je 0x40000e2	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000c9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000ce	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000d3	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000d8	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000dd	      0xe800000000	                          call 0x40000e2	       168	strbuf.h	FUNCTION_68	CALL_2
0x40000e2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_68
0x40000e3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_68
0x40000e4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_68
hashcpy	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,0:WHILE,0:CALL,1	14
0x4000162	              0x55	                                push rbp	       994	cache.h	FUNCTION_23
0x4000163	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_23
0x4000166	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_23
0x400016a	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_23
0x400016e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_23
0x4000172	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_23	CALL_1
0x4000176	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_23	CALL_1
0x400017a	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_23	CALL_1
0x400017f	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_23	CALL_1
0x4000182	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_23	CALL_1
0x4000185	      0xe800000000	                          call 0x400018a	       995	cache.h	FUNCTION_23	CALL_1
0x400018a	              0x90	                                     nop	       996	cache.h	FUNCTION_23
0x400018b	              0xc9	                                   leave	       996	cache.h	FUNCTION_23
0x400018c	              0xc3	                                     ret	       996	cache.h	FUNCTION_23
read_from_tree	FOR,0:ELSE,0:DO,0:SWITCH,0:functions,0:IF,1:WHILE,0:CALL,6	53
0x40006d5	              0x55	                                push rbp	       153	reset.c	FUNCTION_5
0x40006d6	          0x4889e5	                            mov rbp, rsp	       153	reset.c	FUNCTION_5
0x40006d9	    0x4881ecb00100	                          sub rsp, 0x1b0	       153	reset.c	FUNCTION_5
0x40006e0	    0x4889bd68feff	            mov qword [rbp - 0x198], rdi	       153	reset.c	FUNCTION_5
0x40006e7	    0x4889b560feff	            mov qword [rbp - 0x1a0], rsi	       153	reset.c	FUNCTION_5
0x40006ee	    0x89955cfeffff	            mov dword [rbp - 0x1a4], edx	       153	reset.c	FUNCTION_5
0x40006f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       153	reset.c	FUNCTION_5
0x40006fd	        0x488945f8	                mov qword [rbp - 8], rax	       153	reset.c	FUNCTION_5
0x4000701	            0x31c0	                            xor eax, eax	       153	reset.c	FUNCTION_5
0x4000703	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       156	reset.c	FUNCTION_5	CALL_1
0x400070a	      0xba80010000	                          mov edx, 0x180	       156	reset.c	FUNCTION_5	CALL_1
0x400070f	      0xbe00000000	                              mov esi, 0	       156	reset.c	FUNCTION_5	CALL_1
0x4000714	          0x4889c7	                            mov rdi, rax	       156	reset.c	FUNCTION_5	CALL_1
0x4000717	      0xe800000000	                          call 0x400071c	       156	reset.c	FUNCTION_5	CALL_1
0x400071c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       157	reset.c	FUNCTION_5	CALL_2
0x4000723	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	       157	reset.c	FUNCTION_5	CALL_2
0x400072a	    0x4881c2100100	                          add rdx, 0x110	       157	reset.c	FUNCTION_5	CALL_2
0x4000731	          0x4889c6	                            mov rsi, rax	       157	reset.c	FUNCTION_5	CALL_2
0x4000734	          0x4889d7	                            mov rdi, rdx	       157	reset.c	FUNCTION_5	CALL_2
0x4000737	      0xe800000000	                          call 0x400073c	       157	reset.c	FUNCTION_5	CALL_2
0x400073c	    0xc785d0feffff	         mov dword [rbp - 0x130], 0x1000	       158	reset.c	FUNCTION_5
0x4000746	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       159	reset.c	FUNCTION_5
0x400074e	    0x488d855cfeff	                  lea rax, [rbp - 0x1a4]	       160	reset.c	FUNCTION_5
0x4000755	        0x488945c0	             mov qword [rbp - 0x40], rax	       160	reset.c	FUNCTION_5
0x4000759	     0xfb685abfeff	           movzx eax, byte [rbp - 0x155]	       161	reset.c	FUNCTION_5
0x4000760	          0x83c804	                               or eax, 4	       161	reset.c	FUNCTION_5
0x4000763	    0x8885abfeffff	              mov byte [rbp - 0x155], al	       161	reset.c	FUNCTION_5
0x4000769	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x4000770	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x4000777	          0x4889d6	                            mov rsi, rdx	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x400077a	          0x4889c7	                            mov rdi, rax	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x400077d	      0xe800000000	                          call 0x4000782	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x4000782	            0x85c0	                           test eax, eax	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x4000784	            0x7407	                            je 0x400078d	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x4000786	      0xb801000000	                              mov eax, 1	       164	reset.c	FUNCTION_5	IF_1
0x400078b	            0xeb38	                           jmp 0x40007c5	       164	reset.c	FUNCTION_5	IF_1
0x400078d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       165	reset.c	FUNCTION_5	CALL_4
0x4000794	          0x4889c7	                            mov rdi, rax	       165	reset.c	FUNCTION_5	CALL_4
0x4000797	      0xe800000000	                          call 0x400079c	       165	reset.c	FUNCTION_5	CALL_4
0x400079c	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       166	reset.c	FUNCTION_5	CALL_5
0x40007a3	          0x4889c7	                            mov rdi, rax	       166	reset.c	FUNCTION_5	CALL_5
0x40007a6	      0xe800000000	                          call 0x40007ab	       166	reset.c	FUNCTION_5	CALL_5
0x40007ab	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       167	reset.c	FUNCTION_5	CALL_6
0x40007b2	    0x480510010000	                          add rax, 0x110	       167	reset.c	FUNCTION_5	CALL_6
0x40007b8	          0x4889c7	                            mov rdi, rax	       167	reset.c	FUNCTION_5	CALL_6
0x40007bb	      0xe800000000	                          call 0x40007c0	       167	reset.c	FUNCTION_5	CALL_6
0x40007c0	      0xb800000000	                              mov eax, 0	       169	reset.c	FUNCTION_5
0x40007c5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       170	reset.c	FUNCTION_5
0x40007c9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       170	reset.c	FUNCTION_5
0x40007d2	            0x7405	                            je 0x40007d9	       170	reset.c	FUNCTION_5
0x40007d4	      0xe800000000	                          call 0x40007d9	       170	reset.c	FUNCTION_5
0x40007d9	              0xc9	                                   leave	       170	reset.c	FUNCTION_5
0x40007da	              0xc3	                                     ret	       170	reset.c	FUNCTION_5
set_reflog_message	FOR,0:ELSE,2:DO,0:SWITCH,0:functions,0:IF,2:WHILE,0:CALL,4	41
0x40007db	              0x55	                                push rbp	       174	reset.c	FUNCTION_6
0x40007dc	          0x4889e5	                            mov rbp, rsp	       174	reset.c	FUNCTION_6
0x40007df	        0x4883ec30	                           sub rsp, 0x30	       174	reset.c	FUNCTION_6
0x40007e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       174	reset.c	FUNCTION_6
0x40007e7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       174	reset.c	FUNCTION_6
0x40007eb	        0x488955d8	             mov qword [rbp - 0x28], rdx	       174	reset.c	FUNCTION_6
0x40007ef	      0xbf00000000	                              mov edi, 0	       175	reset.c	FUNCTION_6	CALL_1
0x40007f4	      0xe800000000	                          call 0x40007f9	       175	reset.c	FUNCTION_6	CALL_1
0x40007f9	        0x488945f8	                mov qword [rbp - 8], rax	       175	reset.c	FUNCTION_6	CALL_1
0x40007fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	reset.c	FUNCTION_6
0x4000801	      0xbe00000000	                              mov esi, 0	       177	reset.c	FUNCTION_6
0x4000806	          0x4889c7	                            mov rdi, rax	       177	reset.c	FUNCTION_6
0x4000809	      0xe83df8ffff	                  call sym.strbuf_setlen	       177	reset.c	FUNCTION_6
0x400080e	      0x48837df800	                  cmp qword [rbp - 8], 0	       178	reset.c	FUNCTION_6	IF_1
0x4000813	            0x7420	                            je 0x4000835	       178	reset.c	FUNCTION_6	IF_1
0x4000815	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       179	reset.c	FUNCTION_6	CALL_2
0x4000819	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	reset.c	FUNCTION_6	CALL_2
0x400081d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	reset.c	FUNCTION_6	CALL_2
0x4000821	      0xbe00000000	                              mov esi, 0	       179	reset.c	FUNCTION_6	CALL_2
0x4000826	          0x4889c7	                            mov rdi, rax	       179	reset.c	FUNCTION_6	CALL_2
0x4000829	      0xb800000000	                              mov eax, 0	       179	reset.c	FUNCTION_6	CALL_2
0x400082e	      0xe800000000	                          call 0x4000833	       179	reset.c	FUNCTION_6	CALL_2
0x4000833	            0xeb3d	                           jmp 0x4000872	       184	reset.c	FUNCTION_6
0x4000835	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       180	reset.c	FUNCTION_6	ELSE_1	IF_2
0x400083a	            0x741c	                            je 0x4000858	       180	reset.c	FUNCTION_6	ELSE_1	IF_2
0x400083c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x4000840	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x4000844	      0xbe00000000	                              mov esi, 0	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x4000849	          0x4889c7	                            mov rdi, rax	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x400084c	      0xb800000000	                              mov eax, 0	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x4000851	      0xe800000000	                          call 0x4000856	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x4000856	            0xeb1a	                           jmp 0x4000872	       184	reset.c	FUNCTION_6
0x4000858	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       183	reset.c	FUNCTION_6	CALL_4
0x400085c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reset.c	FUNCTION_6	CALL_4
0x4000860	      0xbe00000000	                              mov esi, 0	       183	reset.c	FUNCTION_6	CALL_4
0x4000865	          0x4889c7	                            mov rdi, rax	       183	reset.c	FUNCTION_6	CALL_4
0x4000868	      0xb800000000	                              mov eax, 0	       183	reset.c	FUNCTION_6	CALL_4
0x400086d	      0xe800000000	                          call 0x4000872	       183	reset.c	FUNCTION_6	CALL_4
0x4000872	              0x90	                                     nop	       184	reset.c	FUNCTION_6
0x4000873	              0xc9	                                   leave	       184	reset.c	FUNCTION_6
0x4000874	              0xc3	                                     ret	       184	reset.c	FUNCTION_6
reset_refs	FOR,0:ELSE,1:DO,0:SWITCH,0:functions,0:IF,3:WHILE,0:CALL,8	75
0x4000a8b	              0x55	                                push rbp	       250	reset.c	FUNCTION_9
0x4000a8c	          0x4889e5	                            mov rbp, rsp	       250	reset.c	FUNCTION_9
0x4000a8f	    0x4881ec900000	                           sub rsp, 0x90	       250	reset.c	FUNCTION_9
0x4000a96	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       250	reset.c	FUNCTION_9
0x4000a9d	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       250	reset.c	FUNCTION_9
0x4000aa4	    0x64488b042528	                mov rax, qword fs:[0x28]	       250	reset.c	FUNCTION_9
0x4000aad	        0x488945f8	                mov qword [rbp - 8], rax	       250	reset.c	FUNCTION_9
0x4000ab1	            0x31c0	                            xor eax, eax	       250	reset.c	FUNCTION_9
0x4000ab3	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       252	reset.c	FUNCTION_9
0x4000abb	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       252	reset.c	FUNCTION_9
0x4000ac3	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       252	reset.c	FUNCTION_9
0x4000acb	    0x48c745900000	               mov qword [rbp - 0x70], 0	       253	reset.c	FUNCTION_9
0x4000ad3	    0x48c745980000	               mov qword [rbp - 0x68], 0	       254	reset.c	FUNCTION_9
0x4000adb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000adf	          0x4889c6	                            mov rsi, rax	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000ae2	      0xbf00000000	                              mov edi, 0	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000ae7	      0xe800000000	                          call 0x4000aec	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000aec	            0x85c0	                           test eax, eax	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000aee	            0x7508	                           jne 0x4000af8	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0x4000af0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       257	reset.c	FUNCTION_9	IF_1
0x4000af4	        0x48894598	             mov qword [rbp - 0x68], rax	       257	reset.c	FUNCTION_9	IF_1
0x4000af8	        0x488d45c0	                   lea rax, [rbp - 0x40]	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000afc	          0x4889c6	                            mov rsi, rax	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000aff	      0xbf00000000	                              mov edi, 0	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000b04	      0xe800000000	                          call 0x4000b09	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000b09	            0x85c0	                           test eax, eax	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000b0b	            0x7545	                           jne 0x4000b52	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0x4000b0d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       259	reset.c	FUNCTION_9	IF_2
0x4000b11	        0x48894590	             mov qword [rbp - 0x70], rax	       259	reset.c	FUNCTION_9	IF_2
0x4000b15	        0x488d45a0	                   lea rax, [rbp - 0x60]	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0x4000b19	      0xba00000000	                              mov edx, 0	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0x4000b1e	      0xbe00000000	                              mov esi, 0	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0x4000b23	          0x4889c7	                            mov rdi, rax	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0x4000b26	      0xe8b0fcffff	             call sym.set_reflog_message	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0x4000b2b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b2f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b33	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b37	    0x41b900000000	                              mov r9d, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b3d	    0x41b800000000	                              mov r8d, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b43	      0xbe00000000	                              mov esi, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b48	          0x4889c7	                            mov rdi, rax	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b4b	      0xe800000000	                          call 0x4000b50	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b50	            0xeb22	                           jmp 0x4000b74	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0x4000b52	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       263	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b57	            0x741b	                            je 0x4000b74	       263	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b59	        0x488b4598	             mov rax, qword [rbp - 0x68]	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b5d	      0xb900000000	                              mov ecx, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b62	          0x4889c2	                            mov rdx, rax	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b65	      0xbe00000000	                              mov esi, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b6a	      0xbf00000000	                              mov edi, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b6f	      0xe800000000	                          call 0x4000b74	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0x4000b74	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       265	reset.c	FUNCTION_9	CALL_6
0x4000b7b	        0x488d45a0	                   lea rax, [rbp - 0x60]	       265	reset.c	FUNCTION_9	CALL_6
0x4000b7f	      0xbe00000000	                              mov esi, 0	       265	reset.c	FUNCTION_9	CALL_6
0x4000b84	          0x4889c7	                            mov rdi, rax	       265	reset.c	FUNCTION_9	CALL_6
0x4000b87	      0xe84ffcffff	             call sym.set_reflog_message	       265	reset.c	FUNCTION_9	CALL_6
0x4000b8c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       266	reset.c	FUNCTION_9	CALL_7
0x4000b90	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       266	reset.c	FUNCTION_9	CALL_7
0x4000b94	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       266	reset.c	FUNCTION_9	CALL_7
0x4000b9b	    0x41b900000000	                              mov r9d, 0	       266	reset.c	FUNCTION_9	CALL_7
0x4000ba1	    0x41b800000000	                              mov r8d, 0	       266	reset.c	FUNCTION_9	CALL_7
0x4000ba7	      0xbe00000000	                              mov esi, 0	       266	reset.c	FUNCTION_9	CALL_7
0x4000bac	          0x4889c7	                            mov rdi, rax	       266	reset.c	FUNCTION_9	CALL_7
0x4000baf	      0xe800000000	                          call 0x4000bb4	       266	reset.c	FUNCTION_9	CALL_7
0x4000bb4	          0x89458c	             mov dword [rbp - 0x74], eax	       266	reset.c	FUNCTION_9	CALL_7
0x4000bb7	        0x488d45a0	                   lea rax, [rbp - 0x60]	       268	reset.c	FUNCTION_9	CALL_8
0x4000bbb	          0x4889c7	                            mov rdi, rax	       268	reset.c	FUNCTION_9	CALL_8
0x4000bbe	      0xe800000000	                          call 0x4000bc3	       268	reset.c	FUNCTION_9	CALL_8
0x4000bc3	          0x8b458c	             mov eax, dword [rbp - 0x74]	       269	reset.c	FUNCTION_9
0x4000bc6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       270	reset.c	FUNCTION_9
0x4000bca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       270	reset.c	FUNCTION_9
0x4000bd3	            0x7405	                            je 0x4000bda	       270	reset.c	FUNCTION_9
0x4000bd5	      0xe800000000	                          call 0x4000bda	       270	reset.c	FUNCTION_9
0x4000bda	              0xc9	                                   leave	       270	reset.c	FUNCTION_9
0x4000bdb	              0xc3	                                     ret	       270	reset.c	FUNCTION_9
