real_pathdup	ELSE,0:FOR,0:CALL,3:WHILE,0:functions,0:DO,0:IF,1:SWITCH,0	35
0x4000a04	              0x55	                                push rbp	       222	abspath.c	FUNCTION_8
0x4000a05	          0x4889e5	                            mov rbp, rsp	       222	abspath.c	FUNCTION_8
0x4000a08	        0x4883ec40	                           sub rsp, 0x40	       222	abspath.c	FUNCTION_8
0x4000a0c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       222	abspath.c	FUNCTION_8
0x4000a10	          0x8975c4	             mov dword [rbp - 0x3c], esi	       222	abspath.c	FUNCTION_8
0x4000a13	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	abspath.c	FUNCTION_8
0x4000a1c	        0x488945f8	                mov qword [rbp - 8], rax	       222	abspath.c	FUNCTION_8
0x4000a20	            0x31c0	                            xor eax, eax	       222	abspath.c	FUNCTION_8
0x4000a22	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       223	abspath.c	FUNCTION_8
0x4000a2a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       223	abspath.c	FUNCTION_8
0x4000a32	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       223	abspath.c	FUNCTION_8
0x4000a3a	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       224	abspath.c	FUNCTION_8
0x4000a42	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a45	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a49	        0x488d45e0	                   lea rax, [rbp - 0x20]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a4d	          0x4889ce	                            mov rsi, rcx	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a50	          0x4889c7	                            mov rdi, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a53	      0xe800000000	                          call 0x4000a58	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a58	          0x4885c0	                           test rax, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a5b	            0x7415	                            je 0x4000a72	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0x4000a5d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       227	abspath.c	FUNCTION_8	CALL_2
0x4000a61	      0xbe00000000	                              mov esi, 0	       227	abspath.c	FUNCTION_8	CALL_2
0x4000a66	          0x4889c7	                            mov rdi, rax	       227	abspath.c	FUNCTION_8	CALL_2
0x4000a69	      0xe800000000	                          call 0x4000a6e	       227	abspath.c	FUNCTION_8	CALL_2
0x4000a6e	        0x488945d8	             mov qword [rbp - 0x28], rax	       227	abspath.c	FUNCTION_8	CALL_2
0x4000a72	        0x488d45e0	                   lea rax, [rbp - 0x20]	       229	abspath.c	FUNCTION_8	CALL_3
0x4000a76	          0x4889c7	                            mov rdi, rax	       229	abspath.c	FUNCTION_8	CALL_3
0x4000a79	      0xe800000000	                          call 0x4000a7e	       229	abspath.c	FUNCTION_8	CALL_3
0x4000a7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	abspath.c	FUNCTION_8
0x4000a82	        0x488b4df8	                mov rcx, qword [rbp - 8]	       232	abspath.c	FUNCTION_8
0x4000a86	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       232	abspath.c	FUNCTION_8
0x4000a8f	            0x7405	                            je 0x4000a96	       232	abspath.c	FUNCTION_8
0x4000a91	      0xe800000000	                          call 0x4000a96	       232	abspath.c	FUNCTION_8
0x4000a96	              0xc9	                                   leave	       232	abspath.c	FUNCTION_8
0x4000a97	              0xc3	                                     ret	       232	abspath.c	FUNCTION_8
is_directory	ELSE,0:FOR,0:CALL,1:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	27
0x40002c7	              0x55	                                push rbp	         9	abspath.c	FUNCTION_1
0x40002c8	          0x4889e5	                            mov rbp, rsp	         9	abspath.c	FUNCTION_1
0x40002cb	    0x4881ecb00000	                           sub rsp, 0xb0	         9	abspath.c	FUNCTION_1
0x40002d2	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	         9	abspath.c	FUNCTION_1
0x40002d9	    0x64488b042528	                mov rax, qword fs:[0x28]	         9	abspath.c	FUNCTION_1
0x40002e2	        0x488945f8	                mov qword [rbp - 8], rax	         9	abspath.c	FUNCTION_1
0x40002e6	            0x31c0	                            xor eax, eax	         9	abspath.c	FUNCTION_1
0x40002e8	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        11	abspath.c	FUNCTION_1	CALL_1
0x40002ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        11	abspath.c	FUNCTION_1	CALL_1
0x40002f6	          0x4889d6	                            mov rsi, rdx	        11	abspath.c	FUNCTION_1	CALL_1
0x40002f9	          0x4889c7	                            mov rdi, rax	        11	abspath.c	FUNCTION_1	CALL_1
0x40002fc	      0xe800000000	                          call 0x4000301	        11	abspath.c	FUNCTION_1	CALL_1
0x4000301	            0x85c0	                           test eax, eax	        11	abspath.c	FUNCTION_1	CALL_1
0x4000303	            0x7519	                           jne 0x400031e	        11	abspath.c	FUNCTION_1	CALL_1
0x4000305	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        11	abspath.c	FUNCTION_1	CALL_1
0x400030b	      0x2500f00000	                         and eax, 0xf000	        11	abspath.c	FUNCTION_1	CALL_1
0x4000310	      0x3d00400000	                         cmp eax, 0x4000	        11	abspath.c	FUNCTION_1	CALL_1
0x4000315	            0x7507	                           jne 0x400031e	        11	abspath.c	FUNCTION_1	CALL_1
0x4000317	      0xb801000000	                              mov eax, 1	        11	abspath.c	FUNCTION_1	CALL_1
0x400031c	            0xeb05	                           jmp 0x4000323	        11	abspath.c	FUNCTION_1	CALL_1
0x400031e	      0xb800000000	                              mov eax, 0	        11	abspath.c	FUNCTION_1	CALL_1
0x4000323	        0x488b4df8	                mov rcx, qword [rbp - 8]	        12	abspath.c	FUNCTION_1
0x4000327	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        12	abspath.c	FUNCTION_1
0x4000330	            0x7405	                            je 0x4000337	        12	abspath.c	FUNCTION_1
0x4000332	      0xe800000000	                          call 0x4000337	        12	abspath.c	FUNCTION_1
0x4000337	              0xc9	                                   leave	        12	abspath.c	FUNCTION_1
0x4000338	              0xc3	                                     ret	        12	abspath.c	FUNCTION_1
strbuf_setlen	ELSE,1:FOR,0:CALL,2:WHILE,0:functions,0:DO,0:IF,2:SWITCH,0	43
0x400014b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_41
0x400014c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_41
0x400014f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_41
0x4000153	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_41
0x4000157	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_41
0x400015b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_41	IF_1
0x400015f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_41	IF_1
0x4000162	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_41	IF_1
0x4000165	            0x740d	                            je 0x4000174	       162	strbuf.h	FUNCTION_41	IF_1
0x4000167	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_41	IF_1
0x400016b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_41	IF_1
0x400016e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_41	IF_1
0x4000172	            0xeb05	                           jmp 0x4000179	       162	strbuf.h	FUNCTION_41	IF_1
0x4000174	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_41	IF_1
0x4000179	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_41	IF_1
0x400017d	            0x730f	                           jae 0x400018e	       162	strbuf.h	FUNCTION_41	IF_1
0x400017f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000184	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_41	CALL_1
0x4000189	      0xe800000000	                          call 0x400018e	       163	strbuf.h	FUNCTION_41	CALL_1
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_41
0x4000192	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_41
0x4000196	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_41
0x400019a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_41	IF_2
0x400019e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_41	IF_2
0x40001a2	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_41	IF_2
0x40001a8	            0x7414	                            je 0x40001be	       165	strbuf.h	FUNCTION_41	IF_2
0x40001aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_41	IF_2
0x40001ae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_41	IF_2
0x40001b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_41	IF_2
0x40001b6	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_41	IF_2
0x40001b9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_41	IF_2
0x40001bc	            0xeb24	                           jmp 0x40001e2	       169	strbuf.h	FUNCTION_41
0x40001be	     0xfb605000000	           movzx eax, byte [0x040001c5] 	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001c5	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001c7	            0x7419	                            je 0x40001e2	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001c9	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001ce	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001d3	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001d8	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001dd	      0xe800000000	                          call 0x40001e2	       168	strbuf.h	FUNCTION_41	CALL_2
0x40001e2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_41
0x40001e3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_41
0x40001e4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_41
prefix_filename	ELSE,2:FOR,0:CALL,6:WHILE,0:functions,0:DO,0:IF,2:SWITCH,0	49
0x4000b3a	              0x55	                                push rbp	       254	abspath.c	FUNCTION_11
0x4000b3b	          0x4889e5	                            mov rbp, rsp	       254	abspath.c	FUNCTION_11
0x4000b3e	        0x4883ec40	                           sub rsp, 0x40	       254	abspath.c	FUNCTION_11
0x4000b42	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       254	abspath.c	FUNCTION_11
0x4000b46	        0x488975c0	             mov qword [rbp - 0x40], rsi	       254	abspath.c	FUNCTION_11
0x4000b4a	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	abspath.c	FUNCTION_11
0x4000b53	        0x488945f8	                mov qword [rbp - 8], rax	       254	abspath.c	FUNCTION_11
0x4000b57	            0x31c0	                            xor eax, eax	       254	abspath.c	FUNCTION_11
0x4000b59	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       255	abspath.c	FUNCTION_11
0x4000b61	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       255	abspath.c	FUNCTION_11
0x4000b69	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       255	abspath.c	FUNCTION_11
0x4000b71	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b76	            0x740e	                            je 0x4000b86	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b7c	          0x4889c7	                            mov rdi, rax	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b7f	      0xe800000000	                          call 0x4000b84	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b84	            0xeb05	                           jmp 0x4000b8b	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b86	      0xb800000000	                              mov eax, 0	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b8b	        0x488945d8	             mov qword [rbp - 0x28], rax	       256	abspath.c	FUNCTION_11	CALL_1
0x4000b8f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       258	abspath.c	FUNCTION_11	IF_1
0x4000b94	            0x7431	                            je 0x4000bc7	       258	abspath.c	FUNCTION_11	IF_1
0x4000b96	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000b9a	          0x4889c7	                            mov rdi, rax	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000b9d	      0xe8e6f6ffff	               call sym.is_absolute_path	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000ba2	            0x85c0	                           test eax, eax	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000ba4	            0x740a	                            je 0x4000bb0	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0x4000ba6	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       261	abspath.c	FUNCTION_11	ELSE_1	IF_2
0x4000bae	            0xeb17	                           jmp 0x4000bc7	       261	abspath.c	FUNCTION_11	ELSE_1	IF_2
0x4000bb0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bb4	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bb8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bbc	          0x4889ce	                            mov rsi, rcx	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bbf	          0x4889c7	                            mov rdi, rax	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bc2	      0xe800000000	                          call 0x4000bc7	       263	abspath.c	FUNCTION_11	CALL_3
0x4000bc7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       265	abspath.c	FUNCTION_11	CALL_4
0x4000bcb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       265	abspath.c	FUNCTION_11	CALL_4
0x4000bcf	          0x4889d6	                            mov rsi, rdx	       265	abspath.c	FUNCTION_11	CALL_4
0x4000bd2	          0x4889c7	                            mov rdi, rax	       265	abspath.c	FUNCTION_11	CALL_4
0x4000bd5	      0xe879f6ffff	                  call sym.strbuf_addstr	       265	abspath.c	FUNCTION_11	CALL_4
0x4000bda	        0x488d45e0	                   lea rax, [rbp - 0x20]	       269	abspath.c	FUNCTION_11	CALL_6
0x4000bde	      0xbe00000000	                              mov esi, 0	       269	abspath.c	FUNCTION_11	CALL_6
0x4000be3	          0x4889c7	                            mov rdi, rax	       269	abspath.c	FUNCTION_11	CALL_6
0x4000be6	      0xe800000000	                          call 0x4000beb	       269	abspath.c	FUNCTION_11	CALL_6
0x4000beb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       270	abspath.c	FUNCTION_11
0x4000bef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       270	abspath.c	FUNCTION_11
0x4000bf8	            0x7405	                            je 0x4000bff	       270	abspath.c	FUNCTION_11
0x4000bfa	      0xe800000000	                          call 0x4000bff	       270	abspath.c	FUNCTION_11
0x4000bff	              0xc9	                                   leave	       270	abspath.c	FUNCTION_11
0x4000c00	              0xc3	                                     ret	       270	abspath.c	FUNCTION_11
strbuf_avail	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	18
0x4000115	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_40
0x4000116	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_40
0x4000119	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_40
0x400011d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_40
0x4000121	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_40
0x4000124	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_40
0x4000127	            0x741b	                            je 0x4000144	       141	strbuf.h	FUNCTION_40
0x4000129	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_40
0x400012d	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_40
0x4000130	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_40
0x4000134	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_40
0x4000138	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_40
0x400013b	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_40
0x400013e	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_40
0x4000142	            0xeb05	                           jmp 0x4000149	       141	strbuf.h	FUNCTION_40
0x4000144	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_40
0x4000149	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_40
0x400014a	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_40
git_offset_1st_component	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	11
0x4000062	              0x55	                                push rbp	       371	git-compat-util.h	FUNCTION_53
0x4000063	          0x4889e5	                            mov rbp, rsp	       371	git-compat-util.h	FUNCTION_53
0x4000066	        0x4883ec08	                              sub rsp, 8	       371	git-compat-util.h	FUNCTION_53
0x400006a	        0x48897df8	                mov qword [rbp - 8], rdi	       371	git-compat-util.h	FUNCTION_53
0x400006e	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	git-compat-util.h	FUNCTION_53
0x4000072	           0xfb600	                   movzx eax, byte [rax]	       372	git-compat-util.h	FUNCTION_53
0x4000075	           0xfbec0	                           movsx eax, al	       372	git-compat-util.h	FUNCTION_53
0x4000078	            0x89c7	                            mov edi, eax	       372	git-compat-util.h	FUNCTION_53
0x400007a	      0xe8d0ffffff	                 call sym.git_is_dir_sep	       372	git-compat-util.h	FUNCTION_53
0x400007f	              0xc9	                                   leave	       373	git-compat-util.h	FUNCTION_53
0x4000080	              0xc3	                                     ret	       373	git-compat-util.h	FUNCTION_53
get_root_part	ELSE,0:FOR,0:CALL,3:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	31
0x40004bc	              0x55	                                push rbp	        53	abspath.c	FUNCTION_4
0x40004bd	          0x4889e5	                            mov rbp, rsp	        53	abspath.c	FUNCTION_4
0x40004c0	        0x4883ec20	                           sub rsp, 0x20	        53	abspath.c	FUNCTION_4
0x40004c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	        53	abspath.c	FUNCTION_4
0x40004c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	        53	abspath.c	FUNCTION_4
0x40004cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        54	abspath.c	FUNCTION_4
0x40004d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	        54	abspath.c	FUNCTION_4
0x40004d4	          0x4889c7	                            mov rdi, rax	        54	abspath.c	FUNCTION_4
0x40004d7	      0xe886fbffff	       call sym.git_offset_1st_component	        54	abspath.c	FUNCTION_4
0x40004dc	          0x8945fc	                mov dword [rbp - 4], eax	        54	abspath.c	FUNCTION_4
0x40004df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	abspath.c	FUNCTION_4
0x40004e3	      0xbe00000000	                              mov esi, 0	        56	abspath.c	FUNCTION_4
0x40004e8	          0x4889c7	                            mov rdi, rax	        56	abspath.c	FUNCTION_4
0x40004eb	      0xe85bfcffff	                  call sym.strbuf_setlen	        56	abspath.c	FUNCTION_4
0x40004f0	          0x8b45fc	                mov eax, dword [rbp - 4]	        57	abspath.c	FUNCTION_4	CALL_1
0x40004f3	          0x4863d0	                         movsxd rdx, eax	        57	abspath.c	FUNCTION_4	CALL_1
0x40004f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	abspath.c	FUNCTION_4	CALL_1
0x40004fa	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        57	abspath.c	FUNCTION_4	CALL_1
0x40004fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	abspath.c	FUNCTION_4	CALL_1
0x4000502	          0x4889ce	                            mov rsi, rcx	        57	abspath.c	FUNCTION_4	CALL_1
0x4000505	          0x4889c7	                            mov rdi, rax	        57	abspath.c	FUNCTION_4	CALL_1
0x4000508	      0xe800000000	                          call 0x400050d	        57	abspath.c	FUNCTION_4	CALL_1
0x400050d	          0x8b45fc	                mov eax, dword [rbp - 4]	        61	abspath.c	FUNCTION_4	CALL_3
0x4000510	          0x4863d0	                         movsxd rdx, eax	        61	abspath.c	FUNCTION_4	CALL_3
0x4000513	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        61	abspath.c	FUNCTION_4	CALL_3
0x4000517	      0xbe00000000	                              mov esi, 0	        61	abspath.c	FUNCTION_4	CALL_3
0x400051c	          0x4889c7	                            mov rdi, rax	        61	abspath.c	FUNCTION_4	CALL_3
0x400051f	      0xe800000000	                          call 0x4000524	        61	abspath.c	FUNCTION_4	CALL_3
0x4000524	              0x90	                                     nop	        62	abspath.c	FUNCTION_4
0x4000525	              0xc9	                                   leave	        62	abspath.c	FUNCTION_4
0x4000526	              0xc3	                                     ret	        62	abspath.c	FUNCTION_4
git_has_dos_drive_prefix	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_50
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_50
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_50
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_50
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_50
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_50
get_next_component	ELSE,0:FOR,2:CALL,2:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	61
0x40003e7	              0x55	                                push rbp	        32	abspath.c	FUNCTION_3
0x40003e8	          0x4889e5	                            mov rbp, rsp	        32	abspath.c	FUNCTION_3
0x40003eb	        0x4883ec20	                           sub rsp, 0x20	        32	abspath.c	FUNCTION_3
0x40003ef	        0x48897de8	             mov qword [rbp - 0x18], rdi	        32	abspath.c	FUNCTION_3
0x40003f3	        0x488975e0	             mov qword [rbp - 0x20], rsi	        32	abspath.c	FUNCTION_3
0x40003f7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        33	abspath.c	FUNCTION_3
0x40003ff	    0x48c745f80000	                  mov qword [rbp - 8], 0	        34	abspath.c	FUNCTION_3
0x4000407	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	abspath.c	FUNCTION_3
0x400040b	      0xbe00000000	                              mov esi, 0	        36	abspath.c	FUNCTION_3
0x4000410	          0x4889c7	                            mov rdi, rax	        36	abspath.c	FUNCTION_3
0x4000413	      0xe833fdffff	                  call sym.strbuf_setlen	        36	abspath.c	FUNCTION_3
0x4000418	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	abspath.c	FUNCTION_3	FOR_1
0x400041c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        40	abspath.c	FUNCTION_3	FOR_1
0x4000420	        0x488945f0	             mov qword [rbp - 0x10], rax	        40	abspath.c	FUNCTION_3	FOR_1
0x4000424	            0xeb05	                           jmp 0x400042b	        40	abspath.c	FUNCTION_3	FOR_1
0x4000426	      0x488345f001	               add qword [rbp - 0x10], 1	        40	abspath.c	FUNCTION_3	FOR_1
0x400042b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        40	abspath.c	FUNCTION_3	FOR_1
0x400042f	           0xfb600	                   movzx eax, byte [rax]	        40	abspath.c	FUNCTION_3	FOR_1
0x4000432	           0xfbec0	                           movsx eax, al	        40	abspath.c	FUNCTION_3	FOR_1
0x4000435	            0x89c7	                            mov edi, eax	        40	abspath.c	FUNCTION_3	FOR_1
0x4000437	      0xe813fcffff	                 call sym.git_is_dir_sep	        40	abspath.c	FUNCTION_3	FOR_1
0x400043c	            0x85c0	                           test eax, eax	        40	abspath.c	FUNCTION_3	FOR_1
0x400043e	            0x75e6	                           jne 0x4000426	        40	abspath.c	FUNCTION_3	FOR_1
0x4000440	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	abspath.c	FUNCTION_3	FOR_2
0x4000444	        0x488945f8	                mov qword [rbp - 8], rax	        43	abspath.c	FUNCTION_3	FOR_2
0x4000448	            0xeb05	                           jmp 0x400044f	        43	abspath.c	FUNCTION_3	FOR_2
0x400044a	      0x488345f801	                  add qword [rbp - 8], 1	        43	abspath.c	FUNCTION_3	FOR_2
0x400044f	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	abspath.c	FUNCTION_3	FOR_2
0x4000453	           0xfb600	                   movzx eax, byte [rax]	        43	abspath.c	FUNCTION_3	FOR_2
0x4000456	            0x84c0	                             test al, al	        43	abspath.c	FUNCTION_3	FOR_2
0x4000458	            0x7415	                            je 0x400046f	        43	abspath.c	FUNCTION_3	FOR_2
0x400045a	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	abspath.c	FUNCTION_3	FOR_2
0x400045e	           0xfb600	                   movzx eax, byte [rax]	        43	abspath.c	FUNCTION_3	FOR_2
0x4000461	           0xfbec0	                           movsx eax, al	        43	abspath.c	FUNCTION_3	FOR_2
0x4000464	            0x89c7	                            mov edi, eax	        43	abspath.c	FUNCTION_3	FOR_2
0x4000466	      0xe8e4fbffff	                 call sym.git_is_dir_sep	        43	abspath.c	FUNCTION_3	FOR_2
0x400046b	            0x85c0	                           test eax, eax	        43	abspath.c	FUNCTION_3	FOR_2
0x400046d	            0x74db	                            je 0x400044a	        43	abspath.c	FUNCTION_3	FOR_2
0x400046f	        0x488b55f8	                mov rdx, qword [rbp - 8]	        46	abspath.c	FUNCTION_3	CALL_1
0x4000473	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        46	abspath.c	FUNCTION_3	CALL_1
0x4000477	          0x4829c2	                            sub rdx, rax	        46	abspath.c	FUNCTION_3	CALL_1
0x400047a	          0x4889d0	                            mov rax, rdx	        46	abspath.c	FUNCTION_3	CALL_1
0x400047d	          0x4889c2	                            mov rdx, rax	        46	abspath.c	FUNCTION_3	CALL_1
0x4000480	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        46	abspath.c	FUNCTION_3	CALL_1
0x4000484	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	abspath.c	FUNCTION_3	CALL_1
0x4000488	          0x4889ce	                            mov rsi, rcx	        46	abspath.c	FUNCTION_3	CALL_1
0x400048b	          0x4889c7	                            mov rdi, rax	        46	abspath.c	FUNCTION_3	CALL_1
0x400048e	      0xe800000000	                          call 0x4000493	        46	abspath.c	FUNCTION_3	CALL_1
0x4000493	        0x488b55f8	                mov rdx, qword [rbp - 8]	        48	abspath.c	FUNCTION_3	CALL_2
0x4000497	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	abspath.c	FUNCTION_3	CALL_2
0x400049b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        48	abspath.c	FUNCTION_3	CALL_2
0x400049f	          0x4829c2	                            sub rdx, rax	        48	abspath.c	FUNCTION_3	CALL_2
0x40004a2	          0x4889d0	                            mov rax, rdx	        48	abspath.c	FUNCTION_3	CALL_2
0x40004a5	          0x4889c2	                            mov rdx, rax	        48	abspath.c	FUNCTION_3	CALL_2
0x40004a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	abspath.c	FUNCTION_3	CALL_2
0x40004ac	      0xbe00000000	                              mov esi, 0	        48	abspath.c	FUNCTION_3	CALL_2
0x40004b1	          0x4889c7	                            mov rdi, rax	        48	abspath.c	FUNCTION_3	CALL_2
0x40004b4	      0xe800000000	                          call 0x40004b9	        48	abspath.c	FUNCTION_3	CALL_2
0x40004b9	              0x90	                                     nop	        49	abspath.c	FUNCTION_3
0x40004ba	              0xc9	                                   leave	        49	abspath.c	FUNCTION_3
0x40004bb	              0xc3	                                     ret	        49	abspath.c	FUNCTION_3
absolute_pathdup	ELSE,0:FOR,0:CALL,2:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	25
0x4000acd	              0x55	                                push rbp	       247	abspath.c	FUNCTION_10
0x4000ace	          0x4889e5	                            mov rbp, rsp	       247	abspath.c	FUNCTION_10
0x4000ad1	        0x4883ec30	                           sub rsp, 0x30	       247	abspath.c	FUNCTION_10
0x4000ad5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       247	abspath.c	FUNCTION_10
0x4000ad9	    0x64488b042528	                mov rax, qword fs:[0x28]	       247	abspath.c	FUNCTION_10
0x4000ae2	        0x488945f8	                mov qword [rbp - 8], rax	       247	abspath.c	FUNCTION_10
0x4000ae6	            0x31c0	                            xor eax, eax	       247	abspath.c	FUNCTION_10
0x4000ae8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       248	abspath.c	FUNCTION_10
0x4000af0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       248	abspath.c	FUNCTION_10
0x4000af8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       248	abspath.c	FUNCTION_10
0x4000b00	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	abspath.c	FUNCTION_10	CALL_1
0x4000b04	        0x488d45e0	                   lea rax, [rbp - 0x20]	       249	abspath.c	FUNCTION_10	CALL_1
0x4000b08	          0x4889d6	                            mov rsi, rdx	       249	abspath.c	FUNCTION_10	CALL_1
0x4000b0b	          0x4889c7	                            mov rdi, rax	       249	abspath.c	FUNCTION_10	CALL_1
0x4000b0e	      0xe800000000	                          call 0x4000b13	       249	abspath.c	FUNCTION_10	CALL_1
0x4000b13	        0x488d45e0	                   lea rax, [rbp - 0x20]	       250	abspath.c	FUNCTION_10	CALL_2
0x4000b17	      0xbe00000000	                              mov esi, 0	       250	abspath.c	FUNCTION_10	CALL_2
0x4000b1c	          0x4889c7	                            mov rdi, rax	       250	abspath.c	FUNCTION_10	CALL_2
0x4000b1f	      0xe800000000	                          call 0x4000b24	       250	abspath.c	FUNCTION_10	CALL_2
0x4000b24	        0x488b4df8	                mov rcx, qword [rbp - 8]	       251	abspath.c	FUNCTION_10
0x4000b28	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	abspath.c	FUNCTION_10
0x4000b31	            0x7405	                            je 0x4000b38	       251	abspath.c	FUNCTION_10
0x4000b33	      0xe800000000	                          call 0x4000b38	       251	abspath.c	FUNCTION_10
0x4000b38	              0xc9	                                   leave	       251	abspath.c	FUNCTION_10
0x4000b39	              0xc3	                                     ret	       251	abspath.c	FUNCTION_10
real_path_if_valid	ELSE,0:FOR,0:CALL,1:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	11
0x40009e0	              0x55	                                push rbp	       216	abspath.c	FUNCTION_7
0x40009e1	          0x4889e5	                            mov rbp, rsp	       216	abspath.c	FUNCTION_7
0x40009e4	        0x4883ec10	                           sub rsp, 0x10	       216	abspath.c	FUNCTION_7
0x40009e8	        0x48897df8	                mov qword [rbp - 8], rdi	       216	abspath.c	FUNCTION_7
0x40009ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	abspath.c	FUNCTION_7	CALL_1
0x40009f0	      0xba00000000	                              mov edx, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x40009f5	          0x4889c6	                            mov rsi, rax	       218	abspath.c	FUNCTION_7	CALL_1
0x40009f8	      0xbf00000000	                              mov edi, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x40009fd	      0xe800000000	                          call 0x4000a02	       218	abspath.c	FUNCTION_7	CALL_1
0x4000a02	              0xc9	                                   leave	       219	abspath.c	FUNCTION_7
0x4000a03	              0xc3	                                     ret	       219	abspath.c	FUNCTION_7
git_is_dir_sep	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_52
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_52
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_52
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_52
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_52
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_52
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_52
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_52
strbuf_addstr	ELSE,0:FOR,0:CALL,2:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	17
0x4000253	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_43
0x4000254	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_43
0x4000257	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_43
0x400025b	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_43
0x400025f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_43
0x4000263	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000267	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x400026a	      0xe800000000	                          call 0x400026f	       279	strbuf.h	FUNCTION_43	CALL_2
0x400026f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000272	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000276	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_43	CALL_2
0x400027a	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_43	CALL_2
0x400027d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000280	      0xe800000000	                          call 0x4000285	       279	strbuf.h	FUNCTION_43	CALL_2
0x4000285	              0x90	                                     nop	       280	strbuf.h	FUNCTION_43
0x4000286	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_43
0x4000287	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_43
strip_last_component	ELSE,0:FOR,0:CALL,1:WHILE,2:functions,0:DO,0:IF,0:SWITCH,0	53
0x4000339	              0x55	                                push rbp	        16	abspath.c	FUNCTION_2
0x400033a	          0x4889e5	                            mov rbp, rsp	        16	abspath.c	FUNCTION_2
0x400033d	        0x4883ec20	                           sub rsp, 0x20	        16	abspath.c	FUNCTION_2
0x4000341	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	abspath.c	FUNCTION_2
0x4000345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	abspath.c	FUNCTION_2
0x4000349	        0x488b4010	            mov rax, qword [rax + 0x10] 	        17	abspath.c	FUNCTION_2
0x400034d	          0x4889c7	                            mov rdi, rax	        17	abspath.c	FUNCTION_2
0x4000350	      0xe80dfdffff	       call sym.git_offset_1st_component	        17	abspath.c	FUNCTION_2
0x4000355	            0x4898	                                    cdqe	        17	abspath.c	FUNCTION_2
0x4000357	        0x488945f8	                mov qword [rbp - 8], rax	        17	abspath.c	FUNCTION_2
0x400035b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	abspath.c	FUNCTION_2
0x400035f	        0x488b4008	                mov rax, qword [rax + 8]	        18	abspath.c	FUNCTION_2
0x4000363	        0x488945f0	             mov qword [rbp - 0x10], rax	        18	abspath.c	FUNCTION_2
0x4000367	            0xeb05	                           jmp 0x400036e	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000369	      0x48836df001	               sub qword [rbp - 0x10], 1	        22	abspath.c	FUNCTION_2	WHILE_1
0x400036e	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000372	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000376	            0x732b	                           jae 0x40003a3	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000378	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        21	abspath.c	FUNCTION_2	WHILE_1
0x400037c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000380	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000384	        0x4883ea01	                              sub rdx, 1	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000388	          0x4801d0	                            add rax, rdx	        21	abspath.c	FUNCTION_2	WHILE_1
0x400038b	           0xfb600	                   movzx eax, byte [rax]	        21	abspath.c	FUNCTION_2	WHILE_1
0x400038e	           0xfbec0	                           movsx eax, al	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000391	            0x89c7	                            mov edi, eax	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000393	      0xe8b7fcffff	                 call sym.git_is_dir_sep	        21	abspath.c	FUNCTION_2	WHILE_1
0x4000398	            0x85c0	                           test eax, eax	        21	abspath.c	FUNCTION_2	WHILE_1
0x400039a	            0x74cd	                            je 0x4000369	        21	abspath.c	FUNCTION_2	WHILE_1
0x400039c	            0xeb05	                           jmp 0x40003a3	        24	abspath.c	FUNCTION_2	WHILE_2
0x400039e	      0x48836df001	               sub qword [rbp - 0x10], 1	        25	abspath.c	FUNCTION_2	WHILE_2
0x40003a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003a7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003ab	            0x7324	                           jae 0x40003d1	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003b9	        0x4883ea01	                              sub rdx, 1	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003bd	          0x4801d0	                            add rax, rdx	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003c0	           0xfb600	                   movzx eax, byte [rax]	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003c3	           0xfbec0	                           movsx eax, al	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003c6	            0x89c7	                            mov edi, eax	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003c8	      0xe882fcffff	                 call sym.git_is_dir_sep	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003cd	            0x85c0	                           test eax, eax	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003cf	            0x75cd	                           jne 0x400039e	        24	abspath.c	FUNCTION_2	WHILE_2
0x40003d1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        27	abspath.c	FUNCTION_2	CALL_1
0x40003d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        27	abspath.c	FUNCTION_2	CALL_1
0x40003d9	          0x4889d6	                            mov rsi, rdx	        27	abspath.c	FUNCTION_2	CALL_1
0x40003dc	          0x4889c7	                            mov rdi, rax	        27	abspath.c	FUNCTION_2	CALL_1
0x40003df	      0xe867fdffff	                  call sym.strbuf_setlen	        27	abspath.c	FUNCTION_2	CALL_1
0x40003e4	              0x90	                                     nop	        28	abspath.c	FUNCTION_2
0x40003e5	              0xc9	                                   leave	        28	abspath.c	FUNCTION_2
0x40003e6	              0xc3	                                     ret	        28	abspath.c	FUNCTION_2
strbuf_swap	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	39
0x4000081	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_39
0x4000082	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_39
0x4000085	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_39
0x4000089	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_39
0x400008d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_39
0x4000091	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_39
0x400009a	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_39
0x400009e	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_39
0x40000a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_39
0x40000a4	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_39
0x40000a8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_39
0x40000ac	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_39
0x40000b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_39
0x40000b4	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_39
0x40000b7	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_39
0x40000bb	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_39
0x40000bf	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_39
0x40000c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_39
0x40000c7	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_39
0x40000cb	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_39
0x40000cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_39
0x40000d3	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_39
0x40000d8	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_39
0x40000db	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_39
0x40000de	      0xe800000000	                          call 0x40000e3	       127	strbuf.h	FUNCTION_39
0x40000e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_39
0x40000e7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_39
0x40000eb	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_39
0x40000ee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_39
0x40000f2	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_39
0x40000f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_39
0x40000fa	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_39
0x40000fe	              0x90	                                     nop	       128	strbuf.h	FUNCTION_39
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_39
0x4000103	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_39
0x400010c	            0x7405	                            je 0x4000113	       128	strbuf.h	FUNCTION_39
0x400010e	      0xe800000000	                          call 0x4000113	       128	strbuf.h	FUNCTION_39
0x4000113	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_39
0x4000114	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_39
absolute_path	ELSE,0:FOR,0:CALL,1:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	14
0x4000a98	              0x55	                                push rbp	       239	abspath.c	FUNCTION_9
0x4000a99	          0x4889e5	                            mov rbp, rsp	       239	abspath.c	FUNCTION_9
0x4000a9c	        0x4883ec10	                           sub rsp, 0x10	       239	abspath.c	FUNCTION_9
0x4000aa0	        0x48897df8	                mov qword [rbp - 8], rdi	       239	abspath.c	FUNCTION_9
0x4000aa4	      0xbe00000000	                              mov esi, 0	       241	abspath.c	FUNCTION_9
0x4000aa9	      0xbf00000000	                              mov edi, 0	       241	abspath.c	FUNCTION_9
0x4000aae	      0xe898f6ffff	                  call sym.strbuf_setlen	       241	abspath.c	FUNCTION_9
0x4000ab3	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	abspath.c	FUNCTION_9	CALL_1
0x4000ab7	          0x4889c6	                            mov rsi, rax	       242	abspath.c	FUNCTION_9	CALL_1
0x4000aba	      0xbf00000000	                              mov edi, 0	       242	abspath.c	FUNCTION_9	CALL_1
0x4000abf	      0xe800000000	                          call 0x4000ac4	       242	abspath.c	FUNCTION_9	CALL_1
0x4000ac4	    0x488b05000000	            mov rax, qword [0x04000acb] 	       243	abspath.c	FUNCTION_9
0x4000acb	              0xc9	                                   leave	       244	abspath.c	FUNCTION_9
0x4000acc	              0xc3	                                     ret	       244	abspath.c	FUNCTION_9
is_absolute_path	ELSE,0:FOR,0:CALL,0:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	21
0x4000288	              0x55	                                push rbp	      1153	cache.h	FUNCTION_32
0x4000289	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_32
0x400028c	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_32
0x4000290	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_32
0x4000294	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_32
0x4000298	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_32
0x400029b	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_32
0x400029e	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_32
0x40002a0	      0xe8aafdffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_32
0x40002a5	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_32
0x40002a7	            0x7510	                           jne 0x40002b9	      1154	cache.h	FUNCTION_32
0x40002a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_32
0x40002ad	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_32
0x40002b0	      0xe88bfdffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_32
0x40002b5	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_32
0x40002b7	            0x7407	                            je 0x40002c0	      1154	cache.h	FUNCTION_32
0x40002b9	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_32
0x40002be	            0xeb05	                           jmp 0x40002c5	      1154	cache.h	FUNCTION_32
0x40002c0	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_32
0x40002c5	              0xc9	                                   leave	      1155	cache.h	FUNCTION_32
0x40002c6	              0xc3	                                     ret	      1155	cache.h	FUNCTION_32
strbuf_realpath	ELSE,9:FOR,0:CALL,25:WHILE,1:functions,0:DO,0:IF,20:SWITCH,0	241
0x4000527	              0x55	                                push rbp	        83	abspath.c	FUNCTION_5
0x4000528	          0x4889e5	                            mov rbp, rsp	        83	abspath.c	FUNCTION_5
0x400052b	    0x4881ec400100	                          sub rsp, 0x140	        83	abspath.c	FUNCTION_5
0x4000532	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	        83	abspath.c	FUNCTION_5
0x4000539	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	        83	abspath.c	FUNCTION_5
0x4000540	    0x8995ccfeffff	            mov dword [rbp - 0x134], edx	        83	abspath.c	FUNCTION_5
0x4000546	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	abspath.c	FUNCTION_5
0x400054f	        0x488945f8	                mov qword [rbp - 8], rax	        83	abspath.c	FUNCTION_5
0x4000553	            0x31c0	                            xor eax, eax	        83	abspath.c	FUNCTION_5
0x4000555	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        84	abspath.c	FUNCTION_5
0x4000560	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	        84	abspath.c	FUNCTION_5
0x400056b	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        84	abspath.c	FUNCTION_5
0x4000576	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        85	abspath.c	FUNCTION_5
0x4000581	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	        85	abspath.c	FUNCTION_5
0x400058c	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	        85	abspath.c	FUNCTION_5
0x4000597	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	        86	abspath.c	FUNCTION_5
0x40005a2	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        86	abspath.c	FUNCTION_5
0x40005ad	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        86	abspath.c	FUNCTION_5
0x40005b8	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	        87	abspath.c	FUNCTION_5
0x40005c3	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	        88	abspath.c	FUNCTION_5
0x40005cd	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	        91	abspath.c	FUNCTION_5	IF_1
0x40005d4	           0xfb600	                   movzx eax, byte [rax]	        91	abspath.c	FUNCTION_5	IF_1
0x40005d7	            0x84c0	                             test al, al	        91	abspath.c	FUNCTION_5	IF_1
0x40005d9	            0x751c	                           jne 0x40005f7	        91	abspath.c	FUNCTION_5	IF_1
0x40005db	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	        92	abspath.c	FUNCTION_5	IF_1	IF_2
0x40005e2	     0xf845f030000	                            je 0x4000947	        92	abspath.c	FUNCTION_5	IF_1	IF_2
0x40005e8	      0xbf00000000	                              mov edi, 0	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x40005ed	      0xb800000000	                              mov eax, 0	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x40005f2	      0xe800000000	                          call 0x40005f7	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x40005f7	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	        98	abspath.c	FUNCTION_5	CALL_2
0x40005fe	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	        98	abspath.c	FUNCTION_5	CALL_2
0x4000605	          0x4889d6	                            mov rsi, rdx	        98	abspath.c	FUNCTION_5	CALL_2
0x4000608	          0x4889c7	                            mov rdi, rax	        98	abspath.c	FUNCTION_5	CALL_2
0x400060b	      0xe843fcffff	                  call sym.strbuf_addstr	        98	abspath.c	FUNCTION_5	CALL_2
0x4000610	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	        99	abspath.c	FUNCTION_5	CALL_3
0x4000617	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	        99	abspath.c	FUNCTION_5	CALL_3
0x400061e	          0x4889d6	                            mov rsi, rdx	        99	abspath.c	FUNCTION_5	CALL_3
0x4000621	          0x4889c7	                            mov rdi, rax	        99	abspath.c	FUNCTION_5	CALL_3
0x4000624	      0xe893feffff	                  call sym.get_root_part	        99	abspath.c	FUNCTION_5	CALL_3
0x4000629	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       101	abspath.c	FUNCTION_5	IF_3
0x4000630	        0x488b4008	                mov rax, qword [rax + 8]	       101	abspath.c	FUNCTION_5	IF_3
0x4000634	          0x4885c0	                           test rax, rax	       101	abspath.c	FUNCTION_5	IF_3
0x4000637	     0xf85e6020000	                           jne 0x4000923	       101	abspath.c	FUNCTION_5	IF_3
0x400063d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x4000644	          0x4889c7	                            mov rdi, rax	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x4000647	      0xe800000000	                          call 0x400064c	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x400064c	            0x85c0	                           test eax, eax	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x400064e	     0xf84cf020000	                            je 0x4000923	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x4000654	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       104	abspath.c	FUNCTION_5	IF_3	IF_4	IF_5
0x400065b	     0xf84e9020000	                            je 0x400094a	       104	abspath.c	FUNCTION_5	IF_3	IF_4	IF_5
0x4000661	      0xbf00000000	                              mov edi, 0	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x4000666	      0xb800000000	                              mov eax, 0	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x400066b	      0xe800000000	                          call 0x4000670	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x4000670	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x4000677	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x400067e	          0x4889d6	                            mov rsi, rdx	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x4000681	          0x4889c7	                            mov rdi, rax	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x4000684	      0xe85efdffff	             call sym.get_next_component	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x4000689	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x4000690	          0x4885c0	                           test rax, rax	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x4000693	            0x7505	                           jne 0x400069a	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x4000695	      0xe989020000	                           jmp 0x4000923	       116	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x400069a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006a1	        0x4883f801	                              cmp rax, 1	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006a5	            0x751d	                           jne 0x40006c4	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006a7	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006ae	      0xbe00000000	                              mov esi, 0	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006b3	          0x4889c7	                            mov rdi, rax	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006b6	      0xe800000000	                          call 0x40006bb	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006bb	            0x85c0	                           test eax, eax	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006bd	            0x7505	                           jne 0x40006c4	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x40006bf	      0xe95f020000	                           jmp 0x4000923	       118	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7
0x40006c4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006cb	        0x4883f802	                              cmp rax, 2	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006cf	            0x752c	                           jne 0x40006fd	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006d1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006d8	      0xbe00000000	                              mov esi, 0	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006dd	          0x4889c7	                            mov rdi, rax	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006e0	      0xe800000000	                          call 0x40006e5	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006e5	            0x85c0	                           test eax, eax	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006e7	            0x7514	                           jne 0x40006fd	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x40006e9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x40006f0	          0x4889c7	                            mov rdi, rax	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x40006f3	      0xe841fcffff	           call sym.strip_last_component	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x40006f8	      0xe926020000	                           jmp 0x4000923	       122	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8
0x40006fd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000704	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000708	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x400070f	        0x488b4008	                mov rax, qword [rax + 8]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000713	        0x4883e801	                              sub rax, 1	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000717	          0x4801d0	                            add rax, rdx	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x400071a	           0xfb600	                   movzx eax, byte [rax]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x400071d	           0xfbec0	                           movsx eax, al	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000720	            0x89c7	                            mov edi, eax	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000722	      0xe828f9ffff	                 call sym.git_is_dir_sep	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000727	            0x85c0	                           test eax, eax	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x4000729	            0x7514	                           jne 0x400073f	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9
0x400072b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_10
0x4000732	      0xbe2f000000	                           mov esi, 0x2f	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_10
0x4000737	          0x4889c7	                            mov rdi, rax	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_10
0x400073a	      0xe8a6faffff	                   call sym.strbuf_addch	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_10
0x400073f	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x4000746	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x400074d	          0x4889d6	                            mov rsi, rdx	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x4000750	          0x4889c7	                            mov rdi, rax	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x4000753	      0xe800000000	                          call 0x4000758	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x4000758	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x400075f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x4000763	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x400076a	          0x4889d6	                            mov rsi, rdx	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x400076d	          0x4889c7	                            mov rdi, rax	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x4000770	      0xe800000000	                          call 0x4000775	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x4000775	            0x85c0	                           test eax, eax	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x4000777	            0x7446	                            je 0x40007bf	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10
0x4000779	      0xe800000000	                          call 0x400077e	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x400077e	            0x8b00	                    mov eax, dword [rax]	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x4000780	          0x83f802	                              cmp eax, 2	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x4000783	            0x7510	                           jne 0x4000795	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x4000785	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x400078c	          0x4885c0	                           test rax, rax	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x400078f	     0xf848e010000	                            je 0x4000923	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x4000795	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       133	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12
0x400079c	     0xf84ab010000	                            je 0x400094d	       133	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12
0x40007a2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007a9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007ad	          0x4889c6	                            mov rsi, rax	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007b0	      0xbf00000000	                              mov edi, 0	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007b5	      0xb800000000	                              mov eax, 0	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007ba	      0xe800000000	                          call 0x40007bf	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_12
0x40007bf	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_13
0x40007c5	      0x2500f00000	                         and eax, 0xf000	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_13
0x40007ca	      0x3d00a00000	                         cmp eax, 0xa000	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_13
0x40007cf	     0xf854e010000	                           jne 0x4000923	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_13
0x40007d5	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x40007dc	      0xbe00000000	                              mov esi, 0	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x40007e1	          0x4889c7	                            mov rdi, rax	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x40007e4	      0xe862f9ffff	                  call sym.strbuf_setlen	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x40007e9	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x40007ef	          0x8d5001	                      lea edx, [rax + 1]	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x40007f2	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x40007f8	          0x83f820	                           cmp eax, 0x20	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x40007fb	            0x7e36	                           jle 0x4000833	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x40007fd	      0xe800000000	                          call 0x4000802	       144	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x4000802	    0xc70028000000	                   mov dword [rax], 0x28	       144	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x4000808	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       146	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15
0x400080f	     0xf843b010000	                            je 0x4000950	       146	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15
0x4000815	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x400081c	          0x4889c2	                            mov rdx, rax	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x400081f	      0xbe20000000	                           mov esi, 0x20	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x4000824	      0xbf00000000	                              mov edi, 0	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x4000829	      0xb800000000	                              mov eax, 0	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x400082e	      0xe800000000	                          call 0x4000833	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_14
0x4000833	        0x488b4590	             mov rax, qword [rbp - 0x70]	       154	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x4000837	          0x4889c2	                            mov rdx, rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x400083a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000841	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000845	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x400084c	          0x4889ce	                            mov rsi, rcx	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x400084f	          0x4889c7	                            mov rdi, rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000852	      0xe800000000	                          call 0x4000857	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000857	            0x4898	                                    cdqe	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000859	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x4000860	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	       155	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16
0x4000868	            0x792a	                           jns 0x4000894	       155	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16
0x400086a	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       156	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17
0x4000871	     0xf84dc000000	                            je 0x4000953	       156	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17
0x4000877	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x400087e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x4000882	          0x4889c6	                            mov rsi, rax	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x4000885	      0xbf00000000	                              mov edi, 0	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x400088a	      0xb800000000	                              mov eax, 0	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x400088f	      0xe800000000	                          call 0x4000894	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_16
0x4000894	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_17
0x400089b	          0x4889c7	                            mov rdi, rax	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_17
0x400089e	      0xe8e5f9ffff	               call sym.is_absolute_path	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_17
0x40008a3	            0x85c0	                           test eax, eax	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_17
0x40008a5	            0x741b	                            je 0x40008c2	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_17
0x40008a7	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008ae	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008b5	          0x4889d6	                            mov rsi, rdx	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008b8	          0x4889c7	                            mov rdi, rax	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008bb	      0xe8fcfbffff	                  call sym.get_root_part	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008c0	            0xeb0f	                           jmp 0x40008d1	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_18
0x40008c2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_19
0x40008c9	          0x4889c7	                            mov rdi, rax	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_19
0x40008cc	      0xe868faffff	           call sym.strip_last_component	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_19
0x40008d1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x40008d8	          0x4885c0	                           test rax, rax	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x40008db	            0x742d	                            je 0x400090a	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x40008dd	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_20
0x40008e4	      0xbe2f000000	                           mov esi, 0x2f	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_20
0x40008e9	          0x4889c7	                            mov rdi, rax	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_20
0x40008ec	      0xe8f4f8ffff	                   call sym.strbuf_addch	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_20
0x40008f1	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_21
0x40008f8	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_21
0x40008ff	          0x4889d6	                            mov rsi, rdx	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_21
0x4000902	          0x4889c7	                            mov rdi, rax	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_21
0x4000905	      0xe800000000	                          call 0x400090a	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_21
0x400090a	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_22
0x4000911	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_22
0x4000918	          0x4889d6	                            mov rsi, rdx	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_22
0x400091b	          0x4889c7	                            mov rdi, rax	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_22
0x400091e	      0xe85ef7ffff	                    call sym.strbuf_swap	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_22
0x4000923	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x400092a	          0x4885c0	                           test rax, rax	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x400092d	     0xf853dfdffff	                           jne 0x4000670	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000933	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       192	abspath.c	FUNCTION_5
0x400093a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       192	abspath.c	FUNCTION_5
0x400093e	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       192	abspath.c	FUNCTION_5
0x4000945	            0xeb0d	                           jmp 0x4000954	       192	abspath.c	FUNCTION_5
0x4000947	              0x90	                                     nop	        95	abspath.c	FUNCTION_5	IF_1	ELSE_1
0x4000948	            0xeb0a	                           jmp 0x4000954	        95	abspath.c	FUNCTION_5	IF_1	ELSE_1
0x400094a	              0x90	                                     nop	       107	abspath.c	FUNCTION_5	IF_3	IF_4	ELSE_2
0x400094b	            0xeb07	                           jmp 0x4000954	       107	abspath.c	FUNCTION_5	IF_3	IF_4	ELSE_2
0x400094d	              0x90	                                     nop	       137	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	ELSE_5
0x400094e	            0xeb04	                           jmp 0x4000954	       137	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	ELSE_5
0x4000950	              0x90	                                     nop	       150	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	ELSE_7
0x4000951	            0xeb01	                           jmp 0x4000954	       150	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	ELSE_7
0x4000953	              0x90	                                     nop	       160	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	ELSE_8
0x4000954	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       195	abspath.c	FUNCTION_5	CALL_23
0x400095b	          0x4889c7	                            mov rdi, rax	       195	abspath.c	FUNCTION_5	CALL_23
0x400095e	      0xe800000000	                          call 0x4000963	       195	abspath.c	FUNCTION_5	CALL_23
0x4000963	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       196	abspath.c	FUNCTION_5	CALL_24
0x400096a	          0x4889c7	                            mov rdi, rax	       196	abspath.c	FUNCTION_5	CALL_24
0x400096d	      0xe800000000	                          call 0x4000972	       196	abspath.c	FUNCTION_5	CALL_24
0x4000972	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       197	abspath.c	FUNCTION_5	CALL_25
0x4000979	          0x4889c7	                            mov rdi, rax	       197	abspath.c	FUNCTION_5	CALL_25
0x400097c	      0xe800000000	                          call 0x4000981	       197	abspath.c	FUNCTION_5	CALL_25
0x4000981	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 0	       199	abspath.c	FUNCTION_5	IF_20
0x4000989	            0x7514	                           jne 0x400099f	       199	abspath.c	FUNCTION_5	IF_20
0x400098b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       200	abspath.c	FUNCTION_5	IF_20
0x4000992	      0xbe00000000	                              mov esi, 0	       200	abspath.c	FUNCTION_5	IF_20
0x4000997	          0x4889c7	                            mov rdi, rax	       200	abspath.c	FUNCTION_5	IF_20
0x400099a	      0xe8acf7ffff	                  call sym.strbuf_setlen	       200	abspath.c	FUNCTION_5	IF_20
0x400099f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       202	abspath.c	FUNCTION_5
0x40009a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       203	abspath.c	FUNCTION_5
0x40009aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       203	abspath.c	FUNCTION_5
0x40009b3	            0x7405	                            je 0x40009ba	       203	abspath.c	FUNCTION_5
0x40009b5	      0xe800000000	                          call 0x40009ba	       203	abspath.c	FUNCTION_5
0x40009ba	              0xc9	                                   leave	       203	abspath.c	FUNCTION_5
0x40009bb	              0xc3	                                     ret	       203	abspath.c	FUNCTION_5
real_path	ELSE,0:FOR,0:CALL,1:WHILE,0:functions,0:DO,0:IF,0:SWITCH,0	11
0x40009bc	              0x55	                                push rbp	       210	abspath.c	FUNCTION_6
0x40009bd	          0x4889e5	                            mov rbp, rsp	       210	abspath.c	FUNCTION_6
0x40009c0	        0x4883ec10	                           sub rsp, 0x10	       210	abspath.c	FUNCTION_6
0x40009c4	        0x48897df8	                mov qword [rbp - 8], rdi	       210	abspath.c	FUNCTION_6
0x40009c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	abspath.c	FUNCTION_6	CALL_1
0x40009cc	      0xba01000000	                              mov edx, 1	       212	abspath.c	FUNCTION_6	CALL_1
0x40009d1	          0x4889c6	                            mov rsi, rax	       212	abspath.c	FUNCTION_6	CALL_1
0x40009d4	      0xbf00000000	                              mov edi, 0	       212	abspath.c	FUNCTION_6	CALL_1
0x40009d9	      0xe800000000	                          call 0x40009de	       212	abspath.c	FUNCTION_6	CALL_1
0x40009de	              0xc9	                                   leave	       213	abspath.c	FUNCTION_6
0x40009df	              0xc3	                                     ret	       213	abspath.c	FUNCTION_6
strbuf_addch	ELSE,0:FOR,0:CALL,2:WHILE,0:functions,0:DO,0:IF,1:SWITCH,0	33
0x40001e5	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_42
0x40001e6	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_42
0x40001e9	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_42
0x40001ed	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_42
0x40001f1	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_42
0x40001f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_42	IF_1	CALL_1
0x40001f8	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_42	IF_1	CALL_1
0x40001fb	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_42	IF_1	CALL_1
0x4000200	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_42	IF_1	CALL_1
0x4000203	            0x7511	                           jne 0x4000216	       227	strbuf.h	FUNCTION_42	IF_1	CALL_1
0x4000205	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_42	CALL_2
0x4000209	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_42	CALL_2
0x400020e	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_42	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	       228	strbuf.h	FUNCTION_42	CALL_2
0x4000216	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_42
0x400021a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_42
0x400021e	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_42
0x4000222	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_42
0x4000226	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_42
0x400022a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_42
0x400022e	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_42
0x4000232	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_42
0x4000235	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_42
0x4000238	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_42
0x400023a	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_42
0x400023e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_42
0x4000242	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_42
0x4000246	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_42
0x400024a	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_42
0x400024d	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_42
0x4000250	              0x90	                                     nop	       231	strbuf.h	FUNCTION_42
0x4000251	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_42
0x4000252	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_42
