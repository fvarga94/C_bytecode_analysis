interpret_target	WHILE,0:FOR,0:IF,3:SWITCH,0:CALL,7:ELSE,0:DO,0:functions,0	51
0x400097a	              0x55	                                push rbp	       188	walker.c	FUNCTION_9
0x400097b	          0x4889e5	                            mov rbp, rsp	       188	walker.c	FUNCTION_9
0x400097e	        0x4883ec30	                           sub rsp, 0x30	       188	walker.c	FUNCTION_9
0x4000982	        0x48897de8	             mov qword [rbp - 0x18], rdi	       188	walker.c	FUNCTION_9
0x4000986	        0x488975e0	             mov qword [rbp - 0x20], rsi	       188	walker.c	FUNCTION_9
0x400098a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       188	walker.c	FUNCTION_9
0x400098e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x4000992	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x4000996	          0x4889d6	                            mov rsi, rdx	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x4000999	          0x4889c7	                            mov rdi, rax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x400099c	      0xe800000000	                          call 0x40009a1	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40009a1	            0x85c0	                           test eax, eax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40009a3	            0x7507	                           jne 0x40009ac	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x40009a5	      0xb800000000	                              mov eax, 0	       190	walker.c	FUNCTION_9	IF_1
0x40009aa	            0xeb7c	                           jmp 0x4000a28	       190	walker.c	FUNCTION_9	IF_1
0x40009ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009b0	      0xbe00000000	                              mov esi, 0	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009b5	          0x4889c7	                            mov rdi, rax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009b8	      0xe800000000	                          call 0x40009bd	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009bd	            0x85c0	                           test eax, eax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009bf	            0x7562	                           jne 0x4000a23	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x40009c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40009c5	          0x4889c7	                            mov rdi, rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40009c8	      0xe800000000	                          call 0x40009cd	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40009cd	        0x488945f8	                mov qword [rbp - 8], rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x40009d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009d5	        0x488b4008	                mov rax, qword [rax + 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009d9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009e1	          0x4889ce	                            mov rsi, rcx	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009e4	          0x4889d7	                            mov rdi, rdx	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009e7	            0xffd0	                                call rax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009e9	            0x85c0	                           test eax, eax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009eb	            0x752a	                           jne 0x4000a17	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x40009ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x40009f1	        0x488d5008	                      lea rdx, [rax + 8]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x40009f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x40009f9	          0x4889d6	                            mov rsi, rdx	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x40009fc	          0x4889c7	                            mov rdi, rax	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x40009ff	      0xe8d7f7ffff	                         call sym.oidcpy	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x4000a04	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000a08	          0x4889c7	                            mov rdi, rax	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000a0b	      0xe800000000	                          call 0x4000a10	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x4000a10	      0xb800000000	                              mov eax, 0	       196	walker.c	FUNCTION_9	IF_2	IF_3
0x4000a15	            0xeb11	                           jmp 0x4000a28	       196	walker.c	FUNCTION_9	IF_2	IF_3
0x4000a17	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000a1b	          0x4889c7	                            mov rdi, rax	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000a1e	      0xe800000000	                          call 0x4000a23	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x4000a23	      0xb8ffffffff	                     mov eax, 0xffffffff	       200	walker.c	FUNCTION_9
0x4000a28	              0xc9	                                   leave	       201	walker.c	FUNCTION_9
0x4000a29	              0xc3	                                     ret	       201	walker.c	FUNCTION_9
process	WHILE,0:FOR,0:IF,3:SWITCH,0:CALL,3:ELSE,1:DO,0:functions,0	78
0x4000778	              0x55	                                push rbp	       138	walker.c	FUNCTION_7
0x4000779	          0x4889e5	                            mov rbp, rsp	       138	walker.c	FUNCTION_7
0x400077c	        0x4883ec10	                           sub rsp, 0x10	       138	walker.c	FUNCTION_7
0x4000780	        0x48897df8	                mov qword [rbp - 8], rdi	       138	walker.c	FUNCTION_7
0x4000784	        0x488975f0	             mov qword [rbp - 0x10], rsi	       138	walker.c	FUNCTION_7
0x4000788	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	walker.c	FUNCTION_7	IF_1
0x400078c	            0x8b00	                    mov eax, dword [rax]	       139	walker.c	FUNCTION_7	IF_1
0x400078e	          0xc1e804	                              shr eax, 4	       139	walker.c	FUNCTION_7	IF_1
0x4000791	      0x25ffffff07	                      and eax, 0x7ffffff	       139	walker.c	FUNCTION_7	IF_1
0x4000796	          0x83e002	                              and eax, 2	       139	walker.c	FUNCTION_7	IF_1
0x4000799	            0x85c0	                           test eax, eax	       139	walker.c	FUNCTION_7	IF_1
0x400079b	            0x740a	                            je 0x40007a7	       139	walker.c	FUNCTION_7	IF_1
0x400079d	      0xb800000000	                              mov eax, 0	       140	walker.c	FUNCTION_7	IF_1
0x40007a2	      0xe9da000000	                           jmp 0x4000881	       140	walker.c	FUNCTION_7	IF_1
0x40007a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	walker.c	FUNCTION_7
0x40007ab	            0x8b00	                    mov eax, dword [rax]	       141	walker.c	FUNCTION_7
0x40007ad	          0xc1e804	                              shr eax, 4	       141	walker.c	FUNCTION_7
0x40007b0	      0x25ffffff07	                      and eax, 0x7ffffff	       141	walker.c	FUNCTION_7
0x40007b5	          0x83c802	                               or eax, 2	       141	walker.c	FUNCTION_7
0x40007b8	            0x89c2	                            mov edx, eax	       141	walker.c	FUNCTION_7
0x40007ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	walker.c	FUNCTION_7
0x40007be	    0x81e2ffffff07	                      and edx, 0x7ffffff	       141	walker.c	FUNCTION_7
0x40007c4	            0x89d1	                            mov ecx, edx	       141	walker.c	FUNCTION_7
0x40007c6	          0xc1e104	                              shl ecx, 4	       141	walker.c	FUNCTION_7
0x40007c9	            0x8b10	                    mov edx, dword [rax]	       141	walker.c	FUNCTION_7
0x40007cb	    0x81e20f000080	                     and edx, 0x8000000f	       141	walker.c	FUNCTION_7
0x40007d1	             0x9ca	                             or edx, ecx	       141	walker.c	FUNCTION_7
0x40007d3	            0x8910	                    mov dword [rax], edx	       141	walker.c	FUNCTION_7
0x40007d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007d9	        0x4883c004	                              add rax, 4	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007dd	          0x4889c7	                            mov rdi, rax	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007e0	      0xe800000000	                          call 0x40007e5	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007e5	            0x85c0	                           test eax, eax	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007e7	            0x7430	                            je 0x4000819	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x40007e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	walker.c	FUNCTION_7	IF_2
0x40007ed	            0x8b00	                    mov eax, dword [rax]	       145	walker.c	FUNCTION_7	IF_2
0x40007ef	          0xc1e804	                              shr eax, 4	       145	walker.c	FUNCTION_7	IF_2
0x40007f2	      0x25ffffff07	                      and eax, 0x7ffffff	       145	walker.c	FUNCTION_7	IF_2
0x40007f7	          0x83c804	                               or eax, 4	       145	walker.c	FUNCTION_7	IF_2
0x40007fa	            0x89c2	                            mov edx, eax	       145	walker.c	FUNCTION_7	IF_2
0x40007fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	walker.c	FUNCTION_7	IF_2
0x4000800	    0x81e2ffffff07	                      and edx, 0x7ffffff	       145	walker.c	FUNCTION_7	IF_2
0x4000806	            0x89d1	                            mov ecx, edx	       145	walker.c	FUNCTION_7	IF_2
0x4000808	          0xc1e104	                              shl ecx, 4	       145	walker.c	FUNCTION_7	IF_2
0x400080b	            0x8b10	                    mov edx, dword [rax]	       145	walker.c	FUNCTION_7	IF_2
0x400080d	    0x81e20f000080	                     and edx, 0x8000000f	       145	walker.c	FUNCTION_7	IF_2
0x4000813	             0x9ca	                             or edx, ecx	       145	walker.c	FUNCTION_7	IF_2
0x4000815	            0x8910	                    mov dword [rax], edx	       145	walker.c	FUNCTION_7	IF_2
0x4000817	            0xeb38	                           jmp 0x4000851	       145	walker.c	FUNCTION_7	IF_2
0x4000819	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x400081d	            0x8b00	                    mov eax, dword [rax]	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x400081f	          0xc1e804	                              shr eax, 4	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x4000822	      0x25ffffff07	                      and eax, 0x7ffffff	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x4000827	          0x83e001	                              and eax, 1	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x400082a	            0x85c0	                           test eax, eax	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x400082c	            0x7407	                            je 0x4000835	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x400082e	      0xb800000000	                              mov eax, 0	       149	walker.c	FUNCTION_7	ELSE_1	IF_3
0x4000833	            0xeb4c	                           jmp 0x4000881	       149	walker.c	FUNCTION_7	ELSE_1	IF_3
0x4000835	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x4000839	        0x488b4010	            mov rax, qword [rax + 0x10] 	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x400083d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x4000841	        0x488d4a04	                      lea rcx, [rdx + 4]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x4000845	        0x488b55f8	                mov rdx, qword [rbp - 8]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x4000849	          0x4889ce	                            mov rsi, rcx	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x400084c	          0x4889d7	                            mov rdi, rdx	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x400084f	            0xffd0	                                call rax	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x4000851	    0x488b15000000	            mov rdx, qword [0x04000858] 	       153	walker.c	FUNCTION_7	CALL_3
0x4000858	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	walker.c	FUNCTION_7	CALL_3
0x400085c	          0x4889d6	                            mov rsi, rdx	       153	walker.c	FUNCTION_7	CALL_3
0x400085f	          0x4889c7	                            mov rdi, rax	       153	walker.c	FUNCTION_7	CALL_3
0x4000862	      0xe800000000	                          call 0x4000867	       153	walker.c	FUNCTION_7	CALL_3
0x4000867	    0x488b05000000	            mov rax, qword [0x0400086e] 	       154	walker.c	FUNCTION_7
0x400086e	          0x488b00	                    mov rax, qword [rax]	       154	walker.c	FUNCTION_7
0x4000871	        0x4883c008	                              add rax, 8	       154	walker.c	FUNCTION_7
0x4000875	    0x488905000000	            mov qword [0x0400087c], rax 	       154	walker.c	FUNCTION_7
0x400087c	      0xb800000000	                              mov eax, 0	       155	walker.c	FUNCTION_7
0x4000881	              0xc9	                                   leave	       156	walker.c	FUNCTION_7
0x4000882	              0xc3	                                     ret	       156	walker.c	FUNCTION_7
loop	WHILE,1:FOR,0:IF,5:SWITCH,0:CALL,5:ELSE,0:DO,0:functions,0	66
0x4000883	              0x55	                                push rbp	       159	walker.c	FUNCTION_8
0x4000884	          0x4889e5	                            mov rbp, rsp	       159	walker.c	FUNCTION_8
0x4000887	        0x4883ec20	                           sub rsp, 0x20	       159	walker.c	FUNCTION_8
0x400088b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       159	walker.c	FUNCTION_8
0x400088f	      0xe9cf000000	                           jmp 0x4000963	       162	walker.c	FUNCTION_8	WHILE_1
0x4000894	    0x488b05000000	            mov rax, qword [0x0400089b] 	       163	walker.c	FUNCTION_8	WHILE_1
0x400089b	          0x488b00	                    mov rax, qword [rax]	       163	walker.c	FUNCTION_8	WHILE_1
0x400089e	        0x488945f0	             mov qword [rbp - 0x10], rax	       163	walker.c	FUNCTION_8	WHILE_1
0x40008a2	    0x488b05000000	            mov rax, qword [0x040008a9] 	       164	walker.c	FUNCTION_8	WHILE_1
0x40008a9	        0x488945f8	                mov qword [rbp - 8], rax	       164	walker.c	FUNCTION_8	WHILE_1
0x40008ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x40008b1	        0x488b4008	                mov rax, qword [rax + 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x40008b5	    0x488905000000	            mov qword [0x040008bc], rax 	       165	walker.c	FUNCTION_8	WHILE_1
0x40008bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x40008c0	          0x4889c7	                            mov rdi, rax	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x40008c3	      0xe800000000	                          call 0x40008c8	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x40008c8	    0x488b05000000	            mov rax, qword [0x040008cf] 	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x40008cf	          0x4885c0	                           test rax, rax	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x40008d2	            0x750b	                           jne 0x40008df	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x40008d4	    0x48c705000000	               mov qword [0x040008df], 0	       168	walker.c	FUNCTION_8	WHILE_1	IF_1
0x40008df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008e3	            0x8b00	                    mov eax, dword [rax]	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008e5	          0xc1e804	                              shr eax, 4	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008e8	      0x25ffffff07	                      and eax, 0x7ffffff	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008ed	          0x83e004	                              and eax, 4	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008f0	            0x85c0	                           test eax, eax	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008f2	            0x7533	                           jne 0x4000927	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x40008f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x40008f8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x40008fc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000900	        0x488d4a04	                      lea rcx, [rdx + 4]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000904	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000908	          0x4889ce	                            mov rsi, rcx	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400090b	          0x4889d7	                            mov rdi, rdx	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x400090e	            0xffd0	                                call rax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000910	            0x85c0	                           test eax, eax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000912	            0x7413	                            je 0x4000927	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x4000914	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x4000918	          0x4889c7	                            mov rdi, rax	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x400091b	      0xe8fff9ffff	                 call sym.report_missing	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x4000920	      0xb8ffffffff	                     mov eax, 0xffffffff	       176	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3
0x4000925	            0xeb51	                           jmp 0x4000978	       176	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3
0x4000927	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x400092b	           0xfb600	                   movzx eax, byte [rax]	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x400092e	          0x83e00e	                            and eax, 0xe	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x4000931	            0x84c0	                             test al, al	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x4000933	            0x7510	                           jne 0x4000945	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x4000935	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x4000939	        0x4883c004	                              add rax, 4	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x400093d	          0x4889c7	                            mov rdi, rax	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x4000940	      0xe800000000	                          call 0x4000945	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x4000945	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x4000949	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x400094d	          0x4889d6	                            mov rsi, rdx	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x4000950	          0x4889c7	                            mov rdi, rax	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x4000953	      0xe80bfdffff	                 call sym.process_object	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x4000958	            0x85c0	                           test eax, eax	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x400095a	            0x7407	                            je 0x4000963	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x400095c	      0xb8ffffffff	                     mov eax, 0xffffffff	       182	walker.c	FUNCTION_8	WHILE_1	IF_5
0x4000961	            0xeb15	                           jmp 0x4000978	       182	walker.c	FUNCTION_8	WHILE_1	IF_5
0x4000963	    0x488b05000000	            mov rax, qword [0x0400096a] 	       162	walker.c	FUNCTION_8	WHILE_1
0x400096a	          0x4885c0	                           test rax, rax	       162	walker.c	FUNCTION_8	WHILE_1
0x400096d	     0xf8521ffffff	                           jne 0x4000894	       162	walker.c	FUNCTION_8	WHILE_1
0x4000973	      0xb800000000	                              mov eax, 0	       184	walker.c	FUNCTION_8
0x4000978	              0xc9	                                   leave	       185	walker.c	FUNCTION_8
0x4000979	              0xc3	                                     ret	       185	walker.c	FUNCTION_8
process_commit	WHILE,1:FOR,1:IF,4:SWITCH,0:CALL,8:ELSE,0:DO,0:functions,0	84
0x40004f1	              0x55	                                push rbp	        74	walker.c	FUNCTION_4
0x40004f2	          0x4889e5	                            mov rbp, rsp	        74	walker.c	FUNCTION_4
0x40004f5	        0x4883ec20	                           sub rsp, 0x20	        74	walker.c	FUNCTION_4
0x40004f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        74	walker.c	FUNCTION_4
0x40004fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        74	walker.c	FUNCTION_4
0x4000501	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4000505	          0x4889c7	                            mov rdi, rax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4000508	      0xe813fdffff	                   call sym.parse_commit	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x400050d	            0x85c0	                           test eax, eax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x400050f	            0x7419	                            je 0x400052a	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4000511	      0xb8ffffffff	                     mov eax, 0xffffffff	        78	walker.c	FUNCTION_4	IF_1
0x4000516	      0xe906010000	                           jmp 0x4000621	        78	walker.c	FUNCTION_4	IF_1
0x400051b	      0xbe01000000	                              mov esi, 1	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000520	      0xbf00000000	                              mov edi, 0	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4000525	      0xe800000000	                          call 0x400052a	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x400052a	    0x488b05000000	            mov rax, qword [0x04000531] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000531	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x4000534	            0x741b	                            je 0x4000551	        80	walker.c	FUNCTION_4	WHILE_1
0x4000536	    0x488b05000000	            mov rax, qword [0x0400053d] 	        80	walker.c	FUNCTION_4	WHILE_1
0x400053d	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000540	        0x488b5028	            mov rdx, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4000544	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	walker.c	FUNCTION_4	WHILE_1
0x4000548	        0x488b4028	            mov rax, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x400054c	          0x4839c2	                            cmp rdx, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x400054f	            0x73ca	                           jae 0x400051b	        80	walker.c	FUNCTION_4	WHILE_1
0x4000551	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        84	walker.c	FUNCTION_4	IF_2
0x4000555	            0x8b00	                    mov eax, dword [rax]	        84	walker.c	FUNCTION_4	IF_2
0x4000557	          0xc1e804	                              shr eax, 4	        84	walker.c	FUNCTION_4	IF_2
0x400055a	      0x25ffffff07	                      and eax, 0x7ffffff	        84	walker.c	FUNCTION_4	IF_2
0x400055f	          0x83e001	                              and eax, 1	        84	walker.c	FUNCTION_4	IF_2
0x4000562	            0x85c0	                           test eax, eax	        84	walker.c	FUNCTION_4	IF_2
0x4000564	            0x740a	                            je 0x4000570	        84	walker.c	FUNCTION_4	IF_2
0x4000566	      0xb800000000	                              mov eax, 0	        85	walker.c	FUNCTION_4	IF_2
0x400056b	      0xe9b1000000	                           jmp 0x4000621	        85	walker.c	FUNCTION_4	IF_2
0x4000570	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	walker.c	FUNCTION_4	CALL_3
0x4000574	        0x4883c004	                              add rax, 4	        87	walker.c	FUNCTION_4	CALL_3
0x4000578	          0x4889c6	                            mov rsi, rax	        87	walker.c	FUNCTION_4	CALL_3
0x400057b	      0xbf00000000	                              mov edi, 0	        87	walker.c	FUNCTION_4	CALL_3
0x4000580	      0xe856fcffff	                         call sym.oidcpy	        87	walker.c	FUNCTION_4	CALL_3
0x4000585	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        89	walker.c	FUNCTION_4	CALL_5
0x4000589	        0x4883c004	                              add rax, 4	        89	walker.c	FUNCTION_4	CALL_5
0x400058d	          0x4889c7	                            mov rdi, rax	        89	walker.c	FUNCTION_4	CALL_5
0x4000590	      0xe800000000	                          call 0x4000595	        89	walker.c	FUNCTION_4	CALL_5
0x4000595	          0x4889c2	                            mov rdx, rax	        89	walker.c	FUNCTION_4	CALL_5
0x4000598	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	walker.c	FUNCTION_4	CALL_5
0x400059c	      0xbe00000000	                              mov esi, 0	        89	walker.c	FUNCTION_4	CALL_5
0x40005a1	          0x4889c7	                            mov rdi, rax	        89	walker.c	FUNCTION_4	CALL_5
0x40005a4	      0xb800000000	                              mov eax, 0	        89	walker.c	FUNCTION_4	CALL_5
0x40005a9	      0xe800000000	                          call 0x40005ae	        89	walker.c	FUNCTION_4	CALL_5
0x40005ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005b2	          0x4889c7	                            mov rdi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005b5	      0xe800000000	                          call 0x40005ba	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005ba	          0x4889c2	                            mov rdx, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005c1	          0x4889d6	                            mov rsi, rdx	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005c4	          0x4889c7	                            mov rdi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005c7	      0xe8ac010000	                        call sym.process	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005cc	            0x85c0	                           test eax, eax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005ce	            0x7407	                            je 0x40005d7	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x40005d0	      0xb8ffffffff	                     mov eax, 0xffffffff	        92	walker.c	FUNCTION_4	IF_3
0x40005d5	            0xeb4a	                           jmp 0x4000621	        92	walker.c	FUNCTION_4	IF_3
0x40005d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	walker.c	FUNCTION_4	FOR_1
0x40005db	        0x488b4030	            mov rax, qword [rax + 0x30] 	        94	walker.c	FUNCTION_4	FOR_1
0x40005df	        0x488945f8	                mov qword [rbp - 8], rax	        94	walker.c	FUNCTION_4	FOR_1
0x40005e3	            0xeb30	                           jmp 0x4000615	        94	walker.c	FUNCTION_4	FOR_1
0x40005e5	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005e9	          0x488b00	                    mov rax, qword [rax]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005ec	          0x4889c2	                            mov rdx, rax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005f3	          0x4889d6	                            mov rsi, rdx	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005f6	          0x4889c7	                            mov rdi, rax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005f9	      0xe87a010000	                        call sym.process	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x40005fe	            0x85c0	                           test eax, eax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x4000600	            0x7407	                            je 0x4000609	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x4000602	      0xb8ffffffff	                     mov eax, 0xffffffff	        96	walker.c	FUNCTION_4	FOR_1	IF_4
0x4000607	            0xeb18	                           jmp 0x4000621	        96	walker.c	FUNCTION_4	FOR_1	IF_4
0x4000609	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	walker.c	FUNCTION_4	FOR_1
0x400060d	        0x488b4008	                mov rax, qword [rax + 8]	        94	walker.c	FUNCTION_4	FOR_1
0x4000611	        0x488945f8	                mov qword [rbp - 8], rax	        94	walker.c	FUNCTION_4	FOR_1
0x4000615	      0x48837df800	                  cmp qword [rbp - 8], 0	        94	walker.c	FUNCTION_4	FOR_1
0x400061a	            0x75c9	                           jne 0x40005e5	        94	walker.c	FUNCTION_4	FOR_1
0x400061c	      0xb800000000	                              mov eax, 0	        99	walker.c	FUNCTION_4
0x4000621	              0xc9	                                   leave	       100	walker.c	FUNCTION_4
0x4000622	              0xc3	                                     ret	       100	walker.c	FUNCTION_4
parse_tree	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	10
0x4000201	              0x55	                                push rbp	        21	tree.h	FUNCTION_42
0x4000202	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_42
0x4000205	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_42
0x4000209	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_42
0x400020d	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_42	CALL_1
0x4000211	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_42	CALL_1
0x4000216	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_42	CALL_1
0x4000219	      0xe800000000	                          call 0x400021e	        22	tree.h	FUNCTION_42	CALL_1
0x400021e	              0xc9	                                   leave	        23	tree.h	FUNCTION_42
0x400021f	              0xc3	                                     ret	        23	tree.h	FUNCTION_42
hashcmp	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	13
0x400015f	              0x55	                                push rbp	       974	cache.h	FUNCTION_22
0x4000160	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_22
0x4000163	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_22
0x4000167	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_22
0x400016b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_22
0x400016f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_22	CALL_1
0x4000173	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_22	CALL_1
0x4000177	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_22	CALL_1
0x400017c	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_22	CALL_1
0x400017f	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_22	CALL_1
0x4000182	      0xe800000000	                          call 0x4000187	       975	cache.h	FUNCTION_22	CALL_1
0x4000187	              0xc9	                                   leave	       976	cache.h	FUNCTION_22
0x4000188	              0xc3	                                     ret	       976	cache.h	FUNCTION_22
st_mult	WHILE,0:FOR,0:IF,1:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	22
0x400004b	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_57
0x400004c	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_57
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_57
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_57
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_57
0x400005b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000060	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000062	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000069	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_57	IF_1
0x400006e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000072	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000076	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000078	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x400007c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x4000080	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x4000083	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x4000088	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x400008d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x4000092	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_57
0x4000096	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_57
0x400009b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_57
0x400009c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_57
process_object	WHILE,0:FOR,0:IF,7:SWITCH,0:CALL,5:ELSE,0:DO,0:functions,0	83
0x4000663	              0x55	                                push rbp	       113	walker.c	FUNCTION_6
0x4000664	          0x4889e5	                            mov rbp, rsp	       113	walker.c	FUNCTION_6
0x4000667	              0x53	                                push rbx	       113	walker.c	FUNCTION_6
0x4000668	        0x4883ec18	                           sub rsp, 0x18	       113	walker.c	FUNCTION_6
0x400066c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       113	walker.c	FUNCTION_6
0x4000670	        0x488975e0	             mov qword [rbp - 0x20], rsi	       113	walker.c	FUNCTION_6
0x4000674	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       114	walker.c	FUNCTION_6	IF_1
0x4000678	           0xfb600	                   movzx eax, byte [rax]	       114	walker.c	FUNCTION_6	IF_1
0x400067b	          0x83e00e	                            and eax, 0xe	       114	walker.c	FUNCTION_6	IF_1
0x400067e	            0x3c02	                               cmp al, 2	       114	walker.c	FUNCTION_6	IF_1
0x4000680	            0x752b	                           jne 0x40006ad	       114	walker.c	FUNCTION_6	IF_1
0x4000682	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000686	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400068a	          0x4889d6	                            mov rsi, rdx	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x400068d	          0x4889c7	                            mov rdi, rax	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000690	      0xe85cfeffff	                 call sym.process_commit	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000695	            0x85c0	                           test eax, eax	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000697	            0x740a	                            je 0x40006a3	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x4000699	      0xb8ffffffff	                     mov eax, 0xffffffff	       116	walker.c	FUNCTION_6	IF_1	IF_2
0x400069e	      0xe9ce000000	                           jmp 0x4000771	       116	walker.c	FUNCTION_6	IF_1	IF_2
0x40006a3	      0xb800000000	                              mov eax, 0	       117	walker.c	FUNCTION_6	IF_1
0x40006a8	      0xe9c4000000	                           jmp 0x4000771	       117	walker.c	FUNCTION_6	IF_1
0x40006ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	walker.c	FUNCTION_6	IF_3
0x40006b1	           0xfb600	                   movzx eax, byte [rax]	       119	walker.c	FUNCTION_6	IF_3
0x40006b4	          0x83e00e	                            and eax, 0xe	       119	walker.c	FUNCTION_6	IF_3
0x40006b7	            0x3c04	                               cmp al, 4	       119	walker.c	FUNCTION_6	IF_3
0x40006b9	            0x752b	                           jne 0x40006e6	       119	walker.c	FUNCTION_6	IF_3
0x40006bb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006c3	          0x4889d6	                            mov rsi, rdx	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006c6	          0x4889c7	                            mov rdi, rax	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006c9	      0xe8f7fcffff	                   call sym.process_tree	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006ce	            0x85c0	                           test eax, eax	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006d0	            0x740a	                            je 0x40006dc	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x40006d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       121	walker.c	FUNCTION_6	IF_3	IF_4
0x40006d7	      0xe995000000	                           jmp 0x4000771	       121	walker.c	FUNCTION_6	IF_3	IF_4
0x40006dc	      0xb800000000	                              mov eax, 0	       122	walker.c	FUNCTION_6	IF_3
0x40006e1	      0xe98b000000	                           jmp 0x4000771	       122	walker.c	FUNCTION_6	IF_3
0x40006e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       124	walker.c	FUNCTION_6	IF_5
0x40006ea	           0xfb600	                   movzx eax, byte [rax]	       124	walker.c	FUNCTION_6	IF_5
0x40006ed	          0x83e00e	                            and eax, 0xe	       124	walker.c	FUNCTION_6	IF_5
0x40006f0	            0x3c06	                               cmp al, 6	       124	walker.c	FUNCTION_6	IF_5
0x40006f2	            0x7507	                           jne 0x40006fb	       124	walker.c	FUNCTION_6	IF_5
0x40006f4	      0xb800000000	                              mov eax, 0	       125	walker.c	FUNCTION_6	IF_5
0x40006f9	            0xeb76	                           jmp 0x4000771	       125	walker.c	FUNCTION_6	IF_5
0x40006fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       127	walker.c	FUNCTION_6	IF_6
0x40006ff	           0xfb600	                   movzx eax, byte [rax]	       127	walker.c	FUNCTION_6	IF_6
0x4000702	          0x83e00e	                            and eax, 0xe	       127	walker.c	FUNCTION_6	IF_6
0x4000705	            0x3c08	                               cmp al, 8	       127	walker.c	FUNCTION_6	IF_6
0x4000707	            0x7525	                           jne 0x400072e	       127	walker.c	FUNCTION_6	IF_6
0x4000709	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x400070d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000711	          0x4889d6	                            mov rsi, rdx	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000714	          0x4889c7	                            mov rdi, rax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000717	      0xe807ffffff	                    call sym.process_tag	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x400071c	            0x85c0	                           test eax, eax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x400071e	            0x7407	                            je 0x4000727	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x4000720	      0xb8ffffffff	                     mov eax, 0xffffffff	       129	walker.c	FUNCTION_6	IF_6	IF_7
0x4000725	            0xeb4a	                           jmp 0x4000771	       129	walker.c	FUNCTION_6	IF_6	IF_7
0x4000727	      0xb800000000	                              mov eax, 0	       130	walker.c	FUNCTION_6	IF_6
0x400072c	            0xeb43	                           jmp 0x4000771	       130	walker.c	FUNCTION_6	IF_6
0x400072e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	walker.c	FUNCTION_6
0x4000732	        0x4883c004	                              add rax, 4	       132	walker.c	FUNCTION_6
0x4000736	          0x4889c7	                            mov rdi, rax	       132	walker.c	FUNCTION_6
0x4000739	      0xe800000000	                          call 0x400073e	       132	walker.c	FUNCTION_6
0x400073e	          0x4889c3	                            mov rbx, rax	       132	walker.c	FUNCTION_6
0x4000741	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	walker.c	FUNCTION_6
0x4000745	           0xfb600	                   movzx eax, byte [rax]	       132	walker.c	FUNCTION_6
0x4000748	            0xd0e8	                               shr al, 1	       132	walker.c	FUNCTION_6
0x400074a	          0x83e007	                              and eax, 7	       132	walker.c	FUNCTION_6
0x400074d	           0xfb6c0	                           movzx eax, al	       132	walker.c	FUNCTION_6
0x4000750	            0x89c7	                            mov edi, eax	       132	walker.c	FUNCTION_6
0x4000752	      0xe800000000	                          call 0x4000757	       132	walker.c	FUNCTION_6
0x4000757	          0x4889da	                            mov rdx, rbx	       132	walker.c	FUNCTION_6
0x400075a	          0x4889c6	                            mov rsi, rax	       132	walker.c	FUNCTION_6
0x400075d	      0xbf00000000	                              mov edi, 0	       132	walker.c	FUNCTION_6
0x4000762	      0xb800000000	                              mov eax, 0	       132	walker.c	FUNCTION_6
0x4000767	      0xe800000000	                          call 0x400076c	       132	walker.c	FUNCTION_6
0x400076c	      0xe8cff8ffff	                    call sym.const_error	       132	walker.c	FUNCTION_6
0x4000771	        0x4883c418	                           add rsp, 0x18	       135	walker.c	FUNCTION_6
0x4000775	              0x5b	                                 pop rbx	       135	walker.c	FUNCTION_6
0x4000776	              0x5d	                                 pop rbp	       135	walker.c	FUNCTION_6
0x4000777	              0xc3	                                     ret	       135	walker.c	FUNCTION_6
xstrdup_or_null	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	13
0x400009d	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_61
0x400009e	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_61
0x40000a1	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_61
0x40000a5	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_61
0x40000a9	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000ae	            0x740e	                            je 0x40000be	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000b4	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000b7	      0xe800000000	                          call 0x40000bc	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000bc	            0xeb05	                           jmp 0x40000c3	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000be	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_61	CALL_1
0x40000c3	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_61
0x40000c4	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_61
report_missing	WHILE,0:FOR,0:IF,1:SWITCH,0:CALL,6:ELSE,0:DO,0:functions,0	48
0x400031f	              0x55	                                push rbp	        23	walker.c	FUNCTION_2
0x4000320	          0x4889e5	                            mov rbp, rsp	        23	walker.c	FUNCTION_2
0x4000323	              0x53	                                push rbx	        23	walker.c	FUNCTION_2
0x4000324	        0x4883ec18	                           sub rsp, 0x18	        23	walker.c	FUNCTION_2
0x4000328	        0x48897de8	             mov qword [rbp - 0x18], rdi	        23	walker.c	FUNCTION_2
0x400032c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	walker.c	FUNCTION_2	CALL_1
0x4000330	        0x4883c004	                              add rax, 4	        24	walker.c	FUNCTION_2	CALL_1
0x4000334	          0x4889c7	                            mov rdi, rax	        24	walker.c	FUNCTION_2	CALL_1
0x4000337	      0xe800000000	                          call 0x400033c	        24	walker.c	FUNCTION_2	CALL_1
0x400033c	          0x4889c3	                            mov rbx, rax	        24	walker.c	FUNCTION_2	CALL_1
0x400033f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	walker.c	FUNCTION_2	CALL_2
0x4000343	           0xfb600	                   movzx eax, byte [rax]	        25	walker.c	FUNCTION_2	CALL_2
0x4000346	          0x83e00e	                            and eax, 0xe	        25	walker.c	FUNCTION_2	CALL_2
0x4000349	            0x84c0	                             test al, al	        24	walker.c	FUNCTION_2	CALL_1
0x400034b	            0x741b	                            je 0x4000368	        24	walker.c	FUNCTION_2	CALL_1
0x400034d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	walker.c	FUNCTION_2	CALL_2
0x4000351	           0xfb600	                   movzx eax, byte [rax]	        25	walker.c	FUNCTION_2	CALL_2
0x4000354	            0xd0e8	                               shr al, 1	        25	walker.c	FUNCTION_2	CALL_2
0x4000356	          0x83e007	                              and eax, 7	        25	walker.c	FUNCTION_2	CALL_2
0x4000359	           0xfb6c0	                           movzx eax, al	        25	walker.c	FUNCTION_2	CALL_2
0x400035c	            0x89c7	                            mov edi, eax	        24	walker.c	FUNCTION_2	CALL_1
0x400035e	      0xe800000000	                          call 0x4000363	        24	walker.c	FUNCTION_2	CALL_1
0x4000363	          0x4889c2	                            mov rdx, rax	        24	walker.c	FUNCTION_2	CALL_1
0x4000366	            0xeb05	                           jmp 0x400036d	        24	walker.c	FUNCTION_2	CALL_1
0x4000368	      0xba00000000	                              mov edx, 0	        24	walker.c	FUNCTION_2	CALL_1
0x400036d	    0x488b05000000	            mov rax, qword [0x04000374] 	        24	walker.c	FUNCTION_2	CALL_1
0x4000374	          0x4889d9	                            mov rcx, rbx	        24	walker.c	FUNCTION_2	CALL_1
0x4000377	      0xbe00000000	                              mov esi, 0	        24	walker.c	FUNCTION_2	CALL_1
0x400037c	          0x4889c7	                            mov rdi, rax	        24	walker.c	FUNCTION_2	CALL_1
0x400037f	      0xb800000000	                              mov eax, 0	        24	walker.c	FUNCTION_2	CALL_1
0x4000384	      0xe800000000	                          call 0x4000389	        24	walker.c	FUNCTION_2	CALL_1
0x4000389	      0xbf00000000	                              mov edi, 0	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x400038e	      0xe8f6fdffff	                    call sym.is_null_oid	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x4000393	            0x85c0	                           test eax, eax	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x4000395	            0x7526	                           jne 0x40003bd	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x4000397	      0xbf00000000	                              mov edi, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x400039c	      0xe800000000	                          call 0x40003a1	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003a1	          0x4889c2	                            mov rdx, rax	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003a4	    0x488b05000000	            mov rax, qword [0x040003ab] 	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003ab	      0xbe00000000	                              mov esi, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003b0	          0x4889c7	                            mov rdi, rax	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003b3	      0xb800000000	                              mov eax, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003b8	      0xe800000000	                          call 0x40003bd	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x40003bd	              0x90	                                     nop	        30	walker.c	FUNCTION_2
0x40003be	        0x4883c418	                           add rsp, 0x18	        30	walker.c	FUNCTION_2
0x40003c2	              0x5b	                                 pop rbx	        30	walker.c	FUNCTION_2
0x40003c3	              0x5d	                                 pop rbp	        30	walker.c	FUNCTION_2
0x40003c4	              0xc3	                                     ret	        30	walker.c	FUNCTION_2
walker_free	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,2:ELSE,0:DO,0:functions,0	15
0x4001081	              0x55	                                push rbp	       328	walker.c	FUNCTION_14
0x4001082	          0x4889e5	                            mov rbp, rsp	       328	walker.c	FUNCTION_14
0x4001085	        0x4883ec10	                           sub rsp, 0x10	       328	walker.c	FUNCTION_14
0x4001089	        0x48897df8	                mov qword [rbp - 8], rdi	       328	walker.c	FUNCTION_14
0x400108d	        0x488b45f8	                mov rax, qword [rbp - 8]	       329	walker.c	FUNCTION_14	CALL_1
0x4001091	        0x488b4020	            mov rax, qword [rax + 0x20] 	       329	walker.c	FUNCTION_14	CALL_1
0x4001095	        0x488b55f8	                mov rdx, qword [rbp - 8]	       329	walker.c	FUNCTION_14	CALL_1
0x4001099	          0x4889d7	                            mov rdi, rdx	       329	walker.c	FUNCTION_14	CALL_1
0x400109c	            0xffd0	                                call rax	       329	walker.c	FUNCTION_14	CALL_1
0x400109e	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	walker.c	FUNCTION_14	CALL_2
0x40010a2	          0x4889c7	                            mov rdi, rax	       330	walker.c	FUNCTION_14	CALL_2
0x40010a5	      0xe800000000	                          call 0x40010aa	       330	walker.c	FUNCTION_14	CALL_2
0x40010aa	              0x90	                                     nop	       331	walker.c	FUNCTION_14
0x40010ab	              0xc9	                                   leave	       331	walker.c	FUNCTION_14
0x40010ac	              0xc3	                                     ret	       331	walker.c	FUNCTION_14
walker_targets_free	WHILE,1:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0:functions,0	33
0x4000c54	              0x55	                                push rbp	       245	walker.c	FUNCTION_12
0x4000c55	          0x4889e5	                            mov rbp, rsp	       245	walker.c	FUNCTION_12
0x4000c58	        0x4883ec20	                           sub rsp, 0x20	       245	walker.c	FUNCTION_12
0x4000c5c	          0x897dfc	                mov dword [rbp - 4], edi	       245	walker.c	FUNCTION_12
0x4000c5f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       245	walker.c	FUNCTION_12
0x4000c63	        0x488955e8	             mov qword [rbp - 0x18], rdx	       245	walker.c	FUNCTION_12
0x4000c67	            0xeb45	                           jmp 0x4000cae	       246	walker.c	FUNCTION_12	WHILE_1
0x4000c69	          0x8b45fc	                mov eax, dword [rbp - 4]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c6c	            0x4898	                                    cdqe	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c6e	    0x488d14c50000	                        lea rdx, [rax*8]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c7a	          0x4801d0	                            add rax, rdx	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c7d	          0x488b00	                    mov rax, qword [rax]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c80	          0x4889c7	                            mov rdi, rax	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c83	      0xe800000000	                          call 0x4000c88	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0x4000c88	      0x48837de800	               cmp qword [rbp - 0x18], 0	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x4000c8d	            0x741f	                            je 0x4000cae	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0x4000c8f	          0x8b45fc	                mov eax, dword [rbp - 4]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000c92	            0x4898	                                    cdqe	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000c94	    0x488d14c50000	                        lea rdx, [rax*8]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000c9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000ca0	          0x4801d0	                            add rax, rdx	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000ca3	          0x488b00	                    mov rax, qword [rax]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000ca6	          0x4889c7	                            mov rdi, rax	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000ca9	      0xe800000000	                          call 0x4000cae	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0x4000cae	          0x8b45fc	                mov eax, dword [rbp - 4]	       246	walker.c	FUNCTION_12	WHILE_1
0x4000cb1	          0x8d50ff	                      lea edx, [rax - 1]	       246	walker.c	FUNCTION_12	WHILE_1
0x4000cb4	          0x8955fc	                mov dword [rbp - 4], edx	       246	walker.c	FUNCTION_12	WHILE_1
0x4000cb7	            0x85c0	                           test eax, eax	       246	walker.c	FUNCTION_12	WHILE_1
0x4000cb9	            0x75ae	                           jne 0x4000c69	       246	walker.c	FUNCTION_12	WHILE_1
0x4000cbb	              0x90	                                     nop	       251	walker.c	FUNCTION_12
0x4000cbc	              0xc9	                                   leave	       251	walker.c	FUNCTION_12
0x4000cbd	              0xc3	                                     ret	       251	walker.c	FUNCTION_12
walker_targets_stdin	WHILE,1:FOR,0:IF,3:SWITCH,0:CALL,5:ELSE,0:DO,0:functions,0	112
0x4000aa3	              0x55	                                push rbp	       216	walker.c	FUNCTION_11
0x4000aa4	          0x4889e5	                            mov rbp, rsp	       216	walker.c	FUNCTION_11
0x4000aa7	              0x53	                                push rbx	       216	walker.c	FUNCTION_11
0x4000aa8	        0x4883ec58	                           sub rsp, 0x58	       216	walker.c	FUNCTION_11
0x4000aac	        0x48897da8	             mov qword [rbp - 0x58], rdi	       216	walker.c	FUNCTION_11
0x4000ab0	        0x488975a0	             mov qword [rbp - 0x60], rsi	       216	walker.c	FUNCTION_11
0x4000ab4	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	walker.c	FUNCTION_11
0x4000abd	        0x488945e8	             mov qword [rbp - 0x18], rax	       216	walker.c	FUNCTION_11
0x4000ac1	            0x31c0	                            xor eax, eax	       216	walker.c	FUNCTION_11
0x4000ac3	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       217	walker.c	FUNCTION_11
0x4000aca	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       217	walker.c	FUNCTION_11
0x4000ad1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       218	walker.c	FUNCTION_11
0x4000ad9	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       218	walker.c	FUNCTION_11
0x4000ae1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       218	walker.c	FUNCTION_11
0x4000ae9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       219	walker.c	FUNCTION_11
0x4000aed	    0x48c700000000	                      mov qword [rax], 0	       219	walker.c	FUNCTION_11
0x4000af4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       219	walker.c	FUNCTION_11
0x4000af8	    0x48c700000000	                      mov qword [rax], 0	       219	walker.c	FUNCTION_11
0x4000aff	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       221	walker.c	FUNCTION_11	WHILE_1
0x4000b07	    0x488b15000000	            mov rdx, qword [0x04000b0e] 	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b0e	        0x488d45d0	                   lea rax, [rbp - 0x30]	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b12	          0x4889d6	                            mov rsi, rdx	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b15	          0x4889c7	                            mov rdi, rax	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b18	      0xe800000000	                          call 0x4000b1d	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b1d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b20	     0xf8403010000	                            je 0x4000c29	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0x4000b26	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	walker.c	FUNCTION_11	WHILE_1
0x4000b2a	        0x488945c8	             mov qword [rbp - 0x38], rax	       226	walker.c	FUNCTION_11	WHILE_1
0x4000b2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000b32	      0xbe09000000	                              mov esi, 9	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000b37	          0x4889c7	                            mov rdi, rax	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000b3a	      0xe800000000	                          call 0x4000b3f	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000b3f	        0x488945c0	             mov qword [rbp - 0x40], rax	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0x4000b43	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b48	            0x740f	                            je 0x4000b59	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b4a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b4e	        0x488d5001	                      lea rdx, [rax + 1]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b52	        0x488955c0	             mov qword [rbp - 0x40], rdx	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b56	          0xc60000	                       mov byte [rax], 0	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0x4000b59	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b5c	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b5f	            0x7c77	                            jl 0x4000bd8	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b61	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b65	            0x7407	                            je 0x4000b6e	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b67	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b6a	             0x1c0	                            add eax, eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b6c	            0xeb05	                           jmp 0x4000b73	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b6e	      0xb840000000	                           mov eax, 0x40	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b73	          0x8945bc	             mov dword [rbp - 0x44], eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b76	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b79	            0x4898	                                    cdqe	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b7b	          0x4889c6	                            mov rsi, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b7e	      0xbf08000000	                              mov edi, 8	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b83	      0xe8c3f4ffff	                        call sym.st_mult	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b88	          0x4889c2	                            mov rdx, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b8b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b8f	          0x488b00	                    mov rax, qword [rax]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b92	          0x4889d6	                            mov rsi, rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b95	          0x4889c7	                            mov rdi, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b98	      0xe800000000	                          call 0x4000b9d	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000b9d	          0x4889c2	                            mov rdx, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000ba0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000ba4	          0x488910	                    mov qword [rax], rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000ba7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000baa	            0x4898	                                    cdqe	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bac	          0x4889c6	                            mov rsi, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000baf	      0xbf08000000	                              mov edi, 8	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bb4	      0xe892f4ffff	                        call sym.st_mult	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bb9	          0x4889c2	                            mov rdx, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bbc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bc0	          0x488b00	                    mov rax, qword [rax]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bc3	          0x4889d6	                            mov rsi, rdx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bc6	          0x4889c7	                            mov rdi, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bc9	      0xe800000000	                          call 0x4000bce	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bce	          0x4889c2	                            mov rdx, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bd1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bd5	          0x488910	                    mov qword [rax], rdx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3
0x4000bd8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bdc	          0x488b00	                    mov rax, qword [rax]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bdf	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000be2	          0x4863d2	                         movsxd rdx, edx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000be5	        0x48c1e203	                              shl rdx, 3	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000be9	        0x488d1c10	                    lea rbx, [rax + rdx]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bf1	          0x4889c7	                            mov rdi, rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bf9	          0x488903	                    mov qword [rbx], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_3
0x4000bfc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c00	          0x488b00	                    mov rax, qword [rax]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c03	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c06	          0x4863d2	                         movsxd rdx, edx	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c09	        0x48c1e203	                              shl rdx, 3	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c0d	        0x488d1c10	                    lea rbx, [rax + rdx]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c11	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c15	          0x4889c7	                            mov rdi, rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c18	      0xe880f4ffff	                call sym.xstrdup_or_null	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c1d	          0x488903	                    mov qword [rbx], rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_4
0x4000c20	        0x8345b801	               add dword [rbp - 0x48], 1	       238	walker.c	FUNCTION_11	WHILE_1
0x4000c24	      0xe9d6feffff	                           jmp 0x4000aff	       239	walker.c	FUNCTION_11	WHILE_1
0x4000c29	              0x90	                                     nop	       225	walker.c	FUNCTION_11	WHILE_1	IF_1
0x4000c2a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       240	walker.c	FUNCTION_11	CALL_5
0x4000c2e	          0x4889c7	                            mov rdi, rax	       240	walker.c	FUNCTION_11	CALL_5
0x4000c31	      0xe800000000	                          call 0x4000c36	       240	walker.c	FUNCTION_11	CALL_5
0x4000c36	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       241	walker.c	FUNCTION_11
0x4000c39	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       242	walker.c	FUNCTION_11
0x4000c3d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       242	walker.c	FUNCTION_11
0x4000c46	            0x7405	                            je 0x4000c4d	       242	walker.c	FUNCTION_11
0x4000c48	      0xe800000000	                          call 0x4000c4d	       242	walker.c	FUNCTION_11
0x4000c4d	        0x4883c458	                           add rsp, 0x58	       242	walker.c	FUNCTION_11
0x4000c51	              0x5b	                                 pop rbx	       242	walker.c	FUNCTION_11
0x4000c52	              0x5d	                                 pop rbp	       242	walker.c	FUNCTION_11
0x4000c53	              0xc3	                                     ret	       242	walker.c	FUNCTION_11
walker_say	WHILE,0:FOR,0:IF,1:SWITCH,0:CALL,3:ELSE,0:DO,0:functions,0	45
0x400023f	              0x55	                                push rbp	        13	walker.c	FUNCTION_1
0x4000240	          0x4889e5	                            mov rbp, rsp	        13	walker.c	FUNCTION_1
0x4000243	    0x4881ece00000	                           sub rsp, 0xe0	        13	walker.c	FUNCTION_1
0x400024a	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        13	walker.c	FUNCTION_1
0x4000251	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	        13	walker.c	FUNCTION_1
0x4000258	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        13	walker.c	FUNCTION_1
0x400025f	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        13	walker.c	FUNCTION_1
0x4000266	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        13	walker.c	FUNCTION_1
0x400026d	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        13	walker.c	FUNCTION_1
0x4000274	            0x84c0	                             test al, al	        13	walker.c	FUNCTION_1
0x4000276	            0x7420	                            je 0x4000298	        13	walker.c	FUNCTION_1
0x4000278	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        13	walker.c	FUNCTION_1
0x400027c	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        13	walker.c	FUNCTION_1
0x4000280	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        13	walker.c	FUNCTION_1
0x4000284	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        13	walker.c	FUNCTION_1
0x4000288	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        13	walker.c	FUNCTION_1
0x400028c	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        13	walker.c	FUNCTION_1
0x4000290	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        13	walker.c	FUNCTION_1
0x4000294	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        13	walker.c	FUNCTION_1
0x4000298	    0x64488b042528	                mov rax, qword fs:[0x28]	        13	walker.c	FUNCTION_1
0x40002a1	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        13	walker.c	FUNCTION_1
0x40002a8	            0x31c0	                            xor eax, eax	        13	walker.c	FUNCTION_1
0x40002aa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        14	walker.c	FUNCTION_1	IF_1
0x40002b1	          0x8b4028	            mov eax, dword [rax + 0x28] 	        14	walker.c	FUNCTION_1	IF_1
0x40002b4	            0x85c0	                           test eax, eax	        14	walker.c	FUNCTION_1	IF_1
0x40002b6	            0x744d	                            je 0x4000305	        14	walker.c	FUNCTION_1	IF_1
0x40002b8	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002c2	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002cc	        0x488d4510	                   lea rax, [rbp + 0x10]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002d0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002d7	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002de	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x40002e5	    0x488b05000000	            mov rax, qword [0x040002ec] 	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x40002ec	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x40002f3	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x40002fa	          0x4889ce	                            mov rsi, rcx	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x40002fd	          0x4889c7	                            mov rdi, rax	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x4000300	      0xe800000000	                          call 0x4000305	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x4000305	              0x90	                                     nop	        20	walker.c	FUNCTION_1
0x4000306	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        20	walker.c	FUNCTION_1
0x400030d	    0x644833042528	                xor rax, qword fs:[0x28]	        20	walker.c	FUNCTION_1
0x4000316	            0x7405	                            je 0x400031d	        20	walker.c	FUNCTION_1
0x4000318	      0xe800000000	                          call 0x400031d	        20	walker.c	FUNCTION_1
0x400031d	              0xc9	                                   leave	        20	walker.c	FUNCTION_1
0x400031e	              0xc3	                                     ret	        20	walker.c	FUNCTION_1
process_tree	WHILE,1:FOR,0:IF,6:SWITCH,0:CALL,8:ELSE,1:DO,0:functions,0	79
0x40003c5	              0x55	                                push rbp	        35	walker.c	FUNCTION_3
0x40003c6	          0x4889e5	                            mov rbp, rsp	        35	walker.c	FUNCTION_3
0x40003c9	        0x4883c480	             add rsp, 0xffffffffffffff80	        35	walker.c	FUNCTION_3
0x40003cd	        0x48897d88	             mov qword [rbp - 0x78], rdi	        35	walker.c	FUNCTION_3
0x40003d1	        0x48897580	             mov qword [rbp - 0x80], rsi	        35	walker.c	FUNCTION_3
0x40003d5	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	walker.c	FUNCTION_3
0x40003de	        0x488945f8	                mov qword [rbp - 8], rax	        35	walker.c	FUNCTION_3
0x40003e2	            0x31c0	                            xor eax, eax	        35	walker.c	FUNCTION_3
0x40003e4	        0x488b4580	             mov rax, qword [rbp - 0x80]	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x40003e8	          0x4889c7	                            mov rdi, rax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x40003eb	      0xe811feffff	                     call sym.parse_tree	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x40003f0	            0x85c0	                           test eax, eax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x40003f2	            0x740a	                            je 0x40003fe	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x40003f4	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	walker.c	FUNCTION_3	IF_1
0x40003f9	      0xe9dd000000	                           jmp 0x40004db	        40	walker.c	FUNCTION_3	IF_1
0x40003fe	        0x488b4580	             mov rax, qword [rbp - 0x80]	        42	walker.c	FUNCTION_3	CALL_2
0x4000402	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        42	walker.c	FUNCTION_3	CALL_2
0x4000406	        0x488b4580	             mov rax, qword [rbp - 0x80]	        42	walker.c	FUNCTION_3	CALL_2
0x400040a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        42	walker.c	FUNCTION_3	CALL_2
0x400040e	        0x488d45d0	                   lea rax, [rbp - 0x30]	        42	walker.c	FUNCTION_3	CALL_2
0x4000412	          0x4889ce	                            mov rsi, rcx	        42	walker.c	FUNCTION_3	CALL_2
0x4000415	          0x4889c7	                            mov rdi, rax	        42	walker.c	FUNCTION_3	CALL_2
0x4000418	      0xe800000000	                          call 0x400041d	        42	walker.c	FUNCTION_3	CALL_2
0x400041d	      0xe98d000000	                           jmp 0x40004af	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x4000422	    0x48c745980000	               mov qword [rbp - 0x68], 0	        44	walker.c	FUNCTION_3	WHILE_1
0x400042a	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x400042d	      0x2500f00000	                         and eax, 0xf000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x4000432	      0x3d00e00000	                         cmp eax, 0xe000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x4000437	            0x7502	                           jne 0x400043b	        47	walker.c	FUNCTION_3	WHILE_1	IF_2
0x4000439	            0xeb74	                           jmp 0x40004af	        48	walker.c	FUNCTION_3	WHILE_1	IF_2
0x400043b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x400043e	      0x2500f00000	                         and eax, 0xf000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000443	      0x3d00400000	                         cmp eax, 0x4000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x4000448	            0x7521	                           jne 0x400046b	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_4
0x400044a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x400044e	          0x4889c7	                            mov rdi, rax	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000451	      0xe800000000	                          call 0x4000456	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x4000456	        0x488945a0	             mov qword [rbp - 0x60], rax	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x400045a	      0x48837da000	               cmp qword [rbp - 0x60], 0	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x400045f	            0x7429	                            je 0x400048a	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x4000461	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x4000465	        0x48894598	             mov qword [rbp - 0x68], rax	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x4000469	            0xeb1f	                           jmp 0x400048a	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x400046b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_6
0x400046f	          0x4889c7	                            mov rdi, rax	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_6
0x4000472	      0xe800000000	                          call 0x4000477	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_6
0x4000477	        0x488945a8	             mov qword [rbp - 0x58], rax	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_6
0x400047b	      0x48837da800	               cmp qword [rbp - 0x58], 0	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x4000480	            0x7408	                            je 0x400048a	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x4000482	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        57	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x4000486	        0x48894598	             mov qword [rbp - 0x68], rax	        57	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x400048a	      0x48837d9800	               cmp qword [rbp - 0x68], 0	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x400048f	            0x7417	                            je 0x40004a8	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000491	        0x488b5598	             mov rdx, qword [rbp - 0x68]	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000495	        0x488b4588	             mov rax, qword [rbp - 0x78]	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x4000499	          0x4889d6	                            mov rsi, rdx	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x400049c	          0x4889c7	                            mov rdi, rax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x400049f	      0xe8d4020000	                        call sym.process	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x40004a4	            0x85c0	                           test eax, eax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x40004a6	            0x7407	                            je 0x40004af	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_7
0x40004a8	      0xb8ffffffff	                     mov eax, 0xffffffff	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x40004ad	            0xeb2c	                           jmp 0x40004db	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x40004af	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004b3	        0x488d45d0	                   lea rax, [rbp - 0x30]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004b7	          0x4889d6	                            mov rsi, rdx	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004ba	          0x4889c7	                            mov rdi, rax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004bd	      0xe800000000	                          call 0x40004c2	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004c2	            0x85c0	                           test eax, eax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004c4	     0xf8558ffffff	                           jne 0x4000422	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x40004ca	        0x488b4580	             mov rax, qword [rbp - 0x80]	        62	walker.c	FUNCTION_3	CALL_8
0x40004ce	          0x4889c7	                            mov rdi, rax	        62	walker.c	FUNCTION_3	CALL_8
0x40004d1	      0xe800000000	                          call 0x40004d6	        62	walker.c	FUNCTION_3	CALL_8
0x40004d6	      0xb800000000	                              mov eax, 0	        63	walker.c	FUNCTION_3
0x40004db	        0x488b4df8	                mov rcx, qword [rbp - 8]	        64	walker.c	FUNCTION_3
0x40004df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        64	walker.c	FUNCTION_3
0x40004e8	            0x7405	                            je 0x40004ef	        64	walker.c	FUNCTION_3
0x40004ea	      0xe800000000	                          call 0x40004ef	        64	walker.c	FUNCTION_3
0x40004ef	              0xc9	                                   leave	        64	walker.c	FUNCTION_3
0x40004f0	              0xc3	                                     ret	        64	walker.c	FUNCTION_3
hashcpy	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	14
0x40001b0	              0x55	                                push rbp	       994	cache.h	FUNCTION_26
0x40001b1	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_26
0x40001b4	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_26
0x40001b8	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_26
0x40001bc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_26
0x40001c0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_26	CALL_1
0x40001c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_26	CALL_1
0x40001c8	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_26	CALL_1
0x40001cd	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_26	CALL_1
0x40001d0	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_26	CALL_1
0x40001d3	      0xe800000000	                          call 0x40001d8	       995	cache.h	FUNCTION_26	CALL_1
0x40001d8	              0x90	                                     nop	       996	cache.h	FUNCTION_26
0x40001d9	              0xc9	                                   leave	       996	cache.h	FUNCTION_26
0x40001da	              0xc3	                                     ret	       996	cache.h	FUNCTION_26
mark_complete	WHILE,0:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0:functions,0	35
0x4000a2a	              0x55	                                push rbp	       205	walker.c	FUNCTION_10
0x4000a2b	          0x4889e5	                            mov rbp, rsp	       205	walker.c	FUNCTION_10
0x4000a2e	        0x4883ec30	                           sub rsp, 0x30	       205	walker.c	FUNCTION_10
0x4000a32	        0x48897de8	             mov qword [rbp - 0x18], rdi	       205	walker.c	FUNCTION_10
0x4000a36	        0x488975e0	             mov qword [rbp - 0x20], rsi	       205	walker.c	FUNCTION_10
0x4000a3a	          0x8955dc	             mov dword [rbp - 0x24], edx	       205	walker.c	FUNCTION_10
0x4000a3d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       205	walker.c	FUNCTION_10
0x4000a41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	walker.c	FUNCTION_10	CALL_1
0x4000a45	      0xbe01000000	                              mov esi, 1	       206	walker.c	FUNCTION_10	CALL_1
0x4000a4a	          0x4889c7	                            mov rdi, rax	       206	walker.c	FUNCTION_10	CALL_1
0x4000a4d	      0xe800000000	                          call 0x4000a52	       206	walker.c	FUNCTION_10	CALL_1
0x4000a52	        0x488945f8	                mov qword [rbp - 8], rax	       206	walker.c	FUNCTION_10	CALL_1
0x4000a56	      0x48837df800	                  cmp qword [rbp - 8], 0	       208	walker.c	FUNCTION_10	IF_1
0x4000a5b	            0x743f	                            je 0x4000a9c	       208	walker.c	FUNCTION_10	IF_1
0x4000a5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	walker.c	FUNCTION_10	IF_1
0x4000a61	            0x8b00	                    mov eax, dword [rax]	       209	walker.c	FUNCTION_10	IF_1
0x4000a63	          0xc1e804	                              shr eax, 4	       209	walker.c	FUNCTION_10	IF_1
0x4000a66	      0x25ffffff07	                      and eax, 0x7ffffff	       209	walker.c	FUNCTION_10	IF_1
0x4000a6b	          0x83c801	                               or eax, 1	       209	walker.c	FUNCTION_10	IF_1
0x4000a6e	            0x89c2	                            mov edx, eax	       209	walker.c	FUNCTION_10	IF_1
0x4000a70	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	walker.c	FUNCTION_10	IF_1
0x4000a74	    0x81e2ffffff07	                      and edx, 0x7ffffff	       209	walker.c	FUNCTION_10	IF_1
0x4000a7a	            0x89d1	                            mov ecx, edx	       209	walker.c	FUNCTION_10	IF_1
0x4000a7c	          0xc1e104	                              shl ecx, 4	       209	walker.c	FUNCTION_10	IF_1
0x4000a7f	            0x8b10	                    mov edx, dword [rax]	       209	walker.c	FUNCTION_10	IF_1
0x4000a81	    0x81e20f000080	                     and edx, 0x8000000f	       209	walker.c	FUNCTION_10	IF_1
0x4000a87	             0x9ca	                             or edx, ecx	       209	walker.c	FUNCTION_10	IF_1
0x4000a89	            0x8910	                    mov dword [rax], edx	       209	walker.c	FUNCTION_10	IF_1
0x4000a8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000a8f	      0xbe00000000	                              mov esi, 0	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000a94	          0x4889c7	                            mov rdi, rax	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000a97	      0xe800000000	                          call 0x4000a9c	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0x4000a9c	      0xb800000000	                              mov eax, 0	       212	walker.c	FUNCTION_10
0x4000aa1	              0xc9	                                   leave	       213	walker.c	FUNCTION_10
0x4000aa2	              0xc3	                                     ret	       213	walker.c	FUNCTION_10
oidcpy	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	13
0x40001db	              0x55	                                push rbp	       999	cache.h	FUNCTION_27
0x40001dc	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_27
0x40001df	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_27
0x40001e3	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_27
0x40001e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_27
0x40001eb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_27	CALL_1
0x40001ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_27	CALL_1
0x40001f3	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_27	CALL_1
0x40001f6	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_27	CALL_1
0x40001f9	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_27	CALL_1
0x40001fe	              0x90	                                     nop	      1001	cache.h	FUNCTION_27
0x40001ff	              0xc9	                                   leave	      1001	cache.h	FUNCTION_27
0x4000200	              0xc3	                                     ret	      1001	cache.h	FUNCTION_27
parse_commit	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	10
0x4000220	              0x55	                                push rbp	        74	commit.h	FUNCTION_70
0x4000221	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_70
0x4000224	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_70
0x4000228	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_70
0x400022c	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_70	CALL_1
0x4000230	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_70	CALL_1
0x4000235	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_70	CALL_1
0x4000238	      0xe800000000	                          call 0x400023d	        75	commit.h	FUNCTION_70	CALL_1
0x400023d	              0xc9	                                   leave	        76	commit.h	FUNCTION_70
0x400023e	              0xc3	                                     ret	        76	commit.h	FUNCTION_70
process_tag	WHILE,0:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0:functions,0	20
0x4000623	              0x55	                                push rbp	       103	walker.c	FUNCTION_5
0x4000624	          0x4889e5	                            mov rbp, rsp	       103	walker.c	FUNCTION_5
0x4000627	        0x4883ec10	                           sub rsp, 0x10	       103	walker.c	FUNCTION_5
0x400062b	        0x48897df8	                mov qword [rbp - 8], rdi	       103	walker.c	FUNCTION_5
0x400062f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       103	walker.c	FUNCTION_5
0x4000633	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x4000637	          0x4889c7	                            mov rdi, rax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x400063a	      0xe800000000	                          call 0x400063f	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x400063f	            0x85c0	                           test eax, eax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x4000641	            0x7407	                            je 0x400064a	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x4000643	      0xb8ffffffff	                     mov eax, 0xffffffff	       105	walker.c	FUNCTION_5	IF_1
0x4000648	            0xeb17	                           jmp 0x4000661	       105	walker.c	FUNCTION_5	IF_1
0x400064a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       106	walker.c	FUNCTION_5	CALL_2
0x400064e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       106	walker.c	FUNCTION_5	CALL_2
0x4000652	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	walker.c	FUNCTION_5	CALL_2
0x4000656	          0x4889d6	                            mov rsi, rdx	       106	walker.c	FUNCTION_5	CALL_2
0x4000659	          0x4889c7	                            mov rdi, rax	       106	walker.c	FUNCTION_5	CALL_2
0x400065c	      0xe817010000	                        call sym.process	       106	walker.c	FUNCTION_5	CALL_2
0x4000661	              0xc9	                                   leave	       107	walker.c	FUNCTION_5
0x4000662	              0xc3	                                     ret	       107	walker.c	FUNCTION_5
const_error	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,0:ELSE,0:DO,0:functions,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_48
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_48
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_48
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_48
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_48
walker_fetch	WHILE,0:FOR,2:IF,11:SWITCH,0:CALL,17:ELSE,1:DO,0:functions,0	236
0x4000cbe	              0x55	                                push rbp	       255	walker.c	FUNCTION_13
0x4000cbf	          0x4889e5	                            mov rbp, rsp	       255	walker.c	FUNCTION_13
0x4000cc2	    0x4881ec900000	                           sub rsp, 0x90	       255	walker.c	FUNCTION_13
0x4000cc9	        0x48897d98	             mov qword [rbp - 0x68], rdi	       255	walker.c	FUNCTION_13
0x4000ccd	          0x897594	             mov dword [rbp - 0x6c], esi	       255	walker.c	FUNCTION_13
0x4000cd0	        0x48895588	             mov qword [rbp - 0x78], rdx	       255	walker.c	FUNCTION_13
0x4000cd4	        0x48894d80	             mov qword [rbp - 0x80], rcx	       255	walker.c	FUNCTION_13
0x4000cd8	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	       255	walker.c	FUNCTION_13
0x4000cdf	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	walker.c	FUNCTION_13
0x4000ce8	        0x488945f8	                mov qword [rbp - 8], rax	       255	walker.c	FUNCTION_13
0x4000cec	            0x31c0	                            xor eax, eax	       255	walker.c	FUNCTION_13
0x4000cee	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       256	walker.c	FUNCTION_13
0x4000cf6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       256	walker.c	FUNCTION_13
0x4000cfe	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       256	walker.c	FUNCTION_13
0x4000d06	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       257	walker.c	FUNCTION_13
0x4000d0e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	walker.c	FUNCTION_13
0x4000d16	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       257	walker.c	FUNCTION_13
0x4000d1e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       258	walker.c	FUNCTION_13
0x4000d26	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       259	walker.c	FUNCTION_13	CALL_1
0x4000d29	          0x4863d0	                         movsxd rdx, eax	       259	walker.c	FUNCTION_13	CALL_1
0x4000d2c	          0x4889d0	                            mov rax, rdx	       259	walker.c	FUNCTION_13	CALL_1
0x4000d2f	        0x48c1e002	                              shl rax, 2	       259	walker.c	FUNCTION_13	CALL_1
0x4000d33	          0x4801d0	                            add rax, rdx	       259	walker.c	FUNCTION_13	CALL_1
0x4000d36	        0x48c1e002	                              shl rax, 2	       259	walker.c	FUNCTION_13	CALL_1
0x4000d3a	          0x4889c7	                            mov rdi, rax	       259	walker.c	FUNCTION_13	CALL_1
0x4000d3d	      0xe800000000	                          call 0x4000d42	       259	walker.c	FUNCTION_13	CALL_1
0x4000d42	        0x488945b8	             mov qword [rbp - 0x48], rax	       259	walker.c	FUNCTION_13	CALL_1
0x4000d46	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       260	walker.c	FUNCTION_13
0x4000d4e	    0xc745a4ffffff	     mov dword [rbp - 0x5c], 0xffffffff 	       261	walker.c	FUNCTION_13
0x4000d55	    0xc70500000000	               mov dword [0x04000d5f], 0	       263	walker.c	FUNCTION_13
0x4000d5f	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       265	walker.c	FUNCTION_13	IF_1
0x4000d64	            0x7437	                            je 0x4000d9d	       265	walker.c	FUNCTION_13	IF_1
0x4000d66	        0x488d45e0	                   lea rax, [rbp - 0x20]	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000d6a	          0x4889c7	                            mov rdi, rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000d6d	      0xe800000000	                          call 0x4000d72	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000d72	        0x488945a8	             mov qword [rbp - 0x58], rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0x4000d76	      0x48837da800	               cmp qword [rbp - 0x58], 0	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d7b	            0x7520	                           jne 0x4000d9d	       267	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d81	          0x4889c6	                            mov rsi, rax	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d84	      0xbf00000000	                              mov edi, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d89	      0xb800000000	                              mov eax, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d8e	      0xe800000000	                          call 0x4000d93	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d93	      0xe8a8f2ffff	                    call sym.const_error	       268	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d98	      0xe98f020000	                           jmp 0x400102c	       269	walker.c	FUNCTION_13	IF_1	IF_2
0x4000d9d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       273	walker.c	FUNCTION_13	IF_3
0x4000da1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       273	walker.c	FUNCTION_13	IF_3
0x4000da4	            0x85c0	                           test eax, eax	       273	walker.c	FUNCTION_13	IF_3
0x4000da6	            0x7519	                           jne 0x4000dc1	       273	walker.c	FUNCTION_13	IF_3
0x4000da8	      0xbe00000000	                              mov esi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000dad	      0xbf00000000	                              mov edi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000db2	      0xe800000000	                          call 0x4000db7	       274	walker.c	FUNCTION_13	IF_3	CALL_3
0x4000db7	      0xbf00000000	                              mov edi, 0	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000dbc	      0xe800000000	                          call 0x4000dc1	       275	walker.c	FUNCTION_13	IF_3	CALL_4
0x4000dc1	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       278	walker.c	FUNCTION_13	FOR_1
0x4000dc8	      0xe9bf000000	                           jmp 0x4000e8c	       278	walker.c	FUNCTION_13	FOR_1
0x4000dcd	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dd0	          0x4863d0	                         movsxd rdx, eax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dd3	          0x4889d0	                            mov rax, rdx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dd6	        0x48c1e002	                              shl rax, 2	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dda	          0x4801d0	                            add rax, rdx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000ddd	        0x48c1e002	                              shl rax, 2	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000de1	          0x4889c2	                            mov rdx, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000de4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000de8	          0x4801c2	                            add rdx, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000deb	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dee	            0x4898	                                    cdqe	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000df0	    0x488d0cc50000	                        lea rcx, [rax*8]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000df8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dfc	          0x4801c8	                            add rax, rcx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000dff	          0x488b08	                    mov rcx, qword [rax]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e02	        0x488b4598	             mov rax, qword [rbp - 0x68]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e06	          0x4889ce	                            mov rsi, rcx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e09	          0x4889c7	                            mov rdi, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e0c	      0xe869fbffff	               call sym.interpret_target	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e11	            0x85c0	                           test eax, eax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e13	            0x7433	                            je 0x4000e48	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_5
0x4000e15	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e18	            0x4898	                                    cdqe	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e1a	    0x488d14c50000	                        lea rdx, [rax*8]	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e22	        0x488b4588	             mov rax, qword [rbp - 0x78]	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e26	          0x4801d0	                            add rax, rdx	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e29	          0x488b00	                    mov rax, qword [rax]	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e2c	          0x4889c6	                            mov rsi, rax	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e2f	      0xbf00000000	                              mov edi, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e34	      0xb800000000	                              mov eax, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e39	      0xe800000000	                          call 0x4000e3e	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e3e	      0xe8fdf1ffff	                    call sym.const_error	       280	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e43	      0xe9e4010000	                           jmp 0x400102c	       281	walker.c	FUNCTION_13	FOR_1	IF_4
0x4000e48	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e4b	          0x4863d0	                         movsxd rdx, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e4e	          0x4889d0	                            mov rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e51	        0x48c1e002	                              shl rax, 2	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e55	          0x4801d0	                            add rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e58	        0x48c1e002	                              shl rax, 2	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e5c	          0x4889c2	                            mov rdx, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e63	          0x4801d0	                            add rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e66	          0x4889c7	                            mov rdi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e69	      0xe800000000	                          call 0x4000e6e	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e6e	          0x4889c2	                            mov rdx, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e71	        0x488b4598	             mov rax, qword [rbp - 0x68]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e75	          0x4889d6	                            mov rsi, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e78	          0x4889c7	                            mov rdi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e7b	      0xe8f8f8ffff	                        call sym.process	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e80	            0x85c0	                           test eax, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e82	     0xf85a0010000	                           jne 0x4001028	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_7
0x4000e88	        0x8345a001	               add dword [rbp - 0x60], 1	       278	walker.c	FUNCTION_13	FOR_1
0x4000e8c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       278	walker.c	FUNCTION_13	FOR_1
0x4000e8f	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       278	walker.c	FUNCTION_13	FOR_1
0x4000e92	     0xf8c35ffffff	                            jl 0x4000dcd	       278	walker.c	FUNCTION_13	FOR_1
0x4000e98	        0x488b4598	             mov rax, qword [rbp - 0x68]	       287	walker.c	FUNCTION_13	IF_6	CALL_8
0x4000e9c	          0x4889c7	                            mov rdi, rax	       287	walker.c	FUNCTION_13	IF_6	CALL_8
0x4000e9f	      0xe8dff9ffff	                           call sym.loop	       287	walker.c	FUNCTION_13	IF_6	CALL_8
0x4000ea4	            0x85c0	                           test eax, eax	       287	walker.c	FUNCTION_13	IF_6	CALL_8
0x4000ea6	     0xf857f010000	                           jne 0x400102b	       287	walker.c	FUNCTION_13	IF_6	CALL_8
0x4000eac	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       289	walker.c	FUNCTION_13	IF_7
0x4000eb1	            0x750c	                           jne 0x4000ebf	       289	walker.c	FUNCTION_13	IF_7
0x4000eb3	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       290	walker.c	FUNCTION_13	IF_7
0x4000eba	      0xe96d010000	                           jmp 0x400102c	       291	walker.c	FUNCTION_13	IF_7
0x4000ebf	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       293	walker.c	FUNCTION_13	IF_8
0x4000ec7	            0x741f	                            je 0x4000ee8	       293	walker.c	FUNCTION_13	IF_8
0x4000ec9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ed0	          0x4889c6	                            mov rsi, rax	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ed3	      0xbf00000000	                              mov edi, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ed8	      0xb800000000	                              mov eax, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000edd	      0xe800000000	                          call 0x4000ee2	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ee2	        0x488945b0	             mov qword [rbp - 0x50], rax	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ee6	            0xeb08	                           jmp 0x4000ef0	       294	walker.c	FUNCTION_13	IF_8	CALL_9
0x4000ee8	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       296	walker.c	FUNCTION_13	ELSE_1
0x4000ef0	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       298	walker.c	FUNCTION_13	FOR_2
0x4000ef7	      0xe9e3000000	                           jmp 0x4000fdf	       298	walker.c	FUNCTION_13	FOR_2
0x4000efc	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000eff	            0x4898	                                    cdqe	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f01	    0x488d14c50000	                        lea rdx, [rax*8]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f09	        0x488b4580	             mov rax, qword [rbp - 0x80]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f0d	          0x4801d0	                            add rax, rdx	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f10	          0x488b00	                    mov rax, qword [rax]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f13	          0x4885c0	                           test rax, rax	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f16	     0xf84be000000	                            je 0x4000fda	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000f1c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       301	walker.c	FUNCTION_13	FOR_2
0x4000f20	      0xbe00000000	                              mov esi, 0	       301	walker.c	FUNCTION_13	FOR_2
0x4000f25	          0x4889c7	                            mov rdi, rax	       301	walker.c	FUNCTION_13	FOR_2
0x4000f28	      0xe898f1ffff	                  call sym.strbuf_setlen	       301	walker.c	FUNCTION_13	FOR_2
0x4000f2d	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f30	            0x4898	                                    cdqe	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f32	    0x488d14c50000	                        lea rdx, [rax*8]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f3a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f3e	          0x4801d0	                            add rax, rdx	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f41	          0x488b10	                    mov rdx, qword [rax]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f44	        0x488d45c0	                   lea rax, [rbp - 0x40]	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f48	      0xbe00000000	                              mov esi, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f4d	          0x4889c7	                            mov rdi, rax	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f50	      0xb800000000	                              mov eax, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f55	      0xe800000000	                          call 0x4000f5a	       302	walker.c	FUNCTION_13	FOR_2	CALL_10
0x4000f5a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f5f	            0x7406	                            je 0x4000f67	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f61	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f65	            0xeb05	                           jmp 0x4000f6c	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f67	      0xb900000000	                              mov ecx, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f6c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f6f	          0x4863d0	                         movsxd rdx, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f72	          0x4889d0	                            mov rax, rdx	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000f75	        0x48c1e002	                              shl rax, 2	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000f79	          0x4801d0	                            add rax, rdx	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000f7c	        0x48c1e002	                              shl rax, 2	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000f80	          0x4889c2	                            mov rdx, rax	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000f83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f87	        0x488d3c02	                    lea rdi, [rdx + rax]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f8b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f8f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f93	        0x4883ec08	                              sub rsp, 8	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f97	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f9b	              0x52	                                push rdx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f9c	          0x4989c9	                             mov r9, rcx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000f9f	    0x41b800000000	                              mov r8d, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fa5	      0xb900000000	                              mov ecx, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000faa	          0x4889fa	                            mov rdx, rdi	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fad	          0x4889c7	                            mov rdi, rax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fb0	      0xe800000000	                          call 0x4000fb5	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fb5	        0x4883c410	                           add rsp, 0x10	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fb9	            0x85c0	                           test eax, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fbb	            0x741e	                            je 0x4000fdb	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_11
0x4000fbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fc1	          0x4889c6	                            mov rsi, rax	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fc4	      0xbf00000000	                              mov edi, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fc9	      0xb800000000	                              mov eax, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fce	      0xe800000000	                          call 0x4000fd3	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fd3	      0xe868f0ffff	                    call sym.const_error	       307	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fd8	            0xeb52	                           jmp 0x400102c	       308	walker.c	FUNCTION_13	FOR_2	IF_10
0x4000fda	              0x90	                                     nop	       300	walker.c	FUNCTION_13	FOR_2	IF_9
0x4000fdb	        0x8345a001	               add dword [rbp - 0x60], 1	       298	walker.c	FUNCTION_13	FOR_2
0x4000fdf	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       298	walker.c	FUNCTION_13	FOR_2
0x4000fe2	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       298	walker.c	FUNCTION_13	FOR_2
0x4000fe5	     0xf8c11ffffff	                            jl 0x4000efc	       298	walker.c	FUNCTION_13	FOR_2
0x4000feb	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000fef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000ff3	          0x4889d6	                            mov rsi, rdx	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000ff6	          0x4889c7	                            mov rdi, rax	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000ff9	      0xe800000000	                          call 0x4000ffe	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4000ffe	            0x85c0	                           test eax, eax	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4001000	            0x741d	                            je 0x400101f	       311	walker.c	FUNCTION_13	IF_11	CALL_12
0x4001002	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       312	walker.c	FUNCTION_13	IF_11
0x4001006	          0x4889c6	                            mov rsi, rax	       312	walker.c	FUNCTION_13	IF_11
0x4001009	      0xbf00000000	                              mov edi, 0	       312	walker.c	FUNCTION_13	IF_11
0x400100e	      0xb800000000	                              mov eax, 0	       312	walker.c	FUNCTION_13	IF_11
0x4001013	      0xe800000000	                          call 0x4001018	       312	walker.c	FUNCTION_13	IF_11
0x4001018	      0xe823f0ffff	                    call sym.const_error	       312	walker.c	FUNCTION_13	IF_11
0x400101d	            0xeb0d	                           jmp 0x400102c	       313	walker.c	FUNCTION_13	IF_11
0x400101f	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       316	walker.c	FUNCTION_13
0x4001026	            0xeb04	                           jmp 0x400102c	       316	walker.c	FUNCTION_13
0x4001028	              0x90	                                     nop	       284	walker.c	FUNCTION_13	FOR_1	IF_5
0x4001029	            0xeb01	                           jmp 0x400102c	       284	walker.c	FUNCTION_13	FOR_1	IF_5
0x400102b	              0x90	                                     nop	       288	walker.c	FUNCTION_13	IF_6
0x400102c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       319	walker.c	FUNCTION_13	CALL_13
0x4001030	          0x4889c7	                            mov rdi, rax	       319	walker.c	FUNCTION_13	CALL_13
0x4001033	      0xe800000000	                          call 0x4001038	       319	walker.c	FUNCTION_13	CALL_13
0x4001038	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       320	walker.c	FUNCTION_13	CALL_14
0x400103c	          0x4889c7	                            mov rdi, rax	       320	walker.c	FUNCTION_13	CALL_14
0x400103f	      0xe800000000	                          call 0x4001044	       320	walker.c	FUNCTION_13	CALL_14
0x4001044	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       321	walker.c	FUNCTION_13	CALL_15
0x4001048	          0x4889c7	                            mov rdi, rax	       321	walker.c	FUNCTION_13	CALL_15
0x400104b	      0xe800000000	                          call 0x4001050	       321	walker.c	FUNCTION_13	CALL_15
0x4001050	        0x488d45e0	                   lea rax, [rbp - 0x20]	       322	walker.c	FUNCTION_13	CALL_16
0x4001054	          0x4889c7	                            mov rdi, rax	       322	walker.c	FUNCTION_13	CALL_16
0x4001057	      0xe800000000	                          call 0x400105c	       322	walker.c	FUNCTION_13	CALL_16
0x400105c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       323	walker.c	FUNCTION_13	CALL_17
0x4001060	          0x4889c7	                            mov rdi, rax	       323	walker.c	FUNCTION_13	CALL_17
0x4001063	      0xe800000000	                          call 0x4001068	       323	walker.c	FUNCTION_13	CALL_17
0x4001068	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       324	walker.c	FUNCTION_13
0x400106b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       325	walker.c	FUNCTION_13
0x400106f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       325	walker.c	FUNCTION_13
0x4001078	            0x7405	                            je 0x400107f	       325	walker.c	FUNCTION_13
0x400107a	      0xe800000000	                          call 0x400107f	       325	walker.c	FUNCTION_13
0x400107f	              0xc9	                                   leave	       325	walker.c	FUNCTION_13
0x4001080	              0xc3	                                     ret	       325	walker.c	FUNCTION_13
is_null_oid	WHILE,0:FOR,0:IF,0:SWITCH,0:CALL,1:ELSE,0:DO,0:functions,0	13
0x4000189	              0x55	                                push rbp	       989	cache.h	FUNCTION_25
0x400018a	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_25
0x400018d	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_25
0x4000191	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_25
0x4000195	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_25	CALL_1
0x4000199	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_25	CALL_1
0x400019e	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_25	CALL_1
0x40001a1	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_25	CALL_1
0x40001a6	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_25	CALL_1
0x40001a8	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_25	CALL_1
0x40001ab	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_25	CALL_1
0x40001ae	              0xc9	                                   leave	       991	cache.h	FUNCTION_25
0x40001af	              0xc3	                                     ret	       991	cache.h	FUNCTION_25
strbuf_setlen	WHILE,0:FOR,0:IF,2:SWITCH,0:CALL,2:ELSE,1:DO,0:functions,0	43
0x40000c5	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_73
0x40000c6	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_73
0x40000c9	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_73
0x40000cd	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_73
0x40000d1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_73
0x40000d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_73	IF_1
0x40000d9	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_73	IF_1
0x40000dc	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_73	IF_1
0x40000df	            0x740d	                            je 0x40000ee	       162	strbuf.h	FUNCTION_73	IF_1
0x40000e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_73	IF_1
0x40000e5	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_73	IF_1
0x40000e8	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_73	IF_1
0x40000ec	            0xeb05	                           jmp 0x40000f3	       162	strbuf.h	FUNCTION_73	IF_1
0x40000ee	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_73	IF_1
0x40000f3	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_73	IF_1
0x40000f7	            0x730f	                           jae 0x4000108	       162	strbuf.h	FUNCTION_73	IF_1
0x40000f9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_73	CALL_1
0x40000fe	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_73	CALL_1
0x4000103	      0xe800000000	                          call 0x4000108	       163	strbuf.h	FUNCTION_73	CALL_1
0x4000108	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_73
0x400010c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_73
0x4000110	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_73
0x4000114	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_73	IF_2
0x4000118	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_73	IF_2
0x400011c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_73	IF_2
0x4000122	            0x7414	                            je 0x4000138	       165	strbuf.h	FUNCTION_73	IF_2
0x4000124	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_73	IF_2
0x4000128	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_73	IF_2
0x400012c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_73	IF_2
0x4000130	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_73	IF_2
0x4000133	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_73	IF_2
0x4000136	            0xeb24	                           jmp 0x400015c	       169	strbuf.h	FUNCTION_73
0x4000138	     0xfb605000000	           movzx eax, byte [0x0400013f] 	       168	strbuf.h	FUNCTION_73	CALL_2
0x400013f	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_73	CALL_2
0x4000141	            0x7419	                            je 0x400015c	       168	strbuf.h	FUNCTION_73	CALL_2
0x4000143	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_73	CALL_2
0x4000148	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_73	CALL_2
0x400014d	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_73	CALL_2
0x4000152	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_73	CALL_2
0x4000157	      0xe800000000	                          call 0x400015c	       168	strbuf.h	FUNCTION_73	CALL_2
0x400015c	              0x90	                                     nop	       169	strbuf.h	FUNCTION_73
0x400015d	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_73
0x400015e	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_73
