strbuf_add_lines	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	19
0x40020c2	              0x55	                                push rbp	       666	strbuf.c	FUNCTION_47
0x40020c3	          0x4889e5	                            mov rbp, rsp	       666	strbuf.c	FUNCTION_47
0x40020c6	        0x4883ec20	                           sub rsp, 0x20	       666	strbuf.c	FUNCTION_47
0x40020ca	        0x48897df8	                mov qword [rbp - 8], rdi	       666	strbuf.c	FUNCTION_47
0x40020ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	       666	strbuf.c	FUNCTION_47
0x40020d2	        0x488955e8	             mov qword [rbp - 0x18], rdx	       666	strbuf.c	FUNCTION_47
0x40020d6	        0x48894de0	             mov qword [rbp - 0x20], rcx	       666	strbuf.c	FUNCTION_47
0x40020da	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020de	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020e2	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020ea	          0x4989c8	                             mov r8, rcx	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020ed	          0x4889d1	                            mov rcx, rdx	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020f0	      0xba00000000	                              mov edx, 0	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020f5	          0x4889c7	                            mov rdi, rax	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020f8	      0xe80bf1ffff	                      call sym.add_lines	       667	strbuf.c	FUNCTION_47	CALL_1
0x40020fd	              0x90	                                     nop	       668	strbuf.c	FUNCTION_47
0x40020fe	              0xc9	                                   leave	       668	strbuf.c	FUNCTION_47
0x40020ff	              0xc3	                                     ret	       668	strbuf.c	FUNCTION_47
strbuf_trim	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,0:ELSE,0	13
0x40007f3	              0x55	                                push rbp	       104	strbuf.c	FUNCTION_9
0x40007f4	          0x4889e5	                            mov rbp, rsp	       104	strbuf.c	FUNCTION_9
0x40007f7	        0x4883ec10	                           sub rsp, 0x10	       104	strbuf.c	FUNCTION_9
0x40007fb	        0x48897df8	                mov qword [rbp - 8], rdi	       104	strbuf.c	FUNCTION_9
0x40007ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	strbuf.c	FUNCTION_9	CALL_1
0x4000803	          0x4889c7	                            mov rdi, rax	       105	strbuf.c	FUNCTION_9	CALL_1
0x4000806	      0xe800000000	                          call 0x400080b	       105	strbuf.c	FUNCTION_9	CALL_1
0x400080b	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	strbuf.c	FUNCTION_9	CALL_2
0x400080f	          0x4889c7	                            mov rdi, rax	       106	strbuf.c	FUNCTION_9	CALL_2
0x4000812	      0xe800000000	                          call 0x4000817	       106	strbuf.c	FUNCTION_9	CALL_2
0x4000817	              0x90	                                     nop	       107	strbuf.c	FUNCTION_9
0x4000818	              0xc9	                                   leave	       107	strbuf.c	FUNCTION_9
0x4000819	              0xc3	                                     ret	       107	strbuf.c	FUNCTION_9
add_lines	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,4:DO,0:IF,0:ELSE,0	68
0x4001208	              0x55	                                push rbp	       281	strbuf.c	FUNCTION_26
0x4001209	          0x4889e5	                            mov rbp, rsp	       281	strbuf.c	FUNCTION_26
0x400120c	        0x4883ec40	                           sub rsp, 0x40	       281	strbuf.c	FUNCTION_26
0x4001210	        0x48897de8	             mov qword [rbp - 0x18], rdi	       281	strbuf.c	FUNCTION_26
0x4001214	        0x488975e0	             mov qword [rbp - 0x20], rsi	       281	strbuf.c	FUNCTION_26
0x4001218	        0x488955d8	             mov qword [rbp - 0x28], rdx	       281	strbuf.c	FUNCTION_26
0x400121c	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       281	strbuf.c	FUNCTION_26
0x4001220	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       281	strbuf.c	FUNCTION_26
0x4001224	      0xe9b5000000	                           jmp 0x40012de	       282	strbuf.c	FUNCTION_26	WHILE_1
0x4001229	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x400122d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x4001231	      0xbe0a000000	                            mov esi, 0xa	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x4001236	          0x4889c7	                            mov rdi, rax	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x4001239	      0xe800000000	                          call 0x400123e	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x400123e	        0x488945f0	             mov qword [rbp - 0x10], rax	       284	strbuf.c	FUNCTION_26	WHILE_1	CALL_1
0x4001242	      0x48837df000	               cmp qword [rbp - 0x10], 0	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001247	            0x740a	                            je 0x4001253	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001249	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x400124d	        0x4883c001	                              add rax, 1	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001251	            0xeb0b	                           jmp 0x400125e	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001253	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001257	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       285	strbuf.c	FUNCTION_26	WHILE_1
0x400125b	          0x4801d0	                            add rax, rdx	       285	strbuf.c	FUNCTION_26	WHILE_1
0x400125e	        0x488945f0	             mov qword [rbp - 0x10], rax	       285	strbuf.c	FUNCTION_26	WHILE_1
0x4001262	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       288	strbuf.c	FUNCTION_26	WHILE_1
0x4001267	            0x741c	                            je 0x4001285	       288	strbuf.c	FUNCTION_26	WHILE_1
0x4001269	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x400126d	           0xfb600	                   movzx eax, byte [rax]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x4001270	            0x3c0a	                             cmp al, 0xa	       287	strbuf.c	FUNCTION_26	WHILE_1
0x4001272	            0x740b	                            je 0x400127f	       287	strbuf.c	FUNCTION_26	WHILE_1
0x4001274	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x4001278	           0xfb600	                   movzx eax, byte [rax]	       287	strbuf.c	FUNCTION_26	WHILE_1
0x400127b	            0x3c09	                               cmp al, 9	       287	strbuf.c	FUNCTION_26	WHILE_1
0x400127d	            0x7506	                           jne 0x4001285	       287	strbuf.c	FUNCTION_26	WHILE_1
0x400127f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	strbuf.c	FUNCTION_26	WHILE_1
0x4001283	            0xeb04	                           jmp 0x4001289	       288	strbuf.c	FUNCTION_26	WHILE_1
0x4001285	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	strbuf.c	FUNCTION_26	WHILE_1
0x4001289	        0x488945f8	                mov qword [rbp - 8], rax	       287	strbuf.c	FUNCTION_26	WHILE_1
0x400128d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x4001291	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x4001295	          0x4889d6	                            mov rsi, rdx	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x4001298	          0x4889c7	                            mov rdi, rax	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x400129b	      0xe870f0ffff	                  call sym.strbuf_addstr	       289	strbuf.c	FUNCTION_26	WHILE_1	CALL_2
0x40012a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012a8	          0x4829c2	                            sub rdx, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012ab	          0x4889d0	                            mov rax, rdx	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012ae	          0x4889c2	                            mov rdx, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012b1	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012b9	          0x4889ce	                            mov rsi, rcx	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012bc	          0x4889c7	                            mov rdi, rax	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012bf	      0xe800000000	                          call 0x40012c4	       290	strbuf.c	FUNCTION_26	WHILE_1	CALL_3
0x40012c4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       291	strbuf.c	FUNCTION_26	WHILE_1
0x40012c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       291	strbuf.c	FUNCTION_26	WHILE_1
0x40012cc	          0x4829c2	                            sub rdx, rax	       291	strbuf.c	FUNCTION_26	WHILE_1
0x40012cf	          0x4889d0	                            mov rax, rdx	       291	strbuf.c	FUNCTION_26	WHILE_1
0x40012d2	        0x482945c8	             sub qword [rbp - 0x38], rax	       291	strbuf.c	FUNCTION_26	WHILE_1
0x40012d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	strbuf.c	FUNCTION_26	WHILE_1
0x40012da	        0x488945d0	             mov qword [rbp - 0x30], rax	       292	strbuf.c	FUNCTION_26	WHILE_1
0x40012de	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       282	strbuf.c	FUNCTION_26	WHILE_1
0x40012e3	     0xf8540ffffff	                           jne 0x4001229	       282	strbuf.c	FUNCTION_26	WHILE_1
0x40012e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       294	strbuf.c	FUNCTION_26	CALL_4
0x40012ed	          0x4889c7	                            mov rdi, rax	       294	strbuf.c	FUNCTION_26	CALL_4
0x40012f0	      0xe8a2f0ffff	           call sym.strbuf_complete_line	       294	strbuf.c	FUNCTION_26	CALL_4
0x40012f5	              0x90	                                     nop	       295	strbuf.c	FUNCTION_26
0x40012f6	              0xc9	                                   leave	       295	strbuf.c	FUNCTION_26
0x40012f7	              0xc3	                                     ret	       295	strbuf.c	FUNCTION_26
strbuf_cmp	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,1:ELSE,0	44
0x4000da9	              0x55	                                push rbp	       211	strbuf.c	FUNCTION_18
0x4000daa	          0x4889e5	                            mov rbp, rsp	       211	strbuf.c	FUNCTION_18
0x4000dad	        0x4883ec20	                           sub rsp, 0x20	       211	strbuf.c	FUNCTION_18
0x4000db1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       211	strbuf.c	FUNCTION_18
0x4000db5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       211	strbuf.c	FUNCTION_18
0x4000db9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	strbuf.c	FUNCTION_18
0x4000dbd	        0x488b5008	                mov rdx, qword [rax + 8]	       212	strbuf.c	FUNCTION_18
0x4000dc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	strbuf.c	FUNCTION_18
0x4000dc5	        0x488b4008	                mov rax, qword [rax + 8]	       212	strbuf.c	FUNCTION_18
0x4000dc9	          0x4839c2	                            cmp rdx, rax	       212	strbuf.c	FUNCTION_18
0x4000dcc	        0x480f46c2	                         cmovbe rax, rdx	       212	strbuf.c	FUNCTION_18
0x4000dd0	          0x8945f8	                mov dword [rbp - 8], eax	       212	strbuf.c	FUNCTION_18
0x4000dd3	          0x8b45f8	                mov eax, dword [rbp - 8]	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000dd6	          0x4863d0	                         movsxd rdx, eax	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000dd9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000ddd	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000de1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000de5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000de9	          0x4889ce	                            mov rsi, rcx	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000dec	          0x4889c7	                            mov rdi, rax	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000def	      0xe800000000	                          call 0x4000df4	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000df4	          0x8945fc	                mov dword [rbp - 4], eax	       213	strbuf.c	FUNCTION_18	CALL_1
0x4000df7	        0x837dfc00	                  cmp dword [rbp - 4], 0	       214	strbuf.c	FUNCTION_18	IF_1
0x4000dfb	            0x7405	                            je 0x4000e02	       214	strbuf.c	FUNCTION_18	IF_1
0x4000dfd	          0x8b45fc	                mov eax, dword [rbp - 4]	       215	strbuf.c	FUNCTION_18	IF_1
0x4000e00	            0xeb36	                           jmp 0x4000e38	       215	strbuf.c	FUNCTION_18	IF_1
0x4000e02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	strbuf.c	FUNCTION_18
0x4000e06	        0x488b5008	                mov rdx, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0x4000e0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	strbuf.c	FUNCTION_18
0x4000e0e	        0x488b4008	                mov rax, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0x4000e12	          0x4839c2	                            cmp rdx, rax	       216	strbuf.c	FUNCTION_18
0x4000e15	            0x721b	                            jb 0x4000e32	       216	strbuf.c	FUNCTION_18
0x4000e17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	strbuf.c	FUNCTION_18
0x4000e1b	        0x488b5008	                mov rdx, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0x4000e1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       216	strbuf.c	FUNCTION_18
0x4000e23	        0x488b4008	                mov rax, qword [rax + 8]	       216	strbuf.c	FUNCTION_18
0x4000e27	          0x4839c2	                            cmp rdx, rax	       216	strbuf.c	FUNCTION_18
0x4000e2a	           0xf95c0	                                setne al	       216	strbuf.c	FUNCTION_18
0x4000e2d	           0xfb6c0	                           movzx eax, al	       216	strbuf.c	FUNCTION_18
0x4000e30	            0xeb05	                           jmp 0x4000e37	       216	strbuf.c	FUNCTION_18
0x4000e32	      0xb8ffffffff	                     mov eax, 0xffffffff	       216	strbuf.c	FUNCTION_18
0x4000e37	              0x90	                                     nop	       216	strbuf.c	FUNCTION_18
0x4000e38	              0xc9	                                   leave	       217	strbuf.c	FUNCTION_18
0x4000e39	              0xc3	                                     ret	       217	strbuf.c	FUNCTION_18
is_absolute_path	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	21
0x40003b7	              0x55	                                push rbp	      1153	cache.h	FUNCTION_87
0x40003b8	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_87
0x40003bb	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_87
0x40003bf	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_87
0x40003c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_87
0x40003c7	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_87
0x40003ca	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_87
0x40003cd	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_87
0x40003cf	      0xe87bfcffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_87
0x40003d4	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_87
0x40003d6	            0x7510	                           jne 0x40003e8	      1154	cache.h	FUNCTION_87
0x40003d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_87
0x40003dc	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_87
0x40003df	      0xe85cfcffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_87
0x40003e4	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_87
0x40003e6	            0x7407	                            je 0x40003ef	      1154	cache.h	FUNCTION_87
0x40003e8	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_87
0x40003ed	            0xeb05	                           jmp 0x40003f4	      1154	cache.h	FUNCTION_87
0x40003ef	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_87
0x40003f4	              0xc9	                                   leave	      1155	cache.h	FUNCTION_87
0x40003f5	              0xc3	                                     ret	      1155	cache.h	FUNCTION_87
starts_with	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,0:DO,0:IF,2:ELSE,1	23
0x40003f6	              0x55	                                push rbp	         7	strbuf.c	FUNCTION_1
0x40003f7	          0x4889e5	                            mov rbp, rsp	         7	strbuf.c	FUNCTION_1
0x40003fa	        0x48897df8	                mov qword [rbp - 8], rdi	         7	strbuf.c	FUNCTION_1
0x40003fe	        0x488975f0	             mov qword [rbp - 0x10], rsi	         7	strbuf.c	FUNCTION_1
0x4000402	        0x488b45f0	             mov rax, qword [rbp - 0x10]	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x4000406	           0xfb600	                   movzx eax, byte [rax]	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x4000409	            0x84c0	                             test al, al	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x400040b	            0x7507	                           jne 0x4000414	         9	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x400040d	      0xb801000000	                              mov eax, 1	        10	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x4000412	            0xeb25	                           jmp 0x4000439	        10	strbuf.c	FUNCTION_1	FOR_1	IF_1
0x4000414	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x4000418	           0xfb610	                   movzx edx, byte [rax]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x400041b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x400041f	           0xfb600	                   movzx eax, byte [rax]	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x4000422	            0x38c2	                              cmp dl, al	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x4000424	            0x7407	                            je 0x400042d	        11	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x4000426	      0xb800000000	                              mov eax, 0	        12	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x400042b	            0xeb0c	                           jmp 0x4000439	        12	strbuf.c	FUNCTION_1	ELSE_1	IF_2
0x400042d	      0x488345f801	                  add qword [rbp - 8], 1	         8	strbuf.c	FUNCTION_1	FOR_1
0x4000432	      0x488345f001	               add qword [rbp - 0x10], 1	         8	strbuf.c	FUNCTION_1	FOR_1
0x4000437	            0xebc9	                           jmp 0x4000402	        13	strbuf.c	FUNCTION_1
0x4000439	              0x5d	                                 pop rbp	        13	strbuf.c	FUNCTION_1
0x400043a	              0xc3	                                     ret	        13	strbuf.c	FUNCTION_1
strbuf_rtrim	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	36
0x400081a	              0x55	                                push rbp	       110	strbuf.c	FUNCTION_10
0x400081b	          0x4889e5	                            mov rbp, rsp	       110	strbuf.c	FUNCTION_10
0x400081e	        0x48897df8	                mov qword [rbp - 8], rdi	       110	strbuf.c	FUNCTION_10
0x4000822	            0xeb14	                           jmp 0x4000838	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000824	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x4000828	        0x488b4008	                mov rax, qword [rax + 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x400082c	        0x488d50ff	                      lea rdx, [rax - 1]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x4000830	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	strbuf.c	FUNCTION_10	WHILE_1
0x4000834	        0x48895008	                mov qword [rax + 8], rdx	       112	strbuf.c	FUNCTION_10	WHILE_1
0x4000838	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400083c	        0x488b4008	                mov rax, qword [rax + 8]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000840	          0x4885c0	                           test rax, rax	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000843	            0x7430	                            je 0x4000875	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000845	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000849	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400084d	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000851	        0x488b4008	                mov rax, qword [rax + 8]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000855	        0x4883e801	                              sub rax, 1	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000859	          0x4801d0	                            add rax, rdx	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400085c	           0xfb600	                   movzx eax, byte [rax]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400085f	           0xfb6c0	                           movzx eax, al	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000862	            0x4898	                                    cdqe	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000864	     0xfb680000000	                   movzx eax, byte [rax]	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400086b	           0xfb6c0	                           movzx eax, al	       111	strbuf.c	FUNCTION_10	WHILE_1
0x400086e	          0x83e001	                              and eax, 1	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000871	            0x85c0	                           test eax, eax	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000873	            0x75af	                           jne 0x4000824	       111	strbuf.c	FUNCTION_10	WHILE_1
0x4000875	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	strbuf.c	FUNCTION_10
0x4000879	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       113	strbuf.c	FUNCTION_10
0x400087d	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	strbuf.c	FUNCTION_10
0x4000881	        0x488b4008	                mov rax, qword [rax + 8]	       113	strbuf.c	FUNCTION_10
0x4000885	          0x4801d0	                            add rax, rdx	       113	strbuf.c	FUNCTION_10
0x4000888	          0xc60000	                       mov byte [rax], 0	       113	strbuf.c	FUNCTION_10
0x400088b	              0x90	                                     nop	       114	strbuf.c	FUNCTION_10
0x400088c	              0x5d	                                 pop rbp	       114	strbuf.c	FUNCTION_10
0x400088d	              0xc3	                                     ret	       114	strbuf.c	FUNCTION_10
strbuf_getline_nul	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	13
0x4001f76	              0x55	                                push rbp	       624	strbuf.c	FUNCTION_44
0x4001f77	          0x4889e5	                            mov rbp, rsp	       624	strbuf.c	FUNCTION_44
0x4001f7a	        0x4883ec10	                           sub rsp, 0x10	       624	strbuf.c	FUNCTION_44
0x4001f7e	        0x48897df8	                mov qword [rbp - 8], rdi	       624	strbuf.c	FUNCTION_44
0x4001f82	        0x488975f0	             mov qword [rbp - 0x10], rsi	       624	strbuf.c	FUNCTION_44
0x4001f86	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f8a	        0x488b45f8	                mov rax, qword [rbp - 8]	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f8e	      0xba00000000	                              mov edx, 0	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f93	          0x4889ce	                            mov rsi, rcx	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f96	          0x4889c7	                            mov rdi, rax	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f99	      0xe87afeffff	                call sym.strbuf_getdelim	       625	strbuf.c	FUNCTION_44	CALL_1
0x4001f9e	              0xc9	                                   leave	       626	strbuf.c	FUNCTION_44
0x4001f9f	              0xc3	                                     ret	       626	strbuf.c	FUNCTION_44
strbuf_detach	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,1:ELSE,0	25
0x40005ea	              0x55	                                push rbp	        70	strbuf.c	FUNCTION_6
0x40005eb	          0x4889e5	                            mov rbp, rsp	        70	strbuf.c	FUNCTION_6
0x40005ee	        0x4883ec20	                           sub rsp, 0x20	        70	strbuf.c	FUNCTION_6
0x40005f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        70	strbuf.c	FUNCTION_6
0x40005f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        70	strbuf.c	FUNCTION_6
0x40005fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	strbuf.c	FUNCTION_6	CALL_1
0x40005fe	      0xbe00000000	                              mov esi, 0	        72	strbuf.c	FUNCTION_6	CALL_1
0x4000603	          0x4889c7	                            mov rdi, rax	        72	strbuf.c	FUNCTION_6	CALL_1
0x4000606	      0xe800000000	                          call 0x400060b	        72	strbuf.c	FUNCTION_6	CALL_1
0x400060b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	strbuf.c	FUNCTION_6
0x400060f	        0x488b4010	            mov rax, qword [rax + 0x10] 	        73	strbuf.c	FUNCTION_6
0x4000613	        0x488945f8	                mov qword [rbp - 8], rax	        73	strbuf.c	FUNCTION_6
0x4000617	      0x48837de000	               cmp qword [rbp - 0x20], 0	        74	strbuf.c	FUNCTION_6	IF_1
0x400061c	            0x740f	                            je 0x400062d	        74	strbuf.c	FUNCTION_6	IF_1
0x400061e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	strbuf.c	FUNCTION_6	IF_1
0x4000622	        0x488b5008	                mov rdx, qword [rax + 8]	        75	strbuf.c	FUNCTION_6	IF_1
0x4000626	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        75	strbuf.c	FUNCTION_6	IF_1
0x400062a	          0x488910	                    mov qword [rax], rdx	        75	strbuf.c	FUNCTION_6	IF_1
0x400062d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	strbuf.c	FUNCTION_6	CALL_2
0x4000631	      0xbe00000000	                              mov esi, 0	        76	strbuf.c	FUNCTION_6	CALL_2
0x4000636	          0x4889c7	                            mov rdi, rax	        76	strbuf.c	FUNCTION_6	CALL_2
0x4000639	      0xe800000000	                          call 0x400063e	        76	strbuf.c	FUNCTION_6	CALL_2
0x400063e	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	strbuf.c	FUNCTION_6
0x4000642	              0xc9	                                   leave	        78	strbuf.c	FUNCTION_6
0x4000643	              0xc3	                                     ret	        78	strbuf.c	FUNCTION_6
strbuf_add_commented_lines	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,1:ELSE,0	38
0x40012f8	              0x55	                                push rbp	       298	strbuf.c	FUNCTION_27
0x40012f9	          0x4889e5	                            mov rbp, rsp	       298	strbuf.c	FUNCTION_27
0x40012fc	        0x4883ec20	                           sub rsp, 0x20	       298	strbuf.c	FUNCTION_27
0x4001300	        0x48897df8	                mov qword [rbp - 8], rdi	       298	strbuf.c	FUNCTION_27
0x4001304	        0x488975f0	             mov qword [rbp - 0x10], rsi	       298	strbuf.c	FUNCTION_27
0x4001308	        0x488955e8	             mov qword [rbp - 0x18], rdx	       298	strbuf.c	FUNCTION_27
0x400130c	     0xfb615000000	           movzx edx, byte [0x04001313] 	       302	strbuf.c	FUNCTION_27	IF_1
0x4001313	     0xfb605000000	           movzx eax, byte [0x0400131a] 	       302	strbuf.c	FUNCTION_27	IF_1
0x400131a	            0x38c2	                              cmp dl, al	       302	strbuf.c	FUNCTION_27	IF_1
0x400131c	            0x744a	                            je 0x4001368	       302	strbuf.c	FUNCTION_27	IF_1
0x400131e	     0xfb605000000	           movzx eax, byte [0x04001325] 	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x4001325	           0xfbec0	                           movsx eax, al	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x4001328	            0x89c1	                            mov ecx, eax	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x400132a	      0xba00000000	                              mov edx, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x400132f	      0xbe03000000	                              mov esi, 3	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x4001334	      0xbf00000000	                              mov edi, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x4001339	      0xb800000000	                              mov eax, 0	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x400133e	      0xe800000000	                          call 0x4001343	       303	strbuf.c	FUNCTION_27	IF_1	CALL_1
0x4001343	     0xfb605000000	           movzx eax, byte [0x0400134a] 	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x400134a	           0xfbec0	                           movsx eax, al	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x400134d	            0x89c1	                            mov ecx, eax	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x400134f	      0xba00000000	                              mov edx, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x4001354	      0xbe02000000	                              mov esi, 2	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x4001359	      0xbf00000000	                              mov edi, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x400135e	      0xb800000000	                              mov eax, 0	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x4001363	      0xe800000000	                          call 0x4001368	       304	strbuf.c	FUNCTION_27	IF_1	CALL_2
0x4001368	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       306	strbuf.c	FUNCTION_27	CALL_3
0x400136c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       306	strbuf.c	FUNCTION_27	CALL_3
0x4001370	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	strbuf.c	FUNCTION_27	CALL_3
0x4001374	          0x4989c8	                             mov r8, rcx	       306	strbuf.c	FUNCTION_27	CALL_3
0x4001377	          0x4889d1	                            mov rcx, rdx	       306	strbuf.c	FUNCTION_27	CALL_3
0x400137a	      0xba00000000	                              mov edx, 0	       306	strbuf.c	FUNCTION_27	CALL_3
0x400137f	      0xbe00000000	                              mov esi, 0	       306	strbuf.c	FUNCTION_27	CALL_3
0x4001384	          0x4889c7	                            mov rdi, rax	       306	strbuf.c	FUNCTION_27	CALL_3
0x4001387	      0xe87cfeffff	                      call sym.add_lines	       306	strbuf.c	FUNCTION_27	CALL_3
0x400138c	              0x90	                                     nop	       307	strbuf.c	FUNCTION_27
0x400138d	              0xc9	                                   leave	       307	strbuf.c	FUNCTION_27
0x400138e	              0xc3	                                     ret	       307	strbuf.c	FUNCTION_27
st_mult	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,1:ELSE,0	22
0x40000b8	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_108
0x40000b9	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_108
0x40000bc	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_108
0x40000c0	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_108
0x40000c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_108
0x40000c8	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000cd	            0x7430	                            je 0x40000ff	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000cf	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000d6	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000db	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000df	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000e3	            0x731a	                           jae 0x40000ff	       795	git-compat-util.h	FUNCTION_108	IF_1
0x40000e5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000ed	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000f0	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000f5	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000fa	      0xe800000000	                          call 0x40000ff	       796	git-compat-util.h	FUNCTION_108	IF_1	CALL_1
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_108
0x4000103	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_108
0x4000108	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_108
0x4000109	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_108
strbuf_reencode	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,2:ELSE,0	50
0x4000993	              0x55	                                push rbp	       135	strbuf.c	FUNCTION_13
0x4000994	          0x4889e5	                            mov rbp, rsp	       135	strbuf.c	FUNCTION_13
0x4000997	        0x4883ec40	                           sub rsp, 0x40	       135	strbuf.c	FUNCTION_13
0x400099b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       135	strbuf.c	FUNCTION_13
0x400099f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       135	strbuf.c	FUNCTION_13
0x40009a3	        0x488955c8	             mov qword [rbp - 0x38], rdx	       135	strbuf.c	FUNCTION_13
0x40009a7	    0x64488b042528	                mov rax, qword fs:[0x28]	       135	strbuf.c	FUNCTION_13
0x40009b0	        0x488945f8	                mov qword [rbp - 8], rax	       135	strbuf.c	FUNCTION_13
0x40009b4	            0x31c0	                            xor eax, eax	       135	strbuf.c	FUNCTION_13
0x40009b6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009be	          0x4889d6	                            mov rsi, rdx	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009c1	          0x4889c7	                            mov rdi, rax	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009c4	      0xe800000000	                          call 0x40009c9	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009c9	            0x85c0	                           test eax, eax	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009cb	            0x7407	                            je 0x40009d4	       139	strbuf.c	FUNCTION_13	IF_1	CALL_1
0x40009cd	      0xb800000000	                              mov eax, 0	       140	strbuf.c	FUNCTION_13	IF_1
0x40009d2	            0xeb5e	                           jmp 0x4000a32	       140	strbuf.c	FUNCTION_13	IF_1
0x40009d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009d8	        0x488b4008	                mov rax, qword [rax + 8]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009dc	            0x89c7	                            mov edi, eax	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009e6	        0x488d75ec	                   lea rsi, [rbp - 0x14]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009ea	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009ee	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009f2	          0x4989f0	                             mov r8, rsi	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009f5	            0x89fe	                            mov esi, edi	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009f7	          0x4889c7	                            mov rdi, rax	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009fa	      0xe800000000	                          call 0x40009ff	       142	strbuf.c	FUNCTION_13	CALL_2
0x40009ff	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	strbuf.c	FUNCTION_13	CALL_2
0x4000a03	      0x48837df000	               cmp qword [rbp - 0x10], 0	       143	strbuf.c	FUNCTION_13	IF_2
0x4000a08	            0x7507	                           jne 0x4000a11	       143	strbuf.c	FUNCTION_13	IF_2
0x4000a0a	      0xb8ffffffff	                     mov eax, 0xffffffff	       144	strbuf.c	FUNCTION_13	IF_2
0x4000a0f	            0xeb21	                           jmp 0x4000a32	       144	strbuf.c	FUNCTION_13	IF_2
0x4000a11	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a14	          0x4863c8	                         movsxd rcx, eax	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a17	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a1a	          0x4863d0	                         movsxd rdx, eax	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a1d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a25	          0x4889c7	                            mov rdi, rax	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a28	      0xe800000000	                          call 0x4000a2d	       146	strbuf.c	FUNCTION_13	CALL_3
0x4000a2d	      0xb800000000	                              mov eax, 0	       147	strbuf.c	FUNCTION_13
0x4000a32	        0x488b4df8	                mov rcx, qword [rbp - 8]	       148	strbuf.c	FUNCTION_13
0x4000a36	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       148	strbuf.c	FUNCTION_13
0x4000a3f	            0x7405	                            je 0x4000a46	       148	strbuf.c	FUNCTION_13
0x4000a41	      0xe800000000	                          call 0x4000a46	       148	strbuf.c	FUNCTION_13
0x4000a46	              0xc9	                                   leave	       148	strbuf.c	FUNCTION_13
0x4000a47	              0xc3	                                     ret	       148	strbuf.c	FUNCTION_13
xstrdup_tolower	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,2:DO,0:IF,0:ELSE,0	36
0x40028e7	              0x55	                                push rbp	       813	strbuf.c	FUNCTION_58
0x40028e8	          0x4889e5	                            mov rbp, rsp	       813	strbuf.c	FUNCTION_58
0x40028eb	              0x53	                                push rbx	       813	strbuf.c	FUNCTION_58
0x40028ec	        0x4883ec38	                           sub rsp, 0x38	       813	strbuf.c	FUNCTION_58
0x40028f0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       813	strbuf.c	FUNCTION_58
0x40028f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	strbuf.c	FUNCTION_58	CALL_1
0x40028f8	          0x4889c7	                            mov rdi, rax	       817	strbuf.c	FUNCTION_58	CALL_1
0x40028fb	      0xe800000000	                          call 0x4002900	       817	strbuf.c	FUNCTION_58	CALL_1
0x4002900	        0x488945e0	             mov qword [rbp - 0x20], rax	       817	strbuf.c	FUNCTION_58	CALL_1
0x4002904	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       818	strbuf.c	FUNCTION_58	CALL_2
0x4002908	          0x4889c7	                            mov rdi, rax	       818	strbuf.c	FUNCTION_58	CALL_2
0x400290b	      0xe800000000	                          call 0x4002910	       818	strbuf.c	FUNCTION_58	CALL_2
0x4002910	        0x488945e8	             mov qword [rbp - 0x18], rax	       818	strbuf.c	FUNCTION_58	CALL_2
0x4002914	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       819	strbuf.c	FUNCTION_58	FOR_1
0x400291c	            0xeb30	                           jmp 0x400294e	       819	strbuf.c	FUNCTION_58	FOR_1
0x400291e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002922	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002926	        0x488d1c02	                    lea rbx, [rdx + rax]	       820	strbuf.c	FUNCTION_58	FOR_1
0x400292a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       820	strbuf.c	FUNCTION_58	FOR_1
0x400292e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002932	          0x4801d0	                            add rax, rdx	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002935	           0xfb600	                   movzx eax, byte [rax]	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002938	           0xfb6c0	                           movzx eax, al	       820	strbuf.c	FUNCTION_58	FOR_1
0x400293b	      0xbe20000000	                           mov esi, 0x20	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002940	            0x89c7	                            mov edi, eax	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002942	      0xe8c3d7ffff	                      call sym.sane_case	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002947	            0x8803	                      mov byte [rbx], al	       820	strbuf.c	FUNCTION_58	FOR_1
0x4002949	      0x488345d801	               add qword [rbp - 0x28], 1	       819	strbuf.c	FUNCTION_58	FOR_1
0x400294e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	strbuf.c	FUNCTION_58	FOR_1
0x4002952	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       819	strbuf.c	FUNCTION_58	FOR_1
0x4002956	            0x72c6	                            jb 0x400291e	       819	strbuf.c	FUNCTION_58	FOR_1
0x4002958	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	strbuf.c	FUNCTION_58
0x400295c	        0x4883c438	                           add rsp, 0x38	       822	strbuf.c	FUNCTION_58
0x4002960	              0x5b	                                 pop rbx	       822	strbuf.c	FUNCTION_58
0x4002961	              0x5d	                                 pop rbp	       822	strbuf.c	FUNCTION_58
0x4002962	              0xc3	                                     ret	       822	strbuf.c	FUNCTION_58
strbuf_getline	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,3:ELSE,0	54
0x4001e90	              0x55	                                push rbp	       607	strbuf.c	FUNCTION_42
0x4001e91	          0x4889e5	                            mov rbp, rsp	       607	strbuf.c	FUNCTION_42
0x4001e94	        0x4883ec10	                           sub rsp, 0x10	       607	strbuf.c	FUNCTION_42
0x4001e98	        0x48897df8	                mov qword [rbp - 8], rdi	       607	strbuf.c	FUNCTION_42
0x4001e9c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       607	strbuf.c	FUNCTION_42
0x4001ea0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001ea4	        0x488b45f8	                mov rax, qword [rbp - 8]	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001ea8	      0xba0a000000	                            mov edx, 0xa	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001ead	          0x4889ce	                            mov rsi, rcx	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001eb0	          0x4889c7	                            mov rdi, rax	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001eb3	      0xe800000000	                          call 0x4001eb8	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001eb8	            0x85c0	                           test eax, eax	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001eba	            0x740a	                            je 0x4001ec6	       608	strbuf.c	FUNCTION_42	IF_1	CALL_1
0x4001ebc	      0xb8ffffffff	                     mov eax, 0xffffffff	       609	strbuf.c	FUNCTION_42	IF_1
0x4001ec1	      0xe984000000	                           jmp 0x4001f4a	       609	strbuf.c	FUNCTION_42	IF_1
0x4001ec6	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x4001eca	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ece	        0x488b45f8	                mov rax, qword [rbp - 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ed2	        0x488b4008	                mov rax, qword [rax + 8]	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ed6	        0x4883e801	                              sub rax, 1	       610	strbuf.c	FUNCTION_42	IF_2
0x4001eda	          0x4801d0	                            add rax, rdx	       610	strbuf.c	FUNCTION_42	IF_2
0x4001edd	           0xfb600	                   movzx eax, byte [rax]	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ee0	            0x3c0a	                             cmp al, 0xa	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ee2	            0x7561	                           jne 0x4001f45	       610	strbuf.c	FUNCTION_42	IF_2
0x4001ee4	        0x488b45f8	                mov rax, qword [rbp - 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001ee8	        0x488b4008	                mov rax, qword [rax + 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001eec	        0x488d50ff	                      lea rdx, [rax - 1]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001ef0	        0x488b45f8	                mov rax, qword [rbp - 8]	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001ef4	          0x4889d6	                            mov rsi, rdx	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001ef7	          0x4889c7	                            mov rdi, rax	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001efa	      0xe809e3ffff	                  call sym.strbuf_setlen	       611	strbuf.c	FUNCTION_42	IF_2	CALL_2
0x4001eff	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f03	        0x488b4008	                mov rax, qword [rax + 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f07	          0x4885c0	                           test rax, rax	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f0a	            0x7439	                            je 0x4001f45	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f10	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f14	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f18	        0x488b4008	                mov rax, qword [rax + 8]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f1c	        0x4883e801	                              sub rax, 1	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f20	          0x4801d0	                            add rax, rdx	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f23	           0xfb600	                   movzx eax, byte [rax]	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f26	            0x3c0d	                             cmp al, 0xd	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f28	            0x751b	                           jne 0x4001f45	       612	strbuf.c	FUNCTION_42	IF_2	IF_3
0x4001f2a	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f2e	        0x488b4008	                mov rax, qword [rax + 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f32	        0x488d50ff	                      lea rdx, [rax - 1]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f36	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f3a	          0x4889d6	                            mov rsi, rdx	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f3d	          0x4889c7	                            mov rdi, rax	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f40	      0xe8c3e2ffff	                  call sym.strbuf_setlen	       613	strbuf.c	FUNCTION_42	IF_2	CALL_3
0x4001f45	      0xb800000000	                              mov eax, 0	       615	strbuf.c	FUNCTION_42
0x4001f4a	              0xc9	                                   leave	       616	strbuf.c	FUNCTION_42
0x4001f4b	              0xc3	                                     ret	       616	strbuf.c	FUNCTION_42
xstrvfmt	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,0:ELSE,0	27
0x40029df	              0x55	                                push rbp	       837	strbuf.c	FUNCTION_60
0x40029e0	          0x4889e5	                            mov rbp, rsp	       837	strbuf.c	FUNCTION_60
0x40029e3	        0x4883ec30	                           sub rsp, 0x30	       837	strbuf.c	FUNCTION_60
0x40029e7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       837	strbuf.c	FUNCTION_60
0x40029eb	        0x488975d0	             mov qword [rbp - 0x30], rsi	       837	strbuf.c	FUNCTION_60
0x40029ef	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	strbuf.c	FUNCTION_60
0x40029f8	        0x488945f8	                mov qword [rbp - 8], rax	       837	strbuf.c	FUNCTION_60
0x40029fc	            0x31c0	                            xor eax, eax	       837	strbuf.c	FUNCTION_60
0x40029fe	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       838	strbuf.c	FUNCTION_60
0x4002a06	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       838	strbuf.c	FUNCTION_60
0x4002a0e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       838	strbuf.c	FUNCTION_60
0x4002a16	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a1a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a1e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a22	          0x4889ce	                            mov rsi, rcx	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a25	          0x4889c7	                            mov rdi, rax	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a28	      0xe800000000	                          call 0x4002a2d	       839	strbuf.c	FUNCTION_60	CALL_1
0x4002a2d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       840	strbuf.c	FUNCTION_60	CALL_2
0x4002a31	      0xbe00000000	                              mov esi, 0	       840	strbuf.c	FUNCTION_60	CALL_2
0x4002a36	          0x4889c7	                            mov rdi, rax	       840	strbuf.c	FUNCTION_60	CALL_2
0x4002a39	      0xe800000000	                          call 0x4002a3e	       840	strbuf.c	FUNCTION_60	CALL_2
0x4002a3e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       841	strbuf.c	FUNCTION_60
0x4002a42	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       841	strbuf.c	FUNCTION_60
0x4002a4b	            0x7405	                            je 0x4002a52	       841	strbuf.c	FUNCTION_60
0x4002a4d	      0xe800000000	                          call 0x4002a52	       841	strbuf.c	FUNCTION_60
0x4002a52	              0xc9	                                   leave	       841	strbuf.c	FUNCTION_60
0x4002a53	              0xc3	                                     ret	       841	strbuf.c	FUNCTION_60
strbuf_addbuf	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	35
0x4001050	              0x55	                                push rbp	       256	strbuf.c	FUNCTION_23
0x4001051	          0x4889e5	                            mov rbp, rsp	       256	strbuf.c	FUNCTION_23
0x4001054	        0x4883ec10	                           sub rsp, 0x10	       256	strbuf.c	FUNCTION_23
0x4001058	        0x48897df8	                mov qword [rbp - 8], rdi	       256	strbuf.c	FUNCTION_23
0x400105c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       256	strbuf.c	FUNCTION_23
0x4001060	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	strbuf.c	FUNCTION_23	CALL_1
0x4001064	        0x488b5008	                mov rdx, qword [rax + 8]	       257	strbuf.c	FUNCTION_23	CALL_1
0x4001068	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	strbuf.c	FUNCTION_23	CALL_1
0x400106c	          0x4889d6	                            mov rsi, rdx	       257	strbuf.c	FUNCTION_23	CALL_1
0x400106f	          0x4889c7	                            mov rdi, rax	       257	strbuf.c	FUNCTION_23	CALL_1
0x4001072	      0xe800000000	                          call 0x4001077	       257	strbuf.c	FUNCTION_23	CALL_1
0x4001077	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	strbuf.c	FUNCTION_23	CALL_2
0x400107b	        0x488b5008	                mov rdx, qword [rax + 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x400107f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	strbuf.c	FUNCTION_23	CALL_2
0x4001083	        0x488b4010	            mov rax, qword [rax + 0x10] 	       258	strbuf.c	FUNCTION_23	CALL_2
0x4001087	        0x488b4df8	                mov rcx, qword [rbp - 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x400108b	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	       258	strbuf.c	FUNCTION_23	CALL_2
0x400108f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x4001093	        0x488b4908	                mov rcx, qword [rcx + 8]	       258	strbuf.c	FUNCTION_23	CALL_2
0x4001097	          0x4801f1	                            add rcx, rsi	       258	strbuf.c	FUNCTION_23	CALL_2
0x400109a	          0x4889c6	                            mov rsi, rax	       258	strbuf.c	FUNCTION_23	CALL_2
0x400109d	          0x4889cf	                            mov rdi, rcx	       258	strbuf.c	FUNCTION_23	CALL_2
0x40010a0	      0xe800000000	                          call 0x40010a5	       258	strbuf.c	FUNCTION_23	CALL_2
0x40010a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010a9	        0x488b5008	                mov rdx, qword [rax + 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010b1	        0x488b4008	                mov rax, qword [rax + 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010b5	          0x4801c2	                            add rdx, rax	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010bc	          0x4889d6	                            mov rsi, rdx	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010bf	          0x4889c7	                            mov rdi, rax	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010c2	      0xe841f1ffff	                  call sym.strbuf_setlen	       259	strbuf.c	FUNCTION_23	CALL_3
0x40010c7	              0x90	                                     nop	       260	strbuf.c	FUNCTION_23
0x40010c8	              0xc9	                                   leave	       260	strbuf.c	FUNCTION_23
0x40010c9	              0xc3	                                     ret	       260	strbuf.c	FUNCTION_23
skip_prefix	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,1:IF,1:ELSE,0	27
0x4000062	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_100
0x4000063	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_100
0x4000066	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_100
0x400006a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_100
0x400006e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_100
0x4000072	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x4000076	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x4000079	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x400007b	            0x7512	                           jne 0x400008f	       484	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x400007d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x4000081	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x4000085	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x4000088	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x400008d	            0xeb27	                           jmp 0x40000b6	       486	git-compat-util.h	FUNCTION_100	DO_1	IF_1
0x400008f	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x4000093	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x4000097	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_100	DO_1
0x400009b	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x400009e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000a2	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000a6	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000aa	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000ad	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000af	            0x74c1	                            je 0x4000072	       488	git-compat-util.h	FUNCTION_100	DO_1
0x40000b1	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_100
0x40000b6	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_100
0x40000b7	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_100
xstrdup_toupper	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,2:DO,0:IF,0:ELSE,0	36
0x4002963	              0x55	                                push rbp	       825	strbuf.c	FUNCTION_59
0x4002964	          0x4889e5	                            mov rbp, rsp	       825	strbuf.c	FUNCTION_59
0x4002967	              0x53	                                push rbx	       825	strbuf.c	FUNCTION_59
0x4002968	        0x4883ec38	                           sub rsp, 0x38	       825	strbuf.c	FUNCTION_59
0x400296c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       825	strbuf.c	FUNCTION_59
0x4002970	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       829	strbuf.c	FUNCTION_59	CALL_1
0x4002974	          0x4889c7	                            mov rdi, rax	       829	strbuf.c	FUNCTION_59	CALL_1
0x4002977	      0xe800000000	                          call 0x400297c	       829	strbuf.c	FUNCTION_59	CALL_1
0x400297c	        0x488945e0	             mov qword [rbp - 0x20], rax	       829	strbuf.c	FUNCTION_59	CALL_1
0x4002980	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       830	strbuf.c	FUNCTION_59	CALL_2
0x4002984	          0x4889c7	                            mov rdi, rax	       830	strbuf.c	FUNCTION_59	CALL_2
0x4002987	      0xe800000000	                          call 0x400298c	       830	strbuf.c	FUNCTION_59	CALL_2
0x400298c	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	strbuf.c	FUNCTION_59	CALL_2
0x4002990	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       831	strbuf.c	FUNCTION_59	FOR_1
0x4002998	            0xeb30	                           jmp 0x40029ca	       831	strbuf.c	FUNCTION_59	FOR_1
0x400299a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       832	strbuf.c	FUNCTION_59	FOR_1
0x400299e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029a2	        0x488d1c02	                    lea rbx, [rdx + rax]	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029a6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029ae	          0x4801d0	                            add rax, rdx	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029b1	           0xfb600	                   movzx eax, byte [rax]	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029b4	           0xfb6c0	                           movzx eax, al	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029b7	      0xbe00000000	                              mov esi, 0	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029bc	            0x89c7	                            mov edi, eax	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029be	      0xe847d7ffff	                      call sym.sane_case	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029c3	            0x8803	                      mov byte [rbx], al	       832	strbuf.c	FUNCTION_59	FOR_1
0x40029c5	      0x488345d801	               add qword [rbp - 0x28], 1	       831	strbuf.c	FUNCTION_59	FOR_1
0x40029ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	strbuf.c	FUNCTION_59	FOR_1
0x40029ce	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       831	strbuf.c	FUNCTION_59	FOR_1
0x40029d2	            0x72c6	                            jb 0x400299a	       831	strbuf.c	FUNCTION_59	FOR_1
0x40029d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	strbuf.c	FUNCTION_59
0x40029d8	        0x4883c438	                           add rsp, 0x38	       834	strbuf.c	FUNCTION_59
0x40029dc	              0x5b	                                 pop rbx	       834	strbuf.c	FUNCTION_59
0x40029dd	              0x5d	                                 pop rbp	       834	strbuf.c	FUNCTION_59
0x40029de	              0xc3	                                     ret	       834	strbuf.c	FUNCTION_59
printf_ln	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,1:ELSE,0	50
0x40026e6	              0x55	                                push rbp	       789	strbuf.c	FUNCTION_56
0x40026e7	          0x4889e5	                            mov rbp, rsp	       789	strbuf.c	FUNCTION_56
0x40026ea	    0x4881ecf00000	                           sub rsp, 0xf0	       789	strbuf.c	FUNCTION_56
0x40026f1	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       789	strbuf.c	FUNCTION_56
0x40026f8	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       789	strbuf.c	FUNCTION_56
0x40026ff	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       789	strbuf.c	FUNCTION_56
0x4002706	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       789	strbuf.c	FUNCTION_56
0x400270d	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       789	strbuf.c	FUNCTION_56
0x4002714	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       789	strbuf.c	FUNCTION_56
0x400271b	            0x84c0	                             test al, al	       789	strbuf.c	FUNCTION_56
0x400271d	            0x7420	                            je 0x400273f	       789	strbuf.c	FUNCTION_56
0x400271f	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       789	strbuf.c	FUNCTION_56
0x4002723	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       789	strbuf.c	FUNCTION_56
0x4002727	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       789	strbuf.c	FUNCTION_56
0x400272b	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       789	strbuf.c	FUNCTION_56
0x400272f	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       789	strbuf.c	FUNCTION_56
0x4002733	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       789	strbuf.c	FUNCTION_56
0x4002737	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       789	strbuf.c	FUNCTION_56
0x400273b	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       789	strbuf.c	FUNCTION_56
0x400273f	    0x64488b042528	                mov rax, qword fs:[0x28]	       789	strbuf.c	FUNCTION_56
0x4002748	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       789	strbuf.c	FUNCTION_56
0x400274f	            0x31c0	                            xor eax, eax	       789	strbuf.c	FUNCTION_56
0x4002751	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       792	strbuf.c	FUNCTION_56	CALL_1
0x400275b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       792	strbuf.c	FUNCTION_56	CALL_1
0x4002765	        0x488d4510	                   lea rax, [rbp + 0x10]	       792	strbuf.c	FUNCTION_56	CALL_1
0x4002769	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       792	strbuf.c	FUNCTION_56	CALL_1
0x4002770	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       792	strbuf.c	FUNCTION_56	CALL_1
0x4002777	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       792	strbuf.c	FUNCTION_56	CALL_1
0x400277e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       793	strbuf.c	FUNCTION_56	CALL_2
0x4002785	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       793	strbuf.c	FUNCTION_56	CALL_2
0x400278c	          0x4889d6	                            mov rsi, rdx	       793	strbuf.c	FUNCTION_56	CALL_2
0x400278f	          0x4889c7	                            mov rdi, rax	       793	strbuf.c	FUNCTION_56	CALL_2
0x4002792	      0xe800000000	                          call 0x4002797	       793	strbuf.c	FUNCTION_56	CALL_2
0x4002797	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       793	strbuf.c	FUNCTION_56	CALL_2
0x400279d	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027a4	            0x780f	                            js 0x40027b5	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027a6	      0xbf0a000000	                            mov edi, 0xa	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027ab	      0xe800000000	                          call 0x40027b0	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027b0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027b3	            0x7507	                           jne 0x40027bc	       795	strbuf.c	FUNCTION_56	IF_1	CALL_4
0x40027b5	      0xb8ffffffff	                     mov eax, 0xffffffff	       796	strbuf.c	FUNCTION_56	IF_1
0x40027ba	            0xeb09	                           jmp 0x40027c5	       796	strbuf.c	FUNCTION_56	IF_1
0x40027bc	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       797	strbuf.c	FUNCTION_56
0x40027c2	          0x83c001	                              add eax, 1	       797	strbuf.c	FUNCTION_56
0x40027c5	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       798	strbuf.c	FUNCTION_56
0x40027cc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       798	strbuf.c	FUNCTION_56
0x40027d5	            0x7405	                            je 0x40027dc	       798	strbuf.c	FUNCTION_56
0x40027d7	      0xe800000000	                          call 0x40027dc	       798	strbuf.c	FUNCTION_56
0x40027dc	              0xc9	                                   leave	       798	strbuf.c	FUNCTION_56
0x40027dd	              0xc3	                                     ret	       798	strbuf.c	FUNCTION_56
strbuf_vaddf	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,9:DO,0:IF,4:ELSE,0	109
0x4001536	              0x55	                                push rbp	       327	strbuf.c	FUNCTION_29
0x4001537	          0x4889e5	                            mov rbp, rsp	       327	strbuf.c	FUNCTION_29
0x400153a	              0x53	                                push rbx	       327	strbuf.c	FUNCTION_29
0x400153b	        0x4883ec58	                           sub rsp, 0x58	       327	strbuf.c	FUNCTION_29
0x400153f	        0x48897db8	             mov qword [rbp - 0x48], rdi	       327	strbuf.c	FUNCTION_29
0x4001543	        0x488975b0	             mov qword [rbp - 0x50], rsi	       327	strbuf.c	FUNCTION_29
0x4001547	        0x488955a8	             mov qword [rbp - 0x58], rdx	       327	strbuf.c	FUNCTION_29
0x400154b	    0x64488b042528	                mov rax, qword fs:[0x28]	       327	strbuf.c	FUNCTION_29
0x4001554	        0x488945e8	             mov qword [rbp - 0x18], rax	       327	strbuf.c	FUNCTION_29
0x4001558	            0x31c0	                            xor eax, eax	       327	strbuf.c	FUNCTION_29
0x400155a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x400155e	          0x4889c7	                            mov rdi, rax	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x4001561	      0xe86cecffff	                   call sym.strbuf_avail	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x4001566	          0x4885c0	                           test rax, rax	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x4001569	            0x7511	                           jne 0x400157c	       331	strbuf.c	FUNCTION_29	IF_1	CALL_1
0x400156b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       332	strbuf.c	FUNCTION_29	CALL_2
0x400156f	      0xbe40000000	                           mov esi, 0x40	       332	strbuf.c	FUNCTION_29	CALL_2
0x4001574	          0x4889c7	                            mov rdi, rax	       332	strbuf.c	FUNCTION_29	CALL_2
0x4001577	      0xe800000000	                          call 0x400157c	       332	strbuf.c	FUNCTION_29	CALL_2
0x400157c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       333	strbuf.c	FUNCTION_29
0x4001580	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       333	strbuf.c	FUNCTION_29
0x4001584	          0x488b0a	                    mov rcx, qword [rdx]	       333	strbuf.c	FUNCTION_29
0x4001587	          0x488908	                    mov qword [rax], rcx	       333	strbuf.c	FUNCTION_29
0x400158a	        0x488b4a08	                mov rcx, qword [rdx + 8]	       333	strbuf.c	FUNCTION_29
0x400158e	        0x48894808	                mov qword [rax + 8], rcx	       333	strbuf.c	FUNCTION_29
0x4001592	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       333	strbuf.c	FUNCTION_29
0x4001596	        0x48895010	             mov qword [rax + 0x10], rdx	       333	strbuf.c	FUNCTION_29
0x400159a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29
0x400159e	          0x488b10	                    mov rdx, qword [rax]	       334	strbuf.c	FUNCTION_29
0x40015a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29
0x40015a5	        0x488b4008	                mov rax, qword [rax + 8]	       334	strbuf.c	FUNCTION_29
0x40015a9	          0x4889d6	                            mov rsi, rdx	       334	strbuf.c	FUNCTION_29
0x40015ac	          0x4829c6	                            sub rsi, rax	       334	strbuf.c	FUNCTION_29
0x40015af	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29
0x40015b3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       334	strbuf.c	FUNCTION_29
0x40015b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       334	strbuf.c	FUNCTION_29
0x40015bb	        0x488b4008	                mov rax, qword [rax + 8]	       334	strbuf.c	FUNCTION_29
0x40015bf	        0x488d3c02	                    lea rdi, [rdx + rax]	       334	strbuf.c	FUNCTION_29
0x40015c3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       334	strbuf.c	FUNCTION_29
0x40015c7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	strbuf.c	FUNCTION_29
0x40015cb	          0x4889d1	                            mov rcx, rdx	       334	strbuf.c	FUNCTION_29
0x40015ce	          0x4889c2	                            mov rdx, rax	       334	strbuf.c	FUNCTION_29
0x40015d1	      0xe800000000	                          call 0x40015d6	       334	strbuf.c	FUNCTION_29
0x40015d6	          0x8945cc	             mov dword [rbp - 0x34], eax	       334	strbuf.c	FUNCTION_29
0x40015d9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       336	strbuf.c	FUNCTION_29	IF_2
0x40015dd	            0x7914	                           jns 0x40015f3	       336	strbuf.c	FUNCTION_29	IF_2
0x40015df	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       337	strbuf.c	FUNCTION_29	CALL_4
0x40015e2	            0x89c6	                            mov esi, eax	       337	strbuf.c	FUNCTION_29	CALL_4
0x40015e4	      0xbf00000000	                              mov edi, 0	       337	strbuf.c	FUNCTION_29	CALL_4
0x40015e9	      0xb800000000	                              mov eax, 0	       337	strbuf.c	FUNCTION_29	CALL_4
0x40015ee	      0xe800000000	                          call 0x40015f3	       337	strbuf.c	FUNCTION_29	CALL_4
0x40015f3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x40015f6	          0x4863d8	                         movsxd rbx, eax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x40015f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x40015fd	          0x4889c7	                            mov rdi, rax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x4001600	      0xe8cdebffff	                   call sym.strbuf_avail	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x4001605	          0x4839c3	                            cmp rbx, rax	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x4001608	            0x767a	                           jbe 0x4001684	       338	strbuf.c	FUNCTION_29	IF_3	CALL_5
0x400160a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x400160d	          0x4863d0	                         movsxd rdx, eax	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x4001610	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x4001614	          0x4889d6	                            mov rsi, rdx	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x4001617	          0x4889c7	                            mov rdi, rax	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x400161a	      0xe800000000	                          call 0x400161f	       339	strbuf.c	FUNCTION_29	IF_3	CALL_6
0x400161f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001623	          0x488b10	                    mov rdx, qword [rax]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001626	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3
0x400162a	        0x488b4008	                mov rax, qword [rax + 8]	       340	strbuf.c	FUNCTION_29	IF_3
0x400162e	          0x4889d6	                            mov rsi, rdx	       340	strbuf.c	FUNCTION_29	IF_3
0x4001631	          0x4829c6	                            sub rsi, rax	       340	strbuf.c	FUNCTION_29	IF_3
0x4001634	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001638	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       340	strbuf.c	FUNCTION_29	IF_3
0x400163c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001640	        0x488b4008	                mov rax, qword [rax + 8]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001644	        0x488d3c02	                    lea rdi, [rdx + rax]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001648	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       340	strbuf.c	FUNCTION_29	IF_3
0x400164c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	strbuf.c	FUNCTION_29	IF_3
0x4001650	          0x4889d1	                            mov rcx, rdx	       340	strbuf.c	FUNCTION_29	IF_3
0x4001653	          0x4889c2	                            mov rdx, rax	       340	strbuf.c	FUNCTION_29	IF_3
0x4001656	      0xe800000000	                          call 0x400165b	       340	strbuf.c	FUNCTION_29	IF_3
0x400165b	          0x8945cc	             mov dword [rbp - 0x34], eax	       340	strbuf.c	FUNCTION_29	IF_3
0x400165e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001661	          0x4863d8	                         movsxd rbx, eax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001664	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001668	          0x4889c7	                            mov rdi, rax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x400166b	      0xe862ebffff	                   call sym.strbuf_avail	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001670	          0x4839c3	                            cmp rbx, rax	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001673	            0x760f	                           jbe 0x4001684	       341	strbuf.c	FUNCTION_29	IF_3	IF_4	CALL_7
0x4001675	      0xbf00000000	                              mov edi, 0	       342	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x400167a	      0xb800000000	                              mov eax, 0	       342	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x400167f	      0xe800000000	                          call 0x4001684	       342	strbuf.c	FUNCTION_29	IF_3	CALL_8
0x4001684	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       344	strbuf.c	FUNCTION_29	CALL_9
0x4001688	        0x488b5008	                mov rdx, qword [rax + 8]	       344	strbuf.c	FUNCTION_29	CALL_9
0x400168c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       344	strbuf.c	FUNCTION_29	CALL_9
0x400168f	            0x4898	                                    cdqe	       344	strbuf.c	FUNCTION_29	CALL_9
0x4001691	          0x4801c2	                            add rdx, rax	       344	strbuf.c	FUNCTION_29	CALL_9
0x4001694	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       344	strbuf.c	FUNCTION_29	CALL_9
0x4001698	          0x4889d6	                            mov rsi, rdx	       344	strbuf.c	FUNCTION_29	CALL_9
0x400169b	          0x4889c7	                            mov rdi, rax	       344	strbuf.c	FUNCTION_29	CALL_9
0x400169e	      0xe865ebffff	                  call sym.strbuf_setlen	       344	strbuf.c	FUNCTION_29	CALL_9
0x40016a3	              0x90	                                     nop	       345	strbuf.c	FUNCTION_29
0x40016a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	strbuf.c	FUNCTION_29
0x40016a8	    0x644833042528	                xor rax, qword fs:[0x28]	       345	strbuf.c	FUNCTION_29
0x40016b1	            0x7405	                            je 0x40016b8	       345	strbuf.c	FUNCTION_29
0x40016b3	      0xe800000000	                          call 0x40016b8	       345	strbuf.c	FUNCTION_29
0x40016b8	        0x4883c458	                           add rsp, 0x58	       345	strbuf.c	FUNCTION_29
0x40016bc	              0x5b	                                 pop rbx	       345	strbuf.c	FUNCTION_29
0x40016bd	              0x5d	                                 pop rbp	       345	strbuf.c	FUNCTION_29
0x40016be	              0xc3	                                     ret	       345	strbuf.c	FUNCTION_29
strbuf_addf	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	41
0x4001136	              0x55	                                push rbp	       270	strbuf.c	FUNCTION_25
0x4001137	          0x4889e5	                            mov rbp, rsp	       270	strbuf.c	FUNCTION_25
0x400113a	    0x4881ece00000	                           sub rsp, 0xe0	       270	strbuf.c	FUNCTION_25
0x4001141	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       270	strbuf.c	FUNCTION_25
0x4001148	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       270	strbuf.c	FUNCTION_25
0x400114f	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       270	strbuf.c	FUNCTION_25
0x4001156	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       270	strbuf.c	FUNCTION_25
0x400115d	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       270	strbuf.c	FUNCTION_25
0x4001164	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       270	strbuf.c	FUNCTION_25
0x400116b	            0x84c0	                             test al, al	       270	strbuf.c	FUNCTION_25
0x400116d	            0x7420	                            je 0x400118f	       270	strbuf.c	FUNCTION_25
0x400116f	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       270	strbuf.c	FUNCTION_25
0x4001173	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       270	strbuf.c	FUNCTION_25
0x4001177	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       270	strbuf.c	FUNCTION_25
0x400117b	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       270	strbuf.c	FUNCTION_25
0x400117f	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       270	strbuf.c	FUNCTION_25
0x4001183	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       270	strbuf.c	FUNCTION_25
0x4001187	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       270	strbuf.c	FUNCTION_25
0x400118b	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       270	strbuf.c	FUNCTION_25
0x400118f	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	strbuf.c	FUNCTION_25
0x4001198	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       270	strbuf.c	FUNCTION_25
0x400119f	            0x31c0	                            xor eax, eax	       270	strbuf.c	FUNCTION_25
0x40011a1	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011ab	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011b5	        0x488d4510	                   lea rax, [rbp + 0x10]	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011b9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011c0	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011c7	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       272	strbuf.c	FUNCTION_25	CALL_1
0x40011ce	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011d5	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011dc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011e3	          0x4889ce	                            mov rsi, rcx	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011e6	          0x4889c7	                            mov rdi, rax	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011e9	      0xe800000000	                          call 0x40011ee	       273	strbuf.c	FUNCTION_25	CALL_2
0x40011ee	              0x90	                                     nop	       275	strbuf.c	FUNCTION_25
0x40011ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       275	strbuf.c	FUNCTION_25
0x40011f6	    0x644833042528	                xor rax, qword fs:[0x28]	       275	strbuf.c	FUNCTION_25
0x40011ff	            0x7405	                            je 0x4001206	       275	strbuf.c	FUNCTION_25
0x4001201	      0xe800000000	                          call 0x4001206	       275	strbuf.c	FUNCTION_25
0x4001206	              0xc9	                                   leave	       275	strbuf.c	FUNCTION_25
0x4001207	              0xc3	                                     ret	       275	strbuf.c	FUNCTION_25
strbuf_avail	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	18
0x40001d2	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_122
0x40001d3	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_122
0x40001d6	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_122
0x40001da	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_122
0x40001de	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_122
0x40001e1	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_122
0x40001e4	            0x741b	                            je 0x4000201	       141	strbuf.h	FUNCTION_122
0x40001e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_122
0x40001ea	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_122
0x40001ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_122
0x40001f1	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_122
0x40001f5	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_122
0x40001f8	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_122
0x40001fb	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_122
0x40001ff	            0xeb05	                           jmp 0x4000206	       141	strbuf.h	FUNCTION_122
0x4000201	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_122
0x4000206	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_122
0x4000207	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_122
strbuf_addstr	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,0:ELSE,0	17
0x4000310	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_125
0x4000311	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_125
0x4000314	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_125
0x4000318	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_125
0x400031c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_125
0x4000320	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_125	CALL_2
0x4000324	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_125	CALL_2
0x4000327	      0xe800000000	                          call 0x400032c	       279	strbuf.h	FUNCTION_125	CALL_2
0x400032c	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_125	CALL_2
0x400032f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_125	CALL_2
0x4000333	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_125	CALL_2
0x4000337	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_125	CALL_2
0x400033a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_125	CALL_2
0x400033d	      0xe800000000	                          call 0x4000342	       279	strbuf.h	FUNCTION_125	CALL_2
0x4000342	              0x90	                                     nop	       280	strbuf.h	FUNCTION_125
0x4000343	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_125
0x4000344	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_125
strbuf_read	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,5:DO,0:IF,3:ELSE,1	81
0x400194a	              0x55	                                push rbp	       416	strbuf.c	FUNCTION_34
0x400194b	          0x4889e5	                            mov rbp, rsp	       416	strbuf.c	FUNCTION_34
0x400194e	        0x4883ec40	                           sub rsp, 0x40	       416	strbuf.c	FUNCTION_34
0x4001952	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       416	strbuf.c	FUNCTION_34
0x4001956	          0x8975d4	             mov dword [rbp - 0x2c], esi	       416	strbuf.c	FUNCTION_34
0x4001959	        0x488955c8	             mov qword [rbp - 0x38], rdx	       416	strbuf.c	FUNCTION_34
0x400195d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	strbuf.c	FUNCTION_34
0x4001961	        0x488b4008	                mov rax, qword [rax + 8]	       417	strbuf.c	FUNCTION_34
0x4001965	        0x488945e0	             mov qword [rbp - 0x20], rax	       417	strbuf.c	FUNCTION_34
0x4001969	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       418	strbuf.c	FUNCTION_34
0x400196d	          0x488b00	                    mov rax, qword [rax]	       418	strbuf.c	FUNCTION_34
0x4001970	        0x488945e8	             mov qword [rbp - 0x18], rax	       418	strbuf.c	FUNCTION_34
0x4001974	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       420	strbuf.c	FUNCTION_34	CALL_1
0x4001979	            0x7406	                            je 0x4001981	       420	strbuf.c	FUNCTION_34	CALL_1
0x400197b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       420	strbuf.c	FUNCTION_34	CALL_1
0x400197f	            0xeb05	                           jmp 0x4001986	       420	strbuf.c	FUNCTION_34	CALL_1
0x4001981	      0xb800200000	                         mov eax, 0x2000	       420	strbuf.c	FUNCTION_34	CALL_1
0x4001986	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       420	strbuf.c	FUNCTION_34	CALL_1
0x400198a	          0x4889c6	                            mov rsi, rax	       420	strbuf.c	FUNCTION_34	CALL_1
0x400198d	          0x4889d7	                            mov rdi, rdx	       420	strbuf.c	FUNCTION_34	CALL_1
0x4001990	      0xe800000000	                          call 0x4001995	       420	strbuf.c	FUNCTION_34	CALL_1
0x4001995	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	strbuf.c	FUNCTION_34	FOR_1
0x4001999	          0x488b10	                    mov rdx, qword [rax]	       422	strbuf.c	FUNCTION_34	FOR_1
0x400199c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019a0	        0x488b4008	                mov rax, qword [rax + 8]	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019a4	          0x4829c2	                            sub rdx, rax	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019a7	          0x4889d0	                            mov rax, rdx	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019aa	        0x4883e801	                              sub rax, 1	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019ae	        0x488945f0	             mov qword [rbp - 0x10], rax	       422	strbuf.c	FUNCTION_34	FOR_1
0x40019b2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019ba	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019c2	        0x488b4008	                mov rax, qword [rax + 8]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019c6	          0x4801c1	                            add rcx, rax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019c9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019cc	          0x4889ce	                            mov rsi, rcx	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019cf	            0x89c7	                            mov edi, eax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019d1	      0xe800000000	                          call 0x40019d6	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019d6	        0x488945f8	                mov qword [rbp - 8], rax	       423	strbuf.c	FUNCTION_34	FOR_1	CALL_2
0x40019da	      0x48837df800	                  cmp qword [rbp - 8], 0	       425	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x40019df	            0x7931	                           jns 0x4001a12	       425	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x40019e1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       426	strbuf.c	FUNCTION_34	FOR_1	IF_1	IF_2
0x40019e6	            0x750e	                           jne 0x40019f6	       426	strbuf.c	FUNCTION_34	FOR_1	IF_1	IF_2
0x40019e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x40019ec	          0x4889c7	                            mov rdi, rax	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x40019ef	      0xe800000000	                          call 0x40019f4	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x40019f4	            0xeb13	                           jmp 0x4001a09	       427	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_3
0x40019f6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x40019fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x40019fe	          0x4889d6	                            mov rsi, rdx	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x4001a01	          0x4889c7	                            mov rdi, rax	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x4001a04	      0xe8ffe7ffff	                  call sym.strbuf_setlen	       429	strbuf.c	FUNCTION_34	FOR_1	IF_1	CALL_4
0x4001a09	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       430	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x4001a10	            0xeb5a	                           jmp 0x4001a6c	       430	strbuf.c	FUNCTION_34	FOR_1	IF_1
0x4001a12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a16	        0x488b5008	                mov rdx, qword [rax + 8]	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a1e	          0x4801c2	                            add rdx, rax	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a25	        0x48895008	                mov qword [rax + 8], rdx	       432	strbuf.c	FUNCTION_34	FOR_1
0x4001a29	        0x488b45f8	                mov rax, qword [rbp - 8]	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x4001a2d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x4001a31	            0x7c16	                            jl 0x4001a49	       433	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x4001a33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x4001a37	      0xbe00200000	                         mov esi, 0x2000	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x4001a3c	          0x4889c7	                            mov rdi, rax	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x4001a3f	      0xe800000000	                          call 0x4001a44	       435	strbuf.c	FUNCTION_34	FOR_1	CALL_5
0x4001a44	      0xe94cffffff	                           jmp 0x4001995	       436	strbuf.c	FUNCTION_34	FOR_1
0x4001a49	              0x90	                                     nop	       434	strbuf.c	FUNCTION_34	FOR_1	IF_3
0x4001a4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	strbuf.c	FUNCTION_34
0x4001a4e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       438	strbuf.c	FUNCTION_34
0x4001a52	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	strbuf.c	FUNCTION_34
0x4001a56	        0x488b4008	                mov rax, qword [rax + 8]	       438	strbuf.c	FUNCTION_34
0x4001a5a	          0x4801d0	                            add rax, rdx	       438	strbuf.c	FUNCTION_34
0x4001a5d	          0xc60000	                       mov byte [rax], 0	       438	strbuf.c	FUNCTION_34
0x4001a60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	strbuf.c	FUNCTION_34
0x4001a64	        0x488b4008	                mov rax, qword [rax + 8]	       439	strbuf.c	FUNCTION_34
0x4001a68	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       439	strbuf.c	FUNCTION_34
0x4001a6c	              0xc9	                                   leave	       440	strbuf.c	FUNCTION_34
0x4001a6d	              0xc3	                                     ret	       440	strbuf.c	FUNCTION_34
strbuf_addstr_urlencode	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,0:ELSE,0	20
0x40022f7	              0x55	                                push rbp	       729	strbuf.c	FUNCTION_52
0x40022f8	          0x4889e5	                            mov rbp, rsp	       729	strbuf.c	FUNCTION_52
0x40022fb	        0x4883ec20	                           sub rsp, 0x20	       729	strbuf.c	FUNCTION_52
0x40022ff	        0x48897df8	                mov qword [rbp - 8], rdi	       729	strbuf.c	FUNCTION_52
0x4002303	        0x488975f0	             mov qword [rbp - 0x10], rsi	       729	strbuf.c	FUNCTION_52
0x4002307	          0x8955ec	             mov dword [rbp - 0x14], edx	       729	strbuf.c	FUNCTION_52
0x400230a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       730	strbuf.c	FUNCTION_52	CALL_2
0x400230e	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002311	      0xe800000000	                          call 0x4002316	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002316	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002319	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       730	strbuf.c	FUNCTION_52	CALL_2
0x400231c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002320	        0x488b45f8	                mov rax, qword [rbp - 8]	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002324	            0x89d1	                            mov ecx, edx	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002326	          0x4889fa	                            mov rdx, rdi	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002329	          0x4889c7	                            mov rdi, rax	       730	strbuf.c	FUNCTION_52	CALL_2
0x400232c	      0xe81fffffff	           call sym.strbuf_add_urlencode	       730	strbuf.c	FUNCTION_52	CALL_2
0x4002331	              0x90	                                     nop	       731	strbuf.c	FUNCTION_52
0x4002332	              0xc9	                                   leave	       731	strbuf.c	FUNCTION_52
0x4002333	              0xc3	                                     ret	       731	strbuf.c	FUNCTION_52
strbuf_getwholeline	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,3:DO,0:IF,4:ELSE,0	70
0x4001d0b	              0x55	                                push rbp	       526	strbuf.c	FUNCTION_39
0x4001d0c	          0x4889e5	                            mov rbp, rsp	       526	strbuf.c	FUNCTION_39
0x4001d0f	        0x4883ec30	                           sub rsp, 0x30	       526	strbuf.c	FUNCTION_39
0x4001d13	        0x48897de8	             mov qword [rbp - 0x18], rdi	       526	strbuf.c	FUNCTION_39
0x4001d17	        0x488975e0	             mov qword [rbp - 0x20], rsi	       526	strbuf.c	FUNCTION_39
0x4001d1b	          0x8955dc	             mov dword [rbp - 0x24], edx	       526	strbuf.c	FUNCTION_39
0x4001d1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x4001d22	          0x4889c7	                            mov rdi, rax	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x4001d25	      0xe800000000	                          call 0x4001d2a	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x4001d2a	            0x85c0	                           test eax, eax	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x4001d2c	            0x740a	                            je 0x4001d38	       529	strbuf.c	FUNCTION_39	IF_1	CALL_1
0x4001d2e	      0xb8ffffffff	                     mov eax, 0xffffffff	       530	strbuf.c	FUNCTION_39	IF_1
0x4001d33	      0xe9de000000	                           jmp 0x4001e16	       530	strbuf.c	FUNCTION_39	IF_1
0x4001d38	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	strbuf.c	FUNCTION_39
0x4001d3c	      0xbe00000000	                              mov esi, 0	       532	strbuf.c	FUNCTION_39
0x4001d41	          0x4889c7	                            mov rdi, rax	       532	strbuf.c	FUNCTION_39
0x4001d44	      0xe8bfe4ffff	                  call sym.strbuf_setlen	       532	strbuf.c	FUNCTION_39
0x4001d49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       535	strbuf.c	FUNCTION_39	IF_2
0x4001d4d	          0x488b00	                    mov rax, qword [rax]	       535	strbuf.c	FUNCTION_39	IF_2
0x4001d50	          0x4885c0	                           test rax, rax	       535	strbuf.c	FUNCTION_39	IF_2
0x4001d53	            0x750c	                           jne 0x4001d61	       535	strbuf.c	FUNCTION_39	IF_2
0x4001d55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	strbuf.c	FUNCTION_39	IF_2
0x4001d59	    0x48c740100000	               mov qword [rax + 0x10], 0	       536	strbuf.c	FUNCTION_39	IF_2
0x4001d61	      0xe800000000	                          call 0x4001d66	       537	strbuf.c	FUNCTION_39
0x4001d66	    0xc70000000000	                      mov dword [rax], 0	       537	strbuf.c	FUNCTION_39
0x4001d6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d70	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d74	        0x488d7a10	                   lea rdi, [rdx + 0x10]	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d78	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d7c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d7f	          0x4889c6	                            mov rsi, rax	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d82	      0xe800000000	                          call 0x4001d87	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d87	        0x488945f8	                mov qword [rbp - 8], rax	       538	strbuf.c	FUNCTION_39	CALL_2
0x4001d8b	      0x48837df800	                  cmp qword [rbp - 8], 0	       540	strbuf.c	FUNCTION_39	IF_3
0x4001d90	            0x7e13	                           jle 0x4001da5	       540	strbuf.c	FUNCTION_39	IF_3
0x4001d92	        0x488b55f8	                mov rdx, qword [rbp - 8]	       541	strbuf.c	FUNCTION_39	IF_3
0x4001d96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       541	strbuf.c	FUNCTION_39	IF_3
0x4001d9a	        0x48895008	                mov qword [rax + 8], rdx	       541	strbuf.c	FUNCTION_39	IF_3
0x4001d9e	      0xb800000000	                              mov eax, 0	       542	strbuf.c	FUNCTION_39	IF_3
0x4001da3	            0xeb71	                           jmp 0x4001e16	       542	strbuf.c	FUNCTION_39	IF_3
0x4001da5	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001daa	            0x7419	                            je 0x4001dc5	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001dac	      0xb900000000	                              mov ecx, 0	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001db1	      0xba20020000	                          mov edx, 0x220	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001db6	      0xbe00000000	                              mov esi, 0	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001dbb	      0xbf00000000	                              mov edi, 0	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001dc0	      0xe800000000	                          call 0x4001dc5	       544	strbuf.c	FUNCTION_39	CALL_3
0x4001dc5	      0xe800000000	                          call 0x4001dca	       557	strbuf.c	FUNCTION_39	IF_4
0x4001dca	            0x8b00	                    mov eax, dword [rax]	       557	strbuf.c	FUNCTION_39	IF_4
0x4001dcc	          0x83f80c	                            cmp eax, 0xc	       557	strbuf.c	FUNCTION_39	IF_4
0x4001dcf	            0x750f	                           jne 0x4001de0	       557	strbuf.c	FUNCTION_39	IF_4
0x4001dd1	      0xbf00000000	                              mov edi, 0	       558	strbuf.c	FUNCTION_39	CALL_4
0x4001dd6	      0xb800000000	                              mov eax, 0	       558	strbuf.c	FUNCTION_39	CALL_4
0x4001ddb	      0xe800000000	                          call 0x4001de0	       558	strbuf.c	FUNCTION_39	CALL_4
0x4001de0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       565	strbuf.c	FUNCTION_39	IF_5
0x4001de4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       565	strbuf.c	FUNCTION_39	IF_5
0x4001de8	          0x4885c0	                           test rax, rax	       565	strbuf.c	FUNCTION_39	IF_5
0x4001deb	            0x7513	                           jne 0x4001e00	       565	strbuf.c	FUNCTION_39	IF_5
0x4001ded	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	strbuf.c	FUNCTION_39	CALL_5
0x4001df1	      0xbe00000000	                              mov esi, 0	       566	strbuf.c	FUNCTION_39	CALL_5
0x4001df6	          0x4889c7	                            mov rdi, rax	       566	strbuf.c	FUNCTION_39	CALL_5
0x4001df9	      0xe800000000	                          call 0x4001dfe	       566	strbuf.c	FUNCTION_39	CALL_5
0x4001dfe	            0xeb11	                           jmp 0x4001e11	       566	strbuf.c	FUNCTION_39	CALL_5
0x4001e00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	strbuf.c	FUNCTION_39	ELSE_1
0x4001e04	      0xbe00000000	                              mov esi, 0	       568	strbuf.c	FUNCTION_39	ELSE_1
0x4001e09	          0x4889c7	                            mov rdi, rax	       568	strbuf.c	FUNCTION_39	ELSE_1
0x4001e0c	      0xe8f7e3ffff	                  call sym.strbuf_setlen	       568	strbuf.c	FUNCTION_39	ELSE_1
0x4001e11	      0xb8ffffffff	                     mov eax, 0xffffffff	       569	strbuf.c	FUNCTION_39
0x4001e16	              0xc9	                                   leave	       570	strbuf.c	FUNCTION_39
0x4001e17	              0xc3	                                     ret	       570	strbuf.c	FUNCTION_39
strbuf_ltrim	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	44
0x40008fe	              0x55	                                push rbp	       124	strbuf.c	FUNCTION_12
0x40008ff	          0x4889e5	                            mov rbp, rsp	       124	strbuf.c	FUNCTION_12
0x4000902	        0x4883ec20	                           sub rsp, 0x20	       124	strbuf.c	FUNCTION_12
0x4000906	        0x48897de8	             mov qword [rbp - 0x18], rdi	       124	strbuf.c	FUNCTION_12
0x400090a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	strbuf.c	FUNCTION_12
0x400090e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       125	strbuf.c	FUNCTION_12
0x4000912	        0x488945f8	                mov qword [rbp - 8], rax	       125	strbuf.c	FUNCTION_12
0x4000916	            0xeb19	                           jmp 0x4000931	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000918	      0x488345f801	                  add qword [rbp - 8], 1	       127	strbuf.c	FUNCTION_12	WHILE_1
0x400091d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x4000921	        0x488b4008	                mov rax, qword [rax + 8]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x4000925	        0x488d50ff	                      lea rdx, [rax - 1]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x4000929	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	strbuf.c	FUNCTION_12	WHILE_1
0x400092d	        0x48895008	                mov qword [rax + 8], rdx	       128	strbuf.c	FUNCTION_12	WHILE_1
0x4000931	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000935	        0x488b4008	                mov rax, qword [rax + 8]	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000939	          0x4885c0	                           test rax, rax	       126	strbuf.c	FUNCTION_12	WHILE_1
0x400093c	            0x741d	                            je 0x400095b	       126	strbuf.c	FUNCTION_12	WHILE_1
0x400093e	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000942	           0xfb600	                   movzx eax, byte [rax]	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000945	           0xfb6c0	                           movzx eax, al	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000948	            0x4898	                                    cdqe	       126	strbuf.c	FUNCTION_12	WHILE_1
0x400094a	     0xfb680000000	                   movzx eax, byte [rax]	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000951	           0xfb6c0	                           movzx eax, al	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000954	          0x83e001	                              and eax, 1	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000957	            0x85c0	                           test eax, eax	       126	strbuf.c	FUNCTION_12	WHILE_1
0x4000959	            0x75bd	                           jne 0x4000918	       126	strbuf.c	FUNCTION_12	WHILE_1
0x400095b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	strbuf.c	FUNCTION_12	CALL_1
0x400095f	        0x488b5008	                mov rdx, qword [rax + 8]	       130	strbuf.c	FUNCTION_12	CALL_1
0x4000963	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	strbuf.c	FUNCTION_12	CALL_1
0x4000967	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	strbuf.c	FUNCTION_12	CALL_1
0x400096b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       130	strbuf.c	FUNCTION_12	CALL_1
0x400096f	          0x4889ce	                            mov rsi, rcx	       130	strbuf.c	FUNCTION_12	CALL_1
0x4000972	          0x4889c7	                            mov rdi, rax	       130	strbuf.c	FUNCTION_12	CALL_1
0x4000975	      0xe800000000	                          call 0x400097a	       130	strbuf.c	FUNCTION_12	CALL_1
0x400097a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	strbuf.c	FUNCTION_12
0x400097e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       131	strbuf.c	FUNCTION_12
0x4000982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	strbuf.c	FUNCTION_12
0x4000986	        0x488b4008	                mov rax, qword [rax + 8]	       131	strbuf.c	FUNCTION_12
0x400098a	          0x4801d0	                            add rax, rdx	       131	strbuf.c	FUNCTION_12
0x400098d	          0xc60000	                       mov byte [rax], 0	       131	strbuf.c	FUNCTION_12
0x4000990	              0x90	                                     nop	       132	strbuf.c	FUNCTION_12
0x4000991	              0xc9	                                   leave	       132	strbuf.c	FUNCTION_12
0x4000992	              0xc3	                                     ret	       132	strbuf.c	FUNCTION_12
is_rfc3986_reserved	functions,0:SWITCH,1:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	16
0x40021d8	              0x55	                                push rbp	       697	strbuf.c	FUNCTION_49
0x40021d9	          0x4889e5	                            mov rbp, rsp	       697	strbuf.c	FUNCTION_49
0x40021dc	            0x89f8	                            mov eax, edi	       697	strbuf.c	FUNCTION_49
0x40021de	          0x8845fc	                  mov byte [rbp - 4], al	       697	strbuf.c	FUNCTION_49
0x40021e1	         0xfbe45fc	               movsx eax, byte [rbp - 4]	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021e5	          0x83e821	                           sub eax, 0x21	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021e8	          0x83f83c	                           cmp eax, 0x3c	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021eb	            0x7713	                            ja 0x4002200	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021ed	            0x89c0	                            mov eax, eax	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021ef	    0x488b04c50000	                  mov rax, qword [rax*8]	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021f7	            0xffe0	                                 jmp rax	       698	strbuf.c	FUNCTION_49	SWITCH_1
0x40021f9	      0xb801000000	                              mov eax, 1	       702	strbuf.c	FUNCTION_49	SWITCH_1
0x40021fe	            0xeb05	                           jmp 0x4002205	       702	strbuf.c	FUNCTION_49	SWITCH_1
0x4002200	      0xb800000000	                              mov eax, 0	       704	strbuf.c	FUNCTION_49
0x4002205	              0x5d	                                 pop rbp	       705	strbuf.c	FUNCTION_49
0x4002206	              0xc3	                                     ret	       705	strbuf.c	FUNCTION_49
strbuf_expand_dict_cb	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,3:DO,0:IF,2:ELSE,0	45
0x4001791	              0x55	                                push rbp	       376	strbuf.c	FUNCTION_31
0x4001792	          0x4889e5	                            mov rbp, rsp	       376	strbuf.c	FUNCTION_31
0x4001795	        0x4883ec30	                           sub rsp, 0x30	       376	strbuf.c	FUNCTION_31
0x4001799	        0x48897de8	             mov qword [rbp - 0x18], rdi	       376	strbuf.c	FUNCTION_31
0x400179d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       376	strbuf.c	FUNCTION_31
0x40017a1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       376	strbuf.c	FUNCTION_31
0x40017a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       377	strbuf.c	FUNCTION_31
0x40017a9	        0x488945f0	             mov qword [rbp - 0x10], rax	       377	strbuf.c	FUNCTION_31
0x40017ad	            0xeb4d	                           jmp 0x40017fc	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x40017af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017b3	          0x488b08	                    mov rcx, qword [rax]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017b6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017be	          0x4889ce	                            mov rsi, rcx	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017c1	          0x4889c7	                            mov rdi, rax	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017c4	      0xe800000000	                          call 0x40017c9	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017c9	            0x85c0	                           test eax, eax	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017cb	            0x752a	                           jne 0x40017f7	       381	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40017cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40017d1	        0x488b4008	                mov rax, qword [rax + 8]	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40017d5	          0x4885c0	                           test rax, rax	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40017d8	            0x7417	                            je 0x40017f1	       382	strbuf.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40017da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017de	        0x488b5008	                mov rdx, qword [rax + 8]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017e6	          0x4889d6	                            mov rsi, rdx	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017e9	          0x4889c7	                            mov rdi, rax	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017ec	      0xe81febffff	                  call sym.strbuf_addstr	       383	strbuf.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x40017f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       384	strbuf.c	FUNCTION_31	FOR_1	IF_1
0x40017f5	            0xeb30	                           jmp 0x4001827	       384	strbuf.c	FUNCTION_31	FOR_1	IF_1
0x40017f7	      0x488345f010	            add qword [rbp - 0x10], 0x10	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x40017fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001800	          0x488b00	                    mov rax, qword [rax]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001803	          0x4885c0	                           test rax, rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001806	            0x741a	                            je 0x4001822	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001808	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x400180c	          0x488b00	                    mov rax, qword [rax]	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x400180f	          0x4889c7	                            mov rdi, rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001812	      0xe800000000	                          call 0x4001817	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001817	        0x488945f8	                mov qword [rbp - 8], rax	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x400181b	      0x48837df800	                  cmp qword [rbp - 8], 0	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001820	            0x758d	                           jne 0x40017af	       380	strbuf.c	FUNCTION_31	FOR_1	CALL_1
0x4001822	      0xb800000000	                              mov eax, 0	       387	strbuf.c	FUNCTION_31
0x4001827	              0xc9	                                   leave	       388	strbuf.c	FUNCTION_31
0x4001828	              0xc3	                                     ret	       388	strbuf.c	FUNCTION_31
strbuf_insert	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	19
0x4000f6d	              0x55	                                push rbp	       239	strbuf.c	FUNCTION_20
0x4000f6e	          0x4889e5	                            mov rbp, rsp	       239	strbuf.c	FUNCTION_20
0x4000f71	        0x4883ec20	                           sub rsp, 0x20	       239	strbuf.c	FUNCTION_20
0x4000f75	        0x48897df8	                mov qword [rbp - 8], rdi	       239	strbuf.c	FUNCTION_20
0x4000f79	        0x488975f0	             mov qword [rbp - 0x10], rsi	       239	strbuf.c	FUNCTION_20
0x4000f7d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       239	strbuf.c	FUNCTION_20
0x4000f81	        0x48894de0	             mov qword [rbp - 0x20], rcx	       239	strbuf.c	FUNCTION_20
0x4000f85	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f89	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f8d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f91	        0x488b45f8	                mov rax, qword [rbp - 8]	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f95	          0x4989c8	                             mov r8, rcx	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f98	          0x4889d1	                            mov rcx, rdx	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000f9b	      0xba00000000	                              mov edx, 0	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000fa0	          0x4889c7	                            mov rdi, rax	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       240	strbuf.c	FUNCTION_20	CALL_1
0x4000fa8	              0x90	                                     nop	       241	strbuf.c	FUNCTION_20
0x4000fa9	              0xc9	                                   leave	       241	strbuf.c	FUNCTION_20
0x4000faa	              0xc3	                                     ret	       241	strbuf.c	FUNCTION_20
strbuf_swap	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	39
0x400013e	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_121
0x400013f	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_121
0x4000142	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_121
0x4000146	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_121
0x400014a	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_121
0x400014e	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_121
0x4000157	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_121
0x400015b	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_121
0x400015d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_121
0x4000161	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_121
0x4000165	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_121
0x4000169	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_121
0x400016d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_121
0x4000171	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_121
0x4000174	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_121
0x4000178	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_121
0x400017c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_121
0x4000180	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_121
0x4000184	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_121
0x4000188	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_121
0x400018c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_121
0x4000190	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_121
0x4000195	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_121
0x4000198	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_121
0x400019b	      0xe800000000	                          call 0x40001a0	       127	strbuf.h	FUNCTION_121
0x40001a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_121
0x40001a4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_121
0x40001a8	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_121
0x40001ab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_121
0x40001af	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_121
0x40001b3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_121
0x40001b7	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_121
0x40001bb	              0x90	                                     nop	       128	strbuf.h	FUNCTION_121
0x40001bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_121
0x40001c0	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_121
0x40001c9	            0x7405	                            je 0x40001d0	       128	strbuf.h	FUNCTION_121
0x40001cb	      0xe800000000	                          call 0x40001d0	       128	strbuf.h	FUNCTION_121
0x40001d0	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_121
0x40001d1	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_121
strbuf_add	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	32
0x4000fe1	              0x55	                                push rbp	       249	strbuf.c	FUNCTION_22
0x4000fe2	          0x4889e5	                            mov rbp, rsp	       249	strbuf.c	FUNCTION_22
0x4000fe5	        0x4883ec20	                           sub rsp, 0x20	       249	strbuf.c	FUNCTION_22
0x4000fe9	        0x48897df8	                mov qword [rbp - 8], rdi	       249	strbuf.c	FUNCTION_22
0x4000fed	        0x488975f0	             mov qword [rbp - 0x10], rsi	       249	strbuf.c	FUNCTION_22
0x4000ff1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       249	strbuf.c	FUNCTION_22
0x4000ff5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       250	strbuf.c	FUNCTION_22	CALL_1
0x4000ff9	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	strbuf.c	FUNCTION_22	CALL_1
0x4000ffd	          0x4889d6	                            mov rsi, rdx	       250	strbuf.c	FUNCTION_22	CALL_1
0x4001000	          0x4889c7	                            mov rdi, rax	       250	strbuf.c	FUNCTION_22	CALL_1
0x4001003	      0xe800000000	                          call 0x4001008	       250	strbuf.c	FUNCTION_22	CALL_1
0x4001008	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0x400100c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001010	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001014	        0x488b4008	                mov rax, qword [rax + 8]	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001018	        0x488d0c02	                    lea rcx, [rdx + rax]	       251	strbuf.c	FUNCTION_22	CALL_2
0x400101c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001020	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001024	          0x4889c6	                            mov rsi, rax	       251	strbuf.c	FUNCTION_22	CALL_2
0x4001027	          0x4889cf	                            mov rdi, rcx	       251	strbuf.c	FUNCTION_22	CALL_2
0x400102a	      0xe800000000	                          call 0x400102f	       251	strbuf.c	FUNCTION_22	CALL_2
0x400102f	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0x4001033	        0x488b5008	                mov rdx, qword [rax + 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0x4001037	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	strbuf.c	FUNCTION_22	CALL_3
0x400103b	          0x4801c2	                            add rdx, rax	       252	strbuf.c	FUNCTION_22	CALL_3
0x400103e	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	strbuf.c	FUNCTION_22	CALL_3
0x4001042	          0x4889d6	                            mov rsi, rdx	       252	strbuf.c	FUNCTION_22	CALL_3
0x4001045	          0x4889c7	                            mov rdi, rax	       252	strbuf.c	FUNCTION_22	CALL_3
0x4001048	      0xe8bbf1ffff	                  call sym.strbuf_setlen	       252	strbuf.c	FUNCTION_22	CALL_3
0x400104d	              0x90	                                     nop	       253	strbuf.c	FUNCTION_22
0x400104e	              0xc9	                                   leave	       253	strbuf.c	FUNCTION_22
0x400104f	              0xc3	                                     ret	       253	strbuf.c	FUNCTION_22
strbuf_getdelim	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,2:ELSE,0	36
0x4001e18	              0x55	                                push rbp	       598	strbuf.c	FUNCTION_41
0x4001e19	          0x4889e5	                            mov rbp, rsp	       598	strbuf.c	FUNCTION_41
0x4001e1c	        0x4883ec20	                           sub rsp, 0x20	       598	strbuf.c	FUNCTION_41
0x4001e20	        0x48897df8	                mov qword [rbp - 8], rdi	       598	strbuf.c	FUNCTION_41
0x4001e24	        0x488975f0	             mov qword [rbp - 0x10], rsi	       598	strbuf.c	FUNCTION_41
0x4001e28	          0x8955ec	             mov dword [rbp - 0x14], edx	       598	strbuf.c	FUNCTION_41
0x4001e2b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e2e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e32	        0x488b45f8	                mov rax, qword [rbp - 8]	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e36	          0x4889ce	                            mov rsi, rcx	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e39	          0x4889c7	                            mov rdi, rax	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e3c	      0xe800000000	                          call 0x4001e41	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e41	            0x85c0	                           test eax, eax	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e43	            0x7407	                            je 0x4001e4c	       599	strbuf.c	FUNCTION_41	IF_1	CALL_1
0x4001e45	      0xb8ffffffff	                     mov eax, 0xffffffff	       600	strbuf.c	FUNCTION_41	IF_1
0x4001e4a	            0xeb42	                           jmp 0x4001e8e	       600	strbuf.c	FUNCTION_41	IF_1
0x4001e4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e50	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e54	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e58	        0x488b4008	                mov rax, qword [rax + 8]	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e5c	        0x4883e801	                              sub rax, 1	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e60	          0x4801d0	                            add rax, rdx	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e63	           0xfb600	                   movzx eax, byte [rax]	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e66	           0xfbec0	                           movsx eax, al	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e69	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e6c	            0x751b	                           jne 0x4001e89	       601	strbuf.c	FUNCTION_41	IF_2
0x4001e6e	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e72	        0x488b4008	                mov rax, qword [rax + 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e76	        0x488d50ff	                      lea rdx, [rax - 1]	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e7e	          0x4889d6	                            mov rsi, rdx	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e81	          0x4889c7	                            mov rdi, rax	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e84	      0xe87fe3ffff	                  call sym.strbuf_setlen	       602	strbuf.c	FUNCTION_41	CALL_2
0x4001e89	      0xb800000000	                              mov eax, 0	       603	strbuf.c	FUNCTION_41
0x4001e8e	              0xc9	                                   leave	       604	strbuf.c	FUNCTION_41
0x4001e8f	              0xc3	                                     ret	       604	strbuf.c	FUNCTION_41
git_has_dos_drive_prefix	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_94
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_94
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_94
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_94
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_94
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_94
strbuf_addbuf_percentquote	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,2:DO,0:IF,1:ELSE,0	40
0x4001829	              0x55	                                push rbp	       391	strbuf.c	FUNCTION_32
0x400182a	          0x4889e5	                            mov rbp, rsp	       391	strbuf.c	FUNCTION_32
0x400182d	        0x4883ec20	                           sub rsp, 0x20	       391	strbuf.c	FUNCTION_32
0x4001831	        0x48897de8	             mov qword [rbp - 0x18], rdi	       391	strbuf.c	FUNCTION_32
0x4001835	        0x488975e0	             mov qword [rbp - 0x20], rsi	       391	strbuf.c	FUNCTION_32
0x4001839	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	strbuf.c	FUNCTION_32
0x400183d	        0x488b4008	                mov rax, qword [rax + 8]	       392	strbuf.c	FUNCTION_32
0x4001841	          0x8945fc	                mov dword [rbp - 4], eax	       392	strbuf.c	FUNCTION_32
0x4001844	    0xc745f8000000	                  mov dword [rbp - 8], 0	       394	strbuf.c	FUNCTION_32	FOR_1
0x400184b	            0xeb50	                           jmp 0x400189d	       394	strbuf.c	FUNCTION_32	FOR_1
0x400184d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001851	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001855	          0x8b45f8	                mov eax, dword [rbp - 8]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001858	            0x4898	                                    cdqe	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x400185a	          0x4801d0	                            add rax, rdx	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x400185d	           0xfb600	                   movzx eax, byte [rax]	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001860	            0x3c25	                            cmp al, 0x25	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001862	            0x7511	                           jne 0x4001875	       395	strbuf.c	FUNCTION_32	FOR_1	IF_1
0x4001864	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x4001868	      0xbe25000000	                           mov esi, 0x25	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x400186d	          0x4889c7	                            mov rdi, rax	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x4001870	      0xe82deaffff	                   call sym.strbuf_addch	       396	strbuf.c	FUNCTION_32	FOR_1	CALL_1
0x4001875	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001879	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x400187d	          0x8b45f8	                mov eax, dword [rbp - 8]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001880	            0x4898	                                    cdqe	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001882	          0x4801d0	                            add rax, rdx	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001885	           0xfb600	                   movzx eax, byte [rax]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001888	           0xfbed0	                           movsx edx, al	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x400188b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x400188f	            0x89d6	                            mov esi, edx	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001891	          0x4889c7	                            mov rdi, rax	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001894	      0xe809eaffff	                   call sym.strbuf_addch	       397	strbuf.c	FUNCTION_32	FOR_1	CALL_2
0x4001899	        0x8345f801	                  add dword [rbp - 8], 1	       394	strbuf.c	FUNCTION_32	FOR_1
0x400189d	          0x8b45f8	                mov eax, dword [rbp - 8]	       394	strbuf.c	FUNCTION_32	FOR_1
0x40018a0	          0x3b45fc	                cmp eax, dword [rbp - 4]	       394	strbuf.c	FUNCTION_32	FOR_1
0x40018a3	            0x7ca8	                            jl 0x400184d	       394	strbuf.c	FUNCTION_32	FOR_1
0x40018a5	              0x90	                                     nop	       399	strbuf.c	FUNCTION_32
0x40018a6	              0xc9	                                   leave	       399	strbuf.c	FUNCTION_32
0x40018a7	              0xc3	                                     ret	       399	strbuf.c	FUNCTION_32
strbuf_getcwd	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,5:DO,0:IF,4:ELSE,1	61
0x4001c35	              0x55	                                push rbp	       493	strbuf.c	FUNCTION_38
0x4001c36	          0x4889e5	                            mov rbp, rsp	       493	strbuf.c	FUNCTION_38
0x4001c39	        0x4883ec20	                           sub rsp, 0x20	       493	strbuf.c	FUNCTION_38
0x4001c3d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       493	strbuf.c	FUNCTION_38
0x4001c41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	strbuf.c	FUNCTION_38
0x4001c45	          0x488b00	                    mov rax, qword [rax]	       494	strbuf.c	FUNCTION_38
0x4001c48	        0x488945f8	                mov qword [rbp - 8], rax	       494	strbuf.c	FUNCTION_38
0x4001c4c	    0x48c745f08000	           mov qword [rbp - 0x10], 0x80 	       495	strbuf.c	FUNCTION_38
0x4001c54	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x4001c58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x4001c5c	          0x4889d6	                            mov rsi, rdx	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x4001c5f	          0x4889c7	                            mov rdi, rax	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x4001c62	      0xe800000000	                          call 0x4001c67	       498	strbuf.c	FUNCTION_38	FOR_1	CALL_1
0x4001c67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c6b	          0x488b10	                    mov rdx, qword [rax]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c72	        0x488b4010	            mov rax, qword [rax + 0x10] 	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c76	          0x4889d6	                            mov rsi, rdx	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c79	          0x4889c7	                            mov rdi, rax	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c7c	      0xe800000000	                          call 0x4001c81	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c81	          0x4885c0	                           test rax, rax	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c84	            0x7429	                            je 0x4001caf	       499	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_2
0x4001c86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c8a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c8e	          0x4889c7	                            mov rdi, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c91	      0xe800000000	                          call 0x4001c96	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c96	          0x4889c2	                            mov rdx, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001c9d	          0x4889d6	                            mov rsi, rdx	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001ca0	          0x4889c7	                            mov rdi, rax	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001ca3	      0xe860e5ffff	                  call sym.strbuf_setlen	       500	strbuf.c	FUNCTION_38	FOR_1	IF_1	CALL_4
0x4001ca8	      0xb800000000	                              mov eax, 0	       501	strbuf.c	FUNCTION_38	FOR_1	IF_1
0x4001cad	            0xeb5a	                           jmp 0x4001d09	       501	strbuf.c	FUNCTION_38	FOR_1	IF_1
0x4001caf	      0xe800000000	                          call 0x4001cb4	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cb4	            0x8b00	                    mov eax, dword [rax]	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cb6	          0x83f80d	                            cmp eax, 0xd	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cb9	            0x750a	                           jne 0x4001cc5	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cbb	    0x48817df0ff0f	          cmp qword [rbp - 0x10], 0xfff 	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cc3	            0x760e	                           jbe 0x4001cd3	       511	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cc5	      0xe800000000	                          call 0x4001cca	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001cca	            0x8b00	                    mov eax, dword [rax]	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001ccc	          0x83f822	                           cmp eax, 0x22	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001ccf	            0x750c	                           jne 0x4001cdd	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001cd1	            0xeb01	                           jmp 0x4001cd4	       514	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001cd3	              0x90	                                     nop	       512	strbuf.c	FUNCTION_38	FOR_1	IF_2
0x4001cd4	        0x48d165f0	               shl qword [rbp - 0x10], 1	       497	strbuf.c	FUNCTION_38	FOR_1
0x4001cd8	      0xe977ffffff	                           jmp 0x4001c54	       516	strbuf.c	FUNCTION_38	FOR_1
0x4001cdd	              0x90	                                     nop	       515	strbuf.c	FUNCTION_38	FOR_1	IF_3
0x4001cde	      0x48837df800	                  cmp qword [rbp - 8], 0	       517	strbuf.c	FUNCTION_38	IF_4
0x4001ce3	            0x750e	                           jne 0x4001cf3	       517	strbuf.c	FUNCTION_38	IF_4
0x4001ce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	strbuf.c	FUNCTION_38	CALL_5
0x4001ce9	          0x4889c7	                            mov rdi, rax	       518	strbuf.c	FUNCTION_38	CALL_5
0x4001cec	      0xe800000000	                          call 0x4001cf1	       518	strbuf.c	FUNCTION_38	CALL_5
0x4001cf1	            0xeb11	                           jmp 0x4001d04	       518	strbuf.c	FUNCTION_38	CALL_5
0x4001cf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       520	strbuf.c	FUNCTION_38	ELSE_1
0x4001cf7	      0xbe00000000	                              mov esi, 0	       520	strbuf.c	FUNCTION_38	ELSE_1
0x4001cfc	          0x4889c7	                            mov rdi, rax	       520	strbuf.c	FUNCTION_38	ELSE_1
0x4001cff	      0xe804e5ffff	                  call sym.strbuf_setlen	       520	strbuf.c	FUNCTION_38	ELSE_1
0x4001d04	      0xb8ffffffff	                     mov eax, 0xffffffff	       521	strbuf.c	FUNCTION_38
0x4001d09	              0xc9	                                   leave	       522	strbuf.c	FUNCTION_38
0x4001d0a	              0xc3	                                     ret	       522	strbuf.c	FUNCTION_38
strbuf_add_real_path	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,1:ELSE,1	43
0x400263a	              0x55	                                push rbp	       778	strbuf.c	FUNCTION_55
0x400263b	          0x4889e5	                            mov rbp, rsp	       778	strbuf.c	FUNCTION_55
0x400263e	        0x4883ec30	                           sub rsp, 0x30	       778	strbuf.c	FUNCTION_55
0x4002642	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       778	strbuf.c	FUNCTION_55
0x4002646	        0x488975d0	             mov qword [rbp - 0x30], rsi	       778	strbuf.c	FUNCTION_55
0x400264a	    0x64488b042528	                mov rax, qword fs:[0x28]	       778	strbuf.c	FUNCTION_55
0x4002653	        0x488945f8	                mov qword [rbp - 8], rax	       778	strbuf.c	FUNCTION_55
0x4002657	            0x31c0	                            xor eax, eax	       778	strbuf.c	FUNCTION_55
0x4002659	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       779	strbuf.c	FUNCTION_55	IF_1
0x400265d	        0x488b4008	                mov rax, qword [rax + 8]	       779	strbuf.c	FUNCTION_55	IF_1
0x4002661	          0x4885c0	                           test rax, rax	       779	strbuf.c	FUNCTION_55	IF_1
0x4002664	            0x7451	                            je 0x40026b7	       779	strbuf.c	FUNCTION_55	IF_1
0x4002666	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x400266e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x4002676	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       780	strbuf.c	FUNCTION_55	IF_1
0x400267e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x4002682	        0x488d45e0	                   lea rax, [rbp - 0x20]	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x4002686	      0xba01000000	                              mov edx, 1	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x400268b	          0x4889ce	                            mov rsi, rcx	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x400268e	          0x4889c7	                            mov rdi, rax	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x4002691	      0xe800000000	                          call 0x4002696	       781	strbuf.c	FUNCTION_55	IF_1	CALL_1
0x4002696	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x400269a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x400269e	          0x4889d6	                            mov rsi, rdx	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x40026a1	          0x4889c7	                            mov rdi, rax	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x40026a4	      0xe800000000	                          call 0x40026a9	       782	strbuf.c	FUNCTION_55	IF_1	CALL_2
0x40026a9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x40026ad	          0x4889c7	                            mov rdi, rax	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x40026b0	      0xe800000000	                          call 0x40026b5	       783	strbuf.c	FUNCTION_55	IF_1	CALL_3
0x40026b5	            0xeb18	                           jmp 0x40026cf	       786	strbuf.c	FUNCTION_55
0x40026b7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026bf	      0xba01000000	                              mov edx, 1	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026c4	          0x4889ce	                            mov rsi, rcx	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026c7	          0x4889c7	                            mov rdi, rax	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026ca	      0xe800000000	                          call 0x40026cf	       785	strbuf.c	FUNCTION_55	CALL_4
0x40026cf	              0x90	                                     nop	       786	strbuf.c	FUNCTION_55
0x40026d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	strbuf.c	FUNCTION_55
0x40026d4	    0x644833042528	                xor rax, qword fs:[0x28]	       786	strbuf.c	FUNCTION_55
0x40026dd	            0x7405	                            je 0x40026e4	       786	strbuf.c	FUNCTION_55
0x40026df	      0xe800000000	                          call 0x40026e4	       786	strbuf.c	FUNCTION_55
0x40026e4	              0xc9	                                   leave	       786	strbuf.c	FUNCTION_55
0x40026e5	              0xc3	                                     ret	       786	strbuf.c	FUNCTION_55
strbuf_addch	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,1:ELSE,0	33
0x40002a2	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_124
0x40002a3	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_124
0x40002a6	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_124
0x40002aa	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_124
0x40002ae	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_124
0x40002b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_124	IF_1	CALL_1
0x40002b5	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_124	IF_1	CALL_1
0x40002b8	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_124	IF_1	CALL_1
0x40002bd	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_124	IF_1	CALL_1
0x40002c0	            0x7511	                           jne 0x40002d3	       227	strbuf.h	FUNCTION_124	IF_1	CALL_1
0x40002c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_124	CALL_2
0x40002c6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_124	CALL_2
0x40002cb	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_124	CALL_2
0x40002ce	      0xe800000000	                          call 0x40002d3	       228	strbuf.h	FUNCTION_124	CALL_2
0x40002d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_124
0x40002d7	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_124
0x40002db	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_124
0x40002df	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_124
0x40002e3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_124
0x40002e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_124
0x40002eb	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_124
0x40002ef	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_124
0x40002f2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_124
0x40002f5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_124
0x40002f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_124
0x40002fb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_124
0x40002ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_124
0x4000303	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_124
0x4000307	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_124
0x400030a	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_124
0x400030d	              0x90	                                     nop	       231	strbuf.h	FUNCTION_124
0x400030e	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_124
0x400030f	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_124
strbuf_tolower	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,0:DO,0:IF,0:ELSE,0	30
0x4000a48	              0x55	                                push rbp	       151	strbuf.c	FUNCTION_14
0x4000a49	          0x4889e5	                            mov rbp, rsp	       151	strbuf.c	FUNCTION_14
0x4000a4c	        0x4883ec18	                           sub rsp, 0x18	       151	strbuf.c	FUNCTION_14
0x4000a50	        0x48897de8	             mov qword [rbp - 0x18], rdi	       151	strbuf.c	FUNCTION_14
0x4000a54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0x4000a58	        0x488b4010	            mov rax, qword [rax + 0x10] 	       152	strbuf.c	FUNCTION_14
0x4000a5c	        0x488945f0	             mov qword [rbp - 0x10], rax	       152	strbuf.c	FUNCTION_14
0x4000a60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0x4000a64	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       152	strbuf.c	FUNCTION_14
0x4000a68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	strbuf.c	FUNCTION_14
0x4000a6c	        0x488b4008	                mov rax, qword [rax + 8]	       152	strbuf.c	FUNCTION_14
0x4000a70	          0x4801d0	                            add rax, rdx	       152	strbuf.c	FUNCTION_14
0x4000a73	        0x488945f8	                mov qword [rbp - 8], rax	       152	strbuf.c	FUNCTION_14
0x4000a77	            0xeb23	                           jmp 0x4000a9c	       153	strbuf.c	FUNCTION_14	FOR_1
0x4000a79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a7d	           0xfb600	                   movzx eax, byte [rax]	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a80	           0xfb6c0	                           movzx eax, al	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a83	      0xbe20000000	                           mov esi, 0x20	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a88	            0x89c7	                            mov edi, eax	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a8a	      0xe87bf6ffff	                      call sym.sane_case	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a8f	            0x89c2	                            mov edx, eax	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a95	            0x8810	                      mov byte [rax], dl	       154	strbuf.c	FUNCTION_14	FOR_1
0x4000a97	      0x488345f001	               add qword [rbp - 0x10], 1	       153	strbuf.c	FUNCTION_14	FOR_1
0x4000a9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	strbuf.c	FUNCTION_14	FOR_1
0x4000aa0	        0x483b45f8	                cmp rax, qword [rbp - 8]	       153	strbuf.c	FUNCTION_14	FOR_1
0x4000aa4	            0x72d3	                            jb 0x4000a79	       153	strbuf.c	FUNCTION_14	FOR_1
0x4000aa6	              0x90	                                     nop	       155	strbuf.c	FUNCTION_14
0x4000aa7	              0xc9	                                   leave	       155	strbuf.c	FUNCTION_14
0x4000aa8	              0xc3	                                     ret	       155	strbuf.c	FUNCTION_14
cleanup	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,0:DO,0:IF,1:ELSE,0	26
0x4002dd8	              0x55	                                push rbp	       935	strbuf.c	FUNCTION_64
0x4002dd9	          0x4889e5	                            mov rbp, rsp	       935	strbuf.c	FUNCTION_64
0x4002ddc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       935	strbuf.c	FUNCTION_64
0x4002de0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       935	strbuf.c	FUNCTION_64
0x4002de4	            0xeb31	                           jmp 0x4002e17	       936	strbuf.c	FUNCTION_64	WHILE_1
0x4002de6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002dea	        0x488d50ff	                      lea rdx, [rax - 1]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002dee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002df2	          0x4801d0	                            add rax, rdx	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002df5	           0xfb600	                   movzx eax, byte [rax]	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002df8	          0x8845ff	                  mov byte [rbp - 1], al	       937	strbuf.c	FUNCTION_64	WHILE_1
0x4002dfb	         0xfb645ff	               movzx eax, byte [rbp - 1]	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002dff	            0x4898	                                    cdqe	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e01	     0xfb680000000	                   movzx eax, byte [rax]	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e08	           0xfb6c0	                           movzx eax, al	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e0b	          0x83e001	                              and eax, 1	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e0e	            0x85c0	                           test eax, eax	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e10	            0x740e	                            je 0x4002e20	       938	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e12	      0x48836de001	               sub qword [rbp - 0x20], 1	       940	strbuf.c	FUNCTION_64	WHILE_1
0x4002e17	      0x48837de000	               cmp qword [rbp - 0x20], 0	       936	strbuf.c	FUNCTION_64	WHILE_1
0x4002e1c	            0x75c8	                           jne 0x4002de6	       936	strbuf.c	FUNCTION_64	WHILE_1
0x4002e1e	            0xeb01	                           jmp 0x4002e21	       936	strbuf.c	FUNCTION_64	WHILE_1
0x4002e20	              0x90	                                     nop	       939	strbuf.c	FUNCTION_64	WHILE_1	IF_1
0x4002e21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       943	strbuf.c	FUNCTION_64
0x4002e25	              0x5d	                                 pop rbp	       944	strbuf.c	FUNCTION_64
0x4002e26	              0xc3	                                     ret	       944	strbuf.c	FUNCTION_64
strbuf_attach	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,0:ELSE,0	32
0x4000644	              0x55	                                push rbp	        81	strbuf.c	FUNCTION_7
0x4000645	          0x4889e5	                            mov rbp, rsp	        81	strbuf.c	FUNCTION_7
0x4000648	        0x4883ec20	                           sub rsp, 0x20	        81	strbuf.c	FUNCTION_7
0x400064c	        0x48897df8	                mov qword [rbp - 8], rdi	        81	strbuf.c	FUNCTION_7
0x4000650	        0x488975f0	             mov qword [rbp - 0x10], rsi	        81	strbuf.c	FUNCTION_7
0x4000654	        0x488955e8	             mov qword [rbp - 0x18], rdx	        81	strbuf.c	FUNCTION_7
0x4000658	        0x48894de0	             mov qword [rbp - 0x20], rcx	        81	strbuf.c	FUNCTION_7
0x400065c	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	strbuf.c	FUNCTION_7	CALL_1
0x4000660	          0x4889c7	                            mov rdi, rax	        82	strbuf.c	FUNCTION_7	CALL_1
0x4000663	      0xe800000000	                          call 0x4000668	        82	strbuf.c	FUNCTION_7	CALL_1
0x4000668	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	strbuf.c	FUNCTION_7
0x400066c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        83	strbuf.c	FUNCTION_7
0x4000670	        0x48895010	             mov qword [rax + 0x10], rdx	        83	strbuf.c	FUNCTION_7
0x4000674	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	strbuf.c	FUNCTION_7
0x4000678	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        84	strbuf.c	FUNCTION_7
0x400067c	        0x48895008	                mov qword [rax + 8], rdx	        84	strbuf.c	FUNCTION_7
0x4000680	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	strbuf.c	FUNCTION_7
0x4000684	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        85	strbuf.c	FUNCTION_7
0x4000688	          0x488910	                    mov qword [rax], rdx	        85	strbuf.c	FUNCTION_7
0x400068b	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	strbuf.c	FUNCTION_7	CALL_2
0x400068f	      0xbe00000000	                              mov esi, 0	        86	strbuf.c	FUNCTION_7	CALL_2
0x4000694	          0x4889c7	                            mov rdi, rax	        86	strbuf.c	FUNCTION_7	CALL_2
0x4000697	      0xe800000000	                          call 0x400069c	        86	strbuf.c	FUNCTION_7	CALL_2
0x400069c	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	strbuf.c	FUNCTION_7
0x40006a0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        87	strbuf.c	FUNCTION_7
0x40006a4	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	strbuf.c	FUNCTION_7
0x40006a8	        0x488b4008	                mov rax, qword [rax + 8]	        87	strbuf.c	FUNCTION_7
0x40006ac	          0x4801d0	                            add rax, rdx	        87	strbuf.c	FUNCTION_7
0x40006af	          0xc60000	                       mov byte [rax], 0	        87	strbuf.c	FUNCTION_7
0x40006b2	              0x90	                                     nop	        88	strbuf.c	FUNCTION_7
0x40006b3	              0xc9	                                   leave	        88	strbuf.c	FUNCTION_7
0x40006b4	              0xc3	                                     ret	        88	strbuf.c	FUNCTION_7
strbuf_getwholeline_fd	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,2:DO,0:IF,2:ELSE,0	41
0x4001fa0	              0x55	                                push rbp	       629	strbuf.c	FUNCTION_45
0x4001fa1	          0x4889e5	                            mov rbp, rsp	       629	strbuf.c	FUNCTION_45
0x4001fa4	        0x4883ec30	                           sub rsp, 0x30	       629	strbuf.c	FUNCTION_45
0x4001fa8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       629	strbuf.c	FUNCTION_45
0x4001fac	          0x8975d4	             mov dword [rbp - 0x2c], esi	       629	strbuf.c	FUNCTION_45
0x4001faf	          0x8955d0	             mov dword [rbp - 0x30], edx	       629	strbuf.c	FUNCTION_45
0x4001fb2	    0x64488b042528	                mov rax, qword fs:[0x28]	       629	strbuf.c	FUNCTION_45
0x4001fbb	        0x488945f8	                mov qword [rbp - 8], rax	       629	strbuf.c	FUNCTION_45
0x4001fbf	            0x31c0	                            xor eax, eax	       629	strbuf.c	FUNCTION_45
0x4001fc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       630	strbuf.c	FUNCTION_45
0x4001fc5	      0xbe00000000	                              mov esi, 0	       630	strbuf.c	FUNCTION_45
0x4001fca	          0x4889c7	                            mov rdi, rax	       630	strbuf.c	FUNCTION_45
0x4001fcd	      0xe836e2ffff	                  call sym.strbuf_setlen	       630	strbuf.c	FUNCTION_45
0x4001fd2	        0x488d4def	                   lea rcx, [rbp - 0x11]	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fd6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fd9	      0xba01000000	                              mov edx, 1	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fde	          0x4889ce	                            mov rsi, rcx	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fe1	            0x89c7	                            mov edi, eax	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fe3	      0xe800000000	                          call 0x4001fe8	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fe8	        0x488945f0	             mov qword [rbp - 0x10], rax	       634	strbuf.c	FUNCTION_45	WHILE_1	CALL_1
0x4001fec	      0x48837df000	               cmp qword [rbp - 0x10], 0	       635	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x4001ff1	            0x7f07	                            jg 0x4001ffa	       635	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x4001ff3	      0xb8ffffffff	                     mov eax, 0xffffffff	       636	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x4001ff8	            0xeb26	                           jmp 0x4002020	       636	strbuf.c	FUNCTION_45	WHILE_1	IF_1
0x4001ffa	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x4001ffe	           0xfbed0	                           movsx edx, al	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x4002001	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x4002005	            0x89d6	                            mov esi, edx	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x4002007	          0x4889c7	                            mov rdi, rax	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x400200a	      0xe893e2ffff	                   call sym.strbuf_addch	       637	strbuf.c	FUNCTION_45	WHILE_1	CALL_2
0x400200f	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x4002013	           0xfbec0	                           movsx eax, al	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x4002016	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x4002019	            0x75b7	                           jne 0x4001fd2	       638	strbuf.c	FUNCTION_45	WHILE_1	IF_2
0x400201b	      0xb800000000	                              mov eax, 0	       641	strbuf.c	FUNCTION_45
0x4002020	        0x488b4df8	                mov rcx, qword [rbp - 8]	       642	strbuf.c	FUNCTION_45
0x4002024	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       642	strbuf.c	FUNCTION_45
0x400202d	            0x7405	                            je 0x4002034	       642	strbuf.c	FUNCTION_45
0x400202f	      0xe800000000	                          call 0x4002034	       642	strbuf.c	FUNCTION_45
0x4002034	              0xc9	                                   leave	       642	strbuf.c	FUNCTION_45
0x4002035	              0xc3	                                     ret	       642	strbuf.c	FUNCTION_45
strbuf_split_buf	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,4:DO,0:IF,2:ELSE,0	148
0x4000aa9	              0x55	                                push rbp	       159	strbuf.c	FUNCTION_15
0x4000aaa	          0x4889e5	                            mov rbp, rsp	       159	strbuf.c	FUNCTION_15
0x4000aad	        0x4883ec50	                           sub rsp, 0x50	       159	strbuf.c	FUNCTION_15
0x4000ab1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       159	strbuf.c	FUNCTION_15
0x4000ab5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       159	strbuf.c	FUNCTION_15
0x4000ab9	          0x8955bc	             mov dword [rbp - 0x44], edx	       159	strbuf.c	FUNCTION_15
0x4000abc	          0x894db8	             mov dword [rbp - 0x48], ecx	       159	strbuf.c	FUNCTION_15
0x4000abf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       160	strbuf.c	FUNCTION_15
0x4000ac7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       161	strbuf.c	FUNCTION_15
0x4000acf	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       161	strbuf.c	FUNCTION_15
0x4000ad7	      0xe942010000	                           jmp 0x4000c1e	       164	strbuf.c	FUNCTION_15	WHILE_1
0x4000adc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       165	strbuf.c	FUNCTION_15	WHILE_1
0x4000ae0	          0x8945d4	             mov dword [rbp - 0x2c], eax	       165	strbuf.c	FUNCTION_15	WHILE_1
0x4000ae3	        0x837db800	               cmp dword [rbp - 0x48], 0	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000ae7	            0x7e12	                           jle 0x4000afb	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000ae9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000aed	        0x488d5001	                      lea rdx, [rax + 1]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000af1	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000af4	            0x4898	                                    cdqe	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000af6	          0x4839c2	                            cmp rdx, rax	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000af9	            0x7334	                           jae 0x4000b2f	       166	strbuf.c	FUNCTION_15	WHILE_1	IF_1
0x4000afb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000aff	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b06	            0x89ce	                            mov esi, ecx	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b08	          0x4889c7	                            mov rdi, rax	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b0b	      0xe800000000	                          call 0x4000b10	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b10	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	strbuf.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000b14	      0x48837df000	               cmp qword [rbp - 0x10], 0	       168	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b19	            0x7414	                            je 0x4000b2f	       168	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b1b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b23	          0x4829c2	                            sub rdx, rax	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b26	          0x4889d0	                            mov rax, rdx	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b29	          0x83c001	                              add eax, 1	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b2c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       169	strbuf.c	FUNCTION_15	WHILE_1	IF_1	IF_2
0x4000b2f	      0xbf18000000	                           mov edi, 0x18	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0x4000b34	      0xe800000000	                          call 0x4000b39	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0x4000b39	        0x488945f8	                mov qword [rbp - 8], rax	       171	strbuf.c	FUNCTION_15	WHILE_1	CALL_2
0x4000b3d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b40	          0x4863d0	                         movsxd rdx, eax	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b43	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b47	          0x4889d6	                            mov rsi, rdx	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b4a	          0x4889c7	                            mov rdi, rax	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b4d	      0xe800000000	                          call 0x4000b52	       172	strbuf.c	FUNCTION_15	WHILE_1	CALL_3
0x4000b52	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b55	          0x4863d0	                         movsxd rdx, eax	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b58	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b60	          0x4889ce	                            mov rsi, rcx	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b63	          0x4889c7	                            mov rdi, rax	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b66	      0xe800000000	                          call 0x4000b6b	       173	strbuf.c	FUNCTION_15	WHILE_1	CALL_4
0x4000b6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b6f	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b73	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b77	            0x7671	                           jbe 0x4000bea	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b79	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b7d	          0x4889d0	                            mov rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b80	          0x4801c0	                            add rax, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b83	          0x4801d0	                            add rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b86	        0x4883c030	                           add rax, 0x30	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b8a	          0x48d1e8	                              shr rax, 1	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b8d	          0x4889c2	                            mov rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b90	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b94	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b98	          0x4839c2	                            cmp rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b9b	            0x730e	                           jae 0x4000bab	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000b9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000ba1	        0x4883c002	                              add rax, 2	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000ba5	        0x488945e8	             mov qword [rbp - 0x18], rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000ba9	            0xeb18	                           jmp 0x4000bc3	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000baf	          0x4889d0	                            mov rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bb2	          0x4801c0	                            add rax, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bb5	          0x4801d0	                            add rax, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bb8	        0x4883c030	                           add rax, 0x30	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bbc	          0x48d1e8	                              shr rax, 1	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bbf	        0x488945e8	             mov qword [rbp - 0x18], rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bc7	          0x4889c6	                            mov rsi, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bca	      0xbf08000000	                              mov edi, 8	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bcf	      0xe8e4f4ffff	                        call sym.st_mult	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bd4	          0x4889c2	                            mov rdx, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bd7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bdb	          0x4889d6	                            mov rsi, rdx	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bde	          0x4889c7	                            mov rdi, rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000be1	      0xe800000000	                          call 0x4000be6	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000be6	        0x488945d8	             mov qword [rbp - 0x28], rax	       174	strbuf.c	FUNCTION_15	WHILE_1
0x4000bea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000bee	        0x488d5001	                      lea rdx, [rax + 1]	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000bf2	        0x488955e0	             mov qword [rbp - 0x20], rdx	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000bf6	    0x488d14c50000	                        lea rdx, [rax*8]	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000bfe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000c02	          0x4801c2	                            add rdx, rax	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000c05	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000c09	          0x488902	                    mov qword [rdx], rax	       175	strbuf.c	FUNCTION_15	WHILE_1
0x4000c0c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       176	strbuf.c	FUNCTION_15	WHILE_1
0x4000c0f	            0x4898	                                    cdqe	       176	strbuf.c	FUNCTION_15	WHILE_1
0x4000c11	        0x480145c8	            add qword [rbp - 0x38], rax 	       176	strbuf.c	FUNCTION_15	WHILE_1
0x4000c15	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       177	strbuf.c	FUNCTION_15	WHILE_1
0x4000c18	            0x4898	                                    cdqe	       177	strbuf.c	FUNCTION_15	WHILE_1
0x4000c1a	        0x482945c0	             sub qword [rbp - 0x40], rax	       177	strbuf.c	FUNCTION_15	WHILE_1
0x4000c1e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       164	strbuf.c	FUNCTION_15	WHILE_1
0x4000c23	     0xf85b3feffff	                           jne 0x4000adc	       164	strbuf.c	FUNCTION_15	WHILE_1
0x4000c29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15
0x4000c2d	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15
0x4000c31	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15
0x4000c35	            0x7671	                           jbe 0x4000ca8	       179	strbuf.c	FUNCTION_15
0x4000c37	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15
0x4000c3b	          0x4889d0	                            mov rax, rdx	       179	strbuf.c	FUNCTION_15
0x4000c3e	          0x4801c0	                            add rax, rax	       179	strbuf.c	FUNCTION_15
0x4000c41	          0x4801d0	                            add rax, rdx	       179	strbuf.c	FUNCTION_15
0x4000c44	        0x4883c030	                           add rax, 0x30	       179	strbuf.c	FUNCTION_15
0x4000c48	          0x48d1e8	                              shr rax, 1	       179	strbuf.c	FUNCTION_15
0x4000c4b	          0x4889c2	                            mov rdx, rax	       179	strbuf.c	FUNCTION_15
0x4000c4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15
0x4000c52	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15
0x4000c56	          0x4839c2	                            cmp rdx, rax	       179	strbuf.c	FUNCTION_15
0x4000c59	            0x730e	                           jae 0x4000c69	       179	strbuf.c	FUNCTION_15
0x4000c5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       179	strbuf.c	FUNCTION_15
0x4000c5f	        0x4883c001	                              add rax, 1	       179	strbuf.c	FUNCTION_15
0x4000c63	        0x488945e8	             mov qword [rbp - 0x18], rax	       179	strbuf.c	FUNCTION_15
0x4000c67	            0xeb18	                           jmp 0x4000c81	       179	strbuf.c	FUNCTION_15
0x4000c69	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15
0x4000c6d	          0x4889d0	                            mov rax, rdx	       179	strbuf.c	FUNCTION_15
0x4000c70	          0x4801c0	                            add rax, rax	       179	strbuf.c	FUNCTION_15
0x4000c73	          0x4801d0	                            add rax, rdx	       179	strbuf.c	FUNCTION_15
0x4000c76	        0x4883c030	                           add rax, 0x30	       179	strbuf.c	FUNCTION_15
0x4000c7a	          0x48d1e8	                              shr rax, 1	       179	strbuf.c	FUNCTION_15
0x4000c7d	        0x488945e8	             mov qword [rbp - 0x18], rax	       179	strbuf.c	FUNCTION_15
0x4000c81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	strbuf.c	FUNCTION_15
0x4000c85	          0x4889c6	                            mov rsi, rax	       179	strbuf.c	FUNCTION_15
0x4000c88	      0xbf08000000	                              mov edi, 8	       179	strbuf.c	FUNCTION_15
0x4000c8d	      0xe826f4ffff	                        call sym.st_mult	       179	strbuf.c	FUNCTION_15
0x4000c92	          0x4889c2	                            mov rdx, rax	       179	strbuf.c	FUNCTION_15
0x4000c95	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	strbuf.c	FUNCTION_15
0x4000c99	          0x4889d6	                            mov rsi, rdx	       179	strbuf.c	FUNCTION_15
0x4000c9c	          0x4889c7	                            mov rdi, rax	       179	strbuf.c	FUNCTION_15
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       179	strbuf.c	FUNCTION_15
0x4000ca4	        0x488945d8	             mov qword [rbp - 0x28], rax	       179	strbuf.c	FUNCTION_15
0x4000ca8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       180	strbuf.c	FUNCTION_15
0x4000cac	    0x488d14c50000	                        lea rdx, [rax*8]	       180	strbuf.c	FUNCTION_15
0x4000cb4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	strbuf.c	FUNCTION_15
0x4000cb8	          0x4801d0	                            add rax, rdx	       180	strbuf.c	FUNCTION_15
0x4000cbb	    0x48c700000000	                      mov qword [rax], 0	       180	strbuf.c	FUNCTION_15
0x4000cc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	strbuf.c	FUNCTION_15
0x4000cc6	              0xc9	                                   leave	       182	strbuf.c	FUNCTION_15
0x4000cc7	              0xc3	                                     ret	       182	strbuf.c	FUNCTION_15
strbuf_add_urlencode	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,5:DO,0:IF,1:ELSE,1	51
0x4002250	              0x55	                                push rbp	       715	strbuf.c	FUNCTION_51
0x4002251	          0x4889e5	                            mov rbp, rsp	       715	strbuf.c	FUNCTION_51
0x4002254	        0x4883ec30	                           sub rsp, 0x30	       715	strbuf.c	FUNCTION_51
0x4002258	        0x48897de8	             mov qword [rbp - 0x18], rdi	       715	strbuf.c	FUNCTION_51
0x400225c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       715	strbuf.c	FUNCTION_51
0x4002260	        0x488955d8	             mov qword [rbp - 0x28], rdx	       715	strbuf.c	FUNCTION_51
0x4002264	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       715	strbuf.c	FUNCTION_51
0x4002267	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       716	strbuf.c	FUNCTION_51	CALL_1
0x400226b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       716	strbuf.c	FUNCTION_51	CALL_1
0x400226f	          0x4889d6	                            mov rsi, rdx	       716	strbuf.c	FUNCTION_51	CALL_1
0x4002272	          0x4889c7	                            mov rdi, rax	       716	strbuf.c	FUNCTION_51	CALL_1
0x4002275	      0xe800000000	                          call 0x400227a	       716	strbuf.c	FUNCTION_51	CALL_1
0x400227a	            0xeb67	                           jmp 0x40022e3	       717	strbuf.c	FUNCTION_51	WHILE_1
0x400227c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x4002280	        0x488d5001	                      lea rdx, [rax + 1]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x4002284	        0x488955e0	             mov qword [rbp - 0x20], rdx	       718	strbuf.c	FUNCTION_51	WHILE_1
0x4002288	           0xfb600	                   movzx eax, byte [rax]	       718	strbuf.c	FUNCTION_51	WHILE_1
0x400228b	          0x8845ff	                  mov byte [rbp - 1], al	       718	strbuf.c	FUNCTION_51	WHILE_1
0x400228e	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x4002292	            0x89c7	                            mov edi, eax	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x4002294	      0xe86effffff	          call sym.is_rfc3986_unreserved	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x4002299	            0x85c0	                           test eax, eax	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x400229b	            0x7515	                           jne 0x40022b2	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x400229d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x40022a1	            0x7523	                           jne 0x40022c6	       719	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_2
0x40022a3	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x40022a7	            0x89c7	                            mov edi, eax	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x40022a9	      0xe82affffff	            call sym.is_rfc3986_reserved	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x40022ae	            0x85c0	                           test eax, eax	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x40022b0	            0x7414	                            je 0x40022c6	       720	strbuf.c	FUNCTION_51	WHILE_1	IF_1	CALL_3
0x40022b2	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022ba	            0x89d6	                            mov esi, edx	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022bc	          0x4889c7	                            mov rdi, rax	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022bf	      0xe8dedfffff	                   call sym.strbuf_addch	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022c4	            0xeb1d	                           jmp 0x40022e3	       721	strbuf.c	FUNCTION_51	WHILE_1	CALL_4
0x40022c6	         0xfb645ff	               movzx eax, byte [rbp - 1]	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022ca	           0xfb6d0	                           movzx edx, al	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022d1	      0xbe00000000	                              mov esi, 0	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022d6	          0x4889c7	                            mov rdi, rax	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022d9	      0xb800000000	                              mov eax, 0	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022de	      0xe800000000	                          call 0x40022e3	       723	strbuf.c	FUNCTION_51	WHILE_1	CALL_5
0x40022e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       717	strbuf.c	FUNCTION_51	WHILE_1
0x40022e7	        0x488d50ff	                      lea rdx, [rax - 1]	       717	strbuf.c	FUNCTION_51	WHILE_1
0x40022eb	        0x488955d8	             mov qword [rbp - 0x28], rdx	       717	strbuf.c	FUNCTION_51	WHILE_1
0x40022ef	          0x4885c0	                           test rax, rax	       717	strbuf.c	FUNCTION_51	WHILE_1
0x40022f2	            0x7588	                           jne 0x400227c	       717	strbuf.c	FUNCTION_51	WHILE_1
0x40022f4	              0x90	                                     nop	       725	strbuf.c	FUNCTION_51
0x40022f5	              0xc9	                                   leave	       725	strbuf.c	FUNCTION_51
0x40022f6	              0xc3	                                     ret	       725	strbuf.c	FUNCTION_51
istarts_with	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,0:DO,0:IF,2:ELSE,1	36
0x400043b	              0x55	                                push rbp	        16	strbuf.c	FUNCTION_2
0x400043c	          0x4889e5	                            mov rbp, rsp	        16	strbuf.c	FUNCTION_2
0x400043f	              0x53	                                push rbx	        16	strbuf.c	FUNCTION_2
0x4000440	        0x4883ec10	                           sub rsp, 0x10	        16	strbuf.c	FUNCTION_2
0x4000444	        0x48897df0	             mov qword [rbp - 0x10], rdi	        16	strbuf.c	FUNCTION_2
0x4000448	        0x488975e8	             mov qword [rbp - 0x18], rsi	        16	strbuf.c	FUNCTION_2
0x400044c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x4000450	           0xfb600	                   movzx eax, byte [rax]	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x4000453	            0x84c0	                             test al, al	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x4000455	            0x7507	                           jne 0x400045e	        18	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x4000457	      0xb801000000	                              mov eax, 1	        19	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x400045c	            0xeb45	                           jmp 0x40004a3	        19	strbuf.c	FUNCTION_2	FOR_1	IF_1
0x400045e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000462	           0xfb600	                   movzx eax, byte [rax]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000465	           0xfb6c0	                           movzx eax, al	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000468	      0xbe20000000	                           mov esi, 0x20	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400046d	            0x89c7	                            mov edi, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400046f	      0xe896fcffff	                      call sym.sane_case	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000474	            0x89c3	                            mov ebx, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000476	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400047a	           0xfb600	                   movzx eax, byte [rax]	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400047d	           0xfb6c0	                           movzx eax, al	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000480	      0xbe20000000	                           mov esi, 0x20	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000485	            0x89c7	                            mov edi, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000487	      0xe87efcffff	                      call sym.sane_case	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400048c	            0x39c3	                            cmp ebx, eax	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x400048e	            0x7407	                            je 0x4000497	        20	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000490	      0xb800000000	                              mov eax, 0	        21	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000495	            0xeb0c	                           jmp 0x40004a3	        21	strbuf.c	FUNCTION_2	ELSE_1	IF_2
0x4000497	      0x488345f001	               add qword [rbp - 0x10], 1	        17	strbuf.c	FUNCTION_2	FOR_1
0x400049c	      0x488345e801	               add qword [rbp - 0x18], 1	        17	strbuf.c	FUNCTION_2	FOR_1
0x40004a1	            0xeba9	                           jmp 0x400044c	        22	strbuf.c	FUNCTION_2
0x40004a3	        0x4883c410	                           add rsp, 0x10	        22	strbuf.c	FUNCTION_2
0x40004a7	              0x5b	                                 pop rbx	        22	strbuf.c	FUNCTION_2
0x40004a8	              0x5d	                                 pop rbp	        22	strbuf.c	FUNCTION_2
0x40004a9	              0xc3	                                     ret	        22	strbuf.c	FUNCTION_2
strbuf_setlen	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,2:ELSE,1	43
0x4000208	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_123
0x4000209	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_123
0x400020c	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_123
0x4000210	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_123
0x4000214	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_123
0x4000218	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_123	IF_1
0x400021c	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_123	IF_1
0x400021f	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_123	IF_1
0x4000222	            0x740d	                            je 0x4000231	       162	strbuf.h	FUNCTION_123	IF_1
0x4000224	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_123	IF_1
0x4000228	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_123	IF_1
0x400022b	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_123	IF_1
0x400022f	            0xeb05	                           jmp 0x4000236	       162	strbuf.h	FUNCTION_123	IF_1
0x4000231	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_123	IF_1
0x4000236	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_123	IF_1
0x400023a	            0x730f	                           jae 0x400024b	       162	strbuf.h	FUNCTION_123	IF_1
0x400023c	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_123	CALL_1
0x4000241	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_123	CALL_1
0x4000246	      0xe800000000	                          call 0x400024b	       163	strbuf.h	FUNCTION_123	CALL_1
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_123
0x400024f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_123
0x4000253	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_123
0x4000257	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_123	IF_2
0x400025b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_123	IF_2
0x400025f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_123	IF_2
0x4000265	            0x7414	                            je 0x400027b	       165	strbuf.h	FUNCTION_123	IF_2
0x4000267	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_123	IF_2
0x400026b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_123	IF_2
0x400026f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_123	IF_2
0x4000273	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_123	IF_2
0x4000276	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_123	IF_2
0x4000279	            0xeb24	                           jmp 0x400029f	       169	strbuf.h	FUNCTION_123
0x400027b	     0xfb605000000	           movzx eax, byte [0x04000282] 	       168	strbuf.h	FUNCTION_123	CALL_2
0x4000282	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_123	CALL_2
0x4000284	            0x7419	                            je 0x400029f	       168	strbuf.h	FUNCTION_123	CALL_2
0x4000286	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_123	CALL_2
0x400028b	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_123	CALL_2
0x4000290	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_123	CALL_2
0x4000295	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_123	CALL_2
0x400029a	      0xe800000000	                          call 0x400029f	       168	strbuf.h	FUNCTION_123	CALL_2
0x400029f	              0x90	                                     nop	       169	strbuf.h	FUNCTION_123
0x40002a0	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_123
0x40002a1	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_123
fprintf_ln	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,1:ELSE,0	53
0x40027de	              0x55	                                push rbp	       801	strbuf.c	FUNCTION_57
0x40027df	          0x4889e5	                            mov rbp, rsp	       801	strbuf.c	FUNCTION_57
0x40027e2	    0x4881ecf00000	                           sub rsp, 0xf0	       801	strbuf.c	FUNCTION_57
0x40027e9	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       801	strbuf.c	FUNCTION_57
0x40027f0	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       801	strbuf.c	FUNCTION_57
0x40027f7	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       801	strbuf.c	FUNCTION_57
0x40027fe	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       801	strbuf.c	FUNCTION_57
0x4002805	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       801	strbuf.c	FUNCTION_57
0x400280c	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       801	strbuf.c	FUNCTION_57
0x4002813	            0x84c0	                             test al, al	       801	strbuf.c	FUNCTION_57
0x4002815	            0x7420	                            je 0x4002837	       801	strbuf.c	FUNCTION_57
0x4002817	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       801	strbuf.c	FUNCTION_57
0x400281b	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       801	strbuf.c	FUNCTION_57
0x400281f	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       801	strbuf.c	FUNCTION_57
0x4002823	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       801	strbuf.c	FUNCTION_57
0x4002827	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       801	strbuf.c	FUNCTION_57
0x400282b	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       801	strbuf.c	FUNCTION_57
0x400282f	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       801	strbuf.c	FUNCTION_57
0x4002833	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       801	strbuf.c	FUNCTION_57
0x4002837	    0x64488b042528	                mov rax, qword fs:[0x28]	       801	strbuf.c	FUNCTION_57
0x4002840	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       801	strbuf.c	FUNCTION_57
0x4002847	            0x31c0	                            xor eax, eax	       801	strbuf.c	FUNCTION_57
0x4002849	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       804	strbuf.c	FUNCTION_57	CALL_1
0x4002853	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       804	strbuf.c	FUNCTION_57	CALL_1
0x400285d	        0x488d4510	                   lea rax, [rbp + 0x10]	       804	strbuf.c	FUNCTION_57	CALL_1
0x4002861	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       804	strbuf.c	FUNCTION_57	CALL_1
0x4002868	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       804	strbuf.c	FUNCTION_57	CALL_1
0x400286f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       804	strbuf.c	FUNCTION_57	CALL_1
0x4002876	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       805	strbuf.c	FUNCTION_57	CALL_2
0x400287d	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       805	strbuf.c	FUNCTION_57	CALL_2
0x4002884	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       805	strbuf.c	FUNCTION_57	CALL_2
0x400288b	          0x4889ce	                            mov rsi, rcx	       805	strbuf.c	FUNCTION_57	CALL_2
0x400288e	          0x4889c7	                            mov rdi, rax	       805	strbuf.c	FUNCTION_57	CALL_2
0x4002891	      0xe800000000	                          call 0x4002896	       805	strbuf.c	FUNCTION_57	CALL_2
0x4002896	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       805	strbuf.c	FUNCTION_57	CALL_2
0x400289c	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028a3	            0x7819	                            js 0x40028be	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028a5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028ac	          0x4889c6	                            mov rsi, rax	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028af	      0xbf0a000000	                            mov edi, 0xa	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028b4	      0xe800000000	                          call 0x40028b9	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028b9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028bc	            0x7507	                           jne 0x40028c5	       807	strbuf.c	FUNCTION_57	IF_1	CALL_4
0x40028be	      0xb8ffffffff	                     mov eax, 0xffffffff	       808	strbuf.c	FUNCTION_57	IF_1
0x40028c3	            0xeb09	                           jmp 0x40028ce	       808	strbuf.c	FUNCTION_57	IF_1
0x40028c5	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       809	strbuf.c	FUNCTION_57
0x40028cb	          0x83c001	                              add eax, 1	       809	strbuf.c	FUNCTION_57
0x40028ce	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       810	strbuf.c	FUNCTION_57
0x40028d5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	strbuf.c	FUNCTION_57
0x40028de	            0x7405	                            je 0x40028e5	       810	strbuf.c	FUNCTION_57
0x40028e0	      0xe800000000	                          call 0x40028e5	       810	strbuf.c	FUNCTION_57
0x40028e5	              0xc9	                                   leave	       810	strbuf.c	FUNCTION_57
0x40028e6	              0xc3	                                     ret	       810	strbuf.c	FUNCTION_57
strbuf_complete_line	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	11
0x4000397	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_131
0x4000398	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_131
0x400039b	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_131
0x400039f	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_131
0x40003a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_131	CALL_1
0x40003a7	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_131	CALL_1
0x40003ac	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_131	CALL_1
0x40003af	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_131	CALL_1
0x40003b4	              0x90	                                     nop	       602	strbuf.h	FUNCTION_131
0x40003b5	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_131
0x40003b6	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_131
skip_to_optional_arg_default	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,5:ELSE,0	50
0x40004aa	              0x55	                                push rbp	        26	strbuf.c	FUNCTION_3
0x40004ab	          0x4889e5	                            mov rbp, rsp	        26	strbuf.c	FUNCTION_3
0x40004ae	        0x4883ec30	                           sub rsp, 0x30	        26	strbuf.c	FUNCTION_3
0x40004b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        26	strbuf.c	FUNCTION_3
0x40004b6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        26	strbuf.c	FUNCTION_3
0x40004ba	        0x488955d8	             mov qword [rbp - 0x28], rdx	        26	strbuf.c	FUNCTION_3
0x40004be	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        26	strbuf.c	FUNCTION_3
0x40004c2	    0x64488b042528	                mov rax, qword fs:[0x28]	        26	strbuf.c	FUNCTION_3
0x40004cb	        0x488945f8	                mov qword [rbp - 8], rax	        26	strbuf.c	FUNCTION_3
0x40004cf	            0x31c0	                            xor eax, eax	        26	strbuf.c	FUNCTION_3
0x40004d1	        0x488d55f0	                   lea rdx, [rbp - 0x10]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004d5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004dd	          0x4889ce	                            mov rsi, rcx	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004e0	          0x4889c7	                            mov rdi, rax	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004e3	      0xe87afbffff	                    call sym.skip_prefix	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004e8	            0x85c0	                           test eax, eax	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004ea	            0x7507	                           jne 0x40004f3	        29	strbuf.c	FUNCTION_3	IF_1	CALL_1
0x40004ec	      0xb800000000	                              mov eax, 0	        30	strbuf.c	FUNCTION_3	IF_1
0x40004f1	            0xeb51	                           jmp 0x4000544	        30	strbuf.c	FUNCTION_3	IF_1
0x40004f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        32	strbuf.c	FUNCTION_3	IF_2
0x40004f7	           0xfb600	                   movzx eax, byte [rax]	        32	strbuf.c	FUNCTION_3	IF_2
0x40004fa	            0x84c0	                             test al, al	        32	strbuf.c	FUNCTION_3	IF_2
0x40004fc	            0x7519	                           jne 0x4000517	        32	strbuf.c	FUNCTION_3	IF_2
0x40004fe	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        33	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4000503	            0x740b	                            je 0x4000510	        33	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4000505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4000509	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x400050d	          0x488910	                    mov qword [rax], rdx	        34	strbuf.c	FUNCTION_3	IF_2	IF_3
0x4000510	      0xb801000000	                              mov eax, 1	        35	strbuf.c	FUNCTION_3	IF_2
0x4000515	            0xeb2d	                           jmp 0x4000544	        35	strbuf.c	FUNCTION_3	IF_2
0x4000517	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        38	strbuf.c	FUNCTION_3	IF_4
0x400051b	           0xfb600	                   movzx eax, byte [rax]	        38	strbuf.c	FUNCTION_3	IF_4
0x400051e	            0x3c3d	                            cmp al, 0x3d	        38	strbuf.c	FUNCTION_3	IF_4
0x4000520	            0x7407	                            je 0x4000529	        38	strbuf.c	FUNCTION_3	IF_4
0x4000522	      0xb800000000	                              mov eax, 0	        39	strbuf.c	FUNCTION_3	IF_4
0x4000527	            0xeb1b	                           jmp 0x4000544	        39	strbuf.c	FUNCTION_3	IF_4
0x4000529	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        41	strbuf.c	FUNCTION_3	IF_5
0x400052e	            0x740f	                            je 0x400053f	        41	strbuf.c	FUNCTION_3	IF_5
0x4000530	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        42	strbuf.c	FUNCTION_3	IF_5
0x4000534	        0x488d5001	                      lea rdx, [rax + 1]	        42	strbuf.c	FUNCTION_3	IF_5
0x4000538	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	strbuf.c	FUNCTION_3	IF_5
0x400053c	          0x488910	                    mov qword [rax], rdx	        42	strbuf.c	FUNCTION_3	IF_5
0x400053f	      0xb801000000	                              mov eax, 1	        43	strbuf.c	FUNCTION_3
0x4000544	        0x488b75f8	                mov rsi, qword [rbp - 8]	        44	strbuf.c	FUNCTION_3
0x4000548	    0x644833342528	                xor rsi, qword fs:[0x28]	        44	strbuf.c	FUNCTION_3
0x4000551	            0x7405	                            je 0x4000558	        44	strbuf.c	FUNCTION_3
0x4000553	      0xe800000000	                          call 0x4000558	        44	strbuf.c	FUNCTION_3
0x4000558	              0xc9	                                   leave	        44	strbuf.c	FUNCTION_3
0x4000559	              0xc3	                                     ret	        44	strbuf.c	FUNCTION_3
strbuf_read_file	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,2:ELSE,0	40
0x4002036	              0x55	                                push rbp	       645	strbuf.c	FUNCTION_46
0x4002037	          0x4889e5	                            mov rbp, rsp	       645	strbuf.c	FUNCTION_46
0x400203a	        0x4883ec30	                           sub rsp, 0x30	       645	strbuf.c	FUNCTION_46
0x400203e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       645	strbuf.c	FUNCTION_46
0x4002042	        0x488975e0	             mov qword [rbp - 0x20], rsi	       645	strbuf.c	FUNCTION_46
0x4002046	        0x488955d8	             mov qword [rbp - 0x28], rdx	       645	strbuf.c	FUNCTION_46
0x400204a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       650	strbuf.c	FUNCTION_46	CALL_1
0x400204e	      0xbe00000000	                              mov esi, 0	       650	strbuf.c	FUNCTION_46	CALL_1
0x4002053	          0x4889c7	                            mov rdi, rax	       650	strbuf.c	FUNCTION_46	CALL_1
0x4002056	      0xb800000000	                              mov eax, 0	       650	strbuf.c	FUNCTION_46	CALL_1
0x400205b	      0xe800000000	                          call 0x4002060	       650	strbuf.c	FUNCTION_46	CALL_1
0x4002060	          0x8945f0	             mov dword [rbp - 0x10], eax	       650	strbuf.c	FUNCTION_46	CALL_1
0x4002063	        0x837df000	               cmp dword [rbp - 0x10], 0	       651	strbuf.c	FUNCTION_46	IF_1
0x4002067	            0x7909	                           jns 0x4002072	       651	strbuf.c	FUNCTION_46	IF_1
0x4002069	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       652	strbuf.c	FUNCTION_46	IF_1
0x4002070	            0xeb4e	                           jmp 0x40020c0	       652	strbuf.c	FUNCTION_46	IF_1
0x4002072	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       653	strbuf.c	FUNCTION_46	CALL_2
0x4002076	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       653	strbuf.c	FUNCTION_46	CALL_2
0x4002079	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       653	strbuf.c	FUNCTION_46	CALL_2
0x400207d	            0x89ce	                            mov esi, ecx	       653	strbuf.c	FUNCTION_46	CALL_2
0x400207f	          0x4889c7	                            mov rdi, rax	       653	strbuf.c	FUNCTION_46	CALL_2
0x4002082	      0xe800000000	                          call 0x4002087	       653	strbuf.c	FUNCTION_46	CALL_2
0x4002087	        0x488945f8	                mov qword [rbp - 8], rax	       653	strbuf.c	FUNCTION_46	CALL_2
0x400208b	      0xe800000000	                          call 0x4002090	       654	strbuf.c	FUNCTION_46
0x4002090	            0x8b00	                    mov eax, dword [rax]	       654	strbuf.c	FUNCTION_46
0x4002092	          0x8945f4	              mov dword [rbp - 0xc], eax	       654	strbuf.c	FUNCTION_46
0x4002095	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       655	strbuf.c	FUNCTION_46	CALL_3
0x4002098	            0x89c7	                            mov edi, eax	       655	strbuf.c	FUNCTION_46	CALL_3
0x400209a	      0xe800000000	                          call 0x400209f	       655	strbuf.c	FUNCTION_46	CALL_3
0x400209f	      0x48837df800	                  cmp qword [rbp - 8], 0	       656	strbuf.c	FUNCTION_46	IF_2
0x40020a4	            0x7916	                           jns 0x40020bc	       656	strbuf.c	FUNCTION_46	IF_2
0x40020a6	      0xe800000000	                          call 0x40020ab	       657	strbuf.c	FUNCTION_46	IF_2
0x40020ab	          0x4889c2	                            mov rdx, rax	       657	strbuf.c	FUNCTION_46	IF_2
0x40020ae	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       657	strbuf.c	FUNCTION_46	IF_2
0x40020b1	            0x8902	                    mov dword [rdx], eax	       657	strbuf.c	FUNCTION_46	IF_2
0x40020b3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       658	strbuf.c	FUNCTION_46	IF_2
0x40020ba	            0xeb04	                           jmp 0x40020c0	       658	strbuf.c	FUNCTION_46	IF_2
0x40020bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       661	strbuf.c	FUNCTION_46
0x40020c0	              0xc9	                                   leave	       662	strbuf.c	FUNCTION_46
0x40020c1	              0xc3	                                     ret	       662	strbuf.c	FUNCTION_46
strbuf_add_unique_abbrev	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	33
0x4002d69	              0x55	                                push rbp	       922	strbuf.c	FUNCTION_63
0x4002d6a	          0x4889e5	                            mov rbp, rsp	       922	strbuf.c	FUNCTION_63
0x4002d6d	        0x4883ec30	                           sub rsp, 0x30	       922	strbuf.c	FUNCTION_63
0x4002d71	        0x48897de8	             mov qword [rbp - 0x18], rdi	       922	strbuf.c	FUNCTION_63
0x4002d75	        0x488975e0	             mov qword [rbp - 0x20], rsi	       922	strbuf.c	FUNCTION_63
0x4002d79	          0x8955dc	             mov dword [rbp - 0x24], edx	       922	strbuf.c	FUNCTION_63
0x4002d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       924	strbuf.c	FUNCTION_63	CALL_1
0x4002d80	      0xbe29000000	                           mov esi, 0x29	       924	strbuf.c	FUNCTION_63	CALL_1
0x4002d85	          0x4889c7	                            mov rdi, rax	       924	strbuf.c	FUNCTION_63	CALL_1
0x4002d88	      0xe800000000	                          call 0x4002d8d	       924	strbuf.c	FUNCTION_63	CALL_1
0x4002d8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002d91	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002d95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002d99	        0x488b4008	                mov rax, qword [rax + 8]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002d9d	        0x488d0c02	                    lea rcx, [rdx + rax]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002da1	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002da4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002da8	          0x4889c6	                            mov rsi, rax	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002dab	          0x4889cf	                            mov rdi, rcx	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002dae	      0xe800000000	                          call 0x4002db3	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002db3	          0x8945fc	                mov dword [rbp - 4], eax	       925	strbuf.c	FUNCTION_63	CALL_2
0x4002db6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dba	        0x488b5008	                mov rdx, qword [rax + 8]	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dbe	          0x8b45fc	                mov eax, dword [rbp - 4]	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dc1	            0x4898	                                    cdqe	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dc3	          0x4801c2	                            add rdx, rax	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dca	          0x4889d6	                            mov rsi, rdx	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dcd	          0x4889c7	                            mov rdi, rax	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dd0	      0xe833d4ffff	                  call sym.strbuf_setlen	       926	strbuf.c	FUNCTION_63	CALL_3
0x4002dd5	              0x90	                                     nop	       927	strbuf.c	FUNCTION_63
0x4002dd6	              0xc9	                                   leave	       927	strbuf.c	FUNCTION_63
0x4002dd7	              0xc3	                                     ret	       927	strbuf.c	FUNCTION_63
strbuf_splice	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,7:DO,0:IF,4:ELSE,0	83
0x4000e3a	              0x55	                                push rbp	       221	strbuf.c	FUNCTION_19
0x4000e3b	          0x4889e5	                            mov rbp, rsp	       221	strbuf.c	FUNCTION_19
0x4000e3e	        0x4883ec30	                           sub rsp, 0x30	       221	strbuf.c	FUNCTION_19
0x4000e42	        0x48897df8	                mov qword [rbp - 8], rdi	       221	strbuf.c	FUNCTION_19
0x4000e46	        0x488975f0	             mov qword [rbp - 0x10], rsi	       221	strbuf.c	FUNCTION_19
0x4000e4a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       221	strbuf.c	FUNCTION_19
0x4000e4e	        0x48894de0	             mov qword [rbp - 0x20], rcx	       221	strbuf.c	FUNCTION_19
0x4000e52	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       221	strbuf.c	FUNCTION_19
0x4000e56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       222	strbuf.c	FUNCTION_19	IF_1
0x4000e5a	          0x48f7d0	                                 not rax	       222	strbuf.c	FUNCTION_19	IF_1
0x4000e5d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       222	strbuf.c	FUNCTION_19	IF_1
0x4000e61	            0x730f	                           jae 0x4000e72	       222	strbuf.c	FUNCTION_19	IF_1
0x4000e63	      0xbf00000000	                              mov edi, 0	       223	strbuf.c	FUNCTION_19	CALL_1
0x4000e68	      0xb800000000	                              mov eax, 0	       223	strbuf.c	FUNCTION_19	CALL_1
0x4000e6d	      0xe800000000	                          call 0x4000e72	       223	strbuf.c	FUNCTION_19	CALL_1
0x4000e72	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	strbuf.c	FUNCTION_19	IF_2
0x4000e76	        0x488b4008	                mov rax, qword [rax + 8]	       224	strbuf.c	FUNCTION_19	IF_2
0x4000e7a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       224	strbuf.c	FUNCTION_19	IF_2
0x4000e7e	            0x730f	                           jae 0x4000e8f	       224	strbuf.c	FUNCTION_19	IF_2
0x4000e80	      0xbf00000000	                              mov edi, 0	       225	strbuf.c	FUNCTION_19	CALL_2
0x4000e85	      0xb800000000	                              mov eax, 0	       225	strbuf.c	FUNCTION_19	CALL_2
0x4000e8a	      0xe800000000	                          call 0x4000e8f	       225	strbuf.c	FUNCTION_19	CALL_2
0x4000e8f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       226	strbuf.c	FUNCTION_19	IF_3
0x4000e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	strbuf.c	FUNCTION_19	IF_3
0x4000e97	          0x4801c2	                            add rdx, rax	       226	strbuf.c	FUNCTION_19	IF_3
0x4000e9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       226	strbuf.c	FUNCTION_19	IF_3
0x4000e9e	        0x488b4008	                mov rax, qword [rax + 8]	       226	strbuf.c	FUNCTION_19	IF_3
0x4000ea2	          0x4839c2	                            cmp rdx, rax	       226	strbuf.c	FUNCTION_19	IF_3
0x4000ea5	            0x760f	                           jbe 0x4000eb6	       226	strbuf.c	FUNCTION_19	IF_3
0x4000ea7	      0xbf00000000	                              mov edi, 0	       227	strbuf.c	FUNCTION_19	CALL_3
0x4000eac	      0xb800000000	                              mov eax, 0	       227	strbuf.c	FUNCTION_19	CALL_3
0x4000eb1	      0xe800000000	                          call 0x4000eb6	       227	strbuf.c	FUNCTION_19	CALL_3
0x4000eb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	strbuf.c	FUNCTION_19	IF_4
0x4000eba	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       229	strbuf.c	FUNCTION_19	IF_4
0x4000ebe	            0x721a	                            jb 0x4000eda	       229	strbuf.c	FUNCTION_19	IF_4
0x4000ec0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ec4	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ec8	          0x4889c2	                            mov rdx, rax	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ecb	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ecf	          0x4889d6	                            mov rsi, rdx	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ed2	          0x4889c7	                            mov rdi, rax	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000ed5	      0xe800000000	                          call 0x4000eda	       230	strbuf.c	FUNCTION_19	CALL_4
0x4000eda	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	strbuf.c	FUNCTION_19
0x4000ede	        0x488b4008	                mov rax, qword [rax + 8]	       233	strbuf.c	FUNCTION_19
0x4000ee2	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       233	strbuf.c	FUNCTION_19
0x4000ee6	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000eea	        0x488b55f8	                mov rdx, qword [rbp - 8]	       232	strbuf.c	FUNCTION_19
0x4000eee	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       232	strbuf.c	FUNCTION_19
0x4000ef2	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       232	strbuf.c	FUNCTION_19
0x4000ef6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       232	strbuf.c	FUNCTION_19
0x4000efa	          0x4801f1	                            add rcx, rsi	       232	strbuf.c	FUNCTION_19
0x4000efd	        0x488d340a	                    lea rsi, [rdx + rcx]	       232	strbuf.c	FUNCTION_19
0x4000f01	        0x488b55f8	                mov rdx, qword [rbp - 8]	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f05	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f09	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f0d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f11	          0x4801f9	                            add rcx, rdi	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f14	          0x4801d1	                            add rcx, rdx	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f17	          0x4889c2	                            mov rdx, rax	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f1a	          0x4889cf	                            mov rdi, rcx	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f1d	      0xe800000000	                          call 0x4000f22	       231	strbuf.c	FUNCTION_19	CALL_5
0x4000f22	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f26	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f2e	        0x488d0c02	                    lea rcx, [rdx + rax]	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f32	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f3a	          0x4889c6	                            mov rsi, rax	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f3d	          0x4889cf	                            mov rdi, rcx	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f40	      0xe800000000	                          call 0x4000f45	       234	strbuf.c	FUNCTION_19	CALL_6
0x4000f45	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f49	        0x488b5008	                mov rdx, qword [rax + 8]	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f51	          0x4801d0	                            add rax, rdx	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f54	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f58	          0x4889c2	                            mov rdx, rax	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f5f	          0x4889d6	                            mov rsi, rdx	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f62	          0x4889c7	                            mov rdi, rax	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f65	      0xe89ef2ffff	                  call sym.strbuf_setlen	       235	strbuf.c	FUNCTION_19	CALL_7
0x4000f6a	              0x90	                                     nop	       236	strbuf.c	FUNCTION_19
0x4000f6b	              0xc9	                                   leave	       236	strbuf.c	FUNCTION_19
0x4000f6c	              0xc3	                                     ret	       236	strbuf.c	FUNCTION_19
strbuf_grow	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,3:ELSE,0	91
0x40006b5	              0x55	                                push rbp	        91	strbuf.c	FUNCTION_8
0x40006b6	          0x4889e5	                            mov rbp, rsp	        91	strbuf.c	FUNCTION_8
0x40006b9	        0x4883ec20	                           sub rsp, 0x20	        91	strbuf.c	FUNCTION_8
0x40006bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	strbuf.c	FUNCTION_8
0x40006c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	        91	strbuf.c	FUNCTION_8
0x40006c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	strbuf.c	FUNCTION_8
0x40006c9	          0x488b00	                    mov rax, qword [rax]	        92	strbuf.c	FUNCTION_8
0x40006cc	          0x4885c0	                           test rax, rax	        92	strbuf.c	FUNCTION_8
0x40006cf	           0xf94c0	                                 sete al	        92	strbuf.c	FUNCTION_8
0x40006d2	           0xfb6c0	                           movzx eax, al	        92	strbuf.c	FUNCTION_8
0x40006d5	          0x8945fc	                mov dword [rbp - 4], eax	        92	strbuf.c	FUNCTION_8
0x40006d8	      0x48837de0ff	cmp qword [rbp - 0x20], 0xffffffffffffffff	        93	strbuf.c	FUNCTION_8	IF_1
0x40006dd	            0x7418	                            je 0x40006f7	        93	strbuf.c	FUNCTION_8	IF_1
0x40006df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	strbuf.c	FUNCTION_8	IF_1
0x40006e3	        0x488d5001	                      lea rdx, [rax + 1]	        94	strbuf.c	FUNCTION_8	IF_1
0x40006e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	strbuf.c	FUNCTION_8	IF_1
0x40006eb	        0x488b4008	                mov rax, qword [rax + 8]	        94	strbuf.c	FUNCTION_8	IF_1
0x40006ef	          0x48f7d0	                                 not rax	        94	strbuf.c	FUNCTION_8	IF_1
0x40006f2	          0x4839c2	                            cmp rdx, rax	        93	strbuf.c	FUNCTION_8	IF_1
0x40006f5	            0x760f	                           jbe 0x4000706	        93	strbuf.c	FUNCTION_8	IF_1
0x40006f7	      0xbf00000000	                              mov edi, 0	        95	strbuf.c	FUNCTION_8	CALL_1
0x40006fc	      0xb800000000	                              mov eax, 0	        95	strbuf.c	FUNCTION_8	CALL_1
0x4000701	      0xe800000000	                          call 0x4000706	        95	strbuf.c	FUNCTION_8	CALL_1
0x4000706	        0x837dfc00	                  cmp dword [rbp - 4], 0	        96	strbuf.c	FUNCTION_8	IF_2
0x400070a	            0x740c	                            je 0x4000718	        96	strbuf.c	FUNCTION_8	IF_2
0x400070c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	strbuf.c	FUNCTION_8	IF_2
0x4000710	    0x48c740100000	               mov qword [rax + 0x10], 0	        97	strbuf.c	FUNCTION_8	IF_2
0x4000718	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x400071c	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8
0x4000720	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8
0x4000724	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8
0x4000727	        0x488d5001	                      lea rdx, [rax + 1]	        98	strbuf.c	FUNCTION_8
0x400072b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x400072f	          0x488b00	                    mov rax, qword [rax]	        98	strbuf.c	FUNCTION_8
0x4000732	          0x4839c2	                            cmp rdx, rax	        98	strbuf.c	FUNCTION_8
0x4000735	     0xf86a4000000	                           jbe 0x40007df	        98	strbuf.c	FUNCTION_8
0x400073b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x400073f	          0x488b10	                    mov rdx, qword [rax]	        98	strbuf.c	FUNCTION_8
0x4000742	          0x4889d0	                            mov rax, rdx	        98	strbuf.c	FUNCTION_8
0x4000745	          0x4801c0	                            add rax, rax	        98	strbuf.c	FUNCTION_8
0x4000748	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8
0x400074b	        0x4883c030	                           add rax, 0x30	        98	strbuf.c	FUNCTION_8
0x400074f	          0x48d1e8	                              shr rax, 1	        98	strbuf.c	FUNCTION_8
0x4000752	          0x4889c1	                            mov rcx, rax	        98	strbuf.c	FUNCTION_8
0x4000755	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x4000759	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8
0x400075d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8
0x4000761	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8
0x4000764	        0x4883c001	                              add rax, 1	        98	strbuf.c	FUNCTION_8
0x4000768	          0x4839c1	                            cmp rcx, rax	        98	strbuf.c	FUNCTION_8
0x400076b	            0x731c	                           jae 0x4000789	        98	strbuf.c	FUNCTION_8
0x400076d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x4000771	        0x488b5008	                mov rdx, qword [rax + 8]	        98	strbuf.c	FUNCTION_8
0x4000775	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	strbuf.c	FUNCTION_8
0x4000779	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8
0x400077c	        0x488d5001	                      lea rdx, [rax + 1]	        98	strbuf.c	FUNCTION_8
0x4000780	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x4000784	          0x488910	                    mov qword [rax], rdx	        98	strbuf.c	FUNCTION_8
0x4000787	            0xeb21	                           jmp 0x40007aa	        98	strbuf.c	FUNCTION_8
0x4000789	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x400078d	          0x488b10	                    mov rdx, qword [rax]	        98	strbuf.c	FUNCTION_8
0x4000790	          0x4889d0	                            mov rax, rdx	        98	strbuf.c	FUNCTION_8
0x4000793	          0x4801c0	                            add rax, rax	        98	strbuf.c	FUNCTION_8
0x4000796	          0x4801d0	                            add rax, rdx	        98	strbuf.c	FUNCTION_8
0x4000799	        0x4883c030	                           add rax, 0x30	        98	strbuf.c	FUNCTION_8
0x400079d	          0x48d1e8	                              shr rax, 1	        98	strbuf.c	FUNCTION_8
0x40007a0	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8
0x40007a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x40007a7	          0x488910	                    mov qword [rax], rdx	        98	strbuf.c	FUNCTION_8
0x40007aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x40007ae	          0x488b00	                    mov rax, qword [rax]	        98	strbuf.c	FUNCTION_8
0x40007b1	          0x4889c6	                            mov rsi, rax	        98	strbuf.c	FUNCTION_8
0x40007b4	      0xbf01000000	                              mov edi, 1	        98	strbuf.c	FUNCTION_8
0x40007b9	      0xe8faf8ffff	                        call sym.st_mult	        98	strbuf.c	FUNCTION_8
0x40007be	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8
0x40007c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x40007c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	        98	strbuf.c	FUNCTION_8
0x40007c9	          0x4889d6	                            mov rsi, rdx	        98	strbuf.c	FUNCTION_8
0x40007cc	          0x4889c7	                            mov rdi, rax	        98	strbuf.c	FUNCTION_8
0x40007cf	      0xe800000000	                          call 0x40007d4	        98	strbuf.c	FUNCTION_8
0x40007d4	          0x4889c2	                            mov rdx, rax	        98	strbuf.c	FUNCTION_8
0x40007d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	strbuf.c	FUNCTION_8
0x40007db	        0x48895010	             mov qword [rax + 0x10], rdx	        98	strbuf.c	FUNCTION_8
0x40007df	        0x837dfc00	                  cmp dword [rbp - 4], 0	        99	strbuf.c	FUNCTION_8	IF_3
0x40007e3	            0x740b	                            je 0x40007f0	        99	strbuf.c	FUNCTION_8	IF_3
0x40007e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	strbuf.c	FUNCTION_8	IF_3
0x40007e9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       100	strbuf.c	FUNCTION_8	IF_3
0x40007ed	          0xc60000	                       mov byte [rax], 0	       100	strbuf.c	FUNCTION_8	IF_3
0x40007f0	              0x90	                                     nop	       101	strbuf.c	FUNCTION_8
0x40007f1	              0xc9	                                   leave	       101	strbuf.c	FUNCTION_8
0x40007f2	              0xc3	                                     ret	       101	strbuf.c	FUNCTION_8
git_is_dir_sep	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_96
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_96
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_96
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_96
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_96
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_96
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_96
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_96
strbuf_trim_trailing_dir_sep	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	35
0x400088e	              0x55	                                push rbp	       117	strbuf.c	FUNCTION_11
0x400088f	          0x4889e5	                            mov rbp, rsp	       117	strbuf.c	FUNCTION_11
0x4000892	        0x4883ec08	                              sub rsp, 8	       117	strbuf.c	FUNCTION_11
0x4000896	        0x48897df8	                mov qword [rbp - 8], rdi	       117	strbuf.c	FUNCTION_11
0x400089a	            0xeb14	                           jmp 0x40008b0	       118	strbuf.c	FUNCTION_11	WHILE_1
0x400089c	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x40008a0	        0x488b4008	                mov rax, qword [rax + 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x40008a4	        0x488d50ff	                      lea rdx, [rax - 1]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x40008a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	strbuf.c	FUNCTION_11	WHILE_1
0x40008ac	        0x48895008	                mov qword [rax + 8], rdx	       119	strbuf.c	FUNCTION_11	WHILE_1
0x40008b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008b4	        0x488b4008	                mov rax, qword [rax + 8]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008b8	          0x4885c0	                           test rax, rax	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008bb	            0x7428	                            je 0x40008e5	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008c1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008c9	        0x488b4008	                mov rax, qword [rax + 8]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008cd	        0x4883e801	                              sub rax, 1	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008d1	          0x4801d0	                            add rax, rdx	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008d4	           0xfb600	                   movzx eax, byte [rax]	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008d7	           0xfb6c0	                           movzx eax, al	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008da	            0x89c7	                            mov edi, eax	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008dc	      0xe86ef7ffff	                 call sym.git_is_dir_sep	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008e1	            0x85c0	                           test eax, eax	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008e3	            0x75b7	                           jne 0x400089c	       118	strbuf.c	FUNCTION_11	WHILE_1
0x40008e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	strbuf.c	FUNCTION_11
0x40008e9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       120	strbuf.c	FUNCTION_11
0x40008ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	strbuf.c	FUNCTION_11
0x40008f1	        0x488b4008	                mov rax, qword [rax + 8]	       120	strbuf.c	FUNCTION_11
0x40008f5	          0x4801d0	                            add rax, rdx	       120	strbuf.c	FUNCTION_11
0x40008f8	          0xc60000	                       mov byte [rax], 0	       120	strbuf.c	FUNCTION_11
0x40008fb	              0x90	                                     nop	       121	strbuf.c	FUNCTION_11
0x40008fc	              0xc9	                                   leave	       121	strbuf.c	FUNCTION_11
0x40008fd	              0xc3	                                     ret	       121	strbuf.c	FUNCTION_11
strbuf_addchars	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	32
0x40010ca	              0x55	                                push rbp	       263	strbuf.c	FUNCTION_24
0x40010cb	          0x4889e5	                            mov rbp, rsp	       263	strbuf.c	FUNCTION_24
0x40010ce	        0x4883ec20	                           sub rsp, 0x20	       263	strbuf.c	FUNCTION_24
0x40010d2	        0x48897df8	                mov qword [rbp - 8], rdi	       263	strbuf.c	FUNCTION_24
0x40010d6	          0x8975f4	              mov dword [rbp - 0xc], esi	       263	strbuf.c	FUNCTION_24
0x40010d9	        0x488955e8	             mov qword [rbp - 0x18], rdx	       263	strbuf.c	FUNCTION_24
0x40010dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       264	strbuf.c	FUNCTION_24	CALL_1
0x40010e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	strbuf.c	FUNCTION_24	CALL_1
0x40010e5	          0x4889d6	                            mov rsi, rdx	       264	strbuf.c	FUNCTION_24	CALL_1
0x40010e8	          0x4889c7	                            mov rdi, rax	       264	strbuf.c	FUNCTION_24	CALL_1
0x40010eb	      0xe800000000	                          call 0x40010f0	       264	strbuf.c	FUNCTION_24	CALL_1
0x40010f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x40010f4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       265	strbuf.c	FUNCTION_24	CALL_2
0x40010f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x40010fc	        0x488b4008	                mov rax, qword [rax + 8]	       265	strbuf.c	FUNCTION_24	CALL_2
0x4001100	        0x488d0c02	                    lea rcx, [rdx + rax]	       265	strbuf.c	FUNCTION_24	CALL_2
0x4001104	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       265	strbuf.c	FUNCTION_24	CALL_2
0x4001108	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       265	strbuf.c	FUNCTION_24	CALL_2
0x400110b	            0x89c6	                            mov esi, eax	       265	strbuf.c	FUNCTION_24	CALL_2
0x400110d	          0x4889cf	                            mov rdi, rcx	       265	strbuf.c	FUNCTION_24	CALL_2
0x4001110	      0xe800000000	                          call 0x4001115	       265	strbuf.c	FUNCTION_24	CALL_2
0x4001115	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x4001119	        0x488b5008	                mov rdx, qword [rax + 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x400111d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	strbuf.c	FUNCTION_24	CALL_3
0x4001121	          0x4801c2	                            add rdx, rax	       266	strbuf.c	FUNCTION_24	CALL_3
0x4001124	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	strbuf.c	FUNCTION_24	CALL_3
0x4001128	          0x4889d6	                            mov rsi, rdx	       266	strbuf.c	FUNCTION_24	CALL_3
0x400112b	          0x4889c7	                            mov rdi, rax	       266	strbuf.c	FUNCTION_24	CALL_3
0x400112e	      0xe8d5f0ffff	                  call sym.strbuf_setlen	       266	strbuf.c	FUNCTION_24	CALL_3
0x4001133	              0x90	                                     nop	       267	strbuf.c	FUNCTION_24
0x4001134	              0xc9	                                   leave	       267	strbuf.c	FUNCTION_24
0x4001135	              0xc3	                                     ret	       267	strbuf.c	FUNCTION_24
strbuf_write	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	21
0x4001b2a	              0x55	                                push rbp	       457	strbuf.c	FUNCTION_36
0x4001b2b	          0x4889e5	                            mov rbp, rsp	       457	strbuf.c	FUNCTION_36
0x4001b2e	        0x4883ec10	                           sub rsp, 0x10	       457	strbuf.c	FUNCTION_36
0x4001b32	        0x48897df8	                mov qword [rbp - 8], rdi	       457	strbuf.c	FUNCTION_36
0x4001b36	        0x488975f0	             mov qword [rbp - 0x10], rsi	       457	strbuf.c	FUNCTION_36
0x4001b3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b3e	        0x488b4008	                mov rax, qword [rax + 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b42	          0x4885c0	                           test rax, rax	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b45	            0x7423	                            je 0x4001b6a	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b47	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b4b	        0x488b5008	                mov rdx, qword [rax + 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b53	        0x488b4010	            mov rax, qword [rax + 0x10] 	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b57	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b5b	      0xbe01000000	                              mov esi, 1	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b60	          0x4889c7	                            mov rdi, rax	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b63	      0xe800000000	                          call 0x4001b68	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b68	            0xeb05	                           jmp 0x4001b6f	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b6a	      0xb800000000	                              mov eax, 0	       458	strbuf.c	FUNCTION_36	CALL_1
0x4001b6f	              0xc9	                                   leave	       459	strbuf.c	FUNCTION_36
0x4001b70	              0xc3	                                     ret	       459	strbuf.c	FUNCTION_36
strbuf_fread	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,2:ELSE,1	45
0x40018a8	              0x55	                                push rbp	       402	strbuf.c	FUNCTION_33
0x40018a9	          0x4889e5	                            mov rbp, rsp	       402	strbuf.c	FUNCTION_33
0x40018ac	        0x4883ec30	                           sub rsp, 0x30	       402	strbuf.c	FUNCTION_33
0x40018b0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       402	strbuf.c	FUNCTION_33
0x40018b4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       402	strbuf.c	FUNCTION_33
0x40018b8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       402	strbuf.c	FUNCTION_33
0x40018bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	strbuf.c	FUNCTION_33
0x40018c0	          0x488b00	                    mov rax, qword [rax]	       404	strbuf.c	FUNCTION_33
0x40018c3	        0x488945f0	             mov qword [rbp - 0x10], rax	       404	strbuf.c	FUNCTION_33
0x40018c7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       406	strbuf.c	FUNCTION_33	CALL_1
0x40018cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       406	strbuf.c	FUNCTION_33	CALL_1
0x40018cf	          0x4889d6	                            mov rsi, rdx	       406	strbuf.c	FUNCTION_33	CALL_1
0x40018d2	          0x4889c7	                            mov rdi, rax	       406	strbuf.c	FUNCTION_33	CALL_1
0x40018d5	      0xe800000000	                          call 0x40018da	       406	strbuf.c	FUNCTION_33	CALL_1
0x40018da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018de	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018e6	        0x488b4008	                mov rax, qword [rax + 8]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018ea	        0x488d3c02	                    lea rdi, [rdx + rax]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018ee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018f6	          0x4889d1	                            mov rcx, rdx	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018f9	          0x4889c2	                            mov rdx, rax	       407	strbuf.c	FUNCTION_33	CALL_2
0x40018fc	      0xbe01000000	                              mov esi, 1	       407	strbuf.c	FUNCTION_33	CALL_2
0x4001901	      0xe800000000	                          call 0x4001906	       407	strbuf.c	FUNCTION_33	CALL_2
0x4001906	        0x488945f8	                mov qword [rbp - 8], rax	       407	strbuf.c	FUNCTION_33	CALL_2
0x400190a	      0x48837df800	                  cmp qword [rbp - 8], 0	       408	strbuf.c	FUNCTION_33	IF_1
0x400190f	            0x7420	                            je 0x4001931	       408	strbuf.c	FUNCTION_33	IF_1
0x4001911	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001915	        0x488b5008	                mov rdx, qword [rax + 8]	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001919	        0x488b45f8	                mov rax, qword [rbp - 8]	       409	strbuf.c	FUNCTION_33	CALL_3
0x400191d	          0x4801c2	                            add rdx, rax	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001920	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001924	          0x4889d6	                            mov rsi, rdx	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001927	          0x4889c7	                            mov rdi, rax	       409	strbuf.c	FUNCTION_33	CALL_3
0x400192a	      0xe8d9e8ffff	                  call sym.strbuf_setlen	       409	strbuf.c	FUNCTION_33	CALL_3
0x400192f	            0xeb13	                           jmp 0x4001944	       409	strbuf.c	FUNCTION_33	CALL_3
0x4001931	      0x48837df000	               cmp qword [rbp - 0x10], 0	       410	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x4001936	            0x750c	                           jne 0x4001944	       410	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x4001938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x400193c	          0x4889c7	                            mov rdi, rax	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x400193f	      0xe800000000	                          call 0x4001944	       411	strbuf.c	FUNCTION_33	ELSE_1	IF_2
0x4001944	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	strbuf.c	FUNCTION_33
0x4001948	              0xc9	                                   leave	       413	strbuf.c	FUNCTION_33
0x4001949	              0xc3	                                     ret	       413	strbuf.c	FUNCTION_33
strbuf_expand	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,4:DO,0:IF,3:ELSE,1	60
0x40016bf	              0x55	                                push rbp	       349	strbuf.c	FUNCTION_30
0x40016c0	          0x4889e5	                            mov rbp, rsp	       349	strbuf.c	FUNCTION_30
0x40016c3	        0x4883ec30	                           sub rsp, 0x30	       349	strbuf.c	FUNCTION_30
0x40016c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       349	strbuf.c	FUNCTION_30
0x40016cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       349	strbuf.c	FUNCTION_30
0x40016cf	        0x488955d8	             mov qword [rbp - 0x28], rdx	       349	strbuf.c	FUNCTION_30
0x40016d3	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       349	strbuf.c	FUNCTION_30
0x40016d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       354	strbuf.c	FUNCTION_30	FOR_1
0x40016db	      0xbe25000000	                           mov esi, 0x25	       354	strbuf.c	FUNCTION_30	FOR_1
0x40016e0	          0x4889c7	                            mov rdi, rax	       354	strbuf.c	FUNCTION_30	FOR_1
0x40016e3	      0xe800000000	                          call 0x40016e8	       354	strbuf.c	FUNCTION_30	FOR_1
0x40016e8	        0x488945f0	             mov qword [rbp - 0x10], rax	       354	strbuf.c	FUNCTION_30	FOR_1
0x40016ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x40016f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x40016f4	          0x4829c2	                            sub rdx, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x40016f7	          0x4889d0	                            mov rax, rdx	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x40016fa	          0x4889c2	                            mov rdx, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x40016fd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x4001701	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x4001705	          0x4889ce	                            mov rsi, rcx	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x4001708	          0x4889c7	                            mov rdi, rax	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x400170b	      0xe800000000	                          call 0x4001710	       355	strbuf.c	FUNCTION_30	FOR_1	CALL_1
0x4001710	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x4001714	           0xfb600	                   movzx eax, byte [rax]	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x4001717	            0x84c0	                             test al, al	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x4001719	            0x7472	                            je 0x400178d	       356	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x400171b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	strbuf.c	FUNCTION_30	FOR_1
0x400171f	        0x4883c001	                              add rax, 1	       358	strbuf.c	FUNCTION_30	FOR_1
0x4001723	        0x488945e0	             mov qword [rbp - 0x20], rax	       358	strbuf.c	FUNCTION_30	FOR_1
0x4001727	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x400172b	           0xfb600	                   movzx eax, byte [rax]	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x400172e	            0x3c25	                            cmp al, 0x25	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x4001730	            0x7518	                           jne 0x400174a	       360	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x4001732	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_2
0x4001736	      0xbe25000000	                           mov esi, 0x25	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_2
0x400173b	          0x4889c7	                            mov rdi, rax	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_2
0x400173e	      0xe85febffff	                   call sym.strbuf_addch	       361	strbuf.c	FUNCTION_30	FOR_1	IF_2	CALL_2
0x4001743	      0x488345e001	               add qword [rbp - 0x20], 1	       362	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x4001748	            0xeb3e	                           jmp 0x4001788	       363	strbuf.c	FUNCTION_30	FOR_1	IF_2
0x400174a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x400174e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x4001752	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x4001756	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x400175a	          0x4889cf	                            mov rdi, rcx	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x400175d	            0xffd0	                                call rax	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x400175f	        0x488945f8	                mov qword [rbp - 8], rax	       366	strbuf.c	FUNCTION_30	FOR_1	CALL_3
0x4001763	      0x48837df800	                  cmp qword [rbp - 8], 0	       367	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x4001768	            0x740d	                            je 0x4001777	       367	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x400176a	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x400176e	        0x480145e0	            add qword [rbp - 0x20], rax 	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x4001772	      0xe960ffffff	                           jmp 0x40016d7	       368	strbuf.c	FUNCTION_30	FOR_1	IF_3
0x4001777	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x400177b	      0xbe25000000	                           mov esi, 0x25	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x4001780	          0x4889c7	                            mov rdi, rax	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x4001783	      0xe81aebffff	                   call sym.strbuf_addch	       370	strbuf.c	FUNCTION_30	FOR_1	CALL_4
0x4001788	      0xe94affffff	                           jmp 0x40016d7	       371	strbuf.c	FUNCTION_30	FOR_1
0x400178d	              0x90	                                     nop	       357	strbuf.c	FUNCTION_30	FOR_1	IF_1
0x400178e	              0x90	                                     nop	       372	strbuf.c	FUNCTION_30
0x400178f	              0xc9	                                   leave	       372	strbuf.c	FUNCTION_30
0x4001790	              0xc3	                                     ret	       372	strbuf.c	FUNCTION_30
strbuf_release	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,2:DO,0:IF,1:ELSE,0	19
0x40005ae	              0x55	                                push rbp	        62	strbuf.c	FUNCTION_5
0x40005af	          0x4889e5	                            mov rbp, rsp	        62	strbuf.c	FUNCTION_5
0x40005b2	        0x4883ec10	                           sub rsp, 0x10	        62	strbuf.c	FUNCTION_5
0x40005b6	        0x48897df8	                mov qword [rbp - 8], rdi	        62	strbuf.c	FUNCTION_5
0x40005ba	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	strbuf.c	FUNCTION_5	IF_1
0x40005be	          0x488b00	                    mov rax, qword [rax]	        63	strbuf.c	FUNCTION_5	IF_1
0x40005c1	          0x4885c0	                           test rax, rax	        63	strbuf.c	FUNCTION_5	IF_1
0x40005c4	            0x7421	                            je 0x40005e7	        63	strbuf.c	FUNCTION_5	IF_1
0x40005c6	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x40005ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x40005ce	          0x4889c7	                            mov rdi, rax	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x40005d1	      0xe800000000	                          call 0x40005d6	        64	strbuf.c	FUNCTION_5	IF_1	CALL_1
0x40005d6	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x40005da	      0xbe00000000	                              mov esi, 0	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x40005df	          0x4889c7	                            mov rdi, rax	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x40005e2	      0xe800000000	                          call 0x40005e7	        65	strbuf.c	FUNCTION_5	IF_1	CALL_2
0x40005e7	              0x90	                                     nop	        67	strbuf.c	FUNCTION_5
0x40005e8	              0xc9	                                   leave	        67	strbuf.c	FUNCTION_5
0x40005e9	              0xc3	                                     ret	        67	strbuf.c	FUNCTION_5
strbuf_addstr_xml_quoted	functions,0:SWITCH,1:WHILE,1:FOR,0:CALL,6:DO,0:IF,0:ELSE,0	65
0x4002100	              0x55	                                push rbp	       671	strbuf.c	FUNCTION_48
0x4002101	          0x4889e5	                            mov rbp, rsp	       671	strbuf.c	FUNCTION_48
0x4002104	        0x4883ec20	                           sub rsp, 0x20	       671	strbuf.c	FUNCTION_48
0x4002108	        0x48897de8	             mov qword [rbp - 0x18], rdi	       671	strbuf.c	FUNCTION_48
0x400210c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       671	strbuf.c	FUNCTION_48
0x4002110	      0xe9af000000	                           jmp 0x40021c4	       672	strbuf.c	FUNCTION_48	WHILE_1
0x4002115	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x4002119	      0xbe00000000	                              mov esi, 0	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x400211e	          0x4889c7	                            mov rdi, rax	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x4002121	      0xe800000000	                          call 0x4002126	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x4002126	        0x488945f8	                mov qword [rbp - 8], rax	       673	strbuf.c	FUNCTION_48	WHILE_1	CALL_1
0x400212a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x400212e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x4002132	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x4002136	          0x4889ce	                            mov rsi, rcx	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x4002139	          0x4889c7	                            mov rdi, rax	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x400213c	      0xe800000000	                          call 0x4002141	       674	strbuf.c	FUNCTION_48	WHILE_1	CALL_2
0x4002141	        0x488b45f8	                mov rax, qword [rbp - 8]	       675	strbuf.c	FUNCTION_48	WHILE_1
0x4002145	        0x480145e0	            add qword [rbp - 0x20], rax 	       675	strbuf.c	FUNCTION_48	WHILE_1
0x4002149	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400214d	           0xfb600	                   movzx eax, byte [rax]	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002150	           0xfbec0	                           movsx eax, al	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002153	          0x83f826	                           cmp eax, 0x26	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002156	            0x7455	                            je 0x40021ad	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002158	          0x83f826	                           cmp eax, 0x26	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400215b	            0x7f0b	                            jg 0x4002168	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400215d	            0x85c0	                           test eax, eax	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400215f	            0x7474	                            je 0x40021d5	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002161	          0x83f822	                           cmp eax, 0x22	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002164	            0x740e	                            je 0x4002174	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002166	            0xeb57	                           jmp 0x40021bf	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002168	          0x83f83c	                           cmp eax, 0x3c	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400216b	            0x741a	                            je 0x4002187	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400216d	          0x83f83e	                           cmp eax, 0x3e	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002170	            0x7428	                            je 0x400219a	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002172	            0xeb4b	                           jmp 0x40021bf	       676	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002174	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x4002178	      0xbe00000000	                              mov esi, 0	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x400217d	          0x4889c7	                            mov rdi, rax	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x4002180	      0xe88be1ffff	                  call sym.strbuf_addstr	       678	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_3
0x4002185	            0xeb38	                           jmp 0x40021bf	       679	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x4002187	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x400218b	      0xbe00000000	                              mov esi, 0	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x4002190	          0x4889c7	                            mov rdi, rax	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x4002193	      0xe878e1ffff	                  call sym.strbuf_addstr	       681	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_4
0x4002198	            0xeb25	                           jmp 0x40021bf	       682	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x400219a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x400219e	      0xbe00000000	                              mov esi, 0	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x40021a3	          0x4889c7	                            mov rdi, rax	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x40021a6	      0xe865e1ffff	                  call sym.strbuf_addstr	       684	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_5
0x40021ab	            0xeb12	                           jmp 0x40021bf	       685	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x40021ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x40021b1	      0xbe00000000	                              mov esi, 0	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x40021b6	          0x4889c7	                            mov rdi, rax	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x40021b9	      0xe852e1ffff	                  call sym.strbuf_addstr	       687	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1	CALL_6
0x40021be	              0x90	                                     nop	       688	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x40021bf	      0x488345e001	               add qword [rbp - 0x20], 1	       692	strbuf.c	FUNCTION_48	WHILE_1
0x40021c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       672	strbuf.c	FUNCTION_48	WHILE_1
0x40021c8	           0xfb600	                   movzx eax, byte [rax]	       672	strbuf.c	FUNCTION_48	WHILE_1
0x40021cb	            0x84c0	                             test al, al	       672	strbuf.c	FUNCTION_48	WHILE_1
0x40021cd	     0xf8542ffffff	                           jne 0x4002115	       672	strbuf.c	FUNCTION_48	WHILE_1
0x40021d3	            0xeb01	                           jmp 0x40021d6	       672	strbuf.c	FUNCTION_48	WHILE_1
0x40021d5	              0x90	                                     nop	       690	strbuf.c	FUNCTION_48	WHILE_1	SWITCH_1
0x40021d6	              0xc9	                                   leave	       694	strbuf.c	FUNCTION_48
0x40021d7	              0xc3	                                     ret	       694	strbuf.c	FUNCTION_48
strbuf_humanise_bytes	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,3:ELSE,3	74
0x4002334	              0x55	                                push rbp	       734	strbuf.c	FUNCTION_53
0x4002335	          0x4889e5	                            mov rbp, rsp	       734	strbuf.c	FUNCTION_53
0x4002338	        0x4883ec20	                           sub rsp, 0x20	       734	strbuf.c	FUNCTION_53
0x400233c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       734	strbuf.c	FUNCTION_53
0x4002340	        0x488975e0	             mov qword [rbp - 0x20], rsi	       734	strbuf.c	FUNCTION_53
0x4002344	    0x48817de00000	     cmp qword [rbp - 0x20], 0x40000000 	       735	strbuf.c	FUNCTION_53	IF_1
0x400234c	            0x7e48	                           jle 0x4002396	       735	strbuf.c	FUNCTION_53	IF_1
0x400234e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       738	strbuf.c	FUNCTION_53	IF_1
0x4002352	      0x25ffffff3f	                     and eax, 0x3fffffff	       738	strbuf.c	FUNCTION_53	IF_1
0x4002357	          0x4863d0	                         movsxd rdx, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400235a	    0x4869d2c5ffff	               imul rdx, rdx, 0x31ffffc5	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002361	        0x48c1ea20	                           shr rdx, 0x20	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002365	          0xc1fa15	                           sar edx, 0x15	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002368	          0xc1f81f	                           sar eax, 0x1f	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400236b	            0x29c2	                            sub edx, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400236d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       737	strbuf.c	FUNCTION_53	IF_1
0x4002371	        0x48c1f81e	                           sar rax, 0x1e	       737	strbuf.c	FUNCTION_53	IF_1
0x4002375	            0x89c6	                            mov esi, eax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002377	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400237b	            0x89d1	                            mov ecx, edx	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400237d	            0x89f2	                            mov edx, esi	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400237f	      0xbe00000000	                              mov esi, 0	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002384	          0x4889c7	                            mov rdi, rax	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002387	      0xb800000000	                              mov eax, 0	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x400238c	      0xe800000000	                          call 0x4002391	       736	strbuf.c	FUNCTION_53	IF_1	CALL_1
0x4002391	      0xe9a6000000	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x4002396	    0x48817de00000	       cmp qword [rbp - 0x20], 0x100000 	       739	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x400239e	            0x7e3c	                           jle 0x40023dc	       739	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023a4	       0x57b140000	                         add eax, 0x147b	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023a9	          0x8945f8	                mov dword [rbp - 8], eax	       740	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023ac	          0x8b45f8	                mov eax, dword [rbp - 8]	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023af	      0x25ffff0f00	                        and eax, 0xfffff	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023b4	          0x6bc064	                     imul eax, eax, 0x64	       742	strbuf.c	FUNCTION_53	ELSE_1	IF_2
0x40023b7	          0xc1f814	                           sar eax, 0x14	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023ba	            0x89c1	                            mov ecx, eax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023bc	          0x8b45f8	                mov eax, dword [rbp - 8]	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023bf	          0xc1f814	                           sar eax, 0x14	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023c2	            0x89c2	                            mov edx, eax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023c8	      0xbe00000000	                              mov esi, 0	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023cd	          0x4889c7	                            mov rdi, rax	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023d0	      0xb800000000	                              mov eax, 0	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023d5	      0xe800000000	                          call 0x40023da	       741	strbuf.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x40023da	            0xeb60	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x40023dc	    0x48817de00004	          cmp qword [rbp - 0x20], 0x400 	       743	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023e4	            0x7e3a	                           jle 0x4002420	       743	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023ea	          0x83c005	                              add eax, 5	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023ed	          0x8945fc	                mov dword [rbp - 4], eax	       744	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023f0	          0x8b45fc	                mov eax, dword [rbp - 4]	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023f3	      0x25ff030000	                          and eax, 0x3ff	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023f8	          0x6bc064	                     imul eax, eax, 0x64	       746	strbuf.c	FUNCTION_53	ELSE_2	IF_3
0x40023fb	          0xc1f80a	                            sar eax, 0xa	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x40023fe	            0x89c1	                            mov ecx, eax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002400	          0x8b45fc	                mov eax, dword [rbp - 4]	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002403	          0xc1f80a	                            sar eax, 0xa	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002406	            0x89c2	                            mov edx, eax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002408	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x400240c	      0xbe00000000	                              mov esi, 0	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002411	          0x4889c7	                            mov rdi, rax	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002414	      0xb800000000	                              mov eax, 0	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x4002419	      0xe800000000	                          call 0x400241e	       745	strbuf.c	FUNCTION_53	ELSE_2	IF_3	CALL_3
0x400241e	            0xeb1c	                           jmp 0x400243c	       750	strbuf.c	FUNCTION_53
0x4002420	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x4002424	            0x89c2	                            mov edx, eax	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x4002426	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x400242a	      0xbe00000000	                              mov esi, 0	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x400242f	          0x4889c7	                            mov rdi, rax	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x4002432	      0xb800000000	                              mov eax, 0	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x4002437	      0xe800000000	                          call 0x400243c	       748	strbuf.c	FUNCTION_53	ELSE_3	CALL_4
0x400243c	              0x90	                                     nop	       750	strbuf.c	FUNCTION_53
0x400243d	              0xc9	                                   leave	       750	strbuf.c	FUNCTION_53
0x400243e	              0xc3	                                     ret	       750	strbuf.c	FUNCTION_53
strbuf_getline_lf	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	13
0x4001f4c	              0x55	                                push rbp	       619	strbuf.c	FUNCTION_43
0x4001f4d	          0x4889e5	                            mov rbp, rsp	       619	strbuf.c	FUNCTION_43
0x4001f50	        0x4883ec10	                           sub rsp, 0x10	       619	strbuf.c	FUNCTION_43
0x4001f54	        0x48897df8	                mov qword [rbp - 8], rdi	       619	strbuf.c	FUNCTION_43
0x4001f58	        0x488975f0	             mov qword [rbp - 0x10], rsi	       619	strbuf.c	FUNCTION_43
0x4001f5c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f60	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f64	      0xba0a000000	                            mov edx, 0xa	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f69	          0x4889ce	                            mov rsi, rcx	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f6c	          0x4889c7	                            mov rdi, rax	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f6f	      0xe8a4feffff	                call sym.strbuf_getdelim	       620	strbuf.c	FUNCTION_43	CALL_1
0x4001f74	              0xc9	                                   leave	       621	strbuf.c	FUNCTION_43
0x4001f75	              0xc3	                                     ret	       621	strbuf.c	FUNCTION_43
strbuf_list_free	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	27
0x4000d52	              0x55	                                push rbp	       200	strbuf.c	FUNCTION_17
0x4000d53	          0x4889e5	                            mov rbp, rsp	       200	strbuf.c	FUNCTION_17
0x4000d56	        0x4883ec20	                           sub rsp, 0x20	       200	strbuf.c	FUNCTION_17
0x4000d5a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       200	strbuf.c	FUNCTION_17
0x4000d5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	strbuf.c	FUNCTION_17
0x4000d62	        0x488945f8	                mov qword [rbp - 8], rax	       201	strbuf.c	FUNCTION_17
0x4000d66	            0xeb26	                           jmp 0x4000d8e	       203	strbuf.c	FUNCTION_17	WHILE_1
0x4000d68	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0x4000d6c	          0x488b00	                    mov rax, qword [rax]	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0x4000d6f	          0x4889c7	                            mov rdi, rax	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0x4000d72	      0xe800000000	                          call 0x4000d77	       204	strbuf.c	FUNCTION_17	WHILE_1	CALL_1
0x4000d77	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d7b	        0x488d5008	                      lea rdx, [rax + 8]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d7f	        0x488955f8	                mov qword [rbp - 8], rdx	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d83	          0x488b00	                    mov rax, qword [rax]	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d86	          0x4889c7	                            mov rdi, rax	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d89	      0xe800000000	                          call 0x4000d8e	       205	strbuf.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       203	strbuf.c	FUNCTION_17	WHILE_1
0x4000d92	          0x488b00	                    mov rax, qword [rax]	       203	strbuf.c	FUNCTION_17	WHILE_1
0x4000d95	          0x4885c0	                           test rax, rax	       203	strbuf.c	FUNCTION_17	WHILE_1
0x4000d98	            0x75ce	                           jne 0x4000d68	       203	strbuf.c	FUNCTION_17	WHILE_1
0x4000d9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       207	strbuf.c	FUNCTION_17	CALL_3
0x4000d9e	          0x4889c7	                            mov rdi, rax	       207	strbuf.c	FUNCTION_17	CALL_3
0x4000da1	      0xe800000000	                          call 0x4000da6	       207	strbuf.c	FUNCTION_17	CALL_3
0x4000da6	              0x90	                                     nop	       208	strbuf.c	FUNCTION_17
0x4000da7	              0xc9	                                   leave	       208	strbuf.c	FUNCTION_17
0x4000da8	              0xc3	                                     ret	       208	strbuf.c	FUNCTION_17
xstrfmt	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,3:DO,0:IF,0:ELSE,0	41
0x4002a54	              0x55	                                push rbp	       844	strbuf.c	FUNCTION_61
0x4002a55	          0x4889e5	                            mov rbp, rsp	       844	strbuf.c	FUNCTION_61
0x4002a58	    0x4881ecf00000	                           sub rsp, 0xf0	       844	strbuf.c	FUNCTION_61
0x4002a5f	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       844	strbuf.c	FUNCTION_61
0x4002a66	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	       844	strbuf.c	FUNCTION_61
0x4002a6d	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       844	strbuf.c	FUNCTION_61
0x4002a74	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       844	strbuf.c	FUNCTION_61
0x4002a7b	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       844	strbuf.c	FUNCTION_61
0x4002a82	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       844	strbuf.c	FUNCTION_61
0x4002a89	            0x84c0	                             test al, al	       844	strbuf.c	FUNCTION_61
0x4002a8b	            0x7420	                            je 0x4002aad	       844	strbuf.c	FUNCTION_61
0x4002a8d	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       844	strbuf.c	FUNCTION_61
0x4002a91	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       844	strbuf.c	FUNCTION_61
0x4002a95	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       844	strbuf.c	FUNCTION_61
0x4002a99	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       844	strbuf.c	FUNCTION_61
0x4002a9d	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       844	strbuf.c	FUNCTION_61
0x4002aa1	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       844	strbuf.c	FUNCTION_61
0x4002aa5	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       844	strbuf.c	FUNCTION_61
0x4002aa9	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       844	strbuf.c	FUNCTION_61
0x4002aad	    0x64488b042528	                mov rax, qword fs:[0x28]	       844	strbuf.c	FUNCTION_61
0x4002ab6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       844	strbuf.c	FUNCTION_61
0x4002abd	            0x31c0	                            xor eax, eax	       844	strbuf.c	FUNCTION_61
0x4002abf	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002ac9	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002ad3	        0x488d4510	                   lea rax, [rbp + 0x10]	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002ad7	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002ade	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002ae5	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       848	strbuf.c	FUNCTION_61	CALL_1
0x4002aec	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002af3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002afa	          0x4889d6	                            mov rsi, rdx	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002afd	          0x4889c7	                            mov rdi, rax	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002b00	      0xe800000000	                          call 0x4002b05	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002b05	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       849	strbuf.c	FUNCTION_61	CALL_2
0x4002b0c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       852	strbuf.c	FUNCTION_61
0x4002b13	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       853	strbuf.c	FUNCTION_61
0x4002b1a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       853	strbuf.c	FUNCTION_61
0x4002b23	            0x7405	                            je 0x4002b2a	       853	strbuf.c	FUNCTION_61
0x4002b25	      0xe800000000	                          call 0x4002b2a	       853	strbuf.c	FUNCTION_61
0x4002b2a	              0xc9	                                   leave	       853	strbuf.c	FUNCTION_61
0x4002b2b	              0xc3	                                     ret	       853	strbuf.c	FUNCTION_61
strbuf_read_once	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,4:DO,0:IF,2:ELSE,1	54
0x4001a6e	              0x55	                                push rbp	       443	strbuf.c	FUNCTION_35
0x4001a6f	          0x4889e5	                            mov rbp, rsp	       443	strbuf.c	FUNCTION_35
0x4001a72	        0x4883ec30	                           sub rsp, 0x30	       443	strbuf.c	FUNCTION_35
0x4001a76	        0x48897de8	             mov qword [rbp - 0x18], rdi	       443	strbuf.c	FUNCTION_35
0x4001a7a	          0x8975e4	             mov dword [rbp - 0x1c], esi	       443	strbuf.c	FUNCTION_35
0x4001a7d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       443	strbuf.c	FUNCTION_35
0x4001a81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	strbuf.c	FUNCTION_35
0x4001a85	          0x488b00	                    mov rax, qword [rax]	       444	strbuf.c	FUNCTION_35
0x4001a88	        0x488945f0	             mov qword [rbp - 0x10], rax	       444	strbuf.c	FUNCTION_35
0x4001a8c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001a91	            0x7406	                            je 0x4001a99	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001a93	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001a97	            0xeb05	                           jmp 0x4001a9e	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001a99	      0xb800200000	                         mov eax, 0x2000	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001a9e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001aa2	          0x4889c6	                            mov rsi, rax	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001aa5	          0x4889d7	                            mov rdi, rdx	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001aa8	      0xe800000000	                          call 0x4001aad	       447	strbuf.c	FUNCTION_35	CALL_1
0x4001aad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ab1	          0x488b10	                    mov rdx, qword [rax]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ab4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ab8	        0x488b4008	                mov rax, qword [rax + 8]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001abc	          0x4829c2	                            sub rdx, rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001abf	          0x4889d0	                            mov rax, rdx	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ac2	        0x488d50ff	                      lea rdx, [rax - 1]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ac6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001aca	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ace	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ad2	        0x488b4008	                mov rax, qword [rax + 8]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ad6	          0x4801c1	                            add rcx, rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ad9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001adc	          0x4889ce	                            mov rsi, rcx	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001adf	            0x89c7	                            mov edi, eax	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ae1	      0xe800000000	                          call 0x4001ae6	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001ae6	        0x488945f8	                mov qword [rbp - 8], rax	       448	strbuf.c	FUNCTION_35	CALL_2
0x4001aea	      0x48837df800	                  cmp qword [rbp - 8], 0	       449	strbuf.c	FUNCTION_35	IF_1
0x4001aef	            0x7e20	                           jle 0x4001b11	       449	strbuf.c	FUNCTION_35	IF_1
0x4001af1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001af5	        0x488b5008	                mov rdx, qword [rax + 8]	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001af9	        0x488b45f8	                mov rax, qword [rbp - 8]	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001afd	          0x4801c2	                            add rdx, rax	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b04	          0x4889d6	                            mov rsi, rdx	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b07	          0x4889c7	                            mov rdi, rax	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b0a	      0xe8f9e6ffff	                  call sym.strbuf_setlen	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b0f	            0xeb13	                           jmp 0x4001b24	       450	strbuf.c	FUNCTION_35	CALL_3
0x4001b11	      0x48837df000	               cmp qword [rbp - 0x10], 0	       451	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x4001b16	            0x750c	                           jne 0x4001b24	       451	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x4001b18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x4001b1c	          0x4889c7	                            mov rdi, rax	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x4001b1f	      0xe800000000	                          call 0x4001b24	       452	strbuf.c	FUNCTION_35	ELSE_1	IF_2
0x4001b24	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	strbuf.c	FUNCTION_35
0x4001b28	              0xc9	                                   leave	       454	strbuf.c	FUNCTION_35
0x4001b29	              0xc3	                                     ret	       454	strbuf.c	FUNCTION_35
strbuf_addftime	functions,0:SWITCH,1:WHILE,1:FOR,1:CALL,11:DO,0:IF,4:ELSE,0	150
0x4002b2c	              0x55	                                push rbp	       857	strbuf.c	FUNCTION_62
0x4002b2d	          0x4889e5	                            mov rbp, rsp	       857	strbuf.c	FUNCTION_62
0x4002b30	        0x4883ec60	                           sub rsp, 0x60	       857	strbuf.c	FUNCTION_62
0x4002b34	        0x48897db8	             mov qword [rbp - 0x48], rdi	       857	strbuf.c	FUNCTION_62
0x4002b38	        0x488975b0	             mov qword [rbp - 0x50], rsi	       857	strbuf.c	FUNCTION_62
0x4002b3c	        0x488955a8	             mov qword [rbp - 0x58], rdx	       857	strbuf.c	FUNCTION_62
0x4002b40	          0x894da4	             mov dword [rbp - 0x5c], ecx	       857	strbuf.c	FUNCTION_62
0x4002b43	        0x448945a0	             mov dword [rbp - 0x60], r8d	       857	strbuf.c	FUNCTION_62
0x4002b47	    0x64488b042528	                mov rax, qword fs:[0x28]	       857	strbuf.c	FUNCTION_62
0x4002b50	        0x488945f8	                mov qword [rbp - 8], rax	       857	strbuf.c	FUNCTION_62
0x4002b54	            0x31c0	                            xor eax, eax	       857	strbuf.c	FUNCTION_62
0x4002b56	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       858	strbuf.c	FUNCTION_62
0x4002b5e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       858	strbuf.c	FUNCTION_62
0x4002b66	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       858	strbuf.c	FUNCTION_62
0x4002b6e	    0x48c745c88000	           mov qword [rbp - 0x38], 0x80 	       859	strbuf.c	FUNCTION_62
0x4002b76	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       862	strbuf.c	FUNCTION_62	IF_1
0x4002b7a	           0xfb600	                   movzx eax, byte [rax]	       862	strbuf.c	FUNCTION_62	IF_1
0x4002b7d	            0x84c0	                             test al, al	       862	strbuf.c	FUNCTION_62	IF_1
0x4002b7f	     0xf84cd010000	                            je 0x4002d52	       862	strbuf.c	FUNCTION_62	IF_1
0x4002b85	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       870	strbuf.c	FUNCTION_62	FOR_1
0x4002b89	      0xbe25000000	                           mov esi, 0x25	       870	strbuf.c	FUNCTION_62	FOR_1
0x4002b8e	          0x4889c7	                            mov rdi, rax	       870	strbuf.c	FUNCTION_62	FOR_1
0x4002b91	      0xe800000000	                          call 0x4002b96	       870	strbuf.c	FUNCTION_62	FOR_1
0x4002b96	        0x488945d8	             mov qword [rbp - 0x28], rax	       870	strbuf.c	FUNCTION_62	FOR_1
0x4002b9a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002b9e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002ba2	          0x4829c2	                            sub rdx, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002ba5	          0x4889d0	                            mov rax, rdx	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002ba8	          0x4889c2	                            mov rdx, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002bab	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002baf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002bb3	          0x4889ce	                            mov rsi, rcx	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002bb6	          0x4889c7	                            mov rdi, rax	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002bb9	      0xe800000000	                          call 0x4002bbe	       871	strbuf.c	FUNCTION_62	FOR_1	CALL_1
0x4002bbe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x4002bc2	           0xfb600	                   movzx eax, byte [rax]	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x4002bc5	            0x84c0	                             test al, al	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x4002bc7	     0xf8480000000	                            je 0x4002c4d	       872	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x4002bcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       874	strbuf.c	FUNCTION_62	FOR_1
0x4002bd1	        0x4883c001	                              add rax, 1	       874	strbuf.c	FUNCTION_62	FOR_1
0x4002bd5	        0x488945b0	             mov qword [rbp - 0x50], rax	       874	strbuf.c	FUNCTION_62	FOR_1
0x4002bd9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002bdd	           0xfb600	                   movzx eax, byte [rax]	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002be0	           0xfbec0	                           movsx eax, al	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002be3	          0x83f85a	                           cmp eax, 0x5a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002be6	            0x7442	                            je 0x4002c2a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002be8	          0x83f87a	                           cmp eax, 0x7a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002beb	            0x741d	                            je 0x4002c0a	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002bed	          0x83f825	                           cmp eax, 0x25	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002bf0	            0x7545	                           jne 0x4002c37	       875	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002bf2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_2
0x4002bf6	      0xbe00000000	                              mov esi, 0	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_2
0x4002bfb	          0x4889c7	                            mov rdi, rax	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_2
0x4002bfe	      0xe80dd7ffff	                  call sym.strbuf_addstr	       877	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_2
0x4002c03	      0x488345b001	               add qword [rbp - 0x50], 1	       878	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002c08	            0xeb3e	                           jmp 0x4002c48	       879	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002c0a	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c0d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c11	      0xbe00000000	                              mov esi, 0	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c16	          0x4889c7	                            mov rdi, rax	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c19	      0xb800000000	                              mov eax, 0	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c1e	      0xe800000000	                          call 0x4002c23	       881	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_3
0x4002c23	      0x488345b001	               add qword [rbp - 0x50], 1	       882	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002c28	            0xeb1e	                           jmp 0x4002c48	       883	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1
0x4002c2a	        0x837da000	               cmp dword [rbp - 0x60], 0	       885	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x4002c2e	            0x7407	                            je 0x4002c37	       885	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x4002c30	      0x488345b001	               add qword [rbp - 0x50], 1	       886	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x4002c35	            0xeb11	                           jmp 0x4002c48	       887	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	IF_3
0x4002c37	        0x488d45e0	                   lea rax, [rbp - 0x20]	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x4002c3b	      0xbe25000000	                           mov esi, 0x25	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x4002c40	          0x4889c7	                            mov rdi, rax	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x4002c43	      0xe85ad6ffff	                   call sym.strbuf_addch	       891	strbuf.c	FUNCTION_62	FOR_1	SWITCH_1	CALL_4
0x4002c48	      0xe938ffffff	                           jmp 0x4002b85	       893	strbuf.c	FUNCTION_62	FOR_1
0x4002c4d	              0x90	                                     nop	       873	strbuf.c	FUNCTION_62	FOR_1	IF_2
0x4002c4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       894	strbuf.c	FUNCTION_62
0x4002c52	        0x488945b0	             mov qword [rbp - 0x50], rax	       894	strbuf.c	FUNCTION_62
0x4002c56	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       896	strbuf.c	FUNCTION_62	CALL_5
0x4002c5a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       896	strbuf.c	FUNCTION_62	CALL_5
0x4002c5e	          0x4889d6	                            mov rsi, rdx	       896	strbuf.c	FUNCTION_62	CALL_5
0x4002c61	          0x4889c7	                            mov rdi, rax	       896	strbuf.c	FUNCTION_62	CALL_5
0x4002c64	      0xe800000000	                          call 0x4002c69	       896	strbuf.c	FUNCTION_62	CALL_5
0x4002c69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c6d	          0x488b10	                    mov rdx, qword [rax]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c74	        0x488b4008	                mov rax, qword [rax + 8]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c78	          0x4889d6	                            mov rsi, rdx	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c7b	          0x4829c6	                            sub rsi, rax	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c7e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c82	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c8a	        0x488b4008	                mov rax, qword [rax + 8]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c8e	        0x488d3c02	                    lea rdi, [rdx + rax]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c92	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c96	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c9a	          0x4889d1	                            mov rcx, rdx	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002c9d	          0x4889c2	                            mov rdx, rax	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002ca0	      0xe800000000	                          call 0x4002ca5	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002ca5	        0x488945d0	             mov qword [rbp - 0x30], rax	       897	strbuf.c	FUNCTION_62	CALL_6
0x4002ca9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       899	strbuf.c	FUNCTION_62	IF_4
0x4002cae	            0x7576	                           jne 0x4002d26	       899	strbuf.c	FUNCTION_62	IF_4
0x4002cb0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       907	strbuf.c	FUNCTION_62	IF_4	CALL_7
0x4002cb4	      0xbe20000000	                           mov esi, 0x20	       907	strbuf.c	FUNCTION_62	IF_4	CALL_7
0x4002cb9	          0x4889c7	                            mov rdi, rax	       907	strbuf.c	FUNCTION_62	IF_4	CALL_7
0x4002cbc	      0xe8e1d5ffff	                   call sym.strbuf_addch	       907	strbuf.c	FUNCTION_62	IF_4	CALL_7
0x4002cc1	            0xeb57	                           jmp 0x4002d1a	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x4002cc3	        0x48d165c8	               shl qword [rbp - 0x38], 1	       909	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x4002cc7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_8
0x4002ccb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_8
0x4002ccf	          0x4889d6	                            mov rsi, rdx	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_8
0x4002cd2	          0x4889c7	                            mov rdi, rax	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_8
0x4002cd5	      0xe800000000	                          call 0x4002cda	       910	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_8
0x4002cda	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       912	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x4002cde	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002ce2	          0x488b0a	                    mov rcx, qword [rdx]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002ce5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002ce9	        0x488b5208	                mov rdx, qword [rdx + 8]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002ced	          0x4829d1	                            sub rcx, rdx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002cf0	          0x4889ce	                            mov rsi, rcx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002cf3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002cf7	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002cfb	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002cff	        0x488b5208	                mov rdx, qword [rdx + 8]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d03	        0x488d3c11	                    lea rdi, [rcx + rdx]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d07	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d0b	          0x4889d1	                            mov rcx, rdx	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d0e	          0x4889c2	                            mov rdx, rax	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d11	      0xe800000000	                          call 0x4002d16	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d16	        0x488945d0	             mov qword [rbp - 0x30], rax	       911	strbuf.c	FUNCTION_62	IF_4	WHILE_1	CALL_9
0x4002d1a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x4002d1f	            0x74a2	                            je 0x4002cc3	       908	strbuf.c	FUNCTION_62	IF_4	WHILE_1
0x4002d21	      0x48836dd001	               sub qword [rbp - 0x30], 1	       914	strbuf.c	FUNCTION_62	IF_4
0x4002d26	        0x488d45e0	                   lea rax, [rbp - 0x20]	       916	strbuf.c	FUNCTION_62	CALL_10
0x4002d2a	          0x4889c7	                            mov rdi, rax	       916	strbuf.c	FUNCTION_62	CALL_10
0x4002d2d	      0xe800000000	                          call 0x4002d32	       916	strbuf.c	FUNCTION_62	CALL_10
0x4002d32	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d36	        0x488b5008	                mov rdx, qword [rax + 8]	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d3e	          0x4801c2	                            add rdx, rax	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d45	          0x4889d6	                            mov rsi, rdx	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d48	          0x4889c7	                            mov rdi, rax	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d4b	      0xe8b8d4ffff	                  call sym.strbuf_setlen	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d50	            0xeb01	                           jmp 0x4002d53	       917	strbuf.c	FUNCTION_62	CALL_11
0x4002d52	              0x90	                                     nop	       863	strbuf.c	FUNCTION_62	IF_1
0x4002d53	        0x488b45f8	                mov rax, qword [rbp - 8]	       918	strbuf.c	FUNCTION_62
0x4002d57	    0x644833042528	                xor rax, qword fs:[0x28]	       918	strbuf.c	FUNCTION_62
0x4002d60	            0x7405	                            je 0x4002d67	       918	strbuf.c	FUNCTION_62
0x4002d62	      0xe800000000	                          call 0x4002d67	       918	strbuf.c	FUNCTION_62
0x4002d67	              0xc9	                                   leave	       918	strbuf.c	FUNCTION_62
0x4002d68	              0xc3	                                     ret	       918	strbuf.c	FUNCTION_62
strbuf_add_separated_string_list	functions,1:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	40
0x4000cc8	              0x55	                                push rbp	       187	strbuf.c	FUNCTION_16
0x4000cc9	          0x4889e5	                            mov rbp, rsp	       187	strbuf.c	FUNCTION_16
0x4000ccc	        0x4883ec30	                           sub rsp, 0x30	       187	strbuf.c	FUNCTION_16
0x4000cd0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       187	strbuf.c	FUNCTION_16
0x4000cd4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       187	strbuf.c	FUNCTION_16
0x4000cd8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       187	strbuf.c	FUNCTION_16
0x4000cdc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       189	strbuf.c	FUNCTION_16
0x4000ce3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000ce7	          0x488b00	                    mov rax, qword [rax]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000cea	        0x488945f8	                mov qword [rbp - 8], rax	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000cee	            0xeb3b	                           jmp 0x4000d2b	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000cf0	        0x837df400	                cmp dword [rbp - 0xc], 0	       192	strbuf.c	FUNCTION_16	FUNCTION_1	IF_1
0x4000cf4	            0x7413	                            je 0x4000d09	       192	strbuf.c	FUNCTION_16	FUNCTION_1	IF_1
0x4000cf6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0x4000cfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0x4000cfe	          0x4889d6	                            mov rsi, rdx	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0x4000d01	          0x4889c7	                            mov rdi, rax	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0x4000d04	      0xe807f6ffff	                  call sym.strbuf_addstr	       193	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_1
0x4000d09	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d0d	          0x488b10	                    mov rdx, qword [rax]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d14	          0x4889d6	                            mov rsi, rdx	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d17	          0x4889c7	                            mov rdi, rax	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d1a	      0xe8f1f5ffff	                  call sym.strbuf_addstr	       194	strbuf.c	FUNCTION_16	FUNCTION_1	CALL_2
0x4000d1f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       195	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d26	      0x488345f810	               add qword [rbp - 8], 0x10	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d2b	      0x48837df800	                  cmp qword [rbp - 8], 0	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d30	            0x741d	                            je 0x4000d4f	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d36	          0x488b10	                    mov rdx, qword [rax]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d3d	          0x8b4008	                mov eax, dword [rax + 8]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d40	            0x89c0	                            mov eax, eax	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d42	        0x48c1e004	                              shl rax, 4	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d46	          0x4801d0	                            add rax, rdx	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d49	        0x483b45f8	                cmp rax, qword [rbp - 8]	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d4d	            0x77a1	                            ja 0x4000cf0	       191	strbuf.c	FUNCTION_16	FUNCTION_1
0x4000d4f	              0x90	                                     nop	       197	strbuf.c	FUNCTION_16
0x4000d50	              0xc9	                                   leave	       197	strbuf.c	FUNCTION_16
0x4000d51	              0xc3	                                     ret	       197	strbuf.c	FUNCTION_16
strbuf_complete	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,1:ELSE,0	27
0x4000345	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_130
0x4000346	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_130
0x4000349	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_130
0x400034d	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_130
0x4000351	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_130
0x4000353	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_130
0x4000356	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_130	IF_1
0x400035a	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_130	IF_1
0x400035e	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_130	IF_1
0x4000361	            0x7431	                            je 0x4000394	       595	strbuf.h	FUNCTION_130	IF_1
0x4000363	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_130	IF_1
0x4000367	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_130	IF_1
0x400036b	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_130	IF_1
0x400036f	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_130	IF_1
0x4000373	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_130	IF_1
0x4000377	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_130	IF_1
0x400037a	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_130	IF_1
0x400037d	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_130	IF_1
0x4000380	            0x7412	                            je 0x4000394	       595	strbuf.h	FUNCTION_130	IF_1
0x4000382	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_130	CALL_1
0x4000386	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_130	CALL_1
0x400038a	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_130	CALL_1
0x400038c	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_130	CALL_1
0x400038f	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_130	CALL_1
0x4000394	              0x90	                                     nop	       597	strbuf.h	FUNCTION_130
0x4000395	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_130
0x4000396	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_130
strbuf_add_absolute_path	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,10:DO,0:IF,4:ELSE,1	111
0x400243f	              0x55	                                push rbp	       753	strbuf.c	FUNCTION_54
0x4002440	          0x4889e5	                            mov rbp, rsp	       753	strbuf.c	FUNCTION_54
0x4002443	    0x4881ec600100	                          sub rsp, 0x160	       753	strbuf.c	FUNCTION_54
0x400244a	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	       753	strbuf.c	FUNCTION_54
0x4002451	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       753	strbuf.c	FUNCTION_54
0x4002458	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	strbuf.c	FUNCTION_54
0x4002461	        0x488945f8	                mov qword [rbp - 8], rax	       753	strbuf.c	FUNCTION_54
0x4002465	            0x31c0	                            xor eax, eax	       753	strbuf.c	FUNCTION_54
0x4002467	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       754	strbuf.c	FUNCTION_54	IF_1
0x400246e	           0xfb600	                   movzx eax, byte [rax]	       754	strbuf.c	FUNCTION_54	IF_1
0x4002471	            0x84c0	                             test al, al	       754	strbuf.c	FUNCTION_54	IF_1
0x4002473	            0x750f	                           jne 0x4002484	       754	strbuf.c	FUNCTION_54	IF_1
0x4002475	      0xbf00000000	                              mov edi, 0	       755	strbuf.c	FUNCTION_54	CALL_1
0x400247a	      0xb800000000	                              mov eax, 0	       755	strbuf.c	FUNCTION_54	CALL_1
0x400247f	      0xe800000000	                          call 0x4002484	       755	strbuf.c	FUNCTION_54	CALL_1
0x4002484	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x400248b	          0x4889c7	                            mov rdi, rax	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x400248e	      0xe824dfffff	               call sym.is_absolute_path	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x4002493	            0x85c0	                           test eax, eax	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x4002495	     0xf856f010000	                           jne 0x400260a	       756	strbuf.c	FUNCTION_54	IF_2	CALL_2
0x400249b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       758	strbuf.c	FUNCTION_54	IF_2
0x40024a2	        0x488b4008	                mov rax, qword [rax + 8]	       758	strbuf.c	FUNCTION_54	IF_2
0x40024a6	    0x488985b8feff	            mov qword [rbp - 0x148], rax	       758	strbuf.c	FUNCTION_54	IF_2
0x40024ad	      0xe800000000	                          call 0x40024b2	       759	strbuf.c	FUNCTION_54	IF_2	CALL_3
0x40024b2	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       759	strbuf.c	FUNCTION_54	IF_2	CALL_3
0x40024b9	      0xbf00000000	                              mov edi, 0	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x40024be	      0xe800000000	                          call 0x40024c3	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x40024c3	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       760	strbuf.c	FUNCTION_54	IF_2	CALL_4
0x40024ca	    0x4883bdc8feff	              cmp qword [rbp - 0x138], 0	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024d2	     0xf84b4000000	                            je 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024d8	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024df	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024e6	          0x4889d6	                            mov rsi, rdx	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024e9	          0x4889c7	                            mov rdi, rax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024ec	      0xe800000000	                          call 0x40024f1	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024f1	            0x85c0	                           test eax, eax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024f3	     0xf8493000000	                            je 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x40024f9	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002500	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002507	          0x4889d6	                            mov rsi, rdx	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400250a	          0x4889c7	                            mov rdi, rax	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400250d	      0xe800000000	                          call 0x4002512	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002512	            0x85c0	                           test eax, eax	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x4002514	            0x7576	                           jne 0x400258c	       761	strbuf.c	FUNCTION_54	IF_2	IF_3	CALL_5
0x4002516	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400251d	          0x4885c0	                           test rax, rax	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002520	            0x750c	                           jne 0x400252e	       762	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002522	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002529	          0x4885c0	                           test rax, rax	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400252c	            0x745e	                            je 0x400258c	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400252e	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002535	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400253c	          0x4889d6	                            mov rsi, rdx	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400253f	          0x4889c7	                            mov rdi, rax	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002542	      0xe800000000	                          call 0x4002547	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002547	            0x85c0	                           test eax, eax	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002549	            0x7541	                           jne 0x400258c	       763	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400254b	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002552	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002559	          0x4839c2	                            cmp rdx, rax	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400255c	            0x752e	                           jne 0x400258c	       764	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400255e	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       766	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002565	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       766	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400256c	          0x4839c2	                            cmp rdx, rax	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x400256f	            0x751b	                           jne 0x400258c	       765	strbuf.c	FUNCTION_54	IF_2	IF_3
0x4002571	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x4002578	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x400257f	          0x4889d6	                            mov rsi, rdx	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x4002582	          0x4889c7	                            mov rdi, rax	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x4002585	      0xe886ddffff	                  call sym.strbuf_addstr	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x400258a	            0xeb19	                           jmp 0x40025a5	       767	strbuf.c	FUNCTION_54	IF_2	CALL_6
0x400258c	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       769	strbuf.c	FUNCTION_54	IF_2	CALL_7
0x4002593	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       769	strbuf.c	FUNCTION_54	IF_2	CALL_7
0x400259a	          0x4889d6	                            mov rsi, rdx	       769	strbuf.c	FUNCTION_54	IF_2	CALL_7
0x400259d	          0x4889c7	                            mov rdi, rax	       769	strbuf.c	FUNCTION_54	IF_2	CALL_7
0x40025a0	      0xe86bddffff	                  call sym.strbuf_addstr	       769	strbuf.c	FUNCTION_54	IF_2	CALL_7
0x40025a5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025ac	        0x488b4008	                mov rax, qword [rax + 8]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025b0	    0x483b85b8feff	            cmp rax, qword [rbp - 0x148]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025b7	            0x7642	                           jbe 0x40025fb	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025b9	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025c0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025c4	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025cb	        0x488b4008	                mov rax, qword [rax + 8]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025cf	        0x4883e801	                              sub rax, 1	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025d3	          0x4801d0	                            add rax, rdx	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025d6	           0xfb600	                   movzx eax, byte [rax]	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025d9	           0xfbec0	                           movsx eax, al	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025dc	            0x89c7	                            mov edi, eax	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025de	      0xe86cdaffff	                 call sym.git_is_dir_sep	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025e3	            0x85c0	                           test eax, eax	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025e5	            0x7514	                           jne 0x40025fb	       770	strbuf.c	FUNCTION_54	IF_2	IF_4
0x40025e7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       771	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x40025ee	      0xbe2f000000	                           mov esi, 0x2f	       771	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x40025f3	          0x4889c7	                            mov rdi, rax	       771	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x40025f6	      0xe8a7dcffff	                   call sym.strbuf_addch	       771	strbuf.c	FUNCTION_54	IF_2	CALL_8
0x40025fb	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       772	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x4002602	          0x4889c7	                            mov rdi, rax	       772	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x4002605	      0xe800000000	                          call 0x400260a	       772	strbuf.c	FUNCTION_54	IF_2	CALL_9
0x400260a	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       774	strbuf.c	FUNCTION_54	CALL_10
0x4002611	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       774	strbuf.c	FUNCTION_54	CALL_10
0x4002618	          0x4889d6	                            mov rsi, rdx	       774	strbuf.c	FUNCTION_54	CALL_10
0x400261b	          0x4889c7	                            mov rdi, rax	       774	strbuf.c	FUNCTION_54	CALL_10
0x400261e	      0xe8eddcffff	                  call sym.strbuf_addstr	       774	strbuf.c	FUNCTION_54	CALL_10
0x4002623	              0x90	                                     nop	       775	strbuf.c	FUNCTION_54
0x4002624	        0x488b45f8	                mov rax, qword [rbp - 8]	       775	strbuf.c	FUNCTION_54
0x4002628	    0x644833042528	                xor rax, qword fs:[0x28]	       775	strbuf.c	FUNCTION_54
0x4002631	            0x7405	                            je 0x4002638	       775	strbuf.c	FUNCTION_54
0x4002633	      0xe800000000	                          call 0x4002638	       775	strbuf.c	FUNCTION_54
0x4002638	              0xc9	                                   leave	       775	strbuf.c	FUNCTION_54
0x4002639	              0xc3	                                     ret	       775	strbuf.c	FUNCTION_54
strbuf_stripspace	functions,0:SWITCH,0:WHILE,0:FOR,1:CALL,5:DO,0:IF,3:ELSE,1	117
0x4002e27	              0x55	                                push rbp	       962	strbuf.c	FUNCTION_65
0x4002e28	          0x4889e5	                            mov rbp, rsp	       962	strbuf.c	FUNCTION_65
0x4002e2b	        0x4883ec40	                           sub rsp, 0x40	       962	strbuf.c	FUNCTION_65
0x4002e2f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       962	strbuf.c	FUNCTION_65
0x4002e33	          0x8975c4	             mov dword [rbp - 0x3c], esi	       962	strbuf.c	FUNCTION_65
0x4002e36	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       963	strbuf.c	FUNCTION_65
0x4002e3d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       968	strbuf.c	FUNCTION_65	CALL_1
0x4002e41	      0xbe01000000	                              mov esi, 1	       968	strbuf.c	FUNCTION_65	CALL_1
0x4002e46	          0x4889c7	                            mov rdi, rax	       968	strbuf.c	FUNCTION_65	CALL_1
0x4002e49	      0xe800000000	                          call 0x4002e4e	       968	strbuf.c	FUNCTION_65	CALL_1
0x4002e4e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002e56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002e5a	        0x488945d8	             mov qword [rbp - 0x28], rax	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002e5e	      0xe95d010000	                           jmp 0x4002fc0	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002e63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e67	        0x488b4008	                mov rax, qword [rax + 8]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e6b	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e6f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e73	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e77	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e7b	          0x4801d1	                            add rcx, rdx	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e7e	          0x4889c2	                            mov rdx, rax	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e81	      0xbe0a000000	                            mov esi, 0xa	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e86	          0x4889cf	                            mov rdi, rcx	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e89	      0xe800000000	                          call 0x4002e8e	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e8e	        0x488945f0	             mov qword [rbp - 0x10], rax	       971	strbuf.c	FUNCTION_65	FOR_1	CALL_2
0x4002e92	      0x48837df000	               cmp qword [rbp - 0x10], 0	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002e97	            0x741f	                            je 0x4002eb8	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002e99	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002e9d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ea1	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ea5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ea9	          0x4801c8	                            add rax, rcx	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002eac	          0x4829c2	                            sub rdx, rax	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002eaf	          0x4889d0	                            mov rax, rdx	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002eb2	        0x4883c001	                              add rax, 1	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002eb6	            0xeb0c	                           jmp 0x4002ec4	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002eb8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ebc	        0x488b4008	                mov rax, qword [rax + 8]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ec0	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ec4	        0x488945f8	                mov qword [rbp - 8], rax	       972	strbuf.c	FUNCTION_65	FOR_1
0x4002ec8	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ecc	            0x7431	                            je 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ece	      0x48837df800	                  cmp qword [rbp - 8], 0	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ed3	            0x742a	                            je 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ed5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ed9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002edd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ee1	          0x4801d0	                            add rax, rdx	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ee4	           0xfb610	                   movzx edx, byte [rax]	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ee7	     0xfb605000000	           movzx eax, byte [0x04002eee] 	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002eee	            0x38c2	                              cmp dl, al	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ef0	            0x750d	                           jne 0x4002eff	       974	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002ef2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       975	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002efa	      0xe9b1000000	                           jmp 0x4002fb0	       976	strbuf.c	FUNCTION_65	FOR_1	IF_1
0x4002eff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f03	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f0b	          0x4801c2	                            add rdx, rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f0e	        0x488b45f8	                mov rax, qword [rbp - 8]	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f12	          0x4889c6	                            mov rsi, rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f15	          0x4889d7	                            mov rdi, rdx	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f18	      0xe8bbfeffff	                        call sym.cleanup	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f1d	        0x488945e8	             mov qword [rbp - 0x18], rax	       978	strbuf.c	FUNCTION_65	FOR_1	CALL_3
0x4002f21	      0x48837de800	               cmp qword [rbp - 0x18], 0	       981	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f26	     0xf8480000000	                            je 0x4002fac	       981	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f2c	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f30	            0x7e21	                           jle 0x4002f53	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f32	      0x48837de000	               cmp qword [rbp - 0x20], 0	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f37	            0x741a	                            je 0x4002f53	       982	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f3d	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f45	        0x488d5001	                      lea rdx, [rax + 1]	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f49	        0x488955e0	             mov qword [rbp - 0x20], rdx	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f4d	          0x4801c8	                            add rax, rcx	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f50	          0xc6000a	                     mov byte [rax], 0xa	       983	strbuf.c	FUNCTION_65	FOR_1	IF_2	IF_3
0x4002f53	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       984	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f5e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f66	        0x488d3402	                    lea rsi, [rdx + rax]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f6a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f6e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f76	        0x488d0c02	                    lea rcx, [rdx + rax]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f7e	          0x4889c2	                            mov rdx, rax	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f81	          0x4889cf	                            mov rdi, rcx	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f84	      0xe800000000	                          call 0x4002f89	       985	strbuf.c	FUNCTION_65	FOR_1	IF_2	CALL_4
0x4002f89	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f8d	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f95	        0x488d5001	                      lea rdx, [rax + 1]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f99	        0x488955e0	             mov qword [rbp - 0x20], rdx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002f9d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002fa1	          0x4801d0	                            add rax, rdx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002fa4	          0x4801c8	                            add rax, rcx	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002fa7	          0xc6000a	                     mov byte [rax], 0xa	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002faa	            0xeb04	                           jmp 0x4002fb0	       986	strbuf.c	FUNCTION_65	FOR_1	IF_2
0x4002fac	        0x8345d401	               add dword [rbp - 0x2c], 1	       988	strbuf.c	FUNCTION_65	FOR_1	ELSE_1
0x4002fb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fb4	        0x480145d8	            add qword [rbp - 0x28], rax 	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fbc	        0x480145e0	            add qword [rbp - 0x20], rax 	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fc4	        0x488b4008	                mov rax, qword [rax + 8]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fc8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fcc	     0xf8791feffff	                            ja 0x4002e63	       970	strbuf.c	FUNCTION_65	FOR_1
0x4002fd2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       992	strbuf.c	FUNCTION_65	CALL_5
0x4002fd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       992	strbuf.c	FUNCTION_65	CALL_5
0x4002fda	          0x4889d6	                            mov rsi, rdx	       992	strbuf.c	FUNCTION_65	CALL_5
0x4002fdd	          0x4889c7	                            mov rdi, rax	       992	strbuf.c	FUNCTION_65	CALL_5
0x4002fe0	      0xe823d2ffff	                  call sym.strbuf_setlen	       992	strbuf.c	FUNCTION_65	CALL_5
0x4002fe5	              0x90	                                     nop	       993	strbuf.c	FUNCTION_65
0x4002fe6	              0xc9	                                   leave	       993	strbuf.c	FUNCTION_65
0x4002fe7	              0xc3	                                     ret	       993	strbuf.c	FUNCTION_65
strbuf_normalize_path	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,7:DO,0:IF,1:ELSE,0	52
0x4002fe8	              0x55	                                push rbp	       996	strbuf.c	FUNCTION_66
0x4002fe9	          0x4889e5	                            mov rbp, rsp	       996	strbuf.c	FUNCTION_66
0x4002fec	        0x4883ec30	                           sub rsp, 0x30	       996	strbuf.c	FUNCTION_66
0x4002ff0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       996	strbuf.c	FUNCTION_66
0x4002ff4	    0x64488b042528	                mov rax, qword fs:[0x28]	       996	strbuf.c	FUNCTION_66
0x4002ffd	        0x488945f8	                mov qword [rbp - 8], rax	       996	strbuf.c	FUNCTION_66
0x4003001	            0x31c0	                            xor eax, eax	       996	strbuf.c	FUNCTION_66
0x4003003	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       997	strbuf.c	FUNCTION_66
0x400300b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       997	strbuf.c	FUNCTION_66
0x4003013	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       997	strbuf.c	FUNCTION_66
0x400301b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       999	strbuf.c	FUNCTION_66	CALL_1
0x400301f	        0x488b5008	                mov rdx, qword [rax + 8]	       999	strbuf.c	FUNCTION_66	CALL_1
0x4003023	        0x488d45e0	                   lea rax, [rbp - 0x20]	       999	strbuf.c	FUNCTION_66	CALL_1
0x4003027	          0x4889d6	                            mov rsi, rdx	       999	strbuf.c	FUNCTION_66	CALL_1
0x400302a	          0x4889c7	                            mov rdi, rax	       999	strbuf.c	FUNCTION_66	CALL_1
0x400302d	      0xe800000000	                          call 0x4003032	       999	strbuf.c	FUNCTION_66	CALL_1
0x4003032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x4003036	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x400303a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x400303e	          0x4889d6	                            mov rsi, rdx	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x4003041	          0x4889c7	                            mov rdi, rax	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x4003044	      0xe800000000	                          call 0x4003049	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x4003049	            0x85c0	                           test eax, eax	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x400304b	            0x7913	                           jns 0x4003060	      1000	strbuf.c	FUNCTION_66	IF_1	CALL_2
0x400304d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x4003051	          0x4889c7	                            mov rdi, rax	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x4003054	      0xe800000000	                          call 0x4003059	      1001	strbuf.c	FUNCTION_66	IF_1	CALL_3
0x4003059	      0xb8ffffffff	                     mov eax, 0xffffffff	      1002	strbuf.c	FUNCTION_66	IF_1
0x400305e	            0xeb42	                           jmp 0x40030a2	      1002	strbuf.c	FUNCTION_66	IF_1
0x4003060	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1009	strbuf.c	FUNCTION_66	CALL_5
0x4003064	          0x4889c7	                            mov rdi, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x4003067	      0xe800000000	                          call 0x400306c	      1009	strbuf.c	FUNCTION_66	CALL_5
0x400306c	          0x4889c2	                            mov rdx, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x400306f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1009	strbuf.c	FUNCTION_66	CALL_5
0x4003073	          0x4889d6	                            mov rsi, rdx	      1009	strbuf.c	FUNCTION_66	CALL_5
0x4003076	          0x4889c7	                            mov rdi, rax	      1009	strbuf.c	FUNCTION_66	CALL_5
0x4003079	      0xe88ad1ffff	                  call sym.strbuf_setlen	      1009	strbuf.c	FUNCTION_66	CALL_5
0x400307e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1010	strbuf.c	FUNCTION_66	CALL_6
0x4003082	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1010	strbuf.c	FUNCTION_66	CALL_6
0x4003086	          0x4889d6	                            mov rsi, rdx	      1010	strbuf.c	FUNCTION_66	CALL_6
0x4003089	          0x4889c7	                            mov rdi, rax	      1010	strbuf.c	FUNCTION_66	CALL_6
0x400308c	      0xe8add0ffff	                    call sym.strbuf_swap	      1010	strbuf.c	FUNCTION_66	CALL_6
0x4003091	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1011	strbuf.c	FUNCTION_66	CALL_7
0x4003095	          0x4889c7	                            mov rdi, rax	      1011	strbuf.c	FUNCTION_66	CALL_7
0x4003098	      0xe800000000	                          call 0x400309d	      1011	strbuf.c	FUNCTION_66	CALL_7
0x400309d	      0xb800000000	                              mov eax, 0	      1012	strbuf.c	FUNCTION_66
0x40030a2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1013	strbuf.c	FUNCTION_66
0x40030a6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	strbuf.c	FUNCTION_66
0x40030af	            0x7405	                            je 0x40030b6	      1013	strbuf.c	FUNCTION_66
0x40030b1	      0xe800000000	                          call 0x40030b6	      1013	strbuf.c	FUNCTION_66
0x40030b6	              0xc9	                                   leave	      1013	strbuf.c	FUNCTION_66
0x40030b7	              0xc3	                                     ret	      1013	strbuf.c	FUNCTION_66
strbuf_readlink	functions,0:SWITCH,0:WHILE,1:FOR,0:CALL,4:DO,0:IF,5:ELSE,1	56
0x4001b71	              0x55	                                push rbp	       465	strbuf.c	FUNCTION_37
0x4001b72	          0x4889e5	                            mov rbp, rsp	       465	strbuf.c	FUNCTION_37
0x4001b75	        0x4883ec30	                           sub rsp, 0x30	       465	strbuf.c	FUNCTION_37
0x4001b79	        0x48897de8	             mov qword [rbp - 0x18], rdi	       465	strbuf.c	FUNCTION_37
0x4001b7d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       465	strbuf.c	FUNCTION_37
0x4001b81	        0x488955d8	             mov qword [rbp - 0x28], rdx	       465	strbuf.c	FUNCTION_37
0x4001b85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	strbuf.c	FUNCTION_37
0x4001b89	          0x488b00	                    mov rax, qword [rax]	       466	strbuf.c	FUNCTION_37
0x4001b8c	        0x488945f8	                mov qword [rbp - 8], rax	       466	strbuf.c	FUNCTION_37
0x4001b90	      0x48837dd81f	           cmp qword [rbp - 0x28], 0x1f 	       468	strbuf.c	FUNCTION_37	IF_1
0x4001b95	            0x777a	                            ja 0x4001c11	       468	strbuf.c	FUNCTION_37	IF_1
0x4001b97	    0x48c745d82000	           mov qword [rbp - 0x28], 0x20 	       469	strbuf.c	FUNCTION_37	IF_1
0x4001b9f	            0xeb70	                           jmp 0x4001c11	       471	strbuf.c	FUNCTION_37	WHILE_1
0x4001ba1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x4001ba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x4001ba9	          0x4889d6	                            mov rsi, rdx	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x4001bac	          0x4889c7	                            mov rdi, rax	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x4001baf	      0xe800000000	                          call 0x4001bb4	       474	strbuf.c	FUNCTION_37	WHILE_1	CALL_1
0x4001bb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bb8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bbc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bc0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bc4	          0x4889ce	                            mov rsi, rcx	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bc7	          0x4889c7	                            mov rdi, rax	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bca	      0xe800000000	                          call 0x4001bcf	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bcf	          0x8945f4	              mov dword [rbp - 0xc], eax	       475	strbuf.c	FUNCTION_37	WHILE_1	CALL_2
0x4001bd2	        0x837df400	                cmp dword [rbp - 0xc], 0	       476	strbuf.c	FUNCTION_37	WHILE_1	IF_2
0x4001bd6	            0x790e	                           jns 0x4001be6	       476	strbuf.c	FUNCTION_37	WHILE_1	IF_2
0x4001bd8	      0xe800000000	                          call 0x4001bdd	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x4001bdd	            0x8b00	                    mov eax, dword [rax]	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x4001bdf	          0x83f822	                           cmp eax, 0x22	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x4001be2	            0x7429	                            je 0x4001c0d	       477	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x4001be4	            0xeb35	                           jmp 0x4001c1b	       478	strbuf.c	FUNCTION_37	WHILE_1	IF_2	IF_3
0x4001be6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001be9	            0x4898	                                    cdqe	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001beb	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001bef	            0x731c	                           jae 0x4001c0d	       479	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001bf1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001bf4	          0x4863d0	                         movsxd rdx, eax	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001bf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001bfb	          0x4889d6	                            mov rsi, rdx	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001bfe	          0x4889c7	                            mov rdi, rax	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001c01	      0xe802e6ffff	                  call sym.strbuf_setlen	       480	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4	CALL_3
0x4001c06	      0xb800000000	                              mov eax, 0	       481	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001c0b	            0xeb26	                           jmp 0x4001c33	       481	strbuf.c	FUNCTION_37	WHILE_1	ELSE_1	IF_4
0x4001c0d	        0x48d165d8	               shl qword [rbp - 0x28], 1	       485	strbuf.c	FUNCTION_37	WHILE_1
0x4001c11	    0x48817dd8ff1f	         cmp qword [rbp - 0x28], 0x1fff 	       471	strbuf.c	FUNCTION_37	WHILE_1
0x4001c19	            0x7686	                           jbe 0x4001ba1	       471	strbuf.c	FUNCTION_37	WHILE_1
0x4001c1b	      0x48837df800	                  cmp qword [rbp - 8], 0	       487	strbuf.c	FUNCTION_37	IF_5
0x4001c20	            0x750c	                           jne 0x4001c2e	       487	strbuf.c	FUNCTION_37	IF_5
0x4001c22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	strbuf.c	FUNCTION_37	CALL_4
0x4001c26	          0x4889c7	                            mov rdi, rax	       488	strbuf.c	FUNCTION_37	CALL_4
0x4001c29	      0xe800000000	                          call 0x4001c2e	       488	strbuf.c	FUNCTION_37	CALL_4
0x4001c2e	      0xb8ffffffff	                     mov eax, 0xffffffff	       489	strbuf.c	FUNCTION_37
0x4001c33	              0xc9	                                   leave	       490	strbuf.c	FUNCTION_37
0x4001c34	              0xc3	                                     ret	       490	strbuf.c	FUNCTION_37
strbuf_commented_addf	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,5:DO,0:IF,1:ELSE,0	83
0x400138f	              0x55	                                push rbp	       310	strbuf.c	FUNCTION_28
0x4001390	          0x4889e5	                            mov rbp, rsp	       310	strbuf.c	FUNCTION_28
0x4001393	    0x4881ec100100	                          sub rsp, 0x110	       310	strbuf.c	FUNCTION_28
0x400139a	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       310	strbuf.c	FUNCTION_28
0x40013a1	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       310	strbuf.c	FUNCTION_28
0x40013a8	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       310	strbuf.c	FUNCTION_28
0x40013af	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       310	strbuf.c	FUNCTION_28
0x40013b6	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       310	strbuf.c	FUNCTION_28
0x40013bd	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       310	strbuf.c	FUNCTION_28
0x40013c4	            0x84c0	                             test al, al	       310	strbuf.c	FUNCTION_28
0x40013c6	            0x7420	                            je 0x40013e8	       310	strbuf.c	FUNCTION_28
0x40013c8	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       310	strbuf.c	FUNCTION_28
0x40013cc	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       310	strbuf.c	FUNCTION_28
0x40013d0	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       310	strbuf.c	FUNCTION_28
0x40013d4	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       310	strbuf.c	FUNCTION_28
0x40013d8	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       310	strbuf.c	FUNCTION_28
0x40013dc	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       310	strbuf.c	FUNCTION_28
0x40013e0	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       310	strbuf.c	FUNCTION_28
0x40013e4	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       310	strbuf.c	FUNCTION_28
0x40013e8	    0x64488b042528	                mov rax, qword fs:[0x28]	       310	strbuf.c	FUNCTION_28
0x40013f1	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       310	strbuf.c	FUNCTION_28
0x40013f8	            0x31c0	                            xor eax, eax	       310	strbuf.c	FUNCTION_28
0x40013fa	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       312	strbuf.c	FUNCTION_28
0x4001405	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       312	strbuf.c	FUNCTION_28
0x4001410	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       312	strbuf.c	FUNCTION_28
0x400141b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x4001422	        0x488b4008	                mov rax, qword [rax + 8]	       313	strbuf.c	FUNCTION_28
0x4001426	          0x4885c0	                           test rax, rax	       313	strbuf.c	FUNCTION_28
0x4001429	            0x742b	                            je 0x4001456	       313	strbuf.c	FUNCTION_28
0x400142b	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x4001432	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       313	strbuf.c	FUNCTION_28
0x4001436	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       313	strbuf.c	FUNCTION_28
0x400143d	        0x488b4008	                mov rax, qword [rax + 8]	       313	strbuf.c	FUNCTION_28
0x4001441	        0x4883e801	                              sub rax, 1	       313	strbuf.c	FUNCTION_28
0x4001445	          0x4801d0	                            add rax, rdx	       313	strbuf.c	FUNCTION_28
0x4001448	           0xfb600	                   movzx eax, byte [rax]	       313	strbuf.c	FUNCTION_28
0x400144b	            0x3c0a	                             cmp al, 0xa	       313	strbuf.c	FUNCTION_28
0x400144d	            0x7407	                            je 0x4001456	       313	strbuf.c	FUNCTION_28
0x400144f	      0xb801000000	                              mov eax, 1	       313	strbuf.c	FUNCTION_28
0x4001454	            0xeb05	                           jmp 0x400145b	       313	strbuf.c	FUNCTION_28
0x4001456	      0xb800000000	                              mov eax, 0	       313	strbuf.c	FUNCTION_28
0x400145b	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       313	strbuf.c	FUNCTION_28
0x4001461	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       315	strbuf.c	FUNCTION_28	CALL_1
0x400146b	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       315	strbuf.c	FUNCTION_28	CALL_1
0x4001475	        0x488d4510	                   lea rax, [rbp + 0x10]	       315	strbuf.c	FUNCTION_28	CALL_1
0x4001479	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       315	strbuf.c	FUNCTION_28	CALL_1
0x4001480	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       315	strbuf.c	FUNCTION_28	CALL_1
0x4001487	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       315	strbuf.c	FUNCTION_28	CALL_1
0x400148e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       316	strbuf.c	FUNCTION_28	CALL_2
0x4001495	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	       316	strbuf.c	FUNCTION_28	CALL_2
0x400149c	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       316	strbuf.c	FUNCTION_28	CALL_2
0x40014a3	          0x4889ce	                            mov rsi, rcx	       316	strbuf.c	FUNCTION_28	CALL_2
0x40014a6	          0x4889c7	                            mov rdi, rax	       316	strbuf.c	FUNCTION_28	CALL_2
0x40014a9	      0xe800000000	                          call 0x40014ae	       316	strbuf.c	FUNCTION_28	CALL_2
0x40014ae	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014b5	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014bc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014c3	          0x4889ce	                            mov rsi, rcx	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014c6	          0x4889c7	                            mov rdi, rax	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014c9	      0xe800000000	                          call 0x40014ce	       319	strbuf.c	FUNCTION_28	CALL_4
0x40014ce	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	       320	strbuf.c	FUNCTION_28	IF_1
0x40014d5	            0x7436	                            je 0x400150d	       320	strbuf.c	FUNCTION_28	IF_1
0x40014d7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x40014de	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       321	strbuf.c	FUNCTION_28	IF_1
0x40014e2	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x40014e9	        0x488b4008	                mov rax, qword [rax + 8]	       321	strbuf.c	FUNCTION_28	IF_1
0x40014ed	        0x488d48ff	                      lea rcx, [rax - 1]	       321	strbuf.c	FUNCTION_28	IF_1
0x40014f1	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x40014f8	        0x48894808	                mov qword [rax + 8], rcx	       321	strbuf.c	FUNCTION_28	IF_1
0x40014fc	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       321	strbuf.c	FUNCTION_28	IF_1
0x4001503	        0x488b4008	                mov rax, qword [rax + 8]	       321	strbuf.c	FUNCTION_28	IF_1
0x4001507	          0x4801d0	                            add rax, rdx	       321	strbuf.c	FUNCTION_28	IF_1
0x400150a	          0xc60000	                       mov byte [rax], 0	       321	strbuf.c	FUNCTION_28	IF_1
0x400150d	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       323	strbuf.c	FUNCTION_28	CALL_5
0x4001514	          0x4889c7	                            mov rdi, rax	       323	strbuf.c	FUNCTION_28	CALL_5
0x4001517	      0xe800000000	                          call 0x400151c	       323	strbuf.c	FUNCTION_28	CALL_5
0x400151c	              0x90	                                     nop	       324	strbuf.c	FUNCTION_28
0x400151d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       324	strbuf.c	FUNCTION_28
0x4001524	    0x644833042528	                xor rax, qword fs:[0x28]	       324	strbuf.c	FUNCTION_28
0x400152d	            0x7405	                            je 0x4001534	       324	strbuf.c	FUNCTION_28
0x400152f	      0xe800000000	                          call 0x4001534	       324	strbuf.c	FUNCTION_28
0x4001534	              0xc9	                                   leave	       324	strbuf.c	FUNCTION_28
0x4001535	              0xc3	                                     ret	       324	strbuf.c	FUNCTION_28
strbuf_remove	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,0:ELSE,0	16
0x4000fab	              0x55	                                push rbp	       244	strbuf.c	FUNCTION_21
0x4000fac	          0x4889e5	                            mov rbp, rsp	       244	strbuf.c	FUNCTION_21
0x4000faf	        0x4883ec20	                           sub rsp, 0x20	       244	strbuf.c	FUNCTION_21
0x4000fb3	        0x48897df8	                mov qword [rbp - 8], rdi	       244	strbuf.c	FUNCTION_21
0x4000fb7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       244	strbuf.c	FUNCTION_21
0x4000fbb	        0x488955e8	             mov qword [rbp - 0x18], rdx	       244	strbuf.c	FUNCTION_21
0x4000fbf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fc3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fcb	    0x41b800000000	                              mov r8d, 0	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fd1	      0xb900000000	                              mov ecx, 0	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fd6	          0x4889c7	                            mov rdi, rax	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fd9	      0xe800000000	                          call 0x4000fde	       245	strbuf.c	FUNCTION_21	CALL_1
0x4000fde	              0x90	                                     nop	       246	strbuf.c	FUNCTION_21
0x4000fdf	              0xc9	                                   leave	       246	strbuf.c	FUNCTION_21
0x4000fe0	              0xc3	                                     ret	       246	strbuf.c	FUNCTION_21
is_rfc3986_unreserved	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,0:ELSE,0	25
0x4002207	              0x55	                                push rbp	       708	strbuf.c	FUNCTION_50
0x4002208	          0x4889e5	                            mov rbp, rsp	       708	strbuf.c	FUNCTION_50
0x400220b	            0x89f8	                            mov eax, edi	       708	strbuf.c	FUNCTION_50
0x400220d	          0x8845fc	                  mov byte [rbp - 4], al	       708	strbuf.c	FUNCTION_50
0x4002210	         0xfb645fc	               movzx eax, byte [rbp - 4]	       709	strbuf.c	FUNCTION_50
0x4002214	           0xfb6c0	                           movzx eax, al	       709	strbuf.c	FUNCTION_50
0x4002217	            0x4898	                                    cdqe	       709	strbuf.c	FUNCTION_50
0x4002219	     0xfb680000000	                   movzx eax, byte [rax]	       709	strbuf.c	FUNCTION_50
0x4002220	           0xfb6c0	                           movzx eax, al	       709	strbuf.c	FUNCTION_50
0x4002223	          0x83e006	                              and eax, 6	       709	strbuf.c	FUNCTION_50
0x4002226	            0x85c0	                           test eax, eax	       710	strbuf.c	FUNCTION_50
0x4002228	            0x7518	                           jne 0x4002242	       710	strbuf.c	FUNCTION_50
0x400222a	        0x807dfc2d	                cmp byte [rbp - 4], 0x2d	       709	strbuf.c	FUNCTION_50
0x400222e	            0x7412	                            je 0x4002242	       709	strbuf.c	FUNCTION_50
0x4002230	        0x807dfc5f	                cmp byte [rbp - 4], 0x5f	       710	strbuf.c	FUNCTION_50
0x4002234	            0x740c	                            je 0x4002242	       710	strbuf.c	FUNCTION_50
0x4002236	        0x807dfc2e	                cmp byte [rbp - 4], 0x2e	       710	strbuf.c	FUNCTION_50
0x400223a	            0x7406	                            je 0x4002242	       710	strbuf.c	FUNCTION_50
0x400223c	        0x807dfc7e	                cmp byte [rbp - 4], 0x7e	       710	strbuf.c	FUNCTION_50
0x4002240	            0x7507	                           jne 0x4002249	       710	strbuf.c	FUNCTION_50
0x4002242	      0xb801000000	                              mov eax, 1	       710	strbuf.c	FUNCTION_50
0x4002247	            0xeb05	                           jmp 0x400224e	       710	strbuf.c	FUNCTION_50
0x4002249	      0xb800000000	                              mov eax, 0	       710	strbuf.c	FUNCTION_50
0x400224e	              0x5d	                                 pop rbp	       711	strbuf.c	FUNCTION_50
0x400224f	              0xc3	                                     ret	       711	strbuf.c	FUNCTION_50
strbuf_init	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,1:DO,0:IF,1:ELSE,0	23
0x400055a	              0x55	                                push rbp	        54	strbuf.c	FUNCTION_4
0x400055b	          0x4889e5	                            mov rbp, rsp	        54	strbuf.c	FUNCTION_4
0x400055e	        0x4883ec10	                           sub rsp, 0x10	        54	strbuf.c	FUNCTION_4
0x4000562	        0x48897df8	                mov qword [rbp - 8], rdi	        54	strbuf.c	FUNCTION_4
0x4000566	        0x488975f0	             mov qword [rbp - 0x10], rsi	        54	strbuf.c	FUNCTION_4
0x400056a	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x400056e	    0x48c740080000	                  mov qword [rax + 8], 0	        55	strbuf.c	FUNCTION_4
0x4000576	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x400057a	        0x488b5008	                mov rdx, qword [rax + 8]	        55	strbuf.c	FUNCTION_4
0x400057e	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	strbuf.c	FUNCTION_4
0x4000582	          0x488910	                    mov qword [rax], rdx	        55	strbuf.c	FUNCTION_4
0x4000585	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	strbuf.c	FUNCTION_4
0x4000589	    0x48c740100000	               mov qword [rax + 0x10], 0	        56	strbuf.c	FUNCTION_4
0x4000591	      0x48837df000	               cmp qword [rbp - 0x10], 0	        57	strbuf.c	FUNCTION_4	IF_1
0x4000596	            0x7413	                            je 0x40005ab	        57	strbuf.c	FUNCTION_4	IF_1
0x4000598	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        58	strbuf.c	FUNCTION_4	CALL_1
0x400059c	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	strbuf.c	FUNCTION_4	CALL_1
0x40005a0	          0x4889d6	                            mov rsi, rdx	        58	strbuf.c	FUNCTION_4	CALL_1
0x40005a3	          0x4889c7	                            mov rdi, rax	        58	strbuf.c	FUNCTION_4	CALL_1
0x40005a6	      0xe800000000	                          call 0x40005ab	        58	strbuf.c	FUNCTION_4	CALL_1
0x40005ab	              0x90	                                     nop	        59	strbuf.c	FUNCTION_4
0x40005ac	              0xc9	                                   leave	        59	strbuf.c	FUNCTION_4
0x40005ad	              0xc3	                                     ret	        59	strbuf.c	FUNCTION_4
sane_case	functions,0:SWITCH,0:WHILE,0:FOR,0:CALL,0:DO,0:IF,1:ELSE,0	19
0x400010a	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_114
0x400010b	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_114
0x400010e	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_114
0x4000111	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_114
0x4000114	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_114	IF_1
0x4000117	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_114	IF_1
0x400011a	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_114	IF_1
0x400011c	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_114	IF_1
0x4000123	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_114	IF_1
0x4000126	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_114	IF_1
0x4000129	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_114	IF_1
0x400012b	            0x740c	                            je 0x4000139	       993	git-compat-util.h	FUNCTION_114	IF_1
0x400012d	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_114	IF_1
0x4000130	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_114	IF_1
0x4000133	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_114	IF_1
0x4000136	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_114	IF_1
0x4000139	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_114
0x400013c	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_114
0x400013d	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_114
