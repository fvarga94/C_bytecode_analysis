add_pending_uninteresting_ref	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	16
0x40024ae	              0x55	                                push rbp	       721	checkout.c	FUNCTION_17
0x40024af	          0x4889e5	                            mov rbp, rsp	       721	checkout.c	FUNCTION_17
0x40024b2	        0x4883ec20	                           sub rsp, 0x20	       721	checkout.c	FUNCTION_17
0x40024b6	        0x48897df8	                mov qword [rbp - 8], rdi	       721	checkout.c	FUNCTION_17
0x40024ba	        0x488975f0	             mov qword [rbp - 0x10], rsi	       721	checkout.c	FUNCTION_17
0x40024be	          0x8955ec	             mov dword [rbp - 0x14], edx	       721	checkout.c	FUNCTION_17
0x40024c1	        0x48894de0	             mov qword [rbp - 0x20], rcx	       721	checkout.c	FUNCTION_17
0x40024c5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       722	checkout.c	FUNCTION_17	CALL_1
0x40024c9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       722	checkout.c	FUNCTION_17	CALL_1
0x40024cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       722	checkout.c	FUNCTION_17	CALL_1
0x40024d1	      0xb902000000	                              mov ecx, 2	       722	checkout.c	FUNCTION_17	CALL_1
0x40024d6	          0x4889c7	                            mov rdi, rax	       722	checkout.c	FUNCTION_17	CALL_1
0x40024d9	      0xe800000000	                          call 0x40024de	       722	checkout.c	FUNCTION_17	CALL_1
0x40024de	      0xb800000000	                              mov eax, 0	       723	checkout.c	FUNCTION_17
0x40024e3	              0xc9	                                   leave	       724	checkout.c	FUNCTION_17
0x40024e4	              0xc3	                                     ret	       724	checkout.c	FUNCTION_17
strbuf_addstr	CALL,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	17
0x4000145	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_31
0x4000146	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_31
0x4000149	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_31
0x400014d	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_31
0x4000151	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_31
0x4000155	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000159	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x400015c	      0xe800000000	                          call 0x4000161	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000161	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000164	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000168	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_31	CALL_2
0x400016c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x400016f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000172	      0xe800000000	                          call 0x4000177	       279	strbuf.h	FUNCTION_31	CALL_2
0x4000177	              0x90	                                     nop	       280	strbuf.h	FUNCTION_31
0x4000178	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_31
0x4000179	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_31
oidcmp	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	12
0x4000266	              0x55	                                push rbp	       979	cache.h	FUNCTION_46
0x4000267	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_46
0x400026a	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_46
0x400026e	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_46
0x4000272	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_46
0x4000276	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_46	CALL_1
0x400027a	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_46	CALL_1
0x400027e	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_46	CALL_1
0x4000281	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_46	CALL_1
0x4000284	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_46	CALL_1
0x4000289	              0xc9	                                   leave	       981	cache.h	FUNCTION_46
0x400028a	              0xc3	                                     ret	       981	cache.h	FUNCTION_46
switch_unborn_to_new_branch	CALL,7:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,0	60
0x4002eb1	              0x55	                                push rbp	      1035	checkout.c	FUNCTION_24
0x4002eb2	          0x4889e5	                            mov rbp, rsp	      1035	checkout.c	FUNCTION_24
0x4002eb5	              0x53	                                push rbx	      1035	checkout.c	FUNCTION_24
0x4002eb6	        0x4883ec48	                           sub rsp, 0x48	      1035	checkout.c	FUNCTION_24
0x4002eba	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1035	checkout.c	FUNCTION_24
0x4002ebe	    0x64488b042528	                mov rax, qword fs:[0x28]	      1035	checkout.c	FUNCTION_24
0x4002ec7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1035	checkout.c	FUNCTION_24
0x4002ecb	            0x31c0	                            xor eax, eax	      1035	checkout.c	FUNCTION_24
0x4002ecd	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1037	checkout.c	FUNCTION_24
0x4002ed5	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1037	checkout.c	FUNCTION_24
0x4002edd	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1037	checkout.c	FUNCTION_24
0x4002ee5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1039	checkout.c	FUNCTION_24	IF_1
0x4002ee9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1039	checkout.c	FUNCTION_24	IF_1
0x4002eed	          0x4885c0	                           test rax, rax	      1039	checkout.c	FUNCTION_24	IF_1
0x4002ef0	            0x7517	                           jne 0x4002f09	      1039	checkout.c	FUNCTION_24	IF_1
0x4002ef2	      0xbf00000000	                              mov edi, 0	      1040	checkout.c	FUNCTION_24	CALL_2
0x4002ef7	      0xe87ed2ffff	                               call sym.	      1040	checkout.c	FUNCTION_24	CALL_2
0x4002efc	          0x4889c7	                            mov rdi, rax	      1040	checkout.c	FUNCTION_24	CALL_2
0x4002eff	      0xb800000000	                              mov eax, 0	      1040	checkout.c	FUNCTION_24	CALL_2
0x4002f04	      0xe800000000	                          call 0x4002f09	      1040	checkout.c	FUNCTION_24	CALL_2
0x4002f09	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f0d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f11	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f15	      0xbe00000000	                              mov esi, 0	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f1a	          0x4889c7	                            mov rdi, rax	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f1d	      0xb800000000	                              mov eax, 0	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f22	      0xe800000000	                          call 0x4002f27	      1041	checkout.c	FUNCTION_24	CALL_3
0x4002f27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f2b	      0xba00000000	                              mov edx, 0	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f30	          0x4889c6	                            mov rsi, rax	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f33	      0xbf00000000	                              mov edi, 0	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f38	      0xe800000000	                          call 0x4002f3d	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f3d	          0x8945cc	             mov dword [rbp - 0x34], eax	      1042	checkout.c	FUNCTION_24	CALL_4
0x4002f40	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1043	checkout.c	FUNCTION_24	CALL_5
0x4002f44	          0x4889c7	                            mov rdi, rax	      1043	checkout.c	FUNCTION_24	CALL_5
0x4002f47	      0xe800000000	                          call 0x4002f4c	      1043	checkout.c	FUNCTION_24	CALL_5
0x4002f4c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1044	checkout.c	FUNCTION_24	IF_2
0x4002f50	          0x8b4004	                mov eax, dword [rax + 4]	      1044	checkout.c	FUNCTION_24	IF_2
0x4002f53	            0x85c0	                           test eax, eax	      1044	checkout.c	FUNCTION_24	IF_2
0x4002f55	            0x752f	                           jne 0x4002f86	      1044	checkout.c	FUNCTION_24	IF_2
0x4002f57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f5b	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f5f	      0xbf00000000	                              mov edi, 0	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f64	      0xe811d2ffff	                               call sym.	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f69	          0x4889c1	                            mov rcx, rax	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f6c	    0x488b05000000	            mov rax, qword [0x04002f73] 	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f73	          0x4889da	                            mov rdx, rbx	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f76	          0x4889ce	                            mov rsi, rcx	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f79	          0x4889c7	                            mov rdi, rax	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f7c	      0xb800000000	                              mov eax, 0	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f81	      0xe800000000	                          call 0x4002f86	      1045	checkout.c	FUNCTION_24	IF_2	CALL_7
0x4002f86	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1047	checkout.c	FUNCTION_24
0x4002f89	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1048	checkout.c	FUNCTION_24
0x4002f8d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1048	checkout.c	FUNCTION_24
0x4002f96	            0x7405	                            je 0x4002f9d	      1048	checkout.c	FUNCTION_24
0x4002f98	      0xe800000000	                          call 0x4002f9d	      1048	checkout.c	FUNCTION_24
0x4002f9d	        0x4883c448	                           add rsp, 0x48	      1048	checkout.c	FUNCTION_24
0x4002fa1	              0x5b	                                 pop rbx	      1048	checkout.c	FUNCTION_24
0x4002fa2	              0x5d	                                 pop rbp	      1048	checkout.c	FUNCTION_24
0x4002fa3	              0xc3	                                     ret	      1048	checkout.c	FUNCTION_24
ce_path_match	CALL,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	34
0x4000341	              0x55	                                push rbp	       335	dir.h	FUNCTION_66
0x4000342	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_66
0x4000345	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_66
0x4000349	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_66
0x400034d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_66
0x4000351	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_66
0x4000355	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_66	CALL_2
0x4000359	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_66	CALL_2
0x400035c	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_66	CALL_2
0x4000361	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_66	CALL_1
0x4000366	            0x7413	                            je 0x400037b	       336	dir.h	FUNCTION_66	CALL_1
0x4000368	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_66	CALL_2
0x400036c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_66	CALL_2
0x400036f	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_66	CALL_2
0x4000374	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_66	CALL_1
0x4000379	            0x7507	                           jne 0x4000382	       336	dir.h	FUNCTION_66	CALL_1
0x400037b	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_66	CALL_1
0x4000380	            0xeb05	                           jmp 0x4000387	       336	dir.h	FUNCTION_66	CALL_1
0x4000382	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_66	CALL_1
0x4000387	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_66	CALL_1
0x400038b	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_66	CALL_1
0x400038e	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_66	CALL_1
0x4000390	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_66	CALL_1
0x4000394	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_66	CALL_1
0x4000398	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_66	CALL_1
0x400039c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_66	CALL_1
0x40003a0	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_66	CALL_1
0x40003a3	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_66	CALL_1
0x40003a6	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_66	CALL_1
0x40003ab	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_66	CALL_1
0x40003ad	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_66	CALL_1
0x40003b0	      0xe800000000	                          call 0x40003b5	       336	dir.h	FUNCTION_66	CALL_1
0x40003b5	              0xc9	                                   leave	       338	dir.h	FUNCTION_66
0x40003b6	              0xc3	                                     ret	       338	dir.h	FUNCTION_66
parse_tree	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	10
0x4000303	              0x55	                                push rbp	        21	tree.h	FUNCTION_68
0x4000304	          0x4889e5	                            mov rbp, rsp	        21	tree.h	FUNCTION_68
0x4000307	        0x4883ec10	                           sub rsp, 0x10	        21	tree.h	FUNCTION_68
0x400030b	        0x48897df8	                mov qword [rbp - 8], rdi	        21	tree.h	FUNCTION_68
0x400030f	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	tree.h	FUNCTION_68	CALL_1
0x4000313	      0xbe00000000	                              mov esi, 0	        22	tree.h	FUNCTION_68	CALL_1
0x4000318	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_68	CALL_1
0x400031b	      0xe800000000	                          call 0x4000320	        22	tree.h	FUNCTION_68	CALL_1
0x4000320	              0xc9	                                   leave	        23	tree.h	FUNCTION_68
0x4000321	              0xc3	                                     ret	        23	tree.h	FUNCTION_68
parse_commit	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	10
0x4000322	              0x55	                                push rbp	        74	commit.h	FUNCTION_69
0x4000323	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_69
0x4000326	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_69
0x400032a	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_69
0x400032e	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_69	CALL_1
0x4000332	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_69	CALL_1
0x4000337	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_69	CALL_1
0x400033a	      0xe800000000	                          call 0x400033f	        75	commit.h	FUNCTION_69	CALL_1
0x400033f	              0xc9	                                   leave	        76	commit.h	FUNCTION_69
0x4000340	              0xc3	                                     ret	        76	commit.h	FUNCTION_69
create_ce_flags	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	7
0x40001d3	              0x55	                                push rbp	       241	cache.h	FUNCTION_39
0x40001d4	          0x4889e5	                            mov rbp, rsp	       241	cache.h	FUNCTION_39
0x40001d7	          0x897dfc	                mov dword [rbp - 4], edi	       241	cache.h	FUNCTION_39
0x40001da	          0x8b45fc	                mov eax, dword [rbp - 4]	       242	cache.h	FUNCTION_39
0x40001dd	          0xc1e00c	                            shl eax, 0xc	       242	cache.h	FUNCTION_39
0x40001e0	              0x5d	                                 pop rbp	       243	cache.h	FUNCTION_39
0x40001e1	              0xc3	                                     ret	       243	cache.h	FUNCTION_39
is_null_oid	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	13
0x400028b	              0x55	                                push rbp	       989	cache.h	FUNCTION_48
0x400028c	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_48
0x400028f	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_48
0x4000293	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_48
0x4000297	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_48	CALL_1
0x400029b	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_48	CALL_1
0x40002a0	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_48	CALL_1
0x40002a3	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_48	CALL_1
0x40002a8	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_48	CALL_1
0x40002aa	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_48	CALL_1
0x40002ad	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_48	CALL_1
0x40002b0	              0xc9	                                   leave	       991	cache.h	FUNCTION_48
0x40002b1	              0xc3	                                     ret	       991	cache.h	FUNCTION_48
show_local_changes	CALL,4:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	39
0x400149c	              0x55	                                push rbp	       389	checkout.c	FUNCTION_10
0x400149d	          0x4889e5	                            mov rbp, rsp	       389	checkout.c	FUNCTION_10
0x40014a0	    0x4881ecd00800	                          sub rsp, 0x8d0	       389	checkout.c	FUNCTION_10
0x40014a7	    0x4889bd38f7ff	            mov qword [rbp - 0x8c8], rdi	       389	checkout.c	FUNCTION_10
0x40014ae	    0x4889b530f7ff	            mov qword [rbp - 0x8d0], rsi	       389	checkout.c	FUNCTION_10
0x40014b5	    0x64488b042528	                mov rax, qword fs:[0x28]	       389	checkout.c	FUNCTION_10
0x40014be	        0x488945f8	                mov qword [rbp - 8], rax	       389	checkout.c	FUNCTION_10
0x40014c2	            0x31c0	                            xor eax, eax	       389	checkout.c	FUNCTION_10
0x40014c4	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       392	checkout.c	FUNCTION_10	CALL_1
0x40014cb	      0xbe00000000	                              mov esi, 0	       392	checkout.c	FUNCTION_10	CALL_1
0x40014d0	          0x4889c7	                            mov rdi, rax	       392	checkout.c	FUNCTION_10	CALL_1
0x40014d3	      0xe800000000	                          call 0x40014d8	       392	checkout.c	FUNCTION_10	CALL_1
0x40014d8	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       393	checkout.c	FUNCTION_10
0x40014df	          0x8b4038	            mov eax, dword [rax + 0x38] 	       393	checkout.c	FUNCTION_10
0x40014e2	    0x898570fcffff	            mov dword [rbp - 0x390], eax	       393	checkout.c	FUNCTION_10
0x40014e8	    0x8b8598fcffff	            mov eax, dword [rbp - 0x368]	       394	checkout.c	FUNCTION_10
0x40014ee	          0x80cc02	                                or ah, 2	       394	checkout.c	FUNCTION_10
0x40014f1	    0x898598fcffff	            mov dword [rbp - 0x368], eax	       394	checkout.c	FUNCTION_10
0x40014f7	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       395	checkout.c	FUNCTION_10	CALL_2
0x40014fe	    0x4805f8040000	                          add rax, 0x4f8	       395	checkout.c	FUNCTION_10	CALL_2
0x4001504	          0x4889c7	                            mov rdi, rax	       395	checkout.c	FUNCTION_10	CALL_2
0x4001507	      0xe800000000	                          call 0x400150c	       395	checkout.c	FUNCTION_10	CALL_2
0x400150c	    0x488b8d38f7ff	            mov rcx, qword [rbp - 0x8c8]	       396	checkout.c	FUNCTION_10	CALL_3
0x4001513	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       396	checkout.c	FUNCTION_10	CALL_3
0x400151a	      0xba00000000	                              mov edx, 0	       396	checkout.c	FUNCTION_10	CALL_3
0x400151f	          0x4889ce	                            mov rsi, rcx	       396	checkout.c	FUNCTION_10	CALL_3
0x4001522	          0x4889c7	                            mov rdi, rax	       396	checkout.c	FUNCTION_10	CALL_3
0x4001525	      0xe800000000	                          call 0x400152a	       396	checkout.c	FUNCTION_10	CALL_3
0x400152a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       397	checkout.c	FUNCTION_10	CALL_4
0x4001531	      0xbe00000000	                              mov esi, 0	       397	checkout.c	FUNCTION_10	CALL_4
0x4001536	          0x4889c7	                            mov rdi, rax	       397	checkout.c	FUNCTION_10	CALL_4
0x4001539	      0xe800000000	                          call 0x400153e	       397	checkout.c	FUNCTION_10	CALL_4
0x400153e	              0x90	                                     nop	       398	checkout.c	FUNCTION_10
0x400153f	        0x488b45f8	                mov rax, qword [rbp - 8]	       398	checkout.c	FUNCTION_10
0x4001543	    0x644833042528	                xor rax, qword fs:[0x28]	       398	checkout.c	FUNCTION_10
0x400154c	            0x7405	                            je 0x4001553	       398	checkout.c	FUNCTION_10
0x400154e	      0xe800000000	                          call 0x4001553	       398	checkout.c	FUNCTION_10
0x4001553	              0xc9	                                   leave	       398	checkout.c	FUNCTION_10
0x4001554	              0xc3	                                     ret	       398	checkout.c	FUNCTION_10
suggest_reattach	CALL,11:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,4:WHILE,1	102
0x400256d	              0x55	                                push rbp	       738	checkout.c	FUNCTION_19
0x400256e	          0x4889e5	                            mov rbp, rsp	       738	checkout.c	FUNCTION_19
0x4002571	              0x53	                                push rbx	       738	checkout.c	FUNCTION_19
0x4002572	        0x4883ec58	                           sub rsp, 0x58	       738	checkout.c	FUNCTION_19
0x4002576	        0x48897da8	             mov qword [rbp - 0x58], rdi	       738	checkout.c	FUNCTION_19
0x400257a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       738	checkout.c	FUNCTION_19
0x400257e	    0x64488b042528	                mov rax, qword fs:[0x28]	       738	checkout.c	FUNCTION_19
0x4002587	        0x488945e8	             mov qword [rbp - 0x18], rax	       738	checkout.c	FUNCTION_19
0x400258b	            0x31c0	                            xor eax, eax	       738	checkout.c	FUNCTION_19
0x400258d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       739	checkout.c	FUNCTION_19
0x4002595	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       740	checkout.c	FUNCTION_19
0x400259d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       740	checkout.c	FUNCTION_19
0x40025a5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       740	checkout.c	FUNCTION_19
0x40025ad	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       741	checkout.c	FUNCTION_19
0x40025b4	            0xeb25	                           jmp 0x40025db	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025b6	        0x837db803	               cmp dword [rbp - 0x48], 3	       743	checkout.c	FUNCTION_19	WHILE_1	IF_1
0x40025ba	            0x7f13	                            jg 0x40025cf	       743	checkout.c	FUNCTION_19	WHILE_1	IF_1
0x40025bc	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       744	checkout.c	FUNCTION_19	WHILE_1	CALL_2
0x40025c0	        0x488d45d0	                   lea rax, [rbp - 0x30]	       744	checkout.c	FUNCTION_19	WHILE_1	CALL_2
0x40025c4	          0x4889d6	                            mov rsi, rdx	       744	checkout.c	FUNCTION_19	WHILE_1	CALL_2
0x40025c7	          0x4889c7	                            mov rdi, rax	       744	checkout.c	FUNCTION_19	WHILE_1	CALL_2
0x40025ca	      0xe816ffffff	            call sym.describe_one_orphan	       744	checkout.c	FUNCTION_19	WHILE_1	CALL_2
0x40025cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       745	checkout.c	FUNCTION_19	WHILE_1
0x40025d3	        0x488945c0	             mov qword [rbp - 0x40], rax	       745	checkout.c	FUNCTION_19	WHILE_1
0x40025d7	        0x8345b801	               add dword [rbp - 0x48], 1	       746	checkout.c	FUNCTION_19	WHILE_1
0x40025db	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025df	          0x4889c7	                            mov rdi, rax	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025e2	      0xe800000000	                          call 0x40025e7	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025e7	        0x488945c8	             mov qword [rbp - 0x38], rax	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025eb	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025f0	            0x75c4	                           jne 0x40025b6	       742	checkout.c	FUNCTION_19	WHILE_1	CALL_1
0x40025f2	        0x837db804	               cmp dword [rbp - 0x48], 4	       748	checkout.c	FUNCTION_19	IF_2
0x40025f6	            0x7e48	                           jle 0x4002640	       748	checkout.c	FUNCTION_19	IF_2
0x40025f8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       749	checkout.c	FUNCTION_19	IF_2
0x40025fb	          0x83e804	                              sub eax, 4	       749	checkout.c	FUNCTION_19	IF_2
0x40025fe	          0x8945bc	             mov dword [rbp - 0x44], eax	       749	checkout.c	FUNCTION_19	IF_2
0x4002601	        0x837dbc01	               cmp dword [rbp - 0x44], 1	       750	checkout.c	FUNCTION_19	IF_2	IF_3
0x4002605	            0x7515	                           jne 0x400261c	       750	checkout.c	FUNCTION_19	IF_2	IF_3
0x4002607	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x400260b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x400260f	          0x4889d6	                            mov rsi, rdx	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x4002612	          0x4889c7	                            mov rdi, rax	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x4002615	      0xe8cbfeffff	            call sym.describe_one_orphan	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x400261a	            0xeb24	                           jmp 0x4002640	       751	checkout.c	FUNCTION_19	IF_2	CALL_3
0x400261c	      0xbf00000000	                              mov edi, 0	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002621	      0xe854dbffff	                               call sym.	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002626	          0x4889c1	                            mov rcx, rax	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002629	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x400262c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002630	          0x4889ce	                            mov rsi, rcx	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002633	          0x4889c7	                            mov rdi, rax	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002636	      0xb800000000	                              mov eax, 0	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x400263b	      0xe800000000	                          call 0x4002640	       753	checkout.c	FUNCTION_19	IF_2	CALL_5
0x4002640	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       756	checkout.c	FUNCTION_19	CALL_6
0x4002644	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       756	checkout.c	FUNCTION_19	CALL_6
0x4002647	            0x4898	                                    cdqe	       756	checkout.c	FUNCTION_19	CALL_6
0x4002649	          0x4889c2	                            mov rdx, rax	       756	checkout.c	FUNCTION_19	CALL_6
0x400264c	      0xbe00000000	                              mov esi, 0	       756	checkout.c	FUNCTION_19	CALL_6
0x4002651	      0xbf00000000	                              mov edi, 0	       756	checkout.c	FUNCTION_19	CALL_6
0x4002656	      0xe84bdbffff	                              call sym.Q	       756	checkout.c	FUNCTION_19	CALL_6
0x400265b	          0x4889c6	                            mov rsi, rax	       756	checkout.c	FUNCTION_19	CALL_6
0x400265e	    0x488b05000000	            mov rax, qword [0x04002665] 	       756	checkout.c	FUNCTION_19	CALL_6
0x4002665	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       756	checkout.c	FUNCTION_19	CALL_6
0x4002668	          0x4889d9	                            mov rcx, rbx	       756	checkout.c	FUNCTION_19	CALL_6
0x400266b	          0x4889c7	                            mov rdi, rax	       756	checkout.c	FUNCTION_19	CALL_6
0x400266e	      0xb800000000	                              mov eax, 0	       756	checkout.c	FUNCTION_19	CALL_6
0x4002673	      0xe800000000	                          call 0x4002678	       756	checkout.c	FUNCTION_19	CALL_6
0x4002678	        0x488d45d0	                   lea rax, [rbp - 0x30]	       772	checkout.c	FUNCTION_19	CALL_8
0x400267c	          0x4889c7	                            mov rdi, rax	       772	checkout.c	FUNCTION_19	CALL_8
0x400267f	      0xe800000000	                          call 0x4002684	       772	checkout.c	FUNCTION_19	CALL_8
0x4002684	    0x8b0500000000	            mov eax, dword [0x0400268a] 	       774	checkout.c	FUNCTION_19	IF_4
0x400268a	            0x85c0	                           test eax, eax	       774	checkout.c	FUNCTION_19	IF_4
0x400268c	            0x744f	                            je 0x40026dd	       774	checkout.c	FUNCTION_19	IF_4
0x400268e	    0x8b0500000000	            mov eax, dword [0x04002694] 	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x4002694	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       787	checkout.c	FUNCTION_19	CALL_11
0x4002698	        0x4883c204	                              add rdx, 4	       787	checkout.c	FUNCTION_19	CALL_11
0x400269c	            0x89c6	                            mov esi, eax	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x400269e	          0x4889d7	                            mov rdi, rdx	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026a1	      0xe800000000	                          call 0x40026a6	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026a6	          0x4889c3	                            mov rbx, rax	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026a9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026ac	            0x4898	                                    cdqe	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026ae	          0x4889c2	                            mov rdx, rax	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026b1	      0xbe00000000	                              mov esi, 0	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026b6	      0xbf00000000	                              mov edi, 0	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026bb	      0xe8e6daffff	                              call sym.Q	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026c0	          0x4889c1	                            mov rcx, rax	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026c3	    0x488b05000000	            mov rax, qword [0x040026ca] 	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026ca	          0x4889da	                            mov rdx, rbx	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026cd	          0x4889ce	                            mov rsi, rcx	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026d0	          0x4889c7	                            mov rdi, rax	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026d3	      0xb800000000	                              mov eax, 0	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026d8	      0xe800000000	                          call 0x40026dd	       775	checkout.c	FUNCTION_19	IF_4	CALL_9
0x40026dd	              0x90	                                     nop	       788	checkout.c	FUNCTION_19
0x40026de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       788	checkout.c	FUNCTION_19
0x40026e2	    0x644833042528	                xor rax, qword fs:[0x28]	       788	checkout.c	FUNCTION_19
0x40026eb	            0x7405	                            je 0x40026f2	       788	checkout.c	FUNCTION_19
0x40026ed	      0xe800000000	                          call 0x40026f2	       788	checkout.c	FUNCTION_19
0x40026f2	        0x4883c458	                           add rsp, 0x58	       788	checkout.c	FUNCTION_19
0x40026f6	              0x5b	                                 pop rbx	       788	checkout.c	FUNCTION_19
0x40026f7	              0x5d	                                 pop rbp	       788	checkout.c	FUNCTION_19
0x40026f8	              0xc3	                                     ret	       788	checkout.c	FUNCTION_19
check_stages	CALL,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,1	59
0x40007a3	              0x55	                                push rbp	       142	checkout.c	FUNCTION_6
0x40007a4	          0x4889e5	                            mov rbp, rsp	       142	checkout.c	FUNCTION_6
0x40007a7	        0x4883ec20	                           sub rsp, 0x20	       142	checkout.c	FUNCTION_6
0x40007ab	          0x897dec	             mov dword [rbp - 0x14], edi	       142	checkout.c	FUNCTION_6
0x40007ae	        0x488975e0	             mov qword [rbp - 0x20], rsi	       142	checkout.c	FUNCTION_6
0x40007b2	          0x8955e8	             mov dword [rbp - 0x18], edx	       142	checkout.c	FUNCTION_6
0x40007b5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       143	checkout.c	FUNCTION_6
0x40007bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	checkout.c	FUNCTION_6
0x40007c0	        0x4883c058	                           add rax, 0x58	       144	checkout.c	FUNCTION_6
0x40007c4	        0x488945f8	                mov qword [rbp - 8], rax	       144	checkout.c	FUNCTION_6
0x40007c8	            0xeb57	                           jmp 0x4000821	       146	checkout.c	FUNCTION_6	WHILE_1
0x40007ca	    0x488b05000000	            mov rax, qword [0x040007d1] 	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007d1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007d4	          0x4863d2	                         movsxd rdx, edx	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007d7	        0x48c1e203	                              shl rdx, 3	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007db	          0x4801d0	                            add rax, rdx	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007de	          0x488b00	                    mov rax, qword [rax]	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007e1	        0x488945e0	             mov qword [rbp - 0x20], rax	       147	checkout.c	FUNCTION_6	WHILE_1
0x40007e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007e9	        0x488d5058	                   lea rdx, [rax + 0x58]	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007f1	          0x4889d6	                            mov rsi, rdx	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007f4	          0x4889c7	                            mov rdi, rax	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007f7	      0xe800000000	                          call 0x40007fc	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007fc	            0x85c0	                           test eax, eax	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x40007fe	            0x7530	                           jne 0x4000830	       148	checkout.c	FUNCTION_6	WHILE_1	IF_1	CALL_1
0x4000800	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       150	checkout.c	FUNCTION_6	WHILE_1
0x4000804	          0x8b4038	            mov eax, dword [rax + 0x38] 	       150	checkout.c	FUNCTION_6	WHILE_1
0x4000807	      0x2500300000	                         and eax, 0x3000	       150	checkout.c	FUNCTION_6	WHILE_1
0x400080c	          0xc1e80c	                            shr eax, 0xc	       150	checkout.c	FUNCTION_6	WHILE_1
0x400080f	      0xba01000000	                              mov edx, 1	       150	checkout.c	FUNCTION_6	WHILE_1
0x4000814	            0x89c1	                            mov ecx, eax	       150	checkout.c	FUNCTION_6	WHILE_1
0x4000816	            0xd3e2	                             shl edx, cl	       150	checkout.c	FUNCTION_6	WHILE_1
0x4000818	            0x89d0	                            mov eax, edx	       150	checkout.c	FUNCTION_6	WHILE_1
0x400081a	           0x945f4	               or dword [rbp - 0xc], eax	       150	checkout.c	FUNCTION_6	WHILE_1
0x400081d	        0x8345e801	               add dword [rbp - 0x18], 1	       151	checkout.c	FUNCTION_6	WHILE_1
0x4000821	    0x8b1500000000	            mov edx, dword [0x04000827] 	       146	checkout.c	FUNCTION_6	WHILE_1
0x4000827	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       146	checkout.c	FUNCTION_6	WHILE_1
0x400082a	            0x39c2	                            cmp edx, eax	       146	checkout.c	FUNCTION_6	WHILE_1
0x400082c	            0x779c	                            ja 0x40007ca	       146	checkout.c	FUNCTION_6	WHILE_1
0x400082e	            0xeb01	                           jmp 0x4000831	       146	checkout.c	FUNCTION_6	WHILE_1
0x4000830	              0x90	                                     nop	       149	checkout.c	FUNCTION_6	WHILE_1	IF_1
0x4000831	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       153	checkout.c	FUNCTION_6	IF_2
0x4000834	          0x2345f4	              and eax, dword [rbp - 0xc]	       153	checkout.c	FUNCTION_6	IF_2
0x4000837	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       153	checkout.c	FUNCTION_6	IF_2
0x400083a	            0x7428	                            je 0x4000864	       153	checkout.c	FUNCTION_6	IF_2
0x400083c	      0xbf00000000	                              mov edi, 0	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000841	      0xe834f9ffff	                               call sym.	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000846	          0x4889c2	                            mov rdx, rax	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000849	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x400084d	          0x4889c6	                            mov rsi, rax	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000850	          0x4889d7	                            mov rdi, rdx	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000853	      0xb800000000	                              mov eax, 0	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000858	      0xe800000000	                          call 0x400085d	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x400085d	      0xe8def7ffff	                    call sym.const_error	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000862	            0xeb05	                           jmp 0x4000869	       154	checkout.c	FUNCTION_6	IF_2	CALL_2
0x4000864	      0xb800000000	                              mov eax, 0	       156	checkout.c	FUNCTION_6
0x4000869	              0xc9	                                   leave	       157	checkout.c	FUNCTION_6
0x400086a	              0xc3	                                     ret	       157	checkout.c	FUNCTION_6
describe_detached_head	CALL,8:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,0	68
0x4001555	              0x55	                                push rbp	       401	checkout.c	FUNCTION_11
0x4001556	          0x4889e5	                            mov rbp, rsp	       401	checkout.c	FUNCTION_11
0x4001559	              0x53	                                push rbx	       401	checkout.c	FUNCTION_11
0x400155a	        0x4883ec38	                           sub rsp, 0x38	       401	checkout.c	FUNCTION_11
0x400155e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       401	checkout.c	FUNCTION_11
0x4001562	        0x488975c0	             mov qword [rbp - 0x40], rsi	       401	checkout.c	FUNCTION_11
0x4001566	    0x64488b042528	                mov rax, qword fs:[0x28]	       401	checkout.c	FUNCTION_11
0x400156f	        0x488945e8	             mov qword [rbp - 0x18], rax	       401	checkout.c	FUNCTION_11
0x4001573	            0x31c0	                            xor eax, eax	       401	checkout.c	FUNCTION_11
0x4001575	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       402	checkout.c	FUNCTION_11
0x400157d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       402	checkout.c	FUNCTION_11
0x4001585	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       402	checkout.c	FUNCTION_11
0x400158d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       404	checkout.c	FUNCTION_11	IF_1	CALL_1
0x4001591	          0x4889c7	                            mov rdi, rax	       404	checkout.c	FUNCTION_11	IF_1	CALL_1
0x4001594	      0xe889edffff	                   call sym.parse_commit	       404	checkout.c	FUNCTION_11	IF_1	CALL_1
0x4001599	            0x85c0	                           test eax, eax	       404	checkout.c	FUNCTION_11	IF_1	CALL_1
0x400159b	            0x7515	                           jne 0x40015b2	       404	checkout.c	FUNCTION_11	IF_1	CALL_1
0x400159d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       405	checkout.c	FUNCTION_11	CALL_2
0x40015a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       405	checkout.c	FUNCTION_11	CALL_2
0x40015a5	          0x4889c6	                            mov rsi, rax	       405	checkout.c	FUNCTION_11	CALL_2
0x40015a8	      0xbf05000000	                              mov edi, 5	       405	checkout.c	FUNCTION_11	CALL_2
0x40015ad	      0xe800000000	                          call 0x40015b2	       405	checkout.c	FUNCTION_11	CALL_2
0x40015b2	      0xe800000000	                          call 0x40015b7	       406	checkout.c	FUNCTION_11	IF_2	CALL_3
0x40015b7	            0x85c0	                           test eax, eax	       406	checkout.c	FUNCTION_11	IF_2	CALL_3
0x40015b9	            0x7441	                            je 0x40015fc	       406	checkout.c	FUNCTION_11	IF_2	CALL_3
0x40015bb	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015bf	    0x8b0500000000	            mov eax, dword [0x040015c5] 	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015c5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       408	checkout.c	FUNCTION_11	IF_2	CALL_5
0x40015c9	        0x4883c204	                              add rdx, 4	       408	checkout.c	FUNCTION_11	IF_2	CALL_5
0x40015cd	            0x89c6	                            mov esi, eax	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015cf	          0x4889d7	                            mov rdi, rdx	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015d2	      0xe800000000	                          call 0x40015d7	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015d7	          0x4889c1	                            mov rcx, rax	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015da	    0x488b05000000	            mov rax, qword [0x040015e1] 	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015e1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015e5	          0x4989d8	                             mov r8, rbx	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015e8	      0xbe00000000	                              mov esi, 0	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015ed	          0x4889c7	                            mov rdi, rax	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015f0	      0xb800000000	                              mov eax, 0	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015f5	      0xe800000000	                          call 0x40015fa	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015fa	            0xeb3f	                           jmp 0x400163b	       407	checkout.c	FUNCTION_11	IF_2	CALL_4
0x40015fc	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001600	    0x8b0500000000	            mov eax, dword [0x04001606] 	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001606	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       411	checkout.c	FUNCTION_11	ELSE_1	CALL_7
0x400160a	        0x4883c204	                              add rdx, 4	       411	checkout.c	FUNCTION_11	ELSE_1	CALL_7
0x400160e	            0x89c6	                            mov esi, eax	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001610	          0x4889d7	                            mov rdi, rdx	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001613	      0xe800000000	                          call 0x4001618	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001618	          0x4889c1	                            mov rcx, rax	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x400161b	    0x488b05000000	            mov rax, qword [0x04001622] 	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001622	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001626	          0x4989d8	                             mov r8, rbx	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001629	      0xbe00000000	                              mov esi, 0	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x400162e	          0x4889c7	                            mov rdi, rax	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001631	      0xb800000000	                              mov eax, 0	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x4001636	      0xe800000000	                          call 0x400163b	       410	checkout.c	FUNCTION_11	ELSE_1	CALL_6
0x400163b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       413	checkout.c	FUNCTION_11	CALL_8
0x400163f	          0x4889c7	                            mov rdi, rax	       413	checkout.c	FUNCTION_11	CALL_8
0x4001642	      0xe800000000	                          call 0x4001647	       413	checkout.c	FUNCTION_11	CALL_8
0x4001647	              0x90	                                     nop	       414	checkout.c	FUNCTION_11
0x4001648	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	checkout.c	FUNCTION_11
0x400164c	    0x644833042528	                xor rax, qword fs:[0x28]	       414	checkout.c	FUNCTION_11
0x4001655	            0x7405	                            je 0x400165c	       414	checkout.c	FUNCTION_11
0x4001657	      0xe800000000	                          call 0x400165c	       414	checkout.c	FUNCTION_11
0x400165c	        0x4883c438	                           add rsp, 0x38	       414	checkout.c	FUNCTION_11
0x4001660	              0x5b	                                 pop rbx	       414	checkout.c	FUNCTION_11
0x4001661	              0x5d	                                 pop rbp	       414	checkout.c	FUNCTION_11
0x4001662	              0xc3	                                     ret	       414	checkout.c	FUNCTION_11
_	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	15
0x400017a	              0x55	                                push rbp	        51	gettext.h	FUNCTION_72
0x400017b	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_72
0x400017e	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_72
0x4000182	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_72
0x4000186	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_72	IF_1
0x400018a	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_72	IF_1
0x400018d	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_72	IF_1
0x400018f	            0x7507	                           jne 0x4000198	        52	gettext.h	FUNCTION_72	IF_1
0x4000191	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_72	IF_1
0x4000196	            0xeb0c	                           jmp 0x40001a4	        53	gettext.h	FUNCTION_72	IF_1
0x4000198	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_72
0x400019c	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_72
0x400019f	      0xe800000000	                          call 0x40001a4	        54	gettext.h	FUNCTION_72
0x40001a4	              0xc9	                                   leave	        55	gettext.h	FUNCTION_72
0x40001a5	              0xc3	                                     ret	        55	gettext.h	FUNCTION_72
cmd_checkout	CALL,50:functions,0:ELSE,3:SWITCH,0:FOR,0:DO,0:IF,18:WHILE,0	457
0x40032a0	              0x55	                                push rbp	      1106	checkout.c	FUNCTION_26
0x40032a1	          0x4889e5	                            mov rbp, rsp	      1106	checkout.c	FUNCTION_26
0x40032a4	            0x4154	                                push r12	      1106	checkout.c	FUNCTION_26
0x40032a6	              0x53	                                push rbx	      1106	checkout.c	FUNCTION_26
0x40032a7	    0x4881ecb00700	                          sub rsp, 0x7b0	      1106	checkout.c	FUNCTION_26
0x40032ae	    0x89bd5cf8ffff	            mov dword [rbp - 0x7a4], edi	      1106	checkout.c	FUNCTION_26
0x40032b4	    0x4889b550f8ff	            mov qword [rbp - 0x7b0], rsi	      1106	checkout.c	FUNCTION_26
0x40032bb	    0x48899548f8ff	            mov qword [rbp - 0x7b8], rdx	      1106	checkout.c	FUNCTION_26
0x40032c2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1106	checkout.c	FUNCTION_26
0x40032cb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1106	checkout.c	FUNCTION_26
0x40032cf	            0x31c0	                            xor eax, eax	      1106	checkout.c	FUNCTION_26
0x40032d1	    0x48c78578f8ff	              mov qword [rbp - 0x788], 0	      1109	checkout.c	FUNCTION_26
0x40032dc	    0xc7856cf8ffff	              mov dword [rbp - 0x794], 1	      1110	checkout.c	FUNCTION_26
0x40032e6	    0x488d95e0faff	                  lea rdx, [rbp - 0x520]	      1111	checkout.c	FUNCTION_26
0x40032ed	      0xb800000000	                              mov eax, 0	      1111	checkout.c	FUNCTION_26
0x40032f2	      0xb9a0000000	                           mov ecx, 0xa0	      1111	checkout.c	FUNCTION_26
0x40032f7	          0x4889d7	                            mov rdi, rdx	      1111	checkout.c	FUNCTION_26
0x40032fa	          0xf348ab	              rep stosq qword [rdi], rax	      1111	checkout.c	FUNCTION_26
0x40032fd	    0xc785e0faffff	              mov dword [rbp - 0x520], 6	      1111	checkout.c	FUNCTION_26
0x4003307	    0xc785e4faffff	          mov dword [rbp - 0x51c], 0x71 	      1111	checkout.c	FUNCTION_26
0x4003311	    0x48c785e8faff	              mov qword [rbp - 0x518], 0	      1111	checkout.c	FUNCTION_26
0x400331c	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x4003323	        0x4883c004	                              add rax, 4	      1111	checkout.c	FUNCTION_26
0x4003327	    0x488985f0faff	            mov qword [rbp - 0x510], rax	      1111	checkout.c	FUNCTION_26
0x400332e	    0x48c78500fbff	              mov qword [rbp - 0x500], 0	      1111	checkout.c	FUNCTION_26
0x4003339	    0xc78508fbffff	              mov dword [rbp - 0x4f8], 2	      1111	checkout.c	FUNCTION_26
0x4003343	    0xc78520fbffff	              mov dword [rbp - 0x4e0], 9	      1111	checkout.c	FUNCTION_26
0x400334d	    0xc78524fbffff	          mov dword [rbp - 0x4dc], 0x62 	      1111	checkout.c	FUNCTION_26
0x4003357	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400335e	        0x4883c028	                           add rax, 0x28	      1111	checkout.c	FUNCTION_26
0x4003362	    0x48898530fbff	            mov qword [rbp - 0x4d0], rax	      1111	checkout.c	FUNCTION_26
0x4003369	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	      1111	checkout.c	FUNCTION_26
0x4003374	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	      1111	checkout.c	FUNCTION_26
0x400337f	    0xc78560fbffff	              mov dword [rbp - 0x4a0], 9	      1111	checkout.c	FUNCTION_26
0x4003389	    0xc78564fbffff	          mov dword [rbp - 0x49c], 0x42 	      1111	checkout.c	FUNCTION_26
0x4003393	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400339a	        0x4883c030	                           add rax, 0x30	      1111	checkout.c	FUNCTION_26
0x400339e	    0x48898570fbff	            mov qword [rbp - 0x490], rax	      1111	checkout.c	FUNCTION_26
0x40033a5	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	      1111	checkout.c	FUNCTION_26
0x40033b0	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	      1111	checkout.c	FUNCTION_26
0x40033bb	    0xc785a0fbffff	              mov dword [rbp - 0x460], 7	      1111	checkout.c	FUNCTION_26
0x40033c5	    0xc785a4fbffff	          mov dword [rbp - 0x45c], 0x6c 	      1111	checkout.c	FUNCTION_26
0x40033cf	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40033d6	        0x4883c040	                           add rax, 0x40	      1111	checkout.c	FUNCTION_26
0x40033da	    0x488985b0fbff	            mov qword [rbp - 0x450], rax	      1111	checkout.c	FUNCTION_26
0x40033e1	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	      1111	checkout.c	FUNCTION_26
0x40033ec	    0xc785c8fbffff	              mov dword [rbp - 0x438], 2	      1111	checkout.c	FUNCTION_26
0x40033f6	    0x48c785d8fbff	              mov qword [rbp - 0x428], 1	      1111	checkout.c	FUNCTION_26
0x4003401	    0xc785e0fbffff	              mov dword [rbp - 0x420], 7	      1111	checkout.c	FUNCTION_26
0x400340b	    0x48c785e8fbff	              mov qword [rbp - 0x418], 0	      1111	checkout.c	FUNCTION_26
0x4003416	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400341d	        0x4883c010	                           add rax, 0x10	      1111	checkout.c	FUNCTION_26
0x4003421	    0x488985f0fbff	            mov qword [rbp - 0x410], rax	      1111	checkout.c	FUNCTION_26
0x4003428	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	      1111	checkout.c	FUNCTION_26
0x4003433	    0xc78508fcffff	              mov dword [rbp - 0x3f8], 2	      1111	checkout.c	FUNCTION_26
0x400343d	    0x48c78518fcff	              mov qword [rbp - 0x3e8], 1	      1111	checkout.c	FUNCTION_26
0x4003448	    0xc78520fcffff	              mov dword [rbp - 0x3e0], 7	      1111	checkout.c	FUNCTION_26
0x4003452	    0xc78524fcffff	          mov dword [rbp - 0x3dc], 0x74 	      1111	checkout.c	FUNCTION_26
0x400345c	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 0	      1111	checkout.c	FUNCTION_26
0x4003467	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400346e	        0x4883c044	                           add rax, 0x44	      1111	checkout.c	FUNCTION_26
0x4003472	    0x48898530fcff	            mov qword [rbp - 0x3d0], rax	      1111	checkout.c	FUNCTION_26
0x4003479	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	      1111	checkout.c	FUNCTION_26
0x4003484	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 2	      1111	checkout.c	FUNCTION_26
0x400348e	    0x48c78558fcff	              mov qword [rbp - 0x3a8], 3	      1111	checkout.c	FUNCTION_26
0x4003499	    0xc78560fcffff	              mov dword [rbp - 0x3a0], 9	      1111	checkout.c	FUNCTION_26
0x40034a3	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	      1111	checkout.c	FUNCTION_26
0x40034ae	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40034b5	        0x4883c038	                           add rax, 0x38	      1111	checkout.c	FUNCTION_26
0x40034b9	    0x48898570fcff	            mov qword [rbp - 0x390], rax	      1111	checkout.c	FUNCTION_26
0x40034c0	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	      1111	checkout.c	FUNCTION_26
0x40034cb	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	      1111	checkout.c	FUNCTION_26
0x40034d6	    0xc785a0fcffff	              mov dword [rbp - 0x360], 7	      1111	checkout.c	FUNCTION_26
0x40034e0	    0xc785a4fcffff	          mov dword [rbp - 0x35c], 0x32 	      1111	checkout.c	FUNCTION_26
0x40034ea	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	      1111	checkout.c	FUNCTION_26
0x40034f5	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40034fc	        0x4883c014	                           add rax, 0x14	      1111	checkout.c	FUNCTION_26
0x4003500	    0x488985b0fcff	            mov qword [rbp - 0x350], rax	      1111	checkout.c	FUNCTION_26
0x4003507	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	      1111	checkout.c	FUNCTION_26
0x4003512	    0xc785c8fcffff	              mov dword [rbp - 0x338], 2	      1111	checkout.c	FUNCTION_26
0x400351c	    0x48c785d8fcff	              mov qword [rbp - 0x328], 2	      1111	checkout.c	FUNCTION_26
0x4003527	    0xc785e0fcffff	              mov dword [rbp - 0x320], 7	      1111	checkout.c	FUNCTION_26
0x4003531	    0xc785e4fcffff	          mov dword [rbp - 0x31c], 0x33 	      1111	checkout.c	FUNCTION_26
0x400353b	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	      1111	checkout.c	FUNCTION_26
0x4003546	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400354d	        0x4883c014	                           add rax, 0x14	      1111	checkout.c	FUNCTION_26
0x4003551	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	      1111	checkout.c	FUNCTION_26
0x4003558	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	      1111	checkout.c	FUNCTION_26
0x4003563	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 2	      1111	checkout.c	FUNCTION_26
0x400356d	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 3	      1111	checkout.c	FUNCTION_26
0x4003578	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 6	      1111	checkout.c	FUNCTION_26
0x4003582	    0xc78524fdffff	          mov dword [rbp - 0x2dc], 0x66 	      1111	checkout.c	FUNCTION_26
0x400358c	    0x48c78528fdff	              mov qword [rbp - 0x2d8], 0	      1111	checkout.c	FUNCTION_26
0x4003597	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400359e	        0x4883c00c	                            add rax, 0xc	      1111	checkout.c	FUNCTION_26
0x40035a2	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      1111	checkout.c	FUNCTION_26
0x40035a9	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	      1111	checkout.c	FUNCTION_26
0x40035b4	    0xc78548fdffff	         mov dword [rbp - 0x2b8], 0x202 	      1111	checkout.c	FUNCTION_26
0x40035be	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 7	      1111	checkout.c	FUNCTION_26
0x40035c8	    0xc78564fdffff	          mov dword [rbp - 0x29c], 0x6d 	      1111	checkout.c	FUNCTION_26
0x40035d2	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	      1111	checkout.c	FUNCTION_26
0x40035dd	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40035e4	        0x4883c008	                              add rax, 8	      1111	checkout.c	FUNCTION_26
0x40035e8	    0x48898570fdff	            mov qword [rbp - 0x290], rax	      1111	checkout.c	FUNCTION_26
0x40035ef	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	      1111	checkout.c	FUNCTION_26
0x40035fa	    0xc78588fdffff	              mov dword [rbp - 0x278], 2	      1111	checkout.c	FUNCTION_26
0x4003604	    0x48c78598fdff	              mov qword [rbp - 0x268], 1	      1111	checkout.c	FUNCTION_26
0x400360f	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	      1111	checkout.c	FUNCTION_26
0x4003619	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	      1111	checkout.c	FUNCTION_26
0x4003624	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x400362b	        0x4883c018	                           add rax, 0x18	      1111	checkout.c	FUNCTION_26
0x400362f	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      1111	checkout.c	FUNCTION_26
0x4003636	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      1111	checkout.c	FUNCTION_26
0x4003641	    0xc785c8fdffff	         mov dword [rbp - 0x238], 0x202 	      1111	checkout.c	FUNCTION_26
0x400364b	    0x48c785d8fdff	              mov qword [rbp - 0x228], 1	      1111	checkout.c	FUNCTION_26
0x4003656	    0xc785e0fdffff	              mov dword [rbp - 0x220], 9	      1111	checkout.c	FUNCTION_26
0x4003660	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      1111	checkout.c	FUNCTION_26
0x400366b	    0x488d8578f8ff	                  lea rax, [rbp - 0x788]	      1111	checkout.c	FUNCTION_26
0x4003672	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      1111	checkout.c	FUNCTION_26
0x4003679	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	      1111	checkout.c	FUNCTION_26
0x4003684	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      1111	checkout.c	FUNCTION_26
0x400368f	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	      1111	checkout.c	FUNCTION_26
0x4003699	    0xc78524feffff	          mov dword [rbp - 0x1dc], 0x70 	      1111	checkout.c	FUNCTION_26
0x40036a3	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      1111	checkout.c	FUNCTION_26
0x40036ae	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40036b5	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      1111	checkout.c	FUNCTION_26
0x40036bc	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      1111	checkout.c	FUNCTION_26
0x40036c7	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	      1111	checkout.c	FUNCTION_26
0x40036d1	    0x48c78558feff	              mov qword [rbp - 0x1a8], 1	      1111	checkout.c	FUNCTION_26
0x40036dc	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	      1111	checkout.c	FUNCTION_26
0x40036e6	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      1111	checkout.c	FUNCTION_26
0x40036f1	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x40036f8	        0x4883c01c	                           add rax, 0x1c	      1111	checkout.c	FUNCTION_26
0x40036fc	    0x48898570feff	            mov qword [rbp - 0x190], rax	      1111	checkout.c	FUNCTION_26
0x4003703	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      1111	checkout.c	FUNCTION_26
0x400370e	    0xc78588feffff	              mov dword [rbp - 0x178], 2	      1111	checkout.c	FUNCTION_26
0x4003718	    0x48c78598feff	              mov qword [rbp - 0x168], 1	      1111	checkout.c	FUNCTION_26
0x4003723	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	      1111	checkout.c	FUNCTION_26
0x400372d	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	      1111	checkout.c	FUNCTION_26
0x4003738	    0x488d856cf8ff	                  lea rax, [rbp - 0x794]	      1111	checkout.c	FUNCTION_26
0x400373f	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      1111	checkout.c	FUNCTION_26
0x4003746	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	      1111	checkout.c	FUNCTION_26
0x4003751	    0xc785c8feffff	            mov dword [rbp - 0x138], 0xa	      1111	checkout.c	FUNCTION_26
0x400375b	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	      1111	checkout.c	FUNCTION_26
0x4003766	    0xc785e0feffff	              mov dword [rbp - 0x120], 7	      1111	checkout.c	FUNCTION_26
0x4003770	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      1111	checkout.c	FUNCTION_26
0x400377b	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x4003782	        0x4883c020	                           add rax, 0x20	      1111	checkout.c	FUNCTION_26
0x4003786	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      1111	checkout.c	FUNCTION_26
0x400378d	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      1111	checkout.c	FUNCTION_26
0x4003798	    0xc78508ffffff	               mov dword [rbp - 0xf8], 2	      1111	checkout.c	FUNCTION_26
0x40037a2	    0x48c78518ffff	               mov qword [rbp - 0xe8], 1	      1111	checkout.c	FUNCTION_26
0x40037ad	    0xc78520ffffff	            mov dword [rbp - 0xe0], 0xc 	      1111	checkout.c	FUNCTION_26
0x40037b7	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      1111	checkout.c	FUNCTION_26
0x40037c2	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      1111	checkout.c	FUNCTION_26
0x40037cd	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1111	checkout.c	FUNCTION_26
0x40037d8	    0xc78548ffffff	               mov dword [rbp - 0xb8], 1	      1111	checkout.c	FUNCTION_26
0x40037e2	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1111	checkout.c	FUNCTION_26
0x40037ed	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	      1111	checkout.c	FUNCTION_26
0x40037f7	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1111	checkout.c	FUNCTION_26
0x4003802	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1111	checkout.c	FUNCTION_26
0x4003809	        0x4883c024	                           add rax, 0x24	      1111	checkout.c	FUNCTION_26
0x400380d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1111	checkout.c	FUNCTION_26
0x4003814	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1111	checkout.c	FUNCTION_26
0x400381c	    0xc74588020000	               mov dword [rbp - 0x78], 2	      1111	checkout.c	FUNCTION_26
0x4003823	    0x48c745980100	               mov qword [rbp - 0x68], 1	      1111	checkout.c	FUNCTION_26
0x400382b	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1148	checkout.c	FUNCTION_26	CALL_20
0x4003832	      0xbaf8010000	                          mov edx, 0x1f8	      1148	checkout.c	FUNCTION_26	CALL_20
0x4003837	      0xbe00000000	                              mov esi, 0	      1148	checkout.c	FUNCTION_26	CALL_20
0x400383c	          0x4889c7	                            mov rdi, rax	      1148	checkout.c	FUNCTION_26	CALL_20
0x400383f	      0xe800000000	                          call 0x4003844	      1148	checkout.c	FUNCTION_26	CALL_20
0x4003844	    0x488d85a0f8ff	                  lea rax, [rbp - 0x760]	      1149	checkout.c	FUNCTION_26	CALL_21
0x400384b	      0xba20000000	                           mov edx, 0x20	      1149	checkout.c	FUNCTION_26	CALL_21
0x4003850	      0xbe00000000	                              mov esi, 0	      1149	checkout.c	FUNCTION_26	CALL_21
0x4003855	          0x4889c7	                            mov rdi, rax	      1149	checkout.c	FUNCTION_26	CALL_21
0x4003858	      0xe800000000	                          call 0x400385d	      1149	checkout.c	FUNCTION_26	CALL_21
0x400385d	    0xc785d8f8ffff	              mov dword [rbp - 0x728], 1	      1150	checkout.c	FUNCTION_26
0x4003867	    0x488b8548f8ff	            mov rax, qword [rbp - 0x7b8]	      1151	checkout.c	FUNCTION_26
0x400386e	    0x48898590faff	            mov qword [rbp - 0x570], rax	      1151	checkout.c	FUNCTION_26
0x4003875	    0xc785e4f8ffff	    mov dword [rbp - 0x71c], 0xffffffff 	      1152	checkout.c	FUNCTION_26
0x400387f	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1154	checkout.c	FUNCTION_26	CALL_22
0x4003886	          0x4889c6	                            mov rsi, rax	      1154	checkout.c	FUNCTION_26	CALL_22
0x4003889	      0xbf00000000	                              mov edi, 0	      1154	checkout.c	FUNCTION_26	CALL_22
0x400388e	      0xe800000000	                          call 0x4003893	      1154	checkout.c	FUNCTION_26	CALL_22
0x4003893	    0xc78504f9ffff	    mov dword [rbp - 0x6fc], 0xffffffff 	      1156	checkout.c	FUNCTION_26
0x400389d	    0x488d8de0faff	                  lea rcx, [rbp - 0x520]	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038a4	    0x488b9548f8ff	            mov rdx, qword [rbp - 0x7b8]	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038ab	    0x488bb550f8ff	            mov rsi, qword [rbp - 0x7b0]	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038b2	    0x8b855cf8ffff	            mov eax, dword [rbp - 0x7a4]	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038b8	    0x41b901000000	                              mov r9d, 1	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038be	    0x41b800000000	                              mov r8d, 0	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038c4	            0x89c7	                            mov edi, eax	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038c6	      0xe800000000	                          call 0x40038cb	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038cb	    0x89855cf8ffff	            mov dword [rbp - 0x7a4], eax	      1158	checkout.c	FUNCTION_26	CALL_23
0x40038d1	    0x8b85e4f8ffff	            mov eax, dword [rbp - 0x71c]	      1161	checkout.c	FUNCTION_26	IF_1
0x40038d7	            0x85c0	                           test eax, eax	      1161	checkout.c	FUNCTION_26	IF_1
0x40038d9	            0x7926	                           jns 0x4003901	      1161	checkout.c	FUNCTION_26	IF_1
0x40038db	    0x8b85c4f8ffff	            mov eax, dword [rbp - 0x73c]	      1162	checkout.c	FUNCTION_26	IF_1	IF_2
0x40038e1	            0x85c0	                           test eax, eax	      1162	checkout.c	FUNCTION_26	IF_1	IF_2
0x40038e3	            0x740c	                            je 0x40038f1	      1162	checkout.c	FUNCTION_26	IF_1	IF_2
0x40038e5	    0xc785e4f8ffff	              mov dword [rbp - 0x71c], 0	      1163	checkout.c	FUNCTION_26	IF_1	IF_2
0x40038ef	            0xeb10	                           jmp 0x4003901	      1163	checkout.c	FUNCTION_26	IF_1	IF_2
0x40038f1	      0xbf02000000	                              mov edi, 2	      1165	checkout.c	FUNCTION_26	IF_1	CALL_24
0x40038f6	      0xe800000000	                          call 0x40038fb	      1165	checkout.c	FUNCTION_26	IF_1	CALL_24
0x40038fb	    0x8985e4f8ffff	            mov dword [rbp - 0x71c], eax	      1165	checkout.c	FUNCTION_26	IF_1	CALL_24
0x4003901	    0x488b8578f8ff	            mov rax, qword [rbp - 0x788]	      1168	checkout.c	FUNCTION_26	IF_3
0x4003908	          0x4885c0	                           test rax, rax	      1168	checkout.c	FUNCTION_26	IF_3
0x400390b	            0x7423	                            je 0x4003930	      1168	checkout.c	FUNCTION_26	IF_3
0x400390d	    0xc785c8f8ffff	              mov dword [rbp - 0x738], 1	      1169	checkout.c	FUNCTION_26	IF_3
0x4003917	    0x488b8578f8ff	            mov rax, qword [rbp - 0x788]	      1170	checkout.c	FUNCTION_26	IF_3	CALL_25
0x400391e	      0xba00000000	                              mov edx, 0	      1170	checkout.c	FUNCTION_26	IF_3	CALL_25
0x4003923	          0x4889c6	                            mov rsi, rax	      1170	checkout.c	FUNCTION_26	IF_3	CALL_25
0x4003926	      0xbf00000000	                              mov edi, 0	      1170	checkout.c	FUNCTION_26	IF_3	CALL_25
0x400392b	      0xe800000000	                          call 0x4003930	      1170	checkout.c	FUNCTION_26	IF_3	CALL_25
0x4003930	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1173	checkout.c	FUNCTION_26	IF_4
0x4003937	          0x4885c0	                           test rax, rax	      1173	checkout.c	FUNCTION_26	IF_4
0x400393a	           0xf95c0	                                setne al	      1173	checkout.c	FUNCTION_26	IF_4
0x400393d	           0xfb6d0	                           movzx edx, al	      1173	checkout.c	FUNCTION_26	IF_4
0x4003940	    0x488b85f0f8ff	            mov rax, qword [rbp - 0x710]	      1173	checkout.c	FUNCTION_26	IF_4
0x4003947	          0x4885c0	                           test rax, rax	      1173	checkout.c	FUNCTION_26	IF_4
0x400394a	           0xf95c0	                                setne al	      1173	checkout.c	FUNCTION_26	IF_4
0x400394d	           0xfb6c0	                           movzx eax, al	      1173	checkout.c	FUNCTION_26	IF_4
0x4003950	             0x1c2	                            add edx, eax	      1173	checkout.c	FUNCTION_26	IF_4
0x4003952	    0x488b85f8f8ff	            mov rax, qword [rbp - 0x708]	      1173	checkout.c	FUNCTION_26	IF_4
0x4003959	          0x4885c0	                           test rax, rax	      1173	checkout.c	FUNCTION_26	IF_4
0x400395c	           0xf95c0	                                setne al	      1173	checkout.c	FUNCTION_26	IF_4
0x400395f	           0xfb6c0	                           movzx eax, al	      1173	checkout.c	FUNCTION_26	IF_4
0x4003962	             0x1d0	                            add eax, edx	      1173	checkout.c	FUNCTION_26	IF_4
0x4003964	          0x83f801	                              cmp eax, 1	      1173	checkout.c	FUNCTION_26	IF_4
0x4003967	            0x7e17	                           jle 0x4003980	      1173	checkout.c	FUNCTION_26	IF_4
0x4003969	      0xbf00000000	                              mov edi, 0	      1174	checkout.c	FUNCTION_26	CALL_27
0x400396e	      0xe807c8ffff	                               call sym.	      1174	checkout.c	FUNCTION_26	CALL_27
0x4003973	          0x4889c7	                            mov rdi, rax	      1174	checkout.c	FUNCTION_26	CALL_27
0x4003976	      0xb800000000	                              mov eax, 0	      1174	checkout.c	FUNCTION_26	CALL_27
0x400397b	      0xe800000000	                          call 0x4003980	      1174	checkout.c	FUNCTION_26	CALL_27
0x4003980	    0x488b85f0f8ff	            mov rax, qword [rbp - 0x710]	      1181	checkout.c	FUNCTION_26	IF_5
0x4003987	          0x4885c0	                           test rax, rax	      1181	checkout.c	FUNCTION_26	IF_5
0x400398a	            0x740e	                            je 0x400399a	      1181	checkout.c	FUNCTION_26	IF_5
0x400398c	    0x488b85f0f8ff	            mov rax, qword [rbp - 0x710]	      1182	checkout.c	FUNCTION_26	IF_5
0x4003993	    0x488985e8f8ff	            mov qword [rbp - 0x718], rax	      1182	checkout.c	FUNCTION_26	IF_5
0x400399a	    0x488b85f8f8ff	            mov rax, qword [rbp - 0x708]	      1184	checkout.c	FUNCTION_26	IF_6
0x40039a1	          0x4885c0	                           test rax, rax	      1184	checkout.c	FUNCTION_26	IF_6
0x40039a4	            0x740e	                            je 0x40039b4	      1184	checkout.c	FUNCTION_26	IF_6
0x40039a6	    0x488b85f8f8ff	            mov rax, qword [rbp - 0x708]	      1185	checkout.c	FUNCTION_26	IF_6
0x40039ad	    0x488985e8f8ff	            mov qword [rbp - 0x718], rax	      1185	checkout.c	FUNCTION_26	IF_6
0x40039b4	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	      1188	checkout.c	FUNCTION_26	IF_7
0x40039ba	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1188	checkout.c	FUNCTION_26	IF_7
0x40039bd	     0xf84f1000000	                            je 0x4003ab4	      1188	checkout.c	FUNCTION_26	IF_7
0x40039c3	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1188	checkout.c	FUNCTION_26	IF_7
0x40039ca	          0x4885c0	                           test rax, rax	      1188	checkout.c	FUNCTION_26	IF_7
0x40039cd	     0xf85e1000000	                           jne 0x4003ab4	      1188	checkout.c	FUNCTION_26	IF_7
0x40039d3	    0x488b8550f8ff	            mov rax, qword [rbp - 0x7b0]	      1189	checkout.c	FUNCTION_26	IF_7
0x40039da	          0x488b00	                    mov rax, qword [rax]	      1189	checkout.c	FUNCTION_26	IF_7
0x40039dd	    0x48898580f8ff	            mov qword [rbp - 0x780], rax	      1189	checkout.c	FUNCTION_26	IF_7
0x40039e4	    0x83bd5cf8ffff	              cmp dword [rbp - 0x7a4], 0	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x40039eb	            0x7418	                            je 0x4003a05	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x40039ed	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x40039f4	      0xbe00000000	                              mov esi, 0	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x40039f9	          0x4889c7	                            mov rdi, rax	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x40039fc	      0xe800000000	                          call 0x4003a01	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x4003a01	            0x85c0	                           test eax, eax	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x4003a03	            0x7517	                           jne 0x4003a1c	      1190	checkout.c	FUNCTION_26	IF_7	IF_8	CALL_28
0x4003a05	      0xbf00000000	                              mov edi, 0	      1191	checkout.c	FUNCTION_26	IF_7	CALL_30
0x4003a0a	      0xe86bc7ffff	                               call sym.	      1191	checkout.c	FUNCTION_26	IF_7	CALL_30
0x4003a0f	          0x4889c7	                            mov rdi, rax	      1191	checkout.c	FUNCTION_26	IF_7	CALL_30
0x4003a12	      0xb800000000	                              mov eax, 0	      1191	checkout.c	FUNCTION_26	IF_7	CALL_30
0x4003a17	      0xe800000000	                          call 0x4003a1c	      1191	checkout.c	FUNCTION_26	IF_7	CALL_30
0x4003a1c	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1192	checkout.c	FUNCTION_26	IF_7	CALL_31
0x4003a23	    0x488d9580f8ff	                  lea rdx, [rbp - 0x780]	      1192	checkout.c	FUNCTION_26	IF_7	CALL_31
0x4003a2a	      0xbe00000000	                              mov esi, 0	      1192	checkout.c	FUNCTION_26	IF_7	CALL_31
0x4003a2f	          0x4889c7	                            mov rdi, rax	      1192	checkout.c	FUNCTION_26	IF_7	CALL_31
0x4003a32	      0xe814c6ffff	                    call sym.skip_prefix	      1192	checkout.c	FUNCTION_26	IF_7	CALL_31
0x4003a37	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1193	checkout.c	FUNCTION_26	IF_7	CALL_32
0x4003a3e	    0x488d9580f8ff	                  lea rdx, [rbp - 0x780]	      1193	checkout.c	FUNCTION_26	IF_7	CALL_32
0x4003a45	      0xbe00000000	                              mov esi, 0	      1193	checkout.c	FUNCTION_26	IF_7	CALL_32
0x4003a4a	          0x4889c7	                            mov rdi, rax	      1193	checkout.c	FUNCTION_26	IF_7	CALL_32
0x4003a4d	      0xe8f9c5ffff	                    call sym.skip_prefix	      1193	checkout.c	FUNCTION_26	IF_7	CALL_32
0x4003a52	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1194	checkout.c	FUNCTION_26	IF_7	CALL_33
0x4003a59	      0xbe2f000000	                           mov esi, 0x2f	      1194	checkout.c	FUNCTION_26	IF_7	CALL_33
0x4003a5e	          0x4889c7	                            mov rdi, rax	      1194	checkout.c	FUNCTION_26	IF_7	CALL_33
0x4003a61	      0xe800000000	                          call 0x4003a66	      1194	checkout.c	FUNCTION_26	IF_7	CALL_33
0x4003a66	    0x48898580f8ff	            mov qword [rbp - 0x780], rax	      1194	checkout.c	FUNCTION_26	IF_7	CALL_33
0x4003a6d	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a74	          0x4885c0	                           test rax, rax	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a77	            0x7412	                            je 0x4003a8b	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a79	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a80	        0x4883c001	                              add rax, 1	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a84	           0xfb600	                   movzx eax, byte [rax]	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a87	            0x84c0	                             test al, al	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a89	            0x7517	                           jne 0x4003aa2	      1195	checkout.c	FUNCTION_26	IF_7	IF_9
0x4003a8b	      0xbf00000000	                              mov edi, 0	      1196	checkout.c	FUNCTION_26	IF_7	CALL_35
0x4003a90	      0xe8e5c6ffff	                               call sym.	      1196	checkout.c	FUNCTION_26	IF_7	CALL_35
0x4003a95	          0x4889c7	                            mov rdi, rax	      1196	checkout.c	FUNCTION_26	IF_7	CALL_35
0x4003a98	      0xb800000000	                              mov eax, 0	      1196	checkout.c	FUNCTION_26	IF_7	CALL_35
0x4003a9d	      0xe800000000	                          call 0x4003aa2	      1196	checkout.c	FUNCTION_26	IF_7	CALL_35
0x4003aa2	    0x488b8580f8ff	            mov rax, qword [rbp - 0x780]	      1197	checkout.c	FUNCTION_26	IF_7
0x4003aa9	        0x4883c001	                              add rax, 1	      1197	checkout.c	FUNCTION_26	IF_7
0x4003aad	    0x488985e8f8ff	            mov qword [rbp - 0x718], rax	      1197	checkout.c	FUNCTION_26	IF_7
0x4003ab4	    0x83bd5cf8ffff	              cmp dword [rbp - 0x7a4], 0	      1213	checkout.c	FUNCTION_26	IF_10
0x4003abb	     0xf8497000000	                            je 0x4003b58	      1213	checkout.c	FUNCTION_26	IF_10
0x4003ac1	    0x8b85c0f8ffff	            mov eax, dword [rbp - 0x740]	      1216	checkout.c	FUNCTION_26	IF_10
0x4003ac7	            0x85c0	                           test eax, eax	      1218	checkout.c	FUNCTION_26	IF_10
0x4003ac9	            0x7528	                           jne 0x4003af3	      1218	checkout.c	FUNCTION_26	IF_10
0x4003acb	    0x8b856cf8ffff	            mov eax, dword [rbp - 0x794]	      1216	checkout.c	FUNCTION_26	IF_10
0x4003ad1	            0x85c0	                           test eax, eax	      1216	checkout.c	FUNCTION_26	IF_10
0x4003ad3	            0x741e	                            je 0x4003af3	      1216	checkout.c	FUNCTION_26	IF_10
0x4003ad5	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	      1218	checkout.c	FUNCTION_26	IF_10
0x4003adb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1217	checkout.c	FUNCTION_26	IF_10
0x4003ade	            0x7513	                           jne 0x4003af3	      1217	checkout.c	FUNCTION_26	IF_10
0x4003ae0	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1219	checkout.c	FUNCTION_26	IF_10
0x4003ae7	          0x4885c0	                           test rax, rax	      1218	checkout.c	FUNCTION_26	IF_10
0x4003aea	            0x7507	                           jne 0x4003af3	      1218	checkout.c	FUNCTION_26	IF_10
0x4003aec	      0xb801000000	                              mov eax, 1	      1218	checkout.c	FUNCTION_26	IF_10
0x4003af1	            0xeb05	                           jmp 0x4003af8	      1218	checkout.c	FUNCTION_26	IF_10
0x4003af3	      0xb800000000	                              mov eax, 0	      1218	checkout.c	FUNCTION_26	IF_10
0x4003af8	    0x898570f8ffff	            mov dword [rbp - 0x790], eax	      1215	checkout.c	FUNCTION_26	IF_10
0x4003afe	    0x4c8d85c0faff	                   lea r8, [rbp - 0x540]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b05	    0x488dbdc0f8ff	                  lea rdi, [rbp - 0x740]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b0c	    0x488d8da0f8ff	                  lea rcx, [rbp - 0x760]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b13	    0x8b9570f8ffff	            mov edx, dword [rbp - 0x790]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b19	    0x488bb550f8ff	            mov rsi, qword [rbp - 0x7b0]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b20	    0x8b855cf8ffff	            mov eax, dword [rbp - 0x7a4]	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b26	          0x4d89c1	                              mov r9, r8	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b29	          0x4989f8	                             mov r8, rdi	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b2c	            0x89c7	                            mov edi, eax	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b2e	      0xe8fdefffff	           call sym.parse_branchname_arg	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b33	    0x898574f8ffff	            mov dword [rbp - 0x78c], eax	      1220	checkout.c	FUNCTION_26	IF_10	CALL_36
0x4003b39	    0x8b8574f8ffff	            mov eax, dword [rbp - 0x78c]	      1222	checkout.c	FUNCTION_26	IF_10
0x4003b3f	            0x4898	                                    cdqe	      1222	checkout.c	FUNCTION_26	IF_10
0x4003b41	        0x48c1e003	                              shl rax, 3	      1222	checkout.c	FUNCTION_26	IF_10
0x4003b45	    0x48018550f8ff	           add qword [rbp - 0x7b0], rax 	      1222	checkout.c	FUNCTION_26	IF_10
0x4003b4c	    0x8b8574f8ffff	            mov eax, dword [rbp - 0x78c]	      1223	checkout.c	FUNCTION_26	IF_10
0x4003b52	    0x29855cf8ffff	            sub dword [rbp - 0x7a4], eax	      1223	checkout.c	FUNCTION_26	IF_10
0x4003b58	    0x83bd5cf8ffff	              cmp dword [rbp - 0x7a4], 0	      1226	checkout.c	FUNCTION_26	IF_11
0x4003b5f	     0xf8420010000	                            je 0x4003c85	      1226	checkout.c	FUNCTION_26	IF_11
0x4003b65	    0x8b85c0f8ffff	            mov eax, dword [rbp - 0x740]	      1228	checkout.c	FUNCTION_26	IF_11
0x4003b6b	            0x85c0	                           test eax, eax	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b6d	            0x7407	                            je 0x4003b76	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b6f	      0xbe10000000	                           mov esi, 0x10	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b74	            0xeb05	                           jmp 0x4003b7b	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b76	      0xbe00000000	                              mov esi, 0	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b7b	    0x488b9550f8ff	            mov rdx, qword [rbp - 0x7b0]	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b82	    0x488b8548f8ff	            mov rax, qword [rbp - 0x7b8]	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b89	    0x488d8dc0f8ff	                  lea rcx, [rbp - 0x740]	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b90	    0x488db9d80100	                  lea rdi, [rcx + 0x1d8]	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b97	          0x4989d0	                             mov r8, rdx	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b9a	          0x4889c1	                            mov rcx, rax	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b9d	            0x89f2	                            mov edx, esi	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003b9f	      0xbe00000000	                              mov esi, 0	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003ba4	      0xe800000000	                          call 0x4003ba9	      1227	checkout.c	FUNCTION_26	IF_11	CALL_37
0x4003ba9	    0x8b8598faffff	            mov eax, dword [rbp - 0x568]	      1231	checkout.c	FUNCTION_26	IF_11	IF_12
0x4003baf	            0x85c0	                           test eax, eax	      1231	checkout.c	FUNCTION_26	IF_11	IF_12
0x4003bb1	            0x7517	                           jne 0x4003bca	      1231	checkout.c	FUNCTION_26	IF_11	IF_12
0x4003bb3	      0xbf00000000	                              mov edi, 0	      1232	checkout.c	FUNCTION_26	IF_11	CALL_39
0x4003bb8	      0xe8bdc5ffff	                               call sym.	      1232	checkout.c	FUNCTION_26	IF_11	CALL_39
0x4003bbd	          0x4889c7	                            mov rdi, rax	      1232	checkout.c	FUNCTION_26	IF_11	CALL_39
0x4003bc0	      0xb800000000	                              mov eax, 0	      1232	checkout.c	FUNCTION_26	IF_11	CALL_39
0x4003bc5	      0xe800000000	                          call 0x4003bca	      1232	checkout.c	FUNCTION_26	IF_11	CALL_39
0x4003bca	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1238	checkout.c	FUNCTION_26	IF_11	IF_13
0x4003bd1	          0x4885c0	                           test rax, rax	      1238	checkout.c	FUNCTION_26	IF_11	IF_13
0x4003bd4	            0x7437	                            je 0x4003c0d	      1238	checkout.c	FUNCTION_26	IF_11	IF_13
0x4003bd6	    0x83bd5cf8ffff	              cmp dword [rbp - 0x7a4], 1	      1238	checkout.c	FUNCTION_26	IF_11	IF_13
0x4003bdd	            0x752e	                           jne 0x4003c0d	      1238	checkout.c	FUNCTION_26	IF_11	IF_13
0x4003bdf	    0x4c8ba5e8f8ff	            mov r12, qword [rbp - 0x718]	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003be6	    0x488b8550f8ff	            mov rax, qword [rbp - 0x7b0]	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003bed	          0x488b18	                    mov rbx, qword [rax]	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003bf0	      0xbf00000000	                              mov edi, 0	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003bf5	      0xe880c5ffff	                               call sym.	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003bfa	          0x4c89e2	                            mov rdx, r12	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003bfd	          0x4889de	                            mov rsi, rbx	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003c00	          0x4889c7	                            mov rdi, rax	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003c03	      0xb800000000	                              mov eax, 0	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003c08	      0xe800000000	                          call 0x4003c0d	      1239	checkout.c	FUNCTION_26	IF_11	IF_13	CALL_41
0x4003c0d	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	      1242	checkout.c	FUNCTION_26	IF_11	IF_14
0x4003c13	            0x85c0	                           test eax, eax	      1242	checkout.c	FUNCTION_26	IF_11	IF_14
0x4003c15	            0x7424	                            je 0x4003c3b	      1242	checkout.c	FUNCTION_26	IF_11	IF_14
0x4003c17	    0x488b8550f8ff	            mov rax, qword [rbp - 0x7b0]	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c1e	          0x488b18	                    mov rbx, qword [rax]	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c21	      0xbf00000000	                              mov edi, 0	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c26	      0xe84fc5ffff	                               call sym.	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c2b	          0x4889de	                            mov rsi, rbx	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c2e	          0x4889c7	                            mov rdi, rax	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c31	      0xb800000000	                              mov eax, 0	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c36	      0xe800000000	                          call 0x4003c3b	      1243	checkout.c	FUNCTION_26	IF_11	IF_14	CALL_43
0x4003c3b	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c41	            0x85c0	                           test eax, eax	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c43	           0xf95c0	                                setne al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c46	           0xfb6d0	                           movzx edx, al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c49	    0x8b85ccf8ffff	            mov eax, dword [rbp - 0x734]	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c4f	            0x85c0	                           test eax, eax	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c51	           0xf95c0	                                setne al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c54	           0xfb6c0	                           movzx eax, al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c57	             0x1c2	                            add edx, eax	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c59	    0x8b85c8f8ffff	            mov eax, dword [rbp - 0x738]	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c5f	            0x85c0	                           test eax, eax	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c61	           0xf95c0	                                setne al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c64	           0xfb6c0	                           movzx eax, al	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c67	             0x1d0	                            add eax, edx	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c69	          0x83f801	                              cmp eax, 1	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c6c	            0x7e17	                           jle 0x4003c85	      1246	checkout.c	FUNCTION_26	IF_11	IF_15
0x4003c6e	      0xbf00000000	                              mov edi, 0	      1247	checkout.c	FUNCTION_26	IF_11	IF_15	CALL_45
0x4003c73	      0xe802c5ffff	                               call sym.	      1247	checkout.c	FUNCTION_26	IF_11	IF_15	CALL_45
0x4003c78	          0x4889c7	                            mov rdi, rax	      1247	checkout.c	FUNCTION_26	IF_11	IF_15	CALL_45
0x4003c7b	      0xb800000000	                              mov eax, 0	      1247	checkout.c	FUNCTION_26	IF_11	IF_15	CALL_45
0x4003c80	      0xe800000000	                          call 0x4003c85	      1247	checkout.c	FUNCTION_26	IF_11	IF_15	CALL_45
0x4003c85	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1251	checkout.c	FUNCTION_26	IF_16
0x4003c8c	          0x4885c0	                           test rax, rax	      1251	checkout.c	FUNCTION_26	IF_16
0x4003c8f	     0xf8481000000	                            je 0x4003d16	      1251	checkout.c	FUNCTION_26	IF_16
0x4003c95	    0x48c78580f8ff	              mov qword [rbp - 0x780], 0	      1252	checkout.c	FUNCTION_26	IF_16
0x4003ca0	    0x48c78588f8ff	              mov qword [rbp - 0x778], 0	      1252	checkout.c	FUNCTION_26	IF_16
0x4003cab	    0x48c78590f8ff	              mov qword [rbp - 0x770], 0	      1252	checkout.c	FUNCTION_26	IF_16
0x4003cb6	    0x488b85f0f8ff	            mov rax, qword [rbp - 0x710]	      1254	checkout.c	FUNCTION_26	IF_16	IF_17
0x4003cbd	          0x4885c0	                           test rax, rax	      1254	checkout.c	FUNCTION_26	IF_16	IF_17
0x4003cc0	            0x7421	                            je 0x4003ce3	      1254	checkout.c	FUNCTION_26	IF_16	IF_17
0x4003cc2	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003cc9	    0x488d9580f8ff	                  lea rdx, [rbp - 0x780]	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003cd0	          0x4889d6	                            mov rsi, rdx	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003cd3	          0x4889c7	                            mov rdi, rax	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003cd6	      0xe800000000	                          call 0x4003cdb	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003cdb	    0x898588faffff	            mov dword [rbp - 0x578], eax	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003ce1	            0xeb24	                           jmp 0x4003d07	      1255	checkout.c	FUNCTION_26	IF_16	CALL_46
0x4003ce3	    0x488b85e8f8ff	            mov rax, qword [rbp - 0x718]	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003cea	    0x488d8d80f8ff	                  lea rcx, [rbp - 0x780]	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003cf1	      0xba00000000	                              mov edx, 0	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003cf6	          0x4889ce	                            mov rsi, rcx	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003cf9	          0x4889c7	                            mov rdi, rax	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003cfc	      0xe800000000	                          call 0x4003d01	      1258	checkout.c	FUNCTION_26	IF_16	CALL_47
0x4003d01	    0x898588faffff	            mov dword [rbp - 0x578], eax	      1257	checkout.c	FUNCTION_26	IF_16	ELSE_2
0x4003d07	    0x488d8580f8ff	                  lea rax, [rbp - 0x780]	      1259	checkout.c	FUNCTION_26	IF_16	CALL_48
0x4003d0e	          0x4889c7	                            mov rdi, rax	      1259	checkout.c	FUNCTION_26	IF_16	CALL_48
0x4003d11	      0xe800000000	                          call 0x4003d16	      1259	checkout.c	FUNCTION_26	IF_16	CALL_48
0x4003d16	    0x8b85c0f8ffff	            mov eax, dword [rbp - 0x740]	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d1c	            0x85c0	                           test eax, eax	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d1e	            0x750a	                           jne 0x4003d2a	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d20	    0x8b8598faffff	            mov eax, dword [rbp - 0x568]	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d26	            0x85c0	                           test eax, eax	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d28	            0x741b	                            je 0x4003d45	      1263	checkout.c	FUNCTION_26	IF_18
0x4003d2a	    0x488b95a0f8ff	            mov rdx, qword [rbp - 0x760]	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d31	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d38	          0x4889d6	                            mov rsi, rdx	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d3b	          0x4889c7	                            mov rdi, rax	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d3e	      0xe8facfffff	                 call sym.checkout_paths	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d43	            0xeb19	                           jmp 0x4003d5e	      1264	checkout.c	FUNCTION_26	CALL_49
0x4003d45	    0x488d95a0f8ff	                  lea rdx, [rbp - 0x760]	      1266	checkout.c	FUNCTION_26	CALL_50
0x4003d4c	    0x488d85c0f8ff	                  lea rax, [rbp - 0x740]	      1266	checkout.c	FUNCTION_26	CALL_50
0x4003d53	          0x4889d6	                            mov rsi, rdx	      1266	checkout.c	FUNCTION_26	CALL_50
0x4003d56	          0x4889c7	                            mov rdi, rax	      1266	checkout.c	FUNCTION_26	CALL_50
0x4003d59	      0xe846f2ffff	                call sym.checkout_branch	      1266	checkout.c	FUNCTION_26	CALL_50
0x4003d5e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1267	checkout.c	FUNCTION_26
0x4003d62	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1267	checkout.c	FUNCTION_26
0x4003d6b	            0x7405	                            je 0x4003d72	      1267	checkout.c	FUNCTION_26
0x4003d6d	      0xe800000000	                          call 0x4003d72	      1267	checkout.c	FUNCTION_26
0x4003d72	    0x4881c4b00700	                          add rsp, 0x7b0	      1267	checkout.c	FUNCTION_26
0x4003d79	              0x5b	                                 pop rbx	      1267	checkout.c	FUNCTION_26
0x4003d7a	            0x415c	                                 pop r12	      1267	checkout.c	FUNCTION_26
0x4003d7c	              0x5d	                                 pop rbp	      1267	checkout.c	FUNCTION_26
0x4003d7d	              0xc3	                                     ret	      1267	checkout.c	FUNCTION_26
strbuf_avail	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	18
0x40000a1	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_28
0x40000a2	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_28
0x40000a5	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_28
0x40000a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x40000ad	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_28
0x40000b0	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_28
0x40000b3	            0x741b	                            je 0x40000d0	       141	strbuf.h	FUNCTION_28
0x40000b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x40000b9	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_28
0x40000bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x40000c0	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_28
0x40000c4	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_28
0x40000c7	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_28
0x40000ca	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_28
0x40000ce	            0xeb05	                           jmp 0x40000d5	       141	strbuf.h	FUNCTION_28
0x40000d0	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_28
0x40000d5	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_28
0x40000d6	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_28
Q_	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	14
0x40001a6	              0x55	                                push rbp	        59	gettext.h	FUNCTION_73
0x40001a7	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_73
0x40001aa	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_73
0x40001ae	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_73
0x40001b2	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_73
0x40001b6	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_73
0x40001ba	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_73
0x40001be	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_73
0x40001c2	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_73
0x40001c6	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_73
0x40001c9	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_73
0x40001cc	      0xe800000000	                          call 0x40001d1	        62	gettext.h	FUNCTION_73
0x40001d1	              0xc9	                                   leave	        63	gettext.h	FUNCTION_73
0x40001d2	              0xc3	                                     ret	        63	gettext.h	FUNCTION_73
const_error	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_79
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_79
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_79
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_79
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_79
oidcpy	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	13
0x40002dd	              0x55	                                push rbp	       999	cache.h	FUNCTION_50
0x40002de	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_50
0x40002e1	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_50
0x40002e5	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_50
0x40002e9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_50
0x40002ed	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_50	CALL_1
0x40002f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_50	CALL_1
0x40002f5	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_50	CALL_1
0x40002f8	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_50	CALL_1
0x40002fb	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_50	CALL_1
0x4000300	              0x90	                                     nop	      1001	cache.h	FUNCTION_50
0x4000301	              0xc9	                                   leave	      1001	cache.h	FUNCTION_50
0x4000302	              0xc3	                                     ret	      1001	cache.h	FUNCTION_50
skip_same_name	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,1	27
0x4000662	              0x55	                                push rbp	       120	checkout.c	FUNCTION_4
0x4000663	          0x4889e5	                            mov rbp, rsp	       120	checkout.c	FUNCTION_4
0x4000666	        0x4883ec10	                           sub rsp, 0x10	       120	checkout.c	FUNCTION_4
0x400066a	        0x48897df8	                mov qword [rbp - 8], rdi	       120	checkout.c	FUNCTION_4
0x400066e	          0x8975f4	              mov dword [rbp - 0xc], esi	       120	checkout.c	FUNCTION_4
0x4000671	        0x8345f401	                add dword [rbp - 0xc], 1	       121	checkout.c	FUNCTION_4	WHILE_1
0x4000675	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       121	checkout.c	FUNCTION_4	WHILE_1
0x4000678	    0x8b0500000000	            mov eax, dword [0x0400067e] 	       121	checkout.c	FUNCTION_4	WHILE_1
0x400067e	            0x39c2	                            cmp edx, eax	       121	checkout.c	FUNCTION_4	WHILE_1
0x4000680	            0x7332	                           jae 0x40006b4	       121	checkout.c	FUNCTION_4	WHILE_1
0x4000682	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x4000686	        0x488d5058	                   lea rdx, [rax + 0x58]	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x400068a	    0x488b05000000	            mov rax, qword [0x04000691] 	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x4000691	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x4000694	          0x4863c9	                         movsxd rcx, ecx	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x4000697	        0x48c1e103	                              shl rcx, 3	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x400069b	          0x4801c8	                            add rax, rcx	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x400069e	          0x488b00	                    mov rax, qword [rax]	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x40006a1	        0x4883c058	                           add rax, 0x58	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x40006a5	          0x4889d6	                            mov rsi, rdx	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x40006a8	          0x4889c7	                            mov rdi, rax	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x40006ab	      0xe800000000	                          call 0x40006b0	       122	checkout.c	FUNCTION_4	WHILE_1	CALL_1
0x40006b0	            0x85c0	                           test eax, eax	       121	checkout.c	FUNCTION_4	WHILE_1
0x40006b2	            0x74bd	                            je 0x4000671	       121	checkout.c	FUNCTION_4	WHILE_1
0x40006b4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       124	checkout.c	FUNCTION_4
0x40006b7	              0xc9	                                   leave	       125	checkout.c	FUNCTION_4
0x40006b8	              0xc3	                                     ret	       125	checkout.c	FUNCTION_4
checkout_merged	CALL,25:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,6:WHILE,1	210
0x4000983	              0x55	                                push rbp	       175	checkout.c	FUNCTION_8
0x4000984	          0x4889e5	                            mov rbp, rsp	       175	checkout.c	FUNCTION_8
0x4000987	    0x4881ece00000	                           sub rsp, 0xe0	       175	checkout.c	FUNCTION_8
0x400098e	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	       175	checkout.c	FUNCTION_8
0x4000994	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       175	checkout.c	FUNCTION_8
0x400099b	    0x64488b042528	                mov rax, qword fs:[0x28]	       175	checkout.c	FUNCTION_8
0x40009a4	        0x488945f8	                mov qword [rbp - 8], rax	       175	checkout.c	FUNCTION_8
0x40009a8	            0x31c0	                            xor eax, eax	       175	checkout.c	FUNCTION_8
0x40009aa	    0x488b05000000	            mov rax, qword [0x040009b1] 	       176	checkout.c	FUNCTION_8
0x40009b1	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	       176	checkout.c	FUNCTION_8
0x40009b7	          0x4863d2	                         movsxd rdx, edx	       176	checkout.c	FUNCTION_8
0x40009ba	        0x48c1e203	                              shl rdx, 3	       176	checkout.c	FUNCTION_8
0x40009be	          0x4801d0	                            add rax, rdx	       176	checkout.c	FUNCTION_8
0x40009c1	          0x488b00	                    mov rax, qword [rax]	       176	checkout.c	FUNCTION_8
0x40009c4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       176	checkout.c	FUNCTION_8
0x40009cb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       177	checkout.c	FUNCTION_8
0x40009d2	        0x4883c058	                           add rax, 0x58	       177	checkout.c	FUNCTION_8
0x40009d6	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       177	checkout.c	FUNCTION_8
0x40009dd	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	       183	checkout.c	FUNCTION_8
0x40009e7	        0x488d45b0	                   lea rax, [rbp - 0x50]	       185	checkout.c	FUNCTION_8	CALL_1
0x40009eb	      0xba3c000000	                           mov edx, 0x3c	       185	checkout.c	FUNCTION_8	CALL_1
0x40009f0	      0xbe00000000	                              mov esi, 0	       185	checkout.c	FUNCTION_8	CALL_1
0x40009f5	          0x4889c7	                            mov rdi, rax	       185	checkout.c	FUNCTION_8	CALL_1
0x40009f8	      0xe800000000	                          call 0x40009fd	       185	checkout.c	FUNCTION_8	CALL_1
0x40009fd	      0xe9c9000000	                           jmp 0x4000acb	       186	checkout.c	FUNCTION_8	WHILE_1
0x4000a02	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       188	checkout.c	FUNCTION_8	WHILE_1
0x4000a09	          0x8b4038	            mov eax, dword [rax + 0x38] 	       188	checkout.c	FUNCTION_8	WHILE_1
0x4000a0c	      0x2500300000	                         and eax, 0x3000	       188	checkout.c	FUNCTION_8	WHILE_1
0x4000a11	          0xc1e80c	                            shr eax, 0xc	       188	checkout.c	FUNCTION_8	WHILE_1
0x4000a14	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	       188	checkout.c	FUNCTION_8	WHILE_1
0x4000a1a	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a21	     0xf84b8000000	                            je 0x4000adf	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a27	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a2e	        0x488d5058	                   lea rdx, [rax + 0x58]	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a32	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a39	          0x4889d6	                            mov rsi, rdx	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a3c	          0x4889c7	                            mov rdi, rax	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a3f	      0xe800000000	                          call 0x4000a44	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a44	            0x85c0	                           test eax, eax	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a46	     0xf8593000000	                           jne 0x4000adf	       189	checkout.c	FUNCTION_8	WHILE_1	IF_1	CALL_2
0x4000a4c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a53	        0x488d4844	                   lea rcx, [rax + 0x44]	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a57	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a5d	          0x83e801	                              sub eax, 1	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a60	        0x488d75b0	                   lea rsi, [rbp - 0x50]	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a64	          0x4863d0	                         movsxd rdx, eax	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a67	          0x4889d0	                            mov rax, rdx	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a6a	        0x48c1e002	                              shl rax, 2	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a6e	          0x4801d0	                            add rax, rdx	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a71	        0x48c1e002	                              shl rax, 2	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a75	          0x4801f0	                            add rax, rsi	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a78	          0x4889ce	                            mov rsi, rcx	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a7b	          0x4889c7	                            mov rdi, rax	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a7e	      0xe85af8ffff	                         call sym.oidcpy	       191	checkout.c	FUNCTION_8	WHILE_1	CALL_3
0x4000a83	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 2	       192	checkout.c	FUNCTION_8	WHILE_1	IF_2
0x4000a8a	            0x7517	                           jne 0x4000aa3	       192	checkout.c	FUNCTION_8	WHILE_1	IF_2
0x4000a8c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       193	checkout.c	FUNCTION_8	WHILE_1	CALL_4
0x4000a93	          0x8b4034	            mov eax, dword [rax + 0x34] 	       193	checkout.c	FUNCTION_8	WHILE_1	CALL_4
0x4000a96	            0x89c7	                            mov edi, eax	       193	checkout.c	FUNCTION_8	WHILE_1	CALL_4
0x4000a98	      0xe845f7ffff	                 call sym.create_ce_mode	       193	checkout.c	FUNCTION_8	WHILE_1	CALL_4
0x4000a9d	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	       193	checkout.c	FUNCTION_8	WHILE_1	CALL_4
0x4000aa3	    0x83852cffffff	               add dword [rbp - 0xd4], 1	       194	checkout.c	FUNCTION_8	WHILE_1
0x4000aaa	    0x488b05000000	            mov rax, qword [0x04000ab1] 	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000ab1	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000ab7	          0x4863d2	                         movsxd rdx, edx	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000aba	        0x48c1e203	                              shl rdx, 3	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000abe	          0x4801d0	                            add rax, rdx	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000ac1	          0x488b00	                    mov rax, qword [rax]	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000ac4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       195	checkout.c	FUNCTION_8	WHILE_1
0x4000acb	    0x8b1500000000	            mov edx, dword [0x04000ad1] 	       186	checkout.c	FUNCTION_8	WHILE_1
0x4000ad1	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       186	checkout.c	FUNCTION_8	WHILE_1
0x4000ad7	            0x39c2	                            cmp edx, eax	       186	checkout.c	FUNCTION_8	WHILE_1
0x4000ad9	     0xf8723ffffff	                            ja 0x4000a02	       186	checkout.c	FUNCTION_8	WHILE_1
0x4000adf	        0x488d45b0	                   lea rax, [rbp - 0x50]	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000ae3	        0x4883c014	                           add rax, 0x14	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000ae7	          0x4889c7	                            mov rdi, rax	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000aea	      0xe89cf7ffff	                    call sym.is_null_oid	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000aef	            0x85c0	                           test eax, eax	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000af1	            0x7514	                           jne 0x4000b07	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000af3	        0x488d45b0	                   lea rax, [rbp - 0x50]	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000af7	        0x4883c028	                           add rax, 0x28	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000afb	          0x4889c7	                            mov rdi, rax	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000afe	      0xe888f7ffff	                    call sym.is_null_oid	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000b03	            0x85c0	                           test eax, eax	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000b05	            0x742e	                            je 0x4000b35	       197	checkout.c	FUNCTION_8	IF_3	CALL_6
0x4000b07	      0xbf00000000	                              mov edi, 0	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b0c	      0xe869f6ffff	                               call sym.	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b11	          0x4889c2	                            mov rdx, rax	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b14	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b1b	          0x4889c6	                            mov rsi, rax	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b1e	          0x4889d7	                            mov rdi, rdx	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b21	      0xb800000000	                              mov eax, 0	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b26	      0xe800000000	                          call 0x4000b2b	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b2b	      0xe810f5ffff	                    call sym.const_error	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b30	      0xe9f2010000	                           jmp 0x4000d27	       198	checkout.c	FUNCTION_8	CALL_7
0x4000b35	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       200	checkout.c	FUNCTION_8	CALL_8
0x4000b39	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       200	checkout.c	FUNCTION_8	CALL_8
0x4000b40	          0x4889d6	                            mov rsi, rdx	       200	checkout.c	FUNCTION_8	CALL_8
0x4000b43	          0x4889c7	                            mov rdi, rax	       200	checkout.c	FUNCTION_8	CALL_8
0x4000b46	      0xe800000000	                          call 0x4000b4b	       200	checkout.c	FUNCTION_8	CALL_8
0x4000b4b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b4f	        0x488d5014	                   lea rdx, [rax + 0x14]	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b53	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b5a	          0x4889d6	                            mov rsi, rdx	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b5d	          0x4889c7	                            mov rdi, rax	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b60	      0xe800000000	                          call 0x4000b65	       201	checkout.c	FUNCTION_8	CALL_9
0x4000b65	        0x488d45b0	                   lea rax, [rbp - 0x50]	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b69	        0x488d5028	                   lea rdx, [rax + 0x28]	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b6d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b74	          0x4889d6	                            mov rsi, rdx	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b77	          0x4889c7	                            mov rdi, rax	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b7a	      0xe800000000	                          call 0x4000b7f	       202	checkout.c	FUNCTION_8	CALL_10
0x4000b7f	    0x488dbd60ffff	                   lea rdi, [rbp - 0xa0]	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b86	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b8d	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b94	        0x488d4580	                   lea rax, [rbp - 0x80]	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b98	        0x4883ec08	                              sub rsp, 8	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b9c	            0x6a00	                                  push 0	       208	checkout.c	FUNCTION_8	CALL_11
0x4000b9e	      0x6800000000	                                  push 0	       208	checkout.c	FUNCTION_8	CALL_11
0x4000ba3	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       208	checkout.c	FUNCTION_8	CALL_11
0x4000baa	              0x51	                                push rcx	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bab	    0x41b900000000	                              mov r9d, 0	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bb1	          0x4989f8	                             mov r8, rdi	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bb4	      0xb900000000	                              mov ecx, 0	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bb9	          0x4889c7	                            mov rdi, rax	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bbc	      0xe800000000	                          call 0x4000bc1	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bc1	        0x4883c420	                           add rsp, 0x20	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bc5	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       208	checkout.c	FUNCTION_8	CALL_11
0x4000bcb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       210	checkout.c	FUNCTION_8	CALL_12
0x4000bd2	          0x4889c7	                            mov rdi, rax	       210	checkout.c	FUNCTION_8	CALL_12
0x4000bd5	      0xe800000000	                          call 0x4000bda	       210	checkout.c	FUNCTION_8	CALL_12
0x4000bda	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       211	checkout.c	FUNCTION_8	CALL_13
0x4000be1	          0x4889c7	                            mov rdi, rax	       211	checkout.c	FUNCTION_8	CALL_13
0x4000be4	      0xe800000000	                          call 0x4000be9	       211	checkout.c	FUNCTION_8	CALL_13
0x4000be9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       212	checkout.c	FUNCTION_8	CALL_14
0x4000bf0	          0x4889c7	                            mov rdi, rax	       212	checkout.c	FUNCTION_8	CALL_14
0x4000bf3	      0xe800000000	                          call 0x4000bf8	       212	checkout.c	FUNCTION_8	CALL_14
0x4000bf8	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       213	checkout.c	FUNCTION_8	IF_4
0x4000bff	            0x7809	                            js 0x4000c0a	       213	checkout.c	FUNCTION_8	IF_4
0x4000c01	        0x488b4580	             mov rax, qword [rbp - 0x80]	       213	checkout.c	FUNCTION_8	IF_4
0x4000c05	          0x4885c0	                           test rax, rax	       213	checkout.c	FUNCTION_8	IF_4
0x4000c08	            0x753a	                           jne 0x4000c44	       213	checkout.c	FUNCTION_8	IF_4
0x4000c0a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       214	checkout.c	FUNCTION_8	IF_4	CALL_15
0x4000c0e	          0x4889c7	                            mov rdi, rax	       214	checkout.c	FUNCTION_8	IF_4	CALL_15
0x4000c11	      0xe800000000	                          call 0x4000c16	       214	checkout.c	FUNCTION_8	IF_4	CALL_15
0x4000c16	      0xbf00000000	                              mov edi, 0	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c1b	      0xe85af5ffff	                               call sym.	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c20	          0x4889c2	                            mov rdx, rax	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c23	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c2a	          0x4889c6	                            mov rsi, rax	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c2d	          0x4889d7	                            mov rdi, rdx	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c30	      0xb800000000	                              mov eax, 0	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c35	      0xe800000000	                          call 0x4000c3a	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c3a	      0xe801f4ffff	                    call sym.const_error	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c3f	      0xe9e3000000	                           jmp 0x4000d27	       215	checkout.c	FUNCTION_8	IF_4	CALL_16
0x4000c44	    0x488b15000000	            mov rdx, qword [0x04000c4b] 	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c4b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c4f	          0x4889c6	                            mov rsi, rax	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c52	        0x488b4580	             mov rax, qword [rbp - 0x80]	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c56	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c5a	          0x4889c7	                            mov rdi, rax	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c5d	      0xe800000000	                          call 0x4000c62	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c62	            0x85c0	                           test eax, eax	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c64	            0x7424	                            je 0x4000c8a	       230	checkout.c	FUNCTION_8	IF_5	CALL_17
0x4000c66	      0xbf00000000	                              mov edi, 0	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c6b	      0xe80af5ffff	                               call sym.	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c70	          0x4889c2	                            mov rdx, rax	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c73	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c7a	          0x4889c6	                            mov rsi, rax	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c7d	          0x4889d7	                            mov rdi, rdx	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c80	      0xb800000000	                              mov eax, 0	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c85	      0xe800000000	                          call 0x4000c8a	       231	checkout.c	FUNCTION_8	CALL_19
0x4000c8a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       232	checkout.c	FUNCTION_8	CALL_20
0x4000c8e	          0x4889c7	                            mov rdi, rax	       232	checkout.c	FUNCTION_8	CALL_20
0x4000c91	      0xe800000000	                          call 0x4000c96	       232	checkout.c	FUNCTION_8	CALL_20
0x4000c96	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       233	checkout.c	FUNCTION_8	CALL_21
0x4000c9d	        0x488d7590	                   lea rsi, [rbp - 0x70]	       233	checkout.c	FUNCTION_8	CALL_21
0x4000ca1	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       233	checkout.c	FUNCTION_8	CALL_21
0x4000ca7	    0x41b800000000	                              mov r8d, 0	       233	checkout.c	FUNCTION_8	CALL_21
0x4000cad	      0xb902000000	                              mov ecx, 2	       233	checkout.c	FUNCTION_8	CALL_21
0x4000cb2	            0x89c7	                            mov edi, eax	       233	checkout.c	FUNCTION_8	CALL_21
0x4000cb4	      0xe800000000	                          call 0x4000cb9	       233	checkout.c	FUNCTION_8	CALL_21
0x4000cb9	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       233	checkout.c	FUNCTION_8	CALL_21
0x4000cc0	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       234	checkout.c	FUNCTION_8	IF_6
0x4000cc8	            0x7524	                           jne 0x4000cee	       234	checkout.c	FUNCTION_8	IF_6
0x4000cca	      0xbf00000000	                              mov edi, 0	       235	checkout.c	FUNCTION_8	CALL_23
0x4000ccf	      0xe8a6f4ffff	                               call sym.	       235	checkout.c	FUNCTION_8	CALL_23
0x4000cd4	          0x4889c2	                            mov rdx, rax	       235	checkout.c	FUNCTION_8	CALL_23
0x4000cd7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       235	checkout.c	FUNCTION_8	CALL_23
0x4000cde	          0x4889c6	                            mov rsi, rax	       235	checkout.c	FUNCTION_8	CALL_23
0x4000ce1	          0x4889d7	                            mov rdi, rdx	       235	checkout.c	FUNCTION_8	CALL_23
0x4000ce4	      0xb800000000	                              mov eax, 0	       235	checkout.c	FUNCTION_8	CALL_23
0x4000ce9	      0xe800000000	                          call 0x4000cee	       235	checkout.c	FUNCTION_8	CALL_23
0x4000cee	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       236	checkout.c	FUNCTION_8	CALL_24
0x4000cf5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       236	checkout.c	FUNCTION_8	CALL_24
0x4000cfc	      0xba00000000	                              mov edx, 0	       236	checkout.c	FUNCTION_8	CALL_24
0x4000d01	          0x4889ce	                            mov rsi, rcx	       236	checkout.c	FUNCTION_8	CALL_24
0x4000d04	          0x4889c7	                            mov rdi, rax	       236	checkout.c	FUNCTION_8	CALL_24
0x4000d07	      0xe800000000	                          call 0x4000d0c	       236	checkout.c	FUNCTION_8	CALL_24
0x4000d0c	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       236	checkout.c	FUNCTION_8	CALL_24
0x4000d12	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       237	checkout.c	FUNCTION_8	CALL_25
0x4000d19	          0x4889c7	                            mov rdi, rax	       237	checkout.c	FUNCTION_8	CALL_25
0x4000d1c	      0xe800000000	                          call 0x4000d21	       237	checkout.c	FUNCTION_8	CALL_25
0x4000d21	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       238	checkout.c	FUNCTION_8
0x4000d27	        0x488b4df8	                mov rcx, qword [rbp - 8]	       239	checkout.c	FUNCTION_8
0x4000d2b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       239	checkout.c	FUNCTION_8
0x4000d34	            0x7405	                            je 0x4000d3b	       239	checkout.c	FUNCTION_8
0x4000d36	      0xe800000000	                          call 0x4000d3b	       239	checkout.c	FUNCTION_8
0x4000d3b	              0xc9	                                   leave	       239	checkout.c	FUNCTION_8
0x4000d3c	              0xc3	                                     ret	       239	checkout.c	FUNCTION_8
post_checkout_hook	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	43
0x40003b7	              0x55	                                push rbp	        59	checkout.c	FUNCTION_1
0x40003b8	          0x4889e5	                            mov rbp, rsp	        59	checkout.c	FUNCTION_1
0x40003bb	            0x4154	                                push r12	        59	checkout.c	FUNCTION_1
0x40003bd	              0x53	                                push rbx	        59	checkout.c	FUNCTION_1
0x40003be	        0x4883ec20	                           sub rsp, 0x20	        59	checkout.c	FUNCTION_1
0x40003c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        59	checkout.c	FUNCTION_1
0x40003c6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        59	checkout.c	FUNCTION_1
0x40003ca	          0x8955dc	             mov dword [rbp - 0x24], edx	        59	checkout.c	FUNCTION_1
0x40003cd	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        60	checkout.c	FUNCTION_1	CALL_1
0x40003d1	            0x7408	                            je 0x40003db	        60	checkout.c	FUNCTION_1	CALL_1
0x40003d3	    0x41bc00000000	                             mov r12d, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x40003d9	            0xeb06	                           jmp 0x40003e1	        60	checkout.c	FUNCTION_1	CALL_1
0x40003db	    0x41bc00000000	                             mov r12d, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x40003e1	      0x48837de000	               cmp qword [rbp - 0x20], 0	        60	checkout.c	FUNCTION_1	CALL_1
0x40003e6	            0x740a	                            je 0x40003f2	        60	checkout.c	FUNCTION_1	CALL_1
0x40003e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	checkout.c	FUNCTION_1	CALL_1
0x40003ec	        0x4883c004	                              add rax, 4	        60	checkout.c	FUNCTION_1	CALL_1
0x40003f0	            0xeb05	                           jmp 0x40003f7	        60	checkout.c	FUNCTION_1	CALL_1
0x40003f2	      0xb800000000	                              mov eax, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x40003f7	          0x4889c7	                            mov rdi, rax	        60	checkout.c	FUNCTION_1	CALL_1
0x40003fa	      0xe800000000	                          call 0x40003ff	        60	checkout.c	FUNCTION_1	CALL_1
0x40003ff	          0x4889c3	                            mov rbx, rax	        60	checkout.c	FUNCTION_1	CALL_1
0x4000402	      0x48837de800	               cmp qword [rbp - 0x18], 0	        60	checkout.c	FUNCTION_1	CALL_1
0x4000407	            0x740a	                            je 0x4000413	        60	checkout.c	FUNCTION_1	CALL_1
0x4000409	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	checkout.c	FUNCTION_1	CALL_1
0x400040d	        0x4883c004	                              add rax, 4	        60	checkout.c	FUNCTION_1	CALL_1
0x4000411	            0xeb05	                           jmp 0x4000418	        60	checkout.c	FUNCTION_1	CALL_1
0x4000413	      0xb800000000	                              mov eax, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x4000418	          0x4889c7	                            mov rdi, rax	        60	checkout.c	FUNCTION_1	CALL_1
0x400041b	      0xe800000000	                          call 0x4000420	        60	checkout.c	FUNCTION_1	CALL_1
0x4000420	    0x41b900000000	                              mov r9d, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x4000426	          0x4d89e0	                             mov r8, r12	        60	checkout.c	FUNCTION_1	CALL_1
0x4000429	          0x4889d9	                            mov rcx, rbx	        60	checkout.c	FUNCTION_1	CALL_1
0x400042c	          0x4889c2	                            mov rdx, rax	        60	checkout.c	FUNCTION_1	CALL_1
0x400042f	      0xbe00000000	                              mov esi, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x4000434	      0xbf00000000	                              mov edi, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x4000439	      0xb800000000	                              mov eax, 0	        60	checkout.c	FUNCTION_1	CALL_1
0x400043e	      0xe800000000	                          call 0x4000443	        60	checkout.c	FUNCTION_1	CALL_1
0x4000443	        0x4883c420	                           add rsp, 0x20	        67	checkout.c	FUNCTION_1
0x4000447	              0x5b	                                 pop rbx	        67	checkout.c	FUNCTION_1
0x4000448	            0x415c	                                 pop r12	        67	checkout.c	FUNCTION_1
0x400044a	              0x5d	                                 pop rbp	        67	checkout.c	FUNCTION_1
0x400044b	              0xc3	                                     ret	        67	checkout.c	FUNCTION_1
checkout_stage	CALL,4:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,1	78
0x400086b	              0x55	                                push rbp	       161	checkout.c	FUNCTION_7
0x400086c	          0x4889e5	                            mov rbp, rsp	       161	checkout.c	FUNCTION_7
0x400086f	              0x53	                                push rbx	       161	checkout.c	FUNCTION_7
0x4000870	        0x4883ec28	                           sub rsp, 0x28	       161	checkout.c	FUNCTION_7
0x4000874	          0x897dec	             mov dword [rbp - 0x14], edi	       161	checkout.c	FUNCTION_7
0x4000877	        0x488975e0	             mov qword [rbp - 0x20], rsi	       161	checkout.c	FUNCTION_7
0x400087b	          0x8955e8	             mov dword [rbp - 0x18], edx	       161	checkout.c	FUNCTION_7
0x400087e	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       161	checkout.c	FUNCTION_7
0x4000882	            0xeb5f	                           jmp 0x40008e3	       162	checkout.c	FUNCTION_7	WHILE_1
0x4000884	    0x488b05000000	            mov rax, qword [0x0400088b] 	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x400088b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x400088e	          0x4863d2	                         movsxd rdx, edx	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x4000891	        0x48c1e203	                              shl rdx, 3	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x4000895	          0x4801d0	                            add rax, rdx	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x4000898	          0x488b00	                    mov rax, qword [rax]	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x400089b	          0x8b4038	            mov eax, dword [rax + 0x38] 	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x400089e	      0x2500300000	                         and eax, 0x3000	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008a3	          0xc1e80c	                            shr eax, 0xc	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008a6	            0x89c2	                            mov edx, eax	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008a8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008ab	            0x39c2	                            cmp edx, eax	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008ad	            0x7530	                           jne 0x40008df	       164	checkout.c	FUNCTION_7	WHILE_1	IF_1
0x40008af	    0x488b05000000	            mov rax, qword [0x040008b6] 	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008b6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008b9	          0x4863d2	                         movsxd rdx, edx	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008bc	        0x48c1e203	                              shl rdx, 3	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008c0	          0x4801d0	                            add rax, rdx	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008c3	          0x488b00	                    mov rax, qword [rax]	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008c6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008ca	      0xba00000000	                              mov edx, 0	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008cf	          0x4889ce	                            mov rsi, rcx	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008d2	          0x4889c7	                            mov rdi, rax	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008d5	      0xe800000000	                          call 0x40008da	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008da	      0xe99d000000	                           jmp 0x400097c	       165	checkout.c	FUNCTION_7	WHILE_1	CALL_2
0x40008df	        0x8345e801	               add dword [rbp - 0x18], 1	       166	checkout.c	FUNCTION_7	WHILE_1
0x40008e3	    0x8b1500000000	            mov edx, dword [0x040008e9] 	       162	checkout.c	FUNCTION_7	WHILE_1
0x40008e9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       162	checkout.c	FUNCTION_7	WHILE_1
0x40008ec	            0x39c2	                            cmp edx, eax	       162	checkout.c	FUNCTION_7	WHILE_1
0x40008ee	            0x7636	                           jbe 0x4000926	       162	checkout.c	FUNCTION_7	WHILE_1
0x40008f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x40008f4	        0x488d5058	                   lea rdx, [rax + 0x58]	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x40008f8	    0x488b05000000	            mov rax, qword [0x040008ff] 	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x40008ff	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000902	          0x4863c9	                         movsxd rcx, ecx	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000905	        0x48c1e103	                              shl rcx, 3	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000909	          0x4801c8	                            add rax, rcx	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x400090c	          0x488b00	                    mov rax, qword [rax]	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x400090f	        0x4883c058	                           add rax, 0x58	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000913	          0x4889d6	                            mov rsi, rdx	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000916	          0x4889c7	                            mov rdi, rax	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	       163	checkout.c	FUNCTION_7	WHILE_1	CALL_1
0x400091e	            0x85c0	                           test eax, eax	       162	checkout.c	FUNCTION_7	WHILE_1
0x4000920	     0xf845effffff	                            je 0x4000884	       162	checkout.c	FUNCTION_7	WHILE_1
0x4000926	        0x837dec02	               cmp dword [rbp - 0x14], 2	       168	checkout.c	FUNCTION_7	IF_2
0x400092a	            0x7529	                           jne 0x4000955	       168	checkout.c	FUNCTION_7	IF_2
0x400092c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       169	checkout.c	FUNCTION_7	CALL_3
0x4000930	        0x488d5858	                   lea rbx, [rax + 0x58]	       169	checkout.c	FUNCTION_7	CALL_3
0x4000934	      0xbf00000000	                              mov edi, 0	       169	checkout.c	FUNCTION_7	CALL_3
0x4000939	      0xe83cf8ffff	                               call sym.	       169	checkout.c	FUNCTION_7	CALL_3
0x400093e	          0x4889de	                            mov rsi, rbx	       169	checkout.c	FUNCTION_7	CALL_3
0x4000941	          0x4889c7	                            mov rdi, rax	       169	checkout.c	FUNCTION_7	CALL_3
0x4000944	      0xb800000000	                              mov eax, 0	       169	checkout.c	FUNCTION_7	CALL_3
0x4000949	      0xe800000000	                          call 0x400094e	       169	checkout.c	FUNCTION_7	CALL_3
0x400094e	      0xe8edf6ffff	                    call sym.const_error	       169	checkout.c	FUNCTION_7	CALL_3
0x4000953	            0xeb27	                           jmp 0x400097c	       169	checkout.c	FUNCTION_7	CALL_3
0x4000955	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       171	checkout.c	FUNCTION_7	CALL_4
0x4000959	        0x488d5858	                   lea rbx, [rax + 0x58]	       171	checkout.c	FUNCTION_7	CALL_4
0x400095d	      0xbf00000000	                              mov edi, 0	       171	checkout.c	FUNCTION_7	CALL_4
0x4000962	      0xe813f8ffff	                               call sym.	       171	checkout.c	FUNCTION_7	CALL_4
0x4000967	          0x4889de	                            mov rsi, rbx	       171	checkout.c	FUNCTION_7	CALL_4
0x400096a	          0x4889c7	                            mov rdi, rax	       171	checkout.c	FUNCTION_7	CALL_4
0x400096d	      0xb800000000	                              mov eax, 0	       171	checkout.c	FUNCTION_7	CALL_4
0x4000972	      0xe800000000	                          call 0x4000977	       171	checkout.c	FUNCTION_7	CALL_4
0x4000977	      0xe8c4f6ffff	                    call sym.const_error	       171	checkout.c	FUNCTION_7	CALL_4
0x400097c	        0x4883c428	                           add rsp, 0x28	       172	checkout.c	FUNCTION_7
0x4000980	              0x5b	                                 pop rbx	       172	checkout.c	FUNCTION_7
0x4000981	              0x5d	                                 pop rbp	       172	checkout.c	FUNCTION_7
0x4000982	              0xc3	                                     ret	       172	checkout.c	FUNCTION_7
read_tree_some	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	20
0x4000619	              0x55	                                push rbp	       109	checkout.c	FUNCTION_3
0x400061a	          0x4889e5	                            mov rbp, rsp	       109	checkout.c	FUNCTION_3
0x400061d	        0x4883ec10	                           sub rsp, 0x10	       109	checkout.c	FUNCTION_3
0x4000621	        0x48897df8	                mov qword [rbp - 8], rdi	       109	checkout.c	FUNCTION_3
0x4000625	        0x488975f0	             mov qword [rbp - 0x10], rsi	       109	checkout.c	FUNCTION_3
0x4000629	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       110	checkout.c	FUNCTION_3	CALL_1
0x400062d	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	checkout.c	FUNCTION_3	CALL_1
0x4000631	        0x4883ec08	                              sub rsp, 8	       110	checkout.c	FUNCTION_3	CALL_1
0x4000635	            0x6a00	                                  push 0	       110	checkout.c	FUNCTION_3	CALL_1
0x4000637	    0x41b900000000	                              mov r9d, 0	       110	checkout.c	FUNCTION_3	CALL_1
0x400063d	          0x4989d0	                             mov r8, rdx	       110	checkout.c	FUNCTION_3	CALL_1
0x4000640	      0xb900000000	                              mov ecx, 0	       110	checkout.c	FUNCTION_3	CALL_1
0x4000645	      0xba00000000	                              mov edx, 0	       110	checkout.c	FUNCTION_3	CALL_1
0x400064a	      0xbe00000000	                              mov esi, 0	       110	checkout.c	FUNCTION_3	CALL_1
0x400064f	          0x4889c7	                            mov rdi, rax	       110	checkout.c	FUNCTION_3	CALL_1
0x4000652	      0xe800000000	                          call 0x4000657	       110	checkout.c	FUNCTION_3	CALL_1
0x4000657	        0x4883c410	                           add rsp, 0x10	       110	checkout.c	FUNCTION_3	CALL_1
0x400065b	      0xb800000000	                              mov eax, 0	       116	checkout.c	FUNCTION_3
0x4000660	              0xc9	                                   leave	       117	checkout.c	FUNCTION_3
0x4000661	              0xc3	                                     ret	       117	checkout.c	FUNCTION_3
switch_branches	CALL,13:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,7:WHILE,0	135
0x400289b	              0x55	                                push rbp	       822	checkout.c	FUNCTION_21
0x400289c	          0x4889e5	                            mov rbp, rsp	       822	checkout.c	FUNCTION_21
0x400289f	        0x4883ec70	                           sub rsp, 0x70	       822	checkout.c	FUNCTION_21
0x40028a3	        0x48897d98	             mov qword [rbp - 0x68], rdi	       822	checkout.c	FUNCTION_21
0x40028a7	        0x48897590	             mov qword [rbp - 0x70], rsi	       822	checkout.c	FUNCTION_21
0x40028ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       822	checkout.c	FUNCTION_21
0x40028b4	        0x488945f8	                mov qword [rbp - 8], rax	       822	checkout.c	FUNCTION_21
0x40028b8	            0x31c0	                            xor eax, eax	       822	checkout.c	FUNCTION_21
0x40028ba	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       823	checkout.c	FUNCTION_21
0x40028c1	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       827	checkout.c	FUNCTION_21
0x40028c8	        0x488d45c0	                   lea rax, [rbp - 0x40]	       828	checkout.c	FUNCTION_21	CALL_1
0x40028cc	      0xba20000000	                           mov edx, 0x20	       828	checkout.c	FUNCTION_21	CALL_1
0x40028d1	      0xbe00000000	                              mov esi, 0	       828	checkout.c	FUNCTION_21	CALL_1
0x40028d6	          0x4889c7	                            mov rdi, rax	       828	checkout.c	FUNCTION_21	CALL_1
0x40028d9	      0xe800000000	                          call 0x40028de	       828	checkout.c	FUNCTION_21	CALL_1
0x40028de	        0x488d55ac	                   lea rdx, [rbp - 0x54]	       829	checkout.c	FUNCTION_21	CALL_2
0x40028e2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       829	checkout.c	FUNCTION_21	CALL_2
0x40028e6	          0x4889d1	                            mov rcx, rdx	       829	checkout.c	FUNCTION_21	CALL_2
0x40028e9	          0x4889c2	                            mov rdx, rax	       829	checkout.c	FUNCTION_21	CALL_2
0x40028ec	      0xbe00000000	                              mov esi, 0	       829	checkout.c	FUNCTION_21	CALL_2
0x40028f1	      0xbf00000000	                              mov edi, 0	       829	checkout.c	FUNCTION_21	CALL_2
0x40028f6	      0xe800000000	                          call 0x40028fb	       829	checkout.c	FUNCTION_21	CALL_2
0x40028fb	        0x488945b8	             mov qword [rbp - 0x48], rax	       829	checkout.c	FUNCTION_21	CALL_2
0x40028ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       829	checkout.c	FUNCTION_21	CALL_2
0x4002903	        0x488945c8	             mov qword [rbp - 0x38], rax	       829	checkout.c	FUNCTION_21	CALL_2
0x4002907	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       830	checkout.c	FUNCTION_21	IF_1
0x400290b	          0x4885c0	                           test rax, rax	       830	checkout.c	FUNCTION_21	IF_1
0x400290e	            0x7415	                            je 0x4002925	       830	checkout.c	FUNCTION_21	IF_1
0x4002910	        0x488d45e0	                   lea rax, [rbp - 0x20]	       831	checkout.c	FUNCTION_21	CALL_3
0x4002914	      0xbe01000000	                              mov esi, 1	       831	checkout.c	FUNCTION_21	CALL_3
0x4002919	          0x4889c7	                            mov rdi, rax	       831	checkout.c	FUNCTION_21	CALL_3
0x400291c	      0xe800000000	                          call 0x4002921	       831	checkout.c	FUNCTION_21	CALL_3
0x4002921	        0x488945d0	             mov qword [rbp - 0x30], rax	       831	checkout.c	FUNCTION_21	CALL_3
0x4002925	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       832	checkout.c	FUNCTION_21	IF_2
0x4002928	          0x83e001	                              and eax, 1	       832	checkout.c	FUNCTION_21	IF_2
0x400292b	            0x85c0	                           test eax, eax	       832	checkout.c	FUNCTION_21	IF_2
0x400292d	            0x7508	                           jne 0x4002937	       832	checkout.c	FUNCTION_21	IF_2
0x400292f	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       833	checkout.c	FUNCTION_21	IF_2
0x4002937	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       835	checkout.c	FUNCTION_21	IF_3
0x400293b	          0x4885c0	                           test rax, rax	       835	checkout.c	FUNCTION_21	IF_3
0x400293e	            0x7415	                            je 0x4002955	       835	checkout.c	FUNCTION_21	IF_3
0x4002940	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       836	checkout.c	FUNCTION_21	CALL_4
0x4002944	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       836	checkout.c	FUNCTION_21	CALL_4
0x4002948	      0xbe00000000	                              mov esi, 0	       836	checkout.c	FUNCTION_21	CALL_4
0x400294d	          0x4889c7	                            mov rdi, rax	       836	checkout.c	FUNCTION_21	CALL_4
0x4002950	      0xe8f6d6ffff	                    call sym.skip_prefix	       836	checkout.c	FUNCTION_21	CALL_4
0x4002955	        0x488b4590	             mov rax, qword [rbp - 0x70]	       838	checkout.c	FUNCTION_21	IF_4
0x4002959	          0x488b00	                    mov rax, qword [rax]	       838	checkout.c	FUNCTION_21	IF_4
0x400295c	          0x4885c0	                           test rax, rax	       838	checkout.c	FUNCTION_21	IF_4
0x400295f	            0x754b	                           jne 0x40029ac	       838	checkout.c	FUNCTION_21	IF_4
0x4002961	        0x488b4590	             mov rax, qword [rbp - 0x70]	       839	checkout.c	FUNCTION_21	IF_4
0x4002965	    0x48c700000000	                      mov qword [rax], 0	       839	checkout.c	FUNCTION_21	IF_4
0x400296c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       840	checkout.c	FUNCTION_21	IF_4
0x4002970	        0x488b4590	             mov rax, qword [rbp - 0x70]	       840	checkout.c	FUNCTION_21	IF_4
0x4002974	        0x48895010	             mov qword [rax + 0x10], rdx	       840	checkout.c	FUNCTION_21	IF_4
0x4002978	        0x488b4590	             mov rax, qword [rbp - 0x70]	       841	checkout.c	FUNCTION_21	IF_4	IF_5
0x400297c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       841	checkout.c	FUNCTION_21	IF_4	IF_5
0x4002980	          0x4885c0	                           test rax, rax	       841	checkout.c	FUNCTION_21	IF_4	IF_5
0x4002983	            0x7517	                           jne 0x400299c	       841	checkout.c	FUNCTION_21	IF_4	IF_5
0x4002985	      0xbf00000000	                              mov edi, 0	       842	checkout.c	FUNCTION_21	IF_4	CALL_6
0x400298a	      0xe8ebd7ffff	                               call sym.	       842	checkout.c	FUNCTION_21	IF_4	CALL_6
0x400298f	          0x4889c7	                            mov rdi, rax	       842	checkout.c	FUNCTION_21	IF_4	CALL_6
0x4002992	      0xb800000000	                              mov eax, 0	       842	checkout.c	FUNCTION_21	IF_4	CALL_6
0x4002997	      0xe800000000	                          call 0x400299c	       842	checkout.c	FUNCTION_21	IF_4	CALL_6
0x400299c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       843	checkout.c	FUNCTION_21	IF_4	CALL_7
0x40029a0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       843	checkout.c	FUNCTION_21	IF_4	CALL_7
0x40029a4	          0x4889c7	                            mov rdi, rax	       843	checkout.c	FUNCTION_21	IF_4	CALL_7
0x40029a7	      0xe800000000	                          call 0x40029ac	       843	checkout.c	FUNCTION_21	IF_4	CALL_7
0x40029ac	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       846	checkout.c	FUNCTION_21	CALL_8
0x40029b0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       846	checkout.c	FUNCTION_21	CALL_8
0x40029b4	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       846	checkout.c	FUNCTION_21	CALL_8
0x40029b8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       846	checkout.c	FUNCTION_21	CALL_8
0x40029bc	          0x4889c7	                            mov rdi, rax	       846	checkout.c	FUNCTION_21	CALL_8
0x40029bf	      0xe8b9eeffff	             call sym.merge_working_tree	       846	checkout.c	FUNCTION_21	CALL_8
0x40029c4	          0x8945b4	             mov dword [rbp - 0x4c], eax	       846	checkout.c	FUNCTION_21	CALL_8
0x40029c7	        0x837db400	               cmp dword [rbp - 0x4c], 0	       847	checkout.c	FUNCTION_21	IF_6
0x40029cb	            0x7414	                            je 0x40029e1	       847	checkout.c	FUNCTION_21	IF_6
0x40029cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       848	checkout.c	FUNCTION_21	IF_6	CALL_9
0x40029d1	          0x4889c7	                            mov rdi, rax	       848	checkout.c	FUNCTION_21	IF_6	CALL_9
0x40029d4	      0xe800000000	                          call 0x40029d9	       848	checkout.c	FUNCTION_21	IF_6	CALL_9
0x40029d9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       849	checkout.c	FUNCTION_21	IF_6
0x40029dc	      0xe9a1000000	                           jmp 0x4002a82	       849	checkout.c	FUNCTION_21	IF_6
0x40029e1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       852	checkout.c	FUNCTION_21	IF_7
0x40029e5	          0x8b4004	                mov eax, dword [rax + 4]	       852	checkout.c	FUNCTION_21	IF_7
0x40029e8	            0x85c0	                           test eax, eax	       852	checkout.c	FUNCTION_21	IF_7
0x40029ea	            0x753a	                           jne 0x4002a26	       852	checkout.c	FUNCTION_21	IF_7
0x40029ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	checkout.c	FUNCTION_21	IF_7
0x40029f0	          0x4885c0	                           test rax, rax	       852	checkout.c	FUNCTION_21	IF_7
0x40029f3	            0x7531	                           jne 0x4002a26	       852	checkout.c	FUNCTION_21	IF_7
0x40029f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       852	checkout.c	FUNCTION_21	IF_7
0x40029f9	          0x4885c0	                           test rax, rax	       852	checkout.c	FUNCTION_21	IF_7
0x40029fc	            0x7428	                            je 0x4002a26	       852	checkout.c	FUNCTION_21	IF_7
0x40029fe	        0x488b4590	             mov rax, qword [rbp - 0x70]	       852	checkout.c	FUNCTION_21	IF_7
0x4002a02	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       852	checkout.c	FUNCTION_21	IF_7
0x4002a06	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       852	checkout.c	FUNCTION_21	IF_7
0x4002a0a	          0x4839c2	                            cmp rdx, rax	       852	checkout.c	FUNCTION_21	IF_7
0x4002a0d	            0x7417	                            je 0x4002a26	       852	checkout.c	FUNCTION_21	IF_7
0x4002a0f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a13	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a1b	          0x4889d6	                            mov rsi, rdx	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a1e	          0x4889c7	                            mov rdi, rax	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a21	      0xe8d3fcffff	        call sym.orphaned_commit_warning	       853	checkout.c	FUNCTION_21	CALL_10
0x4002a26	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a2a	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a2e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a32	          0x4889ce	                            mov rsi, rcx	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a35	          0x4889c7	                            mov rdi, rax	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a38	      0xe890f4ffff	         call sym.update_refs_for_switch	       855	checkout.c	FUNCTION_21	CALL_11
0x4002a3d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a41	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a45	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a49	      0xba01000000	                              mov edx, 1	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a4e	          0x4889ce	                            mov rsi, rcx	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a51	          0x4889c7	                            mov rdi, rax	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a54	      0xe85ed9ffff	             call sym.post_checkout_hook	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a59	          0x8945b4	             mov dword [rbp - 0x4c], eax	       857	checkout.c	FUNCTION_21	CALL_12
0x4002a5c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       858	checkout.c	FUNCTION_21	CALL_13
0x4002a60	          0x4889c7	                            mov rdi, rax	       858	checkout.c	FUNCTION_21	CALL_13
0x4002a63	      0xe800000000	                          call 0x4002a68	       858	checkout.c	FUNCTION_21	CALL_13
0x4002a68	        0x837db400	               cmp dword [rbp - 0x4c], 0	       859	checkout.c	FUNCTION_21
0x4002a6c	            0x7507	                           jne 0x4002a75	       859	checkout.c	FUNCTION_21
0x4002a6e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       859	checkout.c	FUNCTION_21
0x4002a71	            0x85c0	                           test eax, eax	       859	checkout.c	FUNCTION_21
0x4002a73	            0x7407	                            je 0x4002a7c	       859	checkout.c	FUNCTION_21
0x4002a75	      0xb801000000	                              mov eax, 1	       859	checkout.c	FUNCTION_21
0x4002a7a	            0xeb05	                           jmp 0x4002a81	       859	checkout.c	FUNCTION_21
0x4002a7c	      0xb800000000	                              mov eax, 0	       859	checkout.c	FUNCTION_21
0x4002a81	              0x90	                                     nop	       859	checkout.c	FUNCTION_21
0x4002a82	        0x488b4df8	                mov rcx, qword [rbp - 8]	       860	checkout.c	FUNCTION_21
0x4002a86	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       860	checkout.c	FUNCTION_21
0x4002a8f	            0x7405	                            je 0x4002a96	       860	checkout.c	FUNCTION_21
0x4002a91	      0xe800000000	                          call 0x4002a96	       860	checkout.c	FUNCTION_21
0x4002a96	              0xc9	                                   leave	       860	checkout.c	FUNCTION_21
0x4002a97	              0xc3	                                     ret	       860	checkout.c	FUNCTION_21
create_ce_mode	CALL,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,0	28
0x40001e2	              0x55	                                push rbp	       255	cache.h	FUNCTION_40
0x40001e3	          0x4889e5	                            mov rbp, rsp	       255	cache.h	FUNCTION_40
0x40001e6	          0x897dfc	                mov dword [rbp - 4], edi	       255	cache.h	FUNCTION_40
0x40001e9	          0x8b45fc	                mov eax, dword [rbp - 4]	       256	cache.h	FUNCTION_40	IF_1	CALL_1
0x40001ec	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_40	IF_1	CALL_1
0x40001f1	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_40	IF_1	CALL_1
0x40001f6	            0x7507	                           jne 0x40001ff	       256	cache.h	FUNCTION_40	IF_1	CALL_1
0x40001f8	      0xb800a00000	                         mov eax, 0xa000	       257	cache.h	FUNCTION_40	IF_1
0x40001fd	            0xeb3b	                           jmp 0x400023a	       257	cache.h	FUNCTION_40	IF_1
0x40001ff	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x4000202	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x4000207	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x400020c	            0x740f	                            je 0x400021d	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x400020e	          0x8b45fc	                mov eax, dword [rbp - 4]	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x4000211	      0x2500f00000	                         and eax, 0xf000	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x4000216	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x400021b	            0x7507	                           jne 0x4000224	       258	cache.h	FUNCTION_40	IF_2	CALL_2
0x400021d	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_40	IF_2
0x4000222	            0xeb16	                           jmp 0x400023a	       259	cache.h	FUNCTION_40	IF_2
0x4000224	          0x8b45fc	                mov eax, dword [rbp - 4]	       260	cache.h	FUNCTION_40
0x4000227	          0x83e040	                           and eax, 0x40	       260	cache.h	FUNCTION_40
0x400022a	            0x85c0	                           test eax, eax	       260	cache.h	FUNCTION_40
0x400022c	            0x7407	                            je 0x4000235	       260	cache.h	FUNCTION_40
0x400022e	      0xb8ed810000	                         mov eax, 0x81ed	       260	cache.h	FUNCTION_40
0x4000233	            0xeb05	                           jmp 0x400023a	       260	cache.h	FUNCTION_40
0x4000235	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_40
0x400023a	              0x5d	                                 pop rbp	       261	cache.h	FUNCTION_40
0x400023b	              0xc3	                                     ret	       261	cache.h	FUNCTION_40
check_stage	CALL,3:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,1	67
0x40006b9	              0x55	                                push rbp	       128	checkout.c	FUNCTION_5
0x40006ba	          0x4889e5	                            mov rbp, rsp	       128	checkout.c	FUNCTION_5
0x40006bd	              0x53	                                push rbx	       128	checkout.c	FUNCTION_5
0x40006be	        0x4883ec18	                           sub rsp, 0x18	       128	checkout.c	FUNCTION_5
0x40006c2	          0x897dec	             mov dword [rbp - 0x14], edi	       128	checkout.c	FUNCTION_5
0x40006c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       128	checkout.c	FUNCTION_5
0x40006c9	          0x8955e8	             mov dword [rbp - 0x18], edx	       128	checkout.c	FUNCTION_5
0x40006cc	            0xeb39	                           jmp 0x4000707	       129	checkout.c	FUNCTION_5	WHILE_1
0x40006ce	    0x488b05000000	            mov rax, qword [0x040006d5] 	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006d5	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006d8	          0x4863d2	                         movsxd rdx, edx	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006db	        0x48c1e203	                              shl rdx, 3	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006df	          0x4801d0	                            add rax, rdx	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006e2	          0x488b00	                    mov rax, qword [rax]	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006e5	          0x8b4038	            mov eax, dword [rax + 0x38] 	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006e8	      0x2500300000	                         and eax, 0x3000	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006ed	          0xc1e80c	                            shr eax, 0xc	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006f0	            0x89c2	                            mov edx, eax	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006f2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006f5	            0x39c2	                            cmp edx, eax	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006f7	            0x750a	                           jne 0x4000703	       131	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006f9	      0xb800000000	                              mov eax, 0	       132	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x40006fe	      0xe999000000	                           jmp 0x400079c	       132	checkout.c	FUNCTION_5	WHILE_1	IF_1
0x4000703	        0x8345e801	               add dword [rbp - 0x18], 1	       133	checkout.c	FUNCTION_5	WHILE_1
0x4000707	    0x8b1500000000	            mov edx, dword [0x0400070d] 	       129	checkout.c	FUNCTION_5	WHILE_1
0x400070d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       129	checkout.c	FUNCTION_5	WHILE_1
0x4000710	            0x39c2	                            cmp edx, eax	       129	checkout.c	FUNCTION_5	WHILE_1
0x4000712	            0x7632	                           jbe 0x4000746	       129	checkout.c	FUNCTION_5	WHILE_1
0x4000714	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000718	        0x488d5058	                   lea rdx, [rax + 0x58]	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x400071c	    0x488b05000000	            mov rax, qword [0x04000723] 	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000723	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000726	          0x4863c9	                         movsxd rcx, ecx	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000729	        0x48c1e103	                              shl rcx, 3	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x400072d	          0x4801c8	                            add rax, rcx	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000730	          0x488b00	                    mov rax, qword [rax]	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000733	        0x4883c058	                           add rax, 0x58	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000737	          0x4889d6	                            mov rsi, rdx	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x400073a	          0x4889c7	                            mov rdi, rax	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x400073d	      0xe800000000	                          call 0x4000742	       130	checkout.c	FUNCTION_5	WHILE_1	CALL_1
0x4000742	            0x85c0	                           test eax, eax	       129	checkout.c	FUNCTION_5	WHILE_1
0x4000744	            0x7488	                            je 0x40006ce	       129	checkout.c	FUNCTION_5	WHILE_1
0x4000746	        0x837dec02	               cmp dword [rbp - 0x14], 2	       135	checkout.c	FUNCTION_5	IF_2
0x400074a	            0x7529	                           jne 0x4000775	       135	checkout.c	FUNCTION_5	IF_2
0x400074c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       136	checkout.c	FUNCTION_5	CALL_2
0x4000750	        0x488d5858	                   lea rbx, [rax + 0x58]	       136	checkout.c	FUNCTION_5	CALL_2
0x4000754	      0xbf00000000	                              mov edi, 0	       136	checkout.c	FUNCTION_5	CALL_2
0x4000759	      0xe81cfaffff	                               call sym.	       136	checkout.c	FUNCTION_5	CALL_2
0x400075e	          0x4889de	                            mov rsi, rbx	       136	checkout.c	FUNCTION_5	CALL_2
0x4000761	          0x4889c7	                            mov rdi, rax	       136	checkout.c	FUNCTION_5	CALL_2
0x4000764	      0xb800000000	                              mov eax, 0	       136	checkout.c	FUNCTION_5	CALL_2
0x4000769	      0xe800000000	                          call 0x400076e	       136	checkout.c	FUNCTION_5	CALL_2
0x400076e	      0xe8cdf8ffff	                    call sym.const_error	       136	checkout.c	FUNCTION_5	CALL_2
0x4000773	            0xeb27	                           jmp 0x400079c	       136	checkout.c	FUNCTION_5	CALL_2
0x4000775	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       138	checkout.c	FUNCTION_5	CALL_3
0x4000779	        0x488d5858	                   lea rbx, [rax + 0x58]	       138	checkout.c	FUNCTION_5	CALL_3
0x400077d	      0xbf00000000	                              mov edi, 0	       138	checkout.c	FUNCTION_5	CALL_3
0x4000782	      0xe8f3f9ffff	                               call sym.	       138	checkout.c	FUNCTION_5	CALL_3
0x4000787	          0x4889de	                            mov rsi, rbx	       138	checkout.c	FUNCTION_5	CALL_3
0x400078a	          0x4889c7	                            mov rdi, rax	       138	checkout.c	FUNCTION_5	CALL_3
0x400078d	      0xb800000000	                              mov eax, 0	       138	checkout.c	FUNCTION_5	CALL_3
0x4000792	      0xe800000000	                          call 0x4000797	       138	checkout.c	FUNCTION_5	CALL_3
0x4000797	      0xe8a4f8ffff	                    call sym.const_error	       138	checkout.c	FUNCTION_5	CALL_3
0x400079c	        0x4883c418	                           add rsp, 0x18	       139	checkout.c	FUNCTION_5
0x40007a0	              0x5b	                                 pop rbx	       139	checkout.c	FUNCTION_5
0x40007a1	              0x5d	                                 pop rbp	       139	checkout.c	FUNCTION_5
0x40007a2	              0xc3	                                     ret	       139	checkout.c	FUNCTION_5
git_checkout_config	CALL,5:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,0	43
0x4002a98	              0x55	                                push rbp	       863	checkout.c	FUNCTION_22
0x4002a99	          0x4889e5	                            mov rbp, rsp	       863	checkout.c	FUNCTION_22
0x4002a9c	        0x4883ec30	                           sub rsp, 0x30	       863	checkout.c	FUNCTION_22
0x4002aa0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       863	checkout.c	FUNCTION_22
0x4002aa4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       863	checkout.c	FUNCTION_22
0x4002aa8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       863	checkout.c	FUNCTION_22
0x4002aac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002ab0	      0xbe00000000	                              mov esi, 0	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002ab5	          0x4889c7	                            mov rdi, rax	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002ab8	      0xe800000000	                          call 0x4002abd	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002abd	            0x85c0	                           test eax, eax	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002abf	            0x7526	                           jne 0x4002ae7	       864	checkout.c	FUNCTION_22	IF_1	CALL_1
0x4002ac1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       865	checkout.c	FUNCTION_22	IF_1
0x4002ac5	        0x488945f8	                mov qword [rbp - 8], rax	       865	checkout.c	FUNCTION_22	IF_1
0x4002ac9	        0x488b45f8	                mov rax, qword [rbp - 8]	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002acd	        0x488d5048	                   lea rdx, [rax + 0x48]	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002ad1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002ad5	          0x4889c6	                            mov rsi, rax	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002ad8	          0x4889d7	                            mov rdi, rdx	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002adb	      0xe800000000	                          call 0x4002ae0	       866	checkout.c	FUNCTION_22	IF_1	CALL_2
0x4002ae0	      0xb800000000	                              mov eax, 0	       867	checkout.c	FUNCTION_22	IF_1
0x4002ae5	            0xeb47	                           jmp 0x4002b2e	       867	checkout.c	FUNCTION_22	IF_1
0x4002ae7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002aeb	      0xbe00000000	                              mov esi, 0	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002af0	          0x4889c7	                            mov rdi, rax	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002af3	      0xe800000000	                          call 0x4002af8	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002af8	            0x85c0	                           test eax, eax	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002afa	            0x741a	                            je 0x4002b16	       870	checkout.c	FUNCTION_22	IF_2	CALL_3
0x4002afc	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b04	      0xba00000000	                              mov edx, 0	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b09	          0x4889ce	                            mov rsi, rcx	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b0c	          0x4889c7	                            mov rdi, rax	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b0f	      0xe800000000	                          call 0x4002b14	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b14	            0xeb18	                           jmp 0x4002b2e	       871	checkout.c	FUNCTION_22	CALL_4
0x4002b16	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b1e	      0xba00000000	                              mov edx, 0	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b23	          0x4889ce	                            mov rsi, rcx	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b26	          0x4889c7	                            mov rdi, rax	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b29	      0xe800000000	                          call 0x4002b2e	       873	checkout.c	FUNCTION_22	CALL_5
0x4002b2e	              0xc9	                                   leave	       874	checkout.c	FUNCTION_22
0x4002b2f	              0xc3	                                     ret	       874	checkout.c	FUNCTION_22
hashcpy	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	14
0x40002b2	              0x55	                                push rbp	       994	cache.h	FUNCTION_49
0x40002b3	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_49
0x40002b6	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_49
0x40002ba	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_49
0x40002be	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_49
0x40002c2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_49	CALL_1
0x40002c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_49	CALL_1
0x40002ca	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_49	CALL_1
0x40002cf	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_49	CALL_1
0x40002d2	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_49	CALL_1
0x40002d5	      0xe800000000	                          call 0x40002da	       995	cache.h	FUNCTION_49	CALL_1
0x40002da	              0x90	                                     nop	       996	cache.h	FUNCTION_49
0x40002db	              0xc9	                                   leave	       996	cache.h	FUNCTION_49
0x40002dc	              0xc3	                                     ret	       996	cache.h	FUNCTION_49
update_refs_for_switch	CALL,42:functions,0:ELSE,8:SWITCH,0:FOR,0:DO,0:IF,20:WHILE,0	374
0x4001ecd	              0x55	                                push rbp	       627	checkout.c	FUNCTION_16
0x4001ece	          0x4889e5	                            mov rbp, rsp	       627	checkout.c	FUNCTION_16
0x4001ed1	            0x4154	                                push r12	       627	checkout.c	FUNCTION_16
0x4001ed3	              0x53	                                push rbx	       627	checkout.c	FUNCTION_16
0x4001ed4	        0x4883c480	             add rsp, 0xffffffffffffff80	       627	checkout.c	FUNCTION_16
0x4001ed8	        0x48897d88	             mov qword [rbp - 0x78], rdi	       627	checkout.c	FUNCTION_16
0x4001edc	        0x48897580	             mov qword [rbp - 0x80], rsi	       627	checkout.c	FUNCTION_16
0x4001ee0	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       627	checkout.c	FUNCTION_16
0x4001ee7	    0x64488b042528	                mov rax, qword fs:[0x28]	       627	checkout.c	FUNCTION_16
0x4001ef0	        0x488945e8	             mov qword [rbp - 0x18], rax	       627	checkout.c	FUNCTION_16
0x4001ef4	            0x31c0	                            xor eax, eax	       627	checkout.c	FUNCTION_16
0x4001ef6	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       628	checkout.c	FUNCTION_16
0x4001efe	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       628	checkout.c	FUNCTION_16
0x4001f06	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       628	checkout.c	FUNCTION_16
0x4001f0e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       630	checkout.c	FUNCTION_16	IF_1
0x4001f12	        0x488b4028	            mov rax, qword [rax + 0x28] 	       630	checkout.c	FUNCTION_16	IF_1
0x4001f16	          0x4885c0	                           test rax, rax	       630	checkout.c	FUNCTION_16	IF_1
0x4001f19	     0xf846f010000	                            je 0x400208e	       630	checkout.c	FUNCTION_16	IF_1
0x4001f1f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       631	checkout.c	FUNCTION_16	IF_1	IF_2
0x4001f23	        0x488b4038	            mov rax, qword [rax + 0x38] 	       631	checkout.c	FUNCTION_16	IF_1	IF_2
0x4001f27	          0x4885c0	                           test rax, rax	       631	checkout.c	FUNCTION_16	IF_1	IF_2
0x4001f2a	     0xf84e1000000	                            je 0x4002011	       631	checkout.c	FUNCTION_16	IF_1	IF_2
0x4001f30	        0x488b4588	             mov rax, qword [rbp - 0x78]	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f34	        0x488b4038	            mov rax, qword [rax + 0x38] 	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f38	          0x4889c6	                            mov rsi, rax	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f3b	      0xbf00000000	                              mov edi, 0	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f40	      0xb800000000	                              mov eax, 0	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f45	      0xe800000000	                          call 0x4001f4a	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f4a	        0x488945a0	             mov qword [rbp - 0x60], rax	       634	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001f4e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f52	          0x8b4040	            mov eax, dword [rax + 0x40] 	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f55	            0x85c0	                           test eax, eax	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f57	     0xf84a6000000	                            je 0x4002003	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f5d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       636	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001f61	          0x4889c7	                            mov rdi, rax	       636	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001f64	      0xe800000000	                          call 0x4001f69	       636	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001f69	            0x85c0	                           test eax, eax	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f6b	     0xf8592000000	                           jne 0x4002003	       635	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f71	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       638	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f79	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       638	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f81	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       638	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4001f89	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001f8d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001f91	      0xbe01000000	                              mov esi, 1	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001f96	          0x4889c7	                            mov rdi, rax	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001f99	      0xe800000000	                          call 0x4001f9e	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001f9e	          0x894594	             mov dword [rbp - 0x6c], eax	       640	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001fa1	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       641	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4
0x4001fa5	            0x7450	                            je 0x4001ff7	       641	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4
0x4001fa7	        0x4c8b65e0	             mov r12, qword [rbp - 0x20]	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fab	        0x488b4588	             mov rax, qword [rbp - 0x78]	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001faf	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fb3	      0xbf00000000	                              mov edi, 0	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fb8	      0xe8bde1ffff	                               call sym.	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fbd	          0x4889c6	                            mov rsi, rax	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fc0	    0x488b05000000	            mov rax, qword [0x04001fc7] 	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fc7	          0x4c89e1	                            mov rcx, r12	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fca	          0x4889da	                            mov rdx, rbx	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fcd	          0x4889c7	                            mov rdi, rax	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fd0	      0xb800000000	                              mov eax, 0	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fd5	      0xe800000000	                          call 0x4001fda	       642	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4001fda	        0x488d45d0	                   lea rax, [rbp - 0x30]	       644	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_6
0x4001fde	          0x4889c7	                            mov rdi, rax	       644	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_6
0x4001fe1	      0xe800000000	                          call 0x4001fe6	       644	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_6
0x4001fe6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       645	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001fea	          0x4889c7	                            mov rdi, rax	       645	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001fed	      0xe800000000	                          call 0x4001ff2	       645	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001ff2	      0xe99a040000	                           jmp 0x4002491	       645	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	IF_4	CALL_7
0x4001ff7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       648	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_8
0x4001ffb	          0x4889c7	                            mov rdi, rax	       648	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_8
0x4001ffe	      0xe800000000	                          call 0x4002003	       648	checkout.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_8
0x4002003	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       650	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_9
0x4002007	          0x4889c7	                            mov rdi, rax	       650	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_9
0x400200a	      0xe800000000	                          call 0x400200f	       650	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_9
0x400200f	            0xeb5c	                           jmp 0x400206d	       650	checkout.c	FUNCTION_16	IF_1	IF_2	CALL_9
0x4002011	        0x488b4588	             mov rax, qword [rbp - 0x78]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002015	          0x8b7844	            mov edi, dword [rax + 0x44] 	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002018	        0x488b4588	             mov rax, qword [rbp - 0x78]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x400201c	        0x448b4804	                mov r9d, dword [rax + 4]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002020	        0x488b4588	             mov rax, qword [rbp - 0x78]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002024	        0x448b4040	            mov r8d, dword [rax + 0x40] 	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002028	        0x488b4588	             mov rax, qword [rbp - 0x78]	       655	checkout.c	FUNCTION_16	IF_1	ELSE_1
0x400202c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       655	checkout.c	FUNCTION_16	IF_1	ELSE_1
0x4002030	          0x4885c0	                           test rax, rax	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002033	           0xf95c0	                                setne al	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002036	           0xfb6c8	                           movzx ecx, al	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002039	        0x488b4588	             mov rax, qword [rbp - 0x78]	       654	checkout.c	FUNCTION_16	IF_1	ELSE_1
0x400203d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       654	checkout.c	FUNCTION_16	IF_1	ELSE_1
0x4002041	          0x4885c0	                           test rax, rax	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002044	           0xf95c0	                                setne al	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002047	           0xfb6d0	                           movzx edx, al	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x400204a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002051	          0x488b30	                    mov rsi, qword [rax]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002054	        0x488b4588	             mov rax, qword [rbp - 0x78]	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002058	        0x488b4028	            mov rax, qword [rax + 0x28] 	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x400205c	        0x4883ec08	                              sub rsp, 8	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002060	              0x57	                                push rdi	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002061	          0x4889c7	                            mov rdi, rax	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002064	      0xe800000000	                          call 0x4002069	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x4002069	        0x4883c410	                           add rsp, 0x10	       653	checkout.c	FUNCTION_16	IF_1	ELSE_1	CALL_10
0x400206d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       659	checkout.c	FUNCTION_16	IF_1
0x4002071	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       659	checkout.c	FUNCTION_16	IF_1
0x4002075	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       659	checkout.c	FUNCTION_16	IF_1
0x400207c	          0x488910	                    mov qword [rax], rdx	       659	checkout.c	FUNCTION_16	IF_1
0x400207f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       660	checkout.c	FUNCTION_16	IF_1	CALL_11
0x4002086	          0x4889c7	                            mov rdi, rax	       660	checkout.c	FUNCTION_16	IF_1	CALL_11
0x4002089	      0xe81df7ffff	              call sym.setup_branch_path	       660	checkout.c	FUNCTION_16	IF_1	CALL_11
0x400208e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       663	checkout.c	FUNCTION_16
0x4002092	          0x488b00	                    mov rax, qword [rax]	       663	checkout.c	FUNCTION_16
0x4002095	        0x48894598	             mov qword [rbp - 0x68], rax	       663	checkout.c	FUNCTION_16
0x4002099	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       664	checkout.c	FUNCTION_16	IF_5
0x400209e	            0x7525	                           jne 0x40020c5	       664	checkout.c	FUNCTION_16	IF_5
0x40020a0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       664	checkout.c	FUNCTION_16	IF_5
0x40020a4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       664	checkout.c	FUNCTION_16	IF_5
0x40020a8	          0x4885c0	                           test rax, rax	       664	checkout.c	FUNCTION_16	IF_5
0x40020ab	            0x7418	                            je 0x40020c5	       664	checkout.c	FUNCTION_16	IF_5
0x40020ad	        0x488b4580	             mov rax, qword [rbp - 0x80]	       665	checkout.c	FUNCTION_16	CALL_12
0x40020b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       665	checkout.c	FUNCTION_16	CALL_12
0x40020b5	        0x4883c004	                              add rax, 4	       665	checkout.c	FUNCTION_16	CALL_12
0x40020b9	          0x4889c7	                            mov rdi, rax	       665	checkout.c	FUNCTION_16	CALL_12
0x40020bc	      0xe800000000	                          call 0x40020c1	       665	checkout.c	FUNCTION_16	CALL_12
0x40020c1	        0x48894598	             mov qword [rbp - 0x68], rax	       665	checkout.c	FUNCTION_16	CALL_12
0x40020c5	      0xbf00000000	                              mov edi, 0	       667	checkout.c	FUNCTION_16	CALL_13
0x40020ca	      0xe800000000	                          call 0x40020cf	       667	checkout.c	FUNCTION_16	CALL_13
0x40020cf	        0x488945a8	             mov qword [rbp - 0x58], rax	       667	checkout.c	FUNCTION_16	CALL_13
0x40020d3	      0x48837da800	               cmp qword [rbp - 0x58], 0	       668	checkout.c	FUNCTION_16	IF_6
0x40020d8	            0x7537	                           jne 0x4002111	       668	checkout.c	FUNCTION_16	IF_6
0x40020da	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020e1	          0x488b10	                    mov rdx, qword [rax]	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020e4	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020e9	            0x7406	                            je 0x40020f1	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020eb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020ef	            0xeb05	                           jmp 0x40020f6	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020f1	      0xb800000000	                              mov eax, 0	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020f6	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020fa	          0x4889d1	                            mov rcx, rdx	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x40020fd	          0x4889c2	                            mov rdx, rax	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x4002100	      0xbe00000000	                              mov esi, 0	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x4002105	      0xb800000000	                              mov eax, 0	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x400210a	      0xe800000000	                          call 0x400210f	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x400210f	            0xeb24	                           jmp 0x4002135	       669	checkout.c	FUNCTION_16	IF_6	CALL_14
0x4002111	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       672	checkout.c	FUNCTION_16	CALL_16
0x4002115	          0x4889c7	                            mov rdi, rax	       672	checkout.c	FUNCTION_16	CALL_16
0x4002118	      0xe800000000	                          call 0x400211d	       672	checkout.c	FUNCTION_16	CALL_16
0x400211d	          0x4889c1	                            mov rcx, rax	       672	checkout.c	FUNCTION_16	CALL_16
0x4002120	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       672	checkout.c	FUNCTION_16	CALL_16
0x4002124	        0x488d45b0	                   lea rax, [rbp - 0x50]	       672	checkout.c	FUNCTION_16	CALL_16
0x4002128	      0xbe00000000	                              mov esi, 0	       672	checkout.c	FUNCTION_16	CALL_16
0x400212d	          0x4889c7	                            mov rdi, rax	       672	checkout.c	FUNCTION_16	CALL_16
0x4002130	      0xe800000000	                          call 0x4002135	       672	checkout.c	FUNCTION_16	CALL_16
0x4002135	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400213c	          0x488b00	                    mov rax, qword [rax]	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400213f	      0xbe00000000	                              mov esi, 0	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002144	          0x4889c7	                            mov rdi, rax	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002147	      0xe800000000	                          call 0x400214c	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400214c	            0x85c0	                           test eax, eax	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400214e	            0x751f	                           jne 0x400216f	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002150	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002157	        0x488b4008	                mov rax, qword [rax + 8]	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400215b	          0x4885c0	                           test rax, rax	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400215e	            0x750f	                           jne 0x400216f	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002160	        0x488b4588	             mov rax, qword [rbp - 0x78]	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002164	          0x8b4010	            mov eax, dword [rax + 0x10] 	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002167	            0x85c0	                           test eax, eax	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x4002169	     0xf84c1020000	                            je 0x4002430	       674	checkout.c	FUNCTION_16	IF_7	CALL_17
0x400216f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002173	          0x8b4010	            mov eax, dword [rax + 0x10] 	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002176	            0x85c0	                           test eax, eax	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002178	            0x7514	                           jne 0x400218e	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x400217a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002181	        0x488b4008	                mov rax, qword [rax + 8]	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002185	          0x4885c0	                           test rax, rax	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x4002188	     0xf8599000000	                           jne 0x4002227	       676	checkout.c	FUNCTION_16	ELSE_3	IF_8
0x400218e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x4002195	        0x488b4010	            mov rax, qword [rax + 0x10] 	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x4002199	        0x488d5004	                      lea rdx, [rax + 4]	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x400219d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021a1	    0x41b901000000	                              mov r9d, 1	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021a7	    0x41b801000000	                              mov r8d, 1	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021ad	      0xb900000000	                              mov ecx, 0	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021b2	      0xbe00000000	                              mov esi, 0	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021b7	          0x4889c7	                            mov rdi, rax	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021ba	      0xe800000000	                          call 0x40021bf	       677	checkout.c	FUNCTION_16	ELSE_3	IF_8	CALL_18
0x40021bf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       679	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9
0x40021c3	          0x8b4004	                mov eax, dword [rax + 4]	       679	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9
0x40021c6	            0x85c0	                           test eax, eax	       679	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9
0x40021c8	     0xf8562020000	                           jne 0x4002430	       679	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9
0x40021ce	        0x488b4580	             mov rax, qword [rbp - 0x80]	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021d2	        0x488b4008	                mov rax, qword [rax + 8]	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021d6	          0x4885c0	                           test rax, rax	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021d9	            0x7427	                            je 0x4002202	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021db	    0x8b0500000000	            mov eax, dword [0x040021e1] 	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021e1	            0x85c0	                           test eax, eax	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021e3	            0x741d	                            je 0x4002202	       680	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021e5	        0x488b4588	             mov rax, qword [rbp - 0x78]	       681	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021e9	          0x8b4010	            mov eax, dword [rax + 0x10] 	       681	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021ec	            0x85c0	                           test eax, eax	       681	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021ee	            0x7512	                           jne 0x4002202	       681	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	IF_10
0x40021f0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       682	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_19
0x40021f7	          0x488b00	                    mov rax, qword [rax]	       682	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_19
0x40021fa	          0x4889c7	                            mov rdi, rax	       682	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_19
0x40021fd	      0xe800000000	                          call 0x4002202	       682	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_19
0x4002202	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x4002209	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x400220d	      0xbf00000000	                              mov edi, 0	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x4002212	      0xe863dfffff	                               call sym.	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x4002217	          0x4889de	                            mov rsi, rbx	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x400221a	          0x4889c7	                            mov rdi, rax	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x400221d	      0xe833f3ffff	         call sym.describe_detached_head	       683	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9	CALL_21
0x4002222	      0xe909020000	                           jmp 0x4002430	       679	checkout.c	FUNCTION_16	ELSE_3	IF_8	IF_9
0x4002227	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       685	checkout.c	FUNCTION_16	ELSE_4	IF_11
0x400222e	        0x488b4008	                mov rax, qword [rax + 8]	       685	checkout.c	FUNCTION_16	ELSE_4	IF_11
0x4002232	          0x4885c0	                           test rax, rax	       685	checkout.c	FUNCTION_16	ELSE_4	IF_11
0x4002235	     0xf84f5010000	                            je 0x4002430	       685	checkout.c	FUNCTION_16	ELSE_4	IF_11
0x400223b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x400223f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x4002246	        0x488b4008	                mov rax, qword [rax + 8]	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x400224a	          0x4889c6	                            mov rsi, rax	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x400224d	      0xbf00000000	                              mov edi, 0	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x4002252	      0xe800000000	                          call 0x4002257	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x4002257	            0x85c0	                           test eax, eax	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x4002259	            0x7917	                           jns 0x4002272	       686	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_12	CALL_22
0x400225b	      0xbf00000000	                              mov edi, 0	       687	checkout.c	FUNCTION_16	ELSE_4	IF_11	CALL_24
0x4002260	      0xe815dfffff	                               call sym.	       687	checkout.c	FUNCTION_16	ELSE_4	IF_11	CALL_24
0x4002265	          0x4889c7	                            mov rdi, rax	       687	checkout.c	FUNCTION_16	ELSE_4	IF_11	CALL_24
0x4002268	      0xb800000000	                              mov eax, 0	       687	checkout.c	FUNCTION_16	ELSE_4	IF_11	CALL_24
0x400226d	      0xe800000000	                          call 0x4002272	       687	checkout.c	FUNCTION_16	ELSE_4	IF_11	CALL_24
0x4002272	        0x488b4588	             mov rax, qword [rbp - 0x78]	       688	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13
0x4002276	          0x8b4004	                mov eax, dword [rax + 4]	       688	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13
0x4002279	            0x85c0	                           test eax, eax	       688	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13
0x400227b	     0xf855e010000	                           jne 0x40023df	       688	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13
0x4002281	        0x488b4580	             mov rax, qword [rbp - 0x80]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x4002285	        0x488b4008	                mov rax, qword [rax + 8]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x4002289	          0x4885c0	                           test rax, rax	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x400228c	     0xf849b000000	                            je 0x400232d	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x4002292	        0x488b4580	             mov rax, qword [rbp - 0x80]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x4002296	        0x488b5008	                mov rdx, qword [rax + 8]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x400229a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022a1	        0x488b4008	                mov rax, qword [rax + 8]	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022a5	          0x4889d6	                            mov rsi, rdx	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022a8	          0x4889c7	                            mov rdi, rax	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022ab	      0xe800000000	                          call 0x40022b0	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022b0	            0x85c0	                           test eax, eax	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022b2	            0x7579	                           jne 0x400232d	       689	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	CALL_25
0x40022b4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x40022b8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x40022bc	          0x4885c0	                           test rax, rax	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x40022bf	            0x7436	                            je 0x40022f7	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x40022c1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022c8	          0x488b18	                    mov rbx, qword [rax]	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022cb	      0xbf00000000	                              mov edi, 0	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022d0	      0xe8a5deffff	                               call sym.	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022d5	          0x4889c1	                            mov rcx, rax	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022d8	    0x488b05000000	            mov rax, qword [0x040022df] 	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022df	          0x4889da	                            mov rdx, rbx	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022e2	          0x4889ce	                            mov rsi, rcx	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022e5	          0x4889c7	                            mov rdi, rax	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022e8	      0xb800000000	                              mov eax, 0	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022ed	      0xe800000000	                          call 0x40022f2	       691	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15	CALL_27
0x40022f2	      0xe9e8000000	                           jmp 0x40023df	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x40022f7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x40022fe	          0x488b18	                    mov rbx, qword [rax]	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002301	      0xbf00000000	                              mov edi, 0	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002306	      0xe86fdeffff	                               call sym.	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x400230b	          0x4889c1	                            mov rcx, rax	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x400230e	    0x488b05000000	            mov rax, qword [0x04002315] 	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002315	          0x4889da	                            mov rdx, rbx	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002318	          0x4889ce	                            mov rsi, rcx	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x400231b	          0x4889c7	                            mov rdi, rax	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x400231e	      0xb800000000	                              mov eax, 0	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002323	      0xe800000000	                          call 0x4002328	       694	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	ELSE_5	CALL_29
0x4002328	      0xe9b2000000	                           jmp 0x40023df	       690	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	IF_14	IF_15
0x400232d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       696	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16
0x4002331	        0x488b4028	            mov rax, qword [rax + 0x28] 	       696	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16
0x4002335	          0x4885c0	                           test rax, rax	       696	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16
0x4002338	            0x7474	                            je 0x40023ae	       696	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16
0x400233a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       697	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	IF_17
0x400233e	    0x8b80c8010000	           mov eax, dword [rax + 0x1c8] 	       697	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	IF_17
0x4002344	            0x85c0	                           test eax, eax	       697	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	IF_17
0x4002346	            0x7433	                            je 0x400237b	       697	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	IF_17
0x4002348	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400234f	          0x488b18	                    mov rbx, qword [rax]	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002352	      0xbf00000000	                              mov edi, 0	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002357	      0xe81edeffff	                               call sym.	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400235c	          0x4889c1	                            mov rcx, rax	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400235f	    0x488b05000000	            mov rax, qword [0x04002366] 	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002366	          0x4889da	                            mov rdx, rbx	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002369	          0x4889ce	                            mov rsi, rcx	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400236c	          0x4889c7	                            mov rdi, rax	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400236f	      0xb800000000	                              mov eax, 0	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002374	      0xe800000000	                          call 0x4002379	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x4002379	            0xeb64	                           jmp 0x40023df	       698	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_31
0x400237b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x4002382	          0x488b18	                    mov rbx, qword [rax]	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x4002385	      0xbf00000000	                              mov edi, 0	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x400238a	      0xe8ebddffff	                               call sym.	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x400238f	          0x4889c1	                            mov rcx, rax	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x4002392	    0x488b05000000	            mov rax, qword [0x04002399] 	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x4002399	          0x4889da	                            mov rdx, rbx	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x400239c	          0x4889ce	                            mov rsi, rcx	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x400239f	          0x4889c7	                            mov rdi, rax	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x40023a2	      0xb800000000	                              mov eax, 0	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x40023a7	      0xe800000000	                          call 0x40023ac	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x40023ac	            0xeb31	                           jmp 0x40023df	       700	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_6	IF_16	CALL_33
0x40023ae	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023b5	          0x488b18	                    mov rbx, qword [rax]	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023b8	      0xbf00000000	                              mov edi, 0	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023bd	      0xe8b8ddffff	                               call sym.	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023c2	          0x4889c1	                            mov rcx, rax	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023c5	    0x488b05000000	            mov rax, qword [0x040023cc] 	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023cc	          0x4889da	                            mov rdx, rbx	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023cf	          0x4889ce	                            mov rsi, rcx	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023d2	          0x4889c7	                            mov rdi, rax	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023d5	      0xb800000000	                              mov eax, 0	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023da	      0xe800000000	                          call 0x40023df	       702	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_13	ELSE_8	CALL_35
0x40023df	        0x488b4580	             mov rax, qword [rbp - 0x80]	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023e3	        0x488b4008	                mov rax, qword [rax + 8]	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023e7	          0x4885c0	                           test rax, rax	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023ea	            0x7444	                            je 0x4002430	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023ec	        0x488b4580	             mov rax, qword [rbp - 0x80]	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023f0	          0x488b00	                    mov rax, qword [rax]	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023f3	          0x4885c0	                           test rax, rax	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023f6	            0x7438	                            je 0x4002430	       706	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18
0x40023f8	        0x488b4580	             mov rax, qword [rbp - 0x80]	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x40023fc	        0x488b4008	                mov rax, qword [rax + 8]	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002400	          0x4889c7	                            mov rdi, rax	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002403	      0xe800000000	                          call 0x4002408	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002408	            0x85c0	                           test eax, eax	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x400240a	            0x7524	                           jne 0x4002430	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x400240c	        0x488b4580	             mov rax, qword [rbp - 0x80]	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002410	        0x488b4008	                mov rax, qword [rax + 8]	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002414	          0x4889c7	                            mov rdi, rax	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002417	      0xe800000000	                          call 0x400241c	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x400241c	            0x85c0	                           test eax, eax	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x400241e	            0x7410	                            je 0x4002430	       707	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	IF_19	CALL_37
0x4002420	        0x488b4580	             mov rax, qword [rbp - 0x80]	       708	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	CALL_38
0x4002424	        0x488b4008	                mov rax, qword [rax + 8]	       708	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	CALL_38
0x4002428	          0x4889c7	                            mov rdi, rax	       708	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	CALL_38
0x400242b	      0xe800000000	                          call 0x4002430	       708	checkout.c	FUNCTION_16	ELSE_4	IF_11	IF_18	CALL_38
0x4002430	      0xe800000000	                          call 0x4002435	       711	checkout.c	FUNCTION_16	CALL_39
0x4002435	        0x488d45b0	                   lea rax, [rbp - 0x50]	       712	checkout.c	FUNCTION_16	CALL_40
0x4002439	          0x4889c7	                            mov rdi, rax	       712	checkout.c	FUNCTION_16	CALL_40
0x400243c	      0xe800000000	                          call 0x4002441	       712	checkout.c	FUNCTION_16	CALL_40
0x4002441	        0x488b4588	             mov rax, qword [rbp - 0x78]	       713	checkout.c	FUNCTION_16	IF_20
0x4002445	          0x8b4004	                mov eax, dword [rax + 4]	       713	checkout.c	FUNCTION_16	IF_20
0x4002448	            0x85c0	                           test eax, eax	       713	checkout.c	FUNCTION_16	IF_20
0x400244a	            0x7545	                           jne 0x4002491	       713	checkout.c	FUNCTION_16	IF_20
0x400244c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002453	        0x488b4008	                mov rax, qword [rax + 8]	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002457	          0x4885c0	                           test rax, rax	       713	checkout.c	FUNCTION_16	IF_20
0x400245a	            0x7526	                           jne 0x4002482	       713	checkout.c	FUNCTION_16	IF_20
0x400245c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002460	          0x8b4010	            mov eax, dword [rax + 0x10] 	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002463	            0x85c0	                           test eax, eax	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002465	            0x752a	                           jne 0x4002491	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002467	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x400246e	          0x488b00	                    mov rax, qword [rax]	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002471	      0xbe00000000	                              mov esi, 0	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002476	          0x4889c7	                            mov rdi, rax	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002479	      0xe800000000	                          call 0x400247e	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x400247e	            0x85c0	                           test eax, eax	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002480	            0x750f	                           jne 0x4002491	       714	checkout.c	FUNCTION_16	IF_20	CALL_41
0x4002482	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       715	checkout.c	FUNCTION_16	CALL_42
0x4002489	          0x4889c7	                            mov rdi, rax	       715	checkout.c	FUNCTION_16	CALL_42
0x400248c	      0xe89ff9ffff	                call sym.report_tracking	       715	checkout.c	FUNCTION_16	CALL_42
0x4002491	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       716	checkout.c	FUNCTION_16
0x4002495	    0x644833042528	                xor rax, qword fs:[0x28]	       716	checkout.c	FUNCTION_16
0x400249e	            0x7405	                            je 0x40024a5	       716	checkout.c	FUNCTION_16
0x40024a0	      0xe800000000	                          call 0x40024a5	       716	checkout.c	FUNCTION_16
0x40024a5	        0x488d65f0	                   lea rsp, [rbp - 0x10]	       716	checkout.c	FUNCTION_16
0x40024a9	              0x5b	                                 pop rbx	       716	checkout.c	FUNCTION_16
0x40024aa	            0x415c	                                 pop r12	       716	checkout.c	FUNCTION_16
0x40024ac	              0x5d	                                 pop rbp	       716	checkout.c	FUNCTION_16
0x40024ad	              0xc3	                                     ret	       716	checkout.c	FUNCTION_16
strbuf_addch	CALL,2:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	33
0x40000d7	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_30
0x40000d8	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_30
0x40000db	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_30
0x40000df	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_30
0x40000e3	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_30
0x40000e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x40000ea	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x40000ed	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x40000f2	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x40000f5	            0x7511	                           jne 0x4000108	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x40000f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_30	CALL_2
0x40000fb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_30	CALL_2
0x4000100	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_30	CALL_2
0x4000103	      0xe800000000	                          call 0x4000108	       228	strbuf.h	FUNCTION_30	CALL_2
0x4000108	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x400010c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_30
0x4000110	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x4000114	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_30
0x4000118	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_30
0x400011c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x4000120	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_30
0x4000124	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_30
0x4000127	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_30
0x400012a	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_30
0x400012c	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_30
0x4000130	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_30
0x4000134	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_30
0x4000138	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_30
0x400013c	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_30
0x400013f	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_30
0x4000142	              0x90	                                     nop	       231	strbuf.h	FUNCTION_30
0x4000143	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_30
0x4000144	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_30
reset_tree	CALL,4:functions,0:ELSE,0:SWITCH,1:FOR,0:DO,0:IF,0:WHILE,0	62
0x4001663	              0x55	                                push rbp	       418	checkout.c	FUNCTION_12
0x4001664	          0x4889e5	                            mov rbp, rsp	       418	checkout.c	FUNCTION_12
0x4001667	    0x4881ec600300	                          sub rsp, 0x360	       418	checkout.c	FUNCTION_12
0x400166e	    0x4889bdb8fcff	            mov qword [rbp - 0x348], rdi	       418	checkout.c	FUNCTION_12
0x4001675	    0x4889b5b0fcff	            mov qword [rbp - 0x350], rsi	       418	checkout.c	FUNCTION_12
0x400167c	    0x8995acfcffff	            mov dword [rbp - 0x354], edx	       418	checkout.c	FUNCTION_12
0x4001682	    0x48898da0fcff	            mov qword [rbp - 0x360], rcx	       418	checkout.c	FUNCTION_12
0x4001689	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	checkout.c	FUNCTION_12
0x4001692	        0x488945f8	                mov qword [rbp - 8], rax	       418	checkout.c	FUNCTION_12
0x4001696	            0x31c0	                            xor eax, eax	       418	checkout.c	FUNCTION_12
0x4001698	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	       422	checkout.c	FUNCTION_12	CALL_1
0x400169f	      0xba00030000	                          mov edx, 0x300	       422	checkout.c	FUNCTION_12	CALL_1
0x40016a4	      0xbe00000000	                              mov esi, 0	       422	checkout.c	FUNCTION_12	CALL_1
0x40016a9	          0x4889c7	                            mov rdi, rax	       422	checkout.c	FUNCTION_12	CALL_1
0x40016ac	      0xe800000000	                          call 0x40016b1	       422	checkout.c	FUNCTION_12	CALL_1
0x40016b1	    0xc785f0feffff	    mov dword [rbp - 0x110], 0xffffffff 	       423	checkout.c	FUNCTION_12
0x40016bb	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       424	checkout.c	FUNCTION_12
0x40016c1	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	       424	checkout.c	FUNCTION_12
0x40016c7	    0x83bdacfcffff	              cmp dword [rbp - 0x354], 0	       425	checkout.c	FUNCTION_12
0x40016ce	           0xf94c0	                                 sete al	       425	checkout.c	FUNCTION_12
0x40016d1	           0xfb6c0	                           movzx eax, al	       425	checkout.c	FUNCTION_12
0x40016d4	    0x898510fdffff	            mov dword [rbp - 0x2f0], eax	       425	checkout.c	FUNCTION_12
0x40016da	    0xc785f0fcffff	              mov dword [rbp - 0x310], 1	       426	checkout.c	FUNCTION_12
0x40016e4	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	       427	checkout.c	FUNCTION_12
0x40016ee	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	       428	checkout.c	FUNCTION_12
0x40016f9	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       429	checkout.c	FUNCTION_12
0x4001700	          0x8b4024	            mov eax, dword [rax + 0x24] 	       429	checkout.c	FUNCTION_12
0x4001703	    0x898508fdffff	            mov dword [rbp - 0x2f8], eax	       429	checkout.c	FUNCTION_12
0x4001709	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       430	checkout.c	FUNCTION_12
0x4001714	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       431	checkout.c	FUNCTION_12
0x400171f	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       432	checkout.c	FUNCTION_12	CALL_2
0x4001726	          0x4889c7	                            mov rdi, rax	       432	checkout.c	FUNCTION_12	CALL_2
0x4001729	      0xe8d5ebffff	                     call sym.parse_tree	       432	checkout.c	FUNCTION_12	CALL_2
0x400172e	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       433	checkout.c	FUNCTION_12	CALL_3
0x4001735	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       433	checkout.c	FUNCTION_12	CALL_3
0x4001739	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       433	checkout.c	FUNCTION_12	CALL_3
0x4001740	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       433	checkout.c	FUNCTION_12	CALL_3
0x4001744	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       433	checkout.c	FUNCTION_12	CALL_3
0x400174b	          0x4889ce	                            mov rsi, rcx	       433	checkout.c	FUNCTION_12	CALL_3
0x400174e	          0x4889c7	                            mov rdi, rax	       433	checkout.c	FUNCTION_12	CALL_3
0x4001751	      0xe800000000	                          call 0x4001756	       433	checkout.c	FUNCTION_12	CALL_3
0x4001756	    0x488d95f0fcff	                  lea rdx, [rbp - 0x310]	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x400175d	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001764	          0x4889c6	                            mov rsi, rax	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001767	      0xbf01000000	                              mov edi, 1	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x400176c	      0xe800000000	                          call 0x4001771	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001771	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001774	            0x7406	                            je 0x400177c	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001776	            0x85c0	                           test eax, eax	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x4001778	            0x740f	                            je 0x4001789	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x400177a	            0xeb14	                           jmp 0x4001790	       434	checkout.c	FUNCTION_12	SWITCH_1	CALL_4
0x400177c	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	       436	checkout.c	FUNCTION_12	SWITCH_1
0x4001783	    0xc70001000000	                      mov dword [rax], 1	       436	checkout.c	FUNCTION_12	SWITCH_1
0x4001789	      0xb800000000	                              mov eax, 0	       445	checkout.c	FUNCTION_12	SWITCH_1
0x400178e	            0xeb05	                           jmp 0x4001795	       445	checkout.c	FUNCTION_12	SWITCH_1
0x4001790	      0xb880000000	                           mov eax, 0x80	       447	checkout.c	FUNCTION_12	SWITCH_1
0x4001795	        0x488b4df8	                mov rcx, qword [rbp - 8]	       449	checkout.c	FUNCTION_12
0x4001799	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       449	checkout.c	FUNCTION_12
0x40017a2	            0x7405	                            je 0x40017a9	       449	checkout.c	FUNCTION_12
0x40017a4	      0xe800000000	                          call 0x40017a9	       449	checkout.c	FUNCTION_12
0x40017a9	              0xc9	                                   leave	       449	checkout.c	FUNCTION_12
0x40017aa	              0xc3	                                     ret	       449	checkout.c	FUNCTION_12
setup_branch_path	CALL,5:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	52
0x40017ab	              0x55	                                push rbp	       463	checkout.c	FUNCTION_13
0x40017ac	          0x4889e5	                            mov rbp, rsp	       463	checkout.c	FUNCTION_13
0x40017af	        0x4883ec30	                           sub rsp, 0x30	       463	checkout.c	FUNCTION_13
0x40017b3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       463	checkout.c	FUNCTION_13
0x40017b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       463	checkout.c	FUNCTION_13
0x40017c0	        0x488945f8	                mov qword [rbp - 8], rax	       463	checkout.c	FUNCTION_13
0x40017c4	            0x31c0	                            xor eax, eax	       463	checkout.c	FUNCTION_13
0x40017c6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       464	checkout.c	FUNCTION_13
0x40017ce	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       464	checkout.c	FUNCTION_13
0x40017d6	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       464	checkout.c	FUNCTION_13
0x40017de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       466	checkout.c	FUNCTION_13	CALL_1
0x40017e2	          0x488b08	                    mov rcx, qword [rax]	       466	checkout.c	FUNCTION_13	CALL_1
0x40017e5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       466	checkout.c	FUNCTION_13	CALL_1
0x40017e9	      0xba01000000	                              mov edx, 1	       466	checkout.c	FUNCTION_13	CALL_1
0x40017ee	          0x4889ce	                            mov rsi, rcx	       466	checkout.c	FUNCTION_13	CALL_1
0x40017f1	          0x4889c7	                            mov rdi, rax	       466	checkout.c	FUNCTION_13	CALL_1
0x40017f4	      0xe800000000	                          call 0x40017f9	       466	checkout.c	FUNCTION_13	CALL_1
0x40017f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x40017fd	          0x488b10	                    mov rdx, qword [rax]	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x4001800	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x4001804	          0x4889d6	                            mov rsi, rdx	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x4001807	          0x4889c7	                            mov rdi, rax	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x400180a	      0xe800000000	                          call 0x400180f	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x400180f	            0x85c0	                           test eax, eax	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x4001811	            0x7416	                            je 0x4001829	       467	checkout.c	FUNCTION_13	IF_1	CALL_2
0x4001813	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       468	checkout.c	FUNCTION_13	CALL_3
0x4001817	          0x4889c7	                            mov rdi, rax	       468	checkout.c	FUNCTION_13	CALL_3
0x400181a	      0xe800000000	                          call 0x400181f	       468	checkout.c	FUNCTION_13	CALL_3
0x400181f	          0x4889c2	                            mov rdx, rax	       468	checkout.c	FUNCTION_13	CALL_3
0x4001822	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       468	checkout.c	FUNCTION_13	CALL_3
0x4001826	          0x488910	                    mov qword [rax], rdx	       468	checkout.c	FUNCTION_13	CALL_3
0x4001829	        0x488d45e0	                   lea rax, [rbp - 0x20]	       469	checkout.c	FUNCTION_13	CALL_4
0x400182d	    0x41b80b000000	                            mov r8d, 0xb	       469	checkout.c	FUNCTION_13	CALL_4
0x4001833	      0xb900000000	                              mov ecx, 0	       469	checkout.c	FUNCTION_13	CALL_4
0x4001838	      0xba00000000	                              mov edx, 0	       469	checkout.c	FUNCTION_13	CALL_4
0x400183d	      0xbe00000000	                              mov esi, 0	       469	checkout.c	FUNCTION_13	CALL_4
0x4001842	          0x4889c7	                            mov rdi, rax	       469	checkout.c	FUNCTION_13	CALL_4
0x4001845	      0xe800000000	                          call 0x400184a	       469	checkout.c	FUNCTION_13	CALL_4
0x400184a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       470	checkout.c	FUNCTION_13	CALL_5
0x400184e	      0xbe00000000	                              mov esi, 0	       470	checkout.c	FUNCTION_13	CALL_5
0x4001853	          0x4889c7	                            mov rdi, rax	       470	checkout.c	FUNCTION_13	CALL_5
0x4001856	      0xe800000000	                          call 0x400185b	       470	checkout.c	FUNCTION_13	CALL_5
0x400185b	          0x4889c2	                            mov rdx, rax	       470	checkout.c	FUNCTION_13	CALL_5
0x400185e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       470	checkout.c	FUNCTION_13	CALL_5
0x4001862	        0x48895008	                mov qword [rax + 8], rdx	       470	checkout.c	FUNCTION_13	CALL_5
0x4001866	              0x90	                                     nop	       471	checkout.c	FUNCTION_13
0x4001867	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	checkout.c	FUNCTION_13
0x400186b	    0x644833042528	                xor rax, qword fs:[0x28]	       471	checkout.c	FUNCTION_13
0x4001874	            0x7405	                            je 0x400187b	       471	checkout.c	FUNCTION_13
0x4001876	      0xe800000000	                          call 0x400187b	       471	checkout.c	FUNCTION_13
0x400187b	              0xc9	                                   leave	       471	checkout.c	FUNCTION_13
0x400187c	              0xc3	                                     ret	       471	checkout.c	FUNCTION_13
orphaned_commit_warning	CALL,13:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,2:WHILE,0	94
0x40026f9	              0x55	                                push rbp	       796	checkout.c	FUNCTION_20
0x40026fa	          0x4889e5	                            mov rbp, rsp	       796	checkout.c	FUNCTION_20
0x40026fd	    0x4881ece00800	                          sub rsp, 0x8e0	       796	checkout.c	FUNCTION_20
0x4002704	    0x4889bd28f7ff	            mov qword [rbp - 0x8d8], rdi	       796	checkout.c	FUNCTION_20
0x400270b	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	       796	checkout.c	FUNCTION_20
0x4002712	    0x64488b042528	                mov rax, qword fs:[0x28]	       796	checkout.c	FUNCTION_20
0x400271b	        0x488945f8	                mov qword [rbp - 8], rax	       796	checkout.c	FUNCTION_20
0x400271f	            0x31c0	                            xor eax, eax	       796	checkout.c	FUNCTION_20
0x4002721	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       798	checkout.c	FUNCTION_20
0x4002728	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	       798	checkout.c	FUNCTION_20
0x400272f	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       800	checkout.c	FUNCTION_20	CALL_1
0x4002736	      0xbe00000000	                              mov esi, 0	       800	checkout.c	FUNCTION_20	CALL_1
0x400273b	          0x4889c7	                            mov rdi, rax	       800	checkout.c	FUNCTION_20	CALL_1
0x400273e	      0xe800000000	                          call 0x4002743	       800	checkout.c	FUNCTION_20	CALL_1
0x4002743	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       801	checkout.c	FUNCTION_20	CALL_2
0x400274a	      0xb900000000	                              mov ecx, 0	       801	checkout.c	FUNCTION_20	CALL_2
0x400274f	          0x4889c2	                            mov rdx, rax	       801	checkout.c	FUNCTION_20	CALL_2
0x4002752	      0xbe00000000	                              mov esi, 0	       801	checkout.c	FUNCTION_20	CALL_2
0x4002757	      0xbf00000000	                              mov edi, 0	       801	checkout.c	FUNCTION_20	CALL_2
0x400275c	      0xe800000000	                          call 0x4002761	       801	checkout.c	FUNCTION_20	CALL_2
0x4002761	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       803	checkout.c	FUNCTION_20
0x4002768	            0x8b00	                    mov eax, dword [rax]	       803	checkout.c	FUNCTION_20
0x400276a	          0xc1e804	                              shr eax, 4	       803	checkout.c	FUNCTION_20
0x400276d	      0x25ffffff07	                      and eax, 0x7ffffff	       803	checkout.c	FUNCTION_20
0x4002772	      0x25fdffff07	                      and eax, 0x7fffffd	       803	checkout.c	FUNCTION_20
0x4002777	            0x89c2	                            mov edx, eax	       803	checkout.c	FUNCTION_20
0x4002779	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       803	checkout.c	FUNCTION_20
0x4002780	    0x81e2ffffff07	                      and edx, 0x7ffffff	       803	checkout.c	FUNCTION_20
0x4002786	            0x89d1	                            mov ecx, edx	       803	checkout.c	FUNCTION_20
0x4002788	          0xc1e104	                              shl ecx, 4	       803	checkout.c	FUNCTION_20
0x400278b	            0x8b10	                    mov edx, dword [rax]	       803	checkout.c	FUNCTION_20
0x400278d	    0x81e20f000080	                     and edx, 0x8000000f	       803	checkout.c	FUNCTION_20
0x4002793	             0x9ca	                             or edx, ecx	       803	checkout.c	FUNCTION_20
0x4002795	            0x8910	                    mov dword [rax], edx	       803	checkout.c	FUNCTION_20
0x4002797	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       804	checkout.c	FUNCTION_20	CALL_4
0x400279e	        0x4883c004	                              add rax, 4	       804	checkout.c	FUNCTION_20	CALL_4
0x40027a2	          0x4889c7	                            mov rdi, rax	       804	checkout.c	FUNCTION_20	CALL_4
0x40027a5	      0xe800000000	                          call 0x40027aa	       804	checkout.c	FUNCTION_20	CALL_4
0x40027aa	          0x4889c2	                            mov rdx, rax	       804	checkout.c	FUNCTION_20	CALL_4
0x40027ad	    0x488b8d38f7ff	            mov rcx, qword [rbp - 0x8c8]	       804	checkout.c	FUNCTION_20	CALL_4
0x40027b4	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       804	checkout.c	FUNCTION_20	CALL_4
0x40027bb	          0x4889ce	                            mov rsi, rcx	       804	checkout.c	FUNCTION_20	CALL_4
0x40027be	          0x4889c7	                            mov rdi, rax	       804	checkout.c	FUNCTION_20	CALL_4
0x40027c1	      0xe800000000	                          call 0x40027c6	       804	checkout.c	FUNCTION_20	CALL_4
0x40027c6	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       806	checkout.c	FUNCTION_20	CALL_5
0x40027cd	          0x4889c6	                            mov rsi, rax	       806	checkout.c	FUNCTION_20	CALL_5
0x40027d0	      0xbf00000000	                              mov edi, 0	       806	checkout.c	FUNCTION_20	CALL_5
0x40027d5	      0xe800000000	                          call 0x40027da	       806	checkout.c	FUNCTION_20	CALL_5
0x40027da	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       807	checkout.c	FUNCTION_20	CALL_6
0x40027e1	        0x488d5004	                      lea rdx, [rax + 4]	       807	checkout.c	FUNCTION_20	CALL_6
0x40027e5	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       807	checkout.c	FUNCTION_20	CALL_6
0x40027ec	      0xb902000000	                              mov ecx, 2	       807	checkout.c	FUNCTION_20	CALL_6
0x40027f1	      0xbe00000000	                              mov esi, 0	       807	checkout.c	FUNCTION_20	CALL_6
0x40027f6	          0x4889c7	                            mov rdi, rax	       807	checkout.c	FUNCTION_20	CALL_6
0x40027f9	      0xe800000000	                          call 0x40027fe	       807	checkout.c	FUNCTION_20	CALL_6
0x40027fe	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       809	checkout.c	FUNCTION_20	IF_1	CALL_7
0x4002805	          0x4889c7	                            mov rdi, rax	       809	checkout.c	FUNCTION_20	IF_1	CALL_7
0x4002808	      0xe800000000	                          call 0x400280d	       809	checkout.c	FUNCTION_20	IF_1	CALL_7
0x400280d	            0x85c0	                           test eax, eax	       809	checkout.c	FUNCTION_20	IF_1	CALL_7
0x400280f	            0x7417	                            je 0x4002828	       809	checkout.c	FUNCTION_20	IF_1	CALL_7
0x4002811	      0xbf00000000	                              mov edi, 0	       810	checkout.c	FUNCTION_20	CALL_9
0x4002816	      0xe85fd9ffff	                               call sym.	       810	checkout.c	FUNCTION_20	CALL_9
0x400281b	          0x4889c7	                            mov rdi, rax	       810	checkout.c	FUNCTION_20	CALL_9
0x400281e	      0xb800000000	                              mov eax, 0	       810	checkout.c	FUNCTION_20	CALL_9
0x4002823	      0xe800000000	                          call 0x4002828	       810	checkout.c	FUNCTION_20	CALL_9
0x4002828	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       811	checkout.c	FUNCTION_20	IF_2
0x400282f	            0x8b00	                    mov eax, dword [rax]	       811	checkout.c	FUNCTION_20	IF_2
0x4002831	          0xc1e804	                              shr eax, 4	       811	checkout.c	FUNCTION_20	IF_2
0x4002834	      0x25ffffff07	                      and eax, 0x7ffffff	       811	checkout.c	FUNCTION_20	IF_2
0x4002839	          0x83e002	                              and eax, 2	       811	checkout.c	FUNCTION_20	IF_2
0x400283c	            0x85c0	                           test eax, eax	       811	checkout.c	FUNCTION_20	IF_2
0x400283e	            0x751b	                           jne 0x400285b	       811	checkout.c	FUNCTION_20	IF_2
0x4002840	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       812	checkout.c	FUNCTION_20	CALL_10
0x4002847	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       812	checkout.c	FUNCTION_20	CALL_10
0x400284e	          0x4889d6	                            mov rsi, rdx	       812	checkout.c	FUNCTION_20	CALL_10
0x4002851	          0x4889c7	                            mov rdi, rax	       812	checkout.c	FUNCTION_20	CALL_10
0x4002854	      0xe814fdffff	               call sym.suggest_reattach	       812	checkout.c	FUNCTION_20	CALL_10
0x4002859	            0xeb1f	                           jmp 0x400287a	       812	checkout.c	FUNCTION_20	CALL_10
0x400285b	      0xbf00000000	                              mov edi, 0	       814	checkout.c	FUNCTION_20	CALL_12
0x4002860	      0xe815d9ffff	                               call sym.	       814	checkout.c	FUNCTION_20	CALL_12
0x4002865	          0x4889c2	                            mov rdx, rax	       814	checkout.c	FUNCTION_20	CALL_12
0x4002868	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       814	checkout.c	FUNCTION_20	CALL_12
0x400286f	          0x4889c6	                            mov rsi, rax	       814	checkout.c	FUNCTION_20	CALL_12
0x4002872	          0x4889d7	                            mov rdi, rdx	       814	checkout.c	FUNCTION_20	CALL_12
0x4002875	      0xe8dbecffff	         call sym.describe_detached_head	       814	checkout.c	FUNCTION_20	CALL_12
0x400287a	      0xbfff070004	                      mov edi, 0x40007ff	       817	checkout.c	FUNCTION_20	CALL_13
0x400287f	      0xe800000000	                          call 0x4002884	       817	checkout.c	FUNCTION_20	CALL_13
0x4002884	              0x90	                                     nop	       818	checkout.c	FUNCTION_20
0x4002885	        0x488b45f8	                mov rax, qword [rbp - 8]	       818	checkout.c	FUNCTION_20
0x4002889	    0x644833042528	                xor rax, qword fs:[0x28]	       818	checkout.c	FUNCTION_20
0x4002892	            0x7405	                            je 0x4002899	       818	checkout.c	FUNCTION_20
0x4002894	      0xe800000000	                          call 0x4002899	       818	checkout.c	FUNCTION_20
0x4002899	              0xc9	                                   leave	       818	checkout.c	FUNCTION_20
0x400289a	              0xc3	                                     ret	       818	checkout.c	FUNCTION_20
report_tracking	CALL,4:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	39
0x4001e30	              0x55	                                push rbp	       614	checkout.c	FUNCTION_15
0x4001e31	          0x4889e5	                            mov rbp, rsp	       614	checkout.c	FUNCTION_15
0x4001e34	        0x4883ec40	                           sub rsp, 0x40	       614	checkout.c	FUNCTION_15
0x4001e38	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       614	checkout.c	FUNCTION_15
0x4001e3c	    0x64488b042528	                mov rax, qword fs:[0x28]	       614	checkout.c	FUNCTION_15
0x4001e45	        0x488945f8	                mov qword [rbp - 8], rax	       614	checkout.c	FUNCTION_15
0x4001e49	            0x31c0	                            xor eax, eax	       614	checkout.c	FUNCTION_15
0x4001e4b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       615	checkout.c	FUNCTION_15
0x4001e53	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       615	checkout.c	FUNCTION_15
0x4001e5b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       615	checkout.c	FUNCTION_15
0x4001e63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       616	checkout.c	FUNCTION_15	CALL_1
0x4001e67	          0x488b00	                    mov rax, qword [rax]	       616	checkout.c	FUNCTION_15	CALL_1
0x4001e6a	          0x4889c7	                            mov rdi, rax	       616	checkout.c	FUNCTION_15	CALL_1
0x4001e6d	      0xe800000000	                          call 0x4001e72	       616	checkout.c	FUNCTION_15	CALL_1
0x4001e72	        0x488945d8	             mov qword [rbp - 0x28], rax	       616	checkout.c	FUNCTION_15	CALL_1
0x4001e76	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e7e	      0xba01000000	                              mov edx, 1	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e83	          0x4889ce	                            mov rsi, rcx	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e86	          0x4889c7	                            mov rdi, rax	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e89	      0xe800000000	                          call 0x4001e8e	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e8e	            0x85c0	                           test eax, eax	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e90	            0x7424	                            je 0x4001eb6	       618	checkout.c	FUNCTION_15	IF_1	CALL_2
0x4001e92	    0x488b15000000	            mov rdx, qword [0x04001e99] 	       620	checkout.c	FUNCTION_15	CALL_3
0x4001e99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       620	checkout.c	FUNCTION_15	CALL_3
0x4001e9d	          0x4889d6	                            mov rsi, rdx	       620	checkout.c	FUNCTION_15	CALL_3
0x4001ea0	          0x4889c7	                            mov rdi, rax	       620	checkout.c	FUNCTION_15	CALL_3
0x4001ea3	      0xe800000000	                          call 0x4001ea8	       620	checkout.c	FUNCTION_15	CALL_3
0x4001ea8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       621	checkout.c	FUNCTION_15	CALL_4
0x4001eac	          0x4889c7	                            mov rdi, rax	       621	checkout.c	FUNCTION_15	CALL_4
0x4001eaf	      0xe800000000	                          call 0x4001eb4	       621	checkout.c	FUNCTION_15	CALL_4
0x4001eb4	            0xeb01	                           jmp 0x4001eb7	       621	checkout.c	FUNCTION_15	CALL_4
0x4001eb6	              0x90	                                     nop	       619	checkout.c	FUNCTION_15	IF_1
0x4001eb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	checkout.c	FUNCTION_15
0x4001ebb	    0x644833042528	                xor rax, qword fs:[0x28]	       622	checkout.c	FUNCTION_15
0x4001ec4	            0x7405	                            je 0x4001ecb	       622	checkout.c	FUNCTION_15
0x4001ec6	      0xe800000000	                          call 0x4001ecb	       622	checkout.c	FUNCTION_15
0x4001ecb	              0xc9	                                   leave	       622	checkout.c	FUNCTION_15
0x4001ecc	              0xc3	                                     ret	       622	checkout.c	FUNCTION_15
checkout_paths	CALL,42:functions,0:ELSE,4:SWITCH,0:FOR,3:DO,0:IF,26:WHILE,0	432
0x4000d3d	              0x55	                                push rbp	       243	checkout.c	FUNCTION_9
0x4000d3e	          0x4889e5	                            mov rbp, rsp	       243	checkout.c	FUNCTION_9
0x4000d41	              0x53	                                push rbx	       243	checkout.c	FUNCTION_9
0x4000d42	    0x4881eca80000	                           sub rsp, 0xa8	       243	checkout.c	FUNCTION_9
0x4000d49	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       243	checkout.c	FUNCTION_9
0x4000d50	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       243	checkout.c	FUNCTION_9
0x4000d57	    0x64488b042528	                mov rax, qword fs:[0x28]	       243	checkout.c	FUNCTION_9
0x4000d60	        0x488945e8	             mov qword [rbp - 0x18], rax	       243	checkout.c	FUNCTION_9
0x4000d64	            0x31c0	                            xor eax, eax	       243	checkout.c	FUNCTION_9
0x4000d66	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       245	checkout.c	FUNCTION_9
0x4000d6e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       245	checkout.c	FUNCTION_9
0x4000d76	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       245	checkout.c	FUNCTION_9
0x4000d7e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       245	checkout.c	FUNCTION_9
0x4000d86	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       245	checkout.c	FUNCTION_9
0x4000d8e	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       245	checkout.c	FUNCTION_9
0x4000d96	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	       249	checkout.c	FUNCTION_9
0x4000da0	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       250	checkout.c	FUNCTION_9
0x4000dab	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       252	checkout.c	FUNCTION_9	IF_1
0x4000db2	          0x8b4044	            mov eax, dword [rax + 0x44] 	       252	checkout.c	FUNCTION_9	IF_1
0x4000db5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       252	checkout.c	FUNCTION_9	IF_1
0x4000db8	            0x741c	                            je 0x4000dd6	       252	checkout.c	FUNCTION_9	IF_1
0x4000dba	      0xbf00000000	                              mov edi, 0	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dbf	      0xe8b6f3ffff	                               call sym.	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dc4	      0xbe00000000	                              mov esi, 0	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dc9	          0x4889c7	                            mov rdi, rax	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dcc	      0xb800000000	                              mov eax, 0	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dd1	      0xe800000000	                          call 0x4000dd6	       253	checkout.c	FUNCTION_9	CALL_2
0x4000dd6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       255	checkout.c	FUNCTION_9	IF_2
0x4000ddd	          0x8b4040	            mov eax, dword [rax + 0x40] 	       255	checkout.c	FUNCTION_9	IF_2
0x4000de0	            0x85c0	                           test eax, eax	       255	checkout.c	FUNCTION_9	IF_2
0x4000de2	            0x741c	                            je 0x4000e00	       255	checkout.c	FUNCTION_9	IF_2
0x4000de4	      0xbf00000000	                              mov edi, 0	       256	checkout.c	FUNCTION_9	CALL_4
0x4000de9	      0xe88cf3ffff	                               call sym.	       256	checkout.c	FUNCTION_9	CALL_4
0x4000dee	      0xbe00000000	                              mov esi, 0	       256	checkout.c	FUNCTION_9	CALL_4
0x4000df3	          0x4889c7	                            mov rdi, rax	       256	checkout.c	FUNCTION_9	CALL_4
0x4000df6	      0xb800000000	                              mov eax, 0	       256	checkout.c	FUNCTION_9	CALL_4
0x4000dfb	      0xe800000000	                          call 0x4000e00	       256	checkout.c	FUNCTION_9	CALL_4
0x4000e00	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       258	checkout.c	FUNCTION_9	IF_3
0x4000e07	          0x8b400c	              mov eax, dword [rax + 0xc]	       258	checkout.c	FUNCTION_9	IF_3
0x4000e0a	            0x85c0	                           test eax, eax	       258	checkout.c	FUNCTION_9	IF_3
0x4000e0c	            0x7429	                            je 0x4000e37	       258	checkout.c	FUNCTION_9	IF_3
0x4000e0e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       258	checkout.c	FUNCTION_9	IF_3
0x4000e15	            0x8b00	                    mov eax, dword [rax]	       258	checkout.c	FUNCTION_9	IF_3
0x4000e17	            0x85c0	                           test eax, eax	       258	checkout.c	FUNCTION_9	IF_3
0x4000e19	            0x741c	                            je 0x4000e37	       258	checkout.c	FUNCTION_9	IF_3
0x4000e1b	      0xbf00000000	                              mov edi, 0	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e20	      0xe855f3ffff	                               call sym.	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e25	      0xbe00000000	                              mov esi, 0	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e2a	          0x4889c7	                            mov rdi, rax	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e2d	      0xb800000000	                              mov eax, 0	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e32	      0xe800000000	                          call 0x4000e37	       259	checkout.c	FUNCTION_9	CALL_6
0x4000e37	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       261	checkout.c	FUNCTION_9	IF_4
0x4000e3e	          0x8b4010	            mov eax, dword [rax + 0x10] 	       261	checkout.c	FUNCTION_9	IF_4
0x4000e41	            0x85c0	                           test eax, eax	       261	checkout.c	FUNCTION_9	IF_4
0x4000e43	            0x741c	                            je 0x4000e61	       261	checkout.c	FUNCTION_9	IF_4
0x4000e45	      0xbf00000000	                              mov edi, 0	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e4a	      0xe82bf3ffff	                               call sym.	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e4f	      0xbe00000000	                              mov esi, 0	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e54	          0x4889c7	                            mov rdi, rax	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e57	      0xb800000000	                              mov eax, 0	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e5c	      0xe800000000	                          call 0x4000e61	       262	checkout.c	FUNCTION_9	CALL_8
0x4000e61	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       264	checkout.c	FUNCTION_9	IF_5
0x4000e68	          0x8b4008	                mov eax, dword [rax + 8]	       264	checkout.c	FUNCTION_9	IF_5
0x4000e6b	            0x85c0	                           test eax, eax	       264	checkout.c	FUNCTION_9	IF_5
0x4000e6d	            0x742e	                            je 0x4000e9d	       264	checkout.c	FUNCTION_9	IF_5
0x4000e6f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       264	checkout.c	FUNCTION_9	IF_5
0x4000e76	            0x8b00	                    mov eax, dword [rax]	       264	checkout.c	FUNCTION_9	IF_5
0x4000e78	            0x85c0	                           test eax, eax	       264	checkout.c	FUNCTION_9	IF_5
0x4000e7a	            0x7421	                            je 0x4000e9d	       264	checkout.c	FUNCTION_9	IF_5
0x4000e7c	      0xbf00000000	                              mov edi, 0	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e81	      0xe8f4f2ffff	                               call sym.	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e86	      0xba00000000	                              mov edx, 0	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e8b	      0xbe00000000	                              mov esi, 0	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e90	          0x4889c7	                            mov rdi, rax	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e93	      0xb800000000	                              mov eax, 0	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e98	      0xe800000000	                          call 0x4000e9d	       265	checkout.c	FUNCTION_9	CALL_10
0x4000e9d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       267	checkout.c	FUNCTION_9	IF_6
0x4000ea4	          0x8b400c	              mov eax, dword [rax + 0xc]	       267	checkout.c	FUNCTION_9	IF_6
0x4000ea7	            0x85c0	                           test eax, eax	       267	checkout.c	FUNCTION_9	IF_6
0x4000ea9	            0x742f	                            je 0x4000eda	       267	checkout.c	FUNCTION_9	IF_6
0x4000eab	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       267	checkout.c	FUNCTION_9	IF_6
0x4000eb2	          0x8b4008	                mov eax, dword [rax + 8]	       267	checkout.c	FUNCTION_9	IF_6
0x4000eb5	            0x85c0	                           test eax, eax	       267	checkout.c	FUNCTION_9	IF_6
0x4000eb7	            0x7421	                            je 0x4000eda	       267	checkout.c	FUNCTION_9	IF_6
0x4000eb9	      0xbf00000000	                              mov edi, 0	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ebe	      0xe8b7f2ffff	                               call sym.	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ec3	      0xba00000000	                              mov edx, 0	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ec8	      0xbe00000000	                              mov esi, 0	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ecd	          0x4889c7	                            mov rdi, rax	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ed0	      0xb800000000	                              mov eax, 0	       268	checkout.c	FUNCTION_9	CALL_12
0x4000ed5	      0xe800000000	                          call 0x4000eda	       268	checkout.c	FUNCTION_9	CALL_12
0x4000eda	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       270	checkout.c	FUNCTION_9	IF_7
0x4000ee1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       270	checkout.c	FUNCTION_9	IF_7
0x4000ee5	          0x4885c0	                           test rax, rax	       270	checkout.c	FUNCTION_9	IF_7
0x4000ee8	            0x7425	                            je 0x4000f0f	       270	checkout.c	FUNCTION_9	IF_7
0x4000eea	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000ef1	        0x488b5828	            mov rbx, qword [rax + 0x28] 	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000ef5	      0xbf00000000	                              mov edi, 0	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000efa	      0xe87bf2ffff	                               call sym.	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000eff	          0x4889de	                            mov rsi, rbx	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000f02	          0x4889c7	                            mov rdi, rax	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000f05	      0xb800000000	                              mov eax, 0	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000f0a	      0xe800000000	                          call 0x4000f0f	       271	checkout.c	FUNCTION_9	IF_7	CALL_14
0x4000f0f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       274	checkout.c	FUNCTION_9	IF_8
0x4000f16	            0x8b00	                    mov eax, dword [rax]	       274	checkout.c	FUNCTION_9	IF_8
0x4000f18	            0x85c0	                           test eax, eax	       274	checkout.c	FUNCTION_9	IF_8
0x4000f1a	            0x7427	                            je 0x4000f43	       274	checkout.c	FUNCTION_9	IF_8
0x4000f1c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f23	    0x488d90d80100	                  lea rdx, [rax + 0x1d8]	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f2a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f31	      0xbe00000000	                              mov esi, 0	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f36	          0x4889c7	                            mov rdi, rax	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f39	      0xe800000000	                          call 0x4000f3e	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f3e	      0xe93b050000	                           jmp 0x400147e	       275	checkout.c	FUNCTION_9	IF_8	CALL_15
0x4000f43	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       278	checkout.c	FUNCTION_9	CALL_16
0x4000f4a	      0xbe01000000	                              mov esi, 1	       278	checkout.c	FUNCTION_9	CALL_16
0x4000f4f	          0x4889c7	                            mov rdi, rax	       278	checkout.c	FUNCTION_9	CALL_16
0x4000f52	      0xe800000000	                          call 0x4000f57	       278	checkout.c	FUNCTION_9	CALL_16
0x4000f57	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       279	checkout.c	FUNCTION_9	IF_9
0x4000f5e	    0x4805d8010000	                          add rax, 0x1d8	       279	checkout.c	FUNCTION_9	IF_9
0x4000f64	          0x4889c6	                            mov rsi, rax	       279	checkout.c	FUNCTION_9	IF_9
0x4000f67	      0xbf00000000	                              mov edi, 0	       279	checkout.c	FUNCTION_9	IF_9
0x4000f6c	      0xe800000000	                          call 0x4000f71	       279	checkout.c	FUNCTION_9	IF_9
0x4000f71	            0x85c0	                           test eax, eax	       279	checkout.c	FUNCTION_9	IF_9
0x4000f73	            0x7921	                           jns 0x4000f96	       279	checkout.c	FUNCTION_9	IF_9
0x4000f75	      0xbf00000000	                              mov edi, 0	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f7a	      0xe8fbf1ffff	                               call sym.	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f7f	          0x4889c7	                            mov rdi, rax	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f82	      0xb800000000	                              mov eax, 0	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f87	      0xe800000000	                          call 0x4000f8c	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f8c	      0xe8aff0ffff	                    call sym.const_error	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f91	      0xe9e8040000	                           jmp 0x400147e	       280	checkout.c	FUNCTION_9	CALL_17
0x4000f96	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       282	checkout.c	FUNCTION_9	IF_10
0x4000f9d	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	       282	checkout.c	FUNCTION_9	IF_10
0x4000fa4	          0x4885c0	                           test rax, rax	       282	checkout.c	FUNCTION_9	IF_10
0x4000fa7	            0x7427	                            je 0x4000fd0	       282	checkout.c	FUNCTION_9	IF_10
0x4000fa9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fb0	    0x488d90d80100	                  lea rdx, [rax + 0x1d8]	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fb7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fbe	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fc5	          0x4889d6	                            mov rsi, rdx	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fc8	          0x4889c7	                            mov rdi, rax	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fcb	      0xe849f6ffff	                 call sym.read_tree_some	       283	checkout.c	FUNCTION_9	CALL_18
0x4000fd0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fd7	    0x8b80d8010000	           mov eax, dword [rax + 0x1d8] 	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fdd	            0x4898	                                    cdqe	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fdf	      0xbe01000000	                              mov esi, 1	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fe4	          0x4889c7	                            mov rdi, rax	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fe7	      0xe800000000	                          call 0x4000fec	       285	checkout.c	FUNCTION_9	CALL_19
0x4000fec	    0x488905000000	            mov qword [0x04000ff3], rax 	       285	checkout.c	FUNCTION_9	CALL_19
0x4000ff3	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	       291	checkout.c	FUNCTION_9	FOR_1
0x4000ffd	      0xe9be000000	                           jmp 0x40010c0	       291	checkout.c	FUNCTION_9	FOR_1
0x4001002	    0x488b05000000	            mov rax, qword [0x04001009] 	       292	checkout.c	FUNCTION_9	FOR_1
0x4001009	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       292	checkout.c	FUNCTION_9	FOR_1
0x400100f	          0x4863d2	                         movsxd rdx, edx	       292	checkout.c	FUNCTION_9	FOR_1
0x4001012	        0x48c1e203	                              shl rdx, 3	       292	checkout.c	FUNCTION_9	FOR_1
0x4001016	          0x4801d0	                            add rax, rdx	       292	checkout.c	FUNCTION_9	FOR_1
0x4001019	          0x488b00	                    mov rax, qword [rax]	       292	checkout.c	FUNCTION_9	FOR_1
0x400101c	        0x48894580	             mov qword [rbp - 0x80], rax	       292	checkout.c	FUNCTION_9	FOR_1
0x4001020	        0x488b4580	             mov rax, qword [rbp - 0x80]	       293	checkout.c	FUNCTION_9	FOR_1
0x4001024	          0x8b4038	            mov eax, dword [rax + 0x38] 	       293	checkout.c	FUNCTION_9	FOR_1
0x4001027	      0x25fffffffb	                     and eax, 0xfbffffff	       293	checkout.c	FUNCTION_9	FOR_1
0x400102c	            0x89c2	                            mov edx, eax	       293	checkout.c	FUNCTION_9	FOR_1
0x400102e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       293	checkout.c	FUNCTION_9	FOR_1
0x4001032	          0x895038	             mov dword [rax + 0x38], edx	       293	checkout.c	FUNCTION_9	FOR_1
0x4001035	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x400103c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x400103f	            0x85c0	                           test eax, eax	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x4001041	            0x7510	                           jne 0x4001053	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x4001043	        0x488b4580	             mov rax, qword [rbp - 0x80]	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x4001047	          0x8b4038	            mov eax, dword [rax + 0x38] 	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x400104a	      0x2500000040	                     and eax, 0x40000000	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x400104f	            0x85c0	                           test eax, eax	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x4001051	            0x7562	                           jne 0x40010b5	       294	checkout.c	FUNCTION_9	FOR_1	IF_11
0x4001053	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x400105a	    0x488b80f00100	           mov rax, qword [rax + 0x1f0] 	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001061	          0x4885c0	                           test rax, rax	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001064	            0x7410	                            je 0x4001076	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001066	        0x488b4580	             mov rax, qword [rbp - 0x80]	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x400106a	          0x8b4038	            mov eax, dword [rax + 0x38] 	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x400106d	      0x2500000100	                        and eax, 0x10000	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001072	            0x85c0	                           test eax, eax	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001074	            0x7442	                            je 0x40010b8	       296	checkout.c	FUNCTION_9	FOR_1	IF_12
0x4001076	    0x488b15000000	            mov rdx, qword [0x0400107d] 	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400107d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x4001084	    0x488d88d80100	                  lea rcx, [rax + 0x1d8]	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400108b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400108f	          0x4889ce	                            mov rsi, rcx	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x4001092	          0x4889c7	                            mov rdi, rax	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x4001095	      0xe8a7f2ffff	                  call sym.ce_path_match	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400109a	            0x85c0	                           test eax, eax	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400109c	            0x741b	                            je 0x40010b9	       319	checkout.c	FUNCTION_9	FOR_1	IF_13	CALL_20
0x400109e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010a2	          0x8b4038	            mov eax, dword [rax + 0x38] 	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010a5	       0xd00000004	 or eax, loc.imp.validate_new_branchname	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010aa	            0x89c2	                            mov edx, eax	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010ac	        0x488b4580	             mov rax, qword [rbp - 0x80]	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010b0	          0x895038	             mov dword [rax + 0x38], edx	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010b3	            0xeb04	                           jmp 0x40010b9	       320	checkout.c	FUNCTION_9	FOR_1	IF_13
0x40010b5	              0x90	                                     nop	       295	checkout.c	FUNCTION_9	FOR_1	IF_11
0x40010b6	            0xeb01	                           jmp 0x40010b9	       295	checkout.c	FUNCTION_9	FOR_1	IF_11
0x40010b8	              0x90	                                     nop	       304	checkout.c	FUNCTION_9	FOR_1	IF_12
0x40010b9	    0x838568ffffff	               add dword [rbp - 0x98], 1	       291	checkout.c	FUNCTION_9	FOR_1
0x40010c0	    0x8b1500000000	            mov edx, dword [0x040010c6] 	       291	checkout.c	FUNCTION_9	FOR_1
0x40010c6	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       291	checkout.c	FUNCTION_9	FOR_1
0x40010cc	            0x39c2	                            cmp edx, eax	       291	checkout.c	FUNCTION_9	FOR_1
0x40010ce	     0xf872effffff	                            ja 0x4001002	       291	checkout.c	FUNCTION_9	FOR_1
0x40010d4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010db	    0x488b90d00100	           mov rdx, qword [rax + 0x1d0] 	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010e2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010e9	    0x488d88d80100	                  lea rcx, [rax + 0x1d8]	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010f0	    0x488b05000000	            mov rax, qword [0x040010f7] 	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010f7	          0x4889ce	                            mov rsi, rcx	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010fa	          0x4889c7	                            mov rdi, rax	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x40010fd	      0xe800000000	                          call 0x4001102	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x4001102	            0x85c0	                           test eax, eax	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x4001104	            0x7419	                            je 0x400111f	       323	checkout.c	FUNCTION_9	IF_14	CALL_21
0x4001106	    0x488b05000000	            mov rax, qword [0x0400110d] 	       324	checkout.c	FUNCTION_9	IF_14	CALL_22
0x400110d	          0x4889c7	                            mov rdi, rax	       324	checkout.c	FUNCTION_9	IF_14	CALL_22
0x4001110	      0xe800000000	                          call 0x4001115	       324	checkout.c	FUNCTION_9	IF_14	CALL_22
0x4001115	      0xb801000000	                              mov eax, 1	       325	checkout.c	FUNCTION_9	IF_14
0x400111a	      0xe95f030000	                           jmp 0x400147e	       325	checkout.c	FUNCTION_9	IF_14
0x400111f	    0x488b05000000	            mov rax, qword [0x04001126] 	       327	checkout.c	FUNCTION_9	CALL_23
0x4001126	          0x4889c7	                            mov rdi, rax	       327	checkout.c	FUNCTION_9	CALL_23
0x4001129	      0xe800000000	                          call 0x400112e	       327	checkout.c	FUNCTION_9	CALL_23
0x400112e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       330	checkout.c	FUNCTION_9	IF_15
0x4001135	          0x8b4008	                mov eax, dword [rax + 8]	       330	checkout.c	FUNCTION_9	IF_15
0x4001138	            0x85c0	                           test eax, eax	       330	checkout.c	FUNCTION_9	IF_15
0x400113a	            0x740a	                            je 0x4001146	       330	checkout.c	FUNCTION_9	IF_15
0x400113c	      0xbf00000000	                              mov edi, 0	       331	checkout.c	FUNCTION_9	CALL_24
0x4001141	      0xe800000000	                          call 0x4001146	       331	checkout.c	FUNCTION_9	CALL_24
0x4001146	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	       334	checkout.c	FUNCTION_9	FOR_2
0x4001150	      0xe937010000	                           jmp 0x400128c	       334	checkout.c	FUNCTION_9	FOR_2
0x4001155	    0x488b05000000	            mov rax, qword [0x0400115c] 	       335	checkout.c	FUNCTION_9	FOR_2
0x400115c	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       335	checkout.c	FUNCTION_9	FOR_2
0x4001162	          0x4863d2	                         movsxd rdx, edx	       335	checkout.c	FUNCTION_9	FOR_2
0x4001165	        0x48c1e203	                              shl rdx, 3	       335	checkout.c	FUNCTION_9	FOR_2
0x4001169	          0x4801d0	                            add rax, rdx	       335	checkout.c	FUNCTION_9	FOR_2
0x400116c	          0x488b00	                    mov rax, qword [rax]	       335	checkout.c	FUNCTION_9	FOR_2
0x400116f	        0x48894588	             mov qword [rbp - 0x78], rax	       335	checkout.c	FUNCTION_9	FOR_2
0x4001173	        0x488b4588	             mov rax, qword [rbp - 0x78]	       336	checkout.c	FUNCTION_9	FOR_2	IF_16
0x4001177	          0x8b4038	            mov eax, dword [rax + 0x38] 	       336	checkout.c	FUNCTION_9	FOR_2	IF_16
0x400117a	      0x2500000004	and eax, loc.imp.validate_new_branchname	       336	checkout.c	FUNCTION_9	FOR_2	IF_16
0x400117f	            0x85c0	                           test eax, eax	       336	checkout.c	FUNCTION_9	FOR_2	IF_16
0x4001181	     0xf84fe000000	                            je 0x4001285	       336	checkout.c	FUNCTION_9	FOR_2	IF_16
0x4001187	        0x488b4588	             mov rax, qword [rbp - 0x78]	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x400118b	          0x8b4038	            mov eax, dword [rax + 0x38] 	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x400118e	      0x2500300000	                         and eax, 0x3000	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x4001193	          0xc1e80c	                            shr eax, 0xc	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x4001196	            0x85c0	                           test eax, eax	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x4001198	     0xf84e6000000	                            je 0x4001284	       337	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x400119e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       339	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18
0x40011a5	          0x8b400c	              mov eax, dword [rax + 0xc]	       339	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18
0x40011a8	            0x85c0	                           test eax, eax	       339	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18
0x40011aa	            0x7427	                            je 0x40011d3	       339	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18
0x40011ac	        0x488b4588	             mov rax, qword [rbp - 0x78]	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011b0	        0x488d5858	                   lea rbx, [rax + 0x58]	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011b4	      0xbf00000000	                              mov edi, 0	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011b9	      0xe8bcefffff	                               call sym.	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011be	          0x4889de	                            mov rsi, rbx	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011c1	          0x4889c7	                            mov rdi, rax	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011c4	      0xb800000000	                              mov eax, 0	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011c9	      0xe800000000	                          call 0x40011ce	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011ce	      0xe992000000	                           jmp 0x4001265	       340	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_18	CALL_26
0x40011d3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       341	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19
0x40011da	          0x8b4014	            mov eax, dword [rax + 0x14] 	       341	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19
0x40011dd	            0x85c0	                           test eax, eax	       341	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19
0x40011df	            0x7426	                            je 0x4001207	       341	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19
0x40011e1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011e8	          0x8b4014	            mov eax, dword [rax + 0x14] 	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011eb	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011f1	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011f5	          0x4889ce	                            mov rsi, rcx	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011f8	            0x89c7	                            mov edi, eax	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011fa	      0xe8baf4ffff	                    call sym.check_stage	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x40011ff	     0x9856cffffff	              or dword [rbp - 0x94], eax	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x4001205	            0xeb5e	                           jmp 0x4001265	       342	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_1	IF_19	CALL_27
0x4001207	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       343	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20
0x400120e	          0x8b4008	                mov eax, dword [rax + 8]	       343	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20
0x4001211	            0x85c0	                           test eax, eax	       343	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20
0x4001213	            0x741f	                            je 0x4001234	       343	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20
0x4001215	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x400121b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x400121f	          0x4889c6	                            mov rsi, rax	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x4001222	      0xbf0c000000	                            mov edi, 0xc	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x4001227	      0xe877f5ffff	                   call sym.check_stages	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x400122c	     0x9856cffffff	              or dword [rbp - 0x94], eax	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x4001232	            0xeb31	                           jmp 0x4001265	       344	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_2	IF_20	CALL_28
0x4001234	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	       346	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3
0x400123e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001242	        0x488d5858	                   lea rbx, [rax + 0x58]	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001246	      0xbf00000000	                              mov edi, 0	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x400124b	      0xe82aefffff	                               call sym.	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001250	          0x4889de	                            mov rsi, rbx	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001253	          0x4889c7	                            mov rdi, rax	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001256	      0xb800000000	                              mov eax, 0	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x400125b	      0xe800000000	                          call 0x4001260	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001260	      0xe8dbedffff	                    call sym.const_error	       347	checkout.c	FUNCTION_9	FOR_2	IF_16	ELSE_3	CALL_29
0x4001265	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x400126b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x400126f	            0x89d6	                            mov esi, edx	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x4001271	          0x4889c7	                            mov rdi, rax	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x4001274	      0xe8e9f3ffff	                 call sym.skip_same_name	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x4001279	          0x83e801	                              sub eax, 1	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x400127c	    0x898568ffffff	             mov dword [rbp - 0x98], eax	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x4001282	            0xeb01	                           jmp 0x4001285	       349	checkout.c	FUNCTION_9	FOR_2	IF_16	CALL_30
0x4001284	              0x90	                                     nop	       338	checkout.c	FUNCTION_9	FOR_2	IF_16	IF_17
0x4001285	    0x838568ffffff	               add dword [rbp - 0x98], 1	       334	checkout.c	FUNCTION_9	FOR_2
0x400128c	    0x8b1500000000	            mov edx, dword [0x04001292] 	       334	checkout.c	FUNCTION_9	FOR_2
0x4001292	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       334	checkout.c	FUNCTION_9	FOR_2
0x4001298	            0x39c2	                            cmp edx, eax	       334	checkout.c	FUNCTION_9	FOR_2
0x400129a	     0xf87b5feffff	                            ja 0x4001155	       334	checkout.c	FUNCTION_9	FOR_2
0x40012a0	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       352	checkout.c	FUNCTION_9	IF_21
0x40012a7	            0x740a	                            je 0x40012b3	       352	checkout.c	FUNCTION_9	IF_21
0x40012a9	      0xb801000000	                              mov eax, 1	       353	checkout.c	FUNCTION_9	IF_21
0x40012ae	      0xe9cb010000	                           jmp 0x400147e	       353	checkout.c	FUNCTION_9	IF_21
0x40012b3	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	       356	checkout.c	FUNCTION_9
0x40012b7	          0x83c801	                               or eax, 1	       356	checkout.c	FUNCTION_9
0x40012ba	          0x8845c0	               mov byte [rbp - 0x40], al	       356	checkout.c	FUNCTION_9
0x40012bd	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	       357	checkout.c	FUNCTION_9
0x40012c1	          0x83c808	                               or eax, 8	       357	checkout.c	FUNCTION_9
0x40012c4	          0x8845c0	               mov byte [rbp - 0x40], al	       357	checkout.c	FUNCTION_9
0x40012c7	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       358	checkout.c	FUNCTION_9
0x40012cf	        0x488d45a0	                   lea rax, [rbp - 0x60]	       360	checkout.c	FUNCTION_9	CALL_31
0x40012d3	          0x4889c7	                            mov rdi, rax	       360	checkout.c	FUNCTION_9	CALL_31
0x40012d6	      0xe800000000	                          call 0x40012db	       360	checkout.c	FUNCTION_9	CALL_31
0x40012db	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	       361	checkout.c	FUNCTION_9	FOR_3
0x40012e5	      0xe9e6000000	                           jmp 0x40013d0	       361	checkout.c	FUNCTION_9	FOR_3
0x40012ea	    0x488b05000000	            mov rax, qword [0x040012f1] 	       362	checkout.c	FUNCTION_9	FOR_3
0x40012f1	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       362	checkout.c	FUNCTION_9	FOR_3
0x40012f7	          0x4863d2	                         movsxd rdx, edx	       362	checkout.c	FUNCTION_9	FOR_3
0x40012fa	        0x48c1e203	                              shl rdx, 3	       362	checkout.c	FUNCTION_9	FOR_3
0x40012fe	          0x4801d0	                            add rax, rdx	       362	checkout.c	FUNCTION_9	FOR_3
0x4001301	          0x488b00	                    mov rax, qword [rax]	       362	checkout.c	FUNCTION_9	FOR_3
0x4001304	        0x48894590	             mov qword [rbp - 0x70], rax	       362	checkout.c	FUNCTION_9	FOR_3
0x4001308	        0x488b4590	             mov rax, qword [rbp - 0x70]	       363	checkout.c	FUNCTION_9	FOR_3	IF_22
0x400130c	          0x8b4038	            mov eax, dword [rax + 0x38] 	       363	checkout.c	FUNCTION_9	FOR_3	IF_22
0x400130f	      0x2500000004	and eax, loc.imp.validate_new_branchname	       363	checkout.c	FUNCTION_9	FOR_3	IF_22
0x4001314	            0x85c0	                           test eax, eax	       363	checkout.c	FUNCTION_9	FOR_3	IF_22
0x4001316	     0xf84ad000000	                            je 0x40013c9	       363	checkout.c	FUNCTION_9	FOR_3	IF_22
0x400131c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x4001320	          0x8b4038	            mov eax, dword [rax + 0x38] 	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x4001323	      0x2500300000	                         and eax, 0x3000	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x4001328	          0xc1e80c	                            shr eax, 0xc	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x400132b	            0x85c0	                           test eax, eax	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x400132d	            0x7520	                           jne 0x400134f	       364	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x400132f	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x4001333	        0x488b4590	             mov rax, qword [rbp - 0x70]	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x4001337	      0xba00000000	                              mov edx, 0	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x400133c	          0x4889ce	                            mov rsi, rcx	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x400133f	          0x4889c7	                            mov rdi, rax	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x4001342	      0xe800000000	                          call 0x4001347	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x4001347	     0x9856cffffff	              or dword [rbp - 0x94], eax	       365	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23	CALL_32
0x400134d	            0xeb7a	                           jmp 0x40013c9	       366	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_23
0x400134f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       368	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_24
0x4001356	          0x8b4014	            mov eax, dword [rax + 0x14] 	       368	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_24
0x4001359	            0x85c0	                           test eax, eax	       368	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_24
0x400135b	            0x7427	                            je 0x4001384	       368	checkout.c	FUNCTION_9	FOR_3	IF_22	IF_24
0x400135d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001364	          0x8b4014	            mov eax, dword [rax + 0x14] 	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001367	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x400136b	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001371	        0x488b7590	             mov rsi, qword [rbp - 0x70]	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001375	            0x89c7	                            mov edi, eax	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001377	      0xe8eff4ffff	                 call sym.checkout_stage	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x400137c	     0x9856cffffff	              or dword [rbp - 0x94], eax	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001382	            0xeb28	                           jmp 0x40013ac	       369	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_33
0x4001384	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       370	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x400138b	          0x8b4008	                mov eax, dword [rax + 8]	       370	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x400138e	            0x85c0	                           test eax, eax	       370	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x4001390	            0x741a	                            je 0x40013ac	       370	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x4001392	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x4001396	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x400139c	          0x4889d6	                            mov rsi, rdx	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x400139f	            0x89c7	                            mov edi, eax	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x40013a1	      0xe8ddf5ffff	                call sym.checkout_merged	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x40013a6	     0x9856cffffff	              or dword [rbp - 0x94], eax	       371	checkout.c	FUNCTION_9	FOR_3	IF_22	ELSE_4	IF_25
0x40013ac	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013b2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013b6	            0x89d6	                            mov esi, edx	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013b8	          0x4889c7	                            mov rdi, rax	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013bb	      0xe8a2f2ffff	                 call sym.skip_same_name	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013c0	          0x83e801	                              sub eax, 1	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013c3	    0x898568ffffff	             mov dword [rbp - 0x98], eax	       372	checkout.c	FUNCTION_9	FOR_3	IF_22	CALL_35
0x40013c9	    0x838568ffffff	               add dword [rbp - 0x98], 1	       361	checkout.c	FUNCTION_9	FOR_3
0x40013d0	    0x8b1500000000	            mov edx, dword [0x040013d6] 	       361	checkout.c	FUNCTION_9	FOR_3
0x40013d6	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       361	checkout.c	FUNCTION_9	FOR_3
0x40013dc	            0x39c2	                            cmp edx, eax	       361	checkout.c	FUNCTION_9	FOR_3
0x40013de	     0xf8706ffffff	                            ja 0x40012ea	       361	checkout.c	FUNCTION_9	FOR_3
0x40013e4	        0x488d45a0	                   lea rax, [rbp - 0x60]	       375	checkout.c	FUNCTION_9	CALL_36
0x40013e8	          0x4889c7	                            mov rdi, rax	       375	checkout.c	FUNCTION_9	CALL_36
0x40013eb	      0xe800000000	                          call 0x40013f0	       375	checkout.c	FUNCTION_9	CALL_36
0x40013f0	     0x9856cffffff	              or dword [rbp - 0x94], eax	       375	checkout.c	FUNCTION_9	CALL_36
0x40013f6	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x40013fd	      0xba01000000	                              mov edx, 1	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x4001402	          0x4889c6	                            mov rsi, rax	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x4001405	      0xbf00000000	                              mov edi, 0	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x400140a	      0xe800000000	                          call 0x400140f	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x400140f	            0x85c0	                           test eax, eax	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x4001411	            0x7417	                            je 0x400142a	       377	checkout.c	FUNCTION_9	IF_26	CALL_37
0x4001413	      0xbf00000000	                              mov edi, 0	       378	checkout.c	FUNCTION_9	CALL_39
0x4001418	      0xe85dedffff	                               call sym.	       378	checkout.c	FUNCTION_9	CALL_39
0x400141d	          0x4889c7	                            mov rdi, rax	       378	checkout.c	FUNCTION_9	CALL_39
0x4001420	      0xb800000000	                              mov eax, 0	       378	checkout.c	FUNCTION_9	CALL_39
0x4001425	      0xe800000000	                          call 0x400142a	       378	checkout.c	FUNCTION_9	CALL_39
0x400142a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       380	checkout.c	FUNCTION_9	CALL_40
0x400142e	      0xb900000000	                              mov ecx, 0	       380	checkout.c	FUNCTION_9	CALL_40
0x4001433	          0x4889c2	                            mov rdx, rax	       380	checkout.c	FUNCTION_9	CALL_40
0x4001436	      0xbe00000000	                              mov esi, 0	       380	checkout.c	FUNCTION_9	CALL_40
0x400143b	      0xbf00000000	                              mov edi, 0	       380	checkout.c	FUNCTION_9	CALL_40
0x4001440	      0xe800000000	                          call 0x4001445	       380	checkout.c	FUNCTION_9	CALL_40
0x4001445	        0x488d45d0	                   lea rax, [rbp - 0x30]	       381	checkout.c	FUNCTION_9	CALL_41
0x4001449	      0xbe01000000	                              mov esi, 1	       381	checkout.c	FUNCTION_9	CALL_41
0x400144e	          0x4889c7	                            mov rdi, rax	       381	checkout.c	FUNCTION_9	CALL_41
0x4001451	      0xe800000000	                          call 0x4001456	       381	checkout.c	FUNCTION_9	CALL_41
0x4001456	        0x48894598	             mov qword [rbp - 0x68], rax	       381	checkout.c	FUNCTION_9	CALL_41
0x400145a	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       383	checkout.c	FUNCTION_9	CALL_42
0x400145e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       383	checkout.c	FUNCTION_9	CALL_42
0x4001462	      0xba00000000	                              mov edx, 0	       383	checkout.c	FUNCTION_9	CALL_42
0x4001467	          0x4889ce	                            mov rsi, rcx	       383	checkout.c	FUNCTION_9	CALL_42
0x400146a	          0x4889c7	                            mov rdi, rax	       383	checkout.c	FUNCTION_9	CALL_42
0x400146d	      0xe845efffff	             call sym.post_checkout_hook	       383	checkout.c	FUNCTION_9	CALL_42
0x4001472	     0x9856cffffff	              or dword [rbp - 0x94], eax	       383	checkout.c	FUNCTION_9	CALL_42
0x4001478	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       384	checkout.c	FUNCTION_9
0x400147e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       385	checkout.c	FUNCTION_9
0x4001482	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       385	checkout.c	FUNCTION_9
0x400148b	            0x7405	                            je 0x4001492	       385	checkout.c	FUNCTION_9
0x400148d	      0xe800000000	                          call 0x4001492	       385	checkout.c	FUNCTION_9
0x4001492	    0x4881c4a80000	                           add rsp, 0xa8	       385	checkout.c	FUNCTION_9
0x4001499	              0x5b	                                 pop rbx	       385	checkout.c	FUNCTION_9
0x400149a	              0x5d	                                 pop rbp	       385	checkout.c	FUNCTION_9
0x400149b	              0xc3	                                     ret	       385	checkout.c	FUNCTION_9
checkout_branch	CALL,24:functions,0:ELSE,2:SWITCH,0:FOR,0:DO,0:IF,15:WHILE,0	209
0x4002fa4	              0x55	                                push rbp	      1052	checkout.c	FUNCTION_25
0x4002fa5	          0x4889e5	                            mov rbp, rsp	      1052	checkout.c	FUNCTION_25
0x4002fa8	              0x53	                                push rbx	      1052	checkout.c	FUNCTION_25
0x4002fa9	        0x4883ec48	                           sub rsp, 0x48	      1052	checkout.c	FUNCTION_25
0x4002fad	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1052	checkout.c	FUNCTION_25
0x4002fb1	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1052	checkout.c	FUNCTION_25
0x4002fb5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1052	checkout.c	FUNCTION_25
0x4002fbe	        0x488945e8	             mov qword [rbp - 0x18], rax	      1052	checkout.c	FUNCTION_25
0x4002fc2	            0x31c0	                            xor eax, eax	      1052	checkout.c	FUNCTION_25
0x4002fc4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1053	checkout.c	FUNCTION_25	IF_1
0x4002fc8	    0x8b80d8010000	           mov eax, dword [rax + 0x1d8] 	      1053	checkout.c	FUNCTION_25	IF_1
0x4002fce	            0x85c0	                           test eax, eax	      1053	checkout.c	FUNCTION_25	IF_1
0x4002fd0	            0x7417	                            je 0x4002fe9	      1053	checkout.c	FUNCTION_25	IF_1
0x4002fd2	      0xbf00000000	                              mov edi, 0	      1054	checkout.c	FUNCTION_25	CALL_2
0x4002fd7	      0xe89ed1ffff	                               call sym.	      1054	checkout.c	FUNCTION_25	CALL_2
0x4002fdc	          0x4889c7	                            mov rdi, rax	      1054	checkout.c	FUNCTION_25	CALL_2
0x4002fdf	      0xb800000000	                              mov eax, 0	      1054	checkout.c	FUNCTION_25	CALL_2
0x4002fe4	      0xe800000000	                          call 0x4002fe9	      1054	checkout.c	FUNCTION_25	CALL_2
0x4002fe9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1056	checkout.c	FUNCTION_25	IF_2
0x4002fed	            0x8b00	                    mov eax, dword [rax]	      1056	checkout.c	FUNCTION_25	IF_2
0x4002fef	            0x85c0	                           test eax, eax	      1056	checkout.c	FUNCTION_25	IF_2
0x4002ff1	            0x741c	                            je 0x400300f	      1056	checkout.c	FUNCTION_25	IF_2
0x4002ff3	      0xbf00000000	                              mov edi, 0	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x4002ff8	      0xe87dd1ffff	                               call sym.	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x4002ffd	      0xbe00000000	                              mov esi, 0	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x4003002	          0x4889c7	                            mov rdi, rax	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x4003005	      0xb800000000	                              mov eax, 0	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x400300a	      0xe800000000	                          call 0x400300f	      1057	checkout.c	FUNCTION_25	IF_2	CALL_4
0x400300f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1060	checkout.c	FUNCTION_25	IF_3
0x4003013	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1060	checkout.c	FUNCTION_25	IF_3
0x4003016	            0x85c0	                           test eax, eax	      1060	checkout.c	FUNCTION_25	IF_3
0x4003018	            0x741c	                            je 0x4003036	      1060	checkout.c	FUNCTION_25	IF_3
0x400301a	      0xbf00000000	                              mov edi, 0	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x400301f	      0xe856d1ffff	                               call sym.	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x4003024	      0xbe00000000	                              mov esi, 0	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x4003029	          0x4889c7	                            mov rdi, rax	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x400302c	      0xb800000000	                              mov eax, 0	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x4003031	      0xe800000000	                          call 0x4003036	      1061	checkout.c	FUNCTION_25	IF_3	CALL_6
0x4003036	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1064	checkout.c	FUNCTION_25	IF_4
0x400303a	          0x8b400c	              mov eax, dword [rax + 0xc]	      1064	checkout.c	FUNCTION_25	IF_4
0x400303d	            0x85c0	                           test eax, eax	      1064	checkout.c	FUNCTION_25	IF_4
0x400303f	            0x742c	                            je 0x400306d	      1064	checkout.c	FUNCTION_25	IF_4
0x4003041	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1064	checkout.c	FUNCTION_25	IF_4
0x4003045	          0x8b4008	                mov eax, dword [rax + 8]	      1064	checkout.c	FUNCTION_25	IF_4
0x4003048	            0x85c0	                           test eax, eax	      1064	checkout.c	FUNCTION_25	IF_4
0x400304a	            0x7421	                            je 0x400306d	      1064	checkout.c	FUNCTION_25	IF_4
0x400304c	      0xbf00000000	                              mov edi, 0	      1065	checkout.c	FUNCTION_25	CALL_8
0x4003051	      0xe824d1ffff	                               call sym.	      1065	checkout.c	FUNCTION_25	CALL_8
0x4003056	      0xba00000000	                              mov edx, 0	      1065	checkout.c	FUNCTION_25	CALL_8
0x400305b	      0xbe00000000	                              mov esi, 0	      1065	checkout.c	FUNCTION_25	CALL_8
0x4003060	          0x4889c7	                            mov rdi, rax	      1065	checkout.c	FUNCTION_25	CALL_8
0x4003063	      0xb800000000	                              mov eax, 0	      1065	checkout.c	FUNCTION_25	CALL_8
0x4003068	      0xe800000000	                          call 0x400306d	      1065	checkout.c	FUNCTION_25	CALL_8
0x400306d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1067	checkout.c	FUNCTION_25	IF_5
0x4003071	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1067	checkout.c	FUNCTION_25	IF_5
0x4003074	            0x85c0	                           test eax, eax	      1067	checkout.c	FUNCTION_25	IF_5
0x4003076	            0x742e	                            je 0x40030a6	      1067	checkout.c	FUNCTION_25	IF_5
0x4003078	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1067	checkout.c	FUNCTION_25	IF_5
0x400307c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1067	checkout.c	FUNCTION_25	IF_5
0x4003080	          0x4885c0	                           test rax, rax	      1067	checkout.c	FUNCTION_25	IF_5
0x4003083	            0x7421	                            je 0x40030a6	      1067	checkout.c	FUNCTION_25	IF_5
0x4003085	      0xbf00000000	                              mov edi, 0	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x400308a	      0xe8ebd0ffff	                               call sym.	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x400308f	      0xba00000000	                              mov edx, 0	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x4003094	      0xbe00000000	                              mov esi, 0	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x4003099	          0x4889c7	                            mov rdi, rax	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x400309c	      0xb800000000	                              mov eax, 0	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x40030a1	      0xe800000000	                          call 0x40030a6	      1068	checkout.c	FUNCTION_25	IF_5	CALL_10
0x40030a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1071	checkout.c	FUNCTION_25	IF_6
0x40030aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1071	checkout.c	FUNCTION_25	IF_6
0x40030ae	          0x4885c0	                           test rax, rax	      1071	checkout.c	FUNCTION_25	IF_6
0x40030b1	            0x742d	                            je 0x40030e0	      1071	checkout.c	FUNCTION_25	IF_6
0x40030b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1072	checkout.c	FUNCTION_25	IF_6	IF_7
0x40030b7	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1072	checkout.c	FUNCTION_25	IF_6	IF_7
0x40030ba	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1072	checkout.c	FUNCTION_25	IF_6	IF_7
0x40030bd	            0x7472	                            je 0x4003131	      1072	checkout.c	FUNCTION_25	IF_6	IF_7
0x40030bf	      0xbf00000000	                              mov edi, 0	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030c4	      0xe8b1d0ffff	                               call sym.	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030c9	      0xba00000000	                              mov edx, 0	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030ce	      0xbe00000000	                              mov esi, 0	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030d3	          0x4889c7	                            mov rdi, rax	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030d6	      0xb800000000	                              mov eax, 0	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030db	      0xe800000000	                          call 0x40030e0	      1073	checkout.c	FUNCTION_25	IF_6	CALL_12
0x40030e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1074	checkout.c	FUNCTION_25	ELSE_1	IF_8
0x40030e4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1074	checkout.c	FUNCTION_25	ELSE_1	IF_8
0x40030e7	            0x85c0	                           test eax, eax	      1074	checkout.c	FUNCTION_25	ELSE_1	IF_8
0x40030e9	            0x742d	                            je 0x4003118	      1074	checkout.c	FUNCTION_25	ELSE_1	IF_8
0x40030eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1075	checkout.c	FUNCTION_25	ELSE_1	IF_8	IF_9
0x40030ef	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1075	checkout.c	FUNCTION_25	ELSE_1	IF_8	IF_9
0x40030f2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1075	checkout.c	FUNCTION_25	ELSE_1	IF_8	IF_9
0x40030f5	            0x743a	                            je 0x4003131	      1075	checkout.c	FUNCTION_25	ELSE_1	IF_8	IF_9
0x40030f7	      0xbf00000000	                              mov edi, 0	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x40030fc	      0xe879d0ffff	                               call sym.	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x4003101	      0xba00000000	                              mov edx, 0	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x4003106	      0xbe00000000	                              mov esi, 0	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x400310b	          0x4889c7	                            mov rdi, rax	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x400310e	      0xb800000000	                              mov eax, 0	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x4003113	      0xe800000000	                          call 0x4003118	      1076	checkout.c	FUNCTION_25	ELSE_1	IF_8	CALL_14
0x4003118	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1077	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x400311c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1077	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x400311f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1077	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x4003122	            0x750d	                           jne 0x4003131	      1077	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x4003124	    0x8b1500000000	            mov edx, dword [0x0400312a] 	      1078	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x400312a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1078	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x400312e	          0x895044	             mov dword [rax + 0x44], edx	      1078	checkout.c	FUNCTION_25	ELSE_2	IF_10
0x4003131	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1080	checkout.c	FUNCTION_25	IF_11
0x4003135	          0x488b00	                    mov rax, qword [rax]	      1080	checkout.c	FUNCTION_25	IF_11
0x4003138	          0x4885c0	                           test rax, rax	      1080	checkout.c	FUNCTION_25	IF_11
0x400313b	            0x742e	                            je 0x400316b	      1080	checkout.c	FUNCTION_25	IF_11
0x400313d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1080	checkout.c	FUNCTION_25	IF_11
0x4003141	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1080	checkout.c	FUNCTION_25	IF_11
0x4003145	          0x4885c0	                           test rax, rax	      1080	checkout.c	FUNCTION_25	IF_11
0x4003148	            0x7521	                           jne 0x400316b	      1080	checkout.c	FUNCTION_25	IF_11
0x400314a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x400314e	          0x488b18	                    mov rbx, qword [rax]	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x4003151	      0xbf00000000	                              mov edi, 0	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x4003156	      0xe81fd0ffff	                               call sym.	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x400315b	          0x4889de	                            mov rsi, rbx	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x400315e	          0x4889c7	                            mov rdi, rax	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x4003161	      0xb800000000	                              mov eax, 0	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x4003166	      0xe800000000	                          call 0x400316b	      1081	checkout.c	FUNCTION_25	IF_11	CALL_16
0x400316b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1084	checkout.c	FUNCTION_25	IF_12
0x400316f	        0x488b4008	                mov rax, qword [rax + 8]	      1084	checkout.c	FUNCTION_25	IF_12
0x4003173	          0x4885c0	                           test rax, rax	      1084	checkout.c	FUNCTION_25	IF_12
0x4003176	     0xf8493000000	                            je 0x400320f	      1084	checkout.c	FUNCTION_25	IF_12
0x400317c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1084	checkout.c	FUNCTION_25	IF_12
0x4003180	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1084	checkout.c	FUNCTION_25	IF_12
0x4003183	            0x85c0	                           test eax, eax	      1084	checkout.c	FUNCTION_25	IF_12
0x4003185	     0xf8584000000	                           jne 0x400320f	      1084	checkout.c	FUNCTION_25	IF_12
0x400318b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1084	checkout.c	FUNCTION_25	IF_12
0x400318f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1084	checkout.c	FUNCTION_25	IF_12
0x4003193	          0x4885c0	                           test rax, rax	      1084	checkout.c	FUNCTION_25	IF_12
0x4003196	            0x7577	                           jne 0x400320f	      1084	checkout.c	FUNCTION_25	IF_12
0x4003198	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1085	checkout.c	FUNCTION_25	IF_12
0x400319c	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1085	checkout.c	FUNCTION_25	IF_12
0x400319f	            0x85c0	                           test eax, eax	      1084	checkout.c	FUNCTION_25	IF_12
0x40031a1	            0x756c	                           jne 0x400320f	      1084	checkout.c	FUNCTION_25	IF_12
0x40031a3	        0x488d45c4	                   lea rax, [rbp - 0x3c]	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031a7	          0x4889c1	                            mov rcx, rax	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031aa	      0xba00000000	                              mov edx, 0	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031af	      0xbe00000000	                              mov esi, 0	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031b4	      0xbf00000000	                              mov edi, 0	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031b9	      0xe800000000	                          call 0x40031be	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031be	        0x488945c8	             mov qword [rbp - 0x38], rax	      1087	checkout.c	FUNCTION_25	IF_12	CALL_17
0x40031c2	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1088	checkout.c	FUNCTION_25	IF_12	IF_13
0x40031c7	            0x743a	                            je 0x4003203	      1088	checkout.c	FUNCTION_25	IF_12	IF_13
0x40031c9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031cc	          0x83e001	                              and eax, 1	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031cf	            0x85c0	                           test eax, eax	      1088	checkout.c	FUNCTION_25	IF_12	IF_13
0x40031d1	            0x741b	                            je 0x40031ee	      1088	checkout.c	FUNCTION_25	IF_12	IF_13
0x40031d3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031d7	        0x488b5008	                mov rdx, qword [rax + 8]	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031df	          0x4889d6	                            mov rsi, rdx	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031e2	          0x4889c7	                            mov rdi, rax	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031e5	      0xe800000000	                          call 0x40031ea	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031ea	            0x85c0	                           test eax, eax	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031ec	            0x7415	                            je 0x4003203	      1089	checkout.c	FUNCTION_25	IF_12	IF_13	CALL_18
0x40031ee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1090	checkout.c	FUNCTION_25	IF_12	CALL_19
0x40031f2	        0x488b4008	                mov rax, qword [rax + 8]	      1090	checkout.c	FUNCTION_25	IF_12	CALL_19
0x40031f6	      0xbe01000000	                              mov esi, 1	      1090	checkout.c	FUNCTION_25	IF_12	CALL_19
0x40031fb	          0x4889c7	                            mov rdi, rax	      1090	checkout.c	FUNCTION_25	IF_12	CALL_19
0x40031fe	      0xe800000000	                          call 0x4003203	      1090	checkout.c	FUNCTION_25	IF_12	CALL_19
0x4003203	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1091	checkout.c	FUNCTION_25	IF_12	CALL_20
0x4003207	          0x4889c7	                            mov rdi, rax	      1091	checkout.c	FUNCTION_25	IF_12	CALL_20
0x400320a	      0xe800000000	                          call 0x400320f	      1091	checkout.c	FUNCTION_25	IF_12	CALL_20
0x400320f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1094	checkout.c	FUNCTION_25	IF_14
0x4003213	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1094	checkout.c	FUNCTION_25	IF_14
0x4003217	          0x4885c0	                           test rax, rax	      1094	checkout.c	FUNCTION_25	IF_14
0x400321a	            0x7556	                           jne 0x4003272	      1094	checkout.c	FUNCTION_25	IF_14
0x400321c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1094	checkout.c	FUNCTION_25	IF_14
0x4003220	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1094	checkout.c	FUNCTION_25	IF_14
0x4003224	          0x4885c0	                           test rax, rax	      1094	checkout.c	FUNCTION_25	IF_14
0x4003227	            0x7449	                            je 0x4003272	      1094	checkout.c	FUNCTION_25	IF_14
0x4003229	        0x488d55c4	                   lea rdx, [rbp - 0x3c]	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x400322d	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003231	          0x4889d1	                            mov rcx, rdx	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003234	          0x4889c2	                            mov rdx, rax	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003237	      0xbe00000000	                              mov esi, 0	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x400323c	      0xbf00000000	                              mov edi, 0	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003241	      0xe800000000	                          call 0x4003246	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003246	            0x85c0	                           test eax, eax	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003248	            0x7528	                           jne 0x4003272	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x400324a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x400324d	          0x83e001	                              and eax, 1	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x4003250	            0x85c0	                           test eax, eax	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003252	            0x741e	                            je 0x4003272	      1098	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_21
0x4003254	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x4003258	          0x4889c7	                            mov rdi, rax	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x400325b	      0xe82bd0ffff	                    call sym.is_null_oid	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x4003260	            0x85c0	                           test eax, eax	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x4003262	            0x740e	                            je 0x4003272	      1099	checkout.c	FUNCTION_25	IF_14	IF_15	CALL_22
0x4003264	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1100	checkout.c	FUNCTION_25	IF_14	CALL_23
0x4003268	          0x4889c7	                            mov rdi, rax	      1100	checkout.c	FUNCTION_25	IF_14	CALL_23
0x400326b	      0xe841fcffff	    call sym.switch_unborn_to_new_branch	      1100	checkout.c	FUNCTION_25	IF_14	CALL_23
0x4003270	            0xeb13	                           jmp 0x4003285	      1100	checkout.c	FUNCTION_25	IF_14	CALL_23
0x4003272	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1102	checkout.c	FUNCTION_25	CALL_24
0x4003276	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1102	checkout.c	FUNCTION_25	CALL_24
0x400327a	          0x4889d6	                            mov rsi, rdx	      1102	checkout.c	FUNCTION_25	CALL_24
0x400327d	          0x4889c7	                            mov rdi, rax	      1102	checkout.c	FUNCTION_25	CALL_24
0x4003280	      0xe816f6ffff	                call sym.switch_branches	      1102	checkout.c	FUNCTION_25	CALL_24
0x4003285	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1103	checkout.c	FUNCTION_25
0x4003289	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1103	checkout.c	FUNCTION_25
0x4003292	            0x7405	                            je 0x4003299	      1103	checkout.c	FUNCTION_25
0x4003294	      0xe800000000	                          call 0x4003299	      1103	checkout.c	FUNCTION_25
0x4003299	        0x4883c448	                           add rsp, 0x48	      1103	checkout.c	FUNCTION_25
0x400329d	              0x5b	                                 pop rbx	      1103	checkout.c	FUNCTION_25
0x400329e	              0x5d	                                 pop rbp	      1103	checkout.c	FUNCTION_25
0x400329f	              0xc3	                                     ret	      1103	checkout.c	FUNCTION_25
hashcmp	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,0:WHILE,0	13
0x400023c	              0x55	                                push rbp	       974	cache.h	FUNCTION_45
0x400023d	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_45
0x4000240	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_45
0x4000244	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_45
0x4000248	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_45
0x400024c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_45	CALL_1
0x4000250	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_45	CALL_1
0x4000254	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_45	CALL_1
0x4000259	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_45	CALL_1
0x400025c	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_45	CALL_1
0x400025f	      0xe800000000	                          call 0x4000264	       975	cache.h	FUNCTION_45	CALL_1
0x4000264	              0xc9	                                   leave	       976	cache.h	FUNCTION_45
0x4000265	              0xc3	                                     ret	       976	cache.h	FUNCTION_45
describe_one_orphan	CALL,6:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,1:WHILE,0	37
0x40024e5	              0x55	                                push rbp	       727	checkout.c	FUNCTION_18
0x40024e6	          0x4889e5	                            mov rbp, rsp	       727	checkout.c	FUNCTION_18
0x40024e9	        0x4883ec10	                           sub rsp, 0x10	       727	checkout.c	FUNCTION_18
0x40024ed	        0x48897df8	                mov qword [rbp - 8], rdi	       727	checkout.c	FUNCTION_18
0x40024f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       727	checkout.c	FUNCTION_18
0x40024f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       728	checkout.c	FUNCTION_18	CALL_1
0x40024f9	      0xbe00000000	                              mov esi, 0	       728	checkout.c	FUNCTION_18	CALL_1
0x40024fe	          0x4889c7	                            mov rdi, rax	       728	checkout.c	FUNCTION_18	CALL_1
0x4002501	      0xe83fdcffff	                  call sym.strbuf_addstr	       728	checkout.c	FUNCTION_18	CALL_1
0x4002506	    0x8b1500000000	            mov edx, dword [0x0400250c] 	       729	checkout.c	FUNCTION_18	CALL_2
0x400250c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       729	checkout.c	FUNCTION_18	CALL_2
0x4002510	        0x488d4804	                      lea rcx, [rax + 4]	       729	checkout.c	FUNCTION_18	CALL_2
0x4002514	        0x488b45f8	                mov rax, qword [rbp - 8]	       729	checkout.c	FUNCTION_18	CALL_2
0x4002518	          0x4889ce	                            mov rsi, rcx	       729	checkout.c	FUNCTION_18	CALL_2
0x400251b	          0x4889c7	                            mov rdi, rax	       729	checkout.c	FUNCTION_18	CALL_2
0x400251e	      0xe800000000	                          call 0x4002523	       729	checkout.c	FUNCTION_18	CALL_2
0x4002523	        0x488b45f8	                mov rax, qword [rbp - 8]	       730	checkout.c	FUNCTION_18	CALL_3
0x4002527	      0xbe20000000	                           mov esi, 0x20	       730	checkout.c	FUNCTION_18	CALL_3
0x400252c	          0x4889c7	                            mov rdi, rax	       730	checkout.c	FUNCTION_18	CALL_3
0x400252f	      0xe8a3dbffff	                   call sym.strbuf_addch	       730	checkout.c	FUNCTION_18	CALL_3
0x4002534	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       731	checkout.c	FUNCTION_18	IF_1	CALL_4
0x4002538	          0x4889c7	                            mov rdi, rax	       731	checkout.c	FUNCTION_18	IF_1	CALL_4
0x400253b	      0xe8e2ddffff	                   call sym.parse_commit	       731	checkout.c	FUNCTION_18	IF_1	CALL_4
0x4002540	            0x85c0	                           test eax, eax	       731	checkout.c	FUNCTION_18	IF_1	CALL_4
0x4002542	            0x7515	                           jne 0x4002559	       731	checkout.c	FUNCTION_18	IF_1	CALL_4
0x4002544	        0x488b55f8	                mov rdx, qword [rbp - 8]	       732	checkout.c	FUNCTION_18	CALL_5
0x4002548	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       732	checkout.c	FUNCTION_18	CALL_5
0x400254c	          0x4889c6	                            mov rsi, rax	       732	checkout.c	FUNCTION_18	CALL_5
0x400254f	      0xbf05000000	                              mov edi, 5	       732	checkout.c	FUNCTION_18	CALL_5
0x4002554	      0xe800000000	                          call 0x4002559	       732	checkout.c	FUNCTION_18	CALL_5
0x4002559	        0x488b45f8	                mov rax, qword [rbp - 8]	       733	checkout.c	FUNCTION_18	CALL_6
0x400255d	      0xbe0a000000	                            mov esi, 0xa	       733	checkout.c	FUNCTION_18	CALL_6
0x4002562	          0x4889c7	                            mov rdi, rax	       733	checkout.c	FUNCTION_18	CALL_6
0x4002565	      0xe86ddbffff	                   call sym.strbuf_addch	       733	checkout.c	FUNCTION_18	CALL_6
0x400256a	              0x90	                                     nop	       734	checkout.c	FUNCTION_18
0x400256b	              0xc9	                                   leave	       734	checkout.c	FUNCTION_18
0x400256c	              0xc3	                                     ret	       734	checkout.c	FUNCTION_18
skip_prefix	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,1:IF,1:WHILE,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_80
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_80
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_80
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_80
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_80
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_80	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_80	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_80	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_80
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_80
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_80
merge_working_tree	CALL,33:functions,0:ELSE,1:SWITCH,0:FOR,0:DO,0:IF,15:WHILE,0	300
0x400187d	              0x55	                                push rbp	       477	checkout.c	FUNCTION_14
0x400187e	          0x4889e5	                            mov rbp, rsp	       477	checkout.c	FUNCTION_14
0x4001881	              0x53	                                push rbx	       477	checkout.c	FUNCTION_14
0x4001882	    0x4881ec480800	                          sub rsp, 0x848	       477	checkout.c	FUNCTION_14
0x4001889	    0x4889bdc8f7ff	            mov qword [rbp - 0x838], rdi	       477	checkout.c	FUNCTION_14
0x4001890	    0x4889b5c0f7ff	            mov qword [rbp - 0x840], rsi	       477	checkout.c	FUNCTION_14
0x4001897	    0x488995b8f7ff	            mov qword [rbp - 0x848], rdx	       477	checkout.c	FUNCTION_14
0x400189e	    0x48898db0f7ff	            mov qword [rbp - 0x850], rcx	       477	checkout.c	FUNCTION_14
0x40018a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       477	checkout.c	FUNCTION_14
0x40018ae	        0x488945e8	             mov qword [rbp - 0x18], rax	       477	checkout.c	FUNCTION_14
0x40018b2	            0x31c0	                            xor eax, eax	       477	checkout.c	FUNCTION_14
0x40018b4	    0x48c785e0f7ff	              mov qword [rbp - 0x820], 0	       479	checkout.c	FUNCTION_14
0x40018bf	    0x488d85e0f7ff	                  lea rax, [rbp - 0x820]	       481	checkout.c	FUNCTION_14	CALL_1
0x40018c6	      0xbe01000000	                              mov esi, 1	       481	checkout.c	FUNCTION_14	CALL_1
0x40018cb	          0x4889c7	                            mov rdi, rax	       481	checkout.c	FUNCTION_14	CALL_1
0x40018ce	      0xe800000000	                          call 0x40018d3	       481	checkout.c	FUNCTION_14	CALL_1
0x40018d3	      0xbe00000000	                              mov esi, 0	       482	checkout.c	FUNCTION_14	IF_1
0x40018d8	      0xbf00000000	                              mov edi, 0	       482	checkout.c	FUNCTION_14	IF_1
0x40018dd	      0xe800000000	                          call 0x40018e2	       482	checkout.c	FUNCTION_14	IF_1
0x40018e2	            0x85c0	                           test eax, eax	       482	checkout.c	FUNCTION_14	IF_1
0x40018e4	            0x7921	                           jns 0x4001907	       482	checkout.c	FUNCTION_14	IF_1
0x40018e6	      0xbf00000000	                              mov edi, 0	       483	checkout.c	FUNCTION_14	CALL_2
0x40018eb	      0xe88ae8ffff	                               call sym.	       483	checkout.c	FUNCTION_14	CALL_2
0x40018f0	          0x4889c7	                            mov rdi, rax	       483	checkout.c	FUNCTION_14	CALL_2
0x40018f3	      0xb800000000	                              mov eax, 0	       483	checkout.c	FUNCTION_14	CALL_2
0x40018f8	      0xe800000000	                          call 0x40018fd	       483	checkout.c	FUNCTION_14	CALL_2
0x40018fd	      0xe83ee7ffff	                    call sym.const_error	       483	checkout.c	FUNCTION_14	CALL_2
0x4001902	      0xe90b050000	                           jmp 0x4001e12	       483	checkout.c	FUNCTION_14	CALL_2
0x4001907	      0xbf00000000	                              mov edi, 0	       485	checkout.c	FUNCTION_14
0x400190c	      0xe800000000	                          call 0x4001911	       485	checkout.c	FUNCTION_14
0x4001911	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       486	checkout.c	FUNCTION_14	IF_2
0x4001918	          0x8b400c	              mov eax, dword [rax + 0xc]	       486	checkout.c	FUNCTION_14	IF_2
0x400191b	            0x85c0	                           test eax, eax	       486	checkout.c	FUNCTION_14	IF_2
0x400191d	            0x7452	                            je 0x4001971	       486	checkout.c	FUNCTION_14	IF_2
0x400191f	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001926	        0x488b4010	            mov rax, qword [rax + 0x10] 	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x400192a	          0x4889c7	                            mov rdi, rax	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x400192d	      0xe800000000	                          call 0x4001932	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001932	          0x4889c7	                            mov rdi, rax	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001935	    0x488b95b0f7ff	            mov rdx, qword [rbp - 0x850]	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x400193c	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001943	          0x4889d1	                            mov rcx, rdx	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001946	      0xba01000000	                              mov edx, 1	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x400194b	          0x4889c6	                            mov rsi, rax	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x400194e	      0xe810fdffff	                     call sym.reset_tree	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001953	    0x8985dcf7ffff	            mov dword [rbp - 0x824], eax	       487	checkout.c	FUNCTION_14	IF_2	CALL_4
0x4001959	    0x83bddcf7ffff	              cmp dword [rbp - 0x824], 0	       489	checkout.c	FUNCTION_14	IF_2	IF_3
0x4001960	     0xf84fc030000	                            je 0x4001d62	       489	checkout.c	FUNCTION_14	IF_2	IF_3
0x4001966	    0x8b85dcf7ffff	            mov eax, dword [rbp - 0x824]	       490	checkout.c	FUNCTION_14	IF_2	IF_3
0x400196c	      0xe9a1040000	                           jmp 0x4001e12	       490	checkout.c	FUNCTION_14	IF_2	IF_3
0x4001971	    0x488d8550f8ff	                  lea rax, [rbp - 0x7b0]	       496	checkout.c	FUNCTION_14	ELSE_1	CALL_5
0x4001978	      0xba00030000	                          mov edx, 0x300	       496	checkout.c	FUNCTION_14	ELSE_1	CALL_5
0x400197d	      0xbe00000000	                              mov esi, 0	       496	checkout.c	FUNCTION_14	ELSE_1	CALL_5
0x4001982	          0x4889c7	                            mov rdi, rax	       496	checkout.c	FUNCTION_14	ELSE_1	CALL_5
0x4001985	      0xe800000000	                          call 0x400198a	       496	checkout.c	FUNCTION_14	ELSE_1	CALL_5
0x400198a	    0xc78550faffff	    mov dword [rbp - 0x5b0], 0xffffffff 	       497	checkout.c	FUNCTION_14	ELSE_1
0x4001994	    0x48c78570faff	              mov qword [rbp - 0x590], 0	       498	checkout.c	FUNCTION_14	ELSE_1
0x400199f	    0x48c78568faff	              mov qword [rbp - 0x598], 0	       499	checkout.c	FUNCTION_14	ELSE_1
0x40019aa	    0x488d8550f8ff	                  lea rax, [rbp - 0x7b0]	       501	checkout.c	FUNCTION_14	ELSE_1	CALL_6
0x40019b1	      0xbe00000000	                              mov esi, 0	       501	checkout.c	FUNCTION_14	ELSE_1	CALL_6
0x40019b6	          0x4889c7	                            mov rdi, rax	       501	checkout.c	FUNCTION_14	ELSE_1	CALL_6
0x40019b9	      0xe800000000	                          call 0x40019be	       501	checkout.c	FUNCTION_14	ELSE_1	CALL_6
0x40019be	    0x41b800000000	                              mov r8d, 0	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019c4	      0xb900000000	                              mov ecx, 0	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019c9	      0xba00000000	                              mov edx, 0	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019ce	      0xbe04000000	                              mov esi, 4	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019d3	      0xbf00000000	                              mov edi, 0	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019d8	      0xe800000000	                          call 0x40019dd	       503	checkout.c	FUNCTION_14	ELSE_1
0x40019dd	      0xbf00000000	                              mov edi, 0	       505	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x40019e2	      0xe800000000	                          call 0x40019e7	       505	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x40019e7	            0x85c0	                           test eax, eax	       505	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x40019e9	            0x7426	                            je 0x4001a11	       505	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x40019eb	      0xbf00000000	                              mov edi, 0	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x40019f0	      0xe885e7ffff	                               call sym.	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x40019f5	          0x4889c7	                            mov rdi, rax	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x40019f8	      0xb800000000	                              mov eax, 0	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x40019fd	      0xe800000000	                          call 0x4001a02	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001a02	      0xe839e6ffff	                    call sym.const_error	       506	checkout.c	FUNCTION_14	ELSE_1	IF_4	CALL_7
0x4001a07	      0xb801000000	                              mov eax, 1	       507	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x4001a0c	      0xe901040000	                           jmp 0x4001e12	       507	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x4001a11	      0xbf00000000	                              mov edi, 0	       511	checkout.c	FUNCTION_14	ELSE_1
0x4001a16	      0xe800000000	                          call 0x4001a1b	       511	checkout.c	FUNCTION_14	ELSE_1
0x4001a1b	    0x898574f8ffff	            mov dword [rbp - 0x78c], eax	       511	checkout.c	FUNCTION_14	ELSE_1
0x4001a21	    0xc78558f8ffff	              mov dword [rbp - 0x7a8], 1	       512	checkout.c	FUNCTION_14	ELSE_1
0x4001a2b	    0xc78554f8ffff	              mov dword [rbp - 0x7ac], 1	       513	checkout.c	FUNCTION_14	ELSE_1
0x4001a35	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a3c	          0x8b4008	                mov eax, dword [rax + 8]	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a3f	            0x85c0	                           test eax, eax	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a41	            0x7417	                            je 0x4001a5a	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a43	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a4a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a4e	          0x4885c0	                           test rax, rax	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a51	            0x7407	                            je 0x4001a5a	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a53	      0xb801000000	                              mov eax, 1	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a58	            0xeb05	                           jmp 0x4001a5f	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a5a	      0xb800000000	                              mov eax, 0	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a5f	    0x898584f8ffff	            mov dword [rbp - 0x77c], eax	       514	checkout.c	FUNCTION_14	ELSE_1
0x4001a65	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       515	checkout.c	FUNCTION_14	ELSE_1
0x4001a6c	          0x8b4024	            mov eax, dword [rax + 0x24] 	       515	checkout.c	FUNCTION_14	ELSE_1
0x4001a6f	    0x898568f8ffff	            mov dword [rbp - 0x798], eax	       515	checkout.c	FUNCTION_14	ELSE_1
0x4001a75	    0x48c785b8f8ff	              mov qword [rbp - 0x748], 0	       516	checkout.c	FUNCTION_14	ELSE_1
0x4001a80	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       517	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001a87	          0x8b4018	            mov eax, dword [rax + 0x18] 	       517	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001a8a	            0x85c0	                           test eax, eax	       517	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001a8c	            0x743c	                            je 0x4001aca	       517	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001a8e	      0xbe10010000	                          mov esi, 0x110	       518	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_8
0x4001a93	      0xbf01000000	                              mov edi, 1	       518	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_8
0x4001a98	      0xe800000000	                          call 0x4001a9d	       518	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_8
0x4001a9d	    0x488985a8f8ff	            mov qword [rbp - 0x758], rax	       518	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_8
0x4001aa4	    0x488b85a8f8ff	            mov rax, qword [rbp - 0x758]	       519	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001aab	    0x488b95a8f8ff	            mov rdx, qword [rbp - 0x758]	       519	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001ab2	          0x8b5210	            mov edx, dword [rdx + 0x10] 	       519	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001ab5	          0x83ca01	                               or edx, 1	       519	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001ab8	          0x895010	             mov dword [rax + 0x10], edx	       519	checkout.c	FUNCTION_14	ELSE_1	IF_5
0x4001abb	    0x488b85a8f8ff	            mov rax, qword [rbp - 0x758]	       520	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_9
0x4001ac2	          0x4889c7	                            mov rdi, rax	       520	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_9
0x4001ac5	      0xe800000000	                          call 0x4001aca	       520	checkout.c	FUNCTION_14	ELSE_1	IF_5	CALL_9
0x4001aca	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001ad1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001ad5	          0x4885c0	                           test rax, rax	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001ad8	            0x7411	                            je 0x4001aeb	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001ada	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       523	checkout.c	FUNCTION_14	ELSE_1
0x4001ae1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       523	checkout.c	FUNCTION_14	ELSE_1
0x4001ae5	        0x4883c004	                              add rax, 4	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001ae9	            0xeb0f	                           jmp 0x4001afa	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001aeb	    0x488b05000000	            mov rax, qword [0x04001af2] 	       524	checkout.c	FUNCTION_14	ELSE_1
0x4001af2	        0x488b4058	            mov rax, qword [rax + 0x58] 	       524	checkout.c	FUNCTION_14	ELSE_1
0x4001af6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001afa	          0x4889c7	                            mov rdi, rax	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001afd	      0xe800000000	                          call 0x4001b02	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001b02	    0x488985f0f7ff	            mov qword [rbp - 0x810], rax	       522	checkout.c	FUNCTION_14	ELSE_1	CALL_10
0x4001b09	    0x488b85f0f7ff	            mov rax, qword [rbp - 0x810]	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b10	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b14	    0x488b85f0f7ff	            mov rax, qword [rbp - 0x810]	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b1b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b1f	    0x488d8500f8ff	                  lea rax, [rbp - 0x800]	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b26	          0x4889ce	                            mov rsi, rcx	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b29	          0x4889c7	                            mov rdi, rax	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b2c	      0xe800000000	                          call 0x4001b31	       525	checkout.c	FUNCTION_14	ELSE_1	CALL_11
0x4001b31	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b38	        0x488b4010	            mov rax, qword [rax + 0x10] 	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b3c	        0x4883c004	                              add rax, 4	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b40	          0x4889c7	                            mov rdi, rax	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b43	      0xe800000000	                          call 0x4001b48	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b48	    0x488985f0f7ff	            mov qword [rbp - 0x810], rax	       526	checkout.c	FUNCTION_14	ELSE_1	CALL_12
0x4001b4f	    0x488b85f0f7ff	            mov rax, qword [rbp - 0x810]	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b56	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b5a	    0x488b85f0f7ff	            mov rax, qword [rbp - 0x810]	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b61	        0x488b4018	            mov rax, qword [rax + 0x18] 	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b65	    0x488d8d00f8ff	                  lea rcx, [rbp - 0x800]	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b6c	        0x4883c128	                           add rcx, 0x28	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b70	          0x4889c6	                            mov rsi, rax	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b73	          0x4889cf	                            mov rdi, rcx	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b76	      0xe800000000	                          call 0x4001b7b	       527	checkout.c	FUNCTION_14	ELSE_1	CALL_13
0x4001b7b	    0x488d9550f8ff	                  lea rdx, [rbp - 0x7b0]	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b82	    0x488d8500f8ff	                  lea rax, [rbp - 0x800]	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b89	          0x4889c6	                            mov rsi, rax	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b8c	      0xbf02000000	                              mov edi, 2	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b91	      0xe800000000	                          call 0x4001b96	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b96	    0x8985dcf7ffff	            mov dword [rbp - 0x824], eax	       529	checkout.c	FUNCTION_14	ELSE_1	CALL_14
0x4001b9c	    0x83bddcf7ffff	cmp dword [rbp - 0x824], 0xffffffffffffffff	       530	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001ba3	     0xf85b9010000	                           jne 0x4001d62	       530	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001ba9	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       539	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bb0	          0x8b4008	                mov eax, dword [rax + 8]	       539	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bb3	            0x85c0	                           test eax, eax	       539	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bb5	            0x750a	                           jne 0x4001bc1	       539	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bb7	      0xb801000000	                              mov eax, 1	       540	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bbc	      0xe951020000	                           jmp 0x4001e12	       540	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_7
0x4001bc1	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       546	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bc8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       546	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bcc	          0x4885c0	                           test rax, rax	       546	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bcf	            0x750a	                           jne 0x4001bdb	       546	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bd1	      0xb801000000	                              mov eax, 1	       547	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bd6	      0xe982010000	                           jmp 0x4001d5d	       547	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_8
0x4001bdb	      0xba00000000	                              mov edx, 0	       562	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_15
0x4001be0	      0xbe00000000	                              mov esi, 0	       562	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_15
0x4001be5	      0xbf00000000	                              mov edi, 0	       562	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_15
0x4001bea	      0xe800000000	                          call 0x4001bef	       562	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_15
0x4001bef	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       570	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_16
0x4001bf6	          0x4889c7	                            mov rdi, rax	       570	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_16
0x4001bf9	      0xe800000000	                          call 0x4001bfe	       570	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_16
0x4001bfe	    0xc78588fbffff	              mov dword [rbp - 0x478], 0	       571	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c08	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       572	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_17
0x4001c0f	          0x4889c7	                            mov rdi, rax	       572	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_17
0x4001c12	      0xe800000000	                          call 0x4001c17	       572	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_17
0x4001c17	    0x488985f8f7ff	            mov qword [rbp - 0x808], rax	       572	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_17
0x4001c1e	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c25	        0x488b4010	            mov rax, qword [rax + 0x10] 	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c29	          0x4889c7	                            mov rdi, rax	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c2c	      0xe800000000	                          call 0x4001c31	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c31	          0x4889c7	                            mov rdi, rax	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c34	    0x488b95b0f7ff	            mov rdx, qword [rbp - 0x850]	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c3b	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c42	          0x4889d1	                            mov rcx, rdx	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c45	      0xba01000000	                              mov edx, 1	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c4a	          0x4889c6	                            mov rsi, rax	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c4d	      0xe811faffff	                     call sym.reset_tree	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c52	    0x8985dcf7ffff	            mov dword [rbp - 0x824], eax	       574	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_19
0x4001c58	    0x83bddcf7ffff	              cmp dword [rbp - 0x824], 0	       577	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_9
0x4001c5f	            0x740b	                            je 0x4001c6c	       577	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_9
0x4001c61	    0x8b85dcf7ffff	            mov eax, dword [rbp - 0x824]	       578	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_9
0x4001c67	      0xe9f1000000	                           jmp 0x4001d5d	       578	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_9
0x4001c6c	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       579	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c73	          0x488b00	                    mov rax, qword [rax]	       579	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c76	    0x48898550fbff	            mov qword [rbp - 0x4b0], rax	       579	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c7d	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       580	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c84	          0x488b00	                    mov rax, qword [rax]	       580	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c87	    0x48898558fbff	            mov qword [rbp - 0x4a8], rax	       580	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c8e	    0x48c78560fbff	              mov qword [rbp - 0x4a0], 0	       581	checkout.c	FUNCTION_14	ELSE_1	IF_6
0x4001c99	    0x488b85c0f7ff	            mov rax, qword [rbp - 0x840]	       585	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_22
0x4001ca0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       585	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_22
0x4001ca4	          0x4889c7	                            mov rdi, rax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001ca7	      0xe800000000	                          call 0x4001cac	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cac	          0x4889c3	                            mov rbx, rax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001caf	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       583	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_21
0x4001cb6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       583	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_21
0x4001cba	          0x4889c7	                            mov rdi, rax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cbd	      0xe800000000	                          call 0x4001cc2	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cc2	          0x4889c6	                            mov rsi, rax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cc5	    0x488d8de8f7ff	                  lea rcx, [rbp - 0x818]	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001ccc	    0x488b95f8f7ff	            mov rdx, qword [rbp - 0x808]	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cd3	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cda	          0x4989c8	                             mov r8, rcx	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cdd	          0x4889d9	                            mov rcx, rbx	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001ce0	          0x4889c7	                            mov rdi, rax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001ce3	      0xe800000000	                          call 0x4001ce8	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001ce8	    0x8985dcf7ffff	            mov dword [rbp - 0x824], eax	       582	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_20
0x4001cee	    0x83bddcf7ffff	              cmp dword [rbp - 0x824], 0	       587	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_10
0x4001cf5	            0x790a	                           jns 0x4001d01	       587	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_10
0x4001cf7	      0xbf80000000	                           mov edi, 0x80	       588	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_23
0x4001cfc	      0xe800000000	                          call 0x4001d01	       588	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_23
0x4001d01	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d08	        0x488b4010	            mov rax, qword [rax + 0x10] 	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d0c	          0x4889c7	                            mov rdi, rax	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d0f	      0xe800000000	                          call 0x4001d14	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d14	          0x4889c7	                            mov rdi, rax	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d17	    0x488b95b0f7ff	            mov rdx, qword [rbp - 0x850]	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d1e	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d25	          0x4889d1	                            mov rcx, rdx	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d28	      0xba00000000	                              mov edx, 0	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d2d	          0x4889c6	                            mov rsi, rax	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d30	      0xe82ef9ffff	                     call sym.reset_tree	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d35	    0x8985dcf7ffff	            mov dword [rbp - 0x824], eax	       589	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_25
0x4001d3b	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	       592	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_26
0x4001d42	        0x4883c058	                           add rax, 0x58	       592	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_26
0x4001d46	          0x4889c7	                            mov rdi, rax	       592	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_26
0x4001d49	      0xe800000000	                          call 0x4001d4e	       592	checkout.c	FUNCTION_14	ELSE_1	IF_6	CALL_26
0x4001d4e	    0x83bddcf7ffff	              cmp dword [rbp - 0x824], 0	       593	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_11
0x4001d55	            0x740b	                            je 0x4001d62	       593	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_11
0x4001d57	    0x8b85dcf7ffff	            mov eax, dword [rbp - 0x824]	       594	checkout.c	FUNCTION_14	ELSE_1	IF_6	IF_11
0x4001d5d	      0xe9b0000000	                           jmp 0x4001e12	       507	checkout.c	FUNCTION_14	ELSE_1	IF_4
0x4001d62	    0x488b05000000	            mov rax, qword [0x04001d69] 	       598	checkout.c	FUNCTION_14	IF_12
0x4001d69	          0x4885c0	                           test rax, rax	       598	checkout.c	FUNCTION_14	IF_12
0x4001d6c	            0x750c	                           jne 0x4001d7a	       598	checkout.c	FUNCTION_14	IF_12
0x4001d6e	      0xe800000000	                          call 0x4001d73	       599	checkout.c	FUNCTION_14	CALL_27
0x4001d73	    0x488905000000	            mov qword [0x04001d7a], rax 	       599	checkout.c	FUNCTION_14	CALL_27
0x4001d7a	    0x488b05000000	            mov rax, qword [0x04001d81] 	       601	checkout.c	FUNCTION_14	IF_13	CALL_28
0x4001d81	          0x4889c7	                            mov rdi, rax	       601	checkout.c	FUNCTION_14	IF_13	CALL_28
0x4001d84	      0xe800000000	                          call 0x4001d89	       601	checkout.c	FUNCTION_14	IF_13	CALL_28
0x4001d89	            0x85c0	                           test eax, eax	       601	checkout.c	FUNCTION_14	IF_13	CALL_28
0x4001d8b	            0x750f	                           jne 0x4001d9c	       601	checkout.c	FUNCTION_14	IF_13	CALL_28
0x4001d8d	      0xbe18000000	                           mov esi, 0x18	       602	checkout.c	FUNCTION_14	CALL_29
0x4001d92	      0xbf00000000	                              mov edi, 0	       602	checkout.c	FUNCTION_14	CALL_29
0x4001d97	      0xe800000000	                          call 0x4001d9c	       602	checkout.c	FUNCTION_14	CALL_29
0x4001d9c	    0x488d85e0f7ff	                  lea rax, [rbp - 0x820]	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001da3	      0xba01000000	                              mov edx, 1	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001da8	          0x4889c6	                            mov rsi, rax	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001dab	      0xbf00000000	                              mov edi, 0	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001db0	      0xe800000000	                          call 0x4001db5	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001db5	            0x85c0	                           test eax, eax	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001db7	            0x7417	                            je 0x4001dd0	       604	checkout.c	FUNCTION_14	IF_14	CALL_30
0x4001db9	      0xbf00000000	                              mov edi, 0	       605	checkout.c	FUNCTION_14	CALL_32
0x4001dbe	      0xe8b7e3ffff	                               call sym.	       605	checkout.c	FUNCTION_14	CALL_32
0x4001dc3	          0x4889c7	                            mov rdi, rax	       605	checkout.c	FUNCTION_14	CALL_32
0x4001dc6	      0xb800000000	                              mov eax, 0	       605	checkout.c	FUNCTION_14	CALL_32
0x4001dcb	      0xe800000000	                          call 0x4001dd0	       605	checkout.c	FUNCTION_14	CALL_32
0x4001dd0	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       607	checkout.c	FUNCTION_14	IF_15
0x4001dd7	          0x8b400c	              mov eax, dword [rax + 0xc]	       607	checkout.c	FUNCTION_14	IF_15
0x4001dda	            0x85c0	                           test eax, eax	       607	checkout.c	FUNCTION_14	IF_15
0x4001ddc	            0x752f	                           jne 0x4001e0d	       607	checkout.c	FUNCTION_14	IF_15
0x4001dde	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       607	checkout.c	FUNCTION_14	IF_15
0x4001de5	          0x8b4004	                mov eax, dword [rax + 4]	       607	checkout.c	FUNCTION_14	IF_15
0x4001de8	            0x85c0	                           test eax, eax	       607	checkout.c	FUNCTION_14	IF_15
0x4001dea	            0x7521	                           jne 0x4001e0d	       607	checkout.c	FUNCTION_14	IF_15
0x4001dec	    0x488b85c8f7ff	            mov rax, qword [rbp - 0x838]	       608	checkout.c	FUNCTION_14	CALL_33
0x4001df3	        0x488d5048	                   lea rdx, [rax + 0x48]	       608	checkout.c	FUNCTION_14	CALL_33
0x4001df7	    0x488b85b8f7ff	            mov rax, qword [rbp - 0x848]	       608	checkout.c	FUNCTION_14	CALL_33
0x4001dfe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       608	checkout.c	FUNCTION_14	CALL_33
0x4001e02	          0x4889d6	                            mov rsi, rdx	       608	checkout.c	FUNCTION_14	CALL_33
0x4001e05	          0x4889c7	                            mov rdi, rax	       608	checkout.c	FUNCTION_14	CALL_33
0x4001e08	      0xe88ff6ffff	             call sym.show_local_changes	       608	checkout.c	FUNCTION_14	CALL_33
0x4001e0d	      0xb800000000	                              mov eax, 0	       610	checkout.c	FUNCTION_14
0x4001e12	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       611	checkout.c	FUNCTION_14
0x4001e16	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       611	checkout.c	FUNCTION_14
0x4001e1f	            0x7405	                            je 0x4001e26	       611	checkout.c	FUNCTION_14
0x4001e21	      0xe800000000	                          call 0x4001e26	       611	checkout.c	FUNCTION_14
0x4001e26	    0x4881c4480800	                          add rsp, 0x848	       611	checkout.c	FUNCTION_14
0x4001e2d	              0x5b	                                 pop rbx	       611	checkout.c	FUNCTION_14
0x4001e2e	              0x5d	                                 pop rbp	       611	checkout.c	FUNCTION_14
0x4001e2f	              0xc3	                                     ret	       611	checkout.c	FUNCTION_14
parse_branchname_arg	CALL,21:functions,0:ELSE,6:SWITCH,0:FOR,1:DO,0:IF,18:WHILE,0	232
0x4002b30	              0x55	                                push rbp	       881	checkout.c	FUNCTION_23
0x4002b31	          0x4889e5	                            mov rbp, rsp	       881	checkout.c	FUNCTION_23
0x4002b34	    0x4881ec900000	                           sub rsp, 0x90	       881	checkout.c	FUNCTION_23
0x4002b3b	          0x897d9c	             mov dword [rbp - 0x64], edi	       881	checkout.c	FUNCTION_23
0x4002b3e	        0x48897590	             mov qword [rbp - 0x70], rsi	       881	checkout.c	FUNCTION_23
0x4002b42	          0x895598	             mov dword [rbp - 0x68], edx	       881	checkout.c	FUNCTION_23
0x4002b45	        0x48894d88	             mov qword [rbp - 0x78], rcx	       881	checkout.c	FUNCTION_23
0x4002b49	        0x4c894580	              mov qword [rbp - 0x80], r8	       881	checkout.c	FUNCTION_23
0x4002b4d	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       881	checkout.c	FUNCTION_23
0x4002b54	    0x64488b042528	                mov rax, qword fs:[0x28]	       881	checkout.c	FUNCTION_23
0x4002b5d	        0x488945f8	                mov qword [rbp - 8], rax	       881	checkout.c	FUNCTION_23
0x4002b61	            0x31c0	                            xor eax, eax	       881	checkout.c	FUNCTION_23
0x4002b63	        0x488b4580	             mov rax, qword [rbp - 0x80]	       882	checkout.c	FUNCTION_23
0x4002b67	    0x4805f0010000	                          add rax, 0x1f0	       882	checkout.c	FUNCTION_23
0x4002b6d	        0x488945c8	             mov qword [rbp - 0x38], rax	       882	checkout.c	FUNCTION_23
0x4002b71	        0x488b4580	             mov rax, qword [rbp - 0x80]	       883	checkout.c	FUNCTION_23
0x4002b75	        0x4883c028	                           add rax, 0x28	       883	checkout.c	FUNCTION_23
0x4002b79	        0x488945d0	             mov qword [rbp - 0x30], rax	       883	checkout.c	FUNCTION_23
0x4002b7d	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       884	checkout.c	FUNCTION_23
0x4002b84	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       888	checkout.c	FUNCTION_23
0x4002b8b	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       930	checkout.c	FUNCTION_23	IF_1
0x4002b8f	            0x750a	                           jne 0x4002b9b	       930	checkout.c	FUNCTION_23	IF_1
0x4002b91	      0xb800000000	                              mov eax, 0	       931	checkout.c	FUNCTION_23	IF_1
0x4002b96	      0xe900030000	                           jmp 0x4002e9b	       931	checkout.c	FUNCTION_23	IF_1
0x4002b9b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       933	checkout.c	FUNCTION_23
0x4002b9f	          0x488b00	                    mov rax, qword [rax]	       933	checkout.c	FUNCTION_23
0x4002ba2	        0x488945c0	             mov qword [rbp - 0x40], rax	       933	checkout.c	FUNCTION_23
0x4002ba6	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	       934	checkout.c	FUNCTION_23
0x4002bad	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bb4	            0xeb34	                           jmp 0x4002bea	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bb6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bb9	            0x4898	                                    cdqe	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bbb	    0x488d14c50000	                        lea rdx, [rax*8]	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bc3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bc7	          0x4801d0	                            add rax, rdx	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bca	          0x488b00	                    mov rax, qword [rax]	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bcd	      0xbe00000000	                              mov esi, 0	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bd2	          0x4889c7	                            mov rdi, rax	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bd5	      0xe800000000	                          call 0x4002bda	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bda	            0x85c0	                           test eax, eax	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bdc	            0x7508	                           jne 0x4002be6	       936	checkout.c	FUNCTION_23	FOR_1	IF_2	CALL_1
0x4002bde	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       937	checkout.c	FUNCTION_23	FOR_1	IF_2
0x4002be1	          0x8945b0	             mov dword [rbp - 0x50], eax	       937	checkout.c	FUNCTION_23	FOR_1	IF_2
0x4002be4	            0xeb0c	                           jmp 0x4002bf2	       938	checkout.c	FUNCTION_23	FOR_1	IF_2
0x4002be6	        0x8345b801	               add dword [rbp - 0x48], 1	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bea	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bed	          0x3b459c	             cmp eax, dword [rbp - 0x64]	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bf0	            0x7cc4	                            jl 0x4002bb6	       935	checkout.c	FUNCTION_23	FOR_1
0x4002bf2	        0x837db000	               cmp dword [rbp - 0x50], 0	       941	checkout.c	FUNCTION_23	IF_3
0x4002bf6	            0x750a	                           jne 0x4002c02	       941	checkout.c	FUNCTION_23	IF_3
0x4002bf8	      0xb801000000	                              mov eax, 1	       942	checkout.c	FUNCTION_23	IF_3
0x4002bfd	      0xe999020000	                           jmp 0x4002e9b	       942	checkout.c	FUNCTION_23	IF_3
0x4002c02	        0x837db001	               cmp dword [rbp - 0x50], 1	       943	checkout.c	FUNCTION_23	ELSE_1	IF_4
0x4002c06	            0x7509	                           jne 0x4002c11	       943	checkout.c	FUNCTION_23	ELSE_1	IF_4
0x4002c08	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       944	checkout.c	FUNCTION_23	ELSE_1	IF_4
0x4002c0f	            0xeb25	                           jmp 0x4002c36	       944	checkout.c	FUNCTION_23	ELSE_1	IF_4
0x4002c11	        0x837db001	               cmp dword [rbp - 0x50], 1	       945	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c15	            0x7e1f	                           jle 0x4002c36	       945	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c17	      0xbf00000000	                              mov edi, 0	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c1c	      0xe859d5ffff	                               call sym.	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c21	          0x4889c2	                            mov rdx, rax	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c24	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c27	            0x89c6	                            mov esi, eax	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c29	          0x4889d7	                            mov rdi, rdx	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c2c	      0xb800000000	                              mov eax, 0	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c31	      0xe800000000	                          call 0x4002c36	       946	checkout.c	FUNCTION_23	ELSE_2	IF_5
0x4002c36	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c3a	      0xbe00000000	                              mov esi, 0	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c3f	          0x4889c7	                            mov rdi, rax	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c42	      0xe800000000	                          call 0x4002c47	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c47	            0x85c0	                           test eax, eax	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c49	            0x7508	                           jne 0x4002c53	       948	checkout.c	FUNCTION_23	IF_6	CALL_4
0x4002c4b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       949	checkout.c	FUNCTION_23	IF_6
0x4002c53	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c5e	          0x4889d6	                            mov rsi, rdx	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c61	          0x4889c7	                            mov rdi, rax	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c64	      0xe800000000	                          call 0x4002c69	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c69	            0x85c0	                           test eax, eax	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c6b	     0xf84d8000000	                            je 0x4002d49	       951	checkout.c	FUNCTION_23	IF_7	CALL_5
0x4002c71	          0x8b4598	             mov eax, dword [rbp - 0x68]	       960	checkout.c	FUNCTION_23	IF_7
0x4002c74	          0x8945bc	             mov dword [rbp - 0x44], eax	       960	checkout.c	FUNCTION_23	IF_7
0x4002c77	        0x837db400	               cmp dword [rbp - 0x4c], 0	       962	checkout.c	FUNCTION_23	IF_7	IF_8
0x4002c7b	            0x7535	                           jne 0x4002cb2	       962	checkout.c	FUNCTION_23	IF_7	IF_8
0x4002c7d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c81	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c88	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c8c	          0x4889d6	                            mov rsi, rdx	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c8f	          0x4889c7	                            mov rdi, rax	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c92	      0xe800000000	                          call 0x4002c97	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c97	            0x85c0	                           test eax, eax	       962	checkout.c	FUNCTION_23	IF_7	IF_8
0x4002c99	            0x7510	                           jne 0x4002cab	       962	checkout.c	FUNCTION_23	IF_7	IF_8
0x4002c9b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002c9f	          0x4889c7	                            mov rdi, rax	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002ca2	      0xe800000000	                          call 0x4002ca7	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002ca7	            0x85c0	                           test eax, eax	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002ca9	            0x7507	                           jne 0x4002cb2	       963	checkout.c	FUNCTION_23	IF_7	IF_8	CALL_7
0x4002cab	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       964	checkout.c	FUNCTION_23	IF_7	IF_8
0x4002cb2	        0x837d9c01	               cmp dword [rbp - 0x64], 1	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cb6	            0x7506	                           jne 0x4002cbe	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cb8	        0x837db400	               cmp dword [rbp - 0x4c], 0	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cbc	            0x7413	                            je 0x4002cd1	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cbe	        0x837d9c02	               cmp dword [rbp - 0x64], 2	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cc2	            0x7506	                           jne 0x4002cca	       969	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cc4	        0x837db400	               cmp dword [rbp - 0x4c], 0	       970	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cc8	            0x7507	                           jne 0x4002cd1	       970	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cca	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       971	checkout.c	FUNCTION_23	IF_7	IF_9
0x4002cd1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       973	checkout.c	FUNCTION_23	IF_7	IF_10
0x4002cd5	            0x743d	                            je 0x4002d14	       973	checkout.c	FUNCTION_23	IF_7	IF_10
0x4002cd7	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002cde	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002ce2	          0x4889d6	                            mov rsi, rdx	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002ce5	          0x4889c7	                            mov rdi, rax	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002ce8	      0xe800000000	                          call 0x4002ced	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002ced	        0x488945d8	             mov qword [rbp - 0x28], rax	       974	checkout.c	FUNCTION_23	IF_7	IF_10	CALL_8
0x4002cf1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       975	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002cf6	            0x7415	                            je 0x4002d0d	       975	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002cf8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       976	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002cfc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       976	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002d00	          0x488910	                    mov qword [rax], rdx	       976	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002d03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       977	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002d07	        0x488945c0	             mov qword [rbp - 0x40], rax	       977	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002d0b	            0xeb07	                           jmp 0x4002d14	       977	checkout.c	FUNCTION_23	IF_7	IF_10	IF_11
0x4002d0d	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       980	checkout.c	FUNCTION_23	IF_7	IF_10	ELSE_3
0x4002d14	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       984	checkout.c	FUNCTION_23	IF_7	IF_12
0x4002d18	            0x752f	                           jne 0x4002d49	       984	checkout.c	FUNCTION_23	IF_7	IF_12
0x4002d1a	        0x837db400	               cmp dword [rbp - 0x4c], 0	       985	checkout.c	FUNCTION_23	IF_7	IF_12	IF_13
0x4002d1e	            0x7421	                            je 0x4002d41	       985	checkout.c	FUNCTION_23	IF_7	IF_12	IF_13
0x4002d20	      0xbf00000000	                              mov edi, 0	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d25	      0xe850d4ffff	                               call sym.	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d2a	          0x4889c2	                            mov rdx, rax	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d2d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d31	          0x4889c6	                            mov rsi, rax	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d34	          0x4889d7	                            mov rdi, rdx	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d37	      0xb800000000	                              mov eax, 0	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d3c	      0xe800000000	                          call 0x4002d41	       986	checkout.c	FUNCTION_23	IF_7	IF_12	CALL_10
0x4002d41	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       987	checkout.c	FUNCTION_23	IF_7	IF_12
0x4002d44	      0xe952010000	                           jmp 0x4002e9b	       987	checkout.c	FUNCTION_23	IF_7	IF_12
0x4002d49	        0x8345ac01	               add dword [rbp - 0x54], 1	       992	checkout.c	FUNCTION_23
0x4002d4d	      0x4883459008	               add qword [rbp - 0x70], 8	       993	checkout.c	FUNCTION_23
0x4002d52	        0x836d9c01	               sub dword [rbp - 0x64], 1	       994	checkout.c	FUNCTION_23
0x4002d56	        0x488b4588	             mov rax, qword [rbp - 0x78]	       996	checkout.c	FUNCTION_23
0x4002d5a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       996	checkout.c	FUNCTION_23
0x4002d5e	          0x488910	                    mov qword [rax], rdx	       996	checkout.c	FUNCTION_23
0x4002d61	        0x488b4588	             mov rax, qword [rbp - 0x78]	       997	checkout.c	FUNCTION_23	CALL_11
0x4002d65	          0x4889c7	                            mov rdi, rax	       997	checkout.c	FUNCTION_23	CALL_11
0x4002d68	      0xe83eeaffff	              call sym.setup_branch_path	       997	checkout.c	FUNCTION_23	CALL_11
0x4002d6d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d71	        0x488b4008	                mov rax, qword [rax + 8]	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d75	      0xbe00000000	                              mov esi, 0	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d7a	          0x4889c7	                            mov rdi, rax	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d7d	      0xe800000000	                          call 0x4002d82	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d82	            0x85c0	                           test eax, eax	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d84	            0x7533	                           jne 0x4002db9	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d86	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d8a	        0x488b4008	                mov rax, qword [rax + 8]	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d8e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d92	          0x4889d6	                            mov rsi, rdx	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d95	          0x4889c7	                            mov rdi, rax	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d98	      0xe800000000	                          call 0x4002d9d	      1000	checkout.c	FUNCTION_23	IF_14	CALL_13
0x4002d9d	            0x85c0	                           test eax, eax	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002d9f	            0x7518	                           jne 0x4002db9	       999	checkout.c	FUNCTION_23	IF_14	CALL_12
0x4002da1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002da5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002dac	          0x4889d6	                            mov rsi, rdx	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002daf	          0x4889c7	                            mov rdi, rax	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002db2	      0xe826d5ffff	                         call sym.oidcpy	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002db7	            0xeb0c	                           jmp 0x4002dc5	      1001	checkout.c	FUNCTION_23	CALL_14
0x4002db9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1003	checkout.c	FUNCTION_23	ELSE_4
0x4002dbd	    0x48c740080000	                  mov qword [rax + 8], 0	      1003	checkout.c	FUNCTION_23	ELSE_4
0x4002dc5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002dcc	      0xbe01000000	                              mov esi, 1	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002dd1	          0x4889c7	                            mov rdi, rax	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002dd9	          0x4889c2	                            mov rdx, rax	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002ddc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002de0	        0x48895010	             mov qword [rax + 0x10], rdx	      1005	checkout.c	FUNCTION_23	CALL_15
0x4002de4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1006	checkout.c	FUNCTION_23	IF_15
0x4002de8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1006	checkout.c	FUNCTION_23	IF_15
0x4002dec	          0x4885c0	                           test rax, rax	      1006	checkout.c	FUNCTION_23	IF_15
0x4002def	            0x751b	                           jne 0x4002e0c	      1006	checkout.c	FUNCTION_23	IF_15
0x4002df1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002df8	          0x4889c7	                            mov rdi, rax	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002dfb	      0xe800000000	                          call 0x4002e00	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002e00	          0x4889c2	                            mov rdx, rax	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002e03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002e07	          0x488910	                    mov qword [rax], rdx	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002e0a	            0xeb2a	                           jmp 0x4002e36	      1008	checkout.c	FUNCTION_23	IF_15	CALL_16
0x4002e0c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1010	checkout.c	FUNCTION_23	ELSE_5	CALL_17
0x4002e10	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1010	checkout.c	FUNCTION_23	ELSE_5	CALL_17
0x4002e14	          0x4889c7	                            mov rdi, rax	      1010	checkout.c	FUNCTION_23	ELSE_5	CALL_17
0x4002e17	      0xe800000000	                          call 0x4002e1c	      1010	checkout.c	FUNCTION_23	ELSE_5	CALL_17
0x4002e1c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e20	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e24	          0x4889c7	                            mov rdi, rax	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e27	      0xe800000000	                          call 0x4002e2c	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e2c	          0x4889c2	                            mov rdx, rax	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e33	          0x488910	                    mov qword [rax], rdx	      1011	checkout.c	FUNCTION_23	ELSE_5	CALL_18
0x4002e36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1014	checkout.c	FUNCTION_23	IF_16
0x4002e3a	          0x488b00	                    mov rax, qword [rax]	      1014	checkout.c	FUNCTION_23	IF_16
0x4002e3d	          0x4885c0	                           test rax, rax	      1014	checkout.c	FUNCTION_23	IF_16
0x4002e40	            0x7521	                           jne 0x4002e63	      1014	checkout.c	FUNCTION_23	IF_16
0x4002e42	      0xbf00000000	                              mov edi, 0	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e47	      0xe82ed3ffff	                               call sym.	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e4c	          0x4889c2	                            mov rdx, rax	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e4f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e53	          0x4889c6	                            mov rsi, rax	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e56	          0x4889d7	                            mov rdi, rdx	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e59	      0xb800000000	                              mov eax, 0	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e5e	      0xe800000000	                          call 0x4002e63	      1015	checkout.c	FUNCTION_23	CALL_20
0x4002e63	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1016	checkout.c	FUNCTION_23	IF_17
0x4002e67	            0x7522	                           jne 0x4002e8b	      1016	checkout.c	FUNCTION_23	IF_17
0x4002e69	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1023	checkout.c	FUNCTION_23	IF_17	IF_18
0x4002e6d	            0x7429	                            je 0x4002e98	      1023	checkout.c	FUNCTION_23	IF_17	IF_18
0x4002e6f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e73	    0x488b80d00100	           mov rax, qword [rax + 0x1d0] 	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e7a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e7e	          0x4889d6	                            mov rsi, rdx	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e81	          0x4889c7	                            mov rdi, rax	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e84	      0xe800000000	                          call 0x4002e89	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e89	            0xeb0d	                           jmp 0x4002e98	      1024	checkout.c	FUNCTION_23	IF_17	CALL_21
0x4002e8b	        0x8345ac01	               add dword [rbp - 0x54], 1	      1026	checkout.c	FUNCTION_23	ELSE_6
0x4002e8f	      0x4883459008	               add qword [rbp - 0x70], 8	      1027	checkout.c	FUNCTION_23	ELSE_6
0x4002e94	        0x836d9c01	               sub dword [rbp - 0x64], 1	      1028	checkout.c	FUNCTION_23	ELSE_6
0x4002e98	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1031	checkout.c	FUNCTION_23
0x4002e9b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1032	checkout.c	FUNCTION_23
0x4002e9f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1032	checkout.c	FUNCTION_23
0x4002ea8	            0x7405	                            je 0x4002eaf	      1032	checkout.c	FUNCTION_23
0x4002eaa	      0xe800000000	                          call 0x4002eaf	      1032	checkout.c	FUNCTION_23
0x4002eaf	              0xc9	                                   leave	      1032	checkout.c	FUNCTION_23
0x4002eb0	              0xc3	                                     ret	      1032	checkout.c	FUNCTION_23
update_some	CALL,10:functions,0:ELSE,0:SWITCH,0:FOR,0:DO,0:IF,3:WHILE,0	129
0x400044c	              0x55	                                push rbp	        71	checkout.c	FUNCTION_2
0x400044d	          0x4889e5	                            mov rbp, rsp	        71	checkout.c	FUNCTION_2
0x4000450	              0x53	                                push rbx	        71	checkout.c	FUNCTION_2
0x4000451	        0x4883ec58	                           sub rsp, 0x58	        71	checkout.c	FUNCTION_2
0x4000455	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        71	checkout.c	FUNCTION_2
0x4000459	        0x488975c0	             mov qword [rbp - 0x40], rsi	        71	checkout.c	FUNCTION_2
0x400045d	        0x488955b8	             mov qword [rbp - 0x48], rdx	        71	checkout.c	FUNCTION_2
0x4000461	          0x894db4	             mov dword [rbp - 0x4c], ecx	        71	checkout.c	FUNCTION_2
0x4000464	        0x448945b0	             mov dword [rbp - 0x50], r8d	        71	checkout.c	FUNCTION_2
0x4000468	        0x4c894da8	              mov qword [rbp - 0x58], r9	        71	checkout.c	FUNCTION_2
0x400046c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        76	checkout.c	FUNCTION_2	IF_1	CALL_1
0x400046f	      0x2500f00000	                         and eax, 0xf000	        76	checkout.c	FUNCTION_2	IF_1	CALL_1
0x4000474	      0x3d00400000	                         cmp eax, 0x4000	        76	checkout.c	FUNCTION_2	IF_1	CALL_1
0x4000479	            0x750a	                           jne 0x4000485	        76	checkout.c	FUNCTION_2	IF_1	CALL_1
0x400047b	      0xb801000000	                              mov eax, 1	        77	checkout.c	FUNCTION_2	IF_1
0x4000480	      0xe98d010000	                           jmp 0x4000612	        77	checkout.c	FUNCTION_2	IF_1
0x4000485	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        79	checkout.c	FUNCTION_2	CALL_2
0x4000489	        0x488b4008	                mov rax, qword [rax + 8]	        79	checkout.c	FUNCTION_2	CALL_2
0x400048d	            0x89c3	                            mov ebx, eax	        79	checkout.c	FUNCTION_2	CALL_2
0x400048f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        79	checkout.c	FUNCTION_2	CALL_2
0x4000493	          0x4889c7	                            mov rdi, rax	        79	checkout.c	FUNCTION_2	CALL_2
0x4000496	      0xe800000000	                          call 0x400049b	        79	checkout.c	FUNCTION_2	CALL_2
0x400049b	             0x1d8	                            add eax, ebx	        79	checkout.c	FUNCTION_2	CALL_2
0x400049d	          0x8945d8	             mov dword [rbp - 0x28], eax	        79	checkout.c	FUNCTION_2	CALL_2
0x40004a0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        80	checkout.c	FUNCTION_2	CALL_3
0x40004a3	            0x4898	                                    cdqe	        80	checkout.c	FUNCTION_2	CALL_3
0x40004a5	        0x4883c059	                           add rax, 0x59	        80	checkout.c	FUNCTION_2	CALL_3
0x40004a9	          0x4889c6	                            mov rsi, rax	        80	checkout.c	FUNCTION_2	CALL_3
0x40004ac	      0xbf01000000	                              mov edi, 1	        80	checkout.c	FUNCTION_2	CALL_3
0x40004b1	      0xe800000000	                          call 0x40004b6	        80	checkout.c	FUNCTION_2	CALL_3
0x40004b6	        0x488945e0	             mov qword [rbp - 0x20], rax	        80	checkout.c	FUNCTION_2	CALL_3
0x40004ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	checkout.c	FUNCTION_2	CALL_4
0x40004be	        0x488d5044	                   lea rdx, [rax + 0x44]	        81	checkout.c	FUNCTION_2	CALL_4
0x40004c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        81	checkout.c	FUNCTION_2	CALL_4
0x40004c6	          0x4889c6	                            mov rsi, rax	        81	checkout.c	FUNCTION_2	CALL_4
0x40004c9	          0x4889d7	                            mov rdi, rdx	        81	checkout.c	FUNCTION_2	CALL_4
0x40004cc	      0xe80cfeffff	                         call sym.oidcpy	        81	checkout.c	FUNCTION_2	CALL_4
0x40004d1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        82	checkout.c	FUNCTION_2	CALL_5
0x40004d5	        0x488b5008	                mov rdx, qword [rax + 8]	        82	checkout.c	FUNCTION_2	CALL_5
0x40004d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        82	checkout.c	FUNCTION_2	CALL_5
0x40004dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	        82	checkout.c	FUNCTION_2	CALL_5
0x40004e1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        82	checkout.c	FUNCTION_2	CALL_5
0x40004e5	        0x4883c158	                           add rcx, 0x58	        82	checkout.c	FUNCTION_2	CALL_5
0x40004e9	          0x4889c6	                            mov rsi, rax	        82	checkout.c	FUNCTION_2	CALL_5
0x40004ec	          0x4889cf	                            mov rdi, rcx	        82	checkout.c	FUNCTION_2	CALL_5
0x40004ef	      0xe800000000	                          call 0x40004f4	        82	checkout.c	FUNCTION_2	CALL_5
0x40004f4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        83	checkout.c	FUNCTION_2	CALL_6
0x40004f7	          0x4863d0	                         movsxd rdx, eax	        83	checkout.c	FUNCTION_2	CALL_6
0x40004fa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        83	checkout.c	FUNCTION_2	CALL_6
0x40004fe	        0x488b4008	                mov rax, qword [rax + 8]	        83	checkout.c	FUNCTION_2	CALL_6
0x4000502	          0x4829c2	                            sub rdx, rax	        83	checkout.c	FUNCTION_2	CALL_6
0x4000505	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	checkout.c	FUNCTION_2	CALL_6
0x4000509	        0x488d4858	                   lea rcx, [rax + 0x58]	        83	checkout.c	FUNCTION_2	CALL_6
0x400050d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        83	checkout.c	FUNCTION_2	CALL_6
0x4000511	        0x488b4008	                mov rax, qword [rax + 8]	        83	checkout.c	FUNCTION_2	CALL_6
0x4000515	          0x4801c1	                            add rcx, rax	        83	checkout.c	FUNCTION_2	CALL_6
0x4000518	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        83	checkout.c	FUNCTION_2	CALL_6
0x400051c	          0x4889c6	                            mov rsi, rax	        83	checkout.c	FUNCTION_2	CALL_6
0x400051f	          0x4889cf	                            mov rdi, rcx	        83	checkout.c	FUNCTION_2	CALL_6
0x4000522	      0xe800000000	                          call 0x4000527	        83	checkout.c	FUNCTION_2	CALL_6
0x4000527	      0xbf00000000	                              mov edi, 0	        84	checkout.c	FUNCTION_2	CALL_7
0x400052c	      0xe8a2fcffff	                call sym.create_ce_flags	        84	checkout.c	FUNCTION_2	CALL_7
0x4000531	       0xd00000100	                         or eax, 0x10000	        84	checkout.c	FUNCTION_2	CALL_7
0x4000536	            0x89c2	                            mov edx, eax	        84	checkout.c	FUNCTION_2	CALL_7
0x4000538	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        84	checkout.c	FUNCTION_2	CALL_7
0x400053c	          0x895038	             mov dword [rax + 0x38], edx	        84	checkout.c	FUNCTION_2	CALL_7
0x400053f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	        85	checkout.c	FUNCTION_2
0x4000542	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        85	checkout.c	FUNCTION_2
0x4000546	          0x89503c	             mov dword [rax + 0x3c], edx	        85	checkout.c	FUNCTION_2
0x4000549	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        86	checkout.c	FUNCTION_2	CALL_8
0x400054c	            0x89c7	                            mov edi, eax	        86	checkout.c	FUNCTION_2	CALL_8
0x400054e	      0xe88ffcffff	                 call sym.create_ce_mode	        86	checkout.c	FUNCTION_2	CALL_8
0x4000553	            0x89c2	                            mov edx, eax	        86	checkout.c	FUNCTION_2	CALL_8
0x4000555	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        86	checkout.c	FUNCTION_2	CALL_8
0x4000559	          0x895034	             mov dword [rax + 0x34], edx	        86	checkout.c	FUNCTION_2	CALL_8
0x400055c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        93	checkout.c	FUNCTION_2
0x4000560	          0x8b403c	            mov eax, dword [rax + 0x3c] 	        93	checkout.c	FUNCTION_2
0x4000563	            0x89c2	                            mov edx, eax	        93	checkout.c	FUNCTION_2
0x4000565	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        93	checkout.c	FUNCTION_2
0x4000569	        0x4883c058	                           add rax, 0x58	        93	checkout.c	FUNCTION_2
0x400056d	          0x4889c6	                            mov rsi, rax	        93	checkout.c	FUNCTION_2
0x4000570	      0xbf00000000	                              mov edi, 0	        93	checkout.c	FUNCTION_2
0x4000575	      0xe800000000	                          call 0x400057a	        93	checkout.c	FUNCTION_2
0x400057a	          0x8945dc	             mov dword [rbp - 0x24], eax	        93	checkout.c	FUNCTION_2
0x400057d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        94	checkout.c	FUNCTION_2	IF_2
0x4000581	            0x7874	                            js 0x40005f7	        94	checkout.c	FUNCTION_2	IF_2
0x4000583	    0x488b05000000	            mov rax, qword [0x0400058a] 	        95	checkout.c	FUNCTION_2	IF_2
0x400058a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        95	checkout.c	FUNCTION_2	IF_2
0x400058d	          0x4863d2	                         movsxd rdx, edx	        95	checkout.c	FUNCTION_2	IF_2
0x4000590	        0x48c1e203	                              shl rdx, 3	        95	checkout.c	FUNCTION_2	IF_2
0x4000594	          0x4801d0	                            add rax, rdx	        95	checkout.c	FUNCTION_2	IF_2
0x4000597	          0x488b00	                    mov rax, qword [rax]	        95	checkout.c	FUNCTION_2	IF_2
0x400059a	        0x488945e8	             mov qword [rbp - 0x18], rax	        95	checkout.c	FUNCTION_2	IF_2
0x400059e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005a2	          0x8b5034	            mov edx, dword [rax + 0x34] 	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005a9	          0x8b4034	            mov eax, dword [rax + 0x34] 	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005ac	            0x39c2	                            cmp edx, eax	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005ae	            0x7547	                           jne 0x40005f7	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005b4	        0x488d5044	                   lea rdx, [rax + 0x44]	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005bc	        0x4883c044	                           add rax, 0x44	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005c0	          0x4889d6	                            mov rsi, rdx	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005c3	          0x4889c7	                            mov rdi, rax	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005c6	      0xe89bfcffff	                         call sym.oidcmp	        97	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_9
0x40005cb	            0x85c0	                           test eax, eax	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005cd	            0x7528	                           jne 0x40005f7	        96	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005d3	          0x8b4038	            mov eax, dword [rax + 0x38] 	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005d6	       0xd00000100	                         or eax, 0x10000	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005db	            0x89c2	                            mov edx, eax	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005e1	          0x895038	             mov dword [rax + 0x38], edx	        98	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        99	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_10
0x40005e8	          0x4889c7	                            mov rdi, rax	        99	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_10
0x40005eb	      0xe800000000	                          call 0x40005f0	        99	checkout.c	FUNCTION_2	IF_2	IF_3	CALL_10
0x40005f0	      0xb800000000	                              mov eax, 0	       100	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005f5	            0xeb1b	                           jmp 0x4000612	       100	checkout.c	FUNCTION_2	IF_2	IF_3
0x40005f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       104	checkout.c	FUNCTION_2
0x40005fb	      0xba03000000	                              mov edx, 3	       104	checkout.c	FUNCTION_2
0x4000600	          0x4889c6	                            mov rsi, rax	       104	checkout.c	FUNCTION_2
0x4000603	      0xbf00000000	                              mov edi, 0	       104	checkout.c	FUNCTION_2
0x4000608	      0xe800000000	                          call 0x400060d	       104	checkout.c	FUNCTION_2
0x400060d	      0xb800000000	                              mov eax, 0	       105	checkout.c	FUNCTION_2
0x4000612	        0x4883c458	                           add rsp, 0x58	       106	checkout.c	FUNCTION_2
0x4000616	              0x5b	                                 pop rbx	       106	checkout.c	FUNCTION_2
0x4000617	              0x5d	                                 pop rbp	       106	checkout.c	FUNCTION_2
0x4000618	              0xc3	                                     ret	       106	checkout.c	FUNCTION_2
