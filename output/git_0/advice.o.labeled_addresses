parse_advise_color_slot	CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,2	23
0x40000cd	              0x55	                                push rbp	        37	advice.c	FUNCTION_1
0x40000ce	          0x4889e5	                            mov rbp, rsp	        37	advice.c	FUNCTION_1
0x40000d1	        0x4883ec10	                           sub rsp, 0x10	        37	advice.c	FUNCTION_1
0x40000d5	        0x48897df8	                mov qword [rbp - 8], rdi	        37	advice.c	FUNCTION_1
0x40000d9	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000dd	      0xbe00000000	                              mov esi, 0	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000e2	          0x4889c7	                            mov rdi, rax	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000e5	      0xe800000000	                          call 0x40000ea	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000ea	            0x85c0	                           test eax, eax	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000ec	            0x7507	                           jne 0x40000f5	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x40000ee	      0xb800000000	                              mov eax, 0	        39	advice.c	FUNCTION_1	IF_1
0x40000f3	            0xeb21	                           jmp 0x4000116	        39	advice.c	FUNCTION_1	IF_1
0x40000f5	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x40000f9	      0xbe00000000	                              mov esi, 0	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x40000fe	          0x4889c7	                            mov rdi, rax	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000101	      0xe800000000	                          call 0x4000106	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000106	            0x85c0	                           test eax, eax	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000108	            0x7507	                           jne 0x4000111	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x400010a	      0xb801000000	                              mov eax, 1	        41	advice.c	FUNCTION_1	IF_2
0x400010f	            0xeb05	                           jmp 0x4000116	        41	advice.c	FUNCTION_1	IF_2
0x4000111	      0xb8ffffffff	                     mov eax, 0xffffffff	        42	advice.c	FUNCTION_1
0x4000116	              0xc9	                                   leave	        43	advice.c	FUNCTION_1
0x4000117	              0xc3	                                     ret	        43	advice.c	FUNCTION_1
git_default_advice_config	CALL,9:SWITCH,0:FOR,1:functions,0:ELSE,0:WHILE,0:DO,0:IF,6	108
0x4000342	              0x55	                                push rbp	       103	advice.c	FUNCTION_4
0x4000343	          0x4889e5	                            mov rbp, rsp	       103	advice.c	FUNCTION_4
0x4000346	              0x53	                                push rbx	       103	advice.c	FUNCTION_4
0x4000347	        0x4883ec38	                           sub rsp, 0x38	       103	advice.c	FUNCTION_4
0x400034b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       103	advice.c	FUNCTION_4
0x400034f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       103	advice.c	FUNCTION_4
0x4000353	    0x64488b042528	                mov rax, qword fs:[0x28]	       103	advice.c	FUNCTION_4
0x400035c	        0x488945e8	             mov qword [rbp - 0x18], rax	       103	advice.c	FUNCTION_4
0x4000360	            0x31c0	                            xor eax, eax	       103	advice.c	FUNCTION_4
0x4000362	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000366	      0xbe00000000	                              mov esi, 0	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400036b	          0x4889c7	                            mov rdi, rax	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400036e	      0xe800000000	                          call 0x4000373	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000373	            0x85c0	                           test eax, eax	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000375	            0x7523	                           jne 0x400039a	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000377	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x400037b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x400037f	          0x4889d6	                            mov rsi, rdx	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x4000382	          0x4889c7	                            mov rdi, rax	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x4000385	      0xe800000000	                          call 0x400038a	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x400038a	    0x890500000000	            mov dword [0x04000390], eax 	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x4000390	      0xb800000000	                              mov eax, 0	       109	advice.c	FUNCTION_4	IF_1
0x4000395	      0xe919010000	                           jmp 0x40004b3	       109	advice.c	FUNCTION_4	IF_1
0x400039a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x400039e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003a2	      0xbe00000000	                              mov esi, 0	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003a7	          0x4889c7	                            mov rdi, rax	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003aa	      0xe89cfcffff	                    call sym.skip_prefix	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003af	            0x85c0	                           test eax, eax	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003b1	            0x7471	                            je 0x4000424	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x40003b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x40003b7	          0x4889c7	                            mov rdi, rax	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x40003ba	      0xe80efdffff	        call sym.parse_advise_color_slot	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x40003bf	          0x8945d4	             mov dword [rbp - 0x2c], eax	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x40003c2	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       114	advice.c	FUNCTION_4	IF_2	IF_3
0x40003c6	            0x790a	                           jns 0x40003d2	       114	advice.c	FUNCTION_4	IF_2	IF_3
0x40003c8	      0xb800000000	                              mov eax, 0	       115	advice.c	FUNCTION_4	IF_2	IF_3
0x40003cd	      0xe9e1000000	                           jmp 0x40004b3	       115	advice.c	FUNCTION_4	IF_2	IF_3
0x40003d2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x40003d7	            0x7516	                           jne 0x40003ef	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x40003d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x40003dd	          0x4889c7	                            mov rdi, rax	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x40003e0	      0xe800000000	                          call 0x40003e5	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x40003e5	      0xe856fcffff	                    call sym.const_error	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x40003ea	      0xe9c4000000	                           jmp 0x40004b3	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x40003ef	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40003f2	          0x4863d0	                         movsxd rdx, eax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40003f5	          0x4889d0	                            mov rax, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40003f8	        0x48c1e002	                              shl rax, 2	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40003fc	          0x4801d0	                            add rax, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40003ff	          0x4889c2	                            mov rdx, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000402	        0x48c1e204	                              shl rdx, 4	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000406	          0x4829c2	                            sub rdx, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000409	    0x4881c2000000	                              add rdx, 0	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000410	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000414	          0x4889d6	                            mov rsi, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000417	          0x4889c7	                            mov rdi, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x400041a	      0xe800000000	                          call 0x400041f	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x400041f	      0xe98f000000	                           jmp 0x40004b3	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x4000424	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x4000428	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x400042c	      0xbe00000000	                              mov esi, 0	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x4000431	          0x4889c7	                            mov rdi, rax	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x4000434	      0xe812fcffff	                    call sym.skip_prefix	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x4000439	            0x85c0	                           test eax, eax	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x400043b	            0x7507	                           jne 0x4000444	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x400043d	      0xb800000000	                              mov eax, 0	       122	advice.c	FUNCTION_4	IF_5
0x4000442	            0xeb6f	                           jmp 0x40004b3	       122	advice.c	FUNCTION_4	IF_5
0x4000444	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       124	advice.c	FUNCTION_4	FOR_1
0x400044b	            0xeb59	                           jmp 0x40004a6	       124	advice.c	FUNCTION_4	FOR_1
0x400044d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000450	            0x4898	                                    cdqe	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000452	        0x48c1e004	                              shl rax, 4	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000456	    0x480500000000	                              add rax, 0	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x400045c	          0x488b10	                    mov rdx, qword [rax]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x400045f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000463	          0x4889d6	                            mov rsi, rdx	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000466	          0x4889c7	                            mov rdi, rax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000469	      0xe800000000	                          call 0x400046e	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x400046e	            0x85c0	                           test eax, eax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000470	            0x7406	                            je 0x4000478	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_8
0x4000472	        0x8345d001	               add dword [rbp - 0x30], 1	       124	advice.c	FUNCTION_4	FOR_1
0x4000476	            0xeb2e	                           jmp 0x40004a6	       124	advice.c	FUNCTION_4	FOR_1
0x4000478	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400047b	            0x4898	                                    cdqe	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400047d	        0x48c1e004	                              shl rax, 4	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x4000481	    0x480500000000	                              add rax, 0	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x4000487	          0x488b18	                    mov rbx, qword [rax]	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400048a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400048e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x4000492	          0x4889d6	                            mov rsi, rdx	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x4000495	          0x4889c7	                            mov rdi, rax	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x4000498	      0xe800000000	                          call 0x400049d	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400049d	            0x8903	                    mov dword [rbx], eax	       127	advice.c	FUNCTION_4	FOR_1	CALL_9
0x400049f	      0xb800000000	                              mov eax, 0	       128	advice.c	FUNCTION_4	FOR_1
0x40004a4	            0xeb0d	                           jmp 0x40004b3	       128	advice.c	FUNCTION_4	FOR_1
0x40004a6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       124	advice.c	FUNCTION_4	FOR_1
0x40004a9	          0x83f813	                           cmp eax, 0x13	       124	advice.c	FUNCTION_4	FOR_1
0x40004ac	            0x769f	                           jbe 0x400044d	       124	advice.c	FUNCTION_4	FOR_1
0x40004ae	      0xb800000000	                              mov eax, 0	       131	advice.c	FUNCTION_4
0x40004b3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       132	advice.c	FUNCTION_4
0x40004b7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       132	advice.c	FUNCTION_4
0x40004c0	            0x7405	                            je 0x40004c7	       132	advice.c	FUNCTION_4
0x40004c2	      0xe800000000	                          call 0x40004c7	       132	advice.c	FUNCTION_4
0x40004c7	        0x4883c438	                           add rsp, 0x38	       132	advice.c	FUNCTION_4
0x40004cb	              0x5b	                                 pop rbx	       132	advice.c	FUNCTION_4
0x40004cc	              0x5d	                                 pop rbp	       132	advice.c	FUNCTION_4
0x40004cd	              0xc3	                                     ret	       132	advice.c	FUNCTION_4
skip_prefix	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,1:IF,1	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_19
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_19
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_19
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_19
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_19
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_19	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_19
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_19
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_19
detach_advice	CALL,2:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,0	17
0x40006b7	              0x55	                                push rbp	       175	advice.c	FUNCTION_8
0x40006b8	          0x4889e5	                            mov rbp, rsp	       175	advice.c	FUNCTION_8
0x40006bb	        0x4883ec20	                           sub rsp, 0x20	       175	advice.c	FUNCTION_8
0x40006bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	       175	advice.c	FUNCTION_8
0x40006c3	      0xbf00000000	                              mov edi, 0	       176	advice.c	FUNCTION_8
0x40006c8	      0xe8d4f9ffff	                               call sym.	       176	advice.c	FUNCTION_8
0x40006cd	        0x488945f8	                mov qword [rbp - 8], rax	       176	advice.c	FUNCTION_8
0x40006d1	    0x488b05000000	            mov rax, qword [0x040006d8] 	       185	advice.c	FUNCTION_8	CALL_2
0x40006d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       185	advice.c	FUNCTION_8	CALL_2
0x40006dc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       185	advice.c	FUNCTION_8	CALL_2
0x40006e0	          0x4889ce	                            mov rsi, rcx	       185	advice.c	FUNCTION_8	CALL_2
0x40006e3	          0x4889c7	                            mov rdi, rax	       185	advice.c	FUNCTION_8	CALL_2
0x40006e6	      0xb800000000	                              mov eax, 0	       185	advice.c	FUNCTION_8	CALL_2
0x40006eb	      0xe800000000	                          call 0x40006f0	       185	advice.c	FUNCTION_8	CALL_2
0x40006f0	              0x90	                                     nop	       186	advice.c	FUNCTION_8
0x40006f1	              0xc9	                                   leave	       186	advice.c	FUNCTION_8
0x40006f2	              0xc3	                                     ret	       186	advice.c	FUNCTION_8
_	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,1	15
0x40000a1	              0x55	                                push rbp	        51	gettext.h	FUNCTION_11
0x40000a2	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_11
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_11
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_11
0x40000ad	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_11	IF_1
0x40000b1	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_11	IF_1
0x40000b4	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_11	IF_1
0x40000b6	            0x7507	                           jne 0x40000bf	        52	gettext.h	FUNCTION_11	IF_1
0x40000b8	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_11	IF_1
0x40000bd	            0xeb0c	                           jmp 0x40000cb	        53	gettext.h	FUNCTION_11	IF_1
0x40000bf	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_11
0x40000c3	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_11
0x40000c6	      0xe800000000	                          call 0x40000cb	        54	gettext.h	FUNCTION_11
0x40000cb	              0xc9	                                   leave	        55	gettext.h	FUNCTION_11
0x40000cc	              0xc3	                                     ret	        55	gettext.h	FUNCTION_11
die_resolve_conflict	CALL,3:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,0	12
0x4000630	              0x55	                                push rbp	       161	advice.c	FUNCTION_6
0x4000631	          0x4889e5	                            mov rbp, rsp	       161	advice.c	FUNCTION_6
0x4000634	        0x4883ec10	                           sub rsp, 0x10	       161	advice.c	FUNCTION_6
0x4000638	        0x48897df8	                mov qword [rbp - 8], rdi	       161	advice.c	FUNCTION_6
0x400063c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	advice.c	FUNCTION_6	CALL_1
0x4000640	          0x4889c7	                            mov rdi, rax	       162	advice.c	FUNCTION_6	CALL_1
0x4000643	      0xe800000000	                          call 0x4000648	       162	advice.c	FUNCTION_6	CALL_1
0x4000648	      0xbf00000000	                              mov edi, 0	       163	advice.c	FUNCTION_6	CALL_3
0x400064d	      0xe84ffaffff	                               call sym.	       163	advice.c	FUNCTION_6	CALL_3
0x4000652	          0x4889c7	                            mov rdi, rax	       163	advice.c	FUNCTION_6	CALL_3
0x4000655	      0xb800000000	                              mov eax, 0	       163	advice.c	FUNCTION_6	CALL_3
0x400065a	      0xe800000000	             call sym.die_conclude_merge	       163	advice.c	FUNCTION_6	CALL_3
advise_get_color	CALL,1:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,1	22
0x4000118	              0x55	                                push rbp	        46	advice.c	FUNCTION_2
0x4000119	          0x4889e5	                            mov rbp, rsp	        46	advice.c	FUNCTION_2
0x400011c	        0x4883ec10	                           sub rsp, 0x10	        46	advice.c	FUNCTION_2
0x4000120	          0x897dfc	                mov dword [rbp - 4], edi	        46	advice.c	FUNCTION_2
0x4000123	    0x8b0500000000	            mov eax, dword [0x04000129] 	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000129	            0x89c6	                            mov esi, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x400012b	      0xbf02000000	                              mov edi, 2	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000130	      0xe800000000	                          call 0x4000135	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000135	            0x85c0	                           test eax, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000137	            0x7420	                            je 0x4000159	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000139	          0x8b55fc	                mov edx, dword [rbp - 4]	        48	advice.c	FUNCTION_2	IF_1
0x400013c	          0x4889d0	                            mov rax, rdx	        48	advice.c	FUNCTION_2	IF_1
0x400013f	        0x48c1e002	                              shl rax, 2	        48	advice.c	FUNCTION_2	IF_1
0x4000143	          0x4801d0	                            add rax, rdx	        48	advice.c	FUNCTION_2	IF_1
0x4000146	          0x4889c2	                            mov rdx, rax	        48	advice.c	FUNCTION_2	IF_1
0x4000149	        0x48c1e204	                              shl rdx, 4	        48	advice.c	FUNCTION_2	IF_1
0x400014d	          0x4829c2	                            sub rdx, rax	        48	advice.c	FUNCTION_2	IF_1
0x4000150	    0x488d82000000	                          lea rax, [rdx]	        48	advice.c	FUNCTION_2	IF_1
0x4000157	            0xeb05	                           jmp 0x400015e	        48	advice.c	FUNCTION_2	IF_1
0x4000159	      0xb800000000	                              mov eax, 0	        49	advice.c	FUNCTION_2
0x400015e	              0xc9	                                   leave	        50	advice.c	FUNCTION_2
0x400015f	              0xc3	                                     ret	        50	advice.c	FUNCTION_2
error_resolve_conflict	CALL,13:SWITCH,0:FOR,0:functions,0:ELSE,5:WHILE,0:DO,0:IF,6	89
0x40004ce	              0x55	                                push rbp	       135	advice.c	FUNCTION_5
0x40004cf	          0x4889e5	                            mov rbp, rsp	       135	advice.c	FUNCTION_5
0x40004d2	        0x4883ec10	                           sub rsp, 0x10	       135	advice.c	FUNCTION_5
0x40004d6	        0x48897df8	                mov qword [rbp - 8], rdi	       135	advice.c	FUNCTION_5
0x40004da	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004de	      0xbe00000000	                              mov esi, 0	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004e3	          0x4889c7	                            mov rdi, rax	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004e6	      0xe800000000	                          call 0x40004eb	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004eb	            0x85c0	                           test eax, eax	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004ed	            0x7521	                           jne 0x4000510	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x40004ef	      0xbf00000000	                              mov edi, 0	       137	advice.c	FUNCTION_5	CALL_2
0x40004f4	      0xe8a8fbffff	                               call sym.	       137	advice.c	FUNCTION_5	CALL_2
0x40004f9	          0x4889c7	                            mov rdi, rax	       137	advice.c	FUNCTION_5	CALL_2
0x40004fc	      0xb800000000	                              mov eax, 0	       137	advice.c	FUNCTION_5	CALL_2
0x4000501	      0xe800000000	                          call 0x4000506	       137	advice.c	FUNCTION_5	CALL_2
0x4000506	      0xe835fbffff	                    call sym.const_error	       137	advice.c	FUNCTION_5	CALL_2
0x400050b	      0xe9f8000000	                           jmp 0x4000608	       137	advice.c	FUNCTION_5	CALL_2
0x4000510	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000514	      0xbe00000000	                              mov esi, 0	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000519	          0x4889c7	                            mov rdi, rax	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x400051c	      0xe800000000	                          call 0x4000521	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000521	            0x85c0	                           test eax, eax	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000523	            0x7521	                           jne 0x4000546	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_3
0x4000525	      0xbf00000000	                              mov edi, 0	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x400052a	      0xe872fbffff	                               call sym.	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x400052f	          0x4889c7	                            mov rdi, rax	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4000532	      0xb800000000	                              mov eax, 0	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4000537	      0xe800000000	                          call 0x400053c	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x400053c	      0xe8fffaffff	                    call sym.const_error	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4000541	      0xe9c2000000	                           jmp 0x4000608	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4000546	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x400054a	      0xbe00000000	                              mov esi, 0	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x400054f	          0x4889c7	                            mov rdi, rax	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x4000552	      0xe800000000	                          call 0x4000557	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x4000557	            0x85c0	                           test eax, eax	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x4000559	            0x7521	                           jne 0x400057c	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_5
0x400055b	      0xbf00000000	                              mov edi, 0	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000560	      0xe83cfbffff	                               call sym.	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000565	          0x4889c7	                            mov rdi, rax	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000568	      0xb800000000	                              mov eax, 0	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x400056d	      0xe800000000	                          call 0x4000572	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000572	      0xe8c9faffff	                    call sym.const_error	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000577	      0xe98c000000	                           jmp 0x4000608	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x400057c	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x4000580	      0xbe00000000	                              mov esi, 0	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x4000585	          0x4889c7	                            mov rdi, rax	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x4000588	      0xe800000000	                          call 0x400058d	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x400058d	            0x85c0	                           test eax, eax	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x400058f	            0x751e	                           jne 0x40005af	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x4000591	      0xbf00000000	                              mov edi, 0	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x4000596	      0xe806fbffff	                               call sym.	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x400059b	          0x4889c7	                            mov rdi, rax	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x400059e	      0xb800000000	                              mov eax, 0	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x40005a3	      0xe800000000	                          call 0x40005a8	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x40005a8	      0xe893faffff	                    call sym.const_error	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x40005ad	            0xeb59	                           jmp 0x4000608	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x40005af	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005b3	      0xbe00000000	                              mov esi, 0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005b8	          0x4889c7	                            mov rdi, rax	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005bb	      0xe800000000	                          call 0x40005c0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005c0	            0x85c0	                           test eax, eax	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005c2	            0x751e	                           jne 0x40005e2	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_9
0x40005c4	      0xbf00000000	                              mov edi, 0	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005c9	      0xe8d3faffff	                               call sym.	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005ce	          0x4889c7	                            mov rdi, rax	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005d1	      0xb800000000	                              mov eax, 0	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005d6	      0xe800000000	                          call 0x40005db	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005db	      0xe860faffff	                    call sym.const_error	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005e0	            0xeb26	                           jmp 0x4000608	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40005e2	      0xbf00000000	                              mov edi, 0	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005e7	      0xe8b5faffff	                               call sym.	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005ec	          0x4889c2	                            mov rdx, rax	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005f3	          0x4889c6	                            mov rsi, rax	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005f6	          0x4889d7	                            mov rdi, rdx	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005f9	      0xb800000000	                              mov eax, 0	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x40005fe	      0xe800000000	                          call 0x4000603	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x4000603	      0xe838faffff	                    call sym.const_error	       147	advice.c	FUNCTION_5	ELSE_5	CALL_11
0x4000608	    0x8b0500000000	            mov eax, dword [0x0400060e] 	       150	advice.c	FUNCTION_5	IF_6
0x400060e	            0x85c0	                           test eax, eax	       150	advice.c	FUNCTION_5	IF_6
0x4000610	            0x7417	                            je 0x4000629	       150	advice.c	FUNCTION_5	IF_6
0x4000612	      0xbf00000000	                              mov edi, 0	       155	advice.c	FUNCTION_5	IF_6	CALL_13
0x4000617	      0xe885faffff	                               call sym.	       155	advice.c	FUNCTION_5	IF_6	CALL_13
0x400061c	          0x4889c7	                            mov rdi, rax	       155	advice.c	FUNCTION_5	IF_6	CALL_13
0x400061f	      0xb800000000	                              mov eax, 0	       155	advice.c	FUNCTION_5	IF_6	CALL_13
0x4000624	      0xe800000000	                          call 0x4000629	       155	advice.c	FUNCTION_5	IF_6	CALL_13
0x4000629	      0xb8ffffffff	                     mov eax, 0xffffffff	       157	advice.c	FUNCTION_5
0x400062e	              0xc9	                                   leave	       158	advice.c	FUNCTION_5
0x400062f	              0xc3	                                     ret	       158	advice.c	FUNCTION_5
die_conclude_merge	CALL,5:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,1	21
0x400065f	              0x55	                                push rbp	       167	advice.c	FUNCTION_7
0x4000660	          0x4889e5	                            mov rbp, rsp	       167	advice.c	FUNCTION_7
0x4000663	      0xbf00000000	                              mov edi, 0	       168	advice.c	FUNCTION_7	CALL_1
0x4000668	      0xe834faffff	                               call sym.	       168	advice.c	FUNCTION_7	CALL_1
0x400066d	          0x4889c7	                            mov rdi, rax	       168	advice.c	FUNCTION_7	CALL_1
0x4000670	      0xb800000000	                              mov eax, 0	       168	advice.c	FUNCTION_7	CALL_1
0x4000675	      0xe800000000	                          call 0x400067a	       168	advice.c	FUNCTION_7	CALL_1
0x400067a	      0xe8c1f9ffff	                    call sym.const_error	       168	advice.c	FUNCTION_7	CALL_1
0x400067f	    0x8b0500000000	            mov eax, dword [0x04000685] 	       169	advice.c	FUNCTION_7	IF_1
0x4000685	            0x85c0	                           test eax, eax	       169	advice.c	FUNCTION_7	IF_1
0x4000687	            0x7417	                            je 0x40006a0	       169	advice.c	FUNCTION_7	IF_1
0x4000689	      0xbf00000000	                              mov edi, 0	       170	advice.c	FUNCTION_7	CALL_3
0x400068e	      0xe80efaffff	                               call sym.	       170	advice.c	FUNCTION_7	CALL_3
0x4000693	          0x4889c7	                            mov rdi, rax	       170	advice.c	FUNCTION_7	CALL_3
0x4000696	      0xb800000000	                              mov eax, 0	       170	advice.c	FUNCTION_7	CALL_3
0x400069b	      0xe800000000	                          call 0x40006a0	       170	advice.c	FUNCTION_7	CALL_3
0x40006a0	      0xbf00000000	                              mov edi, 0	       171	advice.c	FUNCTION_7	CALL_5
0x40006a5	      0xe8f7f9ffff	                               call sym.	       171	advice.c	FUNCTION_7	CALL_5
0x40006aa	          0x4889c7	                            mov rdi, rax	       171	advice.c	FUNCTION_7	CALL_5
0x40006ad	      0xb800000000	                              mov eax, 0	       171	advice.c	FUNCTION_7	CALL_5
0x40006b2	      0xe800000000	                  call sym.detach_advice	       171	advice.c	FUNCTION_7	CALL_5
advise	CALL,8:SWITCH,0:FOR,1:functions,0:ELSE,0:WHILE,0:DO,0:IF,1	96
0x4000160	              0x55	                                push rbp	        81	advice.c	FUNCTION_3
0x4000161	          0x4889e5	                            mov rbp, rsp	        81	advice.c	FUNCTION_3
0x4000164	            0x4155	                                push r13	        81	advice.c	FUNCTION_3
0x4000166	            0x4154	                                push r12	        81	advice.c	FUNCTION_3
0x4000168	              0x53	                                push rbx	        81	advice.c	FUNCTION_3
0x4000169	    0x4881ec180100	                          sub rsp, 0x118	        81	advice.c	FUNCTION_3
0x4000170	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	        81	advice.c	FUNCTION_3
0x4000177	    0x4889b538ffff	             mov qword [rbp - 0xc8], rsi	        81	advice.c	FUNCTION_3
0x400017e	    0x48899540ffff	             mov qword [rbp - 0xc0], rdx	        81	advice.c	FUNCTION_3
0x4000185	    0x48898d48ffff	             mov qword [rbp - 0xb8], rcx	        81	advice.c	FUNCTION_3
0x400018c	    0x4c898550ffff	              mov qword [rbp - 0xb0], r8	        81	advice.c	FUNCTION_3
0x4000193	    0x4c898d58ffff	              mov qword [rbp - 0xa8], r9	        81	advice.c	FUNCTION_3
0x400019a	            0x84c0	                             test al, al	        81	advice.c	FUNCTION_3
0x400019c	            0x7426	                            je 0x40001c4	        81	advice.c	FUNCTION_3
0x400019e	     0xf298560ffff	       movaps xmmword [rbp - 0xa0], xmm0	        81	advice.c	FUNCTION_3
0x40001a5	     0xf298d70ffff	       movaps xmmword [rbp - 0x90], xmm1	        81	advice.c	FUNCTION_3
0x40001ac	         0xf295580	       movaps xmmword [rbp - 0x80], xmm2	        81	advice.c	FUNCTION_3
0x40001b0	         0xf295d90	       movaps xmmword [rbp - 0x70], xmm3	        81	advice.c	FUNCTION_3
0x40001b4	         0xf2965a0	       movaps xmmword [rbp - 0x60], xmm4	        81	advice.c	FUNCTION_3
0x40001b8	         0xf296db0	       movaps xmmword [rbp - 0x50], xmm5	        81	advice.c	FUNCTION_3
0x40001bc	         0xf2975c0	       movaps xmmword [rbp - 0x40], xmm6	        81	advice.c	FUNCTION_3
0x40001c0	         0xf297dd0	       movaps xmmword [rbp - 0x30], xmm7	        81	advice.c	FUNCTION_3
0x40001c4	    0x64488b042528	                mov rax, qword fs:[0x28]	        81	advice.c	FUNCTION_3
0x40001cd	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        81	advice.c	FUNCTION_3
0x40001d4	            0x31c0	                            xor eax, eax	        81	advice.c	FUNCTION_3
0x40001d6	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	        82	advice.c	FUNCTION_3
0x40001e1	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        82	advice.c	FUNCTION_3
0x40001ec	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        82	advice.c	FUNCTION_3
0x40001f7	    0xc78510ffffff	               mov dword [rbp - 0xf0], 8	        86	advice.c	FUNCTION_3	CALL_1
0x4000201	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x30 	        86	advice.c	FUNCTION_3	CALL_1
0x400020b	        0x488d4510	                   lea rax, [rbp + 0x10]	        86	advice.c	FUNCTION_3	CALL_1
0x400020f	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	        86	advice.c	FUNCTION_3	CALL_1
0x4000216	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	        86	advice.c	FUNCTION_3	CALL_1
0x400021d	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	        86	advice.c	FUNCTION_3	CALL_1
0x4000224	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	        87	advice.c	FUNCTION_3	CALL_2
0x400022b	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	        87	advice.c	FUNCTION_3	CALL_2
0x4000232	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	        87	advice.c	FUNCTION_3	CALL_2
0x4000239	          0x4889ce	                            mov rsi, rcx	        87	advice.c	FUNCTION_3	CALL_2
0x400023c	          0x4889c7	                            mov rdi, rax	        87	advice.c	FUNCTION_3	CALL_2
0x400023f	      0xe800000000	                          call 0x4000244	        87	advice.c	FUNCTION_3	CALL_2
0x4000244	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	        90	advice.c	FUNCTION_3	FOR_1
0x400024b	    0x488985e0feff	            mov qword [rbp - 0x120], rax	        90	advice.c	FUNCTION_3	FOR_1
0x4000252	      0xe9a4000000	                           jmp 0x40002fb	        90	advice.c	FUNCTION_3	FOR_1
0x4000257	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        91	advice.c	FUNCTION_3	FOR_1
0x400025e	      0xbe0a000000	                            mov esi, 0xa	        91	advice.c	FUNCTION_3	FOR_1
0x4000263	          0x4889c7	                            mov rdi, rax	        91	advice.c	FUNCTION_3	FOR_1
0x4000266	      0xe800000000	                          call 0x400026b	        91	advice.c	FUNCTION_3	FOR_1
0x400026b	    0x488985e8feff	            mov qword [rbp - 0x118], rax	        91	advice.c	FUNCTION_3	FOR_1
0x4000272	      0xbf00000000	                              mov edi, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x4000277	      0xe89cfeffff	               call sym.advise_get_color	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x400027c	          0x4989c5	                            mov r13, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x400027f	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	        94	advice.c	FUNCTION_3	FOR_1
0x4000286	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        94	advice.c	FUNCTION_3	FOR_1
0x400028d	          0x4829c2	                            sub rdx, rax	        94	advice.c	FUNCTION_3	FOR_1
0x4000290	          0x4889d0	                            mov rax, rdx	        94	advice.c	FUNCTION_3	FOR_1
0x4000293	          0x4189c4	                           mov r12d, eax	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x4000296	      0xbf01000000	                              mov edi, 1	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x400029b	      0xe878feffff	               call sym.advise_get_color	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002a0	          0x4889c3	                            mov rbx, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002a3	      0xbf00000000	                              mov edi, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002a8	      0xe8f4fdffff	                               call sym.	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002ad	          0x4889c6	                            mov rsi, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002b0	    0x488b05000000	            mov rax, qword [0x040002b7] 	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002b7	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002be	          0x4d89e9	                             mov r9, r13	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002c1	          0x4989d0	                             mov r8, rdx	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002c4	          0x4489e1	                           mov ecx, r12d	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002c7	          0x4889da	                            mov rdx, rbx	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002ca	          0x4889c7	                            mov rdi, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002cd	      0xb800000000	                              mov eax, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002d2	      0xe800000000	                          call 0x40002d7	        92	advice.c	FUNCTION_3	FOR_1	CALL_5
0x40002d7	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x40002de	           0xfb600	                   movzx eax, byte [rax]	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x40002e1	            0x84c0	                             test al, al	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x40002e3	            0x7408	                            je 0x40002ed	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x40002e5	    0x488385e8feff	              add qword [rbp - 0x118], 1	        97	advice.c	FUNCTION_3	FOR_1	IF_1
0x40002ed	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	        90	advice.c	FUNCTION_3	FOR_1
0x40002f4	    0x488985e0feff	            mov qword [rbp - 0x120], rax	        90	advice.c	FUNCTION_3	FOR_1
0x40002fb	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        90	advice.c	FUNCTION_3	FOR_1
0x4000302	           0xfb600	                   movzx eax, byte [rax]	        90	advice.c	FUNCTION_3	FOR_1
0x4000305	            0x84c0	                             test al, al	        90	advice.c	FUNCTION_3	FOR_1
0x4000307	     0xf854affffff	                           jne 0x4000257	        90	advice.c	FUNCTION_3	FOR_1
0x400030d	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	        99	advice.c	FUNCTION_3	CALL_8
0x4000314	          0x4889c7	                            mov rdi, rax	        99	advice.c	FUNCTION_3	CALL_8
0x4000317	      0xe800000000	                          call 0x400031c	        99	advice.c	FUNCTION_3	CALL_8
0x400031c	              0x90	                                     nop	       100	advice.c	FUNCTION_3
0x400031d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       100	advice.c	FUNCTION_3
0x4000324	    0x644833042528	                xor rax, qword fs:[0x28]	       100	advice.c	FUNCTION_3
0x400032d	            0x7405	                            je 0x4000334	       100	advice.c	FUNCTION_3
0x400032f	      0xe800000000	                          call 0x4000334	       100	advice.c	FUNCTION_3
0x4000334	    0x4881c4180100	                          add rsp, 0x118	       100	advice.c	FUNCTION_3
0x400033b	              0x5b	                                 pop rbx	       100	advice.c	FUNCTION_3
0x400033c	            0x415c	                                 pop r12	       100	advice.c	FUNCTION_3
0x400033e	            0x415d	                                 pop r13	       100	advice.c	FUNCTION_3
0x4000340	              0x5d	                                 pop rbp	       100	advice.c	FUNCTION_3
0x4000341	              0xc3	                                     ret	       100	advice.c	FUNCTION_3
const_error	CALL,0:SWITCH,0:FOR,0:functions,0:ELSE,0:WHILE,0:DO,0:IF,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_18
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_18
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_18
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_18
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_18
