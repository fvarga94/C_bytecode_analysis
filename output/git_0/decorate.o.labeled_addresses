add_decoration	CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:IF,1:DO,0	30
0x4000298	              0x55	                                push rbp	        58	decorate.c	FUNCTION_4
0x4000299	          0x4889e5	                            mov rbp, rsp	        58	decorate.c	FUNCTION_4
0x400029c	        0x4883ec30	                           sub rsp, 0x30	        58	decorate.c	FUNCTION_4
0x40002a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	        58	decorate.c	FUNCTION_4
0x40002a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	        58	decorate.c	FUNCTION_4
0x40002a8	        0x488955d8	             mov qword [rbp - 0x28], rdx	        58	decorate.c	FUNCTION_4
0x40002ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	decorate.c	FUNCTION_4
0x40002b0	          0x8b400c	              mov eax, dword [rax + 0xc]	        59	decorate.c	FUNCTION_4
0x40002b3	          0x83c001	                              add eax, 1	        59	decorate.c	FUNCTION_4
0x40002b6	          0x8945fc	                mov dword [rbp - 4], eax	        59	decorate.c	FUNCTION_4
0x40002b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	decorate.c	FUNCTION_4	IF_1
0x40002bd	          0x8b4008	                mov eax, dword [rax + 8]	        61	decorate.c	FUNCTION_4	IF_1
0x40002c0	             0x1c0	                            add eax, eax	        61	decorate.c	FUNCTION_4	IF_1
0x40002c2	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	        61	decorate.c	FUNCTION_4	IF_1
0x40002c7	            0xf7e2	                                 mul edx	        61	decorate.c	FUNCTION_4	IF_1
0x40002c9	            0xd1ea	                              shr edx, 1	        61	decorate.c	FUNCTION_4	IF_1
0x40002cb	          0x8b45fc	                mov eax, dword [rbp - 4]	        61	decorate.c	FUNCTION_4	IF_1
0x40002ce	            0x39c2	                            cmp edx, eax	        61	decorate.c	FUNCTION_4	IF_1
0x40002d0	            0x730c	                           jae 0x40002de	        61	decorate.c	FUNCTION_4	IF_1
0x40002d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	decorate.c	FUNCTION_4	CALL_1
0x40002d6	          0x4889c7	                            mov rdi, rax	        62	decorate.c	FUNCTION_4	CALL_1
0x40002d9	      0xe8d1feffff	                call sym.grow_decoration	        62	decorate.c	FUNCTION_4	CALL_1
0x40002de	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        63	decorate.c	FUNCTION_4	CALL_2
0x40002e2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        63	decorate.c	FUNCTION_4	CALL_2
0x40002e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        63	decorate.c	FUNCTION_4	CALL_2
0x40002ea	          0x4889ce	                            mov rsi, rcx	        63	decorate.c	FUNCTION_4	CALL_2
0x40002ed	          0x4889c7	                            mov rdi, rax	        63	decorate.c	FUNCTION_4	CALL_2
0x40002f0	      0xe8b3fdffff	              call sym.insert_decoration	        63	decorate.c	FUNCTION_4	CALL_2
0x40002f5	              0xc9	                                   leave	        64	decorate.c	FUNCTION_4
0x40002f6	              0xc3	                                     ret	        64	decorate.c	FUNCTION_4
hash_obj	CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:IF,0:DO,0	14
0x400007d	              0x55	                                push rbp	        10	decorate.c	FUNCTION_1
0x400007e	          0x4889e5	                            mov rbp, rsp	        10	decorate.c	FUNCTION_1
0x4000081	        0x4883ec10	                           sub rsp, 0x10	        10	decorate.c	FUNCTION_1
0x4000085	        0x48897df8	                mov qword [rbp - 8], rdi	        10	decorate.c	FUNCTION_1
0x4000089	          0x8975f4	              mov dword [rbp - 0xc], esi	        10	decorate.c	FUNCTION_1
0x400008c	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	decorate.c	FUNCTION_1	CALL_1
0x4000090	        0x4883c004	                              add rax, 4	        11	decorate.c	FUNCTION_1	CALL_1
0x4000094	          0x4889c7	                            mov rdi, rax	        11	decorate.c	FUNCTION_1	CALL_1
0x4000097	      0xe8a4ffffff	                       call sym.sha1hash	        11	decorate.c	FUNCTION_1	CALL_1
0x400009c	      0xba00000000	                              mov edx, 0	        11	decorate.c	FUNCTION_1	CALL_1
0x40000a1	          0xf775f4	                   div dword [rbp - 0xc]	        11	decorate.c	FUNCTION_1	CALL_1
0x40000a4	            0x89d0	                            mov eax, edx	        11	decorate.c	FUNCTION_1	CALL_1
0x40000a6	              0xc9	                                   leave	        12	decorate.c	FUNCTION_1
0x40000a7	              0xc3	                                     ret	        12	decorate.c	FUNCTION_1
insert_decoration	CALL,1:SWITCH,0:functions,0:WHILE,1:FOR,0:ELSE,0:IF,2:DO,0	78
0x40000a8	              0x55	                                push rbp	        15	decorate.c	FUNCTION_2
0x40000a9	          0x4889e5	                            mov rbp, rsp	        15	decorate.c	FUNCTION_2
0x40000ac	        0x4883ec40	                           sub rsp, 0x40	        15	decorate.c	FUNCTION_2
0x40000b0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        15	decorate.c	FUNCTION_2
0x40000b4	        0x488975d0	             mov qword [rbp - 0x30], rsi	        15	decorate.c	FUNCTION_2
0x40000b8	        0x488955c8	             mov qword [rbp - 0x38], rdx	        15	decorate.c	FUNCTION_2
0x40000bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        16	decorate.c	FUNCTION_2
0x40000c0	          0x8b4008	                mov eax, dword [rax + 8]	        16	decorate.c	FUNCTION_2
0x40000c3	          0x8945ec	             mov dword [rbp - 0x14], eax	        16	decorate.c	FUNCTION_2
0x40000c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        17	decorate.c	FUNCTION_2
0x40000ca	        0x488b4010	            mov rax, qword [rax + 0x10] 	        17	decorate.c	FUNCTION_2
0x40000ce	        0x488945f0	             mov qword [rbp - 0x10], rax	        17	decorate.c	FUNCTION_2
0x40000d2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        18	decorate.c	FUNCTION_2	CALL_1
0x40000d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        18	decorate.c	FUNCTION_2	CALL_1
0x40000d9	            0x89d6	                            mov esi, edx	        18	decorate.c	FUNCTION_2	CALL_1
0x40000db	          0x4889c7	                            mov rdi, rax	        18	decorate.c	FUNCTION_2	CALL_1
0x40000de	      0xe89affffff	                       call sym.hash_obj	        18	decorate.c	FUNCTION_2	CALL_1
0x40000e3	          0x8945e8	             mov dword [rbp - 0x18], eax	        18	decorate.c	FUNCTION_2	CALL_1
0x40000e6	            0xeb65	                           jmp 0x400014d	        20	decorate.c	FUNCTION_2	WHILE_1
0x40000e8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000eb	        0x48c1e004	                              shl rax, 4	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000ef	          0x4889c2	                            mov rdx, rax	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000f6	          0x4801d0	                            add rax, rdx	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000f9	          0x488b00	                    mov rax, qword [rax]	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x40000fc	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000100	            0x7538	                           jne 0x400013a	        21	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000102	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000105	        0x48c1e004	                              shl rax, 4	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000109	          0x4889c2	                            mov rdx, rax	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400010c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000110	          0x4801d0	                            add rax, rdx	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000113	        0x488b4008	                mov rax, qword [rax + 8]	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000117	        0x488945f8	                mov qword [rbp - 8], rax	        22	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400011b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400011e	        0x48c1e004	                              shl rax, 4	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000122	          0x4889c2	                            mov rdx, rax	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000125	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000129	          0x4801c2	                            add rdx, rax	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400012c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000130	        0x48894208	                mov qword [rdx + 8], rax	        23	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000134	        0x488b45f8	                mov rax, qword [rbp - 8]	        24	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x4000138	            0xeb73	                           jmp 0x40001ad	        24	decorate.c	FUNCTION_2	WHILE_1	IF_1
0x400013a	        0x8345e801	               add dword [rbp - 0x18], 1	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x400013e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x4000141	          0x3945e8	            cmp dword [rbp - 0x18], eax 	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x4000144	            0x7207	                            jb 0x400014d	        26	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x4000146	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        27	decorate.c	FUNCTION_2	WHILE_1	IF_2
0x400014d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000150	        0x48c1e004	                              shl rax, 4	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000154	          0x4889c2	                            mov rdx, rax	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000157	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	decorate.c	FUNCTION_2	WHILE_1
0x400015b	          0x4801d0	                            add rax, rdx	        20	decorate.c	FUNCTION_2	WHILE_1
0x400015e	          0x488b00	                    mov rax, qword [rax]	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000161	          0x4885c0	                           test rax, rax	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000164	            0x7582	                           jne 0x40000e8	        20	decorate.c	FUNCTION_2	WHILE_1
0x4000166	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        29	decorate.c	FUNCTION_2
0x4000169	        0x48c1e004	                              shl rax, 4	        29	decorate.c	FUNCTION_2
0x400016d	          0x4889c2	                            mov rdx, rax	        29	decorate.c	FUNCTION_2
0x4000170	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        29	decorate.c	FUNCTION_2
0x4000174	          0x4801c2	                            add rdx, rax	        29	decorate.c	FUNCTION_2
0x4000177	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        29	decorate.c	FUNCTION_2
0x400017b	          0x488902	                    mov qword [rdx], rax	        29	decorate.c	FUNCTION_2
0x400017e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        30	decorate.c	FUNCTION_2
0x4000181	        0x48c1e004	                              shl rax, 4	        30	decorate.c	FUNCTION_2
0x4000185	          0x4889c2	                            mov rdx, rax	        30	decorate.c	FUNCTION_2
0x4000188	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        30	decorate.c	FUNCTION_2
0x400018c	          0x4801c2	                            add rdx, rax	        30	decorate.c	FUNCTION_2
0x400018f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        30	decorate.c	FUNCTION_2
0x4000193	        0x48894208	                mov qword [rdx + 8], rax	        30	decorate.c	FUNCTION_2
0x4000197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	decorate.c	FUNCTION_2
0x400019b	          0x8b400c	              mov eax, dword [rax + 0xc]	        31	decorate.c	FUNCTION_2
0x400019e	          0x8d5001	                      lea edx, [rax + 1]	        31	decorate.c	FUNCTION_2
0x40001a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	decorate.c	FUNCTION_2
0x40001a5	          0x89500c	              mov dword [rax + 0xc], edx	        31	decorate.c	FUNCTION_2
0x40001a8	      0xb800000000	                              mov eax, 0	        32	decorate.c	FUNCTION_2
0x40001ad	              0xc9	                                   leave	        33	decorate.c	FUNCTION_2
0x40001ae	              0xc3	                                     ret	        33	decorate.c	FUNCTION_2
grow_decoration	CALL,3:SWITCH,0:functions,0:WHILE,0:FOR,1:ELSE,0:IF,1:DO,0	71
0x40001af	              0x55	                                push rbp	        36	decorate.c	FUNCTION_3
0x40001b0	          0x4889e5	                            mov rbp, rsp	        36	decorate.c	FUNCTION_3
0x40001b3	        0x4883ec30	                           sub rsp, 0x30	        36	decorate.c	FUNCTION_3
0x40001b7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        36	decorate.c	FUNCTION_3
0x40001bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        38	decorate.c	FUNCTION_3
0x40001bf	          0x8b4008	                mov eax, dword [rax + 8]	        38	decorate.c	FUNCTION_3
0x40001c2	          0x8945e4	             mov dword [rbp - 0x1c], eax	        38	decorate.c	FUNCTION_3
0x40001c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        39	decorate.c	FUNCTION_3
0x40001c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	        39	decorate.c	FUNCTION_3
0x40001cd	        0x488945e8	             mov qword [rbp - 0x18], rax	        39	decorate.c	FUNCTION_3
0x40001d1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        41	decorate.c	FUNCTION_3
0x40001d4	    0x8d90e8030000	                  lea edx, [rax + 0x3e8]	        41	decorate.c	FUNCTION_3
0x40001da	            0x89d0	                            mov eax, edx	        41	decorate.c	FUNCTION_3
0x40001dc	             0x1c0	                            add eax, eax	        41	decorate.c	FUNCTION_3
0x40001de	             0x1d0	                            add eax, edx	        41	decorate.c	FUNCTION_3
0x40001e0	            0x89c2	                            mov edx, eax	        41	decorate.c	FUNCTION_3
0x40001e2	          0xc1ea1f	                           shr edx, 0x1f	        41	decorate.c	FUNCTION_3
0x40001e5	             0x1d0	                            add eax, edx	        41	decorate.c	FUNCTION_3
0x40001e7	            0xd1f8	                              sar eax, 1	        41	decorate.c	FUNCTION_3
0x40001e9	            0x89c2	                            mov edx, eax	        41	decorate.c	FUNCTION_3
0x40001eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	decorate.c	FUNCTION_3
0x40001ef	          0x895008	                mov dword [rax + 8], edx	        41	decorate.c	FUNCTION_3
0x40001f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	decorate.c	FUNCTION_3	CALL_1
0x40001f6	          0x8b4008	                mov eax, dword [rax + 8]	        42	decorate.c	FUNCTION_3	CALL_1
0x40001f9	            0x89c0	                            mov eax, eax	        42	decorate.c	FUNCTION_3	CALL_1
0x40001fb	      0xbe10000000	                           mov esi, 0x10	        42	decorate.c	FUNCTION_3	CALL_1
0x4000200	          0x4889c7	                            mov rdi, rax	        42	decorate.c	FUNCTION_3	CALL_1
0x4000203	      0xe800000000	                          call 0x4000208	        42	decorate.c	FUNCTION_3	CALL_1
0x4000208	          0x4889c2	                            mov rdx, rax	        42	decorate.c	FUNCTION_3	CALL_1
0x400020b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	decorate.c	FUNCTION_3	CALL_1
0x400020f	        0x48895010	             mov qword [rax + 0x10], rdx	        42	decorate.c	FUNCTION_3	CALL_1
0x4000213	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        43	decorate.c	FUNCTION_3
0x4000217	    0xc7400c000000	                mov dword [rax + 0xc], 0	        43	decorate.c	FUNCTION_3
0x400021e	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        45	decorate.c	FUNCTION_3	FOR_1
0x4000225	            0xeb5a	                           jmp 0x4000281	        45	decorate.c	FUNCTION_3	FOR_1
0x4000227	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        46	decorate.c	FUNCTION_3	FOR_1
0x400022a	            0x4898	                                    cdqe	        46	decorate.c	FUNCTION_3	FOR_1
0x400022c	        0x48c1e004	                              shl rax, 4	        46	decorate.c	FUNCTION_3	FOR_1
0x4000230	          0x4889c2	                            mov rdx, rax	        46	decorate.c	FUNCTION_3	FOR_1
0x4000233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	decorate.c	FUNCTION_3	FOR_1
0x4000237	          0x4801d0	                            add rax, rdx	        46	decorate.c	FUNCTION_3	FOR_1
0x400023a	          0x488b00	                    mov rax, qword [rax]	        46	decorate.c	FUNCTION_3	FOR_1
0x400023d	        0x488945f0	             mov qword [rbp - 0x10], rax	        46	decorate.c	FUNCTION_3	FOR_1
0x4000241	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        47	decorate.c	FUNCTION_3	FOR_1
0x4000244	            0x4898	                                    cdqe	        47	decorate.c	FUNCTION_3	FOR_1
0x4000246	        0x48c1e004	                              shl rax, 4	        47	decorate.c	FUNCTION_3	FOR_1
0x400024a	          0x4889c2	                            mov rdx, rax	        47	decorate.c	FUNCTION_3	FOR_1
0x400024d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        47	decorate.c	FUNCTION_3	FOR_1
0x4000251	          0x4801d0	                            add rax, rdx	        47	decorate.c	FUNCTION_3	FOR_1
0x4000254	        0x488b4008	                mov rax, qword [rax + 8]	        47	decorate.c	FUNCTION_3	FOR_1
0x4000258	        0x488945f8	                mov qword [rbp - 8], rax	        47	decorate.c	FUNCTION_3	FOR_1
0x400025c	      0x48837df800	                  cmp qword [rbp - 8], 0	        49	decorate.c	FUNCTION_3	FOR_1	IF_1
0x4000261	            0x7419	                            je 0x400027c	        49	decorate.c	FUNCTION_3	FOR_1	IF_1
0x4000263	        0x488b55f8	                mov rdx, qword [rbp - 8]	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x4000267	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400026b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400026f	          0x4889ce	                            mov rsi, rcx	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x4000272	          0x4889c7	                            mov rdi, rax	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x4000275	      0xe82efeffff	              call sym.insert_decoration	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400027a	            0xeb01	                           jmp 0x400027d	        51	decorate.c	FUNCTION_3	FOR_1	CALL_2
0x400027c	              0x90	                                     nop	        50	decorate.c	FUNCTION_3	FOR_1	IF_1
0x400027d	        0x8345e001	               add dword [rbp - 0x20], 1	        45	decorate.c	FUNCTION_3	FOR_1
0x4000281	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        45	decorate.c	FUNCTION_3	FOR_1
0x4000284	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        45	decorate.c	FUNCTION_3	FOR_1
0x4000287	            0x7c9e	                            jl 0x4000227	        45	decorate.c	FUNCTION_3	FOR_1
0x4000289	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	decorate.c	FUNCTION_3	CALL_3
0x400028d	          0x4889c7	                            mov rdi, rax	        53	decorate.c	FUNCTION_3	CALL_3
0x4000290	      0xe800000000	                          call 0x4000295	        53	decorate.c	FUNCTION_3	CALL_3
0x4000295	              0x90	                                     nop	        54	decorate.c	FUNCTION_3
0x4000296	              0xc9	                                   leave	        54	decorate.c	FUNCTION_3
0x4000297	              0xc3	                                     ret	        54	decorate.c	FUNCTION_3
sha1hash	CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0:ELSE,0:IF,0:DO,0	17
0x4000040	              0x55	                                push rbp	       122	hashmap.h	FUNCTION_6
0x4000041	          0x4889e5	                            mov rbp, rsp	       122	hashmap.h	FUNCTION_6
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       122	hashmap.h	FUNCTION_6
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	       122	hashmap.h	FUNCTION_6
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	       122	hashmap.h	FUNCTION_6
0x4000055	        0x488945f8	                mov qword [rbp - 8], rax	       122	hashmap.h	FUNCTION_6
0x4000059	            0x31c0	                            xor eax, eax	       122	hashmap.h	FUNCTION_6
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	hashmap.h	FUNCTION_6	CALL_1
0x400005f	            0x8b00	                    mov eax, dword [rax]	       128	hashmap.h	FUNCTION_6	CALL_1
0x4000061	          0x8945f4	              mov dword [rbp - 0xc], eax	       128	hashmap.h	FUNCTION_6	CALL_1
0x4000064	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       129	hashmap.h	FUNCTION_6
0x4000067	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	hashmap.h	FUNCTION_6
0x400006b	    0x644833142528	                xor rdx, qword fs:[0x28]	       130	hashmap.h	FUNCTION_6
0x4000074	            0x7405	                            je 0x400007b	       130	hashmap.h	FUNCTION_6
0x4000076	      0xe800000000	                          call 0x400007b	       130	hashmap.h	FUNCTION_6
0x400007b	              0xc9	                                   leave	       130	hashmap.h	FUNCTION_6
0x400007c	              0xc3	                                     ret	       130	hashmap.h	FUNCTION_6
lookup_decoration	CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,1:ELSE,0:IF,4:DO,0	46
0x40002f7	              0x55	                                push rbp	        67	decorate.c	FUNCTION_5
0x40002f8	          0x4889e5	                            mov rbp, rsp	        67	decorate.c	FUNCTION_5
0x40002fb	        0x4883ec20	                           sub rsp, 0x20	        67	decorate.c	FUNCTION_5
0x40002ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	        67	decorate.c	FUNCTION_5
0x4000303	        0x488975e0	             mov qword [rbp - 0x20], rsi	        67	decorate.c	FUNCTION_5
0x4000307	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	decorate.c	FUNCTION_5	IF_1
0x400030b	          0x8b4008	                mov eax, dword [rax + 8]	        71	decorate.c	FUNCTION_5	IF_1
0x400030e	            0x85c0	                           test eax, eax	        71	decorate.c	FUNCTION_5	IF_1
0x4000310	            0x7507	                           jne 0x4000319	        71	decorate.c	FUNCTION_5	IF_1
0x4000312	      0xb800000000	                              mov eax, 0	        72	decorate.c	FUNCTION_5	IF_1
0x4000317	            0xeb71	                           jmp 0x400038a	        72	decorate.c	FUNCTION_5	IF_1
0x4000319	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	decorate.c	FUNCTION_5	CALL_1
0x400031d	          0x8b5008	                mov edx, dword [rax + 8]	        73	decorate.c	FUNCTION_5	CALL_1
0x4000320	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        73	decorate.c	FUNCTION_5	CALL_1
0x4000324	            0x89d6	                            mov esi, edx	        73	decorate.c	FUNCTION_5	CALL_1
0x4000326	          0x4889c7	                            mov rdi, rax	        73	decorate.c	FUNCTION_5	CALL_1
0x4000329	      0xe84ffdffff	                       call sym.hash_obj	        73	decorate.c	FUNCTION_5	CALL_1
0x400032e	          0x8945f4	              mov dword [rbp - 0xc], eax	        73	decorate.c	FUNCTION_5	CALL_1
0x4000331	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	decorate.c	FUNCTION_5	FOR_1
0x4000335	        0x488b4010	            mov rax, qword [rax + 0x10] 	        75	decorate.c	FUNCTION_5	FOR_1
0x4000339	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        75	decorate.c	FUNCTION_5	FOR_1
0x400033c	        0x48c1e204	                              shl rdx, 4	        75	decorate.c	FUNCTION_5	FOR_1
0x4000340	          0x4801d0	                            add rax, rdx	        75	decorate.c	FUNCTION_5	FOR_1
0x4000343	        0x488945f8	                mov qword [rbp - 8], rax	        75	decorate.c	FUNCTION_5	FOR_1
0x4000347	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400034b	          0x488b00	                    mov rax, qword [rax]	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400034e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000352	            0x750a	                           jne 0x400035e	        76	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000354	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	decorate.c	FUNCTION_5	FOR_1	IF_2
0x4000358	        0x488b4008	                mov rax, qword [rax + 8]	        77	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400035c	            0xeb2c	                           jmp 0x400038a	        77	decorate.c	FUNCTION_5	FOR_1	IF_2
0x400035e	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000362	          0x488b00	                    mov rax, qword [rax]	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000365	          0x4885c0	                           test rax, rax	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000368	            0x7507	                           jne 0x4000371	        78	decorate.c	FUNCTION_5	FOR_1	IF_3
0x400036a	      0xb800000000	                              mov eax, 0	        79	decorate.c	FUNCTION_5	FOR_1	IF_3
0x400036f	            0xeb19	                           jmp 0x400038a	        79	decorate.c	FUNCTION_5	FOR_1	IF_3
0x4000371	        0x8345f401	                add dword [rbp - 0xc], 1	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000375	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000379	          0x8b4008	                mov eax, dword [rax + 8]	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x400037c	          0x3945f4	              cmp dword [rbp - 0xc], eax	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x400037f	            0x75b0	                           jne 0x4000331	        80	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000381	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        81	decorate.c	FUNCTION_5	FOR_1	IF_4
0x4000388	            0xeba7	                           jmp 0x4000331	        82	decorate.c	FUNCTION_5	FOR_1
0x400038a	              0xc9	                                   leave	        83	decorate.c	FUNCTION_5
0x400038b	              0xc3	                                     ret	        83	decorate.c	FUNCTION_5
