alloc_tag_node	SWITCH,0:WHILE,0:CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0	15
0x400013f	              0x55	                                push rbp	        69	alloc.c	FUNCTION_4
0x4000140	          0x4889e5	                            mov rbp, rsp	        69	alloc.c	FUNCTION_4
0x4000143	        0x4883ec10	                           sub rsp, 0x10	        69	alloc.c	FUNCTION_4
0x4000147	      0xbe30000000	                           mov esi, 0x30	        70	alloc.c	FUNCTION_4	CALL_1
0x400014c	      0xbf00000000	                              mov edi, 0	        70	alloc.c	FUNCTION_4	CALL_1
0x4000151	      0xe8eafeffff	                     call sym.alloc_node	        70	alloc.c	FUNCTION_4	CALL_1
0x4000156	        0x488945f8	                mov qword [rbp - 8], rax	        70	alloc.c	FUNCTION_4	CALL_1
0x400015a	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	alloc.c	FUNCTION_4
0x400015e	           0xfb610	                   movzx edx, byte [rax]	        71	alloc.c	FUNCTION_4
0x4000161	          0x83e2f1	                     and edx, 0xfffffff1	        71	alloc.c	FUNCTION_4
0x4000164	          0x83ca08	                               or edx, 8	        71	alloc.c	FUNCTION_4
0x4000167	            0x8810	                      mov byte [rax], dl	        71	alloc.c	FUNCTION_4
0x4000169	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	alloc.c	FUNCTION_4
0x400016d	              0xc9	                                   leave	        73	alloc.c	FUNCTION_4
0x400016e	              0xc3	                                     ret	        73	alloc.c	FUNCTION_4
report	SWITCH,0:WHILE,0:CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0	18
0x40001fa	              0x55	                                push rbp	       101	alloc.c	FUNCTION_8
0x40001fb	          0x4889e5	                            mov rbp, rsp	       101	alloc.c	FUNCTION_8
0x40001fe	        0x4883ec20	                           sub rsp, 0x20	       101	alloc.c	FUNCTION_8
0x4000202	        0x48897df8	                mov qword [rbp - 8], rdi	       101	alloc.c	FUNCTION_8
0x4000206	          0x8975f4	              mov dword [rbp - 0xc], esi	       101	alloc.c	FUNCTION_8
0x4000209	        0x488955e8	             mov qword [rbp - 0x18], rdx	       101	alloc.c	FUNCTION_8
0x400020d	    0x488b05000000	            mov rax, qword [0x04000214] 	       102	alloc.c	FUNCTION_8	CALL_1
0x4000214	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       102	alloc.c	FUNCTION_8	CALL_1
0x4000218	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       102	alloc.c	FUNCTION_8	CALL_1
0x400021b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       102	alloc.c	FUNCTION_8	CALL_1
0x400021f	          0x4989f0	                             mov r8, rsi	       102	alloc.c	FUNCTION_8	CALL_1
0x4000222	      0xbe00000000	                              mov esi, 0	       102	alloc.c	FUNCTION_8	CALL_1
0x4000227	          0x4889c7	                            mov rdi, rax	       102	alloc.c	FUNCTION_8	CALL_1
0x400022a	      0xb800000000	                              mov eax, 0	       102	alloc.c	FUNCTION_8	CALL_1
0x400022f	      0xe800000000	                          call 0x4000234	       102	alloc.c	FUNCTION_8	CALL_1
0x4000234	              0x90	                                     nop	       104	alloc.c	FUNCTION_8
0x4000235	              0xc9	                                   leave	       104	alloc.c	FUNCTION_8
0x4000236	              0xc3	                                     ret	       104	alloc.c	FUNCTION_8
alloc_node	SWITCH,0:WHILE,0:CALL,2:ELSE,0:FOR,0:functions,0:DO,0:IF,1	45
0x4000040	              0x55	                                push rbp	        36	alloc.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        36	alloc.c	FUNCTION_1
0x4000044	        0x4883ec20	                           sub rsp, 0x20	        36	alloc.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	alloc.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	alloc.c	FUNCTION_1
0x4000050	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	alloc.c	FUNCTION_1	IF_1
0x4000054	          0x8b4004	                mov eax, dword [rax + 4]	        39	alloc.c	FUNCTION_1	IF_1
0x4000057	            0x85c0	                           test eax, eax	        39	alloc.c	FUNCTION_1	IF_1
0x4000059	            0x7526	                           jne 0x4000081	        39	alloc.c	FUNCTION_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	alloc.c	FUNCTION_1	IF_1
0x400005f	    0xc74004000400	              mov dword [rax + 4], 0x400	        40	alloc.c	FUNCTION_1	IF_1
0x4000066	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400006a	        0x48c1e00a	                            shl rax, 0xa	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400006e	          0x4889c7	                            mov rdi, rax	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000071	      0xe800000000	                          call 0x4000076	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000076	          0x4889c2	                            mov rdx, rax	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000079	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400007d	        0x48895008	                mov qword [rax + 8], rdx	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000081	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	alloc.c	FUNCTION_1
0x4000085	          0x8b4004	                mov eax, dword [rax + 4]	        43	alloc.c	FUNCTION_1
0x4000088	          0x8d50ff	                      lea edx, [rax - 1]	        43	alloc.c	FUNCTION_1
0x400008b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	alloc.c	FUNCTION_1
0x400008f	          0x895004	                mov dword [rax + 4], edx	        43	alloc.c	FUNCTION_1
0x4000092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        44	alloc.c	FUNCTION_1
0x4000096	            0x8b00	                    mov eax, dword [rax]	        44	alloc.c	FUNCTION_1
0x4000098	          0x8d5001	                      lea edx, [rax + 1]	        44	alloc.c	FUNCTION_1
0x400009b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        44	alloc.c	FUNCTION_1
0x400009f	            0x8910	                    mov dword [rax], edx	        44	alloc.c	FUNCTION_1
0x40000a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	alloc.c	FUNCTION_1
0x40000a5	        0x488b4008	                mov rax, qword [rax + 8]	        45	alloc.c	FUNCTION_1
0x40000a9	        0x488945f8	                mov qword [rbp - 8], rax	        45	alloc.c	FUNCTION_1
0x40000ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	alloc.c	FUNCTION_1
0x40000b1	        0x488b5008	                mov rdx, qword [rax + 8]	        46	alloc.c	FUNCTION_1
0x40000b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        46	alloc.c	FUNCTION_1
0x40000b9	          0x4801c2	                            add rdx, rax	        46	alloc.c	FUNCTION_1
0x40000bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	alloc.c	FUNCTION_1
0x40000c0	        0x48895008	                mov qword [rax + 8], rdx	        46	alloc.c	FUNCTION_1
0x40000c4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        47	alloc.c	FUNCTION_1	CALL_2
0x40000c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	alloc.c	FUNCTION_1	CALL_2
0x40000cc	      0xbe00000000	                              mov esi, 0	        47	alloc.c	FUNCTION_1	CALL_2
0x40000d1	          0x4889c7	                            mov rdi, rax	        47	alloc.c	FUNCTION_1	CALL_2
0x40000d4	      0xe800000000	                          call 0x40000d9	        47	alloc.c	FUNCTION_1	CALL_2
0x40000d9	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	alloc.c	FUNCTION_1
0x40000dd	              0xc9	                                   leave	        49	alloc.c	FUNCTION_1
0x40000de	              0xc3	                                     ret	        49	alloc.c	FUNCTION_1
alloc_commit_index	SWITCH,0:WHILE,0:CALL,0:ELSE,0:FOR,0:functions,0:DO,0:IF,0	7
0x400019c	              0x55	                                push rbp	        86	alloc.c	FUNCTION_6
0x400019d	          0x4889e5	                            mov rbp, rsp	        86	alloc.c	FUNCTION_6
0x40001a0	    0x8b0500000000	            mov eax, dword [0x040001a6] 	        88	alloc.c	FUNCTION_6
0x40001a6	          0x8d5001	                      lea edx, [rax + 1]	        88	alloc.c	FUNCTION_6
0x40001a9	    0x891500000000	            mov dword [0x040001af], edx 	        88	alloc.c	FUNCTION_6
0x40001af	              0x5d	                                 pop rbp	        89	alloc.c	FUNCTION_6
0x40001b0	              0xc3	                                     ret	        89	alloc.c	FUNCTION_6
alloc_report	SWITCH,0:WHILE,0:CALL,0:ELSE,0:FOR,0:functions,0:DO,0:IF,0	70
0x4000237	              0x55	                                push rbp	       110	alloc.c	FUNCTION_9
0x4000238	          0x4889e5	                            mov rbp, rsp	       110	alloc.c	FUNCTION_9
0x400023b	    0x8b0500000000	            mov eax, dword [0x04000241] 	       111	alloc.c	FUNCTION_9
0x4000241	          0x4863d0	                         movsxd rdx, eax	       111	alloc.c	FUNCTION_9
0x4000244	          0x4889d0	                            mov rax, rdx	       111	alloc.c	FUNCTION_9
0x4000247	          0x4801c0	                            add rax, rax	       111	alloc.c	FUNCTION_9
0x400024a	          0x4801d0	                            add rax, rdx	       111	alloc.c	FUNCTION_9
0x400024d	        0x48c1e003	                              shl rax, 3	       111	alloc.c	FUNCTION_9
0x4000251	        0x48c1e80a	                            shr rax, 0xa	       111	alloc.c	FUNCTION_9
0x4000255	    0x8b1500000000	            mov edx, dword [0x0400025b] 	       111	alloc.c	FUNCTION_9
0x400025b	            0x89d1	                            mov ecx, edx	       111	alloc.c	FUNCTION_9
0x400025d	          0x4889c2	                            mov rdx, rax	       111	alloc.c	FUNCTION_9
0x4000260	            0x89ce	                            mov esi, ecx	       111	alloc.c	FUNCTION_9
0x4000262	      0xbf00000000	                              mov edi, 0	       111	alloc.c	FUNCTION_9
0x4000267	      0xe88effffff	                         call sym.report	       111	alloc.c	FUNCTION_9
0x400026c	    0x8b0500000000	            mov eax, dword [0x04000272] 	       112	alloc.c	FUNCTION_9
0x4000272	          0x4863d0	                         movsxd rdx, eax	       112	alloc.c	FUNCTION_9
0x4000275	          0x4889d0	                            mov rax, rdx	       112	alloc.c	FUNCTION_9
0x4000278	        0x48c1e002	                              shl rax, 2	       112	alloc.c	FUNCTION_9
0x400027c	          0x4801d0	                            add rax, rdx	       112	alloc.c	FUNCTION_9
0x400027f	        0x48c1e003	                              shl rax, 3	       112	alloc.c	FUNCTION_9
0x4000283	        0x48c1e80a	                            shr rax, 0xa	       112	alloc.c	FUNCTION_9
0x4000287	    0x8b1500000000	            mov edx, dword [0x0400028d] 	       112	alloc.c	FUNCTION_9
0x400028d	            0x89d1	                            mov ecx, edx	       112	alloc.c	FUNCTION_9
0x400028f	          0x4889c2	                            mov rdx, rax	       112	alloc.c	FUNCTION_9
0x4000292	            0x89ce	                            mov esi, ecx	       112	alloc.c	FUNCTION_9
0x4000294	      0xbf00000000	                              mov edi, 0	       112	alloc.c	FUNCTION_9
0x4000299	      0xe85cffffff	                         call sym.report	       112	alloc.c	FUNCTION_9
0x400029e	    0x8b0500000000	            mov eax, dword [0x040002a4] 	       113	alloc.c	FUNCTION_9
0x40002a4	          0x4863d0	                         movsxd rdx, eax	       113	alloc.c	FUNCTION_9
0x40002a7	          0x4889d0	                            mov rax, rdx	       113	alloc.c	FUNCTION_9
0x40002aa	        0x48c1e003	                              shl rax, 3	       113	alloc.c	FUNCTION_9
0x40002ae	          0x4801d0	                            add rax, rdx	       113	alloc.c	FUNCTION_9
0x40002b1	        0x48c1e003	                              shl rax, 3	       113	alloc.c	FUNCTION_9
0x40002b5	        0x48c1e80a	                            shr rax, 0xa	       113	alloc.c	FUNCTION_9
0x40002b9	    0x8b1500000000	            mov edx, dword [0x040002bf] 	       113	alloc.c	FUNCTION_9
0x40002bf	            0x89d1	                            mov ecx, edx	       113	alloc.c	FUNCTION_9
0x40002c1	          0x4889c2	                            mov rdx, rax	       113	alloc.c	FUNCTION_9
0x40002c4	            0x89ce	                            mov esi, ecx	       113	alloc.c	FUNCTION_9
0x40002c6	      0xbf00000000	                              mov edi, 0	       113	alloc.c	FUNCTION_9
0x40002cb	      0xe82affffff	                         call sym.report	       113	alloc.c	FUNCTION_9
0x40002d0	    0x8b0500000000	            mov eax, dword [0x040002d6] 	       114	alloc.c	FUNCTION_9
0x40002d6	          0x4863d0	                         movsxd rdx, eax	       114	alloc.c	FUNCTION_9
0x40002d9	          0x4889d0	                            mov rax, rdx	       114	alloc.c	FUNCTION_9
0x40002dc	          0x4801c0	                            add rax, rax	       114	alloc.c	FUNCTION_9
0x40002df	          0x4801d0	                            add rax, rdx	       114	alloc.c	FUNCTION_9
0x40002e2	        0x48c1e004	                              shl rax, 4	       114	alloc.c	FUNCTION_9
0x40002e6	        0x48c1e80a	                            shr rax, 0xa	       114	alloc.c	FUNCTION_9
0x40002ea	    0x8b1500000000	            mov edx, dword [0x040002f0] 	       114	alloc.c	FUNCTION_9
0x40002f0	            0x89d1	                            mov ecx, edx	       114	alloc.c	FUNCTION_9
0x40002f2	          0x4889c2	                            mov rdx, rax	       114	alloc.c	FUNCTION_9
0x40002f5	            0x89ce	                            mov esi, ecx	       114	alloc.c	FUNCTION_9
0x40002f7	      0xbf00000000	                              mov edi, 0	       114	alloc.c	FUNCTION_9
0x40002fc	      0xe8f9feffff	                         call sym.report	       114	alloc.c	FUNCTION_9
0x4000301	    0x8b0500000000	            mov eax, dword [0x04000307] 	       115	alloc.c	FUNCTION_9
0x4000307	          0x4863d0	                         movsxd rdx, eax	       115	alloc.c	FUNCTION_9
0x400030a	          0x4889d0	                            mov rax, rdx	       115	alloc.c	FUNCTION_9
0x400030d	        0x48c1e003	                              shl rax, 3	       115	alloc.c	FUNCTION_9
0x4000311	          0x4801d0	                            add rax, rdx	       115	alloc.c	FUNCTION_9
0x4000314	        0x48c1e003	                              shl rax, 3	       115	alloc.c	FUNCTION_9
0x4000318	        0x48c1e80a	                            shr rax, 0xa	       115	alloc.c	FUNCTION_9
0x400031c	    0x8b1500000000	            mov edx, dword [0x04000322] 	       115	alloc.c	FUNCTION_9
0x4000322	            0x89d1	                            mov ecx, edx	       115	alloc.c	FUNCTION_9
0x4000324	          0x4889c2	                            mov rdx, rax	       115	alloc.c	FUNCTION_9
0x4000327	            0x89ce	                            mov esi, ecx	       115	alloc.c	FUNCTION_9
0x4000329	      0xbf00000000	                              mov edi, 0	       115	alloc.c	FUNCTION_9
0x400032e	      0xe8c7feffff	                         call sym.report	       115	alloc.c	FUNCTION_9
0x4000333	              0x90	                                     nop	       116	alloc.c	FUNCTION_9
0x4000334	              0x5d	                                 pop rbp	       116	alloc.c	FUNCTION_9
0x4000335	              0xc3	                                     ret	       116	alloc.c	FUNCTION_9
alloc_object_node	SWITCH,0:WHILE,0:CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0	14
0x400016f	              0x55	                                push rbp	        77	alloc.c	FUNCTION_5
0x4000170	          0x4889e5	                            mov rbp, rsp	        77	alloc.c	FUNCTION_5
0x4000173	        0x4883ec10	                           sub rsp, 0x10	        77	alloc.c	FUNCTION_5
0x4000177	      0xbe48000000	                           mov esi, 0x48	        78	alloc.c	FUNCTION_5	CALL_1
0x400017c	      0xbf00000000	                              mov edi, 0	        78	alloc.c	FUNCTION_5	CALL_1
0x4000181	      0xe8bafeffff	                     call sym.alloc_node	        78	alloc.c	FUNCTION_5	CALL_1
0x4000186	        0x488945f8	                mov qword [rbp - 8], rax	        78	alloc.c	FUNCTION_5	CALL_1
0x400018a	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	alloc.c	FUNCTION_5
0x400018e	           0xfb610	                   movzx edx, byte [rax]	        79	alloc.c	FUNCTION_5
0x4000191	          0x83e2f1	                     and edx, 0xfffffff1	        79	alloc.c	FUNCTION_5
0x4000194	            0x8810	                      mov byte [rax], dl	        79	alloc.c	FUNCTION_5
0x4000196	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	alloc.c	FUNCTION_5
0x400019a	              0xc9	                                   leave	        81	alloc.c	FUNCTION_5
0x400019b	              0xc3	                                     ret	        81	alloc.c	FUNCTION_5
alloc_blob_node	SWITCH,0:WHILE,0:CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0	15
0x40000df	              0x55	                                push rbp	        53	alloc.c	FUNCTION_2
0x40000e0	          0x4889e5	                            mov rbp, rsp	        53	alloc.c	FUNCTION_2
0x40000e3	        0x4883ec10	                           sub rsp, 0x10	        53	alloc.c	FUNCTION_2
0x40000e7	      0xbe18000000	                           mov esi, 0x18	        54	alloc.c	FUNCTION_2	CALL_1
0x40000ec	      0xbf00000000	                              mov edi, 0	        54	alloc.c	FUNCTION_2	CALL_1
0x40000f1	      0xe84affffff	                     call sym.alloc_node	        54	alloc.c	FUNCTION_2	CALL_1
0x40000f6	        0x488945f8	                mov qword [rbp - 8], rax	        54	alloc.c	FUNCTION_2	CALL_1
0x40000fa	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	alloc.c	FUNCTION_2
0x40000fe	           0xfb610	                   movzx edx, byte [rax]	        55	alloc.c	FUNCTION_2
0x4000101	          0x83e2f1	                     and edx, 0xfffffff1	        55	alloc.c	FUNCTION_2
0x4000104	          0x83ca06	                               or edx, 6	        55	alloc.c	FUNCTION_2
0x4000107	            0x8810	                      mov byte [rax], dl	        55	alloc.c	FUNCTION_2
0x4000109	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	alloc.c	FUNCTION_2
0x400010d	              0xc9	                                   leave	        57	alloc.c	FUNCTION_2
0x400010e	              0xc3	                                     ret	        57	alloc.c	FUNCTION_2
alloc_commit_node	SWITCH,0:WHILE,0:CALL,2:ELSE,0:FOR,0:functions,0:DO,0:IF,0	21
0x40001b1	              0x55	                                push rbp	        92	alloc.c	FUNCTION_7
0x40001b2	          0x4889e5	                            mov rbp, rsp	        92	alloc.c	FUNCTION_7
0x40001b5	        0x4883ec10	                           sub rsp, 0x10	        92	alloc.c	FUNCTION_7
0x40001b9	      0xbe48000000	                           mov esi, 0x48	        93	alloc.c	FUNCTION_7	CALL_1
0x40001be	      0xbf00000000	                              mov edi, 0	        93	alloc.c	FUNCTION_7	CALL_1
0x40001c3	      0xe878feffff	                     call sym.alloc_node	        93	alloc.c	FUNCTION_7	CALL_1
0x40001c8	        0x488945f8	                mov qword [rbp - 8], rax	        93	alloc.c	FUNCTION_7	CALL_1
0x40001cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	alloc.c	FUNCTION_7
0x40001d0	           0xfb610	                   movzx edx, byte [rax]	        94	alloc.c	FUNCTION_7
0x40001d3	          0x83e2f1	                     and edx, 0xfffffff1	        94	alloc.c	FUNCTION_7
0x40001d6	          0x83ca02	                               or edx, 2	        94	alloc.c	FUNCTION_7
0x40001d9	            0x8810	                      mov byte [rax], dl	        94	alloc.c	FUNCTION_7
0x40001db	      0xe800000000	                          call 0x40001e0	        95	alloc.c	FUNCTION_7	CALL_2
0x40001e0	            0x89c2	                            mov edx, eax	        95	alloc.c	FUNCTION_7	CALL_2
0x40001e2	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	alloc.c	FUNCTION_7	CALL_2
0x40001e6	          0x895020	             mov dword [rax + 0x20], edx	        95	alloc.c	FUNCTION_7	CALL_2
0x40001e9	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	alloc.c	FUNCTION_7
0x40001ed	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	        96	alloc.c	FUNCTION_7
0x40001f4	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	alloc.c	FUNCTION_7
0x40001f8	              0xc9	                                   leave	        98	alloc.c	FUNCTION_7
0x40001f9	              0xc3	                                     ret	        98	alloc.c	FUNCTION_7
alloc_tree_node	SWITCH,0:WHILE,0:CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0	15
0x400010f	              0x55	                                push rbp	        61	alloc.c	FUNCTION_3
0x4000110	          0x4889e5	                            mov rbp, rsp	        61	alloc.c	FUNCTION_3
0x4000113	        0x4883ec10	                           sub rsp, 0x10	        61	alloc.c	FUNCTION_3
0x4000117	      0xbe28000000	                           mov esi, 0x28	        62	alloc.c	FUNCTION_3	CALL_1
0x400011c	      0xbf00000000	                              mov edi, 0	        62	alloc.c	FUNCTION_3	CALL_1
0x4000121	      0xe81affffff	                     call sym.alloc_node	        62	alloc.c	FUNCTION_3	CALL_1
0x4000126	        0x488945f8	                mov qword [rbp - 8], rax	        62	alloc.c	FUNCTION_3	CALL_1
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	alloc.c	FUNCTION_3
0x400012e	           0xfb610	                   movzx edx, byte [rax]	        63	alloc.c	FUNCTION_3
0x4000131	          0x83e2f1	                     and edx, 0xfffffff1	        63	alloc.c	FUNCTION_3
0x4000134	          0x83ca04	                               or edx, 4	        63	alloc.c	FUNCTION_3
0x4000137	            0x8810	                      mov byte [rax], dl	        63	alloc.c	FUNCTION_3
0x4000139	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	alloc.c	FUNCTION_3
0x400013d	              0xc9	                                   leave	        65	alloc.c	FUNCTION_3
0x400013e	              0xc3	                                     ret	        65	alloc.c	FUNCTION_3
