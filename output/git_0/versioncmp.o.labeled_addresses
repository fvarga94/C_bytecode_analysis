versioncmp	functions,0:WHILE,2:CALL,10:FOR,0:SWITCH,1:IF,7:ELSE,1:DO,0	195
0x4000254	              0x55	                                push rbp	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000255	          0x4889e5	                            mov rbp, rsp	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000258	        0x4883ec40	                           sub rsp, 0x40	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x400025c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000260	        0x488975c0	             mov qword [rbp - 0x40], rsi	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000264	    0x64488b042528	                mov rax, qword fs:[0x28]	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x400026d	        0x488945f8	                mov qword [rbp - 8], rax	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000271	            0x31c0	                            xor eax, eax	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x4000273	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	versioncmp.c	ELSE_3	FUNCTION_3
0x4000277	        0x488945e0	             mov qword [rbp - 0x20], rax	       118	versioncmp.c	ELSE_3	FUNCTION_3
0x400027b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       119	versioncmp.c	ELSE_3	FUNCTION_3
0x400027f	        0x488945e8	             mov qword [rbp - 0x18], rax	       119	versioncmp.c	ELSE_3	FUNCTION_3
0x4000283	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x4000287	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x400028b	            0x750a	                           jne 0x4000297	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x400028d	      0xb800000000	                              mov eax, 0	       145	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x4000292	      0xe951020000	                           jmp 0x40004e8	       145	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x4000297	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x400029b	        0x488d5001	                      lea rdx, [rax + 1]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x400029f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x40002a3	           0xfb600	                   movzx eax, byte [rax]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x40002a6	          0x8845d6	               mov byte [rbp - 0x2a], al	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x40002a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x40002ad	        0x488d5001	                      lea rdx, [rax + 1]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x40002b1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x40002b5	           0xfb600	                   movzx eax, byte [rax]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x40002b8	          0x8845d7	               mov byte [rbp - 0x29], al	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x40002bb	        0x807dd630	            cmp byte [rbp - 0x2a], 0x30 	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002bf	           0xf94c0	                                 sete al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002c2	           0xfb6d0	                           movzx edx, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002c5	         0xfb645d6	            movzx eax, byte [rbp - 0x2a]	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002c9	            0x4898	                                    cdqe	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002cb	     0xfb680000000	                   movzx eax, byte [rax]	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002d2	           0xfb6c0	                           movzx eax, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002d5	          0x83e002	                              and eax, 2	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002d8	            0x85c0	                           test eax, eax	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002da	           0xf95c0	                                setne al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002dd	           0xfb6c0	                           movzx eax, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002e0	             0x1d0	                            add eax, edx	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002e2	          0x8945dc	             mov dword [rbp - 0x24], eax	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x40002e5	            0xeb6e	                           jmp 0x4000355	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x40002e7	        0x807dd600	                cmp byte [rbp - 0x2a], 0	       153	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x40002eb	            0x7508	                           jne 0x40002f5	       153	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x40002ed	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       154	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x40002f0	      0xe9f3010000	                           jmp 0x40004e8	       154	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x40002f5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x40002f8	            0x4898	                                    cdqe	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x40002fa	     0xfb680000000	                   movzx eax, byte [rax]	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000301	           0xfb6c0	                           movzx eax, al	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000304	          0x8945dc	             mov dword [rbp - 0x24], eax	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000307	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400030b	        0x488d5001	                      lea rdx, [rax + 1]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400030f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000313	           0xfb600	                   movzx eax, byte [rax]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000316	          0x8845d6	               mov byte [rbp - 0x2a], al	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000319	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400031d	        0x488d5001	                      lea rdx, [rax + 1]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000321	        0x488955e8	             mov qword [rbp - 0x18], rdx	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000325	           0xfb600	                   movzx eax, byte [rax]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000328	          0x8845d7	               mov byte [rbp - 0x29], al	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400032b	        0x807dd630	            cmp byte [rbp - 0x2a], 0x30 	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x400032f	           0xf94c0	                                 sete al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000332	           0xfb6d0	                           movzx edx, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000335	         0xfb645d6	            movzx eax, byte [rbp - 0x2a]	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000339	            0x4898	                                    cdqe	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x400033b	     0xfb680000000	                   movzx eax, byte [rax]	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000342	           0xfb6c0	                           movzx eax, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000345	          0x83e002	                              and eax, 2	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000348	            0x85c0	                           test eax, eax	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x400034a	           0xf95c0	                                setne al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x400034d	           0xfb6c0	                           movzx eax, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000350	             0x1d0	                            add eax, edx	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000352	           0x145dc	             add dword [rbp - 0x24], eax	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x4000355	         0xfb655d6	            movzx edx, byte [rbp - 0x2a]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000359	         0xfb645d7	            movzx eax, byte [rbp - 0x29]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400035d	            0x29c2	                            sub edx, eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400035f	            0x89d0	                            mov eax, edx	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000361	          0x8945d8	             mov dword [rbp - 0x28], eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000364	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000367	            0x85c0	                           test eax, eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x4000369	     0xf8478ffffff	                            je 0x40002e7	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x400036f	    0x8b0500000000	            mov eax, dword [0x04000375] 	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x4000375	            0x85c0	                           test eax, eax	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x4000377	            0x7558	                           jne 0x40003d1	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x4000379	    0xc70500000000	               mov dword [0x04000383], 1	       164	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x4000383	      0xbf00000000	                              mov edi, 0	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x4000388	      0xe800000000	                          call 0x400038d	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x400038d	    0x488905000000	            mov qword [0x04000394], rax 	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x4000394	      0xbf00000000	                              mov edi, 0	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x4000399	      0xe800000000	                          call 0x400039e	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x400039e	        0x488945f0	             mov qword [rbp - 0x10], rax	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x40003a2	    0x488b05000000	            mov rax, qword [0x040003a9] 	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x40003a9	          0x4885c0	                           test rax, rax	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x40003ac	            0x7418	                            je 0x40003c6	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x40003ae	      0x48837df000	               cmp qword [rbp - 0x10], 0	       168	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	IF_5
0x40003b3	            0x741c	                            je 0x40003d1	       168	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	IF_5
0x40003b5	      0xbf00000000	                              mov edi, 0	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x40003ba	      0xb800000000	                              mov eax, 0	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x40003bf	      0xe800000000	                          call 0x40003c4	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x40003c4	            0xeb0b	                           jmp 0x40003d1	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x40003c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	ELSE_1
0x40003ca	    0x488905000000	            mov qword [0x040003d1], rax 	       171	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	ELSE_1
0x40003d1	    0x488b05000000	            mov rax, qword [0x040003d8] 	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003d8	          0x4885c0	                           test rax, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003db	            0x7438	                            je 0x4000415	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003dd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003e5	          0x4829c2	                            sub rdx, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003e8	          0x4889d0	                            mov rax, rdx	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003eb	          0x83e801	                              sub eax, 1	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003ee	            0x89c7	                            mov edi, eax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003f0	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003f4	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003fc	          0x4889d1	                            mov rcx, rdx	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x40003ff	            0x89fa	                            mov edx, edi	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x4000401	          0x4889c7	                            mov rdi, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x4000404	      0xe8cdfcffff	               call sym.swap_prereleases	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x4000409	            0x85c0	                           test eax, eax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x400040b	            0x7408	                            je 0x4000415	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x400040d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       175	versioncmp.c	ELSE_3	FUNCTION_3	IF_6
0x4000410	      0xe9d3000000	                           jmp 0x40004e8	       175	versioncmp.c	ELSE_3	FUNCTION_3	IF_6
0x4000415	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000418	            0x89d0	                            mov eax, edx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400041a	             0x1c0	                            add eax, eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400041c	          0x8d0c10	                    lea ecx, [rax + rdx]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400041f	        0x807dd730	            cmp byte [rbp - 0x29], 0x30 	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000423	           0xf94c0	                                 sete al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000426	           0xfb6d0	                           movzx edx, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000429	         0xfb645d7	            movzx eax, byte [rbp - 0x29]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400042d	            0x4898	                                    cdqe	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400042f	     0xfb680000000	                   movzx eax, byte [rax]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000436	           0xfb6c0	                           movzx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000439	          0x83e002	                              and eax, 2	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400043c	            0x85c0	                           test eax, eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400043e	           0xf95c0	                                setne al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000441	           0xfb6c0	                           movzx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000444	             0x1d0	                            add eax, edx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000446	             0x1c8	                            add eax, ecx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000448	            0x4898	                                    cdqe	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x400044a	     0xfb680000000	                   movzx eax, byte [rax]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000451	           0xfbec0	                           movsx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000454	          0x8945dc	             mov dword [rbp - 0x24], eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x4000457	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x400045a	          0x83f802	                              cmp eax, 2	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x400045d	            0x7407	                            je 0x4000466	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x400045f	          0x83f803	                              cmp eax, 3	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x4000462	            0x7433	                            je 0x4000497	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x4000464	            0xeb7f	                           jmp 0x40004e5	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x4000466	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       181	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x4000469	            0xeb7d	                           jmp 0x40004e8	       181	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x400046b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400046f	        0x488d5001	                      lea rdx, [rax + 1]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x4000473	        0x488955e8	             mov qword [rbp - 0x18], rdx	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x4000477	           0xfb600	                   movzx eax, byte [rax]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400047a	           0xfb6c0	                           movzx eax, al	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400047d	            0x4898	                                    cdqe	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400047f	     0xfb680000000	                   movzx eax, byte [rax]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x4000486	           0xfb6c0	                           movzx eax, al	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x4000489	          0x83e002	                              and eax, 2	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400048c	            0x85c0	                           test eax, eax	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x400048e	            0x7507	                           jne 0x4000497	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x4000490	      0xb801000000	                              mov eax, 1	       186	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7
0x4000495	            0xeb51	                           jmp 0x40004e8	       186	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7
0x4000497	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x400049b	        0x488d5001	                      lea rdx, [rax + 1]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x400049f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004a3	           0xfb600	                   movzx eax, byte [rax]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004a6	           0xfb6c0	                           movzx eax, al	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004a9	            0x4898	                                    cdqe	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004ab	     0xfb680000000	                   movzx eax, byte [rax]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004b2	           0xfb6c0	                           movzx eax, al	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004b5	          0x83e002	                              and eax, 2	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004b8	            0x85c0	                           test eax, eax	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004ba	            0x75af	                           jne 0x400046b	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004c0	           0xfb600	                   movzx eax, byte [rax]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004c3	           0xfb6c0	                           movzx eax, al	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004c6	            0x4898	                                    cdqe	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004c8	     0xfb680000000	                   movzx eax, byte [rax]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004cf	           0xfb6c0	                           movzx eax, al	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004d2	          0x83e002	                              and eax, 2	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004d5	            0x85c0	                           test eax, eax	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004d7	            0x7505	                           jne 0x40004de	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004d9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004dc	            0xeb0a	                           jmp 0x40004e8	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004de	      0xb8ffffffff	                     mov eax, 0xffffffff	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004e3	            0xeb03	                           jmp 0x40004e8	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x40004e5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       191	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x40004e8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x40004ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x40004f5	            0x7405	                            je 0x40004fc	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x40004f7	      0xe800000000	                          call 0x40004fc	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x40004fc	              0xc9	                                   leave	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x40004fd	              0xc3	                                     ret	       193	versioncmp.c	ELSE_3	FUNCTION_3
find_better_matching_suffix	functions,0:WHILE,0:CALL,1:FOR,1:SWITCH,0:IF,1:ELSE,0:DO,0	50
0x4000040	              0x55	                                push rbp	        37	versioncmp.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        37	versioncmp.c	FUNCTION_1
0x4000044	        0x4883ec40	                           sub rsp, 0x40	        37	versioncmp.c	FUNCTION_1
0x4000048	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	versioncmp.c	FUNCTION_1
0x400004c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        37	versioncmp.c	FUNCTION_1
0x4000050	          0x8955dc	             mov dword [rbp - 0x24], edx	        37	versioncmp.c	FUNCTION_1
0x4000053	          0x894dd8	             mov dword [rbp - 0x28], ecx	        37	versioncmp.c	FUNCTION_1
0x4000056	        0x448945d4	             mov dword [rbp - 0x2c], r8d	        37	versioncmp.c	FUNCTION_1
0x400005a	        0x4c894dc8	              mov qword [rbp - 0x38], r9	        37	versioncmp.c	FUNCTION_1
0x400005e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x4000062	          0x8b4008	                mov eax, dword [rax + 8]	        42	versioncmp.c	FUNCTION_1
0x4000065	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	        42	versioncmp.c	FUNCTION_1
0x4000068	            0x7d09	                           jge 0x4000073	        42	versioncmp.c	FUNCTION_1
0x400006a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x400006e	          0x8b4004	                mov eax, dword [rax + 4]	        42	versioncmp.c	FUNCTION_1
0x4000071	            0xeb0a	                           jmp 0x400007d	        42	versioncmp.c	FUNCTION_1
0x4000073	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x4000077	          0x8b4004	                mov eax, dword [rax + 4]	        42	versioncmp.c	FUNCTION_1
0x400007a	          0x83e801	                              sub eax, 1	        42	versioncmp.c	FUNCTION_1
0x400007d	          0x8945fc	                mov dword [rbp - 4], eax	        42	versioncmp.c	FUNCTION_1
0x4000080	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x4000083	          0x8945f8	                mov dword [rbp - 8], eax	        44	versioncmp.c	FUNCTION_1	FOR_1
0x4000086	            0xeb43	                           jmp 0x40000cb	        44	versioncmp.c	FUNCTION_1	FOR_1
0x4000088	          0x8b45f8	                mov eax, dword [rbp - 8]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400008b	          0x4863d0	                         movsxd rdx, eax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400008e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000092	          0x4801c2	                            add rdx, rax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000095	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000099	          0x4889c6	                            mov rsi, rax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400009c	          0x4889d7	                            mov rdi, rdx	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400009f	      0xe800000000	                          call 0x40000a4	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000a4	            0x85c0	                           test eax, eax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000a6	            0x741f	                            je 0x40000c7	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40000a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000ac	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000af	            0x8910	                    mov dword [rax], edx	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000b5	          0x8b55f8	                mov edx, dword [rbp - 8]	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000b8	          0x895004	                mov dword [rax + 4], edx	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000bf	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000c2	          0x895008	                mov dword [rax + 8], edx	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000c5	            0xeb0c	                           jmp 0x40000d3	        49	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x40000c7	        0x8345f801	                  add dword [rbp - 8], 1	        44	versioncmp.c	FUNCTION_1	FOR_1
0x40000cb	          0x8b45f8	                mov eax, dword [rbp - 8]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x40000ce	          0x3b45fc	                cmp eax, dword [rbp - 4]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x40000d1	            0x7eb5	                           jle 0x4000088	        44	versioncmp.c	FUNCTION_1	FOR_1
0x40000d3	              0x90	                                     nop	        51	versioncmp.c	FUNCTION_1
0x40000d4	              0xc9	                                   leave	        51	versioncmp.c	FUNCTION_1
0x40000d5	              0xc3	                                     ret	        51	versioncmp.c	FUNCTION_1
swap_prereleases	functions,0:WHILE,0:CALL,3:FOR,1:SWITCH,0:IF,5:ELSE,3:DO,0	107
0x40000d6	              0x55	                                push rbp	        75	versioncmp.c	FUNCTION_2
0x40000d7	          0x4889e5	                            mov rbp, rsp	        75	versioncmp.c	FUNCTION_2
0x40000da	        0x4883ec70	                           sub rsp, 0x70	        75	versioncmp.c	FUNCTION_2
0x40000de	        0x48897da8	             mov qword [rbp - 0x58], rdi	        75	versioncmp.c	FUNCTION_2
0x40000e2	        0x488975a0	             mov qword [rbp - 0x60], rsi	        75	versioncmp.c	FUNCTION_2
0x40000e6	          0x89559c	             mov dword [rbp - 0x64], edx	        75	versioncmp.c	FUNCTION_2
0x40000e9	        0x48894d90	             mov qword [rbp - 0x70], rcx	        75	versioncmp.c	FUNCTION_2
0x40000ed	    0x64488b042528	                mov rax, qword fs:[0x28]	        75	versioncmp.c	FUNCTION_2
0x40000f6	        0x488945f8	                mov qword [rbp - 8], rax	        75	versioncmp.c	FUNCTION_2
0x40000fa	            0x31c0	                            xor eax, eax	        75	versioncmp.c	FUNCTION_2
0x40000fc	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	        77	versioncmp.c	FUNCTION_2
0x4000103	          0x8b459c	             mov eax, dword [rbp - 0x64]	        77	versioncmp.c	FUNCTION_2
0x4000106	          0x8945d4	             mov dword [rbp - 0x2c], eax	        77	versioncmp.c	FUNCTION_2
0x4000109	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	        77	versioncmp.c	FUNCTION_2
0x4000110	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	        78	versioncmp.c	FUNCTION_2
0x4000117	          0x8b459c	             mov eax, dword [rbp - 0x64]	        78	versioncmp.c	FUNCTION_2
0x400011a	          0x8945e4	             mov dword [rbp - 0x1c], eax	        78	versioncmp.c	FUNCTION_2
0x400011d	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	        78	versioncmp.c	FUNCTION_2
0x4000124	    0xc745bc000000	               mov dword [rbp - 0x44], 0	        80	versioncmp.c	FUNCTION_2	FOR_1
0x400012b	      0xe991000000	                           jmp 0x40001c1	        80	versioncmp.c	FUNCTION_2	FOR_1
0x4000130	    0x488b05000000	            mov rax, qword [0x04000137] 	        81	versioncmp.c	FUNCTION_2	FOR_1
0x4000137	          0x488b00	                    mov rax, qword [rax]	        81	versioncmp.c	FUNCTION_2	FOR_1
0x400013a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	        81	versioncmp.c	FUNCTION_2	FOR_1
0x400013d	          0x4863d2	                         movsxd rdx, edx	        81	versioncmp.c	FUNCTION_2	FOR_1
0x4000140	        0x48c1e204	                              shl rdx, 4	        81	versioncmp.c	FUNCTION_2	FOR_1
0x4000144	          0x4801d0	                            add rax, rdx	        81	versioncmp.c	FUNCTION_2	FOR_1
0x4000147	          0x488b00	                    mov rax, qword [rax]	        81	versioncmp.c	FUNCTION_2	FOR_1
0x400014a	        0x488945c8	             mov qword [rbp - 0x38], rax	        81	versioncmp.c	FUNCTION_2	FOR_1
0x400014e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x4000152	          0x4889c7	                            mov rdi, rax	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x4000155	      0xe800000000	                          call 0x400015a	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x400015a	          0x8945c4	             mov dword [rbp - 0x3c], eax	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x400015d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x4000160	          0x3b459c	             cmp eax, dword [rbp - 0x64]	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x4000163	            0x7d0b	                           jge 0x4000170	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x4000165	          0x8b459c	             mov eax, dword [rbp - 0x64]	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x4000168	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x400016b	          0x8945c0	             mov dword [rbp - 0x40], eax	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x400016e	            0xeb07	                           jmp 0x4000177	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x4000170	    0xc745c0000000	               mov dword [rbp - 0x40], 0	        86	versioncmp.c	FUNCTION_2	FOR_1	ELSE_1
0x4000177	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x400017b	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x400017e	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x4000181	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x4000184	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x4000188	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x400018c	          0x4d89c1	                              mov r9, r8	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x400018f	          0x4189f8	                            mov r8d, edi	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x4000192	          0x4889c7	                            mov rdi, rax	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x4000195	      0xe8a6feffff	    call sym.find_better_matching_suffix	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x400019a	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x400019e	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001a1	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001a4	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001a7	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001ab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001af	          0x4d89c1	                              mov r9, r8	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001b2	          0x4189f8	                            mov r8d, edi	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001b5	          0x4889c7	                            mov rdi, rax	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001b8	      0xe883feffff	    call sym.find_better_matching_suffix	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x40001bd	        0x8345bc01	               add dword [rbp - 0x44], 1	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001c1	    0x488b05000000	            mov rax, qword [0x040001c8] 	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001c8	          0x8b5008	                mov edx, dword [rax + 8]	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001cb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001ce	            0x39c2	                            cmp edx, eax	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001d0	     0xf875affffff	                            ja 0x4000130	        80	versioncmp.c	FUNCTION_2	FOR_1
0x40001d6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001d9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001dc	            0x750f	                           jne 0x40001ed	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001de	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001e1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001e4	            0x7507	                           jne 0x40001ed	        92	versioncmp.c	FUNCTION_2	IF_2
0x40001e6	      0xb800000000	                              mov eax, 0	        93	versioncmp.c	FUNCTION_2	IF_2
0x40001eb	            0xeb51	                           jmp 0x400023e	        93	versioncmp.c	FUNCTION_2	IF_2
0x40001ed	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        94	versioncmp.c	FUNCTION_2	IF_3
0x40001f0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        94	versioncmp.c	FUNCTION_2	IF_3
0x40001f3	            0x39c2	                            cmp edx, eax	        94	versioncmp.c	FUNCTION_2	IF_3
0x40001f5	            0x7507	                           jne 0x40001fe	        94	versioncmp.c	FUNCTION_2	IF_3
0x40001f7	      0xb800000000	                              mov eax, 0	        98	versioncmp.c	FUNCTION_2	IF_3
0x40001fc	            0xeb40	                           jmp 0x400023e	        98	versioncmp.c	FUNCTION_2	IF_3
0x40001fe	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       100	versioncmp.c	FUNCTION_2	IF_4
0x4000201	            0x85c0	                           test eax, eax	       100	versioncmp.c	FUNCTION_2	IF_4
0x4000203	            0x7817	                            js 0x400021c	       100	versioncmp.c	FUNCTION_2	IF_4
0x4000205	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       100	versioncmp.c	FUNCTION_2	IF_4
0x4000208	            0x85c0	                           test eax, eax	       100	versioncmp.c	FUNCTION_2	IF_4
0x400020a	            0x7810	                            js 0x400021c	       100	versioncmp.c	FUNCTION_2	IF_4
0x400020c	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       101	versioncmp.c	FUNCTION_2	IF_4
0x400020f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       101	versioncmp.c	FUNCTION_2	IF_4
0x4000212	            0x29c2	                            sub edx, eax	       101	versioncmp.c	FUNCTION_2	IF_4
0x4000214	        0x488b4590	             mov rax, qword [rbp - 0x70]	       101	versioncmp.c	FUNCTION_2	IF_4
0x4000218	            0x8910	                    mov dword [rax], edx	       101	versioncmp.c	FUNCTION_2	IF_4
0x400021a	            0xeb1d	                           jmp 0x4000239	       101	versioncmp.c	FUNCTION_2	IF_4
0x400021c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x400021f	            0x85c0	                           test eax, eax	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x4000221	            0x780c	                            js 0x400022f	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x4000223	        0x488b4590	             mov rax, qword [rbp - 0x70]	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x4000227	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x400022d	            0xeb0a	                           jmp 0x4000239	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x400022f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       105	versioncmp.c	FUNCTION_2	ELSE_3
0x4000233	    0xc70001000000	                      mov dword [rax], 1	       105	versioncmp.c	FUNCTION_2	ELSE_3
0x4000239	      0xb801000000	                              mov eax, 1	       106	versioncmp.c	FUNCTION_2	ELSE_3
0x400023e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x4000242	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x400024b	            0x7405	                            je 0x4000252	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x400024d	      0xe800000000	                          call 0x4000252	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x4000252	              0xc9	                                   leave	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x4000253	              0xc3	                                     ret	       107	versioncmp.c	FUNCTION_2	ELSE_3
