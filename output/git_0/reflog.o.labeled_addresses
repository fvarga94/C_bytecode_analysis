parse_commit	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	10
0x40001fd	              0x55	                                push rbp	        74	commit.h	FUNCTION_1
0x40001fe	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_1
0x4000201	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_1
0x4000205	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_1
0x4000209	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_1	CALL_1
0x400020d	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_1	CALL_1
0x4000212	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_1	CALL_1
0x4000215	      0xe800000000	                          call 0x400021a	        75	commit.h	FUNCTION_1	CALL_1
0x400021a	              0xc9	                                   leave	        76	commit.h	FUNCTION_1
0x400021b	              0xc3	                                     ret	        76	commit.h	FUNCTION_1
has_sha1_file	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	10
0x40001de	              0x55	                                push rbp	      1250	cache.h	FUNCTION_24
0x40001df	          0x4889e5	                            mov rbp, rsp	      1250	cache.h	FUNCTION_24
0x40001e2	        0x4883ec10	                           sub rsp, 0x10	      1250	cache.h	FUNCTION_24
0x40001e6	        0x48897df8	                mov qword [rbp - 8], rdi	      1250	cache.h	FUNCTION_24
0x40001ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	cache.h	FUNCTION_24	CALL_1
0x40001ee	      0xbe00000000	                              mov esi, 0	      1251	cache.h	FUNCTION_24	CALL_1
0x40001f3	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_24	CALL_1
0x40001f6	      0xe800000000	                          call 0x40001fb	      1251	cache.h	FUNCTION_24	CALL_1
0x40001fb	              0xc9	                                   leave	      1252	cache.h	FUNCTION_24
0x40001fc	              0xc3	                                     ret	      1252	cache.h	FUNCTION_24
set_reflog_expiry_param	functions,0:CALL,2:IF,9:ELSE,0:FOR,1:WHILE,0:DO,0:SWITCH,0	83
0x400137b	              0x55	                                push rbp	       473	reflog.c	FUNCTION_41
0x400137c	          0x4889e5	                            mov rbp, rsp	       473	reflog.c	FUNCTION_41
0x400137f	        0x4883ec30	                           sub rsp, 0x30	       473	reflog.c	FUNCTION_41
0x4001383	        0x48897de8	             mov qword [rbp - 0x18], rdi	       473	reflog.c	FUNCTION_41
0x4001387	          0x8975e4	             mov dword [rbp - 0x1c], esi	       473	reflog.c	FUNCTION_41
0x400138a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       473	reflog.c	FUNCTION_41
0x400138e	        0x837de403	               cmp dword [rbp - 0x1c], 3	       476	reflog.c	FUNCTION_41	IF_1
0x4001392	     0xf8405010000	                            je 0x400149d	       476	reflog.c	FUNCTION_41	IF_1
0x4001398	    0x488b05000000	            mov rax, qword [0x0400139f] 	       479	reflog.c	FUNCTION_41	FOR_1
0x400139f	        0x488945f8	                mov qword [rbp - 8], rax	       479	reflog.c	FUNCTION_41	FOR_1
0x40013a3	            0xeb6e	                           jmp 0x4001413	       479	reflog.c	FUNCTION_41	FOR_1
0x40013a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013a9	        0x488d4818	                   lea rcx, [rax + 0x18]	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013b1	      0xba00000000	                              mov edx, 0	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013b6	          0x4889c6	                            mov rsi, rax	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013b9	          0x4889cf	                            mov rdi, rcx	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013bc	      0xe800000000	                          call 0x40013c1	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013c1	            0x85c0	                           test eax, eax	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013c3	            0x7543	                           jne 0x4001408	       480	reflog.c	FUNCTION_41	FOR_1	IF_2	CALL_1
0x40013c5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       481	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013c8	          0x83e001	                              and eax, 1	       481	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013cb	            0x85c0	                           test eax, eax	       481	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013cd	            0x7513	                           jne 0x40013e2	       481	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       482	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013d3	        0x488b5008	                mov rdx, qword [rax + 8]	       482	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       482	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013db	    0x488990b80800	            mov qword [rax + 0x8b8], rdx	       482	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_3
0x40013e2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       483	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013e5	          0x83e002	                              and eax, 2	       483	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013e8	            0x85c0	                           test eax, eax	       483	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013ea	     0xf85b0000000	                           jne 0x40014a0	       483	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013f4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       484	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x40013fc	    0x488990c00800	            mov qword [rax + 0x8c0], rdx	       484	reflog.c	FUNCTION_41	FOR_1	IF_2	IF_4
0x4001403	      0xe998000000	                           jmp 0x40014a0	       485	reflog.c	FUNCTION_41	FOR_1	IF_2
0x4001408	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	reflog.c	FUNCTION_41	FOR_1
0x400140c	          0x488b00	                    mov rax, qword [rax]	       479	reflog.c	FUNCTION_41	FOR_1
0x400140f	        0x488945f8	                mov qword [rbp - 8], rax	       479	reflog.c	FUNCTION_41	FOR_1
0x4001413	      0x48837df800	                  cmp qword [rbp - 8], 0	       479	reflog.c	FUNCTION_41	FOR_1
0x4001418	            0x758b	                           jne 0x40013a5	       479	reflog.c	FUNCTION_41	FOR_1
0x400141a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x400141e	      0xbe00000000	                              mov esi, 0	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x4001423	          0x4889c7	                            mov rdi, rax	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x4001426	      0xe800000000	                          call 0x400142b	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x400142b	            0x85c0	                           test eax, eax	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x400142d	            0x7534	                           jne 0x4001463	       492	reflog.c	FUNCTION_41	IF_5	CALL_2
0x400142f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       493	reflog.c	FUNCTION_41	IF_5	IF_6
0x4001432	          0x83e001	                              and eax, 1	       493	reflog.c	FUNCTION_41	IF_5	IF_6
0x4001435	            0x85c0	                           test eax, eax	       493	reflog.c	FUNCTION_41	IF_5	IF_6
0x4001437	            0x750f	                           jne 0x4001448	       493	reflog.c	FUNCTION_41	IF_5	IF_6
0x4001439	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	reflog.c	FUNCTION_41	IF_5	IF_6
0x400143d	    0x48c780b80800	              mov qword [rax + 0x8b8], 0	       494	reflog.c	FUNCTION_41	IF_5	IF_6
0x4001448	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       495	reflog.c	FUNCTION_41	IF_5	IF_7
0x400144b	          0x83e002	                              and eax, 2	       495	reflog.c	FUNCTION_41	IF_5	IF_7
0x400144e	            0x85c0	                           test eax, eax	       495	reflog.c	FUNCTION_41	IF_5	IF_7
0x4001450	            0x7551	                           jne 0x40014a3	       495	reflog.c	FUNCTION_41	IF_5	IF_7
0x4001452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       496	reflog.c	FUNCTION_41	IF_5	IF_7
0x4001456	    0x48c780c00800	              mov qword [rax + 0x8c0], 0	       496	reflog.c	FUNCTION_41	IF_5	IF_7
0x4001461	            0xeb40	                           jmp 0x40014a3	       497	reflog.c	FUNCTION_41	IF_5
0x4001463	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       501	reflog.c	FUNCTION_41	IF_8
0x4001466	          0x83e001	                              and eax, 1	       501	reflog.c	FUNCTION_41	IF_8
0x4001469	            0x85c0	                           test eax, eax	       501	reflog.c	FUNCTION_41	IF_8
0x400146b	            0x7512	                           jne 0x400147f	       501	reflog.c	FUNCTION_41	IF_8
0x400146d	    0x488b15000000	            mov rdx, qword [0x04001474] 	       502	reflog.c	FUNCTION_41	IF_8
0x4001474	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	reflog.c	FUNCTION_41	IF_8
0x4001478	    0x488990b80800	            mov qword [rax + 0x8b8], rdx	       502	reflog.c	FUNCTION_41	IF_8
0x400147f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       503	reflog.c	FUNCTION_41	IF_9
0x4001482	          0x83e002	                              and eax, 2	       503	reflog.c	FUNCTION_41	IF_9
0x4001485	            0x85c0	                           test eax, eax	       503	reflog.c	FUNCTION_41	IF_9
0x4001487	            0x751b	                           jne 0x40014a4	       503	reflog.c	FUNCTION_41	IF_9
0x4001489	    0x488b15000000	            mov rdx, qword [0x04001490] 	       504	reflog.c	FUNCTION_41	IF_9
0x4001490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	reflog.c	FUNCTION_41	IF_9
0x4001494	    0x488990c00800	            mov qword [rax + 0x8c0], rdx	       504	reflog.c	FUNCTION_41	IF_9
0x400149b	            0xeb07	                           jmp 0x40014a4	       504	reflog.c	FUNCTION_41	IF_9
0x400149d	              0x90	                                     nop	       477	reflog.c	FUNCTION_41	IF_1
0x400149e	            0xeb04	                           jmp 0x40014a4	       477	reflog.c	FUNCTION_41	IF_1
0x40014a0	              0x90	                                     nop	       485	reflog.c	FUNCTION_41	FOR_1	IF_2
0x40014a1	            0xeb01	                           jmp 0x40014a4	       485	reflog.c	FUNCTION_41	FOR_1	IF_2
0x40014a3	              0x90	                                     nop	       497	reflog.c	FUNCTION_41	IF_5
0x40014a4	              0xc9	                                   leave	       505	reflog.c	FUNCTION_41
0x40014a5	              0xc3	                                     ret	       505	reflog.c	FUNCTION_41
cmd_reflog	functions,0:CALL,12:IF,6:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	109
0x4001feb	              0x55	                                push rbp	       721	reflog.c	FUNCTION_46
0x4001fec	          0x4889e5	                            mov rbp, rsp	       721	reflog.c	FUNCTION_46
0x4001fef	        0x4883ec20	                           sub rsp, 0x20	       721	reflog.c	FUNCTION_46
0x4001ff3	          0x897dfc	                mov dword [rbp - 4], edi	       721	reflog.c	FUNCTION_46
0x4001ff6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       721	reflog.c	FUNCTION_46
0x4001ffa	        0x488955e8	             mov qword [rbp - 0x18], rdx	       721	reflog.c	FUNCTION_46
0x4001ffe	        0x837dfc01	                  cmp dword [rbp - 4], 1	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002002	            0x7e26	                           jle 0x400202a	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002004	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002008	        0x4883c008	                              add rax, 8	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x400200c	          0x488b00	                    mov rax, qword [rax]	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x400200f	      0xbe00000000	                              mov esi, 0	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002014	          0x4889c7	                            mov rdi, rax	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002017	      0xe800000000	                          call 0x400201c	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x400201c	            0x85c0	                           test eax, eax	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x400201e	            0x750a	                           jne 0x400202a	       722	reflog.c	FUNCTION_46	IF_1	CALL_1
0x4002020	      0xbf00000000	                              mov edi, 0	       723	reflog.c	FUNCTION_46	CALL_2
0x4002025	      0xe800000000	                          call 0x400202a	       723	reflog.c	FUNCTION_46	CALL_2
0x400202a	        0x837dfc01	                  cmp dword [rbp - 4], 1	       726	reflog.c	FUNCTION_46	IF_2
0x400202e	            0x7e12	                           jle 0x4002042	       726	reflog.c	FUNCTION_46	IF_2
0x4002030	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       726	reflog.c	FUNCTION_46	IF_2
0x4002034	        0x4883c008	                              add rax, 8	       726	reflog.c	FUNCTION_46	IF_2
0x4002038	          0x488b00	                    mov rax, qword [rax]	       726	reflog.c	FUNCTION_46	IF_2
0x400203b	           0xfb600	                   movzx eax, byte [rax]	       726	reflog.c	FUNCTION_46	IF_2
0x400203e	            0x3c2d	                            cmp al, 0x2d	       726	reflog.c	FUNCTION_46	IF_2
0x4002040	            0x751a	                           jne 0x400205c	       726	reflog.c	FUNCTION_46	IF_2
0x4002042	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       727	reflog.c	FUNCTION_46	CALL_3
0x4002046	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       727	reflog.c	FUNCTION_46	CALL_3
0x400204a	          0x8b45fc	                mov eax, dword [rbp - 4]	       727	reflog.c	FUNCTION_46	CALL_3
0x400204d	          0x4889ce	                            mov rsi, rcx	       727	reflog.c	FUNCTION_46	CALL_3
0x4002050	            0x89c7	                            mov edi, eax	       727	reflog.c	FUNCTION_46	CALL_3
0x4002052	      0xe800000000	                          call 0x4002057	       727	reflog.c	FUNCTION_46	CALL_3
0x4002057	      0xe903010000	                           jmp 0x400215f	       727	reflog.c	FUNCTION_46	CALL_3
0x400205c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002060	        0x4883c008	                              add rax, 8	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002064	          0x488b00	                    mov rax, qword [rax]	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002067	      0xbe00000000	                              mov esi, 0	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x400206c	          0x4889c7	                            mov rdi, rax	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x400206f	      0xe800000000	                          call 0x4002074	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002074	            0x85c0	                           test eax, eax	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002076	            0x7521	                           jne 0x4002099	       729	reflog.c	FUNCTION_46	IF_3	CALL_4
0x4002078	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       730	reflog.c	FUNCTION_46	CALL_5
0x400207c	        0x488d7008	                      lea rsi, [rax + 8]	       730	reflog.c	FUNCTION_46	CALL_5
0x4002080	          0x8b45fc	                mov eax, dword [rbp - 4]	       730	reflog.c	FUNCTION_46	CALL_5
0x4002083	          0x8d48ff	                      lea ecx, [rax - 1]	       730	reflog.c	FUNCTION_46	CALL_5
0x4002086	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	reflog.c	FUNCTION_46	CALL_5
0x400208a	          0x4889c2	                            mov rdx, rax	       730	reflog.c	FUNCTION_46	CALL_5
0x400208d	            0x89cf	                            mov edi, ecx	       730	reflog.c	FUNCTION_46	CALL_5
0x400208f	      0xe800000000	                          call 0x4002094	       730	reflog.c	FUNCTION_46	CALL_5
0x4002094	      0xe9c6000000	                           jmp 0x400215f	       730	reflog.c	FUNCTION_46	CALL_5
0x4002099	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x400209d	        0x4883c008	                              add rax, 8	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020a1	          0x488b00	                    mov rax, qword [rax]	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020a4	      0xbe00000000	                              mov esi, 0	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020a9	          0x4889c7	                            mov rdi, rax	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020ac	      0xe800000000	                          call 0x40020b1	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020b1	            0x85c0	                           test eax, eax	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020b3	            0x7521	                           jne 0x40020d6	       732	reflog.c	FUNCTION_46	IF_4	CALL_6
0x40020b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       733	reflog.c	FUNCTION_46	CALL_7
0x40020b9	        0x488d7008	                      lea rsi, [rax + 8]	       733	reflog.c	FUNCTION_46	CALL_7
0x40020bd	          0x8b45fc	                mov eax, dword [rbp - 4]	       733	reflog.c	FUNCTION_46	CALL_7
0x40020c0	          0x8d48ff	                      lea ecx, [rax - 1]	       733	reflog.c	FUNCTION_46	CALL_7
0x40020c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       733	reflog.c	FUNCTION_46	CALL_7
0x40020c7	          0x4889c2	                            mov rdx, rax	       733	reflog.c	FUNCTION_46	CALL_7
0x40020ca	            0x89cf	                            mov edi, ecx	       733	reflog.c	FUNCTION_46	CALL_7
0x40020cc	      0xe8d5f3ffff	              call sym.cmd_reflog_expire	       733	reflog.c	FUNCTION_46	CALL_7
0x40020d1	      0xe989000000	                           jmp 0x400215f	       733	reflog.c	FUNCTION_46	CALL_7
0x40020d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020da	        0x4883c008	                              add rax, 8	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020de	          0x488b00	                    mov rax, qword [rax]	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020e1	      0xbe00000000	                              mov esi, 0	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020e6	          0x4889c7	                            mov rdi, rax	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020e9	      0xe800000000	                          call 0x40020ee	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020ee	            0x85c0	                           test eax, eax	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020f0	            0x751e	                           jne 0x4002110	       735	reflog.c	FUNCTION_46	IF_5	CALL_8
0x40020f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	reflog.c	FUNCTION_46	CALL_9
0x40020f6	        0x488d7008	                      lea rsi, [rax + 8]	       736	reflog.c	FUNCTION_46	CALL_9
0x40020fa	          0x8b45fc	                mov eax, dword [rbp - 4]	       736	reflog.c	FUNCTION_46	CALL_9
0x40020fd	          0x8d48ff	                      lea ecx, [rax - 1]	       736	reflog.c	FUNCTION_46	CALL_9
0x4002100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       736	reflog.c	FUNCTION_46	CALL_9
0x4002104	          0x4889c2	                            mov rdx, rax	       736	reflog.c	FUNCTION_46	CALL_9
0x4002107	            0x89cf	                            mov edi, ecx	       736	reflog.c	FUNCTION_46	CALL_9
0x4002109	      0xe8e6f9ffff	              call sym.cmd_reflog_delete	       736	reflog.c	FUNCTION_46	CALL_9
0x400210e	            0xeb4f	                           jmp 0x400215f	       736	reflog.c	FUNCTION_46	CALL_9
0x4002110	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x4002114	        0x4883c008	                              add rax, 8	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x4002118	          0x488b00	                    mov rax, qword [rax]	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x400211b	      0xbe00000000	                              mov esi, 0	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x4002120	          0x4889c7	                            mov rdi, rax	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x4002123	      0xe800000000	                          call 0x4002128	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x4002128	            0x85c0	                           test eax, eax	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x400212a	            0x751e	                           jne 0x400214a	       738	reflog.c	FUNCTION_46	IF_6	CALL_10
0x400212c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       739	reflog.c	FUNCTION_46	CALL_11
0x4002130	        0x488d7008	                      lea rsi, [rax + 8]	       739	reflog.c	FUNCTION_46	CALL_11
0x4002134	          0x8b45fc	                mov eax, dword [rbp - 4]	       739	reflog.c	FUNCTION_46	CALL_11
0x4002137	          0x8d48ff	                      lea ecx, [rax - 1]	       739	reflog.c	FUNCTION_46	CALL_11
0x400213a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       739	reflog.c	FUNCTION_46	CALL_11
0x400213e	          0x4889c2	                            mov rdx, rax	       739	reflog.c	FUNCTION_46	CALL_11
0x4002141	            0x89cf	                            mov edi, ecx	       739	reflog.c	FUNCTION_46	CALL_11
0x4002143	      0xe899fdffff	              call sym.cmd_reflog_exists	       739	reflog.c	FUNCTION_46	CALL_11
0x4002148	            0xeb15	                           jmp 0x400215f	       739	reflog.c	FUNCTION_46	CALL_11
0x400214a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       741	reflog.c	FUNCTION_46	CALL_12
0x400214e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       741	reflog.c	FUNCTION_46	CALL_12
0x4002152	          0x8b45fc	                mov eax, dword [rbp - 4]	       741	reflog.c	FUNCTION_46	CALL_12
0x4002155	          0x4889ce	                            mov rsi, rcx	       741	reflog.c	FUNCTION_46	CALL_12
0x4002158	            0x89c7	                            mov edi, eax	       741	reflog.c	FUNCTION_46	CALL_12
0x400215a	      0xe800000000	                          call 0x400215f	       741	reflog.c	FUNCTION_46	CALL_12
0x400215f	              0xc9	                                   leave	       742	reflog.c	FUNCTION_46
0x4002160	              0xc3	                                     ret	       742	reflog.c	FUNCTION_46
push_tip_to_list	functions,0:CALL,2:IF,2:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	32
0x4000ce8	              0x55	                                push rbp	       318	reflog.c	FUNCTION_35
0x4000ce9	          0x4889e5	                            mov rbp, rsp	       318	reflog.c	FUNCTION_35
0x4000cec	        0x4883ec30	                           sub rsp, 0x30	       318	reflog.c	FUNCTION_35
0x4000cf0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       318	reflog.c	FUNCTION_35
0x4000cf4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       318	reflog.c	FUNCTION_35
0x4000cf8	          0x8955dc	             mov dword [rbp - 0x24], edx	       318	reflog.c	FUNCTION_35
0x4000cfb	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       318	reflog.c	FUNCTION_35
0x4000cff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       319	reflog.c	FUNCTION_35
0x4000d03	        0x488945f0	             mov qword [rbp - 0x10], rax	       319	reflog.c	FUNCTION_35
0x4000d07	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       321	reflog.c	FUNCTION_35	IF_1
0x4000d0a	          0x83e001	                              and eax, 1	       321	reflog.c	FUNCTION_35	IF_1
0x4000d0d	            0x85c0	                           test eax, eax	       321	reflog.c	FUNCTION_35	IF_1
0x4000d0f	            0x7407	                            je 0x4000d18	       321	reflog.c	FUNCTION_35	IF_1
0x4000d11	      0xb800000000	                              mov eax, 0	       322	reflog.c	FUNCTION_35	IF_1
0x4000d16	            0xeb3b	                           jmp 0x4000d53	       322	reflog.c	FUNCTION_35	IF_1
0x4000d18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       323	reflog.c	FUNCTION_35	CALL_1
0x4000d1c	      0xbe01000000	                              mov esi, 1	       323	reflog.c	FUNCTION_35	CALL_1
0x4000d21	          0x4889c7	                            mov rdi, rax	       323	reflog.c	FUNCTION_35	CALL_1
0x4000d24	      0xe800000000	                          call 0x4000d29	       323	reflog.c	FUNCTION_35	CALL_1
0x4000d29	        0x488945f8	                mov qword [rbp - 8], rax	       323	reflog.c	FUNCTION_35	CALL_1
0x4000d2d	      0x48837df800	                  cmp qword [rbp - 8], 0	       324	reflog.c	FUNCTION_35	IF_2
0x4000d32	            0x7507	                           jne 0x4000d3b	       324	reflog.c	FUNCTION_35	IF_2
0x4000d34	      0xb800000000	                              mov eax, 0	       325	reflog.c	FUNCTION_35	IF_2
0x4000d39	            0xeb18	                           jmp 0x4000d53	       325	reflog.c	FUNCTION_35	IF_2
0x4000d3b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       326	reflog.c	FUNCTION_35	CALL_2
0x4000d3f	        0x488b45f8	                mov rax, qword [rbp - 8]	       326	reflog.c	FUNCTION_35	CALL_2
0x4000d43	          0x4889d6	                            mov rsi, rdx	       326	reflog.c	FUNCTION_35	CALL_2
0x4000d46	          0x4889c7	                            mov rdi, rax	       326	reflog.c	FUNCTION_35	CALL_2
0x4000d49	      0xe800000000	                          call 0x4000d4e	       326	reflog.c	FUNCTION_35	CALL_2
0x4000d4e	      0xb800000000	                              mov eax, 0	       327	reflog.c	FUNCTION_35
0x4000d53	              0xc9	                                   leave	       328	reflog.c	FUNCTION_35
0x4000d54	              0xc3	                                     ret	       328	reflog.c	FUNCTION_35
st_add	functions,0:CALL,1:IF,1:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	20
0x400004b	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_60
0x400004c	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_60
0x400004f	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_60
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_60
0x4000057	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_60
0x400005b	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_60	IF_1
0x400005f	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_60	IF_1
0x4000062	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_60	IF_1
0x4000066	            0x731a	                           jae 0x4000082	       785	git-compat-util.h	FUNCTION_60	IF_1
0x4000068	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x400006c	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000070	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000073	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000078	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x400007d	      0xe800000000	                          call 0x4000082	       786	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000082	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_60
0x4000086	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_60
0x400008a	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_60
0x400008d	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_60
0x400008e	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_60
reflog_expire_config	functions,0:CALL,8:IF,7:ELSE,2:FOR,0:WHILE,0:DO,0:SWITCH,2	116
0x40011d6	              0x55	                                push rbp	       425	reflog.c	FUNCTION_40
0x40011d7	          0x4889e5	                            mov rbp, rsp	       425	reflog.c	FUNCTION_40
0x40011da	        0x4883ec50	                           sub rsp, 0x50	       425	reflog.c	FUNCTION_40
0x40011de	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       425	reflog.c	FUNCTION_40
0x40011e2	        0x488975c0	             mov qword [rbp - 0x40], rsi	       425	reflog.c	FUNCTION_40
0x40011e6	        0x488955b8	             mov qword [rbp - 0x48], rdx	       425	reflog.c	FUNCTION_40
0x40011ea	    0x64488b042528	                mov rax, qword fs:[0x28]	       425	reflog.c	FUNCTION_40
0x40011f3	        0x488945f8	                mov qword [rbp - 8], rax	       425	reflog.c	FUNCTION_40
0x40011f7	            0x31c0	                            xor eax, eax	       425	reflog.c	FUNCTION_40
0x40011f9	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x40011fd	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001201	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001205	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001209	          0x4989f0	                             mov r8, rsi	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x400120c	      0xbe00000000	                              mov esi, 0	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001211	          0x4889c7	                            mov rdi, rax	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001214	      0xe800000000	                          call 0x4001219	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x4001219	            0x85c0	                           test eax, eax	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x400121b	            0x791c	                           jns 0x4001239	       432	reflog.c	FUNCTION_40	IF_1	CALL_1
0x400121d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       433	reflog.c	FUNCTION_40	CALL_2
0x4001221	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       433	reflog.c	FUNCTION_40	CALL_2
0x4001225	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       433	reflog.c	FUNCTION_40	CALL_2
0x4001229	          0x4889ce	                            mov rsi, rcx	       433	reflog.c	FUNCTION_40	CALL_2
0x400122c	          0x4889c7	                            mov rdi, rax	       433	reflog.c	FUNCTION_40	CALL_2
0x400122f	      0xe800000000	                          call 0x4001234	       433	reflog.c	FUNCTION_40	CALL_2
0x4001234	      0xe92c010000	                           jmp 0x4001365	       433	reflog.c	FUNCTION_40	CALL_2
0x4001239	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x400123d	      0xbe00000000	                              mov esi, 0	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x4001242	          0x4889c7	                            mov rdi, rax	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x4001245	      0xe800000000	                          call 0x400124a	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x400124a	            0x85c0	                           test eax, eax	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x400124c	            0x752c	                           jne 0x400127a	       435	reflog.c	FUNCTION_40	IF_2	CALL_3
0x400124e	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       436	reflog.c	FUNCTION_40	IF_2
0x4001255	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x4001259	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x400125d	        0x488d45e8	                   lea rax, [rbp - 0x18]	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x4001261	          0x4889ce	                            mov rsi, rcx	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x4001264	          0x4889c7	                            mov rdi, rax	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x4001267	      0xe800000000	                          call 0x400126c	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x400126c	            0x85c0	                           test eax, eax	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x400126e	            0x7467	                            je 0x40012d7	       437	reflog.c	FUNCTION_40	IF_2	IF_3	CALL_4
0x4001270	      0xb8ffffffff	                     mov eax, 0xffffffff	       438	reflog.c	FUNCTION_40	IF_2	IF_3
0x4001275	      0xe9eb000000	                           jmp 0x4001365	       438	reflog.c	FUNCTION_40	IF_2	IF_3
0x400127a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x400127e	      0xbe00000000	                              mov esi, 0	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x4001283	          0x4889c7	                            mov rdi, rax	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x4001286	      0xe800000000	                          call 0x400128b	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x400128b	            0x85c0	                           test eax, eax	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x400128d	            0x752c	                           jne 0x40012bb	       439	reflog.c	FUNCTION_40	ELSE_1	IF_4	CALL_5
0x400128f	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	       440	reflog.c	FUNCTION_40	ELSE_1	IF_4
0x4001296	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x400129a	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x400129e	        0x488d45e8	                   lea rax, [rbp - 0x18]	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012a2	          0x4889ce	                            mov rsi, rcx	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012a5	          0x4889c7	                            mov rdi, rax	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012a8	      0xe800000000	                          call 0x40012ad	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012ad	            0x85c0	                           test eax, eax	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012af	            0x7426	                            je 0x40012d7	       441	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5	CALL_6
0x40012b1	      0xb8ffffffff	                     mov eax, 0xffffffff	       442	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5
0x40012b6	      0xe9aa000000	                           jmp 0x4001365	       442	reflog.c	FUNCTION_40	ELSE_1	IF_4	IF_5
0x40012bb	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       444	reflog.c	FUNCTION_40	CALL_7
0x40012bf	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       444	reflog.c	FUNCTION_40	CALL_7
0x40012c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       444	reflog.c	FUNCTION_40	CALL_7
0x40012c7	          0x4889ce	                            mov rsi, rcx	       444	reflog.c	FUNCTION_40	CALL_7
0x40012ca	          0x4889c7	                            mov rdi, rax	       444	reflog.c	FUNCTION_40	CALL_7
0x40012cd	      0xe800000000	                          call 0x40012d2	       444	reflog.c	FUNCTION_40	CALL_7
0x40012d2	      0xe98e000000	                           jmp 0x4001365	       444	reflog.c	FUNCTION_40	CALL_7
0x40012d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	reflog.c	FUNCTION_40	IF_6
0x40012db	          0x4885c0	                           test rax, rax	       446	reflog.c	FUNCTION_40	IF_6
0x40012de	            0x752f	                           jne 0x400130f	       446	reflog.c	FUNCTION_40	IF_6
0x40012e0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012e3	          0x83f801	                              cmp eax, 1	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012e6	            0x7407	                            je 0x40012ef	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012e8	          0x83f802	                              cmp eax, 2	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012eb	            0x740f	                            je 0x40012fc	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012ed	            0xeb19	                           jmp 0x4001308	       447	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012f3	    0x488905000000	            mov qword [0x040012fa], rax 	       449	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012fa	            0xeb0c	                           jmp 0x4001308	       450	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x40012fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x4001300	    0x488905000000	            mov qword [0x04001307], rax 	       452	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x4001307	              0x90	                                     nop	       453	reflog.c	FUNCTION_40	IF_6	SWITCH_1
0x4001308	      0xb800000000	                              mov eax, 0	       455	reflog.c	FUNCTION_40	IF_6
0x400130d	            0xeb56	                           jmp 0x4001365	       455	reflog.c	FUNCTION_40	IF_6
0x400130f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       458	reflog.c	FUNCTION_40	CALL_8
0x4001312	          0x4863d0	                         movsxd rdx, eax	       458	reflog.c	FUNCTION_40	CALL_8
0x4001315	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       458	reflog.c	FUNCTION_40	CALL_8
0x4001319	          0x4889d6	                            mov rsi, rdx	       458	reflog.c	FUNCTION_40	CALL_8
0x400131c	          0x4889c7	                            mov rdi, rax	       458	reflog.c	FUNCTION_40	CALL_8
0x400131f	      0xe8bdfdffff	                   call sym.find_cfg_ent	       458	reflog.c	FUNCTION_40	CALL_8
0x4001324	        0x488945f0	             mov qword [rbp - 0x10], rax	       458	reflog.c	FUNCTION_40	CALL_8
0x4001328	      0x48837df000	               cmp qword [rbp - 0x10], 0	       459	reflog.c	FUNCTION_40	IF_7
0x400132d	            0x7507	                           jne 0x4001336	       459	reflog.c	FUNCTION_40	IF_7
0x400132f	      0xb8ffffffff	                     mov eax, 0xffffffff	       460	reflog.c	FUNCTION_40	IF_7
0x4001334	            0xeb2f	                           jmp 0x4001365	       460	reflog.c	FUNCTION_40	IF_7
0x4001336	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       461	reflog.c	FUNCTION_40	SWITCH_2
0x4001339	          0x83f801	                              cmp eax, 1	       461	reflog.c	FUNCTION_40	SWITCH_2
0x400133c	            0x7407	                            je 0x4001345	       461	reflog.c	FUNCTION_40	SWITCH_2
0x400133e	          0x83f802	                              cmp eax, 2	       461	reflog.c	FUNCTION_40	SWITCH_2
0x4001341	            0x7410	                            je 0x4001353	       461	reflog.c	FUNCTION_40	SWITCH_2
0x4001343	            0xeb1b	                           jmp 0x4001360	       461	reflog.c	FUNCTION_40	SWITCH_2
0x4001345	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       463	reflog.c	FUNCTION_40	SWITCH_2
0x4001349	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       463	reflog.c	FUNCTION_40	SWITCH_2
0x400134d	        0x48895008	                mov qword [rax + 8], rdx	       463	reflog.c	FUNCTION_40	SWITCH_2
0x4001351	            0xeb0d	                           jmp 0x4001360	       464	reflog.c	FUNCTION_40	SWITCH_2
0x4001353	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       466	reflog.c	FUNCTION_40	SWITCH_2
0x4001357	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       466	reflog.c	FUNCTION_40	SWITCH_2
0x400135b	        0x48895010	             mov qword [rax + 0x10], rdx	       466	reflog.c	FUNCTION_40	SWITCH_2
0x400135f	              0x90	                                     nop	       467	reflog.c	FUNCTION_40	SWITCH_2
0x4001360	      0xb800000000	                              mov eax, 0	       469	reflog.c	FUNCTION_40
0x4001365	        0x488b7df8	                mov rdi, qword [rbp - 8]	       470	reflog.c	FUNCTION_40
0x4001369	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       470	reflog.c	FUNCTION_40
0x4001372	            0x7405	                            je 0x4001379	       470	reflog.c	FUNCTION_40
0x4001374	      0xe800000000	                          call 0x4001379	       470	reflog.c	FUNCTION_40
0x4001379	              0xc9	                                   leave	       470	reflog.c	FUNCTION_40
0x400137a	              0xc3	                                     ret	       470	reflog.c	FUNCTION_40
hashcmp	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	13
0x400010d	              0x55	                                push rbp	       974	cache.h	FUNCTION_9
0x400010e	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_9
0x4000111	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_9
0x4000115	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_9
0x4000119	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_9
0x400011d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_9	CALL_1
0x4000121	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_9	CALL_1
0x4000125	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_9	CALL_1
0x400012a	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_9	CALL_1
0x400012d	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_9	CALL_1
0x4000130	      0xe800000000	                          call 0x4000135	       975	cache.h	FUNCTION_9	CALL_1
0x4000135	              0xc9	                                   leave	       976	cache.h	FUNCTION_9
0x4000136	              0xc3	                                     ret	       976	cache.h	FUNCTION_9
commit_is_complete	functions,0:CALL,12:IF,10:ELSE,2:FOR,5:WHILE,1:DO,0:SWITCH,0	317
0x4000413	              0x55	                                push rbp	       103	reflog.c	FUNCTION_30
0x4000414	          0x4889e5	                            mov rbp, rsp	       103	reflog.c	FUNCTION_30
0x4000417	        0x4883ec70	                           sub rsp, 0x70	       103	reflog.c	FUNCTION_30
0x400041b	        0x48897d98	             mov qword [rbp - 0x68], rdi	       103	reflog.c	FUNCTION_30
0x400041f	    0x64488b042528	                mov rax, qword fs:[0x28]	       103	reflog.c	FUNCTION_30
0x4000428	        0x488945f8	                mov qword [rbp - 8], rax	       103	reflog.c	FUNCTION_30
0x400042c	            0x31c0	                            xor eax, eax	       103	reflog.c	FUNCTION_30
0x400042e	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       106	reflog.c	FUNCTION_30
0x4000435	        0x488b4598	             mov rax, qword [rbp - 0x68]	       110	reflog.c	FUNCTION_30	IF_1
0x4000439	            0x8b00	                    mov eax, dword [rax]	       110	reflog.c	FUNCTION_30	IF_1
0x400043b	          0xc1e804	                              shr eax, 4	       110	reflog.c	FUNCTION_30	IF_1
0x400043e	      0x25ffffff07	                      and eax, 0x7ffffff	       110	reflog.c	FUNCTION_30	IF_1
0x4000443	          0x83e001	                              and eax, 1	       110	reflog.c	FUNCTION_30	IF_1
0x4000446	            0x85c0	                           test eax, eax	       110	reflog.c	FUNCTION_30	IF_1
0x4000448	            0x740a	                            je 0x4000454	       110	reflog.c	FUNCTION_30	IF_1
0x400044a	      0xb801000000	                              mov eax, 1	       111	reflog.c	FUNCTION_30	IF_1
0x400044f	      0xe901040000	                           jmp 0x4000855	       111	reflog.c	FUNCTION_30	IF_1
0x4000454	        0x488b4598	             mov rax, qword [rbp - 0x68]	       112	reflog.c	FUNCTION_30	IF_2
0x4000458	            0x8b00	                    mov eax, dword [rax]	       112	reflog.c	FUNCTION_30	IF_2
0x400045a	          0xc1e804	                              shr eax, 4	       112	reflog.c	FUNCTION_30	IF_2
0x400045d	      0x25ffffff07	                      and eax, 0x7ffffff	       112	reflog.c	FUNCTION_30	IF_2
0x4000462	      0x2500040000	                          and eax, 0x400	       112	reflog.c	FUNCTION_30	IF_2
0x4000467	            0x85c0	                           test eax, eax	       112	reflog.c	FUNCTION_30	IF_2
0x4000469	            0x740a	                            je 0x4000475	       112	reflog.c	FUNCTION_30	IF_2
0x400046b	      0xb800000000	                              mov eax, 0	       113	reflog.c	FUNCTION_30	IF_2
0x4000470	      0xe9e0030000	                           jmp 0x4000855	       113	reflog.c	FUNCTION_30	IF_2
0x4000475	        0x488d45d0	                   lea rax, [rbp - 0x30]	       121	reflog.c	FUNCTION_30	CALL_1
0x4000479	      0xba10000000	                           mov edx, 0x10	       121	reflog.c	FUNCTION_30	CALL_1
0x400047e	      0xbe00000000	                              mov esi, 0	       121	reflog.c	FUNCTION_30	CALL_1
0x4000483	          0x4889c7	                            mov rdi, rax	       121	reflog.c	FUNCTION_30	CALL_1
0x4000486	      0xe800000000	                          call 0x400048b	       121	reflog.c	FUNCTION_30	CALL_1
0x400048b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       122	reflog.c	FUNCTION_30	CALL_2
0x400048f	      0xba10000000	                           mov edx, 0x10	       122	reflog.c	FUNCTION_30	CALL_2
0x4000494	      0xbe00000000	                              mov esi, 0	       122	reflog.c	FUNCTION_30	CALL_2
0x4000499	          0x4889c7	                            mov rdi, rax	       122	reflog.c	FUNCTION_30	CALL_2
0x400049c	      0xe800000000	                          call 0x40004a1	       122	reflog.c	FUNCTION_30	CALL_2
0x40004a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       123	reflog.c	FUNCTION_30	CALL_3
0x40004a5	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       123	reflog.c	FUNCTION_30	CALL_3
0x40004a9	      0xbe00000000	                              mov esi, 0	       123	reflog.c	FUNCTION_30	CALL_3
0x40004ae	          0x4889c7	                            mov rdi, rax	       123	reflog.c	FUNCTION_30	CALL_3
0x40004b1	      0xe800000000	                          call 0x40004b6	       123	reflog.c	FUNCTION_30	CALL_3
0x40004b6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       124	reflog.c	FUNCTION_30	CALL_4
0x40004ba	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       124	reflog.c	FUNCTION_30	CALL_4
0x40004be	      0xbe00000000	                              mov esi, 0	       124	reflog.c	FUNCTION_30	CALL_4
0x40004c3	          0x4889c7	                            mov rdi, rax	       124	reflog.c	FUNCTION_30	CALL_4
0x40004c6	      0xe800000000	                          call 0x40004cb	       124	reflog.c	FUNCTION_30	CALL_4
0x40004cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       125	reflog.c	FUNCTION_30
0x40004cf	            0x8b00	                    mov eax, dword [rax]	       125	reflog.c	FUNCTION_30
0x40004d1	          0xc1e804	                              shr eax, 4	       125	reflog.c	FUNCTION_30
0x40004d4	      0x25ffffff07	                      and eax, 0x7ffffff	       125	reflog.c	FUNCTION_30
0x40004d9	          0x80cc08	                                or ah, 8	       125	reflog.c	FUNCTION_30
0x40004dc	            0x89c2	                            mov edx, eax	       125	reflog.c	FUNCTION_30
0x40004de	        0x488b4598	             mov rax, qword [rbp - 0x68]	       125	reflog.c	FUNCTION_30
0x40004e2	    0x81e2ffffff07	                      and edx, 0x7ffffff	       125	reflog.c	FUNCTION_30
0x40004e8	            0x89d1	                            mov ecx, edx	       125	reflog.c	FUNCTION_30
0x40004ea	          0xc1e104	                              shl ecx, 4	       125	reflog.c	FUNCTION_30
0x40004ed	            0x8b10	                    mov edx, dword [rax]	       125	reflog.c	FUNCTION_30
0x40004ef	    0x81e20f000080	                     and edx, 0x8000000f	       125	reflog.c	FUNCTION_30
0x40004f5	             0x9ca	                             or edx, ecx	       125	reflog.c	FUNCTION_30
0x40004f7	            0x8910	                    mov dword [rax], edx	       125	reflog.c	FUNCTION_30
0x40004f9	      0xe943010000	                           jmp 0x4000641	       126	reflog.c	FUNCTION_30	WHILE_1
0x40004fe	        0x488d45d0	                   lea rax, [rbp - 0x30]	       130	reflog.c	FUNCTION_30	WHILE_1	CALL_5
0x4000502	          0x4889c7	                            mov rdi, rax	       130	reflog.c	FUNCTION_30	WHILE_1	CALL_5
0x4000505	      0xe800000000	                          call 0x400050a	       130	reflog.c	FUNCTION_30	WHILE_1	CALL_5
0x400050a	        0x488945b8	             mov qword [rbp - 0x48], rax	       130	reflog.c	FUNCTION_30	WHILE_1	CALL_5
0x400050e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000512	           0xfb600	                   movzx eax, byte [rax]	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000515	          0x83e001	                              and eax, 1	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000518	            0x84c0	                             test al, al	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x400051a	            0x7543	                           jne 0x400055f	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x400051c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000520	        0x4883c004	                              add rax, 4	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000524	          0x4889c7	                            mov rdi, rax	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000527	      0xe800000000	                          call 0x400052c	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x400052c	          0x4885c0	                           test rax, rax	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x400052f	            0x752e	                           jne 0x400055f	       131	reflog.c	FUNCTION_30	WHILE_1	IF_3	CALL_6
0x4000531	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000535	            0x8b00	                    mov eax, dword [rax]	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000537	          0xc1e804	                              shr eax, 4	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400053a	      0x25ffffff07	                      and eax, 0x7ffffff	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400053f	          0x80cc04	                                or ah, 4	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000542	            0x89c2	                            mov edx, eax	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000544	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000548	    0x81e2ffffff07	                      and edx, 0x7ffffff	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400054e	            0x89d1	                            mov ecx, edx	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000550	          0xc1e104	                              shl ecx, 4	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000553	            0x8b10	                    mov edx, dword [rax]	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x4000555	    0x81e20f000080	                     and edx, 0x8000000f	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400055b	             0x9ca	                             or edx, ecx	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400055d	            0x8910	                    mov dword [rax], edx	       132	reflog.c	FUNCTION_30	WHILE_1	IF_3
0x400055f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000563	            0x8b00	                    mov eax, dword [rax]	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000565	          0xc1e804	                              shr eax, 4	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000568	      0x25ffffff07	                      and eax, 0x7ffffff	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x400056d	      0x2500040000	                          and eax, 0x400	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000572	            0x85c0	                           test eax, eax	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000574	            0x740c	                            je 0x4000582	       134	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000576	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       135	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x400057d	      0xe9ca000000	                           jmp 0x400064c	       136	reflog.c	FUNCTION_30	WHILE_1	IF_4
0x4000582	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000586	            0x8b00	                    mov eax, dword [rax]	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000588	          0xc1e804	                              shr eax, 4	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x400058b	      0x25ffffff07	                      and eax, 0x7ffffff	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000590	          0x83e001	                              and eax, 1	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000593	            0x85c0	                           test eax, eax	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000595	            0x7405	                            je 0x400059c	       138	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x4000597	      0xe9a5000000	                           jmp 0x4000641	       139	reflog.c	FUNCTION_30	WHILE_1	ELSE_1	IF_5
0x400059c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005a0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005a4	        0x488945b0	             mov qword [rbp - 0x50], rax	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005a8	      0xe989000000	                           jmp 0x4000636	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       141	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005b1	          0x488b00	                    mov rax, qword [rax]	       141	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005b4	        0x488945c0	             mov qword [rbp - 0x40], rax	       141	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005bc	            0x8b00	                    mov eax, dword [rax]	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005be	          0xc1e804	                              shr eax, 4	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005c1	      0x25ffffff07	                      and eax, 0x7ffffff	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005c6	      0x2500080000	                          and eax, 0x800	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005cb	            0x85c0	                           test eax, eax	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005cd	            0x755a	                           jne 0x4000629	       142	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x40005cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005d3	            0x8b00	                    mov eax, dword [rax]	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005d5	          0xc1e804	                              shr eax, 4	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005d8	      0x25ffffff07	                      and eax, 0x7ffffff	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005dd	          0x80cc08	                                or ah, 8	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005e0	            0x89c2	                            mov edx, eax	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005e6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005ec	            0x89d1	                            mov ecx, edx	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005ee	          0xc1e104	                              shl ecx, 4	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005f1	            0x8b10	                    mov edx, dword [rax]	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005f3	    0x81e20f000080	                     and edx, 0x8000000f	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005f9	             0x9ca	                             or edx, ecx	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005fb	            0x8910	                    mov dword [rax], edx	       144	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x40005fd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       145	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_7
0x4000601	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       145	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_7
0x4000605	      0xbe00000000	                              mov esi, 0	       145	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_7
0x400060a	          0x4889c7	                            mov rdi, rax	       145	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_7
0x400060d	      0xe800000000	                          call 0x4000612	       145	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_7
0x4000612	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x4000616	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x400061a	      0xbe00000000	                              mov esi, 0	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x400061f	          0x4889c7	                            mov rdi, rax	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x4000622	      0xe800000000	                          call 0x4000627	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x4000627	            0xeb01	                           jmp 0x400062a	       146	reflog.c	FUNCTION_30	WHILE_1	FOR_1	CALL_8
0x4000629	              0x90	                                     nop	       143	reflog.c	FUNCTION_30	WHILE_1	FOR_1	IF_6
0x400062a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x400062e	        0x488b4008	                mov rax, qword [rax + 8]	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x4000632	        0x488945b0	             mov qword [rbp - 0x50], rax	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x4000636	      0x48837db000	               cmp qword [rbp - 0x50], 0	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x400063b	     0xf856cffffff	                           jne 0x40005ad	       140	reflog.c	FUNCTION_30	WHILE_1	FOR_1
0x4000641	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       126	reflog.c	FUNCTION_30	WHILE_1
0x4000644	            0x85c0	                           test eax, eax	       126	reflog.c	FUNCTION_30	WHILE_1
0x4000646	     0xf85b2feffff	                           jne 0x40004fe	       126	reflog.c	FUNCTION_30	WHILE_1
0x400064c	        0x837da800	               cmp dword [rbp - 0x58], 0	       149	reflog.c	FUNCTION_30	IF_7
0x4000650	     0xf85e3000000	                           jne 0x4000739	       149	reflog.c	FUNCTION_30	IF_7
0x4000656	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x400065d	            0xeb69	                           jmp 0x40006c8	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x400065f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000663	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       156	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000666	          0x4863d2	                         movsxd rdx, edx	       156	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000669	        0x48c1e205	                              shl rdx, 5	       156	reflog.c	FUNCTION_30	IF_7	FOR_2
0x400066d	          0x4801d0	                            add rax, rdx	       156	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000670	          0x488b00	                    mov rax, qword [rax]	       155	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000673	        0x488945c8	             mov qword [rbp - 0x38], rax	       155	reflog.c	FUNCTION_30	IF_7	FOR_2
0x4000677	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x400067b	          0x4889c7	                            mov rdi, rax	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x400067e	      0xe800000000	                          call 0x4000683	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x4000683	          0x4889c7	                            mov rdi, rax	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x4000686	      0xe891fbffff	               call sym.tree_is_complete	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x400068b	            0x85c0	                           test eax, eax	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x400068d	            0x7535	                           jne 0x40006c4	       157	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8	CALL_10
0x400068f	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       158	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x4000696	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x400069a	            0x8b00	                    mov eax, dword [rax]	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x400069c	          0xc1e804	                              shr eax, 4	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x400069f	      0x25ffffff07	                      and eax, 0x7ffffff	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006a4	          0x80cc04	                                or ah, 4	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006a7	            0x89c2	                            mov edx, eax	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006ad	    0x81e2ffffff07	                      and edx, 0x7ffffff	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006b3	            0x89d1	                            mov ecx, edx	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006b5	          0xc1e104	                              shl ecx, 4	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006b8	            0x8b10	                    mov edx, dword [rax]	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006ba	    0x81e20f000080	                     and edx, 0x8000000f	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006c0	             0x9ca	                             or edx, ecx	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006c2	            0x8910	                    mov dword [rax], edx	       159	reflog.c	FUNCTION_30	IF_7	FOR_2	IF_8
0x40006c4	        0x8345ac01	               add dword [rbp - 0x54], 1	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x40006c8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x40006cb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x40006ce	            0x39c2	                            cmp edx, eax	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x40006d0	            0x778d	                            ja 0x400065f	       154	reflog.c	FUNCTION_30	IF_7	FOR_2
0x40006d2	        0x837da800	               cmp dword [rbp - 0x58], 0	       162	reflog.c	FUNCTION_30	IF_7	IF_9
0x40006d6	            0x7561	                           jne 0x4000739	       162	reflog.c	FUNCTION_30	IF_7	IF_9
0x40006d8	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006df	            0xeb4e	                           jmp 0x400072f	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006e5	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006e8	          0x4863d2	                         movsxd rdx, edx	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006eb	        0x48c1e205	                              shl rdx, 5	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006ef	          0x4801d0	                            add rax, rdx	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006f2	          0x488b10	                    mov rdx, qword [rax]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006f9	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006fc	          0x4863c9	                         movsxd rcx, ecx	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x40006ff	        0x48c1e105	                              shl rcx, 5	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000703	          0x4801c8	                            add rax, rcx	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000706	          0x488b00	                    mov rax, qword [rax]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000709	            0x8b00	                    mov eax, dword [rax]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400070b	          0xc1e804	                              shr eax, 4	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400070e	      0x25ffffff07	                      and eax, 0x7ffffff	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000713	          0x83c801	                               or eax, 1	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000716	      0x25ffffff07	                      and eax, 0x7ffffff	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400071b	          0xc1e004	                              shl eax, 4	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400071e	            0x89c1	                            mov ecx, eax	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000720	            0x8b02	                    mov eax, dword [rdx]	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000722	      0x250f000080	                     and eax, 0x8000000f	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000727	             0x9c8	                             or eax, ecx	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000729	            0x8902	                    mov dword [rdx], eax	       165	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400072b	        0x8345ac01	               add dword [rbp - 0x54], 1	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x400072f	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000732	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000735	            0x39c2	                            cmp edx, eax	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000737	            0x77a8	                            ja 0x40006e1	       164	reflog.c	FUNCTION_30	IF_7	IF_9	FOR_3
0x4000739	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       169	reflog.c	FUNCTION_30	FOR_4
0x4000740	            0xeb50	                           jmp 0x4000792	       169	reflog.c	FUNCTION_30	FOR_4
0x4000742	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	reflog.c	FUNCTION_30	FOR_4
0x4000746	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       170	reflog.c	FUNCTION_30	FOR_4
0x4000749	          0x4863d2	                         movsxd rdx, edx	       170	reflog.c	FUNCTION_30	FOR_4
0x400074c	        0x48c1e205	                              shl rdx, 5	       170	reflog.c	FUNCTION_30	FOR_4
0x4000750	          0x4801d0	                            add rax, rdx	       170	reflog.c	FUNCTION_30	FOR_4
0x4000753	          0x488b10	                    mov rdx, qword [rax]	       170	reflog.c	FUNCTION_30	FOR_4
0x4000756	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	reflog.c	FUNCTION_30	FOR_4
0x400075a	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       170	reflog.c	FUNCTION_30	FOR_4
0x400075d	          0x4863c9	                         movsxd rcx, ecx	       170	reflog.c	FUNCTION_30	FOR_4
0x4000760	        0x48c1e105	                              shl rcx, 5	       170	reflog.c	FUNCTION_30	FOR_4
0x4000764	          0x4801c8	                            add rax, rcx	       170	reflog.c	FUNCTION_30	FOR_4
0x4000767	          0x488b00	                    mov rax, qword [rax]	       170	reflog.c	FUNCTION_30	FOR_4
0x400076a	            0x8b00	                    mov eax, dword [rax]	       170	reflog.c	FUNCTION_30	FOR_4
0x400076c	          0xc1e804	                              shr eax, 4	       170	reflog.c	FUNCTION_30	FOR_4
0x400076f	      0x25ffffff07	                      and eax, 0x7ffffff	       170	reflog.c	FUNCTION_30	FOR_4
0x4000774	      0x25fff7ff07	                      and eax, 0x7fff7ff	       170	reflog.c	FUNCTION_30	FOR_4
0x4000779	      0x25ffffff07	                      and eax, 0x7ffffff	       170	reflog.c	FUNCTION_30	FOR_4
0x400077e	          0xc1e004	                              shl eax, 4	       170	reflog.c	FUNCTION_30	FOR_4
0x4000781	            0x89c1	                            mov ecx, eax	       170	reflog.c	FUNCTION_30	FOR_4
0x4000783	            0x8b02	                    mov eax, dword [rdx]	       170	reflog.c	FUNCTION_30	FOR_4
0x4000785	      0x250f000080	                     and eax, 0x8000000f	       170	reflog.c	FUNCTION_30	FOR_4
0x400078a	             0x9c8	                             or eax, ecx	       170	reflog.c	FUNCTION_30	FOR_4
0x400078c	            0x8902	                    mov dword [rdx], eax	       170	reflog.c	FUNCTION_30	FOR_4
0x400078e	        0x8345ac01	               add dword [rbp - 0x54], 1	       169	reflog.c	FUNCTION_30	FOR_4
0x4000792	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       169	reflog.c	FUNCTION_30	FOR_4
0x4000795	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       169	reflog.c	FUNCTION_30	FOR_4
0x4000798	            0x39c2	                            cmp edx, eax	       169	reflog.c	FUNCTION_30	FOR_4
0x400079a	            0x77a6	                            ja 0x4000742	       169	reflog.c	FUNCTION_30	FOR_4
0x400079c	        0x837da800	               cmp dword [rbp - 0x58], 0	       171	reflog.c	FUNCTION_30	IF_10
0x40007a0	            0x7430	                            je 0x40007d2	       171	reflog.c	FUNCTION_30	IF_10
0x40007a2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       172	reflog.c	FUNCTION_30	IF_10
0x40007a6	            0x8b00	                    mov eax, dword [rax]	       172	reflog.c	FUNCTION_30	IF_10
0x40007a8	          0xc1e804	                              shr eax, 4	       172	reflog.c	FUNCTION_30	IF_10
0x40007ab	      0x25ffffff07	                      and eax, 0x7ffffff	       172	reflog.c	FUNCTION_30	IF_10
0x40007b0	          0x80cc04	                                or ah, 4	       172	reflog.c	FUNCTION_30	IF_10
0x40007b3	            0x89c2	                            mov edx, eax	       172	reflog.c	FUNCTION_30	IF_10
0x40007b5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       172	reflog.c	FUNCTION_30	IF_10
0x40007b9	    0x81e2ffffff07	                      and edx, 0x7ffffff	       172	reflog.c	FUNCTION_30	IF_10
0x40007bf	            0x89d1	                            mov ecx, edx	       172	reflog.c	FUNCTION_30	IF_10
0x40007c1	          0xc1e104	                              shl ecx, 4	       172	reflog.c	FUNCTION_30	IF_10
0x40007c4	            0x8b10	                    mov edx, dword [rax]	       172	reflog.c	FUNCTION_30	IF_10
0x40007c6	    0x81e20f000080	                     and edx, 0x8000000f	       172	reflog.c	FUNCTION_30	IF_10
0x40007cc	             0x9ca	                             or edx, ecx	       172	reflog.c	FUNCTION_30	IF_10
0x40007ce	            0x8910	                    mov dword [rax], edx	       172	reflog.c	FUNCTION_30	IF_10
0x40007d0	            0xeb61	                           jmp 0x4000833	       172	reflog.c	FUNCTION_30	IF_10
0x40007d2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007d9	            0xeb4e	                           jmp 0x4000829	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007df	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007e2	          0x4863d2	                         movsxd rdx, edx	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007e5	        0x48c1e205	                              shl rdx, 5	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007e9	          0x4801d0	                            add rax, rdx	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007ec	          0x488b10	                    mov rdx, qword [rax]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007f3	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007f6	          0x4863c9	                         movsxd rcx, ecx	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007f9	        0x48c1e105	                              shl rcx, 5	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x40007fd	          0x4801c8	                            add rax, rcx	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000800	          0x488b00	                    mov rax, qword [rax]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000803	            0x8b00	                    mov eax, dword [rax]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000805	          0xc1e804	                              shr eax, 4	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000808	      0x25ffffff07	                      and eax, 0x7ffffff	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x400080d	          0x83c801	                               or eax, 1	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000810	      0x25ffffff07	                      and eax, 0x7ffffff	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000815	          0xc1e004	                              shl eax, 4	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000818	            0x89c1	                            mov ecx, eax	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x400081a	            0x8b02	                    mov eax, dword [rdx]	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x400081c	      0x250f000080	                     and eax, 0x8000000f	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000821	             0x9c8	                             or eax, ecx	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000823	            0x8902	                    mov dword [rdx], eax	       183	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000825	        0x8345ac01	               add dword [rbp - 0x54], 1	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000829	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x400082c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x400082f	            0x39c2	                            cmp edx, eax	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000831	            0x77a8	                            ja 0x40007db	       182	reflog.c	FUNCTION_30	ELSE_2	FOR_5
0x4000833	        0x488d45d0	                   lea rax, [rbp - 0x30]	       186	reflog.c	FUNCTION_30	CALL_11
0x4000837	          0x4889c7	                            mov rdi, rax	       186	reflog.c	FUNCTION_30	CALL_11
0x400083a	      0xe800000000	                          call 0x400083f	       186	reflog.c	FUNCTION_30	CALL_11
0x400083f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       187	reflog.c	FUNCTION_30	CALL_12
0x4000843	          0x4889c7	                            mov rdi, rax	       187	reflog.c	FUNCTION_30	CALL_12
0x4000846	      0xe800000000	                          call 0x400084b	       187	reflog.c	FUNCTION_30	CALL_12
0x400084b	        0x837da800	               cmp dword [rbp - 0x58], 0	       188	reflog.c	FUNCTION_30
0x400084f	           0xf94c0	                                 sete al	       188	reflog.c	FUNCTION_30
0x4000852	           0xfb6c0	                           movzx eax, al	       188	reflog.c	FUNCTION_30
0x4000855	        0x488b75f8	                mov rsi, qword [rbp - 8]	       189	reflog.c	FUNCTION_30
0x4000859	    0x644833342528	                xor rsi, qword fs:[0x28]	       189	reflog.c	FUNCTION_30
0x4000862	            0x7405	                            je 0x4000869	       189	reflog.c	FUNCTION_30
0x4000864	      0xe800000000	                          call 0x4000869	       189	reflog.c	FUNCTION_30
0x4000869	              0xc9	                                   leave	       189	reflog.c	FUNCTION_30
0x400086a	              0xc3	                                     ret	       189	reflog.c	FUNCTION_30
count_reflog_ent	functions,0:CALL,0:IF,1:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	26
0x4001a91	              0x55	                                push rbp	       613	reflog.c	FUNCTION_43
0x4001a92	          0x4889e5	                            mov rbp, rsp	       613	reflog.c	FUNCTION_43
0x4001a95	        0x48897de8	             mov qword [rbp - 0x18], rdi	       613	reflog.c	FUNCTION_43
0x4001a99	        0x488975e0	             mov qword [rbp - 0x20], rsi	       613	reflog.c	FUNCTION_43
0x4001a9d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       613	reflog.c	FUNCTION_43
0x4001aa1	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       613	reflog.c	FUNCTION_43
0x4001aa5	        0x448945cc	             mov dword [rbp - 0x34], r8d	       613	reflog.c	FUNCTION_43
0x4001aa9	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       613	reflog.c	FUNCTION_43
0x4001aad	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       614	reflog.c	FUNCTION_43
0x4001ab1	        0x488945f8	                mov qword [rbp - 8], rax	       614	reflog.c	FUNCTION_43
0x4001ab5	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	reflog.c	FUNCTION_43	IF_1
0x4001ab9	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_43	IF_1
0x4001ac0	          0x4885c0	                           test rax, rax	       615	reflog.c	FUNCTION_43	IF_1
0x4001ac3	            0x7411	                            je 0x4001ad6	       615	reflog.c	FUNCTION_43	IF_1
0x4001ac5	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	reflog.c	FUNCTION_43	IF_1
0x4001ac9	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_43	IF_1
0x4001ad0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       615	reflog.c	FUNCTION_43	IF_1
0x4001ad4	            0x7617	                           jbe 0x4001aed	       615	reflog.c	FUNCTION_43	IF_1
0x4001ad6	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	reflog.c	FUNCTION_43	IF_1
0x4001ada	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       616	reflog.c	FUNCTION_43	IF_1
0x4001ae0	          0x8d5001	                      lea edx, [rax + 1]	       616	reflog.c	FUNCTION_43	IF_1
0x4001ae3	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	reflog.c	FUNCTION_43	IF_1
0x4001ae7	    0x8990e0080000	            mov dword [rax + 0x8e0], edx	       616	reflog.c	FUNCTION_43	IF_1
0x4001aed	      0xb800000000	                              mov eax, 0	       617	reflog.c	FUNCTION_43
0x4001af2	              0x5d	                                 pop rbp	       618	reflog.c	FUNCTION_43
0x4001af3	              0xc3	                                     ret	       618	reflog.c	FUNCTION_43
reflog_expiry_prepare	functions,0:CALL,6:IF,5:ELSE,3:FOR,1:WHILE,0:DO,0:SWITCH,0	98
0x4000d55	              0x55	                                push rbp	       333	reflog.c	FUNCTION_36
0x4000d56	          0x4889e5	                            mov rbp, rsp	       333	reflog.c	FUNCTION_36
0x4000d59	        0x4883ec30	                           sub rsp, 0x30	       333	reflog.c	FUNCTION_36
0x4000d5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       333	reflog.c	FUNCTION_36
0x4000d61	        0x488975e0	             mov qword [rbp - 0x20], rsi	       333	reflog.c	FUNCTION_36
0x4000d65	        0x488955d8	             mov qword [rbp - 0x28], rdx	       333	reflog.c	FUNCTION_36
0x4000d69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	reflog.c	FUNCTION_36
0x4000d6d	        0x488945f8	                mov qword [rbp - 8], rax	       334	reflog.c	FUNCTION_36
0x4000d71	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d75	    0x488b80d80800	           mov rax, qword [rax + 0x8d8] 	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d7c	          0x4885c0	                           test rax, rax	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d7f	            0x7415	                            je 0x4000d96	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d85	      0xbe00000000	                              mov esi, 0	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d8a	          0x4889c7	                            mov rdi, rax	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d8d	      0xe800000000	                          call 0x4000d92	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d92	            0x85c0	                           test eax, eax	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d94	            0x751b	                           jne 0x4000db1	       336	reflog.c	FUNCTION_36	IF_1	CALL_1
0x4000d96	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	reflog.c	FUNCTION_36	IF_1
0x4000d9a	    0x48c780e80800	              mov qword [rax + 0x8e8], 0	       337	reflog.c	FUNCTION_36	IF_1
0x4000da5	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	reflog.c	FUNCTION_36	IF_1
0x4000da9	    0xc70002000000	                      mov dword [rax], 2	       338	reflog.c	FUNCTION_36	IF_1
0x4000daf	            0xeb45	                           jmp 0x4000df6	       338	reflog.c	FUNCTION_36	IF_1
0x4000db1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000db5	      0xbe01000000	                              mov esi, 1	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dba	          0x4889c7	                            mov rdi, rax	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dbd	      0xe800000000	                          call 0x4000dc2	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dc2	          0x4889c2	                            mov rdx, rax	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dc5	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dc9	    0x488990e80800	            mov qword [rax + 0x8e8], rdx	       340	reflog.c	FUNCTION_36	ELSE_1	CALL_2
0x4000dd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000dd4	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       341	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000ddb	          0x4885c0	                           test rax, rax	       341	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000dde	            0x750c	                           jne 0x4000dec	       341	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000de0	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000de4	    0xc70001000000	                      mov dword [rax], 1	       342	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000dea	            0xeb0a	                           jmp 0x4000df6	       342	reflog.c	FUNCTION_36	ELSE_1	IF_2
0x4000dec	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	reflog.c	FUNCTION_36	ELSE_1	ELSE_2
0x4000df0	    0xc70000000000	                      mov dword [rax], 0	       344	reflog.c	FUNCTION_36	ELSE_1	ELSE_2
0x4000df6	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	reflog.c	FUNCTION_36	IF_3
0x4000dfa	    0x488b90d80800	           mov rdx, qword [rax + 0x8d8] 	       347	reflog.c	FUNCTION_36	IF_3
0x4000e01	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	reflog.c	FUNCTION_36	IF_3
0x4000e05	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       347	reflog.c	FUNCTION_36	IF_3
0x4000e0c	          0x4839c2	                            cmp rdx, rax	       347	reflog.c	FUNCTION_36	IF_3
0x4000e0f	            0x770a	                            ja 0x4000e1b	       347	reflog.c	FUNCTION_36	IF_3
0x4000e11	        0x488b45f8	                mov rax, qword [rbp - 8]	       348	reflog.c	FUNCTION_36	IF_3
0x4000e15	    0xc70001000000	                      mov dword [rax], 1	       348	reflog.c	FUNCTION_36	IF_3
0x4000e1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       350	reflog.c	FUNCTION_36
0x4000e1f	    0x48c740080000	                  mov qword [rax + 8], 0	       350	reflog.c	FUNCTION_36
0x4000e27	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	reflog.c	FUNCTION_36
0x4000e2b	    0x48c780f00800	              mov qword [rax + 0x8f0], 0	       351	reflog.c	FUNCTION_36
0x4000e36	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	reflog.c	FUNCTION_36	IF_4
0x4000e3a	            0x8b00	                    mov eax, dword [rax]	       352	reflog.c	FUNCTION_36	IF_4
0x4000e3c	          0x83f801	                              cmp eax, 1	       352	reflog.c	FUNCTION_36	IF_4
0x4000e3f	     0xf849f000000	                            je 0x4000ee4	       352	reflog.c	FUNCTION_36	IF_4
0x4000e45	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	reflog.c	FUNCTION_36	IF_4	IF_5
0x4000e49	            0x8b00	                    mov eax, dword [rax]	       353	reflog.c	FUNCTION_36	IF_4	IF_5
0x4000e4b	          0x83f802	                              cmp eax, 2	       353	reflog.c	FUNCTION_36	IF_4	IF_5
0x4000e4e	            0x7557	                           jne 0x4000ea7	       353	reflog.c	FUNCTION_36	IF_4	IF_5
0x4000e50	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_3
0x4000e54	    0x4805f0080000	                          add rax, 0x8f0	       356	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_3
0x4000e5a	          0x4889c6	                            mov rsi, rax	       356	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_3
0x4000e5d	      0xbf00000000	                              mov edi, 0	       356	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_3
0x4000e62	      0xe800000000	                          call 0x4000e67	       356	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_3
0x4000e67	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e6b	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e72	        0x488945f0	             mov qword [rbp - 0x10], rax	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e76	            0xeb26	                           jmp 0x4000e9e	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e78	        0x488b45f8	                mov rax, qword [rbp - 8]	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e7c	        0x488d5008	                      lea rdx, [rax + 8]	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e84	          0x488b00	                    mov rax, qword [rax]	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e87	          0x4889d6	                            mov rsi, rdx	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e8a	          0x4889c7	                            mov rdi, rax	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e8d	      0xe800000000	                          call 0x4000e92	       358	reflog.c	FUNCTION_36	IF_4	IF_5	CALL_4
0x4000e92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e96	        0x488b4008	                mov rax, qword [rax + 8]	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e9a	        0x488945f0	             mov qword [rbp - 0x10], rax	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000e9e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000ea3	            0x75d3	                           jne 0x4000e78	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000ea5	            0xeb1e	                           jmp 0x4000ec5	       357	reflog.c	FUNCTION_36	IF_4	IF_5	FOR_1
0x4000ea7	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000eab	        0x488d5008	                      lea rdx, [rax + 8]	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000eaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000eb3	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000eba	          0x4889d6	                            mov rsi, rdx	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000ebd	          0x4889c7	                            mov rdi, rax	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000ec0	      0xe800000000	                          call 0x4000ec5	       360	reflog.c	FUNCTION_36	IF_4	ELSE_3	CALL_5
0x4000ec5	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	reflog.c	FUNCTION_36	IF_4
0x4000ec9	    0x488b90d00800	           mov rdx, qword [rax + 0x8d0] 	       362	reflog.c	FUNCTION_36	IF_4
0x4000ed0	        0x488b45f8	                mov rax, qword [rbp - 8]	       362	reflog.c	FUNCTION_36	IF_4
0x4000ed4	        0x48895010	             mov qword [rax + 0x10], rdx	       362	reflog.c	FUNCTION_36	IF_4
0x4000ed8	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	reflog.c	FUNCTION_36	IF_4	CALL_6
0x4000edc	          0x4889c7	                            mov rdi, rax	       363	reflog.c	FUNCTION_36	IF_4	CALL_6
0x4000edf	      0xe8faf9ffff	                 call sym.mark_reachable	       363	reflog.c	FUNCTION_36	IF_4	CALL_6
0x4000ee4	              0x90	                                     nop	       365	reflog.c	FUNCTION_36
0x4000ee5	              0xc9	                                   leave	       365	reflog.c	FUNCTION_36
0x4000ee6	              0xc3	                                     ret	       365	reflog.c	FUNCTION_36
reflog_expiry_cleanup	functions,0:CALL,3:IF,2:ELSE,1:FOR,1:WHILE,0:DO,0:SWITCH,0	41
0x4000ee7	              0x55	                                push rbp	       368	reflog.c	FUNCTION_37
0x4000ee8	          0x4889e5	                            mov rbp, rsp	       368	reflog.c	FUNCTION_37
0x4000eeb	        0x4883ec20	                           sub rsp, 0x20	       368	reflog.c	FUNCTION_37
0x4000eef	        0x48897de8	             mov qword [rbp - 0x18], rdi	       368	reflog.c	FUNCTION_37
0x4000ef3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       369	reflog.c	FUNCTION_37
0x4000ef7	        0x488945f8	                mov qword [rbp - 8], rax	       369	reflog.c	FUNCTION_37
0x4000efb	        0x488b45f8	                mov rax, qword [rbp - 8]	       371	reflog.c	FUNCTION_37	IF_1
0x4000eff	            0x8b00	                    mov eax, dword [rax]	       371	reflog.c	FUNCTION_37	IF_1
0x4000f01	          0x83f801	                              cmp eax, 1	       371	reflog.c	FUNCTION_37	IF_1
0x4000f04	            0x7470	                            je 0x4000f76	       371	reflog.c	FUNCTION_37	IF_1
0x4000f06	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	reflog.c	FUNCTION_37	IF_1	IF_2
0x4000f0a	            0x8b00	                    mov eax, dword [rax]	       372	reflog.c	FUNCTION_37	IF_1	IF_2
0x4000f0c	          0x83f802	                              cmp eax, 2	       372	reflog.c	FUNCTION_37	IF_1	IF_2
0x4000f0f	            0x754d	                           jne 0x4000f5e	       372	reflog.c	FUNCTION_37	IF_1	IF_2
0x4000f11	        0x488b45f8	                mov rax, qword [rbp - 8]	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f15	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f1c	        0x488945f0	             mov qword [rbp - 0x10], rax	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f20	            0xeb20	                           jmp 0x4000f42	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       375	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x4000f26	          0x488b00	                    mov rax, qword [rax]	       375	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x4000f29	      0xbe00100000	                         mov esi, 0x1000	       375	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x4000f2e	          0x4889c7	                            mov rdi, rax	       375	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x4000f31	      0xe800000000	                          call 0x4000f36	       375	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_1
0x4000f36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f3a	        0x488b4008	                mov rax, qword [rax + 8]	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f3e	        0x488945f0	             mov qword [rbp - 0x10], rax	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f42	      0x48837df000	               cmp qword [rbp - 0x10], 0	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f47	            0x75d9	                           jne 0x4000f22	       374	reflog.c	FUNCTION_37	IF_1	IF_2	FOR_1
0x4000f49	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4000f4d	    0x488b80f00800	           mov rax, qword [rax + 0x8f0] 	       376	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4000f54	          0x4889c7	                            mov rdi, rax	       376	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4000f57	      0xe800000000	                          call 0x4000f5c	       376	reflog.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4000f5c	            0xeb18	                           jmp 0x4000f76	       381	reflog.c	FUNCTION_37
0x4000f5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	reflog.c	FUNCTION_37	IF_1	ELSE_1	CALL_3
0x4000f62	    0x488b80e80800	           mov rax, qword [rax + 0x8e8] 	       378	reflog.c	FUNCTION_37	IF_1	ELSE_1	CALL_3
0x4000f69	      0xbe00100000	                         mov esi, 0x1000	       378	reflog.c	FUNCTION_37	IF_1	ELSE_1	CALL_3
0x4000f6e	          0x4889c7	                            mov rdi, rax	       378	reflog.c	FUNCTION_37	IF_1	ELSE_1	CALL_3
0x4000f71	      0xe800000000	                          call 0x4000f76	       378	reflog.c	FUNCTION_37	IF_1	ELSE_1	CALL_3
0x4000f76	              0x90	                                     nop	       381	reflog.c	FUNCTION_37
0x4000f77	              0xc9	                                   leave	       381	reflog.c	FUNCTION_37
0x4000f78	              0xc3	                                     ret	       381	reflog.c	FUNCTION_37
_	functions,0:CALL,0:IF,1:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	15
0x40000e1	              0x55	                                push rbp	        51	gettext.h	FUNCTION_76
0x40000e2	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_76
0x40000e5	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_76
0x40000e9	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_76
0x40000ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_76	IF_1
0x40000f1	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_76	IF_1
0x40000f4	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_76	IF_1
0x40000f6	            0x7507	                           jne 0x40000ff	        52	gettext.h	FUNCTION_76	IF_1
0x40000f8	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_76	IF_1
0x40000fd	            0xeb0c	                           jmp 0x400010b	        53	gettext.h	FUNCTION_76	IF_1
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_76
0x4000103	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_76
0x4000106	      0xe800000000	                          call 0x400010b	        54	gettext.h	FUNCTION_76
0x400010b	              0xc9	                                   leave	        55	gettext.h	FUNCTION_76
0x400010c	              0xc3	                                     ret	        55	gettext.h	FUNCTION_76
read_object_file	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	14
0x40001af	              0x55	                                push rbp	      1199	cache.h	FUNCTION_23
0x40001b0	          0x4889e5	                            mov rbp, rsp	      1199	cache.h	FUNCTION_23
0x40001b3	        0x4883ec20	                           sub rsp, 0x20	      1199	cache.h	FUNCTION_23
0x40001b7	        0x48897df8	                mov qword [rbp - 8], rdi	      1199	cache.h	FUNCTION_23
0x40001bb	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1199	cache.h	FUNCTION_23
0x40001bf	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1199	cache.h	FUNCTION_23
0x40001c3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1200	cache.h	FUNCTION_23	CALL_1
0x40001c7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1200	cache.h	FUNCTION_23	CALL_1
0x40001cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	cache.h	FUNCTION_23	CALL_1
0x40001cf	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_23	CALL_1
0x40001d4	          0x4889c7	                            mov rdi, rax	      1200	cache.h	FUNCTION_23	CALL_1
0x40001d7	      0xe800000000	                          call 0x40001dc	      1200	cache.h	FUNCTION_23	CALL_1
0x40001dc	              0xc9	                                   leave	      1201	cache.h	FUNCTION_23
0x40001dd	              0xc3	                                     ret	      1201	cache.h	FUNCTION_23
is_null_oid	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	13
0x4000137	              0x55	                                push rbp	       989	cache.h	FUNCTION_12
0x4000138	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_12
0x400013b	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_12
0x400013f	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_12
0x4000143	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_12	CALL_1
0x4000147	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_12	CALL_1
0x400014c	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_12	CALL_1
0x400014f	      0xe8b9ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_12	CALL_1
0x4000154	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_12	CALL_1
0x4000156	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_12	CALL_1
0x4000159	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_12	CALL_1
0x400015c	              0xc9	                                   leave	       991	cache.h	FUNCTION_12
0x400015d	              0xc3	                                     ret	       991	cache.h	FUNCTION_12
mark_reachable	functions,0:CALL,4:IF,4:ELSE,0:FOR,1:WHILE,2:DO,0:SWITCH,0	134
0x40008de	              0x55	                                push rbp	       222	reflog.c	FUNCTION_32
0x40008df	          0x4889e5	                            mov rbp, rsp	       222	reflog.c	FUNCTION_32
0x40008e2	        0x4883ec40	                           sub rsp, 0x40	       222	reflog.c	FUNCTION_32
0x40008e6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       222	reflog.c	FUNCTION_32
0x40008ea	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	reflog.c	FUNCTION_32
0x40008f3	        0x488945f8	                mov qword [rbp - 8], rax	       222	reflog.c	FUNCTION_32
0x40008f7	            0x31c0	                            xor eax, eax	       222	reflog.c	FUNCTION_32
0x40008f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       224	reflog.c	FUNCTION_32
0x40008fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       224	reflog.c	FUNCTION_32
0x4000901	        0x488945e8	             mov qword [rbp - 0x18], rax	       224	reflog.c	FUNCTION_32
0x4000905	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       225	reflog.c	FUNCTION_32
0x400090d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       227	reflog.c	FUNCTION_32	FOR_1
0x4000911	        0x488b4008	                mov rax, qword [rax + 8]	       227	reflog.c	FUNCTION_32	FOR_1
0x4000915	        0x488945d0	             mov qword [rbp - 0x30], rax	       227	reflog.c	FUNCTION_32	FOR_1
0x4000919	            0xeb3e	                           jmp 0x4000959	       227	reflog.c	FUNCTION_32	FOR_1
0x400091b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	reflog.c	FUNCTION_32	FOR_1
0x400091f	          0x488b10	                    mov rdx, qword [rax]	       228	reflog.c	FUNCTION_32	FOR_1
0x4000922	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	reflog.c	FUNCTION_32	FOR_1
0x4000926	          0x488b00	                    mov rax, qword [rax]	       228	reflog.c	FUNCTION_32	FOR_1
0x4000929	            0x8b00	                    mov eax, dword [rax]	       228	reflog.c	FUNCTION_32	FOR_1
0x400092b	          0xc1e804	                              shr eax, 4	       228	reflog.c	FUNCTION_32	FOR_1
0x400092e	      0x25ffffff07	                      and eax, 0x7ffffff	       228	reflog.c	FUNCTION_32	FOR_1
0x4000933	      0x25ffefff07	                      and eax, 0x7ffefff	       228	reflog.c	FUNCTION_32	FOR_1
0x4000938	      0x25ffffff07	                      and eax, 0x7ffffff	       228	reflog.c	FUNCTION_32	FOR_1
0x400093d	          0xc1e004	                              shl eax, 4	       228	reflog.c	FUNCTION_32	FOR_1
0x4000940	            0x89c1	                            mov ecx, eax	       228	reflog.c	FUNCTION_32	FOR_1
0x4000942	            0x8b02	                    mov eax, dword [rdx]	       228	reflog.c	FUNCTION_32	FOR_1
0x4000944	      0x250f000080	                     and eax, 0x8000000f	       228	reflog.c	FUNCTION_32	FOR_1
0x4000949	             0x9c8	                             or eax, ecx	       228	reflog.c	FUNCTION_32	FOR_1
0x400094b	            0x8902	                    mov dword [rdx], eax	       228	reflog.c	FUNCTION_32	FOR_1
0x400094d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       227	reflog.c	FUNCTION_32	FOR_1
0x4000951	        0x488b4008	                mov rax, qword [rax + 8]	       227	reflog.c	FUNCTION_32	FOR_1
0x4000955	        0x488945d0	             mov qword [rbp - 0x30], rax	       227	reflog.c	FUNCTION_32	FOR_1
0x4000959	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       227	reflog.c	FUNCTION_32	FOR_1
0x400095d	          0x4885c0	                           test rax, rax	       227	reflog.c	FUNCTION_32	FOR_1
0x4000960	            0x75b9	                           jne 0x400091b	       227	reflog.c	FUNCTION_32	FOR_1
0x4000962	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	reflog.c	FUNCTION_32
0x4000966	        0x488b4008	                mov rax, qword [rax + 8]	       230	reflog.c	FUNCTION_32
0x400096a	        0x488945d0	             mov qword [rbp - 0x30], rax	       230	reflog.c	FUNCTION_32
0x400096e	      0xe91b010000	                           jmp 0x4000a8e	       231	reflog.c	FUNCTION_32	WHILE_1
0x4000973	        0x488d45d0	                   lea rax, [rbp - 0x30]	       233	reflog.c	FUNCTION_32	WHILE_1	CALL_1
0x4000977	          0x4889c7	                            mov rdi, rax	       233	reflog.c	FUNCTION_32	WHILE_1	CALL_1
0x400097a	      0xe800000000	                          call 0x400097f	       233	reflog.c	FUNCTION_32	WHILE_1	CALL_1
0x400097f	        0x488945f0	             mov qword [rbp - 0x10], rax	       233	reflog.c	FUNCTION_32	WHILE_1	CALL_1
0x4000983	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x4000987	            0x8b00	                    mov eax, dword [rax]	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x4000989	          0xc1e804	                              shr eax, 4	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x400098c	      0x25ffffff07	                      and eax, 0x7ffffff	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x4000991	      0x2500100000	                         and eax, 0x1000	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x4000996	            0x85c0	                           test eax, eax	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x4000998	            0x7405	                            je 0x400099f	       234	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x400099a	      0xe9ef000000	                           jmp 0x4000a8e	       235	reflog.c	FUNCTION_32	WHILE_1	IF_1
0x400099f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       236	reflog.c	FUNCTION_32	WHILE_1	IF_2	CALL_2
0x40009a3	          0x4889c7	                            mov rdi, rax	       236	reflog.c	FUNCTION_32	WHILE_1	IF_2	CALL_2
0x40009a6	      0xe852f8ffff	                   call sym.parse_commit	       236	reflog.c	FUNCTION_32	WHILE_1	IF_2	CALL_2
0x40009ab	            0x85c0	                           test eax, eax	       236	reflog.c	FUNCTION_32	WHILE_1	IF_2	CALL_2
0x40009ad	            0x7405	                            je 0x40009b4	       236	reflog.c	FUNCTION_32	WHILE_1	IF_2	CALL_2
0x40009af	      0xe9da000000	                           jmp 0x4000a8e	       237	reflog.c	FUNCTION_32	WHILE_1	IF_2
0x40009b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009b8	            0x8b00	                    mov eax, dword [rax]	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009ba	          0xc1e804	                              shr eax, 4	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009bd	      0x25ffffff07	                      and eax, 0x7ffffff	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009c2	          0x80cc10	                             or ah, 0x10	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009c5	            0x89c2	                            mov edx, eax	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009cb	    0x81e2ffffff07	                      and edx, 0x7ffffff	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009d1	            0x89d1	                            mov ecx, edx	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009d3	          0xc1e104	                              shl ecx, 4	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009d6	            0x8b10	                    mov edx, dword [rax]	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009d8	    0x81e20f000080	                     and edx, 0x8000000f	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009de	             0x9ca	                             or edx, ecx	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009e0	            0x8910	                    mov dword [rax], edx	       238	reflog.c	FUNCTION_32	WHILE_1
0x40009e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	reflog.c	FUNCTION_32	WHILE_1	IF_3
0x40009e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       239	reflog.c	FUNCTION_32	WHILE_1	IF_3
0x40009ea	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       239	reflog.c	FUNCTION_32	WHILE_1	IF_3
0x40009ee	            0x7318	                           jae 0x4000a08	       239	reflog.c	FUNCTION_32	WHILE_1	IF_3
0x40009f0	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       240	reflog.c	FUNCTION_32	WHILE_1	IF_3	CALL_3
0x40009f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	reflog.c	FUNCTION_32	WHILE_1	IF_3	CALL_3
0x40009f8	          0x4889d6	                            mov rsi, rdx	       240	reflog.c	FUNCTION_32	WHILE_1	IF_3	CALL_3
0x40009fb	          0x4889c7	                            mov rdi, rax	       240	reflog.c	FUNCTION_32	WHILE_1	IF_3	CALL_3
0x40009fe	      0xe800000000	                          call 0x4000a03	       240	reflog.c	FUNCTION_32	WHILE_1	IF_3	CALL_3
0x4000a03	      0xe986000000	                           jmp 0x4000a8e	       241	reflog.c	FUNCTION_32	WHILE_1	IF_3
0x4000a08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a0c	            0x8b00	                    mov eax, dword [rax]	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a0e	          0xc1e804	                              shr eax, 4	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a11	      0x25ffffff07	                      and eax, 0x7ffffff	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a16	          0x80cc10	                             or ah, 0x10	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a19	            0x89c2	                            mov edx, eax	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a1f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a25	            0x89d1	                            mov ecx, edx	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a27	          0xc1e104	                              shl ecx, 4	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a2a	            0x8b10	                    mov edx, dword [rax]	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a2c	    0x81e20f000080	                     and edx, 0x8000000f	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a32	             0x9ca	                             or edx, ecx	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a34	            0x8910	                    mov dword [rax], edx	       243	reflog.c	FUNCTION_32	WHILE_1
0x4000a36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       244	reflog.c	FUNCTION_32	WHILE_1
0x4000a3a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       244	reflog.c	FUNCTION_32	WHILE_1
0x4000a3e	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	reflog.c	FUNCTION_32	WHILE_1
0x4000a42	            0xeb43	                           jmp 0x4000a87	       245	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a44	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       246	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a48	          0x488b00	                    mov rax, qword [rax]	       246	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a4b	        0x488945f0	             mov qword [rbp - 0x10], rax	       246	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a53	        0x488b4008	                mov rax, qword [rax + 8]	       247	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a57	        0x488945e0	             mov qword [rbp - 0x20], rax	       247	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a5f	            0x8b00	                    mov eax, dword [rax]	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a61	          0xc1e804	                              shr eax, 4	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a64	      0x25ffffff07	                      and eax, 0x7ffffff	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a69	      0x2500100000	                         and eax, 0x1000	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a6e	            0x85c0	                           test eax, eax	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a70	            0x7402	                            je 0x4000a74	       248	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a72	            0xeb13	                           jmp 0x4000a87	       249	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	IF_4
0x4000a74	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       250	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	CALL_4
0x4000a78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       250	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	CALL_4
0x4000a7c	          0x4889d6	                            mov rsi, rdx	       250	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	CALL_4
0x4000a7f	          0x4889c7	                            mov rdi, rax	       250	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	CALL_4
0x4000a82	      0xe800000000	                          call 0x4000a87	       250	reflog.c	FUNCTION_32	WHILE_1	WHILE_2	CALL_4
0x4000a87	      0x48837de000	               cmp qword [rbp - 0x20], 0	       245	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a8c	            0x75b6	                           jne 0x4000a44	       245	reflog.c	FUNCTION_32	WHILE_1	WHILE_2
0x4000a8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       231	reflog.c	FUNCTION_32	WHILE_1
0x4000a92	          0x4885c0	                           test rax, rax	       231	reflog.c	FUNCTION_32	WHILE_1
0x4000a95	     0xf85d8feffff	                           jne 0x4000973	       231	reflog.c	FUNCTION_32	WHILE_1
0x4000a9b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       253	reflog.c	FUNCTION_32
0x4000a9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       253	reflog.c	FUNCTION_32
0x4000aa3	        0x48895008	                mov qword [rax + 8], rdx	       253	reflog.c	FUNCTION_32
0x4000aa7	              0x90	                                     nop	       254	reflog.c	FUNCTION_32
0x4000aa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       254	reflog.c	FUNCTION_32
0x4000aac	    0x644833042528	                xor rax, qword fs:[0x28]	       254	reflog.c	FUNCTION_32
0x4000ab5	            0x7405	                            je 0x4000abc	       254	reflog.c	FUNCTION_32
0x4000ab7	      0xe800000000	                          call 0x4000abc	       254	reflog.c	FUNCTION_32
0x4000abc	              0xc9	                                   leave	       254	reflog.c	FUNCTION_32
0x4000abd	              0xc3	                                     ret	       254	reflog.c	FUNCTION_32
should_expire_reflog_ent	functions,0:CALL,4:IF,6:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	95
0x4000b83	              0x55	                                push rbp	       291	reflog.c	FUNCTION_34
0x4000b84	          0x4889e5	                            mov rbp, rsp	       291	reflog.c	FUNCTION_34
0x4000b87	        0x4883ec60	                           sub rsp, 0x60	       291	reflog.c	FUNCTION_34
0x4000b8b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       291	reflog.c	FUNCTION_34
0x4000b8f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       291	reflog.c	FUNCTION_34
0x4000b93	        0x488955c8	             mov qword [rbp - 0x38], rdx	       291	reflog.c	FUNCTION_34
0x4000b97	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       291	reflog.c	FUNCTION_34
0x4000b9b	        0x448945bc	             mov dword [rbp - 0x44], r8d	       291	reflog.c	FUNCTION_34
0x4000b9f	        0x4c894db0	              mov qword [rbp - 0x50], r9	       291	reflog.c	FUNCTION_34
0x4000ba3	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       291	reflog.c	FUNCTION_34
0x4000ba7	        0x488945a8	             mov qword [rbp - 0x58], rax	       291	reflog.c	FUNCTION_34
0x4000bab	    0x64488b042528	                mov rax, qword fs:[0x28]	       291	reflog.c	FUNCTION_34
0x4000bb4	        0x488945f8	                mov qword [rbp - 8], rax	       291	reflog.c	FUNCTION_34
0x4000bb8	            0x31c0	                            xor eax, eax	       291	reflog.c	FUNCTION_34
0x4000bba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       292	reflog.c	FUNCTION_34
0x4000bbe	        0x488945f0	             mov qword [rbp - 0x10], rax	       292	reflog.c	FUNCTION_34
0x4000bc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       295	reflog.c	FUNCTION_34	IF_1
0x4000bc6	    0x488b80d00800	           mov rax, qword [rax + 0x8d0] 	       295	reflog.c	FUNCTION_34	IF_1
0x4000bcd	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       295	reflog.c	FUNCTION_34	IF_1
0x4000bd1	            0x760a	                           jbe 0x4000bdd	       295	reflog.c	FUNCTION_34	IF_1
0x4000bd3	      0xb801000000	                              mov eax, 1	       296	reflog.c	FUNCTION_34	IF_1
0x4000bd8	      0xe9f5000000	                           jmp 0x4000cd2	       296	reflog.c	FUNCTION_34	IF_1
0x4000bdd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       298	reflog.c	FUNCTION_34
0x4000be5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	reflog.c	FUNCTION_34
0x4000be9	        0x488945e0	             mov qword [rbp - 0x20], rax	       298	reflog.c	FUNCTION_34
0x4000bed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       299	reflog.c	FUNCTION_34	IF_2
0x4000bf1	    0x8b80c8080000	           mov eax, dword [rax + 0x8c8] 	       299	reflog.c	FUNCTION_34	IF_2
0x4000bf7	            0x85c0	                           test eax, eax	       299	reflog.c	FUNCTION_34	IF_2
0x4000bf9	            0x7438	                            je 0x4000c33	       299	reflog.c	FUNCTION_34	IF_2
0x4000bfb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000bff	        0x488d45e0	                   lea rax, [rbp - 0x20]	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c03	          0x4889d6	                            mov rsi, rdx	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c06	          0x4889c7	                            mov rdi, rax	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c09	      0xe85dfcffff	                     call sym.keep_entry	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c0e	            0x85c0	                           test eax, eax	       299	reflog.c	FUNCTION_34	IF_2
0x4000c10	            0x7417	                            je 0x4000c29	       299	reflog.c	FUNCTION_34	IF_2
0x4000c12	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c16	        0x488d45e8	                   lea rax, [rbp - 0x18]	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c1a	          0x4889d6	                            mov rsi, rdx	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c1d	          0x4889c7	                            mov rdi, rax	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c20	      0xe846fcffff	                     call sym.keep_entry	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c25	            0x85c0	                           test eax, eax	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c27	            0x750a	                           jne 0x4000c33	       300	reflog.c	FUNCTION_34	IF_2	CALL_2
0x4000c29	      0xb801000000	                              mov eax, 1	       301	reflog.c	FUNCTION_34	IF_2
0x4000c2e	      0xe99f000000	                           jmp 0x4000cd2	       301	reflog.c	FUNCTION_34	IF_2
0x4000c33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	reflog.c	FUNCTION_34	IF_3
0x4000c37	    0x488b80d80800	           mov rax, qword [rax + 0x8d8] 	       303	reflog.c	FUNCTION_34	IF_3
0x4000c3e	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       303	reflog.c	FUNCTION_34	IF_3
0x4000c42	            0x764f	                           jbe 0x4000c93	       303	reflog.c	FUNCTION_34	IF_3
0x4000c44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c48	            0x8b00	                    mov eax, dword [rax]	       304	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c4a	          0x83f801	                              cmp eax, 1	       304	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c4d	            0x7507	                           jne 0x4000c56	       304	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c4f	      0xb801000000	                              mov eax, 1	       305	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c54	            0xeb7c	                           jmp 0x4000cd2	       305	reflog.c	FUNCTION_34	IF_3	IF_4
0x4000c56	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c5a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c62	          0x4889ce	                            mov rsi, rcx	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c65	          0x4889c7	                            mov rdi, rax	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c68	      0xe851feffff	                    call sym.unreachable	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c6d	            0x85c0	                           test eax, eax	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c6f	            0x751b	                           jne 0x4000c8c	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c71	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c75	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c7d	          0x4889ce	                            mov rsi, rcx	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c80	          0x4889c7	                            mov rdi, rax	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c83	      0xe836feffff	                    call sym.unreachable	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c88	            0x85c0	                           test eax, eax	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c8a	            0x7407	                            je 0x4000c93	       306	reflog.c	FUNCTION_34	IF_3	IF_5	CALL_4
0x4000c8c	      0xb801000000	                              mov eax, 1	       307	reflog.c	FUNCTION_34	IF_3	IF_5
0x4000c91	            0xeb3f	                           jmp 0x4000cd2	       307	reflog.c	FUNCTION_34	IF_3	IF_5
0x4000c93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_34	IF_6
0x4000c97	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_34	IF_6
0x4000c9d	            0x85c0	                           test eax, eax	       310	reflog.c	FUNCTION_34	IF_6
0x4000c9f	            0x742c	                            je 0x4000ccd	       310	reflog.c	FUNCTION_34	IF_6
0x4000ca1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_34	IF_6
0x4000ca5	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_34	IF_6
0x4000cab	          0x8d50ff	                      lea edx, [rax - 1]	       310	reflog.c	FUNCTION_34	IF_6
0x4000cae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_34	IF_6
0x4000cb2	    0x8990e0080000	            mov dword [rax + 0x8e0], edx	       310	reflog.c	FUNCTION_34	IF_6
0x4000cb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       310	reflog.c	FUNCTION_34	IF_6
0x4000cbc	    0x8b80e0080000	           mov eax, dword [rax + 0x8e0] 	       310	reflog.c	FUNCTION_34	IF_6
0x4000cc2	            0x85c0	                           test eax, eax	       310	reflog.c	FUNCTION_34	IF_6
0x4000cc4	            0x7507	                           jne 0x4000ccd	       310	reflog.c	FUNCTION_34	IF_6
0x4000cc6	      0xb801000000	                              mov eax, 1	       311	reflog.c	FUNCTION_34	IF_6
0x4000ccb	            0xeb05	                           jmp 0x4000cd2	       311	reflog.c	FUNCTION_34	IF_6
0x4000ccd	      0xb800000000	                              mov eax, 0	       313	reflog.c	FUNCTION_34
0x4000cd2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       314	reflog.c	FUNCTION_34
0x4000cd6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       314	reflog.c	FUNCTION_34
0x4000cdf	            0x7405	                            je 0x4000ce6	       314	reflog.c	FUNCTION_34
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       314	reflog.c	FUNCTION_34
0x4000ce6	              0xc9	                                   leave	       314	reflog.c	FUNCTION_34
0x4000ce7	              0xc3	                                     ret	       314	reflog.c	FUNCTION_34
hashcpy	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	14
0x400015e	              0x55	                                push rbp	       994	cache.h	FUNCTION_13
0x400015f	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_13
0x4000162	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_13
0x4000166	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_13
0x400016a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_13
0x400016e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_13	CALL_1
0x4000172	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_13	CALL_1
0x4000176	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_13	CALL_1
0x400017b	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_13	CALL_1
0x400017e	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_13	CALL_1
0x4000181	      0xe800000000	                          call 0x4000186	       995	cache.h	FUNCTION_13	CALL_1
0x4000186	              0x90	                                     nop	       996	cache.h	FUNCTION_13
0x4000187	              0xc9	                                   leave	       996	cache.h	FUNCTION_13
0x4000188	              0xc3	                                     ret	       996	cache.h	FUNCTION_13
cmd_reflog_exists	functions,0:CALL,6:IF,4:ELSE,2:FOR,1:WHILE,0:DO,0:SWITCH,0	75
0x4001ee1	              0x55	                                push rbp	       688	reflog.c	FUNCTION_45
0x4001ee2	          0x4889e5	                            mov rbp, rsp	       688	reflog.c	FUNCTION_45
0x4001ee5	        0x4883ec30	                           sub rsp, 0x30	       688	reflog.c	FUNCTION_45
0x4001ee9	          0x897dec	             mov dword [rbp - 0x14], edi	       688	reflog.c	FUNCTION_45
0x4001eec	        0x488975e0	             mov qword [rbp - 0x20], rsi	       688	reflog.c	FUNCTION_45
0x4001ef0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       688	reflog.c	FUNCTION_45
0x4001ef4	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       689	reflog.c	FUNCTION_45
0x4001efb	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       691	reflog.c	FUNCTION_45	FOR_1
0x4001f02	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       691	reflog.c	FUNCTION_45	FOR_1
0x4001f05	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       691	reflog.c	FUNCTION_45	FOR_1
0x4001f08	            0x7d4c	                           jge 0x4001f56	       691	reflog.c	FUNCTION_45	FOR_1
0x4001f0a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f0d	            0x4898	                                    cdqe	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f0f	    0x488d14c50000	                        lea rdx, [rax*8]	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f1b	          0x4801d0	                            add rax, rdx	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f1e	          0x488b00	                    mov rax, qword [rax]	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f21	        0x488945f8	                mov qword [rbp - 8], rax	       692	reflog.c	FUNCTION_45	FOR_1
0x4001f25	        0x488b45f8	                mov rax, qword [rbp - 8]	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f29	      0xbe00000000	                              mov esi, 0	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f2e	          0x4889c7	                            mov rdi, rax	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f31	      0xe800000000	                          call 0x4001f36	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f36	            0x85c0	                           test eax, eax	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f38	            0x7506	                           jne 0x4001f40	       693	reflog.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001f3a	        0x8345f001	               add dword [rbp - 0x10], 1	       694	reflog.c	FUNCTION_45	FOR_1	IF_1
0x4001f3e	            0xeb16	                           jmp 0x4001f56	       695	reflog.c	FUNCTION_45	FOR_1	IF_1
0x4001f40	        0x488b45f8	                mov rax, qword [rbp - 8]	       697	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f44	           0xfb600	                   movzx eax, byte [rax]	       697	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f47	            0x3c2d	                            cmp al, 0x2d	       697	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f49	            0x750a	                           jne 0x4001f55	       697	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f4b	      0xbf00000000	                              mov edi, 0	       698	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f50	      0xe800000000	                          call 0x4001f55	       698	reflog.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001f55	              0x90	                                     nop	       700	reflog.c	FUNCTION_45	FOR_1	ELSE_2
0x4001f56	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       703	reflog.c	FUNCTION_45
0x4001f59	          0x8945f4	              mov dword [rbp - 0xc], eax	       703	reflog.c	FUNCTION_45
0x4001f5c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       705	reflog.c	FUNCTION_45	IF_3
0x4001f5f	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       705	reflog.c	FUNCTION_45	IF_3
0x4001f62	          0x83f801	                              cmp eax, 1	       705	reflog.c	FUNCTION_45	IF_3
0x4001f65	            0x740a	                            je 0x4001f71	       705	reflog.c	FUNCTION_45	IF_3
0x4001f67	      0xbf00000000	                              mov edi, 0	       706	reflog.c	FUNCTION_45	CALL_3
0x4001f6c	      0xe800000000	                          call 0x4001f71	       706	reflog.c	FUNCTION_45	CALL_3
0x4001f71	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f74	            0x4898	                                    cdqe	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f76	    0x488d14c50000	                        lea rdx, [rax*8]	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f82	          0x4801d0	                            add rax, rdx	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f85	          0x488b00	                    mov rax, qword [rax]	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f88	      0xbe01000000	                              mov esi, 1	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f8d	          0x4889c7	                            mov rdi, rax	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f90	      0xe800000000	                          call 0x4001f95	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f95	            0x85c0	                           test eax, eax	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f97	            0x7429	                            je 0x4001fc2	       708	reflog.c	FUNCTION_45	IF_4	CALL_4
0x4001f99	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       709	reflog.c	FUNCTION_45	CALL_5
0x4001f9c	            0x4898	                                    cdqe	       709	reflog.c	FUNCTION_45	CALL_5
0x4001f9e	    0x488d14c50000	                        lea rdx, [rax*8]	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fa6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       709	reflog.c	FUNCTION_45	CALL_5
0x4001faa	          0x4801d0	                            add rax, rdx	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fad	          0x488b00	                    mov rax, qword [rax]	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fb0	          0x4889c6	                            mov rsi, rax	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fb3	      0xbf00000000	                              mov edi, 0	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fb8	      0xb800000000	                              mov eax, 0	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fbd	      0xe800000000	                          call 0x4001fc2	       709	reflog.c	FUNCTION_45	CALL_5
0x4001fc2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fc5	            0x4898	                                    cdqe	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fc7	    0x488d14c50000	                        lea rdx, [rax*8]	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fcf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fd3	          0x4801d0	                            add rax, rdx	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fd6	          0x488b00	                    mov rax, qword [rax]	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fd9	          0x4889c7	                            mov rdi, rax	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fdc	      0xe800000000	                          call 0x4001fe1	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fe1	            0x85c0	                           test eax, eax	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fe3	           0xf94c0	                                 sete al	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fe6	           0xfb6c0	                           movzx eax, al	       710	reflog.c	FUNCTION_45	CALL_6
0x4001fe9	              0xc9	                                   leave	       711	reflog.c	FUNCTION_45
0x4001fea	              0xc3	                                     ret	       711	reflog.c	FUNCTION_45
const_error	functions,0:CALL,0:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_52
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_52
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_52
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_52
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_52
oidcpy	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	13
0x4000189	              0x55	                                push rbp	       999	cache.h	FUNCTION_14
0x400018a	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_14
0x400018d	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_14
0x4000191	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_14
0x4000195	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_14
0x4000199	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_14	CALL_1
0x400019d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_14	CALL_1
0x40001a1	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_14	CALL_1
0x40001a4	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_14	CALL_1
0x40001a7	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_14	CALL_1
0x40001ac	              0x90	                                     nop	      1001	cache.h	FUNCTION_14
0x40001ad	              0xc9	                                   leave	      1001	cache.h	FUNCTION_14
0x40001ae	              0xc3	                                     ret	      1001	cache.h	FUNCTION_14
unreachable	functions,0:CALL,3:IF,5:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	56
0x4000abe	              0x55	                                push rbp	       257	reflog.c	FUNCTION_33
0x4000abf	          0x4889e5	                            mov rbp, rsp	       257	reflog.c	FUNCTION_33
0x4000ac2	        0x4883ec20	                           sub rsp, 0x20	       257	reflog.c	FUNCTION_33
0x4000ac6	        0x48897df8	                mov qword [rbp - 8], rdi	       257	reflog.c	FUNCTION_33
0x4000aca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       257	reflog.c	FUNCTION_33
0x4000ace	        0x488955e8	             mov qword [rbp - 0x18], rdx	       257	reflog.c	FUNCTION_33
0x4000ad2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       262	reflog.c	FUNCTION_33	IF_1
0x4000ad7	            0x753d	                           jne 0x4000b16	       262	reflog.c	FUNCTION_33	IF_1
0x4000ad9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	reflog.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4000add	          0x4889c7	                            mov rdi, rax	       263	reflog.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4000ae0	      0xe852f6ffff	                    call sym.is_null_oid	       263	reflog.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4000ae5	            0x85c0	                           test eax, eax	       263	reflog.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4000ae7	            0x740a	                            je 0x4000af3	       263	reflog.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4000ae9	      0xb800000000	                              mov eax, 0	       264	reflog.c	FUNCTION_33	IF_1	IF_2
0x4000aee	      0xe98e000000	                           jmp 0x4000b81	       264	reflog.c	FUNCTION_33	IF_1	IF_2
0x4000af3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	reflog.c	FUNCTION_33	IF_1	CALL_2
0x4000af7	      0xbe01000000	                              mov esi, 1	       266	reflog.c	FUNCTION_33	IF_1	CALL_2
0x4000afc	          0x4889c7	                            mov rdi, rax	       266	reflog.c	FUNCTION_33	IF_1	CALL_2
0x4000aff	      0xe800000000	                          call 0x4000b04	       266	reflog.c	FUNCTION_33	IF_1	CALL_2
0x4000b04	        0x488945f0	             mov qword [rbp - 0x10], rax	       266	reflog.c	FUNCTION_33	IF_1	CALL_2
0x4000b08	      0x48837df000	               cmp qword [rbp - 0x10], 0	       269	reflog.c	FUNCTION_33	IF_1	IF_3
0x4000b0d	            0x7507	                           jne 0x4000b16	       269	reflog.c	FUNCTION_33	IF_1	IF_3
0x4000b0f	      0xb800000000	                              mov eax, 0	       270	reflog.c	FUNCTION_33	IF_1	IF_3
0x4000b14	            0xeb6b	                           jmp 0x4000b81	       270	reflog.c	FUNCTION_33	IF_1	IF_3
0x4000b16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       274	reflog.c	FUNCTION_33	IF_4
0x4000b1a	            0x8b00	                    mov eax, dword [rax]	       274	reflog.c	FUNCTION_33	IF_4
0x4000b1c	          0xc1e804	                              shr eax, 4	       274	reflog.c	FUNCTION_33	IF_4
0x4000b1f	      0x25ffffff07	                      and eax, 0x7ffffff	       274	reflog.c	FUNCTION_33	IF_4
0x4000b24	      0x2500100000	                         and eax, 0x1000	       274	reflog.c	FUNCTION_33	IF_4
0x4000b29	            0x85c0	                           test eax, eax	       274	reflog.c	FUNCTION_33	IF_4
0x4000b2b	            0x7407	                            je 0x4000b34	       274	reflog.c	FUNCTION_33	IF_4
0x4000b2d	      0xb800000000	                              mov eax, 0	       275	reflog.c	FUNCTION_33	IF_4
0x4000b32	            0xeb4d	                           jmp 0x4000b81	       275	reflog.c	FUNCTION_33	IF_4
0x4000b34	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reflog.c	FUNCTION_33	IF_5
0x4000b38	        0x488b4008	                mov rax, qword [rax + 8]	       277	reflog.c	FUNCTION_33	IF_5
0x4000b3c	          0x4885c0	                           test rax, rax	       277	reflog.c	FUNCTION_33	IF_5
0x4000b3f	            0x7425	                            je 0x4000b66	       277	reflog.c	FUNCTION_33	IF_5
0x4000b41	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reflog.c	FUNCTION_33	IF_5
0x4000b45	        0x488b4010	            mov rax, qword [rax + 0x10] 	       277	reflog.c	FUNCTION_33	IF_5
0x4000b49	          0x4885c0	                           test rax, rax	       277	reflog.c	FUNCTION_33	IF_5
0x4000b4c	            0x7418	                            je 0x4000b66	       277	reflog.c	FUNCTION_33	IF_5
0x4000b4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	reflog.c	FUNCTION_33	IF_5
0x4000b52	    0x48c740100000	               mov qword [rax + 0x10], 0	       278	reflog.c	FUNCTION_33	IF_5
0x4000b5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	reflog.c	FUNCTION_33	IF_5	CALL_3
0x4000b5e	          0x4889c7	                            mov rdi, rax	       279	reflog.c	FUNCTION_33	IF_5	CALL_3
0x4000b61	      0xe878fdffff	                 call sym.mark_reachable	       279	reflog.c	FUNCTION_33	IF_5	CALL_3
0x4000b66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	reflog.c	FUNCTION_33
0x4000b6a	            0x8b00	                    mov eax, dword [rax]	       282	reflog.c	FUNCTION_33
0x4000b6c	          0xc1e804	                              shr eax, 4	       282	reflog.c	FUNCTION_33
0x4000b6f	      0x25ffffff07	                      and eax, 0x7ffffff	       282	reflog.c	FUNCTION_33
0x4000b74	      0x2500100000	                         and eax, 0x1000	       282	reflog.c	FUNCTION_33
0x4000b79	            0x85c0	                           test eax, eax	       282	reflog.c	FUNCTION_33
0x4000b7b	           0xf94c0	                                 sete al	       282	reflog.c	FUNCTION_33
0x4000b7e	           0xfb6c0	                           movzx eax, al	       282	reflog.c	FUNCTION_33
0x4000b81	              0xc9	                                   leave	       283	reflog.c	FUNCTION_33
0x4000b82	              0xc3	                                     ret	       283	reflog.c	FUNCTION_33
cmd_reflog_delete	functions,0:CALL,15:IF,10:ELSE,7:FOR,2:WHILE,0:DO,0:SWITCH,0	211
0x4001af4	              0x55	                                push rbp	       621	reflog.c	FUNCTION_44
0x4001af5	          0x4889e5	                            mov rbp, rsp	       621	reflog.c	FUNCTION_44
0x4001af8	    0x4881ec700900	                          sub rsp, 0x970	       621	reflog.c	FUNCTION_44
0x4001aff	    0x89bdacf6ffff	            mov dword [rbp - 0x954], edi	       621	reflog.c	FUNCTION_44
0x4001b05	    0x4889b5a0f6ff	            mov qword [rbp - 0x960], rsi	       621	reflog.c	FUNCTION_44
0x4001b0c	    0x48899598f6ff	            mov qword [rbp - 0x968], rdx	       621	reflog.c	FUNCTION_44
0x4001b13	    0x64488b042528	                mov rax, qword fs:[0x28]	       621	reflog.c	FUNCTION_44
0x4001b1c	        0x488945f8	                mov qword [rbp - 8], rax	       621	reflog.c	FUNCTION_44
0x4001b20	            0x31c0	                            xor eax, eax	       621	reflog.c	FUNCTION_44
0x4001b22	    0xc785b4f6ffff	              mov dword [rbp - 0x94c], 0	       623	reflog.c	FUNCTION_44
0x4001b2c	    0xc785b8f6ffff	              mov dword [rbp - 0x948], 0	       624	reflog.c	FUNCTION_44
0x4001b36	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       626	reflog.c	FUNCTION_44	CALL_1
0x4001b3d	      0xbaf8080000	                          mov edx, 0x8f8	       626	reflog.c	FUNCTION_44	CALL_1
0x4001b42	      0xbe00000000	                              mov esi, 0	       626	reflog.c	FUNCTION_44	CALL_1
0x4001b47	          0x4889c7	                            mov rdi, rax	       626	reflog.c	FUNCTION_44	CALL_1
0x4001b4a	      0xe800000000	                          call 0x4001b4f	       626	reflog.c	FUNCTION_44	CALL_1
0x4001b4f	    0xc785b0f6ffff	              mov dword [rbp - 0x950], 1	       628	reflog.c	FUNCTION_44	FOR_1
0x4001b59	      0xe903010000	                           jmp 0x4001c61	       628	reflog.c	FUNCTION_44	FOR_1
0x4001b5e	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b64	            0x4898	                                    cdqe	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b66	    0x488d14c50000	                        lea rdx, [rax*8]	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b6e	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b75	          0x4801d0	                            add rax, rdx	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b78	          0x488b00	                    mov rax, qword [rax]	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b7b	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       629	reflog.c	FUNCTION_44	FOR_1
0x4001b82	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b89	      0xbe00000000	                              mov esi, 0	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b8e	          0x4889c7	                            mov rdi, rax	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b91	      0xe800000000	                          call 0x4001b96	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b96	            0x85c0	                           test eax, eax	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b98	            0x7418	                            je 0x4001bb2	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001b9a	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001ba1	      0xbe00000000	                              mov esi, 0	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001ba6	          0x4889c7	                            mov rdi, rax	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001ba9	      0xe800000000	                          call 0x4001bae	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001bae	            0x85c0	                           test eax, eax	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001bb0	            0x750c	                           jne 0x4001bbe	       630	reflog.c	FUNCTION_44	FOR_1	IF_1	CALL_3
0x4001bb2	    0x838db8f6ffff	               or dword [rbp - 0x948], 1	       631	reflog.c	FUNCTION_44	FOR_1	IF_1
0x4001bb9	      0xe99c000000	                           jmp 0x4001c5a	       631	reflog.c	FUNCTION_44	FOR_1	IF_1
0x4001bbe	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bc5	      0xbe00000000	                              mov esi, 0	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bca	          0x4889c7	                            mov rdi, rax	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bcd	      0xe800000000	                          call 0x4001bd2	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bd2	            0x85c0	                           test eax, eax	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bd4	            0x7509	                           jne 0x4001bdf	       632	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2	CALL_4
0x4001bd6	    0x838db8f6ffff	               or dword [rbp - 0x948], 8	       633	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2
0x4001bdd	            0xeb7b	                           jmp 0x4001c5a	       633	reflog.c	FUNCTION_44	FOR_1	ELSE_1	IF_2
0x4001bdf	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001be6	      0xbe00000000	                              mov esi, 0	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001beb	          0x4889c7	                            mov rdi, rax	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001bee	      0xe800000000	                          call 0x4001bf3	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001bf3	            0x85c0	                           test eax, eax	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001bf5	            0x7509	                           jne 0x4001c00	       634	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3	CALL_5
0x4001bf7	    0x838db8f6ffff	               or dword [rbp - 0x948], 2	       635	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3
0x4001bfe	            0xeb5a	                           jmp 0x4001c5a	       635	reflog.c	FUNCTION_44	FOR_1	ELSE_2	IF_3
0x4001c00	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c07	      0xbe00000000	                              mov esi, 0	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c0c	          0x4889c7	                            mov rdi, rax	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c0f	      0xe800000000	                          call 0x4001c14	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c14	            0x85c0	                           test eax, eax	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c16	            0x7509	                           jne 0x4001c21	       636	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4	CALL_6
0x4001c18	    0x838db8f6ffff	               or dword [rbp - 0x948], 4	       637	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4
0x4001c1f	            0xeb39	                           jmp 0x4001c5a	       637	reflog.c	FUNCTION_44	FOR_1	ELSE_3	IF_4
0x4001c21	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c28	      0xbe00000000	                              mov esi, 0	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c2d	          0x4889c7	                            mov rdi, rax	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c30	      0xe800000000	                          call 0x4001c35	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c35	            0x85c0	                           test eax, eax	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c37	            0x7509	                           jne 0x4001c42	       638	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5	CALL_7
0x4001c39	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       639	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5
0x4001c40	            0xeb34	                           jmp 0x4001c76	       640	reflog.c	FUNCTION_44	FOR_1	ELSE_4	IF_5
0x4001c42	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       642	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c49	           0xfb600	                   movzx eax, byte [rax]	       642	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c4c	            0x3c2d	                            cmp al, 0x2d	       642	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c4e	            0x7525	                           jne 0x4001c75	       642	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c50	      0xbf00000000	                              mov edi, 0	       643	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c55	      0xe800000000	                          call 0x4001c5a	       643	reflog.c	FUNCTION_44	FOR_1	ELSE_5	IF_6
0x4001c5a	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       628	reflog.c	FUNCTION_44	FOR_1
0x4001c61	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       628	reflog.c	FUNCTION_44	FOR_1
0x4001c67	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       628	reflog.c	FUNCTION_44	FOR_1
0x4001c6d	     0xf8cebfeffff	                            jl 0x4001b5e	       628	reflog.c	FUNCTION_44	FOR_1
0x4001c73	            0xeb01	                           jmp 0x4001c76	       628	reflog.c	FUNCTION_44	FOR_1
0x4001c75	              0x90	                                     nop	       645	reflog.c	FUNCTION_44	FOR_1	ELSE_6
0x4001c76	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       648	reflog.c	FUNCTION_44	IF_7
0x4001c7c	    0x2b85b0f6ffff	            sub eax, dword [rbp - 0x950]	       648	reflog.c	FUNCTION_44	IF_7
0x4001c82	            0x85c0	                           test eax, eax	       648	reflog.c	FUNCTION_44	IF_7
0x4001c84	     0xf8f29020000	                            jg 0x4001eb3	       648	reflog.c	FUNCTION_44	IF_7
0x4001c8a	      0xbf00000000	                              mov edi, 0	       649	reflog.c	FUNCTION_44	IF_7
0x4001c8f	      0xb800000000	                              mov eax, 0	       649	reflog.c	FUNCTION_44	IF_7
0x4001c94	      0xe800000000	                          call 0x4001c99	       649	reflog.c	FUNCTION_44	IF_7
0x4001c99	      0xe8a2e3ffff	                    call sym.const_error	       649	reflog.c	FUNCTION_44	IF_7
0x4001c9e	      0xe928020000	                           jmp 0x4001ecb	       649	reflog.c	FUNCTION_44	IF_7
0x4001ca3	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001ca9	            0x4898	                                    cdqe	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cab	    0x488d14c50000	                        lea rdx, [rax*8]	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cb3	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cba	          0x4801d0	                            add rax, rdx	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cbd	          0x488b00	                    mov rax, qword [rax]	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cc0	      0xbe00000000	                              mov esi, 0	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cc5	          0x4889c7	                            mov rdi, rax	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cc8	      0xe800000000	                          call 0x4001ccd	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001ccd	    0x488985d8f6ff	            mov qword [rbp - 0x928], rax	       652	reflog.c	FUNCTION_44	FOR_2	CALL_9
0x4001cd4	    0x4883bdd8f6ff	              cmp qword [rbp - 0x928], 0	       657	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cdc	            0x753f	                           jne 0x4001d1d	       657	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cde	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001ce4	            0x4898	                                    cdqe	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001ce6	    0x488d14c50000	                        lea rdx, [rax*8]	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cee	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cf5	          0x4801d0	                            add rax, rdx	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cf8	          0x488b00	                    mov rax, qword [rax]	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cfb	          0x4889c6	                            mov rsi, rax	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001cfe	      0xbf00000000	                              mov edi, 0	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d03	      0xb800000000	                              mov eax, 0	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d08	      0xe800000000	                          call 0x4001d0d	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d0d	      0xe82ee3ffff	                    call sym.const_error	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d12	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       658	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d18	      0xe98f010000	                           jmp 0x4001eac	       659	reflog.c	FUNCTION_44	FOR_2	IF_8
0x4001d1d	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d24	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d2a	          0x4863d2	                         movsxd rdx, edx	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d2d	    0x488d0cd50000	                        lea rcx, [rdx*8]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d35	    0x488b95a0f6ff	            mov rdx, qword [rbp - 0x960]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d3c	          0x4801ca	                            add rdx, rcx	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d3f	          0x488b12	                    mov rdx, qword [rdx]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d42	          0x4829d0	                            sub rax, rdx	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d45	            0x89c6	                            mov esi, eax	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d47	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d4d	            0x4898	                                    cdqe	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d4f	    0x488d14c50000	                        lea rdx, [rax*8]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d57	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d5e	          0x4801d0	                            add rax, rdx	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d61	          0x488b00	                    mov rax, qword [rax]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d64	    0x488d8dc8f6ff	                  lea rcx, [rbp - 0x938]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d6b	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d72	          0x4889c7	                            mov rdi, rax	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d75	      0xe800000000	                          call 0x4001d7a	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d7a	            0x85c0	                           test eax, eax	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d7c	            0x753f	                           jne 0x4001dbd	       662	reflog.c	FUNCTION_44	FOR_2	IF_9	CALL_10
0x4001d7e	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d84	            0x4898	                                    cdqe	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d86	    0x488d14c50000	                        lea rdx, [rax*8]	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d8e	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d95	          0x4801d0	                            add rax, rdx	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d98	          0x488b00	                    mov rax, qword [rax]	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d9b	          0x4889c6	                            mov rsi, rax	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001d9e	      0xbf00000000	                              mov edi, 0	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001da3	      0xb800000000	                              mov eax, 0	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001da8	      0xe800000000	                          call 0x4001dad	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001dad	      0xe88ee2ffff	                    call sym.const_error	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001db2	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       663	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001db8	      0xe9ef000000	                           jmp 0x4001eac	       664	reflog.c	FUNCTION_44	FOR_2	IF_9
0x4001dbd	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dc4	        0x488d4802	                      lea rcx, [rax + 2]	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dc8	    0x488d85c0f6ff	                  lea rax, [rbp - 0x940]	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dcf	      0xba0a000000	                            mov edx, 0xa	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dd4	          0x4889c6	                            mov rsi, rax	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dd7	          0x4889cf	                            mov rdi, rcx	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001dda	      0xe800000000	                          call 0x4001ddf	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001ddf	    0x8985bcf6ffff	            mov dword [rbp - 0x944], eax	       667	reflog.c	FUNCTION_44	FOR_2	CALL_11
0x4001de5	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       668	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001dec	           0xfb600	                   movzx eax, byte [rax]	       668	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001def	            0x3c7d	                            cmp al, 0x7d	       668	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001df1	            0x7528	                           jne 0x4001e1b	       668	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001df3	    0x8b85bcf6ffff	            mov eax, dword [rbp - 0x944]	       669	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001df9	            0xf7d8	                                 neg eax	       669	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001dfb	          0x8945e0	             mov dword [rbp - 0x20], eax	       669	reflog.c	FUNCTION_44	FOR_2	IF_10
0x4001dfe	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e05	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e0c	      0xbe00000000	                              mov esi, 0	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e11	          0x4889c7	                            mov rdi, rax	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e14	      0xe800000000	                          call 0x4001e19	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e19	            0xeb3f	                           jmp 0x4001e5a	       670	reflog.c	FUNCTION_44	FOR_2	IF_10	CALL_12
0x4001e1b	    0x488b85d8f6ff	            mov rax, qword [rbp - 0x928]	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e22	        0x4883c002	                              add rax, 2	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e26	      0xbe00000000	                              mov esi, 0	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e2b	          0x4889c7	                            mov rdi, rax	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e2e	      0xe800000000	                          call 0x4001e33	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e33	        0x488945d0	             mov qword [rbp - 0x30], rax	       672	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e37	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       673	reflog.c	FUNCTION_44	FOR_2	ELSE_7	CALL_13
0x4001e3e	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       673	reflog.c	FUNCTION_44	FOR_2	ELSE_7	CALL_13
0x4001e45	      0xbe00000000	                              mov esi, 0	       673	reflog.c	FUNCTION_44	FOR_2	ELSE_7	CALL_13
0x4001e4a	          0x4889c7	                            mov rdi, rax	       673	reflog.c	FUNCTION_44	FOR_2	ELSE_7	CALL_13
0x4001e4d	      0xe800000000	                          call 0x4001e52	       673	reflog.c	FUNCTION_44	FOR_2	ELSE_7	CALL_13
0x4001e52	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       674	reflog.c	FUNCTION_44	FOR_2	ELSE_7
0x4001e5a	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e61	    0x8b95b8f6ffff	            mov edx, dword [rbp - 0x948]	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e67	    0x488db5e0f6ff	                  lea rsi, [rbp - 0x920]	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e6e	        0x4883ec08	                              sub rsp, 8	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e72	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e79	              0x51	                                push rcx	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e7a	    0x41b900000000	                              mov r9d, 0	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e80	    0x41b800000000	                              mov r8d, 0	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e86	      0xb900000000	                              mov ecx, 0	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e8b	          0x4889c7	                            mov rdi, rax	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e8e	      0xe800000000	                          call 0x4001e93	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e93	        0x4883c410	                           add rsp, 0x10	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e97	     0x985b4f6ffff	             or dword [rbp - 0x94c], eax	       677	reflog.c	FUNCTION_44	FOR_2	CALL_14
0x4001e9d	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       682	reflog.c	FUNCTION_44	FOR_2	CALL_15
0x4001ea4	          0x4889c7	                            mov rdi, rax	       682	reflog.c	FUNCTION_44	FOR_2	CALL_15
0x4001ea7	      0xe800000000	                          call 0x4001eac	       682	reflog.c	FUNCTION_44	FOR_2	CALL_15
0x4001eac	    0x8385b0f6ffff	              add dword [rbp - 0x950], 1	       651	reflog.c	FUNCTION_44	FOR_2
0x4001eb3	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       651	reflog.c	FUNCTION_44	FOR_2
0x4001eb9	    0x3b85acf6ffff	            cmp eax, dword [rbp - 0x954]	       651	reflog.c	FUNCTION_44	FOR_2
0x4001ebf	     0xf8cdefdffff	                            jl 0x4001ca3	       651	reflog.c	FUNCTION_44	FOR_2
0x4001ec5	    0x8b85b4f6ffff	            mov eax, dword [rbp - 0x94c]	       684	reflog.c	FUNCTION_44
0x4001ecb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       685	reflog.c	FUNCTION_44
0x4001ecf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       685	reflog.c	FUNCTION_44
0x4001ed8	            0x7405	                            je 0x4001edf	       685	reflog.c	FUNCTION_44
0x4001eda	      0xe800000000	                          call 0x4001edf	       685	reflog.c	FUNCTION_44
0x4001edf	              0xc9	                                   leave	       685	reflog.c	FUNCTION_44
0x4001ee0	              0xc3	                                     ret	       685	reflog.c	FUNCTION_44
cmd_reflog_expire	functions,0:CALL,34:IF,17:ELSE,10:FOR,3:WHILE,0:DO,0:SWITCH,0	316
0x40014a6	              0x55	                                push rbp	       508	reflog.c	FUNCTION_42
0x40014a7	          0x4889e5	                            mov rbp, rsp	       508	reflog.c	FUNCTION_42
0x40014aa	    0x4881ec800900	                          sub rsp, 0x980	       508	reflog.c	FUNCTION_42
0x40014b1	    0x89bd9cf6ffff	            mov dword [rbp - 0x964], edi	       508	reflog.c	FUNCTION_42
0x40014b7	    0x4889b590f6ff	            mov qword [rbp - 0x970], rsi	       508	reflog.c	FUNCTION_42
0x40014be	    0x48899588f6ff	            mov qword [rbp - 0x978], rdx	       508	reflog.c	FUNCTION_42
0x40014c5	    0x64488b042528	                mov rax, qword fs:[0x28]	       508	reflog.c	FUNCTION_42
0x40014ce	        0x488945f8	                mov qword [rbp - 8], rax	       508	reflog.c	FUNCTION_42
0x40014d2	            0x31c0	                            xor eax, eax	       508	reflog.c	FUNCTION_42
0x40014d4	      0xbf00000000	                              mov edi, 0	       510	reflog.c	FUNCTION_42	CALL_1
0x40014d9	      0xe800000000	                          call 0x40014de	       510	reflog.c	FUNCTION_42	CALL_1
0x40014de	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       510	reflog.c	FUNCTION_42	CALL_1
0x40014e5	    0xc785acf6ffff	              mov dword [rbp - 0x954], 0	       512	reflog.c	FUNCTION_42
0x40014ef	    0xc785b0f6ffff	              mov dword [rbp - 0x950], 0	       513	reflog.c	FUNCTION_42
0x40014f9	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       515	reflog.c	FUNCTION_42
0x4001500	    0x482d008d2700	                       sub rax, 0x278d00	       515	reflog.c	FUNCTION_42
0x4001506	    0x488905000000	            mov qword [0x0400150d], rax 	       515	reflog.c	FUNCTION_42
0x400150d	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       516	reflog.c	FUNCTION_42
0x4001514	    0x482d00a77600	                       sub rax, 0x76a700	       516	reflog.c	FUNCTION_42
0x400151a	    0x488905000000	            mov qword [0x04001521], rax 	       516	reflog.c	FUNCTION_42
0x4001521	      0xbe00000000	                              mov esi, 0	       517	reflog.c	FUNCTION_42	CALL_2
0x4001526	      0xbf00000000	                              mov edi, 0	       517	reflog.c	FUNCTION_42	CALL_2
0x400152b	      0xe800000000	                          call 0x4001530	       517	reflog.c	FUNCTION_42	CALL_2
0x4001530	    0xc70500000000	               mov dword [0x0400153a], 0	       519	reflog.c	FUNCTION_42
0x400153a	    0xc785a4f6ffff	              mov dword [rbp - 0x95c], 0	       520	reflog.c	FUNCTION_42
0x4001544	    0x8b85a4f6ffff	            mov eax, dword [rbp - 0x95c]	       520	reflog.c	FUNCTION_42
0x400154a	    0x8985a8f6ffff	            mov dword [rbp - 0x958], eax	       520	reflog.c	FUNCTION_42
0x4001550	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       521	reflog.c	FUNCTION_42	CALL_3
0x4001557	      0xbaf8080000	                          mov edx, 0x8f8	       521	reflog.c	FUNCTION_42	CALL_3
0x400155c	      0xbe00000000	                              mov esi, 0	       521	reflog.c	FUNCTION_42	CALL_3
0x4001561	          0x4889c7	                            mov rdi, rax	       521	reflog.c	FUNCTION_42	CALL_3
0x4001564	      0xe800000000	                          call 0x4001569	       521	reflog.c	FUNCTION_42	CALL_3
0x4001569	    0x488b05000000	            mov rax, qword [0x04001570] 	       523	reflog.c	FUNCTION_42
0x4001570	        0x488945d0	             mov qword [rbp - 0x30], rax	       523	reflog.c	FUNCTION_42
0x4001574	    0x488b05000000	            mov rax, qword [0x0400157b] 	       524	reflog.c	FUNCTION_42
0x400157b	        0x488945d8	             mov qword [rbp - 0x28], rax	       524	reflog.c	FUNCTION_42
0x400157f	    0xc785a0f6ffff	              mov dword [rbp - 0x960], 1	       526	reflog.c	FUNCTION_42	FOR_1
0x4001589	      0xe92e020000	                           jmp 0x40017bc	       526	reflog.c	FUNCTION_42	FOR_1
0x400158e	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       527	reflog.c	FUNCTION_42	FOR_1
0x4001594	            0x4898	                                    cdqe	       527	reflog.c	FUNCTION_42	FOR_1
0x4001596	    0x488d14c50000	                        lea rdx, [rax*8]	       527	reflog.c	FUNCTION_42	FOR_1
0x400159e	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       527	reflog.c	FUNCTION_42	FOR_1
0x40015a5	          0x4801d0	                            add rax, rdx	       527	reflog.c	FUNCTION_42	FOR_1
0x40015a8	          0x488b00	                    mov rax, qword [rax]	       527	reflog.c	FUNCTION_42	FOR_1
0x40015ab	    0x488985c0f6ff	            mov qword [rbp - 0x940], rax	       527	reflog.c	FUNCTION_42	FOR_1
0x40015b2	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015b9	      0xbe00000000	                              mov esi, 0	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015be	          0x4889c7	                            mov rdi, rax	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015c1	      0xe800000000	                          call 0x40015c6	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015c6	            0x85c0	                           test eax, eax	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015c8	            0x7418	                            je 0x40015e2	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015ca	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015d1	      0xbe00000000	                              mov esi, 0	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015d6	          0x4889c7	                            mov rdi, rax	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015d9	      0xe800000000	                          call 0x40015de	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015de	            0x85c0	                           test eax, eax	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015e0	            0x750c	                           jne 0x40015ee	       528	reflog.c	FUNCTION_42	FOR_1	IF_1	CALL_5
0x40015e2	    0x838db0f6ffff	               or dword [rbp - 0x950], 1	       529	reflog.c	FUNCTION_42	FOR_1	IF_1
0x40015e9	      0xe9c7010000	                           jmp 0x40017b5	       529	reflog.c	FUNCTION_42	FOR_1	IF_1
0x40015ee	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x40015f5	      0xbe00000000	                              mov esi, 0	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x40015fa	          0x4889c7	                            mov rdi, rax	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x40015fd	      0xe800000000	                          call 0x4001602	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x4001602	            0x85c0	                           test eax, eax	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x4001604	            0x7458	                            je 0x400165e	       530	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_6
0x4001606	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400160d	        0x4883c009	                              add rax, 9	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4001611	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4001618	    0x4881c2d00800	                          add rdx, 0x8d0	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400161f	          0x4889d6	                            mov rsi, rdx	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4001622	          0x4889c7	                            mov rdi, rax	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4001625	      0xe800000000	                          call 0x400162a	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400162a	            0x85c0	                           test eax, eax	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400162c	            0x7424	                            je 0x4001652	       531	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x400162e	      0xbf00000000	                              mov edi, 0	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001633	      0xe8a9eaffff	                               call sym.	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001638	          0x4889c2	                            mov rdx, rax	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x400163b	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001642	          0x4889c6	                            mov rsi, rax	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001645	          0x4889d7	                            mov rdi, rdx	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001648	      0xb800000000	                              mov eax, 0	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x400164d	      0xe800000000	                          call 0x4001652	       532	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2	CALL_9
0x4001652	    0x838dacf6ffff	               or dword [rbp - 0x954], 1	       533	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2
0x4001659	      0xe957010000	                           jmp 0x40017b5	       533	reflog.c	FUNCTION_42	FOR_1	ELSE_1	IF_2
0x400165e	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x4001665	      0xbe00000000	                              mov esi, 0	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x400166a	          0x4889c7	                            mov rdi, rax	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x400166d	      0xe800000000	                          call 0x4001672	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x4001672	            0x85c0	                           test eax, eax	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x4001674	            0x7458	                            je 0x40016ce	       535	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_10
0x4001676	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x400167d	        0x4883c015	                           add rax, 0x15	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x4001681	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x4001688	    0x4881c2d80800	                          add rdx, 0x8d8	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x400168f	          0x4889d6	                            mov rsi, rdx	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x4001692	          0x4889c7	                            mov rdi, rax	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x4001695	      0xe800000000	                          call 0x400169a	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x400169a	            0x85c0	                           test eax, eax	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x400169c	            0x7424	                            je 0x40016c2	       536	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	IF_5	CALL_11
0x400169e	      0xbf00000000	                              mov edi, 0	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016a3	      0xe839eaffff	                               call sym.	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016a8	          0x4889c2	                            mov rdx, rax	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016ab	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016b2	          0x4889c6	                            mov rsi, rax	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016b5	          0x4889d7	                            mov rdi, rdx	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016b8	      0xb800000000	                              mov eax, 0	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016bd	      0xe800000000	                          call 0x40016c2	       537	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4	CALL_13
0x40016c2	    0x838dacf6ffff	               or dword [rbp - 0x954], 2	       538	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4
0x40016c9	      0xe9e7000000	                           jmp 0x40017b5	       538	reflog.c	FUNCTION_42	FOR_1	ELSE_2	IF_4
0x40016ce	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016d5	      0xbe00000000	                              mov esi, 0	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016da	          0x4889c7	                            mov rdi, rax	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016dd	      0xe800000000	                          call 0x40016e2	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016e2	            0x85c0	                           test eax, eax	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016e4	            0x750c	                           jne 0x40016f2	       540	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6	CALL_14
0x40016e6	    0xc745c8010000	               mov dword [rbp - 0x38], 1	       541	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6
0x40016ed	      0xe9c3000000	                           jmp 0x40017b5	       541	reflog.c	FUNCTION_42	FOR_1	ELSE_3	IF_6
0x40016f2	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x40016f9	      0xbe00000000	                              mov esi, 0	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x40016fe	          0x4889c7	                            mov rdi, rax	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x4001701	      0xe800000000	                          call 0x4001706	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x4001706	            0x85c0	                           test eax, eax	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x4001708	            0x750c	                           jne 0x4001716	       542	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7	CALL_15
0x400170a	    0x838db0f6ffff	               or dword [rbp - 0x950], 8	       543	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7
0x4001711	      0xe99f000000	                           jmp 0x40017b5	       543	reflog.c	FUNCTION_42	FOR_1	ELSE_4	IF_7
0x4001716	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x400171d	      0xbe00000000	                              mov esi, 0	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x4001722	          0x4889c7	                            mov rdi, rax	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x4001725	      0xe800000000	                          call 0x400172a	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x400172a	            0x85c0	                           test eax, eax	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x400172c	            0x7509	                           jne 0x4001737	       544	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8	CALL_16
0x400172e	    0x838db0f6ffff	               or dword [rbp - 0x950], 2	       545	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8
0x4001735	            0xeb7e	                           jmp 0x40017b5	       545	reflog.c	FUNCTION_42	FOR_1	ELSE_5	IF_8
0x4001737	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x400173e	      0xbe00000000	                              mov esi, 0	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x4001743	          0x4889c7	                            mov rdi, rax	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x4001746	      0xe800000000	                          call 0x400174b	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x400174b	            0x85c0	                           test eax, eax	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x400174d	            0x750c	                           jne 0x400175b	       546	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9	CALL_17
0x400174f	    0xc785a8f6ffff	              mov dword [rbp - 0x958], 1	       547	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9
0x4001759	            0xeb5a	                           jmp 0x40017b5	       547	reflog.c	FUNCTION_42	FOR_1	ELSE_6	IF_9
0x400175b	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x4001762	      0xbe00000000	                              mov esi, 0	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x4001767	          0x4889c7	                            mov rdi, rax	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x400176a	      0xe800000000	                          call 0x400176f	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x400176f	            0x85c0	                           test eax, eax	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x4001771	            0x7509	                           jne 0x400177c	       548	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10	CALL_18
0x4001773	    0x838db0f6ffff	               or dword [rbp - 0x950], 4	       549	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10
0x400177a	            0xeb39	                           jmp 0x40017b5	       549	reflog.c	FUNCTION_42	FOR_1	ELSE_7	IF_10
0x400177c	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x4001783	      0xbe00000000	                              mov esi, 0	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x4001788	          0x4889c7	                            mov rdi, rax	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x400178b	      0xe800000000	                          call 0x4001790	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x4001790	            0x85c0	                           test eax, eax	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x4001792	            0x7509	                           jne 0x400179d	       550	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11	CALL_19
0x4001794	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       551	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11
0x400179b	            0xeb34	                           jmp 0x40017d1	       552	reflog.c	FUNCTION_42	FOR_1	ELSE_8	IF_11
0x400179d	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       554	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017a4	           0xfb600	                   movzx eax, byte [rax]	       554	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017a7	            0x3c2d	                            cmp al, 0x2d	       554	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017a9	            0x7525	                           jne 0x40017d0	       554	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017ab	      0xbf00000000	                              mov edi, 0	       555	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017b0	      0xe800000000	                          call 0x40017b5	       555	reflog.c	FUNCTION_42	FOR_1	ELSE_9	IF_12
0x40017b5	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       526	reflog.c	FUNCTION_42	FOR_1
0x40017bc	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       526	reflog.c	FUNCTION_42	FOR_1
0x40017c2	    0x3b859cf6ffff	            cmp eax, dword [rbp - 0x964]	       526	reflog.c	FUNCTION_42	FOR_1
0x40017c8	     0xf8cc0fdffff	                            jl 0x400158e	       526	reflog.c	FUNCTION_42	FOR_1
0x40017ce	            0xeb01	                           jmp 0x40017d1	       526	reflog.c	FUNCTION_42	FOR_1
0x40017d0	              0x90	                                     nop	       557	reflog.c	FUNCTION_42	FOR_1	ELSE_10
0x40017d1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       565	reflog.c	FUNCTION_42	ELSE_10	IF_13
0x40017d4	            0x85c0	                           test eax, eax	       565	reflog.c	FUNCTION_42	ELSE_10	IF_13
0x40017d6	            0x7472	                            je 0x400184a	       565	reflog.c	FUNCTION_42	ELSE_10	IF_13
0x40017d8	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017df	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017e6	        0x4883c218	                           add rdx, 0x18	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017ea	          0x4889c6	                            mov rsi, rax	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017ed	          0x4889d7	                            mov rdi, rdx	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017f0	      0xe800000000	                          call 0x40017f5	       566	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_21
0x40017f5	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       567	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_14
0x40017fb	          0x83e004	                              and eax, 4	       567	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_14
0x40017fe	            0x85c0	                           test eax, eax	       567	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_14
0x4001800	            0x740f	                            je 0x4001811	       567	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_14
0x4001802	      0xbf00000000	                              mov edi, 0	       568	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_22
0x4001807	      0xb800000000	                              mov eax, 0	       568	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_22
0x400180c	      0xe800000000	                          call 0x4001811	       568	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_22
0x4001811	    0x488d8500f7ff	                  lea rax, [rbp - 0x900]	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x4001818	        0x4883c018	                           add rax, 0x18	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x400181c	      0xb900000000	                              mov ecx, 0	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x4001821	      0xba00000000	                              mov edx, 0	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x4001826	      0xbe00000000	                              mov esi, 0	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x400182b	          0x4889c7	                            mov rdi, rax	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x400182e	      0xe800000000	                          call 0x4001833	       569	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_23
0x4001833	    0x8b85b0f6ffff	            mov eax, dword [rbp - 0x950]	       570	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_15
0x4001839	          0x83e004	                              and eax, 4	       570	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_15
0x400183c	            0x85c0	                           test eax, eax	       570	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_15
0x400183e	            0x740a	                            je 0x400184a	       570	reflog.c	FUNCTION_42	ELSE_10	IF_13	IF_15
0x4001840	      0xbf0a000000	                            mov edi, 0xa	       571	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_24
0x4001845	      0xe800000000	                          call 0x400184a	       571	reflog.c	FUNCTION_42	ELSE_10	IF_13	CALL_24
0x400184a	    0x83bda8f6ffff	              cmp dword [rbp - 0x958], 0	       574	reflog.c	FUNCTION_42	IF_16
0x4001851	     0xf840c020000	                            je 0x4001a63	       574	reflog.c	FUNCTION_42	IF_16
0x4001857	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       578	reflog.c	FUNCTION_42	IF_16	CALL_25
0x400185e	      0xba10000000	                           mov edx, 0x10	       578	reflog.c	FUNCTION_42	IF_16	CALL_25
0x4001863	      0xbe00000000	                              mov esi, 0	       578	reflog.c	FUNCTION_42	IF_16	CALL_25
0x4001868	          0x4889c7	                            mov rdi, rax	       578	reflog.c	FUNCTION_42	IF_16	CALL_25
0x400186b	      0xe800000000	                          call 0x4001870	       578	reflog.c	FUNCTION_42	IF_16	CALL_25
0x4001870	    0x488d85d0f6ff	                  lea rax, [rbp - 0x930]	       579	reflog.c	FUNCTION_42	IF_16	CALL_26
0x4001877	          0x4889c6	                            mov rsi, rax	       579	reflog.c	FUNCTION_42	IF_16	CALL_26
0x400187a	      0xbf00000000	                              mov edi, 0	       579	reflog.c	FUNCTION_42	IF_16	CALL_26
0x400187f	      0xe800000000	                          call 0x4001884	       579	reflog.c	FUNCTION_42	IF_16	CALL_26
0x4001884	    0xc785b4f6ffff	              mov dword [rbp - 0x94c], 0	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x400188e	      0xe9a4000000	                           jmp 0x4001937	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x4001893	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x400189a	    0x8b95b4f6ffff	            mov edx, dword [rbp - 0x94c]	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018a0	          0x4863d2	                         movsxd rdx, edx	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018a3	        0x48c1e203	                              shl rdx, 3	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018a7	          0x4801d0	                            add rax, rdx	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018aa	          0x488b00	                    mov rax, qword [rax]	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018ad	    0x488985c8f6ff	            mov qword [rbp - 0x938], rax	       581	reflog.c	FUNCTION_42	IF_16	FOR_2
0x40018b4	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018bb	        0x488d5014	                   lea rdx, [rax + 0x14]	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018bf	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018c5	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018cc	        0x4883c118	                           add rcx, 0x18	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018d0	            0x89c6	                            mov esi, eax	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018d2	          0x4889cf	                            mov rdi, rcx	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018d5	      0xe8a1faffff	        call sym.set_reflog_expiry_param	       582	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_27
0x40018da	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018e1	    0x488b95c8f6ff	            mov rdx, qword [rbp - 0x938]	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018e8	        0x488d7a14	                   lea rdi, [rdx + 0x14]	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018ec	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018f2	        0x4883ec08	                              sub rsp, 8	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018f6	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018fd	              0x51	                                push rcx	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x40018fe	    0x41b900000000	                              mov r9d, 0	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x4001904	    0x41b800000000	                              mov r8d, 0	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x400190a	      0xb900000000	                              mov ecx, 0	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x400190f	          0x4889c6	                            mov rsi, rax	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x4001912	      0xe800000000	                          call 0x4001917	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x4001917	        0x4883c410	                           add rsp, 0x10	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x400191b	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       583	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_28
0x4001921	    0x488b85c8f6ff	            mov rax, qword [rbp - 0x938]	       588	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_29
0x4001928	          0x4889c7	                            mov rdi, rax	       588	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_29
0x400192b	      0xe800000000	                          call 0x4001930	       588	reflog.c	FUNCTION_42	IF_16	FOR_2	CALL_29
0x4001930	    0x8385b4f6ffff	              add dword [rbp - 0x94c], 1	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x4001937	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x400193d	    0x3b85b4f6ffff	            cmp eax, dword [rbp - 0x94c]	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x4001943	     0xf8f4affffff	                            jg 0x4001893	       580	reflog.c	FUNCTION_42	IF_16	FOR_2
0x4001949	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       590	reflog.c	FUNCTION_42	IF_16	CALL_30
0x4001950	          0x4889c7	                            mov rdi, rax	       590	reflog.c	FUNCTION_42	IF_16	CALL_30
0x4001953	      0xe800000000	                          call 0x4001958	       590	reflog.c	FUNCTION_42	IF_16	CALL_30
0x4001958	      0xe906010000	                           jmp 0x4001a63	       593	reflog.c	FUNCTION_42	FOR_3
0x400195d	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001963	            0x4898	                                    cdqe	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001965	    0x488d14c50000	                        lea rdx, [rax*8]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400196d	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001974	          0x4801d0	                            add rax, rdx	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001977	          0x488b00	                    mov rax, qword [rax]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400197a	          0x4889c7	                            mov rdi, rax	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400197d	      0xe800000000	                          call 0x4001982	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001982	            0x89c6	                            mov esi, eax	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001984	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400198a	            0x4898	                                    cdqe	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400198c	    0x488d14c50000	                        lea rdx, [rax*8]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x4001994	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400199b	          0x4801d0	                            add rax, rdx	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x400199e	          0x488b00	                    mov rax, qword [rax]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019a1	    0x488d8dd0f6ff	                  lea rcx, [rbp - 0x930]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019a8	    0x488d95e0f6ff	                  lea rdx, [rbp - 0x920]	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019af	          0x4889c7	                            mov rdi, rax	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019b2	      0xe800000000	                          call 0x40019b7	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019b7	            0x85c0	                           test eax, eax	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019b9	            0x753c	                           jne 0x40019f7	       596	reflog.c	FUNCTION_42	FOR_3	IF_17	CALL_32
0x40019bb	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019c1	            0x4898	                                    cdqe	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019c3	    0x488d14c50000	                        lea rdx, [rax*8]	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019cb	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019d2	          0x4801d0	                            add rax, rdx	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019d5	          0x488b00	                    mov rax, qword [rax]	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019d8	          0x4889c6	                            mov rsi, rax	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019db	      0xbf00000000	                              mov edi, 0	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019e0	      0xb800000000	                              mov eax, 0	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019e5	      0xe800000000	                          call 0x40019ea	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019ea	      0xe851e6ffff	                    call sym.const_error	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019ef	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019f5	            0xeb65	                           jmp 0x4001a5c	       597	reflog.c	FUNCTION_42	FOR_3	IF_17
0x40019f7	    0x488b95d0f6ff	            mov rdx, qword [rbp - 0x930]	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x40019fe	    0x8b85acf6ffff	            mov eax, dword [rbp - 0x954]	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a04	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a0b	        0x4883c118	                           add rcx, 0x18	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a0f	            0x89c6	                            mov esi, eax	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a11	          0x4889cf	                            mov rdi, rcx	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a14	      0xe862f9ffff	        call sym.set_reflog_expiry_param	       600	reflog.c	FUNCTION_42	FOR_3	CALL_33
0x4001a19	    0x488b85d0f6ff	            mov rax, qword [rbp - 0x930]	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a20	    0x8b95b0f6ffff	            mov edx, dword [rbp - 0x950]	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a26	    0x488db5e0f6ff	                  lea rsi, [rbp - 0x920]	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a2d	        0x4883ec08	                              sub rsp, 8	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a31	    0x488d8d00f7ff	                  lea rcx, [rbp - 0x900]	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a38	              0x51	                                push rcx	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a39	    0x41b900000000	                              mov r9d, 0	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a3f	    0x41b800000000	                              mov r8d, 0	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a45	      0xb900000000	                              mov ecx, 0	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a4a	          0x4889c7	                            mov rdi, rax	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a4d	      0xe800000000	                          call 0x4001a52	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a52	        0x4883c410	                           add rsp, 0x10	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a56	     0x985a4f6ffff	             or dword [rbp - 0x95c], eax	       601	reflog.c	FUNCTION_42	FOR_3	CALL_34
0x4001a5c	    0x8385a0f6ffff	              add dword [rbp - 0x960], 1	       593	reflog.c	FUNCTION_42	FOR_3
0x4001a63	    0x8b85a0f6ffff	            mov eax, dword [rbp - 0x960]	       593	reflog.c	FUNCTION_42	FOR_3
0x4001a69	    0x3b859cf6ffff	            cmp eax, dword [rbp - 0x964]	       593	reflog.c	FUNCTION_42	FOR_3
0x4001a6f	     0xf8ce8feffff	                            jl 0x400195d	       593	reflog.c	FUNCTION_42	FOR_3
0x4001a75	    0x8b85a4f6ffff	            mov eax, dword [rbp - 0x95c]	       607	reflog.c	FUNCTION_42
0x4001a7b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       608	reflog.c	FUNCTION_42
0x4001a7f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       608	reflog.c	FUNCTION_42
0x4001a88	            0x7405	                            je 0x4001a8f	       608	reflog.c	FUNCTION_42
0x4001a8a	      0xe800000000	                          call 0x4001a8f	       608	reflog.c	FUNCTION_42
0x4001a8f	              0xc9	                                   leave	       608	reflog.c	FUNCTION_42
0x4001a90	              0xc3	                                     ret	       608	reflog.c	FUNCTION_42
st_mult	functions,0:CALL,1:IF,1:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	22
0x400008f	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_61
0x4000090	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_61
0x4000093	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_61
0x4000097	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_61
0x400009b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_61
0x400009f	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000a4	            0x7430	                            je 0x40000d6	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000a6	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000ad	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000b2	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000b6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000ba	            0x731a	                           jae 0x40000d6	       795	git-compat-util.h	FUNCTION_61	IF_1
0x40000bc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000c4	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000c7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000cc	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	       796	git-compat-util.h	FUNCTION_61	IF_1	CALL_1
0x40000d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_61
0x40000da	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_61
0x40000df	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_61
0x40000e0	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_61
tree_is_complete	functions,0:CALL,8:IF,7:ELSE,0:FOR,0:WHILE,1:DO,0:SWITCH,0	140
0x400021c	              0x55	                                push rbp	        61	reflog.c	FUNCTION_29
0x400021d	          0x4889e5	                            mov rbp, rsp	        61	reflog.c	FUNCTION_29
0x4000220	        0x4883c480	             add rsp, 0xffffffffffffff80	        61	reflog.c	FUNCTION_29
0x4000224	        0x48897d88	             mov qword [rbp - 0x78], rdi	        61	reflog.c	FUNCTION_29
0x4000228	    0x64488b042528	                mov rax, qword fs:[0x28]	        61	reflog.c	FUNCTION_29
0x4000231	        0x488945f8	                mov qword [rbp - 8], rax	        61	reflog.c	FUNCTION_29
0x4000235	            0x31c0	                            xor eax, eax	        61	reflog.c	FUNCTION_29
0x4000237	        0x488b4588	             mov rax, qword [rbp - 0x78]	        67	reflog.c	FUNCTION_29	CALL_1
0x400023b	          0x4889c7	                            mov rdi, rax	        67	reflog.c	FUNCTION_29	CALL_1
0x400023e	      0xe800000000	                          call 0x4000243	        67	reflog.c	FUNCTION_29	CALL_1
0x4000243	        0x488945a0	             mov qword [rbp - 0x60], rax	        67	reflog.c	FUNCTION_29	CALL_1
0x4000247	      0x48837da000	               cmp qword [rbp - 0x60], 0	        68	reflog.c	FUNCTION_29	IF_1
0x400024c	            0x750a	                           jne 0x4000258	        68	reflog.c	FUNCTION_29	IF_1
0x400024e	      0xb800000000	                              mov eax, 0	        69	reflog.c	FUNCTION_29	IF_1
0x4000253	      0xe9a5010000	                           jmp 0x40003fd	        69	reflog.c	FUNCTION_29	IF_1
0x4000258	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        70	reflog.c	FUNCTION_29	IF_2
0x400025c	            0x8b00	                    mov eax, dword [rax]	        70	reflog.c	FUNCTION_29	IF_2
0x400025e	          0xc1e804	                              shr eax, 4	        70	reflog.c	FUNCTION_29	IF_2
0x4000261	      0x25ffffff07	                      and eax, 0x7ffffff	        70	reflog.c	FUNCTION_29	IF_2
0x4000266	          0x83e001	                              and eax, 1	        70	reflog.c	FUNCTION_29	IF_2
0x4000269	            0x85c0	                           test eax, eax	        70	reflog.c	FUNCTION_29	IF_2
0x400026b	            0x740a	                            je 0x4000277	        70	reflog.c	FUNCTION_29	IF_2
0x400026d	      0xb801000000	                              mov eax, 1	        71	reflog.c	FUNCTION_29	IF_2
0x4000272	      0xe986010000	                           jmp 0x40003fd	        71	reflog.c	FUNCTION_29	IF_2
0x4000277	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        72	reflog.c	FUNCTION_29	IF_3
0x400027b	            0x8b00	                    mov eax, dword [rax]	        72	reflog.c	FUNCTION_29	IF_3
0x400027d	          0xc1e804	                              shr eax, 4	        72	reflog.c	FUNCTION_29	IF_3
0x4000280	      0x25ffffff07	                      and eax, 0x7ffffff	        72	reflog.c	FUNCTION_29	IF_3
0x4000285	      0x2500040000	                          and eax, 0x400	        72	reflog.c	FUNCTION_29	IF_3
0x400028a	            0x85c0	                           test eax, eax	        72	reflog.c	FUNCTION_29	IF_3
0x400028c	            0x740a	                            je 0x4000298	        72	reflog.c	FUNCTION_29	IF_3
0x400028e	      0xb800000000	                              mov eax, 0	        73	reflog.c	FUNCTION_29	IF_3
0x4000293	      0xe965010000	                           jmp 0x40003fd	        73	reflog.c	FUNCTION_29	IF_3
0x4000298	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        75	reflog.c	FUNCTION_29	IF_4
0x400029c	        0x488b4018	            mov rax, qword [rax + 0x18] 	        75	reflog.c	FUNCTION_29	IF_4
0x40002a0	          0x4885c0	                           test rax, rax	        75	reflog.c	FUNCTION_29	IF_4
0x40002a3	            0x7572	                           jne 0x4000317	        75	reflog.c	FUNCTION_29	IF_4
0x40002a5	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002a9	        0x488d4db0	                   lea rcx, [rbp - 0x50]	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002ad	        0x488b4588	             mov rax, qword [rbp - 0x78]	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002b1	          0x4889ce	                            mov rsi, rcx	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002b4	          0x4889c7	                            mov rdi, rax	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002b7	      0xe8f3feffff	               call sym.read_object_file	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002bc	        0x488945a8	             mov qword [rbp - 0x58], rax	        78	reflog.c	FUNCTION_29	IF_4	CALL_2
0x40002c0	      0x48837da800	               cmp qword [rbp - 0x58], 0	        79	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002c5	            0x7538	                           jne 0x40002ff	        79	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002c7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002cb	            0x8b00	                    mov eax, dword [rax]	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002cd	          0xc1e804	                              shr eax, 4	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002d0	      0x25ffffff07	                      and eax, 0x7ffffff	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002d5	          0x80cc04	                                or ah, 4	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002d8	            0x89c2	                            mov edx, eax	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002da	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002de	    0x81e2ffffff07	                      and edx, 0x7ffffff	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002e4	            0x89d1	                            mov ecx, edx	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002e6	          0xc1e104	                              shl ecx, 4	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002e9	            0x8b10	                    mov edx, dword [rax]	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002eb	    0x81e20f000080	                     and edx, 0x8000000f	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002f1	             0x9ca	                             or edx, ecx	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002f3	            0x8910	                    mov dword [rax], edx	        80	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002f5	      0xb800000000	                              mov eax, 0	        81	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002fa	      0xe9fe000000	                           jmp 0x40003fd	        81	reflog.c	FUNCTION_29	IF_4	IF_5
0x40002ff	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        83	reflog.c	FUNCTION_29	IF_4
0x4000303	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	        83	reflog.c	FUNCTION_29	IF_4
0x4000307	        0x48895018	             mov qword [rax + 0x18], rdx	        83	reflog.c	FUNCTION_29	IF_4
0x400030b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        84	reflog.c	FUNCTION_29	IF_4
0x400030f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        84	reflog.c	FUNCTION_29	IF_4
0x4000313	        0x48895020	             mov qword [rax + 0x20], rdx	        84	reflog.c	FUNCTION_29	IF_4
0x4000317	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        86	reflog.c	FUNCTION_29	CALL_3
0x400031b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        86	reflog.c	FUNCTION_29	CALL_3
0x400031f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        86	reflog.c	FUNCTION_29	CALL_3
0x4000323	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        86	reflog.c	FUNCTION_29	CALL_3
0x4000327	        0x488d45d0	                   lea rax, [rbp - 0x30]	        86	reflog.c	FUNCTION_29	CALL_3
0x400032b	          0x4889ce	                            mov rsi, rcx	        86	reflog.c	FUNCTION_29	CALL_3
0x400032e	          0x4889c7	                            mov rdi, rax	        86	reflog.c	FUNCTION_29	CALL_3
0x4000331	      0xe800000000	                          call 0x4000336	        86	reflog.c	FUNCTION_29	CALL_3
0x4000336	    0xc7459c010000	               mov dword [rbp - 0x64], 1	        87	reflog.c	FUNCTION_29
0x400033d	            0xeb64	                           jmp 0x40003a3	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x400033f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x4000343	          0x4889c7	                            mov rdi, rax	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x4000346	      0xe893feffff	                  call sym.has_sha1_file	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x400034b	            0x85c0	                           test eax, eax	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x400034d	            0x741f	                            je 0x400036e	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x400034f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x4000352	      0x2500f00000	                         and eax, 0xf000	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x4000357	      0x3d00400000	                         cmp eax, 0x4000	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x400035c	            0x7545	                           jne 0x40003a3	        89	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_5
0x400035e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x4000362	          0x4889c7	                            mov rdi, rax	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x4000365	      0xe8b2feffff	               call sym.tree_is_complete	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x400036a	            0x85c0	                           test eax, eax	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x400036c	            0x7535	                           jne 0x40003a3	        90	reflog.c	FUNCTION_29	WHILE_1	IF_6	CALL_7
0x400036e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000372	            0x8b00	                    mov eax, dword [rax]	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000374	          0xc1e804	                              shr eax, 4	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000377	      0x25ffffff07	                      and eax, 0x7ffffff	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400037c	          0x80cc04	                                or ah, 4	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400037f	            0x89c2	                            mov edx, eax	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000381	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000385	    0x81e2ffffff07	                      and edx, 0x7ffffff	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400038b	            0x89d1	                            mov ecx, edx	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400038d	          0xc1e104	                              shl ecx, 4	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000390	            0x8b10	                    mov edx, dword [rax]	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000392	    0x81e20f000080	                     and edx, 0x8000000f	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x4000398	             0x9ca	                             or edx, ecx	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400039a	            0x8910	                    mov dword [rax], edx	        91	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x400039c	    0xc7459c000000	               mov dword [rbp - 0x64], 0	        92	reflog.c	FUNCTION_29	WHILE_1	IF_6
0x40003a3	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003a7	        0x488d45d0	                   lea rax, [rbp - 0x30]	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003ab	          0x4889d6	                            mov rsi, rdx	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003ae	          0x4889c7	                            mov rdi, rax	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003b1	      0xe800000000	                          call 0x40003b6	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003b6	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003b8	            0x7585	                           jne 0x400033f	        88	reflog.c	FUNCTION_29	WHILE_1	CALL_4
0x40003ba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        95	reflog.c	FUNCTION_29	CALL_8
0x40003be	          0x4889c7	                            mov rdi, rax	        95	reflog.c	FUNCTION_29	CALL_8
0x40003c1	      0xe800000000	                          call 0x40003c6	        95	reflog.c	FUNCTION_29	CALL_8
0x40003c6	        0x837d9c00	               cmp dword [rbp - 0x64], 0	        97	reflog.c	FUNCTION_29	IF_7
0x40003ca	            0x742e	                            je 0x40003fa	        97	reflog.c	FUNCTION_29	IF_7
0x40003cc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        98	reflog.c	FUNCTION_29	IF_7
0x40003d0	            0x8b00	                    mov eax, dword [rax]	        98	reflog.c	FUNCTION_29	IF_7
0x40003d2	          0xc1e804	                              shr eax, 4	        98	reflog.c	FUNCTION_29	IF_7
0x40003d5	      0x25ffffff07	                      and eax, 0x7ffffff	        98	reflog.c	FUNCTION_29	IF_7
0x40003da	          0x83c801	                               or eax, 1	        98	reflog.c	FUNCTION_29	IF_7
0x40003dd	            0x89c2	                            mov edx, eax	        98	reflog.c	FUNCTION_29	IF_7
0x40003df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        98	reflog.c	FUNCTION_29	IF_7
0x40003e3	    0x81e2ffffff07	                      and edx, 0x7ffffff	        98	reflog.c	FUNCTION_29	IF_7
0x40003e9	            0x89d1	                            mov ecx, edx	        98	reflog.c	FUNCTION_29	IF_7
0x40003eb	          0xc1e104	                              shl ecx, 4	        98	reflog.c	FUNCTION_29	IF_7
0x40003ee	            0x8b10	                    mov edx, dword [rax]	        98	reflog.c	FUNCTION_29	IF_7
0x40003f0	    0x81e20f000080	                     and edx, 0x8000000f	        98	reflog.c	FUNCTION_29	IF_7
0x40003f6	             0x9ca	                             or edx, ecx	        98	reflog.c	FUNCTION_29	IF_7
0x40003f8	            0x8910	                    mov dword [rax], edx	        98	reflog.c	FUNCTION_29	IF_7
0x40003fa	          0x8b459c	             mov eax, dword [rbp - 0x64]	        99	reflog.c	FUNCTION_29
0x40003fd	        0x488b75f8	                mov rsi, qword [rbp - 8]	       100	reflog.c	FUNCTION_29
0x4000401	    0x644833342528	                xor rsi, qword fs:[0x28]	       100	reflog.c	FUNCTION_29
0x400040a	            0x7405	                            je 0x4000411	       100	reflog.c	FUNCTION_29
0x400040c	      0xe800000000	                          call 0x4000411	       100	reflog.c	FUNCTION_29
0x4000411	              0xc9	                                   leave	       100	reflog.c	FUNCTION_29
0x4000412	              0xc3	                                     ret	       100	reflog.c	FUNCTION_29
collect_reflog	functions,0:CALL,1:IF,0:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	108
0x4000f79	              0x55	                                push rbp	       384	reflog.c	FUNCTION_38
0x4000f7a	          0x4889e5	                            mov rbp, rsp	       384	reflog.c	FUNCTION_38
0x4000f7d	        0x4883ec40	                           sub rsp, 0x40	       384	reflog.c	FUNCTION_38
0x4000f81	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       384	reflog.c	FUNCTION_38
0x4000f85	        0x488975d0	             mov qword [rbp - 0x30], rsi	       384	reflog.c	FUNCTION_38
0x4000f89	          0x8955cc	             mov dword [rbp - 0x34], edx	       384	reflog.c	FUNCTION_38
0x4000f8c	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       384	reflog.c	FUNCTION_38
0x4000f90	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       386	reflog.c	FUNCTION_38
0x4000f94	        0x488945e8	             mov qword [rbp - 0x18], rax	       386	reflog.c	FUNCTION_38
0x4000f98	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	reflog.c	FUNCTION_38
0x4000f9c	          0x4889c7	                            mov rdi, rax	       388	reflog.c	FUNCTION_38
0x4000f9f	      0xe800000000	                          call 0x4000fa4	       388	reflog.c	FUNCTION_38
0x4000fa4	        0x488945f0	             mov qword [rbp - 0x10], rax	       388	reflog.c	FUNCTION_38
0x4000fa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       388	reflog.c	FUNCTION_38
0x4000fac	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_38
0x4000faf	      0xbf14000000	                           mov edi, 0x14	       388	reflog.c	FUNCTION_38
0x4000fb4	      0xe892f0ffff	                         call sym.st_add	       388	reflog.c	FUNCTION_38
0x4000fb9	      0xbe01000000	                              mov esi, 1	       388	reflog.c	FUNCTION_38
0x4000fbe	          0x4889c7	                            mov rdi, rax	       388	reflog.c	FUNCTION_38
0x4000fc1	      0xe885f0ffff	                         call sym.st_add	       388	reflog.c	FUNCTION_38
0x4000fc6	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_38
0x4000fc9	      0xbf01000000	                              mov edi, 1	       388	reflog.c	FUNCTION_38
0x4000fce	      0xe800000000	                          call 0x4000fd3	       388	reflog.c	FUNCTION_38
0x4000fd3	        0x488945f8	                mov qword [rbp - 8], rax	       388	reflog.c	FUNCTION_38
0x4000fd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	reflog.c	FUNCTION_38
0x4000fdb	        0x488d4814	                   lea rcx, [rax + 0x14]	       388	reflog.c	FUNCTION_38
0x4000fdf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       388	reflog.c	FUNCTION_38
0x4000fe3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	reflog.c	FUNCTION_38
0x4000fe7	          0x4889c6	                            mov rsi, rax	       388	reflog.c	FUNCTION_38
0x4000fea	          0x4889cf	                            mov rdi, rcx	       388	reflog.c	FUNCTION_38
0x4000fed	      0xe800000000	                          call 0x4000ff2	       388	reflog.c	FUNCTION_38
0x4000ff2	        0x488b45f8	                mov rax, qword [rbp - 8]	       389	reflog.c	FUNCTION_38	CALL_1
0x4000ff6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       389	reflog.c	FUNCTION_38	CALL_1
0x4000ffa	          0x4889d6	                            mov rsi, rdx	       389	reflog.c	FUNCTION_38	CALL_1
0x4000ffd	          0x4889c7	                            mov rdi, rax	       389	reflog.c	FUNCTION_38	CALL_1
0x4001000	      0xe884f1ffff	                         call sym.oidcpy	       389	reflog.c	FUNCTION_38	CALL_1
0x4001005	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001009	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_38
0x400100c	          0x8d5001	                      lea edx, [rax + 1]	       390	reflog.c	FUNCTION_38
0x400100f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001013	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_38
0x4001016	            0x39c2	                            cmp edx, eax	       390	reflog.c	FUNCTION_38
0x4001018	     0xf8e93000000	                           jle 0x40010b1	       390	reflog.c	FUNCTION_38
0x400101e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001022	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_38
0x4001025	          0x8d5010	                   lea edx, [rax + 0x10]	       390	reflog.c	FUNCTION_38
0x4001028	            0x89d0	                            mov eax, edx	       390	reflog.c	FUNCTION_38
0x400102a	             0x1c0	                            add eax, eax	       390	reflog.c	FUNCTION_38
0x400102c	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_38
0x400102e	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_38
0x4001030	          0xc1ea1f	                           shr edx, 0x1f	       390	reflog.c	FUNCTION_38
0x4001033	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_38
0x4001035	            0xd1f8	                              sar eax, 1	       390	reflog.c	FUNCTION_38
0x4001037	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_38
0x4001039	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x400103d	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_38
0x4001040	          0x83c001	                              add eax, 1	       390	reflog.c	FUNCTION_38
0x4001043	            0x39c2	                            cmp edx, eax	       390	reflog.c	FUNCTION_38
0x4001045	            0x7d13	                           jge 0x400105a	       390	reflog.c	FUNCTION_38
0x4001047	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x400104b	          0x8b400c	              mov eax, dword [rax + 0xc]	       390	reflog.c	FUNCTION_38
0x400104e	          0x8d5001	                      lea edx, [rax + 1]	       390	reflog.c	FUNCTION_38
0x4001051	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001055	          0x895008	                mov dword [rax + 8], edx	       390	reflog.c	FUNCTION_38
0x4001058	            0xeb22	                           jmp 0x400107c	       390	reflog.c	FUNCTION_38
0x400105a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x400105e	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_38
0x4001061	          0x8d5010	                   lea edx, [rax + 0x10]	       390	reflog.c	FUNCTION_38
0x4001064	            0x89d0	                            mov eax, edx	       390	reflog.c	FUNCTION_38
0x4001066	             0x1c0	                            add eax, eax	       390	reflog.c	FUNCTION_38
0x4001068	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_38
0x400106a	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_38
0x400106c	          0xc1ea1f	                           shr edx, 0x1f	       390	reflog.c	FUNCTION_38
0x400106f	             0x1d0	                            add eax, edx	       390	reflog.c	FUNCTION_38
0x4001071	            0xd1f8	                              sar eax, 1	       390	reflog.c	FUNCTION_38
0x4001073	            0x89c2	                            mov edx, eax	       390	reflog.c	FUNCTION_38
0x4001075	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001079	          0x895008	                mov dword [rax + 8], edx	       390	reflog.c	FUNCTION_38
0x400107c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001080	          0x8b4008	                mov eax, dword [rax + 8]	       390	reflog.c	FUNCTION_38
0x4001083	            0x4898	                                    cdqe	       390	reflog.c	FUNCTION_38
0x4001085	          0x4889c6	                            mov rsi, rax	       390	reflog.c	FUNCTION_38
0x4001088	      0xbf08000000	                              mov edi, 8	       390	reflog.c	FUNCTION_38
0x400108d	      0xe8fdefffff	                        call sym.st_mult	       390	reflog.c	FUNCTION_38
0x4001092	          0x4889c2	                            mov rdx, rax	       390	reflog.c	FUNCTION_38
0x4001095	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x4001099	          0x488b00	                    mov rax, qword [rax]	       390	reflog.c	FUNCTION_38
0x400109c	          0x4889d6	                            mov rsi, rdx	       390	reflog.c	FUNCTION_38
0x400109f	          0x4889c7	                            mov rdi, rax	       390	reflog.c	FUNCTION_38
0x40010a2	      0xe800000000	                          call 0x40010a7	       390	reflog.c	FUNCTION_38
0x40010a7	          0x4889c2	                            mov rdx, rax	       390	reflog.c	FUNCTION_38
0x40010aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	reflog.c	FUNCTION_38
0x40010ae	          0x488910	                    mov qword [rax], rdx	       390	reflog.c	FUNCTION_38
0x40010b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_38
0x40010b5	          0x488b30	                    mov rsi, qword [rax]	       391	reflog.c	FUNCTION_38
0x40010b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_38
0x40010bc	          0x8b400c	              mov eax, dword [rax + 0xc]	       391	reflog.c	FUNCTION_38
0x40010bf	          0x8d4801	                      lea ecx, [rax + 1]	       391	reflog.c	FUNCTION_38
0x40010c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       391	reflog.c	FUNCTION_38
0x40010c6	          0x894a0c	              mov dword [rdx + 0xc], ecx	       391	reflog.c	FUNCTION_38
0x40010c9	            0x4898	                                    cdqe	       391	reflog.c	FUNCTION_38
0x40010cb	        0x48c1e003	                              shl rax, 3	       391	reflog.c	FUNCTION_38
0x40010cf	        0x488d1406	                    lea rdx, [rsi + rax]	       391	reflog.c	FUNCTION_38
0x40010d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       391	reflog.c	FUNCTION_38
0x40010d7	          0x488902	                    mov qword [rdx], rax	       391	reflog.c	FUNCTION_38
0x40010da	      0xb800000000	                              mov eax, 0	       392	reflog.c	FUNCTION_38
0x40010df	              0xc9	                                   leave	       393	reflog.c	FUNCTION_38
0x40010e0	              0xc3	                                     ret	       393	reflog.c	FUNCTION_38
keep_entry	functions,0:CALL,3:IF,3:ELSE,0:FOR,0:WHILE,0:DO,0:SWITCH,0	34
0x400086b	              0x55	                                push rbp	       192	reflog.c	FUNCTION_31
0x400086c	          0x4889e5	                            mov rbp, rsp	       192	reflog.c	FUNCTION_31
0x400086f	        0x4883ec20	                           sub rsp, 0x20	       192	reflog.c	FUNCTION_31
0x4000873	        0x48897de8	             mov qword [rbp - 0x18], rdi	       192	reflog.c	FUNCTION_31
0x4000877	        0x488975e0	             mov qword [rbp - 0x20], rsi	       192	reflog.c	FUNCTION_31
0x400087b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       195	reflog.c	FUNCTION_31	IF_1	CALL_1
0x400087f	          0x4889c7	                            mov rdi, rax	       195	reflog.c	FUNCTION_31	IF_1	CALL_1
0x4000882	      0xe8b0f8ffff	                    call sym.is_null_oid	       195	reflog.c	FUNCTION_31	IF_1	CALL_1
0x4000887	            0x85c0	                           test eax, eax	       195	reflog.c	FUNCTION_31	IF_1	CALL_1
0x4000889	            0x7407	                            je 0x4000892	       195	reflog.c	FUNCTION_31	IF_1	CALL_1
0x400088b	      0xb801000000	                              mov eax, 1	       196	reflog.c	FUNCTION_31	IF_1
0x4000890	            0xeb4a	                           jmp 0x40008dc	       196	reflog.c	FUNCTION_31	IF_1
0x4000892	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       197	reflog.c	FUNCTION_31	CALL_2
0x4000896	      0xbe01000000	                              mov esi, 1	       197	reflog.c	FUNCTION_31	CALL_2
0x400089b	          0x4889c7	                            mov rdi, rax	       197	reflog.c	FUNCTION_31	CALL_2
0x400089e	      0xe800000000	                          call 0x40008a3	       197	reflog.c	FUNCTION_31	CALL_2
0x40008a3	        0x488945f8	                mov qword [rbp - 8], rax	       197	reflog.c	FUNCTION_31	CALL_2
0x40008a7	      0x48837df800	                  cmp qword [rbp - 8], 0	       198	reflog.c	FUNCTION_31	IF_2
0x40008ac	            0x7507	                           jne 0x40008b5	       198	reflog.c	FUNCTION_31	IF_2
0x40008ae	      0xb800000000	                              mov eax, 0	       199	reflog.c	FUNCTION_31	IF_2
0x40008b3	            0xeb27	                           jmp 0x40008dc	       199	reflog.c	FUNCTION_31	IF_2
0x40008b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	reflog.c	FUNCTION_31	IF_3	CALL_3
0x40008b9	          0x4889c7	                            mov rdi, rax	       209	reflog.c	FUNCTION_31	IF_3	CALL_3
0x40008bc	      0xe852fbffff	             call sym.commit_is_complete	       209	reflog.c	FUNCTION_31	IF_3	CALL_3
0x40008c1	            0x85c0	                           test eax, eax	       209	reflog.c	FUNCTION_31	IF_3	CALL_3
0x40008c3	            0x7507	                           jne 0x40008cc	       209	reflog.c	FUNCTION_31	IF_3	CALL_3
0x40008c5	      0xb800000000	                              mov eax, 0	       210	reflog.c	FUNCTION_31	IF_3
0x40008ca	            0xeb10	                           jmp 0x40008dc	       210	reflog.c	FUNCTION_31	IF_3
0x40008cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	reflog.c	FUNCTION_31
0x40008d0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       211	reflog.c	FUNCTION_31
0x40008d4	          0x488910	                    mov qword [rax], rdx	       211	reflog.c	FUNCTION_31
0x40008d7	      0xb801000000	                              mov eax, 1	       212	reflog.c	FUNCTION_31
0x40008dc	              0xc9	                                   leave	       213	reflog.c	FUNCTION_31
0x40008dd	              0xc3	                                     ret	       213	reflog.c	FUNCTION_31
find_cfg_ent	functions,0:CALL,1:IF,2:ELSE,0:FOR,1:WHILE,0:DO,0:SWITCH,0	63
0x40010e1	              0x55	                                push rbp	       403	reflog.c	FUNCTION_39
0x40010e2	          0x4889e5	                            mov rbp, rsp	       403	reflog.c	FUNCTION_39
0x40010e5	        0x4883ec20	                           sub rsp, 0x20	       403	reflog.c	FUNCTION_39
0x40010e9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       403	reflog.c	FUNCTION_39
0x40010ed	        0x488975e0	             mov qword [rbp - 0x20], rsi	       403	reflog.c	FUNCTION_39
0x40010f1	    0x488b05000000	            mov rax, qword [0x040010f8] 	       406	reflog.c	FUNCTION_39	IF_1
0x40010f8	          0x4885c0	                           test rax, rax	       406	reflog.c	FUNCTION_39	IF_1
0x40010fb	            0x750b	                           jne 0x4001108	       406	reflog.c	FUNCTION_39	IF_1
0x40010fd	    0x48c705000000	               mov qword [0x04001108], 0	       407	reflog.c	FUNCTION_39	IF_1
0x4001108	    0x488b05000000	            mov rax, qword [0x0400110f] 	       409	reflog.c	FUNCTION_39	FOR_1
0x400110f	        0x488945f0	             mov qword [rbp - 0x10], rax	       409	reflog.c	FUNCTION_39	FOR_1
0x4001113	            0xeb49	                           jmp 0x400115e	       409	reflog.c	FUNCTION_39	FOR_1
0x4001115	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001119	        0x488d4818	                   lea rcx, [rax + 0x18]	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x400111d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001121	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001125	          0x4889c6	                            mov rsi, rax	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001128	          0x4889cf	                            mov rdi, rcx	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x400112b	      0xe800000000	                          call 0x4001130	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001130	            0x85c0	                           test eax, eax	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001132	            0x751f	                           jne 0x4001153	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001134	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       411	reflog.c	FUNCTION_39	FOR_1	IF_2
0x4001138	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	reflog.c	FUNCTION_39	FOR_1	IF_2
0x400113c	          0x4801d0	                            add rax, rdx	       411	reflog.c	FUNCTION_39	FOR_1	IF_2
0x400113f	        0x4883c018	                           add rax, 0x18	       411	reflog.c	FUNCTION_39	FOR_1	IF_2
0x4001143	           0xfb600	                   movzx eax, byte [rax]	       411	reflog.c	FUNCTION_39	FOR_1	IF_2
0x4001146	            0x84c0	                             test al, al	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x4001148	            0x7509	                           jne 0x4001153	       410	reflog.c	FUNCTION_39	FOR_1	IF_2	CALL_1
0x400114a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       412	reflog.c	FUNCTION_39	FOR_1	IF_2
0x400114e	      0xe981000000	                           jmp 0x40011d4	       412	reflog.c	FUNCTION_39	FOR_1	IF_2
0x4001153	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       409	reflog.c	FUNCTION_39	FOR_1
0x4001157	          0x488b00	                    mov rax, qword [rax]	       409	reflog.c	FUNCTION_39	FOR_1
0x400115a	        0x488945f0	             mov qword [rbp - 0x10], rax	       409	reflog.c	FUNCTION_39	FOR_1
0x400115e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       409	reflog.c	FUNCTION_39	FOR_1
0x4001163	            0x75b0	                           jne 0x4001115	       409	reflog.c	FUNCTION_39	FOR_1
0x4001165	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	reflog.c	FUNCTION_39
0x4001169	        0x488945f8	                mov qword [rbp - 8], rax	       414	reflog.c	FUNCTION_39
0x400116d	        0x488b45f8	                mov rax, qword [rbp - 8]	       414	reflog.c	FUNCTION_39
0x4001171	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_39
0x4001174	      0xbf18000000	                           mov edi, 0x18	       414	reflog.c	FUNCTION_39
0x4001179	      0xe8cdeeffff	                         call sym.st_add	       414	reflog.c	FUNCTION_39
0x400117e	      0xbe01000000	                              mov esi, 1	       414	reflog.c	FUNCTION_39
0x4001183	          0x4889c7	                            mov rdi, rax	       414	reflog.c	FUNCTION_39
0x4001186	      0xe8c0eeffff	                         call sym.st_add	       414	reflog.c	FUNCTION_39
0x400118b	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_39
0x400118e	      0xbf01000000	                              mov edi, 1	       414	reflog.c	FUNCTION_39
0x4001193	      0xe800000000	                          call 0x4001198	       414	reflog.c	FUNCTION_39
0x4001198	        0x488945f0	             mov qword [rbp - 0x10], rax	       414	reflog.c	FUNCTION_39
0x400119c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       414	reflog.c	FUNCTION_39
0x40011a0	        0x488d4818	                   lea rcx, [rax + 0x18]	       414	reflog.c	FUNCTION_39
0x40011a4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       414	reflog.c	FUNCTION_39
0x40011a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	reflog.c	FUNCTION_39
0x40011ac	          0x4889c6	                            mov rsi, rax	       414	reflog.c	FUNCTION_39
0x40011af	          0x4889cf	                            mov rdi, rcx	       414	reflog.c	FUNCTION_39
0x40011b2	      0xe800000000	                          call 0x40011b7	       414	reflog.c	FUNCTION_39
0x40011b7	    0x488b05000000	            mov rax, qword [0x040011be] 	       415	reflog.c	FUNCTION_39
0x40011be	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       415	reflog.c	FUNCTION_39
0x40011c2	          0x488910	                    mov qword [rax], rdx	       415	reflog.c	FUNCTION_39
0x40011c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       416	reflog.c	FUNCTION_39
0x40011c9	    0x488905000000	            mov qword [0x040011d0], rax 	       416	reflog.c	FUNCTION_39
0x40011d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       417	reflog.c	FUNCTION_39
0x40011d4	              0xc9	                                   leave	       418	reflog.c	FUNCTION_39
0x40011d5	              0xc3	                                     ret	       418	reflog.c	FUNCTION_39
