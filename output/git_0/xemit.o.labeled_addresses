xdl_emit_diff	SWITCH,0:CALL,20:ELSE,0:IF,19:FOR,7:DO,0:functions,0:WHILE,3	439
0x40006b0	              0x55	                                push rbp	       168	xemit.c	FUNCTION_9
0x40006b1	          0x4889e5	                            mov rbp, rsp	       168	xemit.c	FUNCTION_9
0x40006b4	    0x4881ecf00000	                           sub rsp, 0xf0	       168	xemit.c	FUNCTION_9
0x40006bb	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       168	xemit.c	FUNCTION_9
0x40006c2	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       168	xemit.c	FUNCTION_9
0x40006c9	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       168	xemit.c	FUNCTION_9
0x40006d0	    0x48898d10ffff	             mov qword [rbp - 0xf0], rcx	       168	xemit.c	FUNCTION_9
0x40006d7	    0x64488b042528	                mov rax, qword fs:[0x28]	       168	xemit.c	FUNCTION_9
0x40006e0	        0x488945f8	                mov qword [rbp - 8], rax	       168	xemit.c	FUNCTION_9
0x40006e4	            0x31c0	                            xor eax, eax	       168	xemit.c	FUNCTION_9
0x40006e6	    0x48c78568ffff	mov qword [rbp - 0x98], 0xffffffffffffffff	       171	xemit.c	FUNCTION_9
0x40006f1	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       172	xemit.c	FUNCTION_9
0x40006f5	      0xb800000000	                              mov eax, 0	       172	xemit.c	FUNCTION_9
0x40006fa	      0xb90b000000	                            mov ecx, 0xb	       172	xemit.c	FUNCTION_9
0x40006ff	          0x4889d7	                            mov rdi, rdx	       172	xemit.c	FUNCTION_9
0x4000702	          0xf348ab	              rep stosq qword [rdi], rax	       172	xemit.c	FUNCTION_9
0x4000705	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       174	xemit.c	FUNCTION_9	FOR_1
0x400070c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000713	      0xe9c6070000	                           jmp 0x4000ede	       174	xemit.c	FUNCTION_9	FOR_1
0x4000718	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x400071f	    0x488d8538ffff	                   lea rax, [rbp - 0xc8]	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000726	          0x4889d6	                            mov rsi, rdx	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000729	          0x4889c7	                            mov rdi, rax	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x400072c	      0xe800000000	                          call 0x4000731	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000731	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000738	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x400073f	          0x4885c0	                           test rax, rax	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000742	     0xf84a8070000	                            je 0x4000ef0	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000748	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400074f	        0x488b5008	                mov rdx, qword [rax + 8]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000753	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400075a	          0x488b00	                    mov rax, qword [rax]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400075d	          0x4829c2	                            sub rdx, rax	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000760	          0x4889d0	                            mov rax, rdx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000763	      0xba00000000	                              mov edx, 0	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000768	          0x4885c0	                           test rax, rax	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400076b	        0x480f48c2	                          cmovs rax, rdx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400076f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000776	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400077d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000781	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000788	          0x488b00	                    mov rax, qword [rax]	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400078b	          0x4829c2	                            sub rdx, rax	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400078e	          0x4889d0	                            mov rax, rdx	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000791	      0xba00000000	                              mov edx, 0	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000796	          0x4885c0	                           test rax, rax	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000799	        0x480f48c2	                          cmovs rax, rdx	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400079d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x40007a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007af	          0x83e004	                              and eax, 4	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007b2	          0x4885c0	                           test rax, rax	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007b5	     0xf846b010000	                            je 0x4000926	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007bb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       183	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007c2	        0x488b4008	                mov rax, qword [rax + 8]	       183	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007c6	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       183	xemit.c	FUNCTION_9	FOR_1	IF_2
0x40007cd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007d4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007d8	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007df	            0x7f6d	                            jg 0x400084e	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007e1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       187	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       187	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007ec	        0x48894580	             mov qword [rbp - 0x80], rax	       187	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40007f0	            0xeb32	                           jmp 0x4000824	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40007f2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40007f9	    0x488d88880000	                   lea rcx, [rax + 0x88]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000800	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000804	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x400080b	          0x4889c6	                            mov rsi, rax	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x400080e	          0x4889cf	                            mov rdi, rcx	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000811	      0xe896fcffff	                    call sym.is_func_rec	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000816	            0x85c0	                           test eax, eax	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000818	            0x7405	                            je 0x400081f	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x400081a	      0xe907010000	                           jmp 0x4000926	       195	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4
0x400081f	      0x4883458001	               add qword [rbp - 0x80], 1	       196	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000824	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x400082b	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000832	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000836	            0x7fba	                            jg 0x40007f2	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000838	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400083f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x4000843	        0x4883e801	                              sub rax, 1	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x4000847	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400084e	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000855	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x400085c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000863	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x400086a	          0x4889d1	                            mov rcx, rdx	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x400086d	      0xba00000000	                              mov edx, 0	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000872	          0x4889c7	                            mov rdi, rax	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000875	      0xe893fcffff	                  call sym.get_func_line	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x400087a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x4000881	            0xeb08	                           jmp 0x400088b	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000883	    0x4883ad70ffff	               sub qword [rbp - 0x90], 1	       209	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2
0x400088b	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000893	            0x7e49	                           jle 0x40008de	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000895	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400089c	        0x488d50ff	                      lea rdx, [rax - 1]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008a0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008a7	          0x4889d6	                            mov rsi, rdx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008aa	          0x4889c7	                            mov rdi, rax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008ad	      0xe862fdffff	                   call sym.is_empty_rec	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008b2	            0x85c0	                           test eax, eax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008b4	            0x7528	                           jne 0x40008de	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008b6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008bd	        0x488d50ff	                      lea rdx, [rax - 1]	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008c1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008c8	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008cf	          0x4889ce	                            mov rsi, rcx	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008d2	          0x4889c7	                            mov rdi, rax	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008d5	      0xe8d2fbffff	                    call sym.is_func_rec	       208	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_7
0x40008da	            0x85c0	                           test eax, eax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008dc	            0x74a5	                            je 0x4000883	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40008de	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       210	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x40008e6	            0x790b	                           jns 0x40008f3	       210	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x40008e8	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       211	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_5
0x40008f3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x40008fa	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000901	            0x7d23	                           jge 0x4000926	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000903	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400090a	    0x482b8570ffff	             sub rax, qword [rbp - 0x90]	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000911	    0x48298548ffff	             sub qword [rbp - 0xb8], rax	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000918	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       214	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400091f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       214	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000926	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       219	xemit.c	FUNCTION_9	FOR_1
0x400092d	          0x488b00	                    mov rax, qword [rax]	       219	xemit.c	FUNCTION_9	FOR_1
0x4000930	        0x48894590	             mov qword [rbp - 0x70], rax	       219	xemit.c	FUNCTION_9	FOR_1
0x4000934	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400093b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400093f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000946	        0x488b4808	                mov rcx, qword [rax + 8]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400094a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000951	        0x488b4018	            mov rax, qword [rax + 0x18] 	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000955	          0x4801c8	                            add rax, rcx	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000958	          0x4829c2	                            sub rdx, rax	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400095b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400095f	          0x4839c2	                            cmp rdx, rax	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000962	        0x480f4ec2	                         cmovle rax, rdx	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000966	        0x48894590	             mov qword [rbp - 0x70], rax	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400096a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000971	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000978	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400097f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000983	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400098a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400098e	          0x4801c8	                            add rax, rcx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000991	          0x4829c2	                            sub rdx, rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000994	        0x488b4590	             mov rax, qword [rbp - 0x70]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000998	          0x4839c2	                            cmp rdx, rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400099b	        0x480f4ec2	                         cmovle rax, rdx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400099f	        0x48894590	             mov qword [rbp - 0x70], rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x40009a3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       223	xemit.c	FUNCTION_9	FOR_1
0x40009aa	        0x488b5008	                mov rdx, qword [rax + 8]	       223	xemit.c	FUNCTION_9	FOR_1
0x40009ae	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       223	xemit.c	FUNCTION_9	FOR_1
0x40009b5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       223	xemit.c	FUNCTION_9	FOR_1
0x40009b9	          0x4801c2	                            add rdx, rax	       223	xemit.c	FUNCTION_9	FOR_1
0x40009bc	        0x488b4590	             mov rax, qword [rbp - 0x70]	       223	xemit.c	FUNCTION_9	FOR_1
0x40009c0	          0x4801d0	                            add rax, rdx	       223	xemit.c	FUNCTION_9	FOR_1
0x40009c3	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       223	xemit.c	FUNCTION_9	FOR_1
0x40009ca	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       224	xemit.c	FUNCTION_9	FOR_1
0x40009d1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       224	xemit.c	FUNCTION_9	FOR_1
0x40009d5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       224	xemit.c	FUNCTION_9	FOR_1
0x40009dc	        0x488b4020	            mov rax, qword [rax + 0x20] 	       224	xemit.c	FUNCTION_9	FOR_1
0x40009e0	          0x4801c2	                            add rdx, rax	       224	xemit.c	FUNCTION_9	FOR_1
0x40009e3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       224	xemit.c	FUNCTION_9	FOR_1
0x40009e7	          0x4801d0	                            add rax, rdx	       224	xemit.c	FUNCTION_9	FOR_1
0x40009ea	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       224	xemit.c	FUNCTION_9	FOR_1
0x40009f1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x40009f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x40009fc	          0x83e004	                              and eax, 4	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x40009ff	          0x4885c0	                           test rax, rax	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a02	     0xf8454010000	                            je 0x4000b5c	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a08	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a0f	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a13	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       228	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a1a	        0x488b5008	                mov rdx, qword [rax + 8]	       228	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a1e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       228	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a25	        0x488b4018	            mov rax, qword [rax + 0x18] 	       228	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000a29	          0x4801c2	                            add rdx, rax	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a2c	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a33	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a3a	          0x4989c8	                             mov r8, rcx	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a3d	          0x4889d1	                            mov rcx, rdx	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a40	      0xba00000000	                              mov edx, 0	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a45	          0x4889c7	                            mov rdi, rax	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a48	      0xe8c0faffff	                  call sym.get_func_line	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a4d	        0x48894588	             mov qword [rbp - 0x78], rax	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x4000a51	            0xeb05	                           jmp 0x4000a58	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a53	      0x48836d8801	               sub qword [rbp - 0x78], 1	       231	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3
0x4000a58	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a5d	            0x7e1e	                           jle 0x4000a7d	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a5f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a63	        0x488d50ff	                      lea rdx, [rax - 1]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a67	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a6e	          0x4889d6	                            mov rsi, rdx	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a71	          0x4889c7	                            mov rdi, rax	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a74	      0xe89bfbffff	                   call sym.is_empty_rec	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a79	            0x85c0	                           test eax, eax	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a7b	            0x75d6	                           jne 0x4000a53	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x4000a7d	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       232	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000a82	            0x790f	                           jns 0x4000a93	       232	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000a84	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000a8b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000a8f	        0x48894588	             mov qword [rbp - 0x78], rax	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x4000a93	        0x488b4588	             mov rax, qword [rbp - 0x78]	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000a97	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000a9e	            0x7e1d	                           jle 0x4000abd	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000aa0	        0x488b4588	             mov rax, qword [rbp - 0x78]	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000aa4	    0x482b8550ffff	             sub rax, qword [rbp - 0xb0]	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000aab	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000ab2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       236	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000ab6	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       236	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x4000abd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x4000ac4	          0x488b00	                    mov rax, qword [rax]	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x4000ac7	          0x4885c0	                           test rax, rax	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x4000aca	     0xf848c000000	                            je 0x4000b5c	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x4000ad0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000ad7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000adb	        0x488d50ff	                      lea rdx, [rax - 1]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000adf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000ae6	          0x488b00	                    mov rax, qword [rax]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000ae9	        0x488b4008	                mov rax, qword [rax + 8]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000aed	          0x4839c2	                            cmp rdx, rax	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000af0	        0x480f4ec2	                         cmovle rax, rdx	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000af4	        0x48894598	             mov qword [rbp - 0x68], rax	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000af8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000aff	          0x488b00	                    mov rax, qword [rax]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b02	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b06	          0x4829c2	                            sub rdx, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b09	          0x4889d0	                            mov rax, rdx	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b0c	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b13	            0x7e31	                           jle 0x4000b46	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b15	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b1c	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b20	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b27	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b2e	          0x4989c8	                             mov r8, rcx	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b31	          0x4889d1	                            mov rcx, rdx	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b34	      0xba00000000	                              mov edx, 0	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b39	          0x4889c7	                            mov rdi, rax	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b3c	      0xe8ccf9ffff	                  call sym.get_func_line	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000b41	          0x4885c0	                           test rax, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b44	            0x7916	                           jns 0x4000b5c	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b46	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       249	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b4d	          0x488b00	                    mov rax, qword [rax]	       249	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b50	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       249	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b57	      0xe9cafdffff	                           jmp 0x4000926	       250	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000b5c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000b63	        0x488b4010	            mov rax, qword [rax + 0x10] 	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000b67	          0x83e001	                              and eax, 1	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000b6a	          0x4885c0	                           test rax, rax	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000b6d	            0x7441	                            je 0x4000bb0	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000b6f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b76	        0x488d48ff	                      lea rcx, [rax - 1]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b7a	    0x488bbd68ffff	             mov rdi, qword [rbp - 0x98]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b81	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b85	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b8c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b93	          0x4989f8	                             mov r8, rdi	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b96	          0x4889c7	                            mov rdi, rax	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b99	      0xe86ff9ffff	                  call sym.get_func_line	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000b9e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       262	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000ba5	        0x4883e801	                              sub rax, 1	       262	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000ba9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       262	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000bb0	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bb4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bbb	    0x482b8548ffff	             sub rax, qword [rbp - 0xb8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bc2	          0x4889c2	                            mov rdx, rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bc5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bcc	        0x488d7001	                      lea rsi, [rax + 1]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bd0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bd7	    0x482b8540ffff	             sub rax, qword [rbp - 0xc0]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bde	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000be5	        0x4883c701	                              add rdi, 1	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000be9	        0x4c8d45a0	                    lea r8, [rbp - 0x60]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bed	        0x4983c008	                               add r8, 8	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bf1	        0x4883ec08	                              sub rsp, 8	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bf5	    0xffb518ffffff	                 push qword [rbp - 0xe8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bfb	          0x4989c9	                             mov r9, rcx	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000bfe	          0x4889d1	                            mov rcx, rdx	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c01	          0x4889f2	                            mov rdx, rsi	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c04	          0x4889c6	                            mov rsi, rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c07	      0xe800000000	                          call 0x4000c0c	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c0c	        0x4883c410	                           add rsp, 0x10	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c10	            0x85c0	                           test eax, eax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c12	            0x794c	                           jns 0x4000c60	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000c14	      0xb8ffffffff	                     mov eax, 0xffffffff	       266	xemit.c	FUNCTION_9	FOR_1	IF_13
0x4000c19	      0xe9d8020000	                           jmp 0x4000ef6	       266	xemit.c	FUNCTION_9	FOR_1	IF_13
0x4000c1e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c25	    0x488db8880000	                   lea rdi, [rax + 0x88]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c2c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c33	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c3a	          0x4889d1	                            mov rcx, rdx	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c3d	      0xba00000000	                              mov edx, 0	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c42	          0x4889c6	                            mov rsi, rax	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c45	      0xe843f4ffff	                call sym.xdl_emit_record	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c4a	            0x85c0	                           test eax, eax	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c4c	            0x790a	                           jns 0x4000c58	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000c4e	      0xb8ffffffff	                     mov eax, 0xffffffff	       273	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14
0x4000c53	      0xe99e020000	                           jmp 0x4000ef6	       273	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14
0x4000c58	    0x48838548ffff	               add qword [rbp - 0xb8], 1	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000c60	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000c67	        0x488b4010	            mov rax, qword [rax + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000c6b	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000c72	            0x7faa	                            jg 0x4000c1e	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000c74	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c7b	        0x488b4008	                mov rax, qword [rax + 8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c7f	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c86	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c8d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c91	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000c98	            0xeb4a	                           jmp 0x4000ce4	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000c9a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000ca1	    0x488db8880000	                   lea rdi, [rax + 0x88]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000ca8	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000caf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cb6	          0x4889d1	                            mov rcx, rdx	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cb9	      0xba00000000	                              mov edx, 0	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cbe	          0x4889c6	                            mov rsi, rax	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cc1	      0xe8c7f3ffff	                call sym.xdl_emit_record	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cc6	            0x85c0	                           test eax, eax	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cc8	            0x790a	                           jns 0x4000cd4	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000cca	      0xb8ffffffff	                     mov eax, 0xffffffff	       281	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15
0x4000ccf	      0xe922020000	                           jmp 0x4000ef6	       281	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15
0x4000cd4	    0x48838540ffff	               add qword [rbp - 0xc0], 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000cdc	    0x48838548ffff	               add qword [rbp - 0xb8], 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000ce4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000ceb	        0x488b4008	                mov rax, qword [rax + 8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000cef	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000cf6	            0x7e14	                           jle 0x4000d0c	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000cf8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000cff	        0x488b4010	            mov rax, qword [rax + 0x10] 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000d03	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000d0a	            0x7f8e	                            jg 0x4000c9a	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000d0c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d13	        0x488b4008	                mov rax, qword [rax + 8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d17	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d1e	            0xeb3b	                           jmp 0x4000d5b	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d20	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d27	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d2e	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d35	          0x4889d1	                            mov rcx, rdx	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d38	      0xba00000000	                              mov edx, 0	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d3d	          0x4889c7	                            mov rdi, rax	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d40	      0xe848f3ffff	                call sym.xdl_emit_record	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d45	            0x85c0	                           test eax, eax	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d47	            0x790a	                           jns 0x4000d53	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x4000d49	      0xb8ffffffff	                     mov eax, 0xffffffff	       288	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16
0x4000d4e	      0xe9a3010000	                           jmp 0x4000ef6	       288	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16
0x4000d53	    0x48838540ffff	               add qword [rbp - 0xc0], 1	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d5b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d62	        0x488b5008	                mov rdx, qword [rax + 8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d66	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d6d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d71	          0x4801d0	                            add rax, rdx	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d74	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d7b	            0x7fa3	                            jg 0x4000d20	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x4000d7d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000d84	        0x488b4010	            mov rax, qword [rax + 0x10] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000d88	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000d8f	            0xeb42	                           jmp 0x4000dd3	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000d91	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000d98	    0x488db8880000	                   lea rdi, [rax + 0x88]	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000d9f	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000da6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000dad	          0x4889d1	                            mov rcx, rdx	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000db0	      0xba00000000	                              mov edx, 0	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000db5	          0x4889c6	                            mov rsi, rax	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000db8	      0xe8d0f2ffff	                call sym.xdl_emit_record	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000dbd	            0x85c0	                           test eax, eax	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000dbf	            0x790a	                           jns 0x4000dcb	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000dc1	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17
0x4000dc6	      0xe92b010000	                           jmp 0x4000ef6	       295	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17
0x4000dcb	    0x48838548ffff	               add qword [rbp - 0xb8], 1	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000dd3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000dda	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000dde	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000de5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000de9	          0x4801d0	                            add rax, rdx	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000dec	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000df3	            0x7f9c	                            jg 0x4000d91	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000df5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x4000dfc	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x4000e03	            0x7456	                            je 0x4000e5b	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x4000e05	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e0c	        0x488b5008	                mov rdx, qword [rax + 8]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e10	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e17	        0x488b4018	            mov rax, qword [rax + 0x18] 	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e1b	          0x4801d0	                            add rax, rdx	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e1e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e25	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e2c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e30	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e37	        0x488b4020	            mov rax, qword [rax + 0x20] 	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e3b	          0x4801d0	                            add rax, rdx	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e3e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       300	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e45	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e4c	          0x488b00	                    mov rax, qword [rax]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e4f	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e56	      0xe93dfeffff	                           jmp 0x4000c98	       301	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000e5b	              0x90	                                     nop	       298	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x4000e5c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e63	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e67	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e6e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e72	          0x4801d0	                            add rax, rdx	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e75	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e7c	            0xeb3f	                           jmp 0x4000ebd	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000e7e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000e85	    0x488db8880000	                   lea rdi, [rax + 0x88]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000e8c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000e93	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000e9a	          0x4889d1	                            mov rcx, rdx	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000e9d	      0xba00000000	                              mov edx, 0	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000ea2	          0x4889c6	                            mov rsi, rax	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000ea5	      0xe8e3f1ffff	                call sym.xdl_emit_record	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000eaa	            0x85c0	                           test eax, eax	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000eac	            0x7907	                           jns 0x4000eb5	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000eae	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19
0x4000eb3	            0xeb41	                           jmp 0x4000ef6	       308	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19
0x4000eb5	    0x48838548ffff	               add qword [rbp - 0xb8], 1	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000ebd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000ec4	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000ecb	            0x7cb1	                            jl 0x4000e7e	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000ecd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ed4	          0x488b00	                    mov rax, qword [rax]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ed7	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ede	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ee5	          0x4885c0	                           test rax, rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ee8	     0xf852af8ffff	                           jne 0x4000718	       174	xemit.c	FUNCTION_9	FOR_1
0x4000eee	            0xeb01	                           jmp 0x4000ef1	       174	xemit.c	FUNCTION_9	FOR_1
0x4000ef0	              0x90	                                     nop	       177	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000ef1	      0xb800000000	                              mov eax, 0	       311	xemit.c	FUNCTION_9
0x4000ef6	        0x488b75f8	                mov rsi, qword [rbp - 8]	       312	xemit.c	FUNCTION_9
0x4000efa	    0x644833342528	                xor rsi, qword fs:[0x28]	       312	xemit.c	FUNCTION_9
0x4000f03	            0x7405	                            je 0x4000f0a	       312	xemit.c	FUNCTION_9
0x4000f05	      0xe800000000	                          call 0x4000f0a	       312	xemit.c	FUNCTION_9
0x4000f0a	              0xc9	                                   leave	       312	xemit.c	FUNCTION_9
0x4000f0b	              0xc3	                                     ret	       312	xemit.c	FUNCTION_9
xdl_get_rec	SWITCH,0:CALL,0:ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0	23
0x4000040	              0x55	                                push rbp	        25	xemit.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        25	xemit.c	FUNCTION_1
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	        25	xemit.c	FUNCTION_1
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	xemit.c	FUNCTION_1
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	        25	xemit.c	FUNCTION_1
0x4000050	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	xemit.c	FUNCTION_1
0x4000054	        0x488b4060	            mov rax, qword [rax + 0x60] 	        27	xemit.c	FUNCTION_1
0x4000058	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        27	xemit.c	FUNCTION_1
0x400005c	        0x48c1e203	                              shl rdx, 3	        27	xemit.c	FUNCTION_1
0x4000060	          0x4801d0	                            add rax, rdx	        27	xemit.c	FUNCTION_1
0x4000063	          0x488b00	                    mov rax, qword [rax]	        27	xemit.c	FUNCTION_1
0x4000066	        0x488b5008	                mov rdx, qword [rax + 8]	        27	xemit.c	FUNCTION_1
0x400006a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        27	xemit.c	FUNCTION_1
0x400006e	          0x488910	                    mov qword [rax], rdx	        27	xemit.c	FUNCTION_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	xemit.c	FUNCTION_1
0x4000075	        0x488b4060	            mov rax, qword [rax + 0x60] 	        29	xemit.c	FUNCTION_1
0x4000079	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        29	xemit.c	FUNCTION_1
0x400007d	        0x48c1e203	                              shl rdx, 3	        29	xemit.c	FUNCTION_1
0x4000081	          0x4801d0	                            add rax, rdx	        29	xemit.c	FUNCTION_1
0x4000084	          0x488b00	                    mov rax, qword [rax]	        29	xemit.c	FUNCTION_1
0x4000087	        0x488b4010	            mov rax, qword [rax + 0x10] 	        29	xemit.c	FUNCTION_1
0x400008b	              0x5d	                                 pop rbp	        30	xemit.c	FUNCTION_1
0x400008c	              0xc3	                                     ret	        30	xemit.c	FUNCTION_1
is_func_rec	SWITCH,0:CALL,1:ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0	25
0x40004ac	              0x55	                                push rbp	       125	xemit.c	FUNCTION_6
0x40004ad	          0x4889e5	                            mov rbp, rsp	       125	xemit.c	FUNCTION_6
0x40004b0	        0x4883ec30	                           sub rsp, 0x30	       125	xemit.c	FUNCTION_6
0x40004b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       125	xemit.c	FUNCTION_6
0x40004b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       125	xemit.c	FUNCTION_6
0x40004bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	       125	xemit.c	FUNCTION_6
0x40004c0	    0x64488b042528	                mov rax, qword fs:[0x28]	       125	xemit.c	FUNCTION_6
0x40004c9	        0x488945f8	                mov qword [rbp - 8], rax	       125	xemit.c	FUNCTION_6
0x40004cd	            0x31c0	                            xor eax, eax	       125	xemit.c	FUNCTION_6
0x40004cf	        0x488d4df7	                      lea rcx, [rbp - 9]	       127	xemit.c	FUNCTION_6	CALL_1
0x40004d3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       127	xemit.c	FUNCTION_6	CALL_1
0x40004d7	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       127	xemit.c	FUNCTION_6	CALL_1
0x40004db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	xemit.c	FUNCTION_6	CALL_1
0x40004df	    0x41b801000000	                              mov r8d, 1	       127	xemit.c	FUNCTION_6	CALL_1
0x40004e5	          0x4889c7	                            mov rdi, rax	       127	xemit.c	FUNCTION_6	CALL_1
0x40004e8	      0xe80fffffff	                 call sym.match_func_rec	       127	xemit.c	FUNCTION_6	CALL_1
0x40004ed	          0x48f7d0	                                 not rax	       127	xemit.c	FUNCTION_6	CALL_1
0x40004f0	        0x48c1e83f	                           shr rax, 0x3f	       127	xemit.c	FUNCTION_6	CALL_1
0x40004f4	           0xfb6c0	                           movzx eax, al	       127	xemit.c	FUNCTION_6	CALL_1
0x40004f7	        0x488b7df8	                mov rdi, qword [rbp - 8]	       128	xemit.c	FUNCTION_6
0x40004fb	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       128	xemit.c	FUNCTION_6
0x4000504	            0x7405	                            je 0x400050b	       128	xemit.c	FUNCTION_6
0x4000506	      0xe800000000	                          call 0x400050b	       128	xemit.c	FUNCTION_6
0x400050b	              0xc9	                                   leave	       128	xemit.c	FUNCTION_6
0x400050c	              0xc3	                                     ret	       128	xemit.c	FUNCTION_6
def_ff	SWITCH,0:CALL,3:ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,1	65
0x4000320	              0x55	                                push rbp	        99	xemit.c	FUNCTION_4
0x4000321	          0x4889e5	                            mov rbp, rsp	        99	xemit.c	FUNCTION_4
0x4000324	        0x4883ec30	                           sub rsp, 0x30	        99	xemit.c	FUNCTION_4
0x4000328	        0x48897df8	                mov qword [rbp - 8], rdi	        99	xemit.c	FUNCTION_4
0x400032c	        0x488975f0	             mov qword [rbp - 0x10], rsi	        99	xemit.c	FUNCTION_4
0x4000330	        0x488955e8	             mov qword [rbp - 0x18], rdx	        99	xemit.c	FUNCTION_4
0x4000334	        0x48894de0	             mov qword [rbp - 0x20], rcx	        99	xemit.c	FUNCTION_4
0x4000338	        0x4c8945d8	              mov qword [rbp - 0x28], r8	        99	xemit.c	FUNCTION_4
0x400033c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       100	xemit.c	FUNCTION_4	IF_1
0x4000341	     0xf8eac000000	                           jle 0x40003f3	       100	xemit.c	FUNCTION_4	IF_1
0x4000347	      0xe800000000	                          call 0x400034c	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400034c	          0x488b10	                    mov rdx, qword [rax]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400034f	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000353	           0xfb600	                   movzx eax, byte [rax]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000356	           0xfb6c0	                           movzx eax, al	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000359	          0x4801c0	                            add rax, rax	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400035c	          0x4801d0	                            add rax, rdx	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400035f	           0xfb700	                   movzx eax, word [rax]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000362	           0xfb7c0	                           movzx eax, ax	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000365	      0x2500040000	                          and eax, 0x400	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400036a	            0x85c0	                           test eax, eax	       100	xemit.c	FUNCTION_4	IF_1
0x400036c	            0x7516	                           jne 0x4000384	       100	xemit.c	FUNCTION_4	IF_1
0x400036e	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	xemit.c	FUNCTION_4	IF_1
0x4000372	           0xfb600	                   movzx eax, byte [rax]	       102	xemit.c	FUNCTION_4	IF_1
0x4000375	            0x3c5f	                            cmp al, 0x5f	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000377	            0x740b	                            je 0x4000384	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000379	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	xemit.c	FUNCTION_4	IF_1
0x400037d	           0xfb600	                   movzx eax, byte [rax]	       103	xemit.c	FUNCTION_4	IF_1
0x4000380	            0x3c24	                            cmp al, 0x24	       102	xemit.c	FUNCTION_4	IF_1
0x4000382	            0x756f	                           jne 0x40003f3	       102	xemit.c	FUNCTION_4	IF_1
0x4000384	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	xemit.c	FUNCTION_4	IF_1	IF_2
0x4000388	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       104	xemit.c	FUNCTION_4	IF_1	IF_2
0x400038c	            0x7e0f	                           jle 0x400039d	       104	xemit.c	FUNCTION_4	IF_1	IF_2
0x400038e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       105	xemit.c	FUNCTION_4	IF_1	IF_2
0x4000392	        0x488945f0	             mov qword [rbp - 0x10], rax	       105	xemit.c	FUNCTION_4	IF_1	IF_2
0x4000396	            0xeb05	                           jmp 0x400039d	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x4000398	      0x48836df001	               sub qword [rbp - 0x10], 1	       107	xemit.c	FUNCTION_4	IF_1	WHILE_1
0x400039d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003a2	            0x7e32	                           jle 0x40003d6	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003a4	      0xe800000000	                          call 0x40003a9	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003a9	          0x488b00	                    mov rax, qword [rax]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003ac	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003b0	        0x488d4aff	                      lea rcx, [rdx - 1]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003b8	          0x4801ca	                            add rdx, rcx	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003bb	           0xfb612	                   movzx edx, byte [rdx]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003be	           0xfb6d2	                           movzx edx, dl	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003c1	          0x4801d2	                            add rdx, rdx	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003c4	          0x4801d0	                            add rax, rdx	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003c7	           0xfb700	                   movzx eax, word [rax]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003ca	           0xfb7c0	                           movzx eax, ax	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003cd	      0x2500200000	                         and eax, 0x2000	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003d2	            0x85c0	                           test eax, eax	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003d4	            0x75c2	                           jne 0x4000398	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40003d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003da	        0x488b4df8	                mov rcx, qword [rbp - 8]	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003e2	          0x4889ce	                            mov rsi, rcx	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003e5	          0x4889c7	                            mov rdi, rax	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003e8	      0xe800000000	                          call 0x40003ed	       108	xemit.c	FUNCTION_4	IF_1	CALL_3
0x40003ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       109	xemit.c	FUNCTION_4	IF_1
0x40003f1	            0xeb07	                           jmp 0x40003fa	       109	xemit.c	FUNCTION_4	IF_1
0x40003f3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       111	xemit.c	FUNCTION_4
0x40003fa	              0xc9	                                   leave	       112	xemit.c	FUNCTION_4
0x40003fb	              0xc3	                                     ret	       112	xemit.c	FUNCTION_4
is_empty_rec	SWITCH,0:CALL,2:ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,1	43
0x4000614	              0x55	                                push rbp	       156	xemit.c	FUNCTION_8
0x4000615	          0x4889e5	                            mov rbp, rsp	       156	xemit.c	FUNCTION_8
0x4000618	        0x4883ec30	                           sub rsp, 0x30	       156	xemit.c	FUNCTION_8
0x400061c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       156	xemit.c	FUNCTION_8
0x4000620	        0x488975d0	             mov qword [rbp - 0x30], rsi	       156	xemit.c	FUNCTION_8
0x4000624	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	xemit.c	FUNCTION_8
0x400062d	        0x488945f8	                mov qword [rbp - 8], rax	       156	xemit.c	FUNCTION_8
0x4000631	            0x31c0	                            xor eax, eax	       156	xemit.c	FUNCTION_8
0x4000633	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       158	xemit.c	FUNCTION_8	CALL_1
0x4000637	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       158	xemit.c	FUNCTION_8	CALL_1
0x400063b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       158	xemit.c	FUNCTION_8	CALL_1
0x400063f	          0x4889ce	                            mov rsi, rcx	       158	xemit.c	FUNCTION_8	CALL_1
0x4000642	          0x4889c7	                            mov rdi, rax	       158	xemit.c	FUNCTION_8	CALL_1
0x4000645	      0xe8f6f9ffff	                    call sym.xdl_get_rec	       158	xemit.c	FUNCTION_8	CALL_1
0x400064a	        0x488945f0	             mov qword [rbp - 0x10], rax	       158	xemit.c	FUNCTION_8	CALL_1
0x400064e	            0xeb11	                           jmp 0x4000661	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000650	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       161	xemit.c	FUNCTION_8	WHILE_1
0x4000654	        0x4883c001	                              add rax, 1	       161	xemit.c	FUNCTION_8	WHILE_1
0x4000658	        0x488945e8	             mov qword [rbp - 0x18], rax	       161	xemit.c	FUNCTION_8	WHILE_1
0x400065c	      0x48836df001	               sub qword [rbp - 0x10], 1	       162	xemit.c	FUNCTION_8	WHILE_1
0x4000661	      0x48837df000	               cmp qword [rbp - 0x10], 0	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000666	            0x7e27	                           jle 0x400068f	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000668	      0xe800000000	                          call 0x400066d	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400066d	          0x488b10	                    mov rdx, qword [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000670	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000674	           0xfb600	                   movzx eax, byte [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000677	           0xfb6c0	                           movzx eax, al	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400067a	          0x4801c0	                            add rax, rax	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400067d	          0x4801d0	                            add rax, rdx	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000680	           0xfb700	                   movzx eax, word [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000683	           0xfb7c0	                           movzx eax, ax	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000686	      0x2500200000	                         and eax, 0x2000	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400068b	            0x85c0	                           test eax, eax	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400068d	            0x75c1	                           jne 0x4000650	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400068f	      0x48837df000	               cmp qword [rbp - 0x10], 0	       164	xemit.c	FUNCTION_8
0x4000694	           0xf94c0	                                 sete al	       164	xemit.c	FUNCTION_8
0x4000697	           0xfb6c0	                           movzx eax, al	       164	xemit.c	FUNCTION_8
0x400069a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       165	xemit.c	FUNCTION_8
0x400069e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       165	xemit.c	FUNCTION_8
0x40006a7	            0x7405	                            je 0x40006ae	       165	xemit.c	FUNCTION_8
0x40006a9	      0xe800000000	                          call 0x40006ae	       165	xemit.c	FUNCTION_8
0x40006ae	              0xc9	                                   leave	       165	xemit.c	FUNCTION_8
0x40006af	              0xc3	                                     ret	       165	xemit.c	FUNCTION_8
get_func_line	SWITCH,0:CALL,1:ELSE,0:IF,2:FOR,1:DO,0:functions,0:WHILE,0	70
0x400050d	              0x55	                                push rbp	       137	xemit.c	FUNCTION_7
0x400050e	          0x4889e5	                            mov rbp, rsp	       137	xemit.c	FUNCTION_7
0x4000511	        0x4883ec70	                           sub rsp, 0x70	       137	xemit.c	FUNCTION_7
0x4000515	        0x48897db8	             mov qword [rbp - 0x48], rdi	       137	xemit.c	FUNCTION_7
0x4000519	        0x488975b0	             mov qword [rbp - 0x50], rsi	       137	xemit.c	FUNCTION_7
0x400051d	        0x488955a8	             mov qword [rbp - 0x58], rdx	       137	xemit.c	FUNCTION_7
0x4000521	        0x48894da0	             mov qword [rbp - 0x60], rcx	       137	xemit.c	FUNCTION_7
0x4000525	        0x4c894598	              mov qword [rbp - 0x68], r8	       137	xemit.c	FUNCTION_7
0x4000529	    0x64488b042528	                mov rax, qword fs:[0x28]	       137	xemit.c	FUNCTION_7
0x4000532	        0x488945f8	                mov qword [rbp - 8], rax	       137	xemit.c	FUNCTION_7
0x4000536	            0x31c0	                            xor eax, eax	       137	xemit.c	FUNCTION_7
0x4000538	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       138	xemit.c	FUNCTION_7
0x400053c	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       138	xemit.c	FUNCTION_7
0x4000540	            0x7e09	                           jle 0x400054b	       138	xemit.c	FUNCTION_7
0x4000542	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       138	xemit.c	FUNCTION_7
0x4000549	            0xeb05	                           jmp 0x4000550	       138	xemit.c	FUNCTION_7
0x400054b	      0xb801000000	                              mov eax, 1	       138	xemit.c	FUNCTION_7
0x4000550	        0x488945d0	             mov qword [rbp - 0x30], rax	       138	xemit.c	FUNCTION_7
0x4000554	      0x48837da800	               cmp qword [rbp - 0x58], 0	       141	xemit.c	FUNCTION_7
0x4000559	            0x740a	                            je 0x4000565	       141	xemit.c	FUNCTION_7
0x400055b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       141	xemit.c	FUNCTION_7
0x400055f	        0x4883c008	                              add rax, 8	       141	xemit.c	FUNCTION_7
0x4000563	            0xeb04	                           jmp 0x4000569	       141	xemit.c	FUNCTION_7
0x4000565	        0x488d45f7	                      lea rax, [rbp - 9]	       141	xemit.c	FUNCTION_7
0x4000569	        0x488945d8	             mov qword [rbp - 0x28], rax	       141	xemit.c	FUNCTION_7
0x400056d	      0x48837da800	               cmp qword [rbp - 0x58], 0	       142	xemit.c	FUNCTION_7
0x4000572	            0x7407	                            je 0x400057b	       142	xemit.c	FUNCTION_7
0x4000574	      0xb850000000	                           mov eax, 0x50	       142	xemit.c	FUNCTION_7
0x4000579	            0xeb05	                           jmp 0x4000580	       142	xemit.c	FUNCTION_7
0x400057b	      0xb801000000	                              mov eax, 1	       142	xemit.c	FUNCTION_7
0x4000580	        0x488945e0	             mov qword [rbp - 0x20], rax	       142	xemit.c	FUNCTION_7
0x4000584	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       144	xemit.c	FUNCTION_7	FOR_1
0x4000588	        0x488945c8	             mov qword [rbp - 0x38], rax	       144	xemit.c	FUNCTION_7	FOR_1
0x400058c	            0xeb4a	                           jmp 0x40005d8	       144	xemit.c	FUNCTION_7	FOR_1
0x400058e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000592	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000596	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400059a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400059e	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x40005a2	          0x4989f8	                             mov r8, rdi	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x40005a5	          0x4889c7	                            mov rdi, rax	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x40005a8	      0xe84ffeffff	                 call sym.match_func_rec	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x40005ad	        0x488945e8	             mov qword [rbp - 0x18], rax	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x40005b1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x40005b6	            0x7818	                            js 0x40005d0	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x40005b8	      0x48837da800	               cmp qword [rbp - 0x58], 0	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x40005bd	            0x740b	                            je 0x40005ca	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x40005bf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x40005c3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x40005c7	          0x488910	                    mov qword [rax], rdx	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x40005ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       149	xemit.c	FUNCTION_7	FOR_1	IF_1
0x40005ce	            0xeb2e	                           jmp 0x40005fe	       149	xemit.c	FUNCTION_7	FOR_1	IF_1
0x40005d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       144	xemit.c	FUNCTION_7	FOR_1
0x40005d4	        0x480145c8	            add qword [rbp - 0x38], rax 	       144	xemit.c	FUNCTION_7	FOR_1
0x40005d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       144	xemit.c	FUNCTION_7	FOR_1
0x40005dc	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       144	xemit.c	FUNCTION_7	FOR_1
0x40005e0	            0x7415	                            je 0x40005f7	       144	xemit.c	FUNCTION_7	FOR_1
0x40005e2	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       144	xemit.c	FUNCTION_7	FOR_1
0x40005e7	            0x780e	                            js 0x40005f7	       144	xemit.c	FUNCTION_7	FOR_1
0x40005e9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       144	xemit.c	FUNCTION_7	FOR_1
0x40005ed	        0x488b4038	            mov rax, qword [rax + 0x38] 	       144	xemit.c	FUNCTION_7	FOR_1
0x40005f1	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       144	xemit.c	FUNCTION_7	FOR_1
0x40005f5	            0x7f97	                            jg 0x400058e	       144	xemit.c	FUNCTION_7	FOR_1
0x40005f7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x40005fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	       153	xemit.c	FUNCTION_7
0x4000602	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       153	xemit.c	FUNCTION_7
0x400060b	            0x7405	                            je 0x4000612	       153	xemit.c	FUNCTION_7
0x400060d	      0xe800000000	                          call 0x4000612	       153	xemit.c	FUNCTION_7
0x4000612	              0xc9	                                   leave	       153	xemit.c	FUNCTION_7
0x4000613	              0xc3	                                     ret	       153	xemit.c	FUNCTION_7
xdl_get_hunk	SWITCH,0:CALL,0:ELSE,4:IF,7:FOR,2:DO,0:functions,0:WHILE,0	142
0x4000124	              0x55	                                push rbp	        53	xemit.c	FUNCTION_3
0x4000125	          0x4889e5	                            mov rbp, rsp	        53	xemit.c	FUNCTION_3
0x4000128	        0x48897db8	             mov qword [rbp - 0x48], rdi	        53	xemit.c	FUNCTION_3
0x400012c	        0x488975b0	             mov qword [rbp - 0x50], rsi	        53	xemit.c	FUNCTION_3
0x4000130	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        55	xemit.c	FUNCTION_3
0x4000134	          0x488b00	                    mov rax, qword [rax]	        55	xemit.c	FUNCTION_3
0x4000137	        0x488d1400	                    lea rdx, [rax + rax]	        55	xemit.c	FUNCTION_3
0x400013b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        55	xemit.c	FUNCTION_3
0x400013f	        0x488b4008	                mov rax, qword [rax + 8]	        55	xemit.c	FUNCTION_3
0x4000143	          0x4801d0	                            add rax, rdx	        55	xemit.c	FUNCTION_3
0x4000146	        0x488945e8	             mov qword [rbp - 0x18], rax	        55	xemit.c	FUNCTION_3
0x400014a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        56	xemit.c	FUNCTION_3
0x400014e	          0x488b00	                    mov rax, qword [rax]	        56	xemit.c	FUNCTION_3
0x4000151	        0x488945f0	             mov qword [rbp - 0x10], rax	        56	xemit.c	FUNCTION_3
0x4000155	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        57	xemit.c	FUNCTION_3
0x400015d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        60	xemit.c	FUNCTION_3	FOR_1
0x4000161	          0x488b00	                    mov rax, qword [rax]	        60	xemit.c	FUNCTION_3	FOR_1
0x4000164	        0x488945d0	             mov qword [rbp - 0x30], rax	        60	xemit.c	FUNCTION_3	FOR_1
0x4000168	            0xeb4f	                           jmp 0x40001b9	        60	xemit.c	FUNCTION_3	FOR_1
0x400016a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        61	xemit.c	FUNCTION_3	FOR_1
0x400016e	          0x488b00	                    mov rax, qword [rax]	        61	xemit.c	FUNCTION_3	FOR_1
0x4000171	        0x488945c8	             mov qword [rbp - 0x38], rax	        61	xemit.c	FUNCTION_3	FOR_1
0x4000175	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400017a	            0x7427	                            je 0x40001a3	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400017c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000180	        0x488b5008	                mov rdx, qword [rax + 8]	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000184	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000188	        0x488b4808	                mov rcx, qword [rax + 8]	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400018c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000190	        0x488b4018	            mov rax, qword [rax + 0x18] 	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000194	          0x4801c8	                            add rax, rcx	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x4000197	          0x4829c2	                            sub rdx, rax	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400019a	          0x4889d0	                            mov rax, rdx	        64	xemit.c	FUNCTION_3	FOR_1	IF_1
0x400019d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40001a1	            0x7c0b	                            jl 0x40001ae	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40001a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        65	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40001a7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        65	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40001ab	          0x488910	                    mov qword [rax], rdx	        65	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40001ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        60	xemit.c	FUNCTION_3	FOR_1
0x40001b2	          0x488b00	                    mov rax, qword [rax]	        60	xemit.c	FUNCTION_3	FOR_1
0x40001b5	        0x488945d0	             mov qword [rbp - 0x30], rax	        60	xemit.c	FUNCTION_3	FOR_1
0x40001b9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        60	xemit.c	FUNCTION_3	FOR_1
0x40001be	            0x740b	                            je 0x40001cb	        60	xemit.c	FUNCTION_3	FOR_1
0x40001c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        60	xemit.c	FUNCTION_3	FOR_1
0x40001c4	          0x8b4028	            mov eax, dword [rax + 0x28] 	        60	xemit.c	FUNCTION_3	FOR_1
0x40001c7	            0x85c0	                           test eax, eax	        60	xemit.c	FUNCTION_3	FOR_1
0x40001c9	            0x759f	                           jne 0x400016a	        60	xemit.c	FUNCTION_3	FOR_1
0x40001cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        68	xemit.c	FUNCTION_3	IF_2
0x40001cf	          0x488b00	                    mov rax, qword [rax]	        68	xemit.c	FUNCTION_3	IF_2
0x40001d2	          0x4885c0	                           test rax, rax	        68	xemit.c	FUNCTION_3	IF_2
0x40001d5	            0x750a	                           jne 0x40001e1	        68	xemit.c	FUNCTION_3	IF_2
0x40001d7	      0xb800000000	                              mov eax, 0	        69	xemit.c	FUNCTION_3	IF_2
0x40001dc	      0xe93d010000	                           jmp 0x400031e	        69	xemit.c	FUNCTION_3	IF_2
0x40001e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        71	xemit.c	FUNCTION_3
0x40001e5	          0x488b00	                    mov rax, qword [rax]	        71	xemit.c	FUNCTION_3
0x40001e8	        0x488945d8	             mov qword [rbp - 0x28], rax	        71	xemit.c	FUNCTION_3
0x40001ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        73	xemit.c	FUNCTION_3	FOR_2
0x40001f0	          0x488b00	                    mov rax, qword [rax]	        73	xemit.c	FUNCTION_3	FOR_2
0x40001f3	        0x488945d0	             mov qword [rbp - 0x30], rax	        73	xemit.c	FUNCTION_3	FOR_2
0x40001f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        73	xemit.c	FUNCTION_3	FOR_2
0x40001fb	          0x488b00	                    mov rax, qword [rax]	        73	xemit.c	FUNCTION_3	FOR_2
0x40001fe	        0x488945c8	             mov qword [rbp - 0x38], rax	        73	xemit.c	FUNCTION_3	FOR_2
0x4000202	      0xe905010000	                           jmp 0x400030c	        73	xemit.c	FUNCTION_3	FOR_2
0x4000207	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	xemit.c	FUNCTION_3	FOR_2
0x400020b	        0x488b5008	                mov rdx, qword [rax + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x400020f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000213	        0x488b4808	                mov rcx, qword [rax + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000217	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        74	xemit.c	FUNCTION_3	FOR_2
0x400021b	        0x488b4018	            mov rax, qword [rax + 0x18] 	        74	xemit.c	FUNCTION_3	FOR_2
0x400021f	          0x4801c8	                            add rax, rcx	        74	xemit.c	FUNCTION_3	FOR_2
0x4000222	          0x4829c2	                            sub rdx, rax	        74	xemit.c	FUNCTION_3	FOR_2
0x4000225	          0x4889d0	                            mov rax, rdx	        74	xemit.c	FUNCTION_3	FOR_2
0x4000228	        0x488945f8	                mov qword [rbp - 8], rax	        74	xemit.c	FUNCTION_3	FOR_2
0x400022c	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000230	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000234	     0xf8fdf000000	                            jg 0x4000319	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400023a	        0x488b45f8	                mov rax, qword [rbp - 8]	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400023e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000242	            0x7d2a	                           jge 0x400026e	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000244	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000248	          0x8b4028	            mov eax, dword [rax + 0x28] 	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400024b	            0x85c0	                           test eax, eax	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400024d	            0x740a	                            je 0x4000259	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400024f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000253	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000257	            0x7515	                           jne 0x400026e	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000259	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        79	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400025d	        0x488945d8	             mov qword [rbp - 0x28], rax	        79	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000261	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        80	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000269	      0xe98b000000	                           jmp 0x40002f9	        80	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400026e	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000272	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000276	            0x7d19	                           jge 0x4000291	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000278	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x400027c	          0x8b4028	            mov eax, dword [rax + 0x28] 	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x400027f	            0x85c0	                           test eax, eax	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000281	            0x740e	                            je 0x4000291	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000283	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000287	        0x488b4020	            mov rax, qword [rax + 0x20] 	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x400028b	        0x480145e0	            add qword [rbp - 0x20], rax 	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x400028f	            0xeb68	                           jmp 0x40002f9	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000291	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000295	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000299	            0x7435	                            je 0x40002d0	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x400029b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x400029f	        0x488b4008	                mov rax, qword [rax + 8]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002a3	          0x4889c2	                            mov rdx, rax	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002aa	        0x488d0c02	                    lea rcx, [rdx + rax]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002b2	        0x488b5008	                mov rdx, qword [rax + 8]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002be	          0x4801d0	                            add rax, rdx	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002c1	          0x4829c1	                            sub rcx, rax	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002c4	          0x4889ca	                            mov rdx, rcx	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002cb	          0x4839c2	                            cmp rdx, rax	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002ce	            0x774a	                            ja 0x400031a	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40002d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002d4	          0x8b4028	            mov eax, dword [rax + 0x28] 	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002d7	            0x85c0	                           test eax, eax	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002d9	            0x7512	                           jne 0x40002ed	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        87	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002df	        0x488945d8	             mov qword [rbp - 0x28], rax	        87	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002e3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002eb	            0xeb0c	                           jmp 0x40002f9	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40002ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x40002f1	        0x488b4020	            mov rax, qword [rax + 0x20] 	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x40002f5	        0x480145e0	            add qword [rbp - 0x20], rax 	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x40002f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        73	xemit.c	FUNCTION_3	FOR_2
0x40002fd	        0x488945d0	             mov qword [rbp - 0x30], rax	        73	xemit.c	FUNCTION_3	FOR_2
0x4000301	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        73	xemit.c	FUNCTION_3	FOR_2
0x4000305	          0x488b00	                    mov rax, qword [rax]	        73	xemit.c	FUNCTION_3	FOR_2
0x4000308	        0x488945c8	             mov qword [rbp - 0x38], rax	        73	xemit.c	FUNCTION_3	FOR_2
0x400030c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        73	xemit.c	FUNCTION_3	FOR_2
0x4000311	     0xf85f0feffff	                           jne 0x4000207	        73	xemit.c	FUNCTION_3	FOR_2
0x4000317	            0xeb01	                           jmp 0x400031a	        73	xemit.c	FUNCTION_3	FOR_2
0x4000319	              0x90	                                     nop	        76	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400031a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	xemit.c	FUNCTION_3
0x400031e	              0x5d	                                 pop rbp	        95	xemit.c	FUNCTION_3
0x400031f	              0xc3	                                     ret	        95	xemit.c	FUNCTION_3
xdl_emit_record	SWITCH,0:CALL,3:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0	40
0x400008d	              0x55	                                push rbp	        33	xemit.c	FUNCTION_2
0x400008e	          0x4889e5	                            mov rbp, rsp	        33	xemit.c	FUNCTION_2
0x4000091	        0x4883ec40	                           sub rsp, 0x40	        33	xemit.c	FUNCTION_2
0x4000095	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        33	xemit.c	FUNCTION_2
0x4000099	        0x488975d0	             mov qword [rbp - 0x30], rsi	        33	xemit.c	FUNCTION_2
0x400009d	        0x488955c8	             mov qword [rbp - 0x38], rdx	        33	xemit.c	FUNCTION_2
0x40000a1	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        33	xemit.c	FUNCTION_2
0x40000a5	    0x64488b042528	                mov rax, qword fs:[0x28]	        33	xemit.c	FUNCTION_2
0x40000ae	        0x488945f8	                mov qword [rbp - 8], rax	        33	xemit.c	FUNCTION_2
0x40000b2	            0x31c0	                            xor eax, eax	        33	xemit.c	FUNCTION_2
0x40000b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        34	xemit.c	FUNCTION_2	CALL_1
0x40000b8	          0x4889c7	                            mov rdi, rax	        34	xemit.c	FUNCTION_2	CALL_1
0x40000bb	      0xe800000000	                          call 0x40000c0	        34	xemit.c	FUNCTION_2	CALL_1
0x40000c0	        0x488945e8	             mov qword [rbp - 0x18], rax	        34	xemit.c	FUNCTION_2	CALL_1
0x40000c4	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        37	xemit.c	FUNCTION_2	CALL_2
0x40000c8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        37	xemit.c	FUNCTION_2	CALL_2
0x40000cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        37	xemit.c	FUNCTION_2	CALL_2
0x40000d0	          0x4889ce	                            mov rsi, rcx	        37	xemit.c	FUNCTION_2	CALL_2
0x40000d3	          0x4889c7	                            mov rdi, rax	        37	xemit.c	FUNCTION_2	CALL_2
0x40000d6	      0xe865ffffff	                    call sym.xdl_get_rec	        37	xemit.c	FUNCTION_2	CALL_2
0x40000db	        0x488945f0	             mov qword [rbp - 0x10], rax	        37	xemit.c	FUNCTION_2	CALL_2
0x40000df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000e3	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000e7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000eb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000ef	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000f3	          0x4989f8	                             mov r8, rdi	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000f6	          0x4889c7	                            mov rdi, rax	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000f9	      0xe800000000	                          call 0x40000fe	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x40000fe	            0x85c0	                           test eax, eax	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x4000100	            0x7907	                           jns 0x4000109	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x4000102	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	xemit.c	FUNCTION_2	IF_1
0x4000107	            0xeb05	                           jmp 0x400010e	        40	xemit.c	FUNCTION_2	IF_1
0x4000109	      0xb800000000	                              mov eax, 0	        43	xemit.c	FUNCTION_2
0x400010e	        0x488b75f8	                mov rsi, qword [rbp - 8]	        44	xemit.c	FUNCTION_2
0x4000112	    0x644833342528	                xor rsi, qword fs:[0x28]	        44	xemit.c	FUNCTION_2
0x400011b	            0x7405	                            je 0x4000122	        44	xemit.c	FUNCTION_2
0x400011d	      0xe800000000	                          call 0x4000122	        44	xemit.c	FUNCTION_2
0x4000122	              0xc9	                                   leave	        44	xemit.c	FUNCTION_2
0x4000123	              0xc3	                                     ret	        44	xemit.c	FUNCTION_2
match_func_rec	SWITCH,0:CALL,3:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0	47
0x40003fc	              0x55	                                push rbp	       116	xemit.c	FUNCTION_5
0x40003fd	          0x4889e5	                            mov rbp, rsp	       116	xemit.c	FUNCTION_5
0x4000400	        0x4883ec50	                           sub rsp, 0x50	       116	xemit.c	FUNCTION_5
0x4000404	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       116	xemit.c	FUNCTION_5
0x4000408	        0x488975d0	             mov qword [rbp - 0x30], rsi	       116	xemit.c	FUNCTION_5
0x400040c	        0x488955c8	             mov qword [rbp - 0x38], rdx	       116	xemit.c	FUNCTION_5
0x4000410	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       116	xemit.c	FUNCTION_5
0x4000414	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       116	xemit.c	FUNCTION_5
0x4000418	    0x64488b042528	                mov rax, qword fs:[0x28]	       116	xemit.c	FUNCTION_5
0x4000421	        0x488945f8	                mov qword [rbp - 8], rax	       116	xemit.c	FUNCTION_5
0x4000425	            0x31c0	                            xor eax, eax	       116	xemit.c	FUNCTION_5
0x4000427	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       118	xemit.c	FUNCTION_5	CALL_1
0x400042b	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       118	xemit.c	FUNCTION_5	CALL_1
0x400042f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       118	xemit.c	FUNCTION_5	CALL_1
0x4000433	          0x4889ce	                            mov rsi, rcx	       118	xemit.c	FUNCTION_5	CALL_1
0x4000436	          0x4889c7	                            mov rdi, rax	       118	xemit.c	FUNCTION_5	CALL_1
0x4000439	      0xe802fcffff	                    call sym.xdl_get_rec	       118	xemit.c	FUNCTION_5	CALL_1
0x400043e	        0x488945f0	             mov qword [rbp - 0x10], rax	       118	xemit.c	FUNCTION_5	CALL_1
0x4000442	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	xemit.c	FUNCTION_5	IF_1
0x4000446	        0x488b4018	            mov rax, qword [rax + 0x18] 	       119	xemit.c	FUNCTION_5	IF_1
0x400044a	          0x4885c0	                           test rax, rax	       119	xemit.c	FUNCTION_5	IF_1
0x400044d	            0x7525	                           jne 0x4000474	       119	xemit.c	FUNCTION_5	IF_1
0x400044f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	xemit.c	FUNCTION_5	CALL_2
0x4000453	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       120	xemit.c	FUNCTION_5	CALL_2
0x4000457	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       120	xemit.c	FUNCTION_5	CALL_2
0x400045b	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       120	xemit.c	FUNCTION_5	CALL_2
0x400045f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       120	xemit.c	FUNCTION_5	CALL_2
0x4000463	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       120	xemit.c	FUNCTION_5	CALL_2
0x4000467	          0x4989f8	                             mov r8, rdi	       120	xemit.c	FUNCTION_5	CALL_2
0x400046a	          0x4889c7	                            mov rdi, rax	       120	xemit.c	FUNCTION_5	CALL_2
0x400046d	      0xe8aefeffff	                         call sym.def_ff	       120	xemit.c	FUNCTION_5	CALL_2
0x4000472	            0xeb22	                           jmp 0x4000496	       120	xemit.c	FUNCTION_5	CALL_2
0x4000474	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000478	        0x488b4018	            mov rax, qword [rax + 0x18] 	       121	xemit.c	FUNCTION_5	CALL_3
0x400047c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000480	        0x4c8b4220	              mov r8, qword [rdx + 0x20]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000484	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000488	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       121	xemit.c	FUNCTION_5	CALL_3
0x400048c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000490	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       121	xemit.c	FUNCTION_5	CALL_3
0x4000494	            0xffd0	                                call rax	       121	xemit.c	FUNCTION_5	CALL_3
0x4000496	        0x488b75f8	                mov rsi, qword [rbp - 8]	       122	xemit.c	FUNCTION_5
0x400049a	    0x644833342528	                xor rsi, qword fs:[0x28]	       122	xemit.c	FUNCTION_5
0x40004a3	            0x7405	                            je 0x40004aa	       122	xemit.c	FUNCTION_5
0x40004a5	      0xe800000000	                          call 0x40004aa	       122	xemit.c	FUNCTION_5
0x40004aa	              0xc9	                                   leave	       122	xemit.c	FUNCTION_5
0x40004ab	              0xc3	                                     ret	       122	xemit.c	FUNCTION_5
