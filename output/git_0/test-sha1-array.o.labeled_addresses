cmd__sha1_array	FOR,0:CALL,15:DO,0:WHILE,1:ELSE,4:SWITCH,0:functions,0:IF,6	111
0x40000c1	              0x55	                                push rbp	        12	test-sha1-array.c	FUNCTION_2
0x40000c2	          0x4889e5	                            mov rbp, rsp	        12	test-sha1-array.c	FUNCTION_2
0x40000c5	        0x4883c480	             add rsp, 0xffffffffffffff80	        12	test-sha1-array.c	FUNCTION_2
0x40000c9	          0x897d8c	             mov dword [rbp - 0x74], edi	        12	test-sha1-array.c	FUNCTION_2
0x40000cc	        0x48897580	             mov qword [rbp - 0x80], rsi	        12	test-sha1-array.c	FUNCTION_2
0x40000d0	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	test-sha1-array.c	FUNCTION_2
0x40000d9	        0x488945f8	                mov qword [rbp - 8], rax	        12	test-sha1-array.c	FUNCTION_2
0x40000dd	            0x31c0	                            xor eax, eax	        12	test-sha1-array.c	FUNCTION_2
0x40000df	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        13	test-sha1-array.c	FUNCTION_2
0x40000e7	    0xc745a8000000	               mov dword [rbp - 0x58], 0	        13	test-sha1-array.c	FUNCTION_2
0x40000ee	    0xc745ac000000	               mov dword [rbp - 0x54], 0	        13	test-sha1-array.c	FUNCTION_2
0x40000f5	    0xc745b0000000	               mov dword [rbp - 0x50], 0	        13	test-sha1-array.c	FUNCTION_2
0x40000fc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	        14	test-sha1-array.c	FUNCTION_2
0x4000104	    0x48c745c80000	               mov qword [rbp - 0x38], 0	        14	test-sha1-array.c	FUNCTION_2
0x400010c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        14	test-sha1-array.c	FUNCTION_2
0x4000114	      0xe930010000	                           jmp 0x4000249	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000119	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400011d	        0x488d5598	                   lea rdx, [rbp - 0x68]	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000121	      0xbe00000000	                              mov esi, 0	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000126	          0x4889c7	                            mov rdi, rax	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000129	      0xe812ffffff	                    call sym.skip_prefix	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400012e	            0x85c0	                           test eax, eax	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000130	            0x7445	                            je 0x4000177	        20	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000132	        0x488b4598	             mov rax, qword [rbp - 0x68]	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000136	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x400013a	          0x4889d6	                            mov rsi, rdx	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x400013d	          0x4889c7	                            mov rdi, rax	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000140	      0xe800000000	                          call 0x4000145	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000145	            0x85c0	                           test eax, eax	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000147	            0x7416	                            je 0x400015f	        21	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	IF_2	CALL_3
0x4000149	        0x488b4598	             mov rax, qword [rbp - 0x68]	        22	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_4
0x400014d	          0x4889c6	                            mov rsi, rax	        22	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_4
0x4000150	      0xbf00000000	                              mov edi, 0	        22	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_4
0x4000155	      0xb800000000	                              mov eax, 0	        22	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_4
0x400015a	      0xe800000000	                          call 0x400015f	        22	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_4
0x400015f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000163	        0x488d45a0	                   lea rax, [rbp - 0x60]	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000167	          0x4889d6	                            mov rsi, rdx	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x400016a	          0x4889c7	                            mov rdi, rax	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x400016d	      0xe800000000	                          call 0x4000172	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000172	      0xe9d2000000	                           jmp 0x4000249	        23	test-sha1-array.c	FUNCTION_2	WHILE_1	IF_1	CALL_5
0x4000177	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x400017b	        0x488d5598	                   lea rdx, [rbp - 0x68]	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x400017f	      0xbe00000000	                              mov esi, 0	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000184	          0x4889c7	                            mov rdi, rax	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000187	      0xe8b4feffff	                    call sym.skip_prefix	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x400018c	            0x85c0	                           test eax, eax	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x400018e	            0x7453	                            je 0x40001e3	        24	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_6
0x4000190	        0x488b4598	             mov rax, qword [rbp - 0x68]	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000194	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x4000198	          0x4889d6	                            mov rsi, rdx	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x400019b	          0x4889c7	                            mov rdi, rax	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x400019e	      0xe800000000	                          call 0x40001a3	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x40001a3	            0x85c0	                           test eax, eax	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x40001a5	            0x7416	                            je 0x40001bd	        25	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	IF_4	CALL_7
0x40001a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001ab	          0x4889c6	                            mov rsi, rax	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001ae	      0xbf00000000	                              mov edi, 0	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001b3	      0xb800000000	                              mov eax, 0	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001b8	      0xe800000000	                          call 0x40001bd	        26	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_8
0x40001bd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001c1	        0x488d45a0	                   lea rax, [rbp - 0x60]	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001c5	          0x4889d6	                            mov rsi, rdx	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001c8	          0x4889c7	                            mov rdi, rax	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001cb	      0xe800000000	                          call 0x40001d0	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001d0	            0x89c6	                            mov esi, eax	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001d2	      0xbf00000000	                              mov edi, 0	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001d7	      0xb800000000	                              mov eax, 0	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001dc	      0xe800000000	                          call 0x40001e1	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001e1	            0xeb66	                           jmp 0x4000249	        27	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3	CALL_10
0x40001e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001e7	      0xbe00000000	                              mov esi, 0	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001ec	          0x4889c7	                            mov rdi, rax	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001ef	      0xe800000000	                          call 0x40001f4	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001f4	            0x85c0	                           test eax, eax	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001f6	            0x750e	                           jne 0x4000206	        28	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5	CALL_11
0x40001f8	        0x488d45a0	                   lea rax, [rbp - 0x60]	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x40001fc	          0x4889c7	                            mov rdi, rax	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x40001ff	      0xe800000000	                          call 0x4000204	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x4000204	            0xeb43	                           jmp 0x4000249	        29	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_2	IF_5
0x4000206	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x400020a	      0xbe00000000	                              mov esi, 0	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x400020f	          0x4889c7	                            mov rdi, rax	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x4000212	      0xe800000000	                          call 0x4000217	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x4000217	            0x85c0	                           test eax, eax	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x4000219	            0x7518	                           jne 0x4000233	        30	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6	CALL_13
0x400021b	        0x488d45a0	                   lea rax, [rbp - 0x60]	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x400021f	      0xba00000000	                              mov edx, 0	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x4000224	      0xbe00000000	                              mov esi, 0	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x4000229	          0x4889c7	                            mov rdi, rax	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x400022c	      0xe800000000	                          call 0x4000231	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x4000231	            0xeb16	                           jmp 0x4000249	        31	test-sha1-array.c	FUNCTION_2	WHILE_1	ELSE_3	IF_6
0x4000233	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x4000237	          0x4889c6	                            mov rsi, rax	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x400023a	      0xbf00000000	                              mov edi, 0	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x400023f	      0xb800000000	                              mov eax, 0	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x4000244	      0xe800000000	                          call 0x4000249	        33	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_15
0x4000249	    0x488b15000000	            mov rdx, qword [0x04000250] 	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000250	        0x488d45c0	                   lea rax, [rbp - 0x40]	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000254	          0x4889d6	                            mov rsi, rdx	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000257	          0x4889c7	                            mov rdi, rax	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x400025a	      0xe800000000	                          call 0x400025f	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x400025f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000262	     0xf85b1feffff	                           jne 0x4000119	        16	test-sha1-array.c	FUNCTION_2	WHILE_1	CALL_1
0x4000268	      0xb800000000	                              mov eax, 0	        35	test-sha1-array.c	FUNCTION_2
0x400026d	        0x488b4df8	                mov rcx, qword [rbp - 8]	        36	test-sha1-array.c	FUNCTION_2
0x4000271	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        36	test-sha1-array.c	FUNCTION_2
0x400027a	            0x7405	                            je 0x4000281	        36	test-sha1-array.c	FUNCTION_2
0x400027c	      0xe800000000	                          call 0x4000281	        36	test-sha1-array.c	FUNCTION_2
0x4000281	              0xc9	                                   leave	        36	test-sha1-array.c	FUNCTION_2
0x4000282	              0xc3	                                     ret	        36	test-sha1-array.c	FUNCTION_2
skip_prefix	FOR,0:CALL,0:DO,1:WHILE,0:ELSE,0:SWITCH,0:functions,0:IF,1	27
0x4000040	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_9
0x4000041	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_9
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_9
0x4000048	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_9
0x400004c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_9
0x4000050	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000054	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000057	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000059	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x400005b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x400005f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000063	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x4000066	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x400006b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_9	DO_1	IF_1
0x400006d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000071	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000075	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000079	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400007c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000080	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000084	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_9	DO_1
0x4000088	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400008b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400008d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_9	DO_1
0x400008f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_9
0x4000094	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_9
0x4000095	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_9
print_oid	FOR,0:CALL,2:DO,0:WHILE,0:ELSE,0:SWITCH,0:functions,0:IF,0	13
0x4000096	              0x55	                                push rbp	         6	test-sha1-array.c	FUNCTION_1
0x4000097	          0x4889e5	                            mov rbp, rsp	         6	test-sha1-array.c	FUNCTION_1
0x400009a	        0x4883ec10	                           sub rsp, 0x10	         6	test-sha1-array.c	FUNCTION_1
0x400009e	        0x48897df8	                mov qword [rbp - 8], rdi	         6	test-sha1-array.c	FUNCTION_1
0x40000a2	        0x488975f0	             mov qword [rbp - 0x10], rsi	         6	test-sha1-array.c	FUNCTION_1
0x40000a6	        0x488b45f8	                mov rax, qword [rbp - 8]	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x40000aa	          0x4889c7	                            mov rdi, rax	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x40000ad	      0xe800000000	                          call 0x40000b2	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x40000b2	          0x4889c7	                            mov rdi, rax	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x40000b5	      0xe800000000	                          call 0x40000ba	         7	test-sha1-array.c	FUNCTION_1	CALL_2
0x40000ba	      0xb800000000	                              mov eax, 0	         8	test-sha1-array.c	FUNCTION_1
0x40000bf	              0xc9	                                   leave	         9	test-sha1-array.c	FUNCTION_1
0x40000c0	              0xc3	                                     ret	         9	test-sha1-array.c	FUNCTION_1
