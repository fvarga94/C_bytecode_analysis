git_push_config	functions,0:CALL,26:ELSE,10:DO,0:SWITCH,1:FOR,0:IF,16:WHILE,0	229
0x400121f	              0x55	                                push rbp	       500	push.c	FUNCTION_21
0x4001220	          0x4889e5	                            mov rbp, rsp	       500	push.c	FUNCTION_21
0x4001223	        0x4883ec50	                           sub rsp, 0x50	       500	push.c	FUNCTION_21
0x4001227	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       500	push.c	FUNCTION_21
0x400122b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       500	push.c	FUNCTION_21
0x400122f	        0x488955b8	             mov qword [rbp - 0x48], rdx	       500	push.c	FUNCTION_21
0x4001233	    0x64488b042528	                mov rax, qword fs:[0x28]	       500	push.c	FUNCTION_21
0x400123c	        0x488945f8	                mov qword [rbp - 8], rax	       500	push.c	FUNCTION_21
0x4001240	            0x31c0	                            xor eax, eax	       500	push.c	FUNCTION_21
0x4001242	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       502	push.c	FUNCTION_21
0x4001246	        0x488945f0	             mov qword [rbp - 0x10], rax	       502	push.c	FUNCTION_21
0x400124a	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       505	push.c	FUNCTION_21	CALL_1
0x400124e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       505	push.c	FUNCTION_21	CALL_1
0x4001252	      0xba00000000	                              mov edx, 0	       505	push.c	FUNCTION_21	CALL_1
0x4001257	          0x4889ce	                            mov rsi, rcx	       505	push.c	FUNCTION_21	CALL_1
0x400125a	          0x4889c7	                            mov rdi, rax	       505	push.c	FUNCTION_21	CALL_1
0x400125d	      0xe800000000	                          call 0x4001262	       505	push.c	FUNCTION_21	CALL_1
0x4001262	          0x8945dc	             mov dword [rbp - 0x24], eax	       505	push.c	FUNCTION_21	CALL_1
0x4001265	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       506	push.c	FUNCTION_21	IF_1
0x4001269	            0x7408	                            je 0x4001273	       506	push.c	FUNCTION_21	IF_1
0x400126b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       507	push.c	FUNCTION_21	IF_1
0x400126e	      0xe9f2020000	                           jmp 0x4001565	       507	push.c	FUNCTION_21	IF_1
0x4001273	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4001277	      0xbe00000000	                              mov esi, 0	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x400127c	          0x4889c7	                            mov rdi, rax	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x400127f	      0xe800000000	                          call 0x4001284	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4001284	            0x85c0	                           test eax, eax	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4001286	            0x7545	                           jne 0x40012cd	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4001288	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x400128c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x4001290	          0x4889d6	                            mov rsi, rdx	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x4001293	          0x4889c7	                            mov rdi, rax	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x4001296	      0xe800000000	                          call 0x400129b	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x400129b	            0x85c0	                           test eax, eax	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x400129d	            0x7413	                            je 0x40012b2	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x400129f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012a3	            0x8b00	                    mov eax, dword [rax]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012a5	          0x80cc04	                                or ah, 4	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012a8	            0x89c2	                            mov edx, eax	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012ae	            0x8910	                    mov dword [rax], edx	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012b0	            0xeb11	                           jmp 0x40012c3	       511	push.c	FUNCTION_21	IF_2	IF_3
0x40012b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012b6	            0x8b00	                    mov eax, dword [rax]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012b8	          0x80e4fb	                            and ah, 0xfb	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012bb	            0x89c2	                            mov edx, eax	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012c1	            0x8910	                    mov dword [rax], edx	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012c3	      0xb800000000	                              mov eax, 0	       514	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012c8	      0xe998020000	                           jmp 0x4001565	       514	push.c	FUNCTION_21	IF_2	ELSE_1
0x40012cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012d1	      0xbe00000000	                              mov esi, 0	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012d6	          0x4889c7	                            mov rdi, rax	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012d9	      0xe800000000	                          call 0x40012de	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012de	            0x85c0	                           test eax, eax	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012e0	     0xf85b0000000	                           jne 0x4001396	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x40012e6	        0x488d45e8	                   lea rax, [rbp - 0x18]	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012ea	          0x4889c6	                            mov rsi, rax	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012ed	      0xbf00000000	                              mov edi, 0	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012f2	      0xe800000000	                          call 0x40012f7	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012f7	            0x85c0	                           test eax, eax	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012f9	     0xf854e020000	                           jne 0x400154d	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x40012ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4001303	          0x4889c7	                            mov rdi, rax	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4001306	      0xe800000000	                          call 0x400130b	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400130b	            0x85c0	                           test eax, eax	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400130d	            0x7407	                            je 0x4001316	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400130f	          0x83f801	                              cmp eax, 1	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4001312	            0x7418	                            je 0x400132c	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4001314	            0xeb2c	                           jmp 0x4001342	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4001316	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x400131a	      0xbe00000000	                              mov esi, 0	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x400131f	          0x4889c7	                            mov rdi, rax	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x4001322	      0xe87dfeffff	            call sym.set_push_cert_flags	       520	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_7
0x4001327	      0xe921020000	                           jmp 0x400154d	       521	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1
0x400132c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x4001330	      0xbe02000000	                              mov esi, 2	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x4001335	          0x4889c7	                            mov rdi, rax	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x4001338	      0xe867feffff	            call sym.set_push_cert_flags	       523	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_8
0x400133d	      0xe90b020000	                           jmp 0x400154d	       524	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1
0x4001342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4001346	          0x4885c0	                           test rax, rax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4001349	            0x742b	                            je 0x4001376	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x400134b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x400134f	      0xbe00000000	                              mov esi, 0	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4001354	          0x4889c7	                            mov rdi, rax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4001357	      0xe800000000	                          call 0x400135c	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x400135c	            0x85c0	                           test eax, eax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x400135e	            0x7516	                           jne 0x4001376	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4001360	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x4001364	      0xbe01000000	                              mov esi, 1	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x4001369	          0x4889c7	                            mov rdi, rax	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x400136c	      0xe833feffff	            call sym.set_push_cert_flags	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x4001371	      0xe9d7010000	                           jmp 0x400154d	       527	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_10
0x4001376	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x400137a	          0x4889c6	                            mov rsi, rax	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x400137d	      0xbf00000000	                              mov edi, 0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x4001382	      0xb800000000	                              mov eax, 0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x4001387	      0xe800000000	                          call 0x400138c	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x400138c	      0xe8afecffff	                    call sym.const_error	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x4001391	      0xe9cf010000	                           jmp 0x4001565	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x4001396	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x400139a	      0xbe00000000	                              mov esi, 0	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x400139f	          0x4889c7	                            mov rdi, rax	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x40013a2	      0xe800000000	                          call 0x40013a7	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x40013a7	            0x85c0	                           test eax, eax	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x40013a9	            0x7537	                           jne 0x40013e2	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x40013ab	        0x488d45e8	                   lea rax, [rbp - 0x18]	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013af	          0x4889c6	                            mov rsi, rax	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013b2	      0xbf00000000	                              mov edi, 0	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013b7	      0xe800000000	                          call 0x40013bc	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013bc	            0x85c0	                           test eax, eax	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013be	     0xf8589010000	                           jne 0x400154d	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x40013c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013cc	          0x4889d6	                            mov rsi, rdx	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013cf	          0x4889c7	                            mov rdi, rax	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013d2	      0xe800000000	                          call 0x40013d7	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013d7	    0x890500000000	            mov dword [0x040013dd], eax 	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013dd	      0xe96b010000	                           jmp 0x400154d	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40013e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013e6	      0xbe00000000	                              mov esi, 0	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013eb	          0x4889c7	                            mov rdi, rax	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013ee	      0xe800000000	                          call 0x40013f3	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013f3	            0x85c0	                           test eax, eax	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013f5	            0x7534	                           jne 0x400142b	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x40013f7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x40013fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x40013ff	          0x4889d6	                            mov rsi, rdx	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x4001402	          0x4889c7	                            mov rdi, rax	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x4001405	      0xe800000000	                          call 0x400140a	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x400140a	            0x85c0	                           test eax, eax	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x400140c	            0x7407	                            je 0x4001415	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x400140e	      0xb8ffffffff	                     mov eax, 0xffffffff	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x4001413	            0xeb05	                           jmp 0x400141a	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x4001415	      0xb800000000	                              mov eax, 0	       538	push.c	FUNCTION_21	ELSE_5	IF_9
0x400141a	          0x8945e4	             mov dword [rbp - 0x1c], eax	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x400141d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x4001420	    0x890500000000	            mov dword [0x04001426], eax 	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x4001426	      0xe922010000	                           jmp 0x400154d	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x400142b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400142f	      0xbe00000000	                              mov esi, 0	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4001434	          0x4889c7	                            mov rdi, rax	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4001437	      0xe800000000	                          call 0x400143c	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400143c	            0x85c0	                           test eax, eax	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400143e	            0x7554	                           jne 0x4001494	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4001440	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x4001445	            0x7516	                           jne 0x400145d	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x4001447	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x400144b	          0x4889c7	                            mov rdi, rax	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x400144e	      0xe800000000	                          call 0x4001453	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x4001453	      0xe8e8ebffff	                    call sym.const_error	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x4001458	      0xe908010000	                           jmp 0x4001565	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x400145d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001461	           0xfb600	                   movzx eax, byte [rax]	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001464	            0x84c0	                             test al, al	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001466	            0x7511	                           jne 0x4001479	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001468	      0xbe00000000	                              mov esi, 0	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x400146d	      0xbf00000000	                              mov edi, 0	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001472	      0xe800000000	                          call 0x4001477	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001477	            0xeb11	                           jmp 0x400148a	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x4001479	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x400147d	          0x4889c6	                            mov rsi, rax	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4001480	      0xbf00000000	                              mov edi, 0	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4001485	      0xe800000000	                          call 0x400148a	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x400148a	      0xb800000000	                              mov eax, 0	       548	push.c	FUNCTION_21	ELSE_6	IF_10
0x400148f	      0xe9d1000000	                           jmp 0x4001565	       548	push.c	FUNCTION_21	ELSE_6	IF_10
0x4001494	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x4001498	      0xbe00000000	                              mov esi, 0	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x400149d	          0x4889c7	                            mov rdi, rax	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40014a0	      0xe800000000	                          call 0x40014a5	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40014a5	            0x85c0	                           test eax, eax	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40014a7	            0x7523	                           jne 0x40014cc	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40014a9	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014b1	          0x4889d6	                            mov rsi, rdx	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014b4	          0x4889c7	                            mov rdi, rax	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014b7	      0xe800000000	                          call 0x40014bc	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014bc	    0x890500000000	            mov dword [0x040014c2], eax 	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x40014c2	      0xb800000000	                              mov eax, 0	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x40014c7	      0xe999000000	                           jmp 0x4001565	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x40014cc	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014d4	      0xbe00000000	                              mov esi, 0	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014d9	          0x4889c7	                            mov rdi, rax	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014dc	      0xe86aebffff	                    call sym.skip_prefix	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014e1	            0x85c0	                           test eax, eax	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014e3	            0x7468	                            je 0x400154d	       552	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_22
0x40014e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x40014e9	          0x4889c7	                            mov rdi, rax	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x40014ec	      0xe82eecffff	          call sym.parse_push_color_slot	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x40014f1	          0x8945e0	             mov dword [rbp - 0x20], eax	       553	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_23
0x40014f4	        0x837de000	               cmp dword [rbp - 0x20], 0	       554	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x40014f8	            0x7907	                           jns 0x4001501	       554	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x40014fa	      0xb800000000	                              mov eax, 0	       555	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x40014ff	            0xeb64	                           jmp 0x4001565	       555	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x4001501	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x4001506	            0x7513	                           jne 0x400151b	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x4001508	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x400150c	          0x4889c7	                            mov rdi, rax	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x400150f	      0xe800000000	                          call 0x4001514	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x4001514	      0xe827ebffff	                    call sym.const_error	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x4001519	            0xeb4a	                           jmp 0x4001565	       557	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_24
0x400151b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400151e	          0x4863d0	                         movsxd rdx, eax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001521	          0x4889d0	                            mov rax, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001524	        0x48c1e002	                              shl rax, 2	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001528	          0x4801d0	                            add rax, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400152b	          0x4889c2	                            mov rdx, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400152e	        0x48c1e204	                              shl rdx, 4	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001532	          0x4829c2	                            sub rdx, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001535	    0x4881c2000000	                              add rdx, 0	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400153c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001540	          0x4889d6	                            mov rsi, rdx	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001543	          0x4889c7	                            mov rdi, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4001546	      0xe800000000	                          call 0x400154b	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400154b	            0xeb18	                           jmp 0x4001565	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400154d	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       561	push.c	FUNCTION_21	CALL_26
0x4001551	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       561	push.c	FUNCTION_21	CALL_26
0x4001555	      0xba00000000	                              mov edx, 0	       561	push.c	FUNCTION_21	CALL_26
0x400155a	          0x4889ce	                            mov rsi, rcx	       561	push.c	FUNCTION_21	CALL_26
0x400155d	          0x4889c7	                            mov rdi, rax	       561	push.c	FUNCTION_21	CALL_26
0x4001560	      0xe800000000	                          call 0x4001565	       561	push.c	FUNCTION_21	CALL_26
0x4001565	        0x488b4df8	                mov rcx, qword [rbp - 8]	       562	push.c	FUNCTION_21
0x4001569	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	push.c	FUNCTION_21
0x4001572	            0x7405	                            je 0x4001579	       562	push.c	FUNCTION_21
0x4001574	      0xe800000000	                          call 0x4001579	       562	push.c	FUNCTION_21
0x4001579	              0xc9	                                   leave	       562	push.c	FUNCTION_21
0x400157a	              0xc3	                                     ret	       562	push.c	FUNCTION_21
advise_pull_before_push	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	17
0x4000b02	              0x55	                                push rbp	       310	push.c	FUNCTION_12
0x4000b03	          0x4889e5	                            mov rbp, rsp	       310	push.c	FUNCTION_12
0x4000b06	    0x8b0500000000	            mov eax, dword [0x04000b0c] 	       311	push.c	FUNCTION_12	IF_1
0x4000b0c	            0x85c0	                           test eax, eax	       311	push.c	FUNCTION_12	IF_1
0x4000b0e	            0x7423	                            je 0x4000b33	       311	push.c	FUNCTION_12	IF_1
0x4000b10	    0x8b0500000000	            mov eax, dword [0x04000b16] 	       311	push.c	FUNCTION_12	IF_1
0x4000b16	            0x85c0	                           test eax, eax	       311	push.c	FUNCTION_12	IF_1
0x4000b18	            0x7419	                            je 0x4000b33	       311	push.c	FUNCTION_12	IF_1
0x4000b1a	      0xbf00000000	                              mov edi, 0	       313	push.c	FUNCTION_12	CALL_2
0x4000b1f	      0xe8cff5ffff	                               call sym.	       313	push.c	FUNCTION_12	CALL_2
0x4000b24	          0x4889c7	                            mov rdi, rax	       313	push.c	FUNCTION_12	CALL_2
0x4000b27	      0xb800000000	                              mov eax, 0	       313	push.c	FUNCTION_12	CALL_2
0x4000b2c	      0xe800000000	                          call 0x4000b31	       313	push.c	FUNCTION_12	CALL_2
0x4000b31	            0xeb01	                           jmp 0x4000b34	       313	push.c	FUNCTION_12	CALL_2
0x4000b33	              0x90	                                     nop	       312	push.c	FUNCTION_12	IF_1
0x4000b34	              0x5d	                                 pop rbp	       314	push.c	FUNCTION_12
0x4000b35	              0xc3	                                     ret	       314	push.c	FUNCTION_12
setup_push_upstream	functions,0:CALL,12:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,6:WHILE,0	120
0x4000793	              0x55	                                push rbp	       200	push.c	FUNCTION_8
0x4000794	          0x4889e5	                            mov rbp, rsp	       200	push.c	FUNCTION_8
0x4000797	            0x4155	                                push r13	       200	push.c	FUNCTION_8
0x4000799	            0x4154	                                push r12	       200	push.c	FUNCTION_8
0x400079b	              0x53	                                push rbx	       200	push.c	FUNCTION_8
0x400079c	        0x4883ec48	                           sub rsp, 0x48	       200	push.c	FUNCTION_8
0x40007a0	        0x48897db8	             mov qword [rbp - 0x48], rdi	       200	push.c	FUNCTION_8
0x40007a4	        0x488975b0	             mov qword [rbp - 0x50], rsi	       200	push.c	FUNCTION_8
0x40007a8	          0x8955ac	             mov dword [rbp - 0x54], edx	       200	push.c	FUNCTION_8
0x40007ab	          0x894da8	             mov dword [rbp - 0x58], ecx	       200	push.c	FUNCTION_8
0x40007ae	    0x64488b042528	                mov rax, qword fs:[0x28]	       200	push.c	FUNCTION_8
0x40007b7	        0x488945d8	             mov qword [rbp - 0x28], rax	       200	push.c	FUNCTION_8
0x40007bb	            0x31c0	                            xor eax, eax	       200	push.c	FUNCTION_8
0x40007bd	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       201	push.c	FUNCTION_8
0x40007c5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       201	push.c	FUNCTION_8
0x40007cd	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       201	push.c	FUNCTION_8
0x40007d5	      0x48837db000	               cmp qword [rbp - 0x50], 0	       203	push.c	FUNCTION_8	IF_1
0x40007da	            0x7522	                           jne 0x40007fe	       203	push.c	FUNCTION_8	IF_1
0x40007dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       204	push.c	FUNCTION_8	CALL_2
0x40007e0	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       204	push.c	FUNCTION_8	CALL_2
0x40007e4	      0xbf00000000	                              mov edi, 0	       204	push.c	FUNCTION_8	CALL_2
0x40007e9	      0xe805f9ffff	                               call sym.	       204	push.c	FUNCTION_8	CALL_2
0x40007ee	          0x4889de	                            mov rsi, rbx	       204	push.c	FUNCTION_8	CALL_2
0x40007f1	          0x4889c7	                            mov rdi, rax	       204	push.c	FUNCTION_8	CALL_2
0x40007f4	      0xb800000000	                              mov eax, 0	       204	push.c	FUNCTION_8	CALL_2
0x40007f9	      0xe800000000	                          call 0x40007fe	       204	push.c	FUNCTION_8	CALL_2
0x40007fe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x4000802	          0x8b4030	            mov eax, dword [rax + 0x30] 	       205	push.c	FUNCTION_8	IF_2
0x4000805	            0x85c0	                           test eax, eax	       205	push.c	FUNCTION_8	IF_2
0x4000807	            0x741a	                            je 0x4000823	       205	push.c	FUNCTION_8	IF_2
0x4000809	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x400080d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       205	push.c	FUNCTION_8	IF_2
0x4000811	          0x4885c0	                           test rax, rax	       205	push.c	FUNCTION_8	IF_2
0x4000814	            0x740d	                            je 0x4000823	       205	push.c	FUNCTION_8	IF_2
0x4000816	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	push.c	FUNCTION_8	IF_2
0x400081a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       205	push.c	FUNCTION_8	IF_2
0x400081e	          0x4885c0	                           test rax, rax	       205	push.c	FUNCTION_8	IF_2
0x4000821	            0x7536	                           jne 0x4000859	       205	push.c	FUNCTION_8	IF_2
0x4000823	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000827	          0x4c8b28	                    mov r13, qword [rax]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x400082a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x400082e	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000832	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000836	          0x488b18	                    mov rbx, qword [rax]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000839	      0xbf00000000	                              mov edi, 0	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x400083e	      0xe8b0f8ffff	                               call sym.	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000843	          0x4c89e9	                            mov rcx, r13	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000846	          0x4c89e2	                            mov rdx, r12	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000849	          0x4889de	                            mov rsi, rbx	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x400084c	          0x4889c7	                            mov rdi, rax	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x400084f	      0xb800000000	                              mov eax, 0	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000854	      0xe800000000	                          call 0x4000859	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x4000859	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       213	push.c	FUNCTION_8	IF_3
0x400085d	          0x8b4030	            mov eax, dword [rax + 0x30] 	       213	push.c	FUNCTION_8	IF_3
0x4000860	          0x83f801	                              cmp eax, 1	       213	push.c	FUNCTION_8	IF_3
0x4000863	            0x7421	                            je 0x4000886	       213	push.c	FUNCTION_8	IF_3
0x4000865	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000869	          0x488b18	                    mov rbx, qword [rax]	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x400086c	      0xbf00000000	                              mov edi, 0	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000871	      0xe87df8ffff	                               call sym.	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000876	          0x4889de	                            mov rsi, rbx	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000879	          0x4889c7	                            mov rdi, rax	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x400087c	      0xb800000000	                              mov eax, 0	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000881	      0xe800000000	                          call 0x4000886	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000886	        0x837dac00	               cmp dword [rbp - 0x54], 0	       216	push.c	FUNCTION_8	IF_4
0x400088a	            0x742c	                            je 0x40008b8	       216	push.c	FUNCTION_8	IF_4
0x400088c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x4000890	          0x4c8b20	                    mov r12, qword [rax]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x4000893	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x4000897	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x400089b	      0xbf00000000	                              mov edi, 0	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008a0	      0xe84ef8ffff	                               call sym.	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008a5	          0x4c89e2	                            mov rdx, r12	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008a8	          0x4889de	                            mov rsi, rbx	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008ab	          0x4889c7	                            mov rdi, rax	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008ae	      0xb800000000	                              mov eax, 0	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008b3	      0xe800000000	                          call 0x40008b8	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008b8	        0x837da800	               cmp dword [rbp - 0x58], 0	       222	push.c	FUNCTION_8	IF_5
0x40008bc	            0x7439	                            je 0x40008f7	       222	push.c	FUNCTION_8	IF_5
0x40008be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008c6	          0x488b00	                    mov rax, qword [rax]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008c9	        0x488b5008	                mov rdx, qword [rax + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008d1	        0x488b4008	                mov rax, qword [rax + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008d5	          0x4889d6	                            mov rsi, rdx	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008d8	          0x4889c7	                            mov rdi, rax	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008db	      0xe800000000	                          call 0x40008e0	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008e0	            0x85c0	                           test eax, eax	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008e2	            0x7413	                            je 0x40008f7	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40008e4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x40008e8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x40008ec	          0x4889d6	                            mov rsi, rdx	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x40008ef	          0x4889c7	                            mov rdi, rax	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x40008f2	      0xe8e8fdffff	                call sym.die_push_simple	       225	push.c	FUNCTION_8	IF_5	CALL_10
0x40008f7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       228	push.c	FUNCTION_8	CALL_11
0x40008fb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       228	push.c	FUNCTION_8	CALL_11
0x40008ff	          0x488b00	                    mov rax, qword [rax]	       228	push.c	FUNCTION_8	CALL_11
0x4000902	        0x488b4808	                mov rcx, qword [rax + 8]	       228	push.c	FUNCTION_8	CALL_11
0x4000906	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       228	push.c	FUNCTION_8	CALL_11
0x400090a	        0x488b5008	                mov rdx, qword [rax + 8]	       228	push.c	FUNCTION_8	CALL_11
0x400090e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       228	push.c	FUNCTION_8	CALL_11
0x4000912	      0xbe00000000	                              mov esi, 0	       228	push.c	FUNCTION_8	CALL_11
0x4000917	          0x4889c7	                            mov rdi, rax	       228	push.c	FUNCTION_8	CALL_11
0x400091a	      0xb800000000	                              mov eax, 0	       228	push.c	FUNCTION_8	CALL_11
0x400091f	      0xe800000000	                          call 0x4000924	       228	push.c	FUNCTION_8	CALL_11
0x4000924	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	push.c	FUNCTION_8	CALL_12
0x4000928	          0x4889c7	                            mov rdi, rax	       229	push.c	FUNCTION_8	CALL_12
0x400092b	      0xe882f8ffff	                    call sym.add_refspec	       229	push.c	FUNCTION_8	CALL_12
0x4000930	              0x90	                                     nop	       230	push.c	FUNCTION_8
0x4000931	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	push.c	FUNCTION_8
0x4000935	    0x644833042528	                xor rax, qword fs:[0x28]	       230	push.c	FUNCTION_8
0x400093e	            0x7405	                            je 0x4000945	       230	push.c	FUNCTION_8
0x4000940	      0xe800000000	                          call 0x4000945	       230	push.c	FUNCTION_8
0x4000945	        0x4883c448	                           add rsp, 0x48	       230	push.c	FUNCTION_8
0x4000949	              0x5b	                                 pop rbx	       230	push.c	FUNCTION_8
0x400094a	            0x415c	                                 pop r12	       230	push.c	FUNCTION_8
0x400094c	            0x415d	                                 pop r13	       230	push.c	FUNCTION_8
0x400094e	              0x5d	                                 pop rbp	       230	push.c	FUNCTION_8
0x400094f	              0xc3	                                     ret	       230	push.c	FUNCTION_8
set_push_cert_flags	functions,0:CALL,0:ELSE,0:DO,0:SWITCH,1:FOR,0:IF,0:WHILE,0	48
0x40011a4	              0x55	                                push rbp	       482	push.c	FUNCTION_20
0x40011a5	          0x4889e5	                            mov rbp, rsp	       482	push.c	FUNCTION_20
0x40011a8	        0x48897df8	                mov qword [rbp - 8], rdi	       482	push.c	FUNCTION_20
0x40011ac	          0x8975f4	              mov dword [rbp - 0xc], esi	       482	push.c	FUNCTION_20
0x40011af	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       483	push.c	FUNCTION_20	SWITCH_1
0x40011b2	          0x83f801	                              cmp eax, 1	       483	push.c	FUNCTION_20	SWITCH_1
0x40011b5	            0x7442	                            je 0x40011f9	       483	push.c	FUNCTION_20	SWITCH_1
0x40011b7	          0x83f802	                              cmp eax, 2	       483	push.c	FUNCTION_20	SWITCH_1
0x40011ba	            0x7419	                            je 0x40011d5	       483	push.c	FUNCTION_20	SWITCH_1
0x40011bc	            0x85c0	                           test eax, eax	       483	push.c	FUNCTION_20	SWITCH_1
0x40011be	            0x7402	                            je 0x40011c2	       483	push.c	FUNCTION_20	SWITCH_1
0x40011c0	            0xeb5a	                           jmp 0x400121c	       496	push.c	FUNCTION_20
0x40011c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	push.c	FUNCTION_20	SWITCH_1
0x40011c6	            0x8b00	                    mov eax, dword [rax]	       485	push.c	FUNCTION_20	SWITCH_1
0x40011c8	          0x80e4e7	                            and ah, 0xe7	       485	push.c	FUNCTION_20	SWITCH_1
0x40011cb	            0x89c2	                            mov edx, eax	       485	push.c	FUNCTION_20	SWITCH_1
0x40011cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	push.c	FUNCTION_20	SWITCH_1
0x40011d1	            0x8910	                    mov dword [rax], edx	       485	push.c	FUNCTION_20	SWITCH_1
0x40011d3	            0xeb47	                           jmp 0x400121c	       486	push.c	FUNCTION_20	SWITCH_1
0x40011d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	push.c	FUNCTION_20	SWITCH_1
0x40011d9	            0x8b00	                    mov eax, dword [rax]	       488	push.c	FUNCTION_20	SWITCH_1
0x40011db	          0x80cc08	                                or ah, 8	       488	push.c	FUNCTION_20	SWITCH_1
0x40011de	            0x89c2	                            mov edx, eax	       488	push.c	FUNCTION_20	SWITCH_1
0x40011e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	push.c	FUNCTION_20	SWITCH_1
0x40011e4	            0x8910	                    mov dword [rax], edx	       488	push.c	FUNCTION_20	SWITCH_1
0x40011e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	push.c	FUNCTION_20	SWITCH_1
0x40011ea	            0x8b00	                    mov eax, dword [rax]	       489	push.c	FUNCTION_20	SWITCH_1
0x40011ec	          0x80e4ef	                            and ah, 0xef	       489	push.c	FUNCTION_20	SWITCH_1
0x40011ef	            0x89c2	                            mov edx, eax	       489	push.c	FUNCTION_20	SWITCH_1
0x40011f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	push.c	FUNCTION_20	SWITCH_1
0x40011f5	            0x8910	                    mov dword [rax], edx	       489	push.c	FUNCTION_20	SWITCH_1
0x40011f7	            0xeb23	                           jmp 0x400121c	       490	push.c	FUNCTION_20	SWITCH_1
0x40011f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	push.c	FUNCTION_20	SWITCH_1
0x40011fd	            0x8b00	                    mov eax, dword [rax]	       492	push.c	FUNCTION_20	SWITCH_1
0x40011ff	          0x80cc10	                             or ah, 0x10	       492	push.c	FUNCTION_20	SWITCH_1
0x4001202	            0x89c2	                            mov edx, eax	       492	push.c	FUNCTION_20	SWITCH_1
0x4001204	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	push.c	FUNCTION_20	SWITCH_1
0x4001208	            0x8910	                    mov dword [rax], edx	       492	push.c	FUNCTION_20	SWITCH_1
0x400120a	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	push.c	FUNCTION_20	SWITCH_1
0x400120e	            0x8b00	                    mov eax, dword [rax]	       493	push.c	FUNCTION_20	SWITCH_1
0x4001210	          0x80e4f7	                            and ah, 0xf7	       493	push.c	FUNCTION_20	SWITCH_1
0x4001213	            0x89c2	                            mov edx, eax	       493	push.c	FUNCTION_20	SWITCH_1
0x4001215	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	push.c	FUNCTION_20	SWITCH_1
0x4001219	            0x8910	                    mov dword [rax], edx	       493	push.c	FUNCTION_20	SWITCH_1
0x400121b	              0x90	                                     nop	       494	push.c	FUNCTION_20	SWITCH_1
0x400121c	              0x90	                                     nop	       496	push.c	FUNCTION_20
0x400121d	              0x5d	                                 pop rbp	       496	push.c	FUNCTION_20
0x400121e	              0xc3	                                     ret	       496	push.c	FUNCTION_20
set_refspecs	functions,0:CALL,16:ELSE,3:DO,0:SWITCH,0:FOR,1:IF,7:WHILE,0	131
0x4000472	              0x55	                                push rbp	       110	push.c	FUNCTION_5
0x4000473	          0x4889e5	                            mov rbp, rsp	       110	push.c	FUNCTION_5
0x4000476	        0x4883ec60	                           sub rsp, 0x60	       110	push.c	FUNCTION_5
0x400047a	        0x48897db8	             mov qword [rbp - 0x48], rdi	       110	push.c	FUNCTION_5
0x400047e	          0x8975b4	             mov dword [rbp - 0x4c], esi	       110	push.c	FUNCTION_5
0x4000481	        0x488955a8	             mov qword [rbp - 0x58], rdx	       110	push.c	FUNCTION_5
0x4000485	    0x64488b042528	                mov rax, qword fs:[0x28]	       110	push.c	FUNCTION_5
0x400048e	        0x488945f8	                mov qword [rbp - 8], rax	       110	push.c	FUNCTION_5
0x4000492	            0x31c0	                            xor eax, eax	       110	push.c	FUNCTION_5
0x4000494	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       111	push.c	FUNCTION_5
0x400049c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       112	push.c	FUNCTION_5
0x40004a4	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       115	push.c	FUNCTION_5	FOR_1
0x40004ab	      0xe9c5010000	                           jmp 0x4000675	       115	push.c	FUNCTION_5	FOR_1
0x40004b0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       116	push.c	FUNCTION_5	FOR_1
0x40004b3	            0x4898	                                    cdqe	       116	push.c	FUNCTION_5	FOR_1
0x40004b5	    0x488d14c50000	                        lea rdx, [rax*8]	       116	push.c	FUNCTION_5	FOR_1
0x40004bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       116	push.c	FUNCTION_5	FOR_1
0x40004c1	          0x4801d0	                            add rax, rdx	       116	push.c	FUNCTION_5	FOR_1
0x40004c4	          0x488b00	                    mov rax, qword [rax]	       116	push.c	FUNCTION_5	FOR_1
0x40004c7	        0x488945d8	             mov qword [rbp - 0x28], rax	       116	push.c	FUNCTION_5	FOR_1
0x40004cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004cf	          0x4889c6	                            mov rsi, rax	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004d2	      0xbf00000000	                              mov edi, 0	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004d7	      0xe800000000	                          call 0x40004dc	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004dc	            0x85c0	                           test eax, eax	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004de	     0xf85b0000000	                           jne 0x4000594	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x40004e4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x40004ec	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x40004f4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x40004fc	        0x8345c401	               add dword [rbp - 0x3c], 1	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000500	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000503	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000506	            0x7c17	                            jl 0x400051f	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000508	      0xbf00000000	                              mov edi, 0	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x400050d	      0xe8e1fbffff	                               call sym.	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4000512	          0x4889c7	                            mov rdi, rax	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x4000515	      0xb800000000	                              mov eax, 0	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x400051a	      0xe800000000	                          call 0x400051f	       120	push.c	FUNCTION_5	FOR_1	IF_1	CALL_3
0x400051f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4000522	            0x4898	                                    cdqe	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4000524	    0x488d14c50000	                        lea rdx, [rax*8]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x400052c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4000530	          0x4801d0	                            add rax, rdx	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4000533	          0x488b00	                    mov rax, qword [rax]	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x4000536	        0x488945d8	             mov qword [rbp - 0x28], rax	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x400053a	    0x8b0500000000	            mov eax, dword [0x04000540] 	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x4000540	            0x85c0	                           test eax, eax	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x4000542	            0x741c	                            je 0x4000560	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x4000544	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x4000548	        0x488d45e0	                   lea rax, [rbp - 0x20]	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x400054c	      0xbe00000000	                              mov esi, 0	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x4000551	          0x4889c7	                            mov rdi, rax	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x4000554	      0xb800000000	                              mov eax, 0	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x4000559	      0xe800000000	                          call 0x400055e	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x400055e	            0xeb1a	                           jmp 0x400057a	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x4000560	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4000564	        0x488d45e0	                   lea rax, [rbp - 0x20]	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4000568	      0xbe00000000	                              mov esi, 0	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x400056d	          0x4889c7	                            mov rdi, rax	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4000570	      0xb800000000	                              mov eax, 0	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4000575	      0xe800000000	                          call 0x400057a	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x400057a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x400057e	      0xbe00000000	                              mov esi, 0	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x4000583	          0x4889c7	                            mov rdi, rax	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x4000586	      0xe800000000	                          call 0x400058b	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x400058b	        0x488945d8	             mov qword [rbp - 0x28], rax	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x400058f	      0xe9d1000000	                           jmp 0x4000665	       126	push.c	FUNCTION_5	FOR_1	IF_1	CALL_6
0x4000594	    0x8b0500000000	            mov eax, dword [0x0400059a] 	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x400059a	            0x85c0	                           test eax, eax	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x400059c	            0x7476	                            je 0x4000614	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x400059e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x40005a6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x40005ae	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x40005b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005ba	      0xbe3a000000	                           mov esi, 0x3a	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005bf	          0x4889c7	                            mov rdi, rax	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005c2	      0xe800000000	                          call 0x40005c7	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005c7	          0x4885c0	                           test rax, rax	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005ca	            0x7417	                            je 0x40005e3	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40005cc	      0xbf00000000	                              mov edi, 0	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x40005d1	      0xe81dfbffff	                               call sym.	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x40005d6	          0x4889c7	                            mov rdi, rax	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x40005d9	      0xb800000000	                              mov eax, 0	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x40005de	      0xe800000000	                          call 0x40005e3	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x40005e3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005e7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005eb	      0xbe00000000	                              mov esi, 0	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005f0	          0x4889c7	                            mov rdi, rax	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005f3	      0xb800000000	                              mov eax, 0	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005f8	      0xe800000000	                          call 0x40005fd	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40005fd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x4000601	      0xbe00000000	                              mov esi, 0	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x4000606	          0x4889c7	                            mov rdi, rax	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x4000609	      0xe800000000	                          call 0x400060e	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x400060e	        0x488945d8	             mov qword [rbp - 0x28], rax	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x4000612	            0xeb51	                           jmp 0x4000665	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x4000614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4000618	      0xbe3a000000	                           mov esi, 0x3a	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x400061d	          0x4889c7	                            mov rdi, rax	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4000620	      0xe800000000	                          call 0x4000625	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4000625	          0x4885c0	                           test rax, rax	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4000628	            0x753b	                           jne 0x4000665	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x400062a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x400062f	            0x7519	                           jne 0x400064a	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x4000631	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x4000635	          0x4889c7	                            mov rdi, rax	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x4000638	      0xe800000000	                          call 0x400063d	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x400063d	        0x488945c8	             mov qword [rbp - 0x38], rax	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x4000641	      0xe800000000	                          call 0x4000646	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x4000646	        0x488945d0	             mov qword [rbp - 0x30], rax	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x400064a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x400064e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x4000652	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x4000656	          0x4889ce	                            mov rsi, rcx	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x4000659	          0x4889c7	                            mov rdi, rax	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x400065c	      0xe826fcffff	                    call sym.map_refspec	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x4000661	        0x488945d8	             mov qword [rbp - 0x28], rax	       139	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_15
0x4000665	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x4000669	          0x4889c7	                            mov rdi, rax	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x400066c	      0xe841fbffff	                    call sym.add_refspec	       141	push.c	FUNCTION_5	FOR_1	CALL_16
0x4000671	        0x8345c401	               add dword [rbp - 0x3c], 1	       115	push.c	FUNCTION_5	FOR_1
0x4000675	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       115	push.c	FUNCTION_5	FOR_1
0x4000678	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       115	push.c	FUNCTION_5	FOR_1
0x400067b	     0xf8c2ffeffff	                            jl 0x40004b0	       115	push.c	FUNCTION_5	FOR_1
0x4000681	              0x90	                                     nop	       143	push.c	FUNCTION_5
0x4000682	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	push.c	FUNCTION_5
0x4000686	    0x644833042528	                xor rax, qword fs:[0x28]	       143	push.c	FUNCTION_5
0x400068f	            0x7405	                            je 0x4000696	       143	push.c	FUNCTION_5
0x4000691	      0xe800000000	                          call 0x4000696	       143	push.c	FUNCTION_5
0x4000696	              0xc9	                                   leave	       143	push.c	FUNCTION_5
0x4000697	              0xc3	                                     ret	       143	push.c	FUNCTION_5
setup_default_push_refspecs	functions,0:CALL,9:ELSE,1:DO,0:SWITCH,1:FOR,0:IF,1:WHILE,0	56
0x4000a38	              0x55	                                push rbp	       249	push.c	FUNCTION_11
0x4000a39	          0x4889e5	                            mov rbp, rsp	       249	push.c	FUNCTION_11
0x4000a3c	        0x4883ec20	                           sub rsp, 0x20	       249	push.c	FUNCTION_11
0x4000a40	        0x48897de8	             mov qword [rbp - 0x18], rdi	       249	push.c	FUNCTION_11
0x4000a44	      0xbf00000000	                              mov edi, 0	       250	push.c	FUNCTION_11	CALL_1
0x4000a49	      0xe800000000	                          call 0x4000a4e	       250	push.c	FUNCTION_11	CALL_1
0x4000a4e	        0x488945f8	                mov qword [rbp - 8], rax	       250	push.c	FUNCTION_11	CALL_1
0x4000a52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	push.c	FUNCTION_11	CALL_2
0x4000a56	          0x4889c7	                            mov rdi, rax	       251	push.c	FUNCTION_11	CALL_2
0x4000a59	      0xe8a1ffffff	         call sym.is_workflow_triangular	       251	push.c	FUNCTION_11	CALL_2
0x4000a5e	          0x8945f4	              mov dword [rbp - 0xc], eax	       251	push.c	FUNCTION_11	CALL_2
0x4000a61	    0x8b0500000000	            mov eax, dword [0x04000a67] 	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a67	          0x83f805	                              cmp eax, 5	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a6a	            0x770c	                            ja 0x4000a78	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a6c	            0x89c0	                            mov eax, eax	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a6e	    0x488b04c50000	                  mov rax, qword [rax*8]	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a76	            0xffe0	                                 jmp rax	       253	push.c	FUNCTION_11	SWITCH_1
0x4000a78	      0xbf00000000	                              mov edi, 0	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0x4000a7d	      0xe830f7ffff	                    call sym.add_refspec	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0x4000a82	            0xeb7b	                           jmp 0x4000aff	       257	push.c	FUNCTION_11	SWITCH_1
0x4000a84	        0x837df400	                cmp dword [rbp - 0xc], 0	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0x4000a88	            0x7415	                            je 0x4000a9f	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0x4000a8a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0x4000a8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0x4000a92	          0x4889d6	                            mov rsi, rdx	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0x4000a95	          0x4889c7	                            mov rdi, rax	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0x4000a98	      0xe8b3feffff	             call sym.setup_push_current	       262	push.c	FUNCTION_11	SWITCH_1	CALL_4
0x4000a9d	            0xeb60	                           jmp 0x4000aff	       265	push.c	FUNCTION_11	SWITCH_1
0x4000a9f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000aa2	        0x488b75f8	                mov rsi, qword [rbp - 8]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000aa6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000aaa	      0xb901000000	                              mov ecx, 1	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000aaf	          0x4889c7	                            mov rdi, rax	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000ab2	      0xe8dcfcffff	            call sym.setup_push_upstream	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000ab7	            0xeb46	                           jmp 0x4000aff	       265	push.c	FUNCTION_11	SWITCH_1
0x4000ab9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000abc	        0x488b75f8	                mov rsi, qword [rbp - 8]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000ac0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000ac4	      0xb900000000	                              mov ecx, 0	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000ac9	          0x4889c7	                            mov rdi, rax	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000acc	      0xe8c2fcffff	            call sym.setup_push_upstream	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4000ad1	            0xeb2c	                           jmp 0x4000aff	       269	push.c	FUNCTION_11	SWITCH_1
0x4000ad3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0x4000ad7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0x4000adb	          0x4889d6	                            mov rsi, rdx	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0x4000ade	          0x4889c7	                            mov rdi, rax	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0x4000ae1	      0xe86afeffff	             call sym.setup_push_current	       272	push.c	FUNCTION_11	SWITCH_1	CALL_7
0x4000ae6	            0xeb17	                           jmp 0x4000aff	       273	push.c	FUNCTION_11	SWITCH_1
0x4000ae8	      0xbf00000000	                              mov edi, 0	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0x4000aed	      0xe801f6ffff	                               call sym.	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0x4000af2	          0x4889c7	                            mov rdi, rax	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0x4000af5	      0xb800000000	                              mov eax, 0	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0x4000afa	      0xe800000000	                          call 0x4000aff	       276	push.c	FUNCTION_11	SWITCH_1	CALL_9
0x4000aff	              0x90	                                     nop	       280	push.c	FUNCTION_11
0x4000b00	              0xc9	                                   leave	       280	push.c	FUNCTION_11
0x4000b01	              0xc3	                                     ret	       280	push.c	FUNCTION_11
advise_ref_needs_force	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	17
0x4000bd2	              0x55	                                push rbp	       338	push.c	FUNCTION_16
0x4000bd3	          0x4889e5	                            mov rbp, rsp	       338	push.c	FUNCTION_16
0x4000bd6	    0x8b0500000000	            mov eax, dword [0x04000bdc] 	       339	push.c	FUNCTION_16	IF_1
0x4000bdc	            0x85c0	                           test eax, eax	       339	push.c	FUNCTION_16	IF_1
0x4000bde	            0x7423	                            je 0x4000c03	       339	push.c	FUNCTION_16	IF_1
0x4000be0	    0x8b0500000000	            mov eax, dword [0x04000be6] 	       339	push.c	FUNCTION_16	IF_1
0x4000be6	            0x85c0	                           test eax, eax	       339	push.c	FUNCTION_16	IF_1
0x4000be8	            0x7419	                            je 0x4000c03	       339	push.c	FUNCTION_16	IF_1
0x4000bea	      0xbf00000000	                              mov edi, 0	       341	push.c	FUNCTION_16	CALL_2
0x4000bef	      0xe8fff4ffff	                               call sym.	       341	push.c	FUNCTION_16	CALL_2
0x4000bf4	          0x4889c7	                            mov rdi, rax	       341	push.c	FUNCTION_16	CALL_2
0x4000bf7	      0xb800000000	                              mov eax, 0	       341	push.c	FUNCTION_16	CALL_2
0x4000bfc	      0xe800000000	                          call 0x4000c01	       341	push.c	FUNCTION_16	CALL_2
0x4000c01	            0xeb01	                           jmp 0x4000c04	       341	push.c	FUNCTION_16	CALL_2
0x4000c03	              0x90	                                     nop	       340	push.c	FUNCTION_16	IF_1
0x4000c04	              0x5d	                                 pop rbp	       342	push.c	FUNCTION_16
0x4000c05	              0xc3	                                     ret	       342	push.c	FUNCTION_16
die_push_simple	functions,0:CALL,4:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	47
0x40006df	              0x55	                                push rbp	       155	push.c	FUNCTION_7
0x40006e0	          0x4889e5	                            mov rbp, rsp	       155	push.c	FUNCTION_7
0x40006e3	            0x4156	                                push r14	       155	push.c	FUNCTION_7
0x40006e5	            0x4155	                                push r13	       155	push.c	FUNCTION_7
0x40006e7	            0x4154	                                push r12	       155	push.c	FUNCTION_7
0x40006e9	              0x53	                                push rbx	       155	push.c	FUNCTION_7
0x40006ea	        0x4883ec30	                           sub rsp, 0x30	       155	push.c	FUNCTION_7
0x40006ee	        0x48897db8	             mov qword [rbp - 0x48], rdi	       155	push.c	FUNCTION_7
0x40006f2	        0x488975b0	             mov qword [rbp - 0x50], rsi	       155	push.c	FUNCTION_7
0x40006f6	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	push.c	FUNCTION_7
0x40006ff	        0x488945d8	             mov qword [rbp - 0x28], rax	       155	push.c	FUNCTION_7
0x4000703	            0x31c0	                            xor eax, eax	       155	push.c	FUNCTION_7
0x4000705	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       164	push.c	FUNCTION_7
0x400070d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       165	push.c	FUNCTION_7
0x4000711	        0x488b4028	            mov rax, qword [rax + 0x28] 	       165	push.c	FUNCTION_7
0x4000715	          0x488b00	                    mov rax, qword [rax]	       165	push.c	FUNCTION_7
0x4000718	        0x488b4008	                mov rax, qword [rax + 8]	       165	push.c	FUNCTION_7
0x400071c	        0x488945c8	             mov qword [rbp - 0x38], rax	       165	push.c	FUNCTION_7
0x4000720	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       167	push.c	FUNCTION_7	CALL_1
0x4000724	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       167	push.c	FUNCTION_7	CALL_1
0x4000728	      0xbe00000000	                              mov esi, 0	       167	push.c	FUNCTION_7	CALL_1
0x400072d	          0x4889c7	                            mov rdi, rax	       167	push.c	FUNCTION_7	CALL_1
0x4000730	      0xe816f9ffff	                    call sym.skip_prefix	       167	push.c	FUNCTION_7	CALL_1
0x4000735	    0x8b0500000000	            mov eax, dword [0x0400073b] 	       173	push.c	FUNCTION_7	IF_1
0x400073b	          0x83f805	                              cmp eax, 5	       173	push.c	FUNCTION_7	IF_1
0x400073e	            0x750e	                           jne 0x400074e	       173	push.c	FUNCTION_7	IF_1
0x4000740	      0xbf00000000	                              mov edi, 0	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x4000745	      0xe8a9f9ffff	                               call sym.	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x400074a	        0x488945d0	             mov qword [rbp - 0x30], rax	       174	push.c	FUNCTION_7	IF_1	CALL_2
0x400074e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       177	push.c	FUNCTION_7	CALL_4
0x4000752	          0x4c8b30	                    mov r14, qword [rax]	       177	push.c	FUNCTION_7	CALL_4
0x4000755	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	push.c	FUNCTION_7	CALL_4
0x4000759	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       177	push.c	FUNCTION_7	CALL_4
0x400075d	        0x4c8b65c8	             mov r12, qword [rbp - 0x38]	       177	push.c	FUNCTION_7	CALL_4
0x4000761	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	push.c	FUNCTION_7	CALL_4
0x4000765	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       177	push.c	FUNCTION_7	CALL_4
0x4000769	      0xbf00000000	                              mov edi, 0	       177	push.c	FUNCTION_7	CALL_4
0x400076e	      0xe880f9ffff	                               call sym.	       177	push.c	FUNCTION_7	CALL_4
0x4000773	          0x4889c7	                            mov rdi, rax	       177	push.c	FUNCTION_7	CALL_4
0x4000776	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       177	push.c	FUNCTION_7	CALL_4
0x400077a	          0x4989c1	                             mov r9, rax	       177	push.c	FUNCTION_7	CALL_4
0x400077d	          0x4d89f0	                             mov r8, r14	       177	push.c	FUNCTION_7	CALL_4
0x4000780	          0x4c89e9	                            mov rcx, r13	       177	push.c	FUNCTION_7	CALL_4
0x4000783	          0x4c89e2	                            mov rdx, r12	       177	push.c	FUNCTION_7	CALL_4
0x4000786	          0x4889de	                            mov rsi, rbx	       177	push.c	FUNCTION_7	CALL_4
0x4000789	      0xb800000000	                              mov eax, 0	       177	push.c	FUNCTION_7	CALL_4
0x400078e	      0xe800000000	            call sym.setup_push_upstream	       177	push.c	FUNCTION_7	CALL_4
skip_prefix	functions,0:CALL,0:ELSE,0:DO,1:SWITCH,0:FOR,0:IF,1:WHILE,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_29
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_29
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_29
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_29
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_29
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_29
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_29
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_29
advise_ref_already_exists	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	17
0x4000b6a	              0x55	                                push rbp	       324	push.c	FUNCTION_14
0x4000b6b	          0x4889e5	                            mov rbp, rsp	       324	push.c	FUNCTION_14
0x4000b6e	    0x8b0500000000	            mov eax, dword [0x04000b74] 	       325	push.c	FUNCTION_14	IF_1
0x4000b74	            0x85c0	                           test eax, eax	       325	push.c	FUNCTION_14	IF_1
0x4000b76	            0x7423	                            je 0x4000b9b	       325	push.c	FUNCTION_14	IF_1
0x4000b78	    0x8b0500000000	            mov eax, dword [0x04000b7e] 	       325	push.c	FUNCTION_14	IF_1
0x4000b7e	            0x85c0	                           test eax, eax	       325	push.c	FUNCTION_14	IF_1
0x4000b80	            0x7419	                            je 0x4000b9b	       325	push.c	FUNCTION_14	IF_1
0x4000b82	      0xbf00000000	                              mov edi, 0	       327	push.c	FUNCTION_14	CALL_2
0x4000b87	      0xe867f5ffff	                               call sym.	       327	push.c	FUNCTION_14	CALL_2
0x4000b8c	          0x4889c7	                            mov rdi, rax	       327	push.c	FUNCTION_14	CALL_2
0x4000b8f	      0xb800000000	                              mov eax, 0	       327	push.c	FUNCTION_14	CALL_2
0x4000b94	      0xe800000000	                          call 0x4000b99	       327	push.c	FUNCTION_14	CALL_2
0x4000b99	            0xeb01	                           jmp 0x4000b9c	       327	push.c	FUNCTION_14	CALL_2
0x4000b9b	              0x90	                                     nop	       326	push.c	FUNCTION_14	IF_1
0x4000b9c	              0x5d	                                 pop rbp	       328	push.c	FUNCTION_14
0x4000b9d	              0xc3	                                     ret	       328	push.c	FUNCTION_14
push_get_color	functions,0:CALL,1:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	22
0x400016a	              0x55	                                push rbp	        43	push.c	FUNCTION_2
0x400016b	          0x4889e5	                            mov rbp, rsp	        43	push.c	FUNCTION_2
0x400016e	        0x4883ec10	                           sub rsp, 0x10	        43	push.c	FUNCTION_2
0x4000172	          0x897dfc	                mov dword [rbp - 4], edi	        43	push.c	FUNCTION_2
0x4000175	    0x8b0500000000	            mov eax, dword [0x0400017b] 	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x400017b	            0x89c6	                            mov esi, eax	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x400017d	      0xbf02000000	                              mov edi, 2	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x4000182	      0xe800000000	                          call 0x4000187	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x4000187	            0x85c0	                           test eax, eax	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x4000189	            0x7420	                            je 0x40001ab	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x400018b	          0x8b55fc	                mov edx, dword [rbp - 4]	        45	push.c	FUNCTION_2	IF_1
0x400018e	          0x4889d0	                            mov rax, rdx	        45	push.c	FUNCTION_2	IF_1
0x4000191	        0x48c1e002	                              shl rax, 2	        45	push.c	FUNCTION_2	IF_1
0x4000195	          0x4801d0	                            add rax, rdx	        45	push.c	FUNCTION_2	IF_1
0x4000198	          0x4889c2	                            mov rdx, rax	        45	push.c	FUNCTION_2	IF_1
0x400019b	        0x48c1e204	                              shl rdx, 4	        45	push.c	FUNCTION_2	IF_1
0x400019f	          0x4829c2	                            sub rdx, rax	        45	push.c	FUNCTION_2	IF_1
0x40001a2	    0x488d82000000	                          lea rax, [rdx]	        45	push.c	FUNCTION_2	IF_1
0x40001a9	            0xeb05	                           jmp 0x40001b0	        45	push.c	FUNCTION_2	IF_1
0x40001ab	      0xb800000000	                              mov eax, 0	        46	push.c	FUNCTION_2
0x40001b0	              0xc9	                                   leave	        47	push.c	FUNCTION_2
0x40001b1	              0xc3	                                     ret	        47	push.c	FUNCTION_2
do_push	functions,0:CALL,18:ELSE,2:DO,0:SWITCH,0:FOR,1:IF,17:WHILE,0	203
0x4000e2f	              0x55	                                push rbp	       395	push.c	FUNCTION_18
0x4000e30	          0x4889e5	                            mov rbp, rsp	       395	push.c	FUNCTION_18
0x4000e33	        0x4883ec60	                           sub rsp, 0x60	       395	push.c	FUNCTION_18
0x4000e37	        0x48897db8	             mov qword [rbp - 0x48], rdi	       395	push.c	FUNCTION_18
0x4000e3b	          0x8975b4	             mov dword [rbp - 0x4c], esi	       395	push.c	FUNCTION_18
0x4000e3e	        0x488955a8	             mov qword [rbp - 0x58], rdx	       395	push.c	FUNCTION_18
0x4000e42	    0x64488b042528	                mov rax, qword fs:[0x28]	       395	push.c	FUNCTION_18
0x4000e4b	        0x488945f8	                mov qword [rbp - 8], rax	       395	push.c	FUNCTION_18
0x4000e4f	            0x31c0	                            xor eax, eax	       395	push.c	FUNCTION_18
0x4000e51	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       397	push.c	FUNCTION_18	CALL_1
0x4000e55	          0x4889c7	                            mov rdi, rax	       397	push.c	FUNCTION_18	CALL_1
0x4000e58	      0xe800000000	                          call 0x4000e5d	       397	push.c	FUNCTION_18	CALL_1
0x4000e5d	        0x488945e0	             mov qword [rbp - 0x20], rax	       397	push.c	FUNCTION_18	CALL_1
0x4000e61	      0x48837de000	               cmp qword [rbp - 0x20], 0	       401	push.c	FUNCTION_18	IF_1
0x4000e66	            0x753f	                           jne 0x4000ea7	       401	push.c	FUNCTION_18	IF_1
0x4000e68	      0x48837db800	               cmp qword [rbp - 0x48], 0	       402	push.c	FUNCTION_18	IF_1	IF_2
0x4000e6d	            0x7421	                            je 0x4000e90	       402	push.c	FUNCTION_18	IF_1	IF_2
0x4000e6f	      0xbf00000000	                              mov edi, 0	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e74	      0xe87af2ffff	                               call sym.	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e79	          0x4889c2	                            mov rdx, rax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e7c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e80	          0x4889c6	                            mov rsi, rax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e83	          0x4889d7	                            mov rdi, rdx	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e86	      0xb800000000	                              mov eax, 0	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e8b	      0xe800000000	                          call 0x4000e90	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4000e90	      0xbf00000000	                              mov edi, 0	       404	push.c	FUNCTION_18	IF_1	CALL_5
0x4000e95	      0xe859f2ffff	                               call sym.	       404	push.c	FUNCTION_18	IF_1	CALL_5
0x4000e9a	          0x4889c7	                            mov rdi, rax	       404	push.c	FUNCTION_18	IF_1	CALL_5
0x4000e9d	      0xb800000000	                              mov eax, 0	       404	push.c	FUNCTION_18	IF_1	CALL_5
0x4000ea2	      0xe800000000	                          call 0x4000ea7	       404	push.c	FUNCTION_18	IF_1	CALL_5
0x4000ea7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	push.c	FUNCTION_18	IF_3
0x4000eab	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       414	push.c	FUNCTION_18	IF_3
0x4000eb1	            0x85c0	                           test eax, eax	       414	push.c	FUNCTION_18	IF_3
0x4000eb3	            0x7404	                            je 0x4000eb9	       414	push.c	FUNCTION_18	IF_3
0x4000eb5	        0x834db40a	              or dword [rbp - 0x4c], 0xa	       415	push.c	FUNCTION_18	IF_3
0x4000eb9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       417	push.c	FUNCTION_18	IF_4
0x4000ebd	          0x8b4008	                mov eax, dword [rax + 8]	       417	push.c	FUNCTION_18	IF_4
0x4000ec0	            0x85c0	                           test eax, eax	       417	push.c	FUNCTION_18	IF_4
0x4000ec2	            0x7407	                            je 0x4000ecb	       417	push.c	FUNCTION_18	IF_4
0x4000ec4	    0x814db4004000	           or dword [rbp - 0x4c], 0x4000	       418	push.c	FUNCTION_18	IF_4
0x4000ecb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       420	push.c	FUNCTION_18	IF_5
0x4000ece	          0x83e001	                              and eax, 1	       420	push.c	FUNCTION_18	IF_5
0x4000ed1	            0x85c0	                           test eax, eax	       420	push.c	FUNCTION_18	IF_5
0x4000ed3	            0x7469	                            je 0x4000f3e	       420	push.c	FUNCTION_18	IF_5
0x4000ed5	    0x488b05000000	            mov rax, qword [0x04000edc] 	       420	push.c	FUNCTION_18	IF_5
0x4000edc	          0x4885c0	                           test rax, rax	       420	push.c	FUNCTION_18	IF_5
0x4000edf	            0x745d	                            je 0x4000f3e	       420	push.c	FUNCTION_18	IF_5
0x4000ee1	    0x488b05000000	            mov rax, qword [0x04000ee8] 	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000ee8	          0x488b00	                    mov rax, qword [rax]	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000eeb	      0xbe00000000	                              mov esi, 0	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000ef0	          0x4889c7	                            mov rdi, rax	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000ef8	            0x85c0	                           test eax, eax	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000efa	            0x7521	                           jne 0x4000f1d	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x4000efc	      0xbf00000000	                              mov edi, 0	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f01	      0xe8edf1ffff	                               call sym.	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f06	          0x4889c7	                            mov rdi, rax	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f09	      0xb800000000	                              mov eax, 0	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f0e	      0xe800000000	                          call 0x4000f13	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f13	      0xe828f1ffff	                    call sym.const_error	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f18	      0xe9f7010000	                           jmp 0x4001114	       422	push.c	FUNCTION_18	IF_5	CALL_7
0x4000f1d	      0xbf00000000	                              mov edi, 0	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f22	      0xe8ccf1ffff	                               call sym.	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f27	          0x4889c7	                            mov rdi, rax	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f2a	      0xb800000000	                              mov eax, 0	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f2f	      0xe800000000	                          call 0x4000f34	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f34	      0xe807f1ffff	                    call sym.const_error	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f39	      0xe9d6010000	                           jmp 0x4001114	       423	push.c	FUNCTION_18	IF_5	CALL_8
0x4000f3e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       426	push.c	FUNCTION_18	IF_7
0x4000f41	          0x83e008	                              and eax, 8	       426	push.c	FUNCTION_18	IF_7
0x4000f44	            0x85c0	                           test eax, eax	       426	push.c	FUNCTION_18	IF_7
0x4000f46	            0x7469	                            je 0x4000fb1	       426	push.c	FUNCTION_18	IF_7
0x4000f48	    0x488b05000000	            mov rax, qword [0x04000f4f] 	       426	push.c	FUNCTION_18	IF_7
0x4000f4f	          0x4885c0	                           test rax, rax	       426	push.c	FUNCTION_18	IF_7
0x4000f52	            0x745d	                            je 0x4000fb1	       426	push.c	FUNCTION_18	IF_7
0x4000f54	    0x488b05000000	            mov rax, qword [0x04000f5b] 	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f5b	          0x488b00	                    mov rax, qword [rax]	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f5e	      0xbe00000000	                              mov esi, 0	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f63	          0x4889c7	                            mov rdi, rax	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f66	      0xe800000000	                          call 0x4000f6b	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f6b	            0x85c0	                           test eax, eax	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f6d	            0x7521	                           jne 0x4000f90	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x4000f6f	      0xbf00000000	                              mov edi, 0	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f74	      0xe87af1ffff	                               call sym.	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f79	          0x4889c7	                            mov rdi, rax	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f7c	      0xb800000000	                              mov eax, 0	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f81	      0xe800000000	                          call 0x4000f86	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f86	      0xe8b5f0ffff	                    call sym.const_error	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f8b	      0xe984010000	                           jmp 0x4001114	       428	push.c	FUNCTION_18	IF_7	CALL_10
0x4000f90	      0xbf00000000	                              mov edi, 0	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000f95	      0xe859f1ffff	                               call sym.	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000f9a	          0x4889c7	                            mov rdi, rax	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000f9d	      0xb800000000	                              mov eax, 0	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000fa2	      0xe800000000	                          call 0x4000fa7	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000fa7	      0xe894f0ffff	                    call sym.const_error	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000fac	      0xe963010000	                           jmp 0x4001114	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x4000fb1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       432	push.c	FUNCTION_18	IF_9
0x4000fb4	          0x83e009	                              and eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4000fb7	          0x83f809	                              cmp eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4000fba	            0x7521	                           jne 0x4000fdd	       432	push.c	FUNCTION_18	IF_9
0x4000fbc	      0xbf00000000	                              mov edi, 0	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fc1	      0xe82df1ffff	                               call sym.	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fc6	          0x4889c7	                            mov rdi, rax	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fc9	      0xb800000000	                              mov eax, 0	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fce	      0xe800000000	                          call 0x4000fd3	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fd3	      0xe868f0ffff	                    call sym.const_error	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fd8	      0xe937010000	                           jmp 0x4001114	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4000fdd	    0x488b05000000	            mov rax, qword [0x04000fe4] 	       437	push.c	FUNCTION_18	IF_10
0x4000fe4	          0x4885c0	                           test rax, rax	       437	push.c	FUNCTION_18	IF_10
0x4000fe7	            0x7549	                           jne 0x4001032	       437	push.c	FUNCTION_18	IF_10
0x4000fe9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       437	push.c	FUNCTION_18	IF_10
0x4000fec	          0x83e001	                              and eax, 1	       437	push.c	FUNCTION_18	IF_10
0x4000fef	            0x85c0	                           test eax, eax	       437	push.c	FUNCTION_18	IF_10
0x4000ff1	            0x753f	                           jne 0x4001032	       437	push.c	FUNCTION_18	IF_10
0x4000ff3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4000ff7	          0x8b4058	            mov eax, dword [rax + 0x58] 	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4000ffa	            0x85c0	                           test eax, eax	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4000ffc	            0x741e	                            je 0x400101c	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4000ffe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	push.c	FUNCTION_18	IF_10	IF_11
0x4001002	        0x488b4048	            mov rax, qword [rax + 0x48] 	       439	push.c	FUNCTION_18	IF_10	IF_11
0x4001006	    0x488905000000	            mov qword [0x0400100d], rax 	       439	push.c	FUNCTION_18	IF_10	IF_11
0x400100d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	push.c	FUNCTION_18	IF_10	IF_11
0x4001011	          0x8b4058	            mov eax, dword [rax + 0x58] 	       440	push.c	FUNCTION_18	IF_10	IF_11
0x4001014	    0x890500000000	            mov dword [0x0400101a], eax 	       440	push.c	FUNCTION_18	IF_10	IF_11
0x400101a	            0xeb16	                           jmp 0x4001032	       440	push.c	FUNCTION_18	IF_10	IF_11
0x400101c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x400101f	          0x83e008	                              and eax, 8	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x4001022	            0x85c0	                           test eax, eax	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x4001024	            0x750c	                           jne 0x4001032	       441	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x4001026	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x400102a	          0x4889c7	                            mov rdi, rax	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x400102d	      0xe806faffff	    call sym.setup_default_push_refspecs	       442	push.c	FUNCTION_18	IF_10	ELSE_1	IF_12
0x4001032	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       444	push.c	FUNCTION_18
0x4001039	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       445	push.c	FUNCTION_18	CALL_14
0x400103d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       445	push.c	FUNCTION_18	CALL_14
0x4001041	          0x4889d6	                            mov rsi, rdx	       445	push.c	FUNCTION_18	CALL_14
0x4001044	          0x4889c7	                            mov rdi, rax	       445	push.c	FUNCTION_18	CALL_14
0x4001047	      0xe84cf6ffff	             call sym.push_url_of_remote	       445	push.c	FUNCTION_18	CALL_14
0x400104c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       445	push.c	FUNCTION_18	CALL_14
0x400104f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       446	push.c	FUNCTION_18	IF_13
0x4001053	            0x746f	                            je 0x40010c4	       446	push.c	FUNCTION_18	IF_13
0x4001055	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400105c	            0xeb5c	                           jmp 0x40010ba	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400105e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x4001062	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x4001065	          0x4863d2	                         movsxd rdx, edx	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x4001068	        0x48c1e203	                              shl rdx, 3	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x400106c	          0x4801d0	                            add rax, rdx	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x400106f	          0x488b10	                    mov rdx, qword [rax]	       449	push.c	FUNCTION_18	IF_13	FOR_1	CALL_15
0x4001072	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001076	          0x4889d6	                            mov rsi, rdx	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001079	          0x4889c7	                            mov rdi, rax	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x400107c	      0xe800000000	                          call 0x4001081	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001081	        0x488945e8	             mov qword [rbp - 0x18], rax	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001085	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x4001088	      0x2500400000	                         and eax, 0x4000	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x400108d	            0x85c0	                           test eax, eax	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x400108f	            0x740c	                            je 0x400109d	       450	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x4001091	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x4001095	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x4001099	        0x48895030	             mov qword [rax + 0x30], rdx	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x400109d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010a4	            0x89d6	                            mov esi, edx	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010a6	          0x4889c7	                            mov rdi, rax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010a9	      0xe858fbffff	              call sym.push_with_options	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010ae	            0x85c0	                           test eax, eax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010b0	            0x7404	                            je 0x40010b6	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40010b2	        0x8345d001	               add dword [rbp - 0x30], 1	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x40010b6	        0x8345cc01	               add dword [rbp - 0x34], 1	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40010ba	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40010bd	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40010c0	            0x7c9c	                            jl 0x400105e	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40010c2	            0xeb46	                           jmp 0x400110a	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40010c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       456	push.c	FUNCTION_18	ELSE_2
0x40010c8	      0xbe00000000	                              mov esi, 0	       456	push.c	FUNCTION_18	ELSE_2
0x40010cd	          0x4889c7	                            mov rdi, rax	       456	push.c	FUNCTION_18	ELSE_2
0x40010d0	      0xe800000000	                          call 0x40010d5	       456	push.c	FUNCTION_18	ELSE_2
0x40010d5	        0x488945f0	             mov qword [rbp - 0x10], rax	       456	push.c	FUNCTION_18	ELSE_2
0x40010d9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010dc	      0x2500400000	                         and eax, 0x4000	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010e1	            0x85c0	                           test eax, eax	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010e3	            0x740c	                            je 0x40010f1	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010e9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010ed	        0x48895030	             mov qword [rax + 0x30], rdx	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x40010f1	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x40010f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x40010f8	            0x89d6	                            mov esi, edx	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x40010fa	          0x4889c7	                            mov rdi, rax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x40010fd	      0xe804fbffff	              call sym.push_with_options	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001102	            0x85c0	                           test eax, eax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001104	            0x7404	                            je 0x400110a	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001106	        0x8345d001	               add dword [rbp - 0x30], 1	       461	push.c	FUNCTION_18	ELSE_2	IF_17
0x400110a	        0x837dd000	               cmp dword [rbp - 0x30], 0	       463	push.c	FUNCTION_18
0x400110e	           0xf95c0	                                setne al	       463	push.c	FUNCTION_18
0x4001111	           0xfb6c0	                           movzx eax, al	       463	push.c	FUNCTION_18
0x4001114	        0x488b4df8	                mov rcx, qword [rbp - 8]	       464	push.c	FUNCTION_18
0x4001118	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       464	push.c	FUNCTION_18
0x4001121	            0x7405	                            je 0x4001128	       464	push.c	FUNCTION_18
0x4001123	      0xe800000000	                          call 0x4001128	       464	push.c	FUNCTION_18
0x4001128	              0xc9	                                   leave	       464	push.c	FUNCTION_18
0x4001129	              0xc3	                                     ret	       464	push.c	FUNCTION_18
option_parse_recurse_submodules	functions,0:CALL,2:ELSE,2:DO,0:SWITCH,0:FOR,0:IF,2:WHILE,0	35
0x400112a	              0x55	                                push rbp	       468	push.c	FUNCTION_19
0x400112b	          0x4889e5	                            mov rbp, rsp	       468	push.c	FUNCTION_19
0x400112e	        0x4883ec30	                           sub rsp, 0x30	       468	push.c	FUNCTION_19
0x4001132	        0x48897de8	             mov qword [rbp - 0x18], rdi	       468	push.c	FUNCTION_19
0x4001136	        0x488975e0	             mov qword [rbp - 0x20], rsi	       468	push.c	FUNCTION_19
0x400113a	          0x8955dc	             mov dword [rbp - 0x24], edx	       468	push.c	FUNCTION_19
0x400113d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	push.c	FUNCTION_19
0x4001141	        0x488b4010	            mov rax, qword [rax + 0x10] 	       469	push.c	FUNCTION_19
0x4001145	        0x488945f8	                mov qword [rbp - 8], rax	       469	push.c	FUNCTION_19
0x4001149	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       471	push.c	FUNCTION_19	IF_1
0x400114d	            0x740c	                            je 0x400115b	       471	push.c	FUNCTION_19	IF_1
0x400114f	        0x488b45f8	                mov rax, qword [rbp - 8]	       472	push.c	FUNCTION_19	IF_1
0x4001153	    0xc70000000000	                      mov dword [rax], 0	       472	push.c	FUNCTION_19	IF_1
0x4001159	            0xeb42	                           jmp 0x400119d	       472	push.c	FUNCTION_19	IF_1
0x400115b	      0x48837de000	               cmp qword [rbp - 0x20], 0	       473	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001160	            0x7421	                            je 0x4001183	       473	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001166	        0x488b4008	                mov rax, qword [rax + 8]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x400116a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x400116e	          0x4889d6	                            mov rsi, rdx	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001171	          0x4889c7	                            mov rdi, rax	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001174	      0xe800000000	                          call 0x4001179	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001179	            0x89c2	                            mov edx, eax	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x400117b	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x400117f	            0x8910	                    mov dword [rax], edx	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001181	            0xeb1a	                           jmp 0x400119d	       474	push.c	FUNCTION_19	ELSE_1	IF_2
0x4001183	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	push.c	FUNCTION_19	CALL_2
0x4001187	        0x488b4008	                mov rax, qword [rax + 8]	       476	push.c	FUNCTION_19	CALL_2
0x400118b	          0x4889c6	                            mov rsi, rax	       476	push.c	FUNCTION_19	CALL_2
0x400118e	      0xbf00000000	                              mov edi, 0	       476	push.c	FUNCTION_19	CALL_2
0x4001193	      0xb800000000	                              mov eax, 0	       476	push.c	FUNCTION_19	CALL_2
0x4001198	      0xe800000000	                          call 0x400119d	       476	push.c	FUNCTION_19	CALL_2
0x400119d	      0xb800000000	                              mov eax, 0	       478	push.c	FUNCTION_19
0x40011a2	              0xc9	                                   leave	       479	push.c	FUNCTION_19
0x40011a3	              0xc3	                                     ret	       479	push.c	FUNCTION_19
add_refspec	functions,0:CALL,1:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,0:WHILE,0	59
0x40001b2	              0x55	                                push rbp	        66	push.c	FUNCTION_3
0x40001b3	          0x4889e5	                            mov rbp, rsp	        66	push.c	FUNCTION_3
0x40001b6	        0x4883ec10	                           sub rsp, 0x10	        66	push.c	FUNCTION_3
0x40001ba	        0x48897df8	                mov qword [rbp - 8], rdi	        66	push.c	FUNCTION_3
0x40001be	    0x8b0500000000	            mov eax, dword [0x040001c4] 	        67	push.c	FUNCTION_3
0x40001c4	          0x83c001	                              add eax, 1	        67	push.c	FUNCTION_3
0x40001c7	    0x890500000000	            mov dword [0x040001cd], eax 	        67	push.c	FUNCTION_3
0x40001cd	    0x8b1500000000	            mov edx, dword [0x040001d3] 	        68	push.c	FUNCTION_3	CALL_1
0x40001d3	    0x8b0500000000	            mov eax, dword [0x040001d9] 	        68	push.c	FUNCTION_3	CALL_1
0x40001d9	            0x39c2	                            cmp edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x40001db	     0xf8e81000000	                           jle 0x4000262	        68	push.c	FUNCTION_3	CALL_1
0x40001e1	    0x8b0500000000	            mov eax, dword [0x040001e7] 	        68	push.c	FUNCTION_3	CALL_1
0x40001e7	          0x8d5010	                   lea edx, [rax + 0x10]	        68	push.c	FUNCTION_3	CALL_1
0x40001ea	            0x89d0	                            mov eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x40001ec	             0x1c0	                            add eax, eax	        68	push.c	FUNCTION_3	CALL_1
0x40001ee	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x40001f0	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x40001f2	          0xc1ea1f	                           shr edx, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x40001f5	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x40001f7	            0xd1f8	                              sar eax, 1	        68	push.c	FUNCTION_3	CALL_1
0x40001f9	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x40001fb	    0x8b0500000000	            mov eax, dword [0x04000201] 	        68	push.c	FUNCTION_3	CALL_1
0x4000201	            0x39c2	                            cmp edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4000203	            0x7d0e	                           jge 0x4000213	        68	push.c	FUNCTION_3	CALL_1
0x4000205	    0x8b0500000000	            mov eax, dword [0x0400020b] 	        68	push.c	FUNCTION_3	CALL_1
0x400020b	    0x890500000000	            mov dword [0x04000211], eax 	        68	push.c	FUNCTION_3	CALL_1
0x4000211	            0xeb1e	                           jmp 0x4000231	        68	push.c	FUNCTION_3	CALL_1
0x4000213	    0x8b0500000000	            mov eax, dword [0x04000219] 	        68	push.c	FUNCTION_3	CALL_1
0x4000219	          0x8d5010	                   lea edx, [rax + 0x10]	        68	push.c	FUNCTION_3	CALL_1
0x400021c	            0x89d0	                            mov eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x400021e	             0x1c0	                            add eax, eax	        68	push.c	FUNCTION_3	CALL_1
0x4000220	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x4000222	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4000224	          0xc1ea1f	                           shr edx, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x4000227	             0x1d0	                            add eax, edx	        68	push.c	FUNCTION_3	CALL_1
0x4000229	            0xd1f8	                              sar eax, 1	        68	push.c	FUNCTION_3	CALL_1
0x400022b	    0x890500000000	            mov dword [0x04000231], eax 	        68	push.c	FUNCTION_3	CALL_1
0x4000231	    0x8b0500000000	            mov eax, dword [0x04000237] 	        68	push.c	FUNCTION_3	CALL_1
0x4000237	            0x4898	                                    cdqe	        68	push.c	FUNCTION_3	CALL_1
0x4000239	          0x4889c6	                            mov rsi, rax	        68	push.c	FUNCTION_3	CALL_1
0x400023c	      0xbf08000000	                              mov edi, 8	        68	push.c	FUNCTION_3	CALL_1
0x4000241	      0xe85bfeffff	                        call sym.st_mult	        68	push.c	FUNCTION_3	CALL_1
0x4000246	          0x4889c2	                            mov rdx, rax	        68	push.c	FUNCTION_3	CALL_1
0x4000249	    0x488b05000000	            mov rax, qword [0x04000250] 	        68	push.c	FUNCTION_3	CALL_1
0x4000250	          0x4889d6	                            mov rsi, rdx	        68	push.c	FUNCTION_3	CALL_1
0x4000253	          0x4889c7	                            mov rdi, rax	        68	push.c	FUNCTION_3	CALL_1
0x4000256	      0xe800000000	                          call 0x400025b	        68	push.c	FUNCTION_3	CALL_1
0x400025b	    0x488905000000	            mov qword [0x04000262], rax 	        68	push.c	FUNCTION_3	CALL_1
0x4000262	    0x488b05000000	            mov rax, qword [0x04000269] 	        69	push.c	FUNCTION_3
0x4000269	    0x8b1500000000	            mov edx, dword [0x0400026f] 	        69	push.c	FUNCTION_3
0x400026f	          0x4863d2	                         movsxd rdx, edx	        69	push.c	FUNCTION_3
0x4000272	        0x48c1e203	                              shl rdx, 3	        69	push.c	FUNCTION_3
0x4000276	        0x4883ea08	                              sub rdx, 8	        69	push.c	FUNCTION_3
0x400027a	          0x4801c2	                            add rdx, rax	        69	push.c	FUNCTION_3
0x400027d	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	push.c	FUNCTION_3
0x4000281	          0x488902	                    mov qword [rdx], rax	        69	push.c	FUNCTION_3
0x4000284	              0x90	                                     nop	        70	push.c	FUNCTION_3
0x4000285	              0xc9	                                   leave	        70	push.c	FUNCTION_3
0x4000286	              0xc3	                                     ret	        70	push.c	FUNCTION_3
st_mult	functions,0:CALL,1:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	22
0x40000a1	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_37
0x40000a2	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_37
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_37
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_37
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_37
0x40000b1	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000b6	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000b8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000bf	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000c4	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000c8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000cc	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_37	IF_1
0x40000ce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000d6	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000d9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000de	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000e3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_37
0x40000ec	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_37
0x40000f1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_37
0x40000f2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_37
is_workflow_triangular	functions,0:CALL,1:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,0:WHILE,0	17
0x40009ff	              0x55	                                push rbp	       243	push.c	FUNCTION_10
0x4000a00	          0x4889e5	                            mov rbp, rsp	       243	push.c	FUNCTION_10
0x4000a03	        0x4883ec20	                           sub rsp, 0x20	       243	push.c	FUNCTION_10
0x4000a07	        0x48897de8	             mov qword [rbp - 0x18], rdi	       243	push.c	FUNCTION_10
0x4000a0b	      0xbf00000000	                              mov edi, 0	       244	push.c	FUNCTION_10	CALL_1
0x4000a10	      0xe800000000	                          call 0x4000a15	       244	push.c	FUNCTION_10	CALL_1
0x4000a15	        0x488945f8	                mov qword [rbp - 8], rax	       244	push.c	FUNCTION_10	CALL_1
0x4000a19	      0x48837df800	                  cmp qword [rbp - 8], 0	       245	push.c	FUNCTION_10
0x4000a1e	            0x7411	                            je 0x4000a31	       245	push.c	FUNCTION_10
0x4000a20	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	push.c	FUNCTION_10
0x4000a24	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       245	push.c	FUNCTION_10
0x4000a28	            0x7407	                            je 0x4000a31	       245	push.c	FUNCTION_10
0x4000a2a	      0xb801000000	                              mov eax, 1	       245	push.c	FUNCTION_10
0x4000a2f	            0xeb05	                           jmp 0x4000a36	       245	push.c	FUNCTION_10
0x4000a31	      0xb800000000	                              mov eax, 0	       245	push.c	FUNCTION_10
0x4000a36	              0xc9	                                   leave	       246	push.c	FUNCTION_10
0x4000a37	              0xc3	                                     ret	       246	push.c	FUNCTION_10
advise_ref_fetch_first	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	17
0x4000b9e	              0x55	                                push rbp	       331	push.c	FUNCTION_15
0x4000b9f	          0x4889e5	                            mov rbp, rsp	       331	push.c	FUNCTION_15
0x4000ba2	    0x8b0500000000	            mov eax, dword [0x04000ba8] 	       332	push.c	FUNCTION_15	IF_1
0x4000ba8	            0x85c0	                           test eax, eax	       332	push.c	FUNCTION_15	IF_1
0x4000baa	            0x7423	                            je 0x4000bcf	       332	push.c	FUNCTION_15	IF_1
0x4000bac	    0x8b0500000000	            mov eax, dword [0x04000bb2] 	       332	push.c	FUNCTION_15	IF_1
0x4000bb2	            0x85c0	                           test eax, eax	       332	push.c	FUNCTION_15	IF_1
0x4000bb4	            0x7419	                            je 0x4000bcf	       332	push.c	FUNCTION_15	IF_1
0x4000bb6	      0xbf00000000	                              mov edi, 0	       334	push.c	FUNCTION_15	CALL_2
0x4000bbb	      0xe833f5ffff	                               call sym.	       334	push.c	FUNCTION_15	CALL_2
0x4000bc0	          0x4889c7	                            mov rdi, rax	       334	push.c	FUNCTION_15	CALL_2
0x4000bc3	      0xb800000000	                              mov eax, 0	       334	push.c	FUNCTION_15	CALL_2
0x4000bc8	      0xe800000000	                          call 0x4000bcd	       334	push.c	FUNCTION_15	CALL_2
0x4000bcd	            0xeb01	                           jmp 0x4000bd0	       334	push.c	FUNCTION_15	CALL_2
0x4000bcf	              0x90	                                     nop	       333	push.c	FUNCTION_15	IF_1
0x4000bd0	              0x5d	                                 pop rbp	       335	push.c	FUNCTION_15
0x4000bd1	              0xc3	                                     ret	       335	push.c	FUNCTION_15
cmd_push	functions,0:CALL,40:ELSE,3:DO,0:SWITCH,0:FOR,0:IF,9:WHILE,0	343
0x400157b	              0x55	                                push rbp	       565	push.c	FUNCTION_22
0x400157c	          0x4889e5	                            mov rbp, rsp	       565	push.c	FUNCTION_22
0x400157f	    0x4881ec000700	                          sub rsp, 0x700	       565	push.c	FUNCTION_22
0x4001586	    0x89bd1cf9ffff	            mov dword [rbp - 0x6e4], edi	       565	push.c	FUNCTION_22
0x400158c	    0x4889b510f9ff	            mov qword [rbp - 0x6f0], rsi	       565	push.c	FUNCTION_22
0x4001593	    0x48899508f9ff	            mov qword [rbp - 0x6f8], rdx	       565	push.c	FUNCTION_22
0x400159a	    0x64488b042528	                mov rax, qword fs:[0x28]	       565	push.c	FUNCTION_22
0x40015a3	        0x488945f8	                mov qword [rbp - 8], rax	       565	push.c	FUNCTION_22
0x40015a7	            0x31c0	                            xor eax, eax	       565	push.c	FUNCTION_22
0x40015a9	    0xc78528f9ffff	              mov dword [rbp - 0x6d8], 0	       566	push.c	FUNCTION_22
0x40015b3	    0xc7852cf9ffff	              mov dword [rbp - 0x6d4], 0	       567	push.c	FUNCTION_22
0x40015bd	    0xc78530f9ffff	    mov dword [rbp - 0x6d0], 0xffffffff 	       568	push.c	FUNCTION_22
0x40015c7	    0x48c78538f9ff	              mov qword [rbp - 0x6c8], 0	       570	push.c	FUNCTION_22
0x40015d2	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       571	push.c	FUNCTION_22
0x40015dd	    0xc78558f9ffff	              mov dword [rbp - 0x6a8], 0	       571	push.c	FUNCTION_22
0x40015e7	    0xc7855cf9ffff	              mov dword [rbp - 0x6a4], 0	       571	push.c	FUNCTION_22
0x40015f1	     0xfb68560f9ff	           movzx eax, byte [rbp - 0x6a0]	       571	push.c	FUNCTION_22
0x40015f8	          0x83c801	                               or eax, 1	       571	push.c	FUNCTION_22
0x40015fb	    0x888560f9ffff	              mov byte [rbp - 0x6a0], al	       571	push.c	FUNCTION_22
0x4001601	    0x48c78568f9ff	              mov qword [rbp - 0x698], 0	       571	push.c	FUNCTION_22
0x400160c	    0x488d9570f9ff	                  lea rdx, [rbp - 0x690]	       575	push.c	FUNCTION_22
0x4001613	      0xb800000000	                              mov eax, 0	       575	push.c	FUNCTION_22
0x4001618	      0xb9d0000000	                           mov ecx, 0xd0	       575	push.c	FUNCTION_22
0x400161d	          0x4889d7	                            mov rdi, rdx	       575	push.c	FUNCTION_22
0x4001620	          0xf348ab	              rep stosq qword [rdi], rax	       575	push.c	FUNCTION_22
0x4001623	    0xc78570f9ffff	           mov dword [rbp - 0x690], 0xc 	       575	push.c	FUNCTION_22
0x400162d	    0xc78574f9ffff	          mov dword [rbp - 0x68c], 0x76 	       575	push.c	FUNCTION_22
0x4001637	    0x48c78578f9ff	              mov qword [rbp - 0x688], 0	       575	push.c	FUNCTION_22
0x4001642	    0x48c78580f9ff	              mov qword [rbp - 0x680], 0	       575	push.c	FUNCTION_22
0x400164d	    0x48c78590f9ff	              mov qword [rbp - 0x670], 0	       575	push.c	FUNCTION_22
0x4001658	    0xc78598f9ffff	              mov dword [rbp - 0x668], 2	       575	push.c	FUNCTION_22
0x4001662	    0x48c785a0f9ff	              mov qword [rbp - 0x660], 0	       575	push.c	FUNCTION_22
0x400166d	    0xc785b0f9ffff	           mov dword [rbp - 0x650], 0xc 	       575	push.c	FUNCTION_22
0x4001677	    0xc785b4f9ffff	          mov dword [rbp - 0x64c], 0x71 	       575	push.c	FUNCTION_22
0x4001681	    0x48c785b8f9ff	              mov qword [rbp - 0x648], 0	       575	push.c	FUNCTION_22
0x400168c	    0x48c785c0f9ff	              mov qword [rbp - 0x640], 0	       575	push.c	FUNCTION_22
0x4001697	    0x48c785d0f9ff	              mov qword [rbp - 0x630], 0	       575	push.c	FUNCTION_22
0x40016a2	    0xc785d8f9ffff	              mov dword [rbp - 0x628], 2	       575	push.c	FUNCTION_22
0x40016ac	    0x48c785e0f9ff	              mov qword [rbp - 0x620], 0	       575	push.c	FUNCTION_22
0x40016b7	    0xc785f0f9ffff	              mov dword [rbp - 0x610], 9	       575	push.c	FUNCTION_22
0x40016c1	    0x48c785f8f9ff	              mov qword [rbp - 0x608], 0	       575	push.c	FUNCTION_22
0x40016cc	    0x488d8538f9ff	                  lea rax, [rbp - 0x6c8]	       575	push.c	FUNCTION_22
0x40016d3	    0x48898500faff	            mov qword [rbp - 0x600], rax	       575	push.c	FUNCTION_22
0x40016da	    0x48c78508faff	              mov qword [rbp - 0x5f8], 0	       575	push.c	FUNCTION_22
0x40016e5	    0x48c78510faff	              mov qword [rbp - 0x5f0], 0	       575	push.c	FUNCTION_22
0x40016f0	    0xc78530faffff	              mov dword [rbp - 0x5d0], 4	       575	push.c	FUNCTION_22
0x40016fa	    0x48c78538faff	              mov qword [rbp - 0x5c8], 0	       575	push.c	FUNCTION_22
0x4001705	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x400170c	    0x48898540faff	            mov qword [rbp - 0x5c0], rax	       575	push.c	FUNCTION_22
0x4001713	    0x48c78550faff	              mov qword [rbp - 0x5b0], 0	       575	push.c	FUNCTION_22
0x400171e	    0xc78558faffff	              mov dword [rbp - 0x5a8], 2	       575	push.c	FUNCTION_22
0x4001728	    0x48c78568faff	              mov qword [rbp - 0x598], 1	       575	push.c	FUNCTION_22
0x4001733	    0xc78570faffff	              mov dword [rbp - 0x590], 4	       575	push.c	FUNCTION_22
0x400173d	    0x48c78578faff	              mov qword [rbp - 0x588], 0	       575	push.c	FUNCTION_22
0x4001748	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x400174f	    0x48898580faff	            mov qword [rbp - 0x580], rax	       575	push.c	FUNCTION_22
0x4001756	    0x48c78590faff	              mov qword [rbp - 0x570], 0	       575	push.c	FUNCTION_22
0x4001761	    0xc78598faffff	              mov dword [rbp - 0x568], 2	       575	push.c	FUNCTION_22
0x400176b	    0x48c785a8faff	            mov qword [rbp - 0x558], 0xa	       575	push.c	FUNCTION_22
0x4001776	    0xc785b0faffff	              mov dword [rbp - 0x550], 7	       575	push.c	FUNCTION_22
0x4001780	    0xc785b4faffff	          mov dword [rbp - 0x54c], 0x64 	       575	push.c	FUNCTION_22
0x400178a	    0x48c785b8faff	              mov qword [rbp - 0x548], 0	       575	push.c	FUNCTION_22
0x4001795	    0x48c785c0faff	              mov qword [rbp - 0x540], 0	       575	push.c	FUNCTION_22
0x40017a0	    0x48c785d0faff	              mov qword [rbp - 0x530], 0	       575	push.c	FUNCTION_22
0x40017ab	    0xc785d8faffff	              mov dword [rbp - 0x528], 2	       575	push.c	FUNCTION_22
0x40017b5	    0x48c785e8faff	              mov qword [rbp - 0x518], 1	       575	push.c	FUNCTION_22
0x40017c0	    0xc785f0faffff	              mov dword [rbp - 0x510], 7	       575	push.c	FUNCTION_22
0x40017ca	    0x48c785f8faff	              mov qword [rbp - 0x508], 0	       575	push.c	FUNCTION_22
0x40017d5	    0x488d852cf9ff	                  lea rax, [rbp - 0x6d4]	       575	push.c	FUNCTION_22
0x40017dc	    0x48898500fbff	            mov qword [rbp - 0x500], rax	       575	push.c	FUNCTION_22
0x40017e3	    0x48c78510fbff	              mov qword [rbp - 0x4f0], 0	       575	push.c	FUNCTION_22
0x40017ee	    0xc78518fbffff	              mov dword [rbp - 0x4e8], 2	       575	push.c	FUNCTION_22
0x40017f8	    0x48c78528fbff	              mov qword [rbp - 0x4d8], 1	       575	push.c	FUNCTION_22
0x4001803	    0xc78530fbffff	              mov dword [rbp - 0x4d0], 4	       575	push.c	FUNCTION_22
0x400180d	    0xc78534fbffff	          mov dword [rbp - 0x4cc], 0x6e 	       575	push.c	FUNCTION_22
0x4001817	    0x48c78538fbff	              mov qword [rbp - 0x4c8], 0	       575	push.c	FUNCTION_22
0x4001822	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001829	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	       575	push.c	FUNCTION_22
0x4001830	    0x48c78550fbff	              mov qword [rbp - 0x4b0], 0	       575	push.c	FUNCTION_22
0x400183b	    0xc78558fbffff	              mov dword [rbp - 0x4a8], 2	       575	push.c	FUNCTION_22
0x4001845	    0x48c78568fbff	              mov qword [rbp - 0x498], 4	       575	push.c	FUNCTION_22
0x4001850	    0xc78570fbffff	              mov dword [rbp - 0x490], 4	       575	push.c	FUNCTION_22
0x400185a	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	       575	push.c	FUNCTION_22
0x4001865	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x400186c	    0x48898580fbff	            mov qword [rbp - 0x480], rax	       575	push.c	FUNCTION_22
0x4001873	    0x48c78590fbff	              mov qword [rbp - 0x470], 0	       575	push.c	FUNCTION_22
0x400187e	    0xc78598fbffff	              mov dword [rbp - 0x468], 2	       575	push.c	FUNCTION_22
0x4001888	    0x48c785a8fbff	          mov qword [rbp - 0x458], 0x10 	       575	push.c	FUNCTION_22
0x4001893	    0xc785b0fbffff	              mov dword [rbp - 0x450], 4	       575	push.c	FUNCTION_22
0x400189d	    0xc785b4fbffff	          mov dword [rbp - 0x44c], 0x66 	       575	push.c	FUNCTION_22
0x40018a7	    0x48c785b8fbff	              mov qword [rbp - 0x448], 0	       575	push.c	FUNCTION_22
0x40018b2	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x40018b9	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	       575	push.c	FUNCTION_22
0x40018c0	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	       575	push.c	FUNCTION_22
0x40018cb	    0xc785d8fbffff	              mov dword [rbp - 0x428], 2	       575	push.c	FUNCTION_22
0x40018d5	    0x48c785e8fbff	              mov qword [rbp - 0x418], 2	       575	push.c	FUNCTION_22
0x40018e0	    0xc785f0fbffff	           mov dword [rbp - 0x410], 0xc 	       575	push.c	FUNCTION_22
0x40018ea	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	       575	push.c	FUNCTION_22
0x40018f5	    0x48c78500fcff	              mov qword [rbp - 0x400], 0	       575	push.c	FUNCTION_22
0x4001900	    0x48c78508fcff	              mov qword [rbp - 0x3f8], 0	       575	push.c	FUNCTION_22
0x400190b	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	       575	push.c	FUNCTION_22
0x4001916	    0xc78518fcffff	              mov dword [rbp - 0x3e8], 1	       575	push.c	FUNCTION_22
0x4001920	    0x48c78520fcff	              mov qword [rbp - 0x3e0], 0	       575	push.c	FUNCTION_22
0x400192b	    0xc78530fcffff	           mov dword [rbp - 0x3d0], 0xc 	       575	push.c	FUNCTION_22
0x4001935	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	       575	push.c	FUNCTION_22
0x4001940	    0x48c78540fcff	              mov qword [rbp - 0x3c0], 0	       575	push.c	FUNCTION_22
0x400194b	    0x48c78548fcff	              mov qword [rbp - 0x3b8], 0	       575	push.c	FUNCTION_22
0x4001956	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	       575	push.c	FUNCTION_22
0x4001961	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 1	       575	push.c	FUNCTION_22
0x400196b	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       575	push.c	FUNCTION_22
0x4001976	    0xc78570fcffff	              mov dword [rbp - 0x390], 7	       575	push.c	FUNCTION_22
0x4001980	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	       575	push.c	FUNCTION_22
0x400198b	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       575	push.c	FUNCTION_22
0x4001996	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	       575	push.c	FUNCTION_22
0x40019a1	    0xc78598fcffff	         mov dword [rbp - 0x368], 0x202 	       575	push.c	FUNCTION_22
0x40019ab	    0x48c785a8fcff	              mov qword [rbp - 0x358], 1	       575	push.c	FUNCTION_22
0x40019b6	    0xc785b0fcffff	              mov dword [rbp - 0x350], 9	       575	push.c	FUNCTION_22
0x40019c0	    0x48c785b8fcff	              mov qword [rbp - 0x348], 0	       575	push.c	FUNCTION_22
0x40019cb	    0x48c785c0fcff	              mov qword [rbp - 0x340], 0	       575	push.c	FUNCTION_22
0x40019d6	    0x48c785c8fcff	              mov qword [rbp - 0x338], 0	       575	push.c	FUNCTION_22
0x40019e1	    0x48c785d0fcff	              mov qword [rbp - 0x330], 0	       575	push.c	FUNCTION_22
0x40019ec	    0xc785f0fcffff	              mov dword [rbp - 0x310], 9	       575	push.c	FUNCTION_22
0x40019f6	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       575	push.c	FUNCTION_22
0x4001a01	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       575	push.c	FUNCTION_22
0x4001a0c	    0x48c78508fdff	              mov qword [rbp - 0x2f8], 0	       575	push.c	FUNCTION_22
0x4001a17	    0x48c78510fdff	              mov qword [rbp - 0x2f0], 0	       575	push.c	FUNCTION_22
0x4001a22	    0xc78530fdffff	              mov dword [rbp - 0x2d0], 4	       575	push.c	FUNCTION_22
0x4001a2c	    0xc78534fdffff	          mov dword [rbp - 0x2cc], 0x75 	       575	push.c	FUNCTION_22
0x4001a36	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       575	push.c	FUNCTION_22
0x4001a41	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001a48	    0x48898540fdff	            mov qword [rbp - 0x2c0], rax	       575	push.c	FUNCTION_22
0x4001a4f	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	       575	push.c	FUNCTION_22
0x4001a5a	    0xc78558fdffff	              mov dword [rbp - 0x2a8], 2	       575	push.c	FUNCTION_22
0x4001a64	    0x48c78568fdff	          mov qword [rbp - 0x298], 0x20 	       575	push.c	FUNCTION_22
0x4001a6f	    0xc78570fdffff	              mov dword [rbp - 0x290], 7	       575	push.c	FUNCTION_22
0x4001a79	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	       575	push.c	FUNCTION_22
0x4001a84	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       575	push.c	FUNCTION_22
0x4001a8f	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	       575	push.c	FUNCTION_22
0x4001a9a	    0xc78598fdffff	              mov dword [rbp - 0x268], 2	       575	push.c	FUNCTION_22
0x4001aa4	    0x48c785a8fdff	              mov qword [rbp - 0x258], 1	       575	push.c	FUNCTION_22
0x4001aaf	    0xc785b0fdffff	              mov dword [rbp - 0x250], 4	       575	push.c	FUNCTION_22
0x4001ab9	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       575	push.c	FUNCTION_22
0x4001ac4	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001acb	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       575	push.c	FUNCTION_22
0x4001ad2	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       575	push.c	FUNCTION_22
0x4001add	    0xc785d8fdffff	              mov dword [rbp - 0x228], 2	       575	push.c	FUNCTION_22
0x4001ae7	    0x48c785e8fdff	          mov qword [rbp - 0x218], 0x80 	       575	push.c	FUNCTION_22
0x4001af2	    0xc785f0fdffff	              mov dword [rbp - 0x210], 4	       575	push.c	FUNCTION_22
0x4001afc	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	       575	push.c	FUNCTION_22
0x4001b07	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001b0e	    0x48898500feff	            mov qword [rbp - 0x200], rax	       575	push.c	FUNCTION_22
0x4001b15	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       575	push.c	FUNCTION_22
0x4001b20	    0xc78518feffff	              mov dword [rbp - 0x1e8], 2	       575	push.c	FUNCTION_22
0x4001b2a	    0x48c78528feff	         mov qword [rbp - 0x1d8], 0x200 	       575	push.c	FUNCTION_22
0x4001b35	    0xc78530feffff	              mov dword [rbp - 0x1d0], 4	       575	push.c	FUNCTION_22
0x4001b3f	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	       575	push.c	FUNCTION_22
0x4001b4a	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001b51	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       575	push.c	FUNCTION_22
0x4001b58	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       575	push.c	FUNCTION_22
0x4001b63	    0xc78558feffff	              mov dword [rbp - 0x1a8], 2	       575	push.c	FUNCTION_22
0x4001b6d	    0x48c78568feff	         mov qword [rbp - 0x198], 0x400 	       575	push.c	FUNCTION_22
0x4001b78	    0xc78570feffff	           mov dword [rbp - 0x190], 0xc 	       575	push.c	FUNCTION_22
0x4001b82	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       575	push.c	FUNCTION_22
0x4001b8d	    0x488d8530f9ff	                  lea rax, [rbp - 0x6d0]	       575	push.c	FUNCTION_22
0x4001b94	    0x48898580feff	            mov qword [rbp - 0x180], rax	       575	push.c	FUNCTION_22
0x4001b9b	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       575	push.c	FUNCTION_22
0x4001ba6	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       575	push.c	FUNCTION_22
0x4001bb1	    0xc78598feffff	              mov dword [rbp - 0x168], 1	       575	push.c	FUNCTION_22
0x4001bbb	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       575	push.c	FUNCTION_22
0x4001bc6	    0xc785b0feffff	              mov dword [rbp - 0x150], 4	       575	push.c	FUNCTION_22
0x4001bd0	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       575	push.c	FUNCTION_22
0x4001bdb	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       575	push.c	FUNCTION_22
0x4001be2	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       575	push.c	FUNCTION_22
0x4001be9	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       575	push.c	FUNCTION_22
0x4001bf4	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       575	push.c	FUNCTION_22
0x4001bfe	    0x48c785e8feff	         mov qword [rbp - 0x118], 0x2000	       575	push.c	FUNCTION_22
0x4001c09	    0xc785f0feffff	           mov dword [rbp - 0x110], 0xc 	       575	push.c	FUNCTION_22
0x4001c13	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x6f 	       575	push.c	FUNCTION_22
0x4001c1d	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       575	push.c	FUNCTION_22
0x4001c28	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       575	push.c	FUNCTION_22
0x4001c2f	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       575	push.c	FUNCTION_22
0x4001c36	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       575	push.c	FUNCTION_22
0x4001c41	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       575	push.c	FUNCTION_22
0x4001c4c	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       575	push.c	FUNCTION_22
0x4001c57	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       575	push.c	FUNCTION_22
0x4001c61	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x34 	       575	push.c	FUNCTION_22
0x4001c6b	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       575	push.c	FUNCTION_22
0x4001c76	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       575	push.c	FUNCTION_22
0x4001c81	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       575	push.c	FUNCTION_22
0x4001c8c	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       575	push.c	FUNCTION_22
0x4001c96	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       575	push.c	FUNCTION_22
0x4001ca1	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       575	push.c	FUNCTION_22
0x4001cab	    0xc78574ffffff	           mov dword [rbp - 0x8c], 0x36 	       575	push.c	FUNCTION_22
0x4001cb5	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       575	push.c	FUNCTION_22
0x4001cc0	    0x48c745800000	               mov qword [rbp - 0x80], 0	       575	push.c	FUNCTION_22
0x4001cc8	    0x48c745900000	               mov qword [rbp - 0x70], 0	       575	push.c	FUNCTION_22
0x4001cd0	    0xc74598020000	               mov dword [rbp - 0x68], 2	       575	push.c	FUNCTION_22
0x4001cd7	    0x48c745a80200	               mov qword [rbp - 0x58], 2	       575	push.c	FUNCTION_22
0x4001cdf	      0xbf00000000	                              mov edi, 0	       616	push.c	FUNCTION_22	CALL_23
0x4001ce4	      0xe800000000	                          call 0x4001ce9	       616	push.c	FUNCTION_22	CALL_23
0x4001ce9	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       617	push.c	FUNCTION_22	CALL_24
0x4001cf0	          0x4889c6	                            mov rsi, rax	       617	push.c	FUNCTION_22	CALL_24
0x4001cf3	      0xbf00000000	                              mov edi, 0	       617	push.c	FUNCTION_22	CALL_24
0x4001cf8	      0xe800000000	                          call 0x4001cfd	       617	push.c	FUNCTION_22	CALL_24
0x4001cfd	    0x488d8d70f9ff	                  lea rcx, [rbp - 0x690]	       618	push.c	FUNCTION_22	CALL_25
0x4001d04	    0x488b9508f9ff	            mov rdx, qword [rbp - 0x6f8]	       618	push.c	FUNCTION_22	CALL_25
0x4001d0b	    0x488bb510f9ff	            mov rsi, qword [rbp - 0x6f0]	       618	push.c	FUNCTION_22	CALL_25
0x4001d12	    0x8b851cf9ffff	            mov eax, dword [rbp - 0x6e4]	       618	push.c	FUNCTION_22	CALL_25
0x4001d18	    0x41b900000000	                              mov r9d, 0	       618	push.c	FUNCTION_22	CALL_25
0x4001d1e	    0x41b800000000	                              mov r8d, 0	       618	push.c	FUNCTION_22	CALL_25
0x4001d24	            0x89c7	                            mov edi, eax	       618	push.c	FUNCTION_22	CALL_25
0x4001d26	      0xe800000000	                          call 0x4001d2b	       618	push.c	FUNCTION_22	CALL_25
0x4001d2b	    0x89851cf9ffff	            mov dword [rbp - 0x6e4], eax	       618	push.c	FUNCTION_22	CALL_25
0x4001d31	    0x8b8558f9ffff	            mov eax, dword [rbp - 0x6a8]	       619	push.c	FUNCTION_22
0x4001d37	            0x85c0	                           test eax, eax	       621	push.c	FUNCTION_22
0x4001d39	            0x7409	                            je 0x4001d44	       621	push.c	FUNCTION_22
0x4001d3b	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       621	push.c	FUNCTION_22
0x4001d42	            0xeb05	                           jmp 0x4001d49	       621	push.c	FUNCTION_22
0x4001d44	      0xb800000000	                              mov eax, 0	       621	push.c	FUNCTION_22
0x4001d49	    0x48898548f9ff	            mov qword [rbp - 0x6b8], rax	       619	push.c	FUNCTION_22
0x4001d50	    0x8b9530f9ffff	            mov edx, dword [rbp - 0x6d0]	       622	push.c	FUNCTION_22	CALL_26
0x4001d56	    0x488d8528f9ff	                  lea rax, [rbp - 0x6d8]	       622	push.c	FUNCTION_22	CALL_26
0x4001d5d	            0x89d6	                            mov esi, edx	       622	push.c	FUNCTION_22	CALL_26
0x4001d5f	          0x4889c7	                            mov rdi, rax	       622	push.c	FUNCTION_22	CALL_26
0x4001d62	      0xe83df4ffff	            call sym.set_push_cert_flags	       622	push.c	FUNCTION_22	CALL_26
0x4001d67	    0x8b0500000000	            mov eax, dword [0x04001d6d] 	       624	push.c	FUNCTION_22	IF_1
0x4001d6d	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x4001d6f	            0x742e	                            je 0x4001d9f	       624	push.c	FUNCTION_22	IF_1
0x4001d71	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       624	push.c	FUNCTION_22	IF_1
0x4001d77	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x4001d79	            0x750d	                           jne 0x4001d88	       624	push.c	FUNCTION_22	IF_1
0x4001d7b	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       624	push.c	FUNCTION_22	IF_1
0x4001d81	          0x83e009	                              and eax, 9	       624	push.c	FUNCTION_22	IF_1
0x4001d84	            0x85c0	                           test eax, eax	       624	push.c	FUNCTION_22	IF_1
0x4001d86	            0x7417	                            je 0x4001d9f	       624	push.c	FUNCTION_22	IF_1
0x4001d88	      0xbf00000000	                              mov edi, 0	       625	push.c	FUNCTION_22	CALL_28
0x4001d8d	      0xe861e3ffff	                               call sym.	       625	push.c	FUNCTION_22	CALL_28
0x4001d92	          0x4889c7	                            mov rdi, rax	       625	push.c	FUNCTION_22	CALL_28
0x4001d95	      0xb800000000	                              mov eax, 0	       625	push.c	FUNCTION_22	CALL_28
0x4001d9a	      0xe800000000	                          call 0x4001d9f	       625	push.c	FUNCTION_22	CALL_28
0x4001d9f	    0x8b0500000000	            mov eax, dword [0x04001da5] 	       626	push.c	FUNCTION_22	IF_2
0x4001da5	            0x85c0	                           test eax, eax	       626	push.c	FUNCTION_22	IF_2
0x4001da7	            0x7420	                            je 0x4001dc9	       626	push.c	FUNCTION_22	IF_2
0x4001da9	    0x83bd1cf9ffff	              cmp dword [rbp - 0x6e4], 1	       626	push.c	FUNCTION_22	IF_2
0x4001db0	            0x7f17	                            jg 0x4001dc9	       626	push.c	FUNCTION_22	IF_2
0x4001db2	      0xbf00000000	                              mov edi, 0	       627	push.c	FUNCTION_22	CALL_30
0x4001db7	      0xe837e3ffff	                               call sym.	       627	push.c	FUNCTION_22	CALL_30
0x4001dbc	          0x4889c7	                            mov rdi, rax	       627	push.c	FUNCTION_22	CALL_30
0x4001dbf	      0xb800000000	                              mov eax, 0	       627	push.c	FUNCTION_22	CALL_30
0x4001dc4	      0xe800000000	                          call 0x4001dc9	       627	push.c	FUNCTION_22	CALL_30
0x4001dc9	    0x8b0500000000	            mov eax, dword [0x04001dcf] 	       629	push.c	FUNCTION_22	IF_3
0x4001dcf	          0x83f8fc	             cmp eax, 0xfffffffffffffffc	       629	push.c	FUNCTION_22	IF_3
0x4001dd2	            0x7511	                           jne 0x4001de5	       629	push.c	FUNCTION_22	IF_3
0x4001dd4	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       630	push.c	FUNCTION_22	IF_3
0x4001dda	          0x83c840	                            or eax, 0x40	       630	push.c	FUNCTION_22	IF_3
0x4001ddd	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       630	push.c	FUNCTION_22	IF_3
0x4001de3	            0xeb36	                           jmp 0x4001e1b	       630	push.c	FUNCTION_22	IF_3
0x4001de5	    0x8b0500000000	            mov eax, dword [0x04001deb] 	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001deb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001dee	            0x7511	                           jne 0x4001e01	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001df0	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001df6	          0x80cc01	                                or ah, 1	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001df9	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001dff	            0xeb1a	                           jmp 0x4001e1b	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001e01	    0x8b0500000000	            mov eax, dword [0x04001e07] 	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e07	          0x83f8fb	             cmp eax, 0xfffffffffffffffb	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e0a	            0x750f	                           jne 0x4001e1b	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e0c	    0x8b8528f9ffff	            mov eax, dword [rbp - 0x6d8]	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e12	          0x80cc80	                             or ah, 0x80	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e15	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001e1b	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       636	push.c	FUNCTION_22	IF_6
0x4001e21	            0x85c0	                           test eax, eax	       636	push.c	FUNCTION_22	IF_6
0x4001e23	            0x740a	                            je 0x4001e2f	       636	push.c	FUNCTION_22	IF_6
0x4001e25	      0xbf00000000	                              mov edi, 0	       637	push.c	FUNCTION_22	CALL_31
0x4001e2a	      0xe883e3ffff	                    call sym.add_refspec	       637	push.c	FUNCTION_22	CALL_31
0x4001e2f	    0x83bd1cf9ffff	              cmp dword [rbp - 0x6e4], 0	       639	push.c	FUNCTION_22	IF_7
0x4001e36	            0x7e37	                           jle 0x4001e6f	       639	push.c	FUNCTION_22	IF_7
0x4001e38	    0x488b8510f9ff	            mov rax, qword [rbp - 0x6f0]	       640	push.c	FUNCTION_22	IF_7
0x4001e3f	          0x488b00	                    mov rax, qword [rax]	       640	push.c	FUNCTION_22	IF_7
0x4001e42	    0x48898538f9ff	            mov qword [rbp - 0x6c8], rax	       640	push.c	FUNCTION_22	IF_7
0x4001e49	    0x488b8538f9ff	            mov rax, qword [rbp - 0x6c8]	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e50	    0x8b951cf9ffff	            mov edx, dword [rbp - 0x6e4]	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e56	          0x8d72ff	                      lea esi, [rdx - 1]	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e59	    0x488b9510f9ff	            mov rdx, qword [rbp - 0x6f0]	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e60	        0x488d4a08	                      lea rcx, [rdx + 8]	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e64	          0x4889c2	                            mov rdx, rax	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e67	          0x4889cf	                            mov rdi, rcx	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e6a	      0xe803e6ffff	                   call sym.set_refspecs	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001e6f	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_33
0x4001e76	          0x488b00	                    mov rax, qword [rax]	       644	push.c	FUNCTION_22	CALL_33
0x4001e79	    0x48898540f9ff	            mov qword [rbp - 0x6c0], rax	       644	push.c	FUNCTION_22	CALL_33
0x4001e80	            0xeb3b	                           jmp 0x4001ebd	       644	push.c	FUNCTION_22	CALL_33
0x4001e82	    0x488b8540f9ff	            mov rax, qword [rbp - 0x6c0]	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e89	          0x488b00	                    mov rax, qword [rax]	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e8c	      0xbe0a000000	                            mov esi, 0xa	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e91	          0x4889c7	                            mov rdi, rax	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e94	      0xe800000000	                          call 0x4001e99	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e99	          0x4885c0	                           test rax, rax	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e9c	            0x7417	                            je 0x4001eb5	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001e9e	      0xbf00000000	                              mov edi, 0	       646	push.c	FUNCTION_22	CALL_36
0x4001ea3	      0xe84be2ffff	                               call sym.	       646	push.c	FUNCTION_22	CALL_36
0x4001ea8	          0x4889c7	                            mov rdi, rax	       646	push.c	FUNCTION_22	CALL_36
0x4001eab	      0xb800000000	                              mov eax, 0	       646	push.c	FUNCTION_22	CALL_36
0x4001eb0	      0xe800000000	                          call 0x4001eb5	       646	push.c	FUNCTION_22	CALL_36
0x4001eb5	    0x48838540f9ff	           add qword [rbp - 0x6c0], 0x10	       644	push.c	FUNCTION_22	CALL_33
0x4001ebd	    0x4883bd40f9ff	              cmp qword [rbp - 0x6c0], 0	       644	push.c	FUNCTION_22	CALL_33
0x4001ec5	            0x7426	                            je 0x4001eed	       644	push.c	FUNCTION_22	CALL_33
0x4001ec7	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_33
0x4001ece	          0x488b10	                    mov rdx, qword [rax]	       644	push.c	FUNCTION_22	CALL_33
0x4001ed1	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       644	push.c	FUNCTION_22	CALL_33
0x4001ed8	          0x8b4008	                mov eax, dword [rax + 8]	       644	push.c	FUNCTION_22	CALL_33
0x4001edb	            0x89c0	                            mov eax, eax	       644	push.c	FUNCTION_22	CALL_33
0x4001edd	        0x48c1e004	                              shl rax, 4	       644	push.c	FUNCTION_22	CALL_33
0x4001ee1	          0x4801d0	                            add rax, rdx	       644	push.c	FUNCTION_22	CALL_33
0x4001ee4	    0x483b8540f9ff	            cmp rax, qword [rbp - 0x6c0]	       644	push.c	FUNCTION_22	CALL_33
0x4001eeb	            0x7795	                            ja 0x4001e82	       644	push.c	FUNCTION_22	CALL_33
0x4001eed	    0x8b8d28f9ffff	            mov ecx, dword [rbp - 0x6d8]	       648	push.c	FUNCTION_22	CALL_37
0x4001ef3	    0x488b8538f9ff	            mov rax, qword [rbp - 0x6c8]	       648	push.c	FUNCTION_22	CALL_37
0x4001efa	    0x488b9548f9ff	            mov rdx, qword [rbp - 0x6b8]	       648	push.c	FUNCTION_22	CALL_37
0x4001f01	            0x89ce	                            mov esi, ecx	       648	push.c	FUNCTION_22	CALL_37
0x4001f03	          0x4889c7	                            mov rdi, rax	       648	push.c	FUNCTION_22	CALL_37
0x4001f06	      0xe824efffff	                        call sym.do_push	       648	push.c	FUNCTION_22	CALL_37
0x4001f0b	    0x898534f9ffff	            mov dword [rbp - 0x6cc], eax	       648	push.c	FUNCTION_22	CALL_37
0x4001f11	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       649	push.c	FUNCTION_22	CALL_38
0x4001f18	      0xbe00000000	                              mov esi, 0	       649	push.c	FUNCTION_22	CALL_38
0x4001f1d	          0x4889c7	                            mov rdi, rax	       649	push.c	FUNCTION_22	CALL_38
0x4001f20	      0xe800000000	                          call 0x4001f25	       649	push.c	FUNCTION_22	CALL_38
0x4001f25	      0xbe00000000	                              mov esi, 0	       650	push.c	FUNCTION_22	CALL_39
0x4001f2a	      0xbf00000000	                              mov edi, 0	       650	push.c	FUNCTION_22	CALL_39
0x4001f2f	      0xe800000000	                          call 0x4001f34	       650	push.c	FUNCTION_22	CALL_39
0x4001f34	    0x83bd34f9ffff	cmp dword [rbp - 0x6cc], 0xffffffffffffffff	       651	push.c	FUNCTION_22	IF_9
0x4001f3b	            0x7514	                           jne 0x4001f51	       651	push.c	FUNCTION_22	IF_9
0x4001f3d	    0x488d8570f9ff	                  lea rax, [rbp - 0x690]	       652	push.c	FUNCTION_22	CALL_40
0x4001f44	          0x4889c6	                            mov rsi, rax	       652	push.c	FUNCTION_22	CALL_40
0x4001f47	      0xbf00000000	                              mov edi, 0	       652	push.c	FUNCTION_22	CALL_40
0x4001f4c	      0xe800000000	                          call 0x4001f51	       652	push.c	FUNCTION_22	CALL_40
0x4001f51	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       654	push.c	FUNCTION_22	ELSE_3
0x4001f57	        0x488b4df8	                mov rcx, qword [rbp - 8]	       655	push.c	FUNCTION_22
0x4001f5b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       655	push.c	FUNCTION_22
0x4001f64	            0x7405	                            je 0x4001f6b	       655	push.c	FUNCTION_22
0x4001f66	      0xe800000000	                          call 0x4001f6b	       655	push.c	FUNCTION_22
0x4001f6b	              0xc9	                                   leave	       655	push.c	FUNCTION_22
0x4001f6c	              0xc3	                                     ret	       655	push.c	FUNCTION_22
_	functions,0:CALL,0:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	15
0x40000f3	              0x55	                                push rbp	        51	gettext.h	FUNCTION_52
0x40000f4	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_52
0x40000f7	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_52
0x40000fb	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_52
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_52	IF_1
0x4000103	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_52	IF_1
0x4000106	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_52	IF_1
0x4000108	            0x7507	                           jne 0x4000111	        52	gettext.h	FUNCTION_52	IF_1
0x400010a	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_52	IF_1
0x400010f	            0xeb0c	                           jmp 0x400011d	        53	gettext.h	FUNCTION_52	IF_1
0x4000111	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_52
0x4000115	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_52
0x4000118	      0xe800000000	                          call 0x400011d	        54	gettext.h	FUNCTION_52
0x400011d	              0xc9	                                   leave	        55	gettext.h	FUNCTION_52
0x400011e	              0xc3	                                     ret	        55	gettext.h	FUNCTION_52
map_refspec	functions,0:CALL,9:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,5:WHILE,0	121
0x4000287	              0x55	                                push rbp	        74	push.c	FUNCTION_4
0x4000288	          0x4889e5	                            mov rbp, rsp	        74	push.c	FUNCTION_4
0x400028b	        0x4883ec70	                           sub rsp, 0x70	        74	push.c	FUNCTION_4
0x400028f	        0x48897da8	             mov qword [rbp - 0x58], rdi	        74	push.c	FUNCTION_4
0x4000293	        0x488975a0	             mov qword [rbp - 0x60], rsi	        74	push.c	FUNCTION_4
0x4000297	        0x48895598	             mov qword [rbp - 0x68], rdx	        74	push.c	FUNCTION_4
0x400029b	    0x64488b042528	                mov rax, qword fs:[0x28]	        74	push.c	FUNCTION_4
0x40002a4	        0x488945f8	                mov qword [rbp - 8], rax	        74	push.c	FUNCTION_4
0x40002a8	            0x31c0	                            xor eax, eax	        74	push.c	FUNCTION_4
0x40002aa	    0x48c745b00000	               mov qword [rbp - 0x50], 0	        75	push.c	FUNCTION_4
0x40002b2	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002b6	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002be	          0x4889ce	                            mov rsi, rcx	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002c1	          0x4889c7	                            mov rdi, rax	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002c4	      0xe800000000	                          call 0x40002c9	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002c9	          0x83f801	                              cmp eax, 1	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002cc	            0x7409	                            je 0x40002d7	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x40002ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        79	push.c	FUNCTION_4	IF_1
0x40002d2	      0xe985010000	                           jmp 0x400045c	        79	push.c	FUNCTION_4	IF_1
0x40002d7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        81	push.c	FUNCTION_4	IF_2
0x40002db	        0x488b4050	            mov rax, qword [rax + 0x50] 	        81	push.c	FUNCTION_4	IF_2
0x40002df	          0x4885c0	                           test rax, rax	        81	push.c	FUNCTION_4	IF_2
0x40002e2	     0xf84b8000000	                            je 0x40003a0	        81	push.c	FUNCTION_4	IF_2
0x40002e8	        0x488d45c0	                   lea rax, [rbp - 0x40]	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x40002ec	      0xba18000000	                           mov edx, 0x18	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x40002f1	      0xbe00000000	                              mov esi, 0	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x40002f6	          0x4889c7	                            mov rdi, rax	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x40002f9	      0xe800000000	                          call 0x40002fe	        83	push.c	FUNCTION_4	IF_2	CALL_2
0x40002fe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        84	push.c	FUNCTION_4	IF_2
0x4000302	        0x4883c070	                           add rax, 0x70	        84	push.c	FUNCTION_4	IF_2
0x4000306	        0x488945c8	             mov qword [rbp - 0x38], rax	        84	push.c	FUNCTION_4	IF_2
0x400030a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400030e	          0x8b4858	            mov ecx, dword [rax + 0x58] 	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000311	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000315	        0x488b4050	            mov rax, qword [rax + 0x50] 	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000319	        0x488d55c0	                   lea rdx, [rbp - 0x40]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400031d	            0x89ce	                            mov esi, ecx	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400031f	          0x4889c7	                            mov rdi, rax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000322	      0xe800000000	                          call 0x4000327	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000327	            0x85c0	                           test eax, eax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000329	            0x7575	                           jne 0x40003a0	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400032b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        86	push.c	FUNCTION_4	IF_2	IF_3
0x400032f	          0x4885c0	                           test rax, rax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000332	            0x746c	                            je 0x40003a0	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4000334	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x400033c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x4000344	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x400034c	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000350	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000354	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	        89	push.c	FUNCTION_4	IF_2	IF_3
0x4000358	          0x83e001	                              and eax, 1	        89	push.c	FUNCTION_4	IF_2	IF_3
0x400035b	            0x84c0	                             test al, al	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400035d	            0x7407	                            je 0x4000366	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400035f	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000364	            0xeb05	                           jmp 0x400036b	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000366	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400036b	        0x488d45e0	                   lea rax, [rbp - 0x20]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400036f	          0x4989c8	                             mov r8, rcx	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000372	          0x4889d1	                            mov rcx, rdx	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000375	          0x4889f2	                            mov rdx, rsi	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000378	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400037d	          0x4889c7	                            mov rdi, rax	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000380	      0xb800000000	                              mov eax, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x4000385	      0xe800000000	                          call 0x400038a	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x400038a	        0x488d45e0	                   lea rax, [rbp - 0x20]	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400038e	      0xbe00000000	                              mov esi, 0	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000393	          0x4889c7	                            mov rdi, rax	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000396	      0xe800000000	                          call 0x400039b	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400039b	      0xe9bc000000	                           jmp 0x400045c	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40003a0	    0x8b0500000000	            mov eax, dword [0x040003a6] 	        95	push.c	FUNCTION_4	IF_4
0x40003a6	          0x83f803	                              cmp eax, 3	        95	push.c	FUNCTION_4	IF_4
0x40003a9	     0xf85a9000000	                           jne 0x4000458	        95	push.c	FUNCTION_4	IF_4
0x40003af	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x40003b3	        0x4883c070	                           add rax, 0x70	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x40003b7	      0xbe00000000	                              mov esi, 0	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x40003bc	          0x4889c7	                            mov rdi, rax	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x40003bf	      0xe800000000	                          call 0x40003c4	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x40003c4	            0x85c0	                           test eax, eax	        95	push.c	FUNCTION_4	IF_4
0x40003c6	     0xf848c000000	                            je 0x4000458	        95	push.c	FUNCTION_4	IF_4
0x40003cc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003d0	        0x4883c070	                           add rax, 0x70	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003d4	        0x4883c00b	                            add rax, 0xb	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003d8	          0x4889c7	                            mov rdi, rax	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003db	      0xe800000000	                          call 0x40003e0	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003e0	        0x488945b8	             mov qword [rbp - 0x48], rax	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40003e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003e8	          0x8b4030	            mov eax, dword [rax + 0x30] 	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003eb	          0x83f801	                              cmp eax, 1	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003ee	            0x7568	                           jne 0x4000458	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003f4	        0x488b4028	            mov rax, qword [rax + 0x28] 	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003f8	          0x488b00	                    mov rax, qword [rax]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003fb	        0x488b4008	                mov rax, qword [rax + 8]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40003ff	          0x4885c0	                           test rax, rax	        98	push.c	FUNCTION_4	IF_4	IF_5
0x4000402	            0x7454	                            je 0x4000458	        98	push.c	FUNCTION_4	IF_4	IF_5
0x4000404	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x400040c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x4000414	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x400041c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       101	push.c	FUNCTION_4	IF_4	IF_5
0x4000420	        0x488b4028	            mov rax, qword [rax + 0x28] 	       101	push.c	FUNCTION_4	IF_4	IF_5
0x4000424	          0x488b00	                    mov rax, qword [rax]	       101	push.c	FUNCTION_4	IF_4	IF_5
0x4000427	        0x488b4808	                mov rcx, qword [rax + 8]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x400042b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x400042f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4000433	      0xbe00000000	                              mov esi, 0	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4000438	          0x4889c7	                            mov rdi, rax	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x400043b	      0xb800000000	                              mov eax, 0	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4000440	      0xe800000000	                          call 0x4000445	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4000445	        0x488d45e0	                   lea rax, [rbp - 0x20]	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x4000449	      0xbe00000000	                              mov esi, 0	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x400044e	          0x4889c7	                            mov rdi, rax	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x4000451	      0xe800000000	                          call 0x4000456	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x4000456	            0xeb04	                           jmp 0x400045c	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x4000458	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       106	push.c	FUNCTION_4
0x400045c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       107	push.c	FUNCTION_4
0x4000460	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       107	push.c	FUNCTION_4
0x4000469	            0x7405	                            je 0x4000470	       107	push.c	FUNCTION_4
0x400046b	      0xe800000000	                          call 0x4000470	       107	push.c	FUNCTION_4
0x4000470	              0xc9	                                   leave	       107	push.c	FUNCTION_4
0x4000471	              0xc3	                                     ret	       107	push.c	FUNCTION_4
parse_push_color_slot	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,2:WHILE,0	23
0x400011f	              0x55	                                push rbp	        34	push.c	FUNCTION_1
0x4000120	          0x4889e5	                            mov rbp, rsp	        34	push.c	FUNCTION_1
0x4000123	        0x4883ec10	                           sub rsp, 0x10	        34	push.c	FUNCTION_1
0x4000127	        0x48897df8	                mov qword [rbp - 8], rdi	        34	push.c	FUNCTION_1
0x400012b	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x400012f	      0xbe00000000	                              mov esi, 0	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000134	          0x4889c7	                            mov rdi, rax	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000137	      0xe800000000	                          call 0x400013c	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x400013c	            0x85c0	                           test eax, eax	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x400013e	            0x7507	                           jne 0x4000147	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000140	      0xb800000000	                              mov eax, 0	        36	push.c	FUNCTION_1	IF_1
0x4000145	            0xeb21	                           jmp 0x4000168	        36	push.c	FUNCTION_1	IF_1
0x4000147	        0x488b45f8	                mov rax, qword [rbp - 8]	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x400014b	      0xbe00000000	                              mov esi, 0	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000150	          0x4889c7	                            mov rdi, rax	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000153	      0xe800000000	                          call 0x4000158	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000158	            0x85c0	                           test eax, eax	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x400015a	            0x7507	                           jne 0x4000163	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x400015c	      0xb801000000	                              mov eax, 1	        38	push.c	FUNCTION_1	IF_2
0x4000161	            0xeb05	                           jmp 0x4000168	        38	push.c	FUNCTION_1	IF_2
0x4000163	      0xb8ffffffff	                     mov eax, 0xffffffff	        39	push.c	FUNCTION_1
0x4000168	              0xc9	                                   leave	        40	push.c	FUNCTION_1
0x4000169	              0xc3	                                     ret	        40	push.c	FUNCTION_1
const_error	functions,0:CALL,0:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,0:WHILE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_28
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_28
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_28
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_28
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_28
advise_checkout_pull_push	functions,0:CALL,2:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	17
0x4000b36	              0x55	                                push rbp	       317	push.c	FUNCTION_13
0x4000b37	          0x4889e5	                            mov rbp, rsp	       317	push.c	FUNCTION_13
0x4000b3a	    0x8b0500000000	            mov eax, dword [0x04000b40] 	       318	push.c	FUNCTION_13	IF_1
0x4000b40	            0x85c0	                           test eax, eax	       318	push.c	FUNCTION_13	IF_1
0x4000b42	            0x7423	                            je 0x4000b67	       318	push.c	FUNCTION_13	IF_1
0x4000b44	    0x8b0500000000	            mov eax, dword [0x04000b4a] 	       318	push.c	FUNCTION_13	IF_1
0x4000b4a	            0x85c0	                           test eax, eax	       318	push.c	FUNCTION_13	IF_1
0x4000b4c	            0x7419	                            je 0x4000b67	       318	push.c	FUNCTION_13	IF_1
0x4000b4e	      0xbf00000000	                              mov edi, 0	       320	push.c	FUNCTION_13	CALL_2
0x4000b53	      0xe89bf5ffff	                               call sym.	       320	push.c	FUNCTION_13	CALL_2
0x4000b58	          0x4889c7	                            mov rdi, rax	       320	push.c	FUNCTION_13	CALL_2
0x4000b5b	      0xb800000000	                              mov eax, 0	       320	push.c	FUNCTION_13	CALL_2
0x4000b60	      0xe800000000	                          call 0x4000b65	       320	push.c	FUNCTION_13	CALL_2
0x4000b65	            0xeb01	                           jmp 0x4000b68	       320	push.c	FUNCTION_13	CALL_2
0x4000b67	              0x90	                                     nop	       319	push.c	FUNCTION_13	IF_1
0x4000b68	              0x5d	                                 pop rbp	       321	push.c	FUNCTION_13
0x4000b69	              0xc3	                                     ret	       321	push.c	FUNCTION_13
setup_push_current	functions,0:CALL,4:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	43
0x4000950	              0x55	                                push rbp	       233	push.c	FUNCTION_9
0x4000951	          0x4889e5	                            mov rbp, rsp	       233	push.c	FUNCTION_9
0x4000954	              0x53	                                push rbx	       233	push.c	FUNCTION_9
0x4000955	        0x4883ec38	                           sub rsp, 0x38	       233	push.c	FUNCTION_9
0x4000959	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       233	push.c	FUNCTION_9
0x400095d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       233	push.c	FUNCTION_9
0x4000961	    0x64488b042528	                mov rax, qword fs:[0x28]	       233	push.c	FUNCTION_9
0x400096a	        0x488945e8	             mov qword [rbp - 0x18], rax	       233	push.c	FUNCTION_9
0x400096e	            0x31c0	                            xor eax, eax	       233	push.c	FUNCTION_9
0x4000970	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       234	push.c	FUNCTION_9
0x4000978	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       234	push.c	FUNCTION_9
0x4000980	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       234	push.c	FUNCTION_9
0x4000988	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       236	push.c	FUNCTION_9	IF_1
0x400098d	            0x7522	                           jne 0x40009b1	       236	push.c	FUNCTION_9	IF_1
0x400098f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	push.c	FUNCTION_9	CALL_2
0x4000993	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       237	push.c	FUNCTION_9	CALL_2
0x4000997	      0xbf00000000	                              mov edi, 0	       237	push.c	FUNCTION_9	CALL_2
0x400099c	      0xe852f7ffff	                               call sym.	       237	push.c	FUNCTION_9	CALL_2
0x40009a1	          0x4889de	                            mov rsi, rbx	       237	push.c	FUNCTION_9	CALL_2
0x40009a4	          0x4889c7	                            mov rdi, rax	       237	push.c	FUNCTION_9	CALL_2
0x40009a7	      0xb800000000	                              mov eax, 0	       237	push.c	FUNCTION_9	CALL_2
0x40009ac	      0xe800000000	                          call 0x40009b1	       237	push.c	FUNCTION_9	CALL_2
0x40009b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	push.c	FUNCTION_9	CALL_3
0x40009b5	        0x488b4808	                mov rcx, qword [rax + 8]	       238	push.c	FUNCTION_9	CALL_3
0x40009b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	push.c	FUNCTION_9	CALL_3
0x40009bd	        0x488b5008	                mov rdx, qword [rax + 8]	       238	push.c	FUNCTION_9	CALL_3
0x40009c1	        0x488d45d0	                   lea rax, [rbp - 0x30]	       238	push.c	FUNCTION_9	CALL_3
0x40009c5	      0xbe00000000	                              mov esi, 0	       238	push.c	FUNCTION_9	CALL_3
0x40009ca	          0x4889c7	                            mov rdi, rax	       238	push.c	FUNCTION_9	CALL_3
0x40009cd	      0xb800000000	                              mov eax, 0	       238	push.c	FUNCTION_9	CALL_3
0x40009d2	      0xe800000000	                          call 0x40009d7	       238	push.c	FUNCTION_9	CALL_3
0x40009d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       239	push.c	FUNCTION_9	CALL_4
0x40009db	          0x4889c7	                            mov rdi, rax	       239	push.c	FUNCTION_9	CALL_4
0x40009de	      0xe8cff7ffff	                    call sym.add_refspec	       239	push.c	FUNCTION_9	CALL_4
0x40009e3	              0x90	                                     nop	       240	push.c	FUNCTION_9
0x40009e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	push.c	FUNCTION_9
0x40009e8	    0x644833042528	                xor rax, qword fs:[0x28]	       240	push.c	FUNCTION_9
0x40009f1	            0x7405	                            je 0x40009f8	       240	push.c	FUNCTION_9
0x40009f3	      0xe800000000	                          call 0x40009f8	       240	push.c	FUNCTION_9
0x40009f8	        0x4883c438	                           add rsp, 0x38	       240	push.c	FUNCTION_9
0x40009fc	              0x5b	                                 pop rbx	       240	push.c	FUNCTION_9
0x40009fd	              0x5d	                                 pop rbp	       240	push.c	FUNCTION_9
0x40009fe	              0xc3	                                     ret	       240	push.c	FUNCTION_9
push_url_of_remote	functions,0:CALL,0:ELSE,0:DO,0:SWITCH,0:FOR,0:IF,1:WHILE,0	23
0x4000698	              0x55	                                push rbp	       146	push.c	FUNCTION_6
0x4000699	          0x4889e5	                            mov rbp, rsp	       146	push.c	FUNCTION_6
0x400069c	        0x48897df8	                mov qword [rbp - 8], rdi	       146	push.c	FUNCTION_6
0x40006a0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       146	push.c	FUNCTION_6
0x40006a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	push.c	FUNCTION_6	IF_1
0x40006a8	          0x8b4040	            mov eax, dword [rax + 0x40] 	       147	push.c	FUNCTION_6	IF_1
0x40006ab	            0x85c0	                           test eax, eax	       147	push.c	FUNCTION_6	IF_1
0x40006ad	            0x7418	                            je 0x40006c7	       147	push.c	FUNCTION_6	IF_1
0x40006af	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	push.c	FUNCTION_6	IF_1
0x40006b3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       148	push.c	FUNCTION_6	IF_1
0x40006b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	push.c	FUNCTION_6	IF_1
0x40006bb	          0x488910	                    mov qword [rax], rdx	       148	push.c	FUNCTION_6	IF_1
0x40006be	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	push.c	FUNCTION_6	IF_1
0x40006c2	          0x8b4040	            mov eax, dword [rax + 0x40] 	       149	push.c	FUNCTION_6	IF_1
0x40006c5	            0xeb16	                           jmp 0x40006dd	       149	push.c	FUNCTION_6	IF_1
0x40006c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       151	push.c	FUNCTION_6
0x40006cb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       151	push.c	FUNCTION_6
0x40006cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       151	push.c	FUNCTION_6
0x40006d3	          0x488910	                    mov qword [rax], rdx	       151	push.c	FUNCTION_6
0x40006d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	push.c	FUNCTION_6
0x40006da	          0x8b4030	            mov eax, dword [rax + 0x30] 	       152	push.c	FUNCTION_6
0x40006dd	              0x5d	                                 pop rbp	       153	push.c	FUNCTION_6
0x40006de	              0xc3	                                     ret	       153	push.c	FUNCTION_6
push_with_options	functions,0:CALL,19:ELSE,4:DO,0:SWITCH,0:FOR,0:IF,11:WHILE,0	145
0x4000c06	              0x55	                                push rbp	       345	push.c	FUNCTION_17
0x4000c07	          0x4889e5	                            mov rbp, rsp	       345	push.c	FUNCTION_17
0x4000c0a	              0x53	                                push rbx	       345	push.c	FUNCTION_17
0x4000c0b	        0x4883ec28	                           sub rsp, 0x28	       345	push.c	FUNCTION_17
0x4000c0f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       345	push.c	FUNCTION_17
0x4000c13	          0x8975d4	             mov dword [rbp - 0x2c], esi	       345	push.c	FUNCTION_17
0x4000c16	    0x64488b042528	                mov rax, qword fs:[0x28]	       345	push.c	FUNCTION_17
0x4000c1f	        0x488945e8	             mov qword [rbp - 0x18], rax	       345	push.c	FUNCTION_17
0x4000c23	            0x31c0	                            xor eax, eax	       345	push.c	FUNCTION_17
0x4000c25	    0x8b1500000000	            mov edx, dword [0x04000c2b] 	       349	push.c	FUNCTION_17	CALL_1
0x4000c2b	    0x8b0d00000000	            mov ecx, dword [0x04000c31] 	       349	push.c	FUNCTION_17	CALL_1
0x4000c31	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	push.c	FUNCTION_17	CALL_1
0x4000c35	            0x89ce	                            mov esi, ecx	       349	push.c	FUNCTION_17	CALL_1
0x4000c37	          0x4889c7	                            mov rdi, rax	       349	push.c	FUNCTION_17	CALL_1
0x4000c3a	      0xe800000000	                          call 0x4000c3f	       349	push.c	FUNCTION_17	CALL_1
0x4000c3f	    0x8b1500000000	            mov edx, dword [0x04000c45] 	       350	push.c	FUNCTION_17
0x4000c45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       350	push.c	FUNCTION_17
0x4000c49	          0x895058	             mov dword [rax + 0x58], edx	       350	push.c	FUNCTION_17
0x4000c4c	    0x488b05000000	            mov rax, qword [0x04000c53] 	       352	push.c	FUNCTION_17	IF_1
0x4000c53	          0x4885c0	                           test rax, rax	       352	push.c	FUNCTION_17	IF_1
0x4000c56	            0x7418	                            je 0x4000c70	       352	push.c	FUNCTION_17	IF_1
0x4000c58	    0x488b15000000	            mov rdx, qword [0x04000c5f] 	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x4000c5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x4000c63	      0xbe00000000	                              mov esi, 0	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x4000c68	          0x4889c7	                            mov rdi, rax	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x4000c6b	      0xe800000000	                          call 0x4000c70	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x4000c70	    0x8b0500000000	            mov eax, dword [0x04000c76] 	       355	push.c	FUNCTION_17	CALL_3
0x4000c76	            0x85c0	                           test eax, eax	       355	push.c	FUNCTION_17	CALL_3
0x4000c78	            0x7407	                            je 0x4000c81	       355	push.c	FUNCTION_17	CALL_3
0x4000c7a	      0xba00000000	                              mov edx, 0	       355	push.c	FUNCTION_17	CALL_3
0x4000c7f	            0xeb05	                           jmp 0x4000c86	       355	push.c	FUNCTION_17	CALL_3
0x4000c81	      0xba00000000	                              mov edx, 0	       355	push.c	FUNCTION_17	CALL_3
0x4000c86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	push.c	FUNCTION_17	CALL_3
0x4000c8a	      0xbe00000000	                              mov esi, 0	       355	push.c	FUNCTION_17	CALL_3
0x4000c8f	          0x4889c7	                            mov rdi, rax	       355	push.c	FUNCTION_17	CALL_3
0x4000c92	      0xe800000000	                          call 0x4000c97	       355	push.c	FUNCTION_17	CALL_3
0x4000c97	      0xbf00000000	                              mov edi, 0	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x4000c9c	      0xe800000000	                          call 0x4000ca1	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x4000ca1	            0x85c0	                           test eax, eax	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x4000ca3	            0x7531	                           jne 0x4000cd6	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x4000ca5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       358	push.c	FUNCTION_17	IF_2	IF_3
0x4000ca9	        0x488b4050	            mov rax, qword [rax + 0x50] 	       358	push.c	FUNCTION_17	IF_2	IF_3
0x4000cad	          0x4885c0	                           test rax, rax	       358	push.c	FUNCTION_17	IF_2	IF_3
0x4000cb0	            0x7514	                           jne 0x4000cc6	       358	push.c	FUNCTION_17	IF_2	IF_3
0x4000cb2	      0xbe00000000	                              mov esi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000cb7	      0xbf00000000	                              mov edi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000cbc	      0xb800000000	                              mov eax, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000cc1	      0xe800000000	                          call 0x4000cc6	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000cc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       361	push.c	FUNCTION_17	IF_2
0x4000cca	        0x488b4050	            mov rax, qword [rax + 0x50] 	       361	push.c	FUNCTION_17	IF_2
0x4000cce	    0x48c740280000	               mov qword [rax + 0x28], 0	       361	push.c	FUNCTION_17	IF_2
0x4000cd6	    0x8b0500000000	            mov eax, dword [0x04000cdc] 	       364	push.c	FUNCTION_17	IF_4
0x4000cdc	            0x85c0	                           test eax, eax	       364	push.c	FUNCTION_17	IF_4
0x4000cde	            0x7e2f	                           jle 0x4000d0f	       364	push.c	FUNCTION_17	IF_4
0x4000ce0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       365	push.c	FUNCTION_17	CALL_7
0x4000ce4	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       365	push.c	FUNCTION_17	CALL_7
0x4000ce8	      0xbf00000000	                              mov edi, 0	       365	push.c	FUNCTION_17	CALL_7
0x4000ced	      0xe801f4ffff	                               call sym.	       365	push.c	FUNCTION_17	CALL_7
0x4000cf2	          0x4889c1	                            mov rcx, rax	       365	push.c	FUNCTION_17	CALL_7
0x4000cf5	    0x488b05000000	            mov rax, qword [0x04000cfc] 	       365	push.c	FUNCTION_17	CALL_7
0x4000cfc	          0x4889da	                            mov rdx, rbx	       365	push.c	FUNCTION_17	CALL_7
0x4000cff	          0x4889ce	                            mov rsi, rcx	       365	push.c	FUNCTION_17	CALL_7
0x4000d02	          0x4889c7	                            mov rdi, rax	       365	push.c	FUNCTION_17	CALL_7
0x4000d05	      0xb800000000	                              mov eax, 0	       365	push.c	FUNCTION_17	CALL_7
0x4000d0a	      0xe800000000	                          call 0x4000d0f	       365	push.c	FUNCTION_17	CALL_7
0x4000d0f	    0x488b15000000	            mov rdx, qword [0x04000d16] 	       366	push.c	FUNCTION_17	CALL_8
0x4000d16	    0x8b3500000000	            mov esi, dword [0x04000d1c] 	       366	push.c	FUNCTION_17	CALL_8
0x4000d1c	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       366	push.c	FUNCTION_17	CALL_8
0x4000d20	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       366	push.c	FUNCTION_17	CALL_8
0x4000d23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	push.c	FUNCTION_17	CALL_8
0x4000d27	          0x4989f8	                             mov r8, rdi	       366	push.c	FUNCTION_17	CALL_8
0x4000d2a	          0x4889c7	                            mov rdi, rax	       366	push.c	FUNCTION_17	CALL_8
0x4000d2d	      0xe800000000	                          call 0x4000d32	       366	push.c	FUNCTION_17	CALL_8
0x4000d32	          0x8945e4	             mov dword [rbp - 0x1c], eax	       366	push.c	FUNCTION_17	CALL_8
0x4000d35	        0x837de400	               cmp dword [rbp - 0x1c], 0	       368	push.c	FUNCTION_17	IF_5
0x4000d39	            0x7465	                            je 0x4000da0	       368	push.c	FUNCTION_17	IF_5
0x4000d3b	      0xbf01000000	                              mov edi, 1	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d40	      0xe825f4ffff	                 call sym.push_get_color	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d45	          0x4889c2	                            mov rdx, rax	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d48	    0x488b05000000	            mov rax, qword [0x04000d4f] 	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d4f	          0x4889c6	                            mov rsi, rax	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d52	          0x4889d7	                            mov rdi, rdx	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d55	      0xe800000000	                          call 0x4000d5a	       369	push.c	FUNCTION_17	IF_5	CALL_10
0x4000d5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d5e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d62	      0xbf00000000	                              mov edi, 0	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d67	      0xe887f3ffff	                               call sym.	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d6c	          0x4889de	                            mov rsi, rbx	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d6f	          0x4889c7	                            mov rdi, rax	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d72	      0xb800000000	                              mov eax, 0	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d77	      0xe800000000	                          call 0x4000d7c	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d7c	      0xe8bff2ffff	                    call sym.const_error	       370	push.c	FUNCTION_17	IF_5	CALL_11
0x4000d81	      0xbf00000000	                              mov edi, 0	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d86	      0xe8dff3ffff	                 call sym.push_get_color	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d8b	          0x4889c2	                            mov rdx, rax	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d8e	    0x488b05000000	            mov rax, qword [0x04000d95] 	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d95	          0x4889c6	                            mov rsi, rax	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d98	          0x4889d7	                            mov rdi, rdx	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000d9b	      0xe800000000	                          call 0x4000da0	       371	push.c	FUNCTION_17	IF_5	CALL_13
0x4000da0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       374	push.c	FUNCTION_17	CALL_14
0x4000da4	          0x4889c7	                            mov rdi, rax	       374	push.c	FUNCTION_17	CALL_14
0x4000da7	      0xe800000000	                          call 0x4000dac	       374	push.c	FUNCTION_17	CALL_14
0x4000dac	           0x945e4	              or dword [rbp - 0x1c], eax	       374	push.c	FUNCTION_17	CALL_14
0x4000daf	        0x837de400	               cmp dword [rbp - 0x1c], 0	       375	push.c	FUNCTION_17	IF_6
0x4000db3	            0x7507	                           jne 0x4000dbc	       375	push.c	FUNCTION_17	IF_6
0x4000db5	      0xb800000000	                              mov eax, 0	       376	push.c	FUNCTION_17	IF_6
0x4000dba	            0xeb58	                           jmp 0x4000e14	       376	push.c	FUNCTION_17	IF_6
0x4000dbc	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       378	push.c	FUNCTION_17	IF_7
0x4000dbf	          0x83e001	                              and eax, 1	       378	push.c	FUNCTION_17	IF_7
0x4000dc2	            0x85c0	                           test eax, eax	       378	push.c	FUNCTION_17	IF_7
0x4000dc4	            0x7407	                            je 0x4000dcd	       378	push.c	FUNCTION_17	IF_7
0x4000dc6	      0xe837fdffff	        call sym.advise_pull_before_push	       379	push.c	FUNCTION_17	IF_7	CALL_15
0x4000dcb	            0xeb42	                           jmp 0x4000e0f	       379	push.c	FUNCTION_17	IF_7	CALL_15
0x4000dcd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x4000dd0	          0x83e002	                              and eax, 2	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x4000dd3	            0x85c0	                           test eax, eax	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x4000dd5	            0x7407	                            je 0x4000dde	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x4000dd7	      0xe85afdffff	      call sym.advise_checkout_pull_push	       381	push.c	FUNCTION_17	ELSE_1	IF_8	CALL_16
0x4000ddc	            0xeb31	                           jmp 0x4000e0f	       381	push.c	FUNCTION_17	ELSE_1	IF_8	CALL_16
0x4000dde	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x4000de1	          0x83e004	                              and eax, 4	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x4000de4	            0x85c0	                           test eax, eax	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x4000de6	            0x7407	                            je 0x4000def	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x4000de8	      0xe87dfdffff	      call sym.advise_ref_already_exists	       383	push.c	FUNCTION_17	ELSE_2	IF_9	CALL_17
0x4000ded	            0xeb20	                           jmp 0x4000e0f	       383	push.c	FUNCTION_17	ELSE_2	IF_9	CALL_17
0x4000def	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x4000df2	          0x83e008	                              and eax, 8	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x4000df5	            0x85c0	                           test eax, eax	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x4000df7	            0x7407	                            je 0x4000e00	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x4000df9	      0xe8a0fdffff	         call sym.advise_ref_fetch_first	       385	push.c	FUNCTION_17	ELSE_3	IF_10	CALL_18
0x4000dfe	            0xeb0f	                           jmp 0x4000e0f	       385	push.c	FUNCTION_17	ELSE_3	IF_10	CALL_18
0x4000e00	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000e03	          0x83e010	                           and eax, 0x10	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000e06	            0x85c0	                           test eax, eax	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000e08	            0x7405	                            je 0x4000e0f	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000e0a	      0xe8c3fdffff	         call sym.advise_ref_needs_force	       387	push.c	FUNCTION_17	ELSE_4	IF_11	CALL_19
0x4000e0f	      0xb801000000	                              mov eax, 1	       390	push.c	FUNCTION_17
0x4000e14	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       391	push.c	FUNCTION_17
0x4000e18	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       391	push.c	FUNCTION_17
0x4000e21	            0x7405	                            je 0x4000e28	       391	push.c	FUNCTION_17
0x4000e23	      0xe800000000	                          call 0x4000e28	       391	push.c	FUNCTION_17
0x4000e28	        0x4883c428	                           add rsp, 0x28	       391	push.c	FUNCTION_17
0x4000e2c	              0x5b	                                 pop rbx	       391	push.c	FUNCTION_17
0x4000e2d	              0x5d	                                 pop rbp	       391	push.c	FUNCTION_17
0x4000e2e	              0xc3	                                     ret	       391	push.c	FUNCTION_17
