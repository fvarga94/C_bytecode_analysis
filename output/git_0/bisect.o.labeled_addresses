weight	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	9
0x4000478	              0x55	                                push rbp	        76	bisect.c	FUNCTION_3
0x4000479	          0x4889e5	                            mov rbp, rsp	        76	bisect.c	FUNCTION_3
0x400047c	        0x48897df8	                mov qword [rbp - 8], rdi	        76	bisect.c	FUNCTION_3
0x4000480	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	bisect.c	FUNCTION_3
0x4000484	          0x488b00	                    mov rax, qword [rax]	        77	bisect.c	FUNCTION_3
0x4000487	        0x488b4018	            mov rax, qword [rax + 0x18] 	        77	bisect.c	FUNCTION_3
0x400048b	            0x8b00	                    mov eax, dword [rax]	        77	bisect.c	FUNCTION_3
0x400048d	              0x5d	                                 pop rbp	        78	bisect.c	FUNCTION_3
0x400048e	              0xc3	                                     ret	        78	bisect.c	FUNCTION_3
sane_qsort	functions,0:CALL,0:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	18
0x4000092	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_65
0x4000093	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_65
0x4000096	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_65
0x400009a	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_65
0x400009e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_65
0x40000a2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_65
0x40000a6	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_65
0x40000aa	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_65	IF_1
0x40000af	            0x7618	                           jbe 0x40000c9	      1048	git-compat-util.h	FUNCTION_65	IF_1
0x40000b1	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000b9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000c1	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000c4	      0xe800000000	                          call 0x40000c9	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x40000c9	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_65
0x40000ca	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_65
0x40000cb	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_65
get_commit_reference	functions,0:CALL,4:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	26
0x4001971	              0x55	                                push rbp	       720	bisect.c	FUNCTION_26
0x4001972	          0x4889e5	                            mov rbp, rsp	       720	bisect.c	FUNCTION_26
0x4001975	              0x53	                                push rbx	       720	bisect.c	FUNCTION_26
0x4001976	        0x4883ec28	                           sub rsp, 0x28	       720	bisect.c	FUNCTION_26
0x400197a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       720	bisect.c	FUNCTION_26
0x400197e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       721	bisect.c	FUNCTION_26	CALL_1
0x4001982	          0x4889c7	                            mov rdi, rax	       721	bisect.c	FUNCTION_26	CALL_1
0x4001985	      0xe800000000	                          call 0x400198a	       721	bisect.c	FUNCTION_26	CALL_1
0x400198a	        0x488945e8	             mov qword [rbp - 0x18], rax	       721	bisect.c	FUNCTION_26	CALL_1
0x400198e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       722	bisect.c	FUNCTION_26	IF_1
0x4001993	            0x7529	                           jne 0x40019be	       722	bisect.c	FUNCTION_26	IF_1
0x4001995	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       723	bisect.c	FUNCTION_26	CALL_4
0x4001999	          0x4889c7	                            mov rdi, rax	       723	bisect.c	FUNCTION_26	CALL_4
0x400199c	      0xe800000000	                          call 0x40019a1	       723	bisect.c	FUNCTION_26	CALL_4
0x40019a1	          0x4889c3	                            mov rbx, rax	       723	bisect.c	FUNCTION_26	CALL_4
0x40019a4	      0xbf00000000	                              mov edi, 0	       723	bisect.c	FUNCTION_26	CALL_4
0x40019a9	      0xe891e8ffff	                               call sym.	       723	bisect.c	FUNCTION_26	CALL_4
0x40019ae	          0x4889de	                            mov rsi, rbx	       723	bisect.c	FUNCTION_26	CALL_4
0x40019b1	          0x4889c7	                            mov rdi, rax	       723	bisect.c	FUNCTION_26	CALL_4
0x40019b4	      0xb800000000	                              mov eax, 0	       723	bisect.c	FUNCTION_26	CALL_4
0x40019b9	      0xe800000000	                          call 0x40019be	       723	bisect.c	FUNCTION_26	CALL_4
0x40019be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       724	bisect.c	FUNCTION_26
0x40019c2	        0x4883c428	                           add rsp, 0x28	       725	bisect.c	FUNCTION_26
0x40019c6	              0x5b	                                 pop rbx	       725	bisect.c	FUNCTION_26
0x40019c7	              0x5d	                                 pop rbp	       725	bisect.c	FUNCTION_26
0x40019c8	              0xc3	                                     ret	       725	bisect.c	FUNCTION_26
strbuf_addstr	functions,0:CALL,2:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	17
0x400020a	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_72
0x400020b	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_72
0x400020e	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_72
0x4000212	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_72
0x4000216	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_72
0x400021a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_72	CALL_2
0x400021e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000221	      0xe800000000	                          call 0x4000226	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000226	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000229	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_72	CALL_2
0x400022d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000231	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000234	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000237	      0xe800000000	                          call 0x400023c	       279	strbuf.h	FUNCTION_72	CALL_2
0x400023c	              0x90	                                     nop	       280	strbuf.h	FUNCTION_72
0x400023d	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_72
0x400023e	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_72
sqrti	functions,0:CALL,0:DO,1:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	35
0x40012db	              0x55	                                push rbp	       564	bisect.c	FUNCTION_18
0x40012dc	          0x4889e5	                            mov rbp, rsp	       564	bisect.c	FUNCTION_18
0x40012df	          0x897dec	             mov dword [rbp - 0x14], edi	       564	bisect.c	FUNCTION_18
0x40012e2	        0x660fefc0	                         pxor xmm0, xmm0	       565	bisect.c	FUNCTION_18
0x40012e6	      0xf30f2a45ec	       cvtsi2ss xmm0, dword [rbp - 0x14]	       565	bisect.c	FUNCTION_18
0x40012eb	      0xf30f1145f4	           movss dword [rbp - 0xc], xmm0	       565	bisect.c	FUNCTION_18
0x40012f0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       567	bisect.c	FUNCTION_18	IF_1
0x40012f4	            0x7507	                           jne 0x40012fd	       567	bisect.c	FUNCTION_18	IF_1
0x40012f6	      0xb800000000	                              mov eax, 0	       568	bisect.c	FUNCTION_18	IF_1
0x40012fb	            0xeb6b	                           jmp 0x4001368	       568	bisect.c	FUNCTION_18	IF_1
0x40012fd	        0x660fefc0	                         pxor xmm0, xmm0	       571	bisect.c	FUNCTION_18	DO_1
0x4001301	      0xf30f2a45ec	       cvtsi2ss xmm0, dword [rbp - 0x14]	       571	bisect.c	FUNCTION_18	DO_1
0x4001306	      0xf30f5e45f4	           divss xmm0, dword [rbp - 0xc]	       571	bisect.c	FUNCTION_18	DO_1
0x400130b	      0xf30f5845f4	           addss xmm0, dword [rbp - 0xc]	       571	bisect.c	FUNCTION_18	DO_1
0x4001310	    0xf30f100d0000	         movss xmm1, dword [0x04001318] 	       571	bisect.c	FUNCTION_18	DO_1
0x4001318	        0xf30f5ec1	                        divss xmm0, xmm1	       571	bisect.c	FUNCTION_18	DO_1
0x400131c	      0xf30f1145f8	             movss dword [rbp - 8], xmm0	       571	bisect.c	FUNCTION_18	DO_1
0x4001321	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_18	DO_1
0x4001326	         0xf2e45f4	         ucomiss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_18	DO_1
0x400132a	            0x760c	                           jbe 0x4001338	       572	bisect.c	FUNCTION_18	DO_1
0x400132c	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_18	DO_1
0x4001331	      0xf30f5c45f4	           subss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_18	DO_1
0x4001336	            0xeb0a	                           jmp 0x4001342	       572	bisect.c	FUNCTION_18	DO_1
0x4001338	      0xf30f1045f4	           movss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_18	DO_1
0x400133d	      0xf30f5c45f8	             subss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_18	DO_1
0x4001342	      0xf30f1145fc	             movss dword [rbp - 4], xmm0	       572	bisect.c	FUNCTION_18	DO_1
0x4001347	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       573	bisect.c	FUNCTION_18	DO_1
0x400134c	      0xf30f1145f4	           movss dword [rbp - 0xc], xmm0	       573	bisect.c	FUNCTION_18	DO_1
0x4001351	      0xf30f1045fc	             movss xmm0, dword [rbp - 4]	       574	bisect.c	FUNCTION_18	DO_1
0x4001356	     0xf2e05000000	        ucomiss xmm0, dword [0x0400135d]	       574	bisect.c	FUNCTION_18	DO_1
0x400135d	            0x739e	                           jae 0x40012fd	       574	bisect.c	FUNCTION_18	DO_1
0x400135f	      0xf30f1045f4	           movss xmm0, dword [rbp - 0xc]	       576	bisect.c	FUNCTION_18
0x4001364	        0xf30f2cc0	                     cvttss2si eax, xmm0	       576	bisect.c	FUNCTION_18
0x4001368	              0x5d	                                 pop rbp	       577	bisect.c	FUNCTION_18
0x4001369	              0xc3	                                     ret	       577	bisect.c	FUNCTION_18
show_diff_tree	functions,0:CALL,4:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	49
0x400203d	              0x55	                                push rbp	       882	bisect.c	FUNCTION_33
0x400203e	          0x4889e5	                            mov rbp, rsp	       882	bisect.c	FUNCTION_33
0x4002041	    0x4881ecd00800	                          sub rsp, 0x8d0	       882	bisect.c	FUNCTION_33
0x4002048	    0x4889bd38f7ff	            mov qword [rbp - 0x8c8], rdi	       882	bisect.c	FUNCTION_33
0x400204f	    0x4889b530f7ff	            mov qword [rbp - 0x8d0], rsi	       882	bisect.c	FUNCTION_33
0x4002056	    0x64488b042528	                mov rax, qword fs:[0x28]	       882	bisect.c	FUNCTION_33
0x400205f	        0x488945f8	                mov qword [rbp - 8], rax	       882	bisect.c	FUNCTION_33
0x4002063	            0x31c0	                            xor eax, eax	       882	bisect.c	FUNCTION_33
0x4002065	    0x488b9538f7ff	            mov rdx, qword [rbp - 0x8c8]	       886	bisect.c	FUNCTION_33	CALL_1
0x400206c	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       886	bisect.c	FUNCTION_33	CALL_1
0x4002073	          0x4889d6	                            mov rsi, rdx	       886	bisect.c	FUNCTION_33	CALL_1
0x4002076	          0x4889c7	                            mov rdi, rax	       886	bisect.c	FUNCTION_33	CALL_1
0x4002079	      0xe800000000	                          call 0x400207e	       886	bisect.c	FUNCTION_33	CALL_1
0x400207e	      0xbe00000000	                              mov esi, 0	       887	bisect.c	FUNCTION_33	CALL_2
0x4002083	      0xbf00000000	                              mov edi, 0	       887	bisect.c	FUNCTION_33	CALL_2
0x4002088	      0xe800000000	                          call 0x400208d	       887	bisect.c	FUNCTION_33	CALL_2
0x400208d	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 0	       888	bisect.c	FUNCTION_33
0x4002097	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	       889	bisect.c	FUNCTION_33
0x400209e	          0x83c801	                               or eax, 1	       889	bisect.c	FUNCTION_33
0x40020a1	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	       889	bisect.c	FUNCTION_33
0x40020a7	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	       892	bisect.c	FUNCTION_33
0x40020ae	          0x83c810	                            or eax, 0x10	       892	bisect.c	FUNCTION_33
0x40020b1	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	       892	bisect.c	FUNCTION_33
0x40020b7	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	       893	bisect.c	FUNCTION_33
0x40020be	          0x83e0f7	                     and eax, 0xfffffff7	       893	bisect.c	FUNCTION_33
0x40020c1	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	       893	bisect.c	FUNCTION_33
0x40020c7	    0xc785e4f7ffff	              mov dword [rbp - 0x81c], 1	       894	bisect.c	FUNCTION_33
0x40020d1	    0x8b8598fcffff	            mov eax, dword [rbp - 0x368]	       897	bisect.c	FUNCTION_33	IF_1
0x40020d7	            0x85c0	                           test eax, eax	       897	bisect.c	FUNCTION_33	IF_1
0x40020d9	            0x750a	                           jne 0x40020e5	       897	bisect.c	FUNCTION_33	IF_1
0x40020db	    0xc78598fcffff	              mov dword [rbp - 0x368], 1	       898	bisect.c	FUNCTION_33	IF_1
0x40020e5	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       900	bisect.c	FUNCTION_33	CALL_3
0x40020ec	      0xb900000000	                              mov ecx, 0	       900	bisect.c	FUNCTION_33	CALL_3
0x40020f1	          0x4889c2	                            mov rdx, rax	       900	bisect.c	FUNCTION_33	CALL_3
0x40020f4	      0xbe00000000	                              mov esi, 0	       900	bisect.c	FUNCTION_33	CALL_3
0x40020f9	      0xbf00000000	                              mov edi, 0	       900	bisect.c	FUNCTION_33	CALL_3
0x40020fe	      0xe800000000	                          call 0x4002103	       900	bisect.c	FUNCTION_33	CALL_3
0x4002103	    0x488b9530f7ff	            mov rdx, qword [rbp - 0x8d0]	       901	bisect.c	FUNCTION_33	CALL_4
0x400210a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       901	bisect.c	FUNCTION_33	CALL_4
0x4002111	          0x4889d6	                            mov rsi, rdx	       901	bisect.c	FUNCTION_33	CALL_4
0x4002114	          0x4889c7	                            mov rdi, rax	       901	bisect.c	FUNCTION_33	CALL_4
0x4002117	      0xe800000000	                          call 0x400211c	       901	bisect.c	FUNCTION_33	CALL_4
0x400211c	              0x90	                                     nop	       902	bisect.c	FUNCTION_33
0x400211d	        0x488b45f8	                mov rax, qword [rbp - 8]	       902	bisect.c	FUNCTION_33
0x4002121	    0x644833042528	                xor rax, qword fs:[0x28]	       902	bisect.c	FUNCTION_33
0x400212a	            0x7405	                            je 0x4002131	       902	bisect.c	FUNCTION_33
0x400212c	      0xe800000000	                          call 0x4002131	       902	bisect.c	FUNCTION_33
0x4002131	              0xc9	                                   leave	       902	bisect.c	FUNCTION_33
0x4002132	              0xc3	                                     ret	       902	bisect.c	FUNCTION_33
st_mult	functions,0:CALL,1:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_55
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_55
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_55
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_55
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_55
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_55	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_55	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_55	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_55	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_55	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_55	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_55	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_55	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_55
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_55
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_55
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_55
skip_away	functions,0:CALL,4:DO,0:SWITCH,0:IF,3:ELSE,0:FOR,1:WHILE,0	66
0x400136a	              0x55	                                push rbp	       580	bisect.c	FUNCTION_19
0x400136b	          0x4889e5	                            mov rbp, rsp	       580	bisect.c	FUNCTION_19
0x400136e	              0x53	                                push rbx	       580	bisect.c	FUNCTION_19
0x400136f	        0x4883ec38	                           sub rsp, 0x38	       580	bisect.c	FUNCTION_19
0x4001373	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       580	bisect.c	FUNCTION_19
0x4001377	          0x8975c4	             mov dword [rbp - 0x3c], esi	       580	bisect.c	FUNCTION_19
0x400137a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       584	bisect.c	FUNCTION_19	CALL_1
0x400137d	            0x89c7	                            mov edi, eax	       584	bisect.c	FUNCTION_19	CALL_1
0x400137f	      0xe832ffffff	                        call sym.get_prn	       584	bisect.c	FUNCTION_19	CALL_1
0x4001384	          0x8945d8	             mov dword [rbp - 0x28], eax	       584	bisect.c	FUNCTION_19	CALL_1
0x4001387	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       585	bisect.c	FUNCTION_19	CALL_3
0x400138a	         0xfaf45d8	            imul eax, dword [rbp - 0x28]	       585	bisect.c	FUNCTION_19	CALL_3
0x400138e	    0x8d90ff7f0000	                 lea edx, [rax + 0x7fff]	       585	bisect.c	FUNCTION_19	CALL_3
0x4001394	            0x85c0	                           test eax, eax	       585	bisect.c	FUNCTION_19	CALL_3
0x4001396	           0xf48c2	                          cmovs eax, edx	       585	bisect.c	FUNCTION_19	CALL_3
0x4001399	          0xc1f80f	                            sar eax, 0xf	       585	bisect.c	FUNCTION_19	CALL_3
0x400139c	            0x89c3	                            mov ebx, eax	       585	bisect.c	FUNCTION_19	CALL_3
0x400139e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       585	bisect.c	FUNCTION_19	CALL_3
0x40013a1	            0x89c7	                            mov edi, eax	       585	bisect.c	FUNCTION_19	CALL_3
0x40013a3	      0xe833ffffff	                          call sym.sqrti	       585	bisect.c	FUNCTION_19	CALL_3
0x40013a8	           0xfafd8	                           imul ebx, eax	       585	bisect.c	FUNCTION_19	CALL_3
0x40013ab	      0xbf00800000	                         mov edi, 0x8000	       585	bisect.c	FUNCTION_19	CALL_3
0x40013b0	      0xe826ffffff	                          call sym.sqrti	       585	bisect.c	FUNCTION_19	CALL_3
0x40013b5	            0x89c1	                            mov ecx, eax	       585	bisect.c	FUNCTION_19	CALL_3
0x40013b7	            0x89d8	                            mov eax, ebx	       585	bisect.c	FUNCTION_19	CALL_3
0x40013b9	              0x99	                                     cdq	       585	bisect.c	FUNCTION_19	CALL_3
0x40013ba	            0xf7f9	                                idiv ecx	       585	bisect.c	FUNCTION_19	CALL_3
0x40013bc	          0x8945dc	             mov dword [rbp - 0x24], eax	       585	bisect.c	FUNCTION_19	CALL_3
0x40013bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	bisect.c	FUNCTION_19
0x40013c3	        0x488945e0	             mov qword [rbp - 0x20], rax	       587	bisect.c	FUNCTION_19
0x40013c7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       588	bisect.c	FUNCTION_19
0x40013cf	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       590	bisect.c	FUNCTION_19	FOR_1
0x40013d6	            0xeb5a	                           jmp 0x4001432	       590	bisect.c	FUNCTION_19	FOR_1
0x40013d8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       591	bisect.c	FUNCTION_19	FOR_1	IF_1
0x40013db	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       591	bisect.c	FUNCTION_19	FOR_1	IF_1
0x40013de	            0x753a	                           jne 0x400141a	       591	bisect.c	FUNCTION_19	FOR_1	IF_1
0x40013e0	    0x488b05000000	            mov rax, qword [0x040013e7] 	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013e7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013eb	          0x488b12	                    mov rdx, qword [rdx]	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013ee	        0x4883c204	                              add rdx, 4	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013f2	          0x4889c6	                            mov rsi, rax	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013f5	          0x4889d7	                            mov rdi, rdx	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013f8	      0xe8c5eeffff	                         call sym.oidcmp	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013fd	            0x85c0	                           test eax, eax	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x40013ff	            0x7406	                            je 0x4001407	       592	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_4
0x4001401	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       593	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001405	            0xeb36	                           jmp 0x400143d	       593	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001407	      0x48837de800	               cmp qword [rbp - 0x18], 0	       594	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_3
0x400140c	            0x7406	                            je 0x4001414	       594	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_3
0x400140e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       595	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_3
0x4001412	            0xeb29	                           jmp 0x400143d	       595	bisect.c	FUNCTION_19	FOR_1	IF_1	IF_3
0x4001414	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       596	bisect.c	FUNCTION_19	FOR_1	IF_1
0x4001418	            0xeb23	                           jmp 0x400143d	       596	bisect.c	FUNCTION_19	FOR_1	IF_1
0x400141a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       598	bisect.c	FUNCTION_19	FOR_1
0x400141e	        0x488945e8	             mov qword [rbp - 0x18], rax	       598	bisect.c	FUNCTION_19	FOR_1
0x4001422	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       590	bisect.c	FUNCTION_19	FOR_1
0x4001426	        0x488b4008	                mov rax, qword [rax + 8]	       590	bisect.c	FUNCTION_19	FOR_1
0x400142a	        0x488945e0	             mov qword [rbp - 0x20], rax	       590	bisect.c	FUNCTION_19	FOR_1
0x400142e	        0x8345d401	               add dword [rbp - 0x2c], 1	       590	bisect.c	FUNCTION_19	FOR_1
0x4001432	      0x48837de000	               cmp qword [rbp - 0x20], 0	       590	bisect.c	FUNCTION_19	FOR_1
0x4001437	            0x759f	                           jne 0x40013d8	       590	bisect.c	FUNCTION_19	FOR_1
0x4001439	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       601	bisect.c	FUNCTION_19
0x400143d	        0x4883c438	                           add rsp, 0x38	       602	bisect.c	FUNCTION_19
0x4001441	              0x5b	                                 pop rbx	       602	bisect.c	FUNCTION_19
0x4001442	              0x5d	                                 pop rbp	       602	bisect.c	FUNCTION_19
0x4001443	              0xc3	                                     ret	       602	bisect.c	FUNCTION_19
register_ref	functions,0:CALL,10:DO,0:SWITCH,0:IF,3:ELSE,2:FOR,0:WHILE,0	70
0x4000cb3	              0x55	                                push rbp	       419	bisect.c	FUNCTION_12
0x4000cb4	          0x4889e5	                            mov rbp, rsp	       419	bisect.c	FUNCTION_12
0x4000cb7	        0x4883ec40	                           sub rsp, 0x40	       419	bisect.c	FUNCTION_12
0x4000cbb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       419	bisect.c	FUNCTION_12
0x4000cbf	        0x488975d0	             mov qword [rbp - 0x30], rsi	       419	bisect.c	FUNCTION_12
0x4000cc3	          0x8955cc	             mov dword [rbp - 0x34], edx	       419	bisect.c	FUNCTION_12
0x4000cc6	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       419	bisect.c	FUNCTION_12
0x4000cca	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	bisect.c	FUNCTION_12
0x4000cd3	        0x488945f8	                mov qword [rbp - 8], rax	       419	bisect.c	FUNCTION_12
0x4000cd7	            0x31c0	                            xor eax, eax	       419	bisect.c	FUNCTION_12
0x4000cd9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       420	bisect.c	FUNCTION_12
0x4000ce1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       420	bisect.c	FUNCTION_12
0x4000ce9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       420	bisect.c	FUNCTION_12
0x4000cf1	    0x488b15000000	            mov rdx, qword [0x04000cf8] 	       421	bisect.c	FUNCTION_12	CALL_1
0x4000cf8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       421	bisect.c	FUNCTION_12	CALL_1
0x4000cfc	          0x4889d6	                            mov rsi, rdx	       421	bisect.c	FUNCTION_12	CALL_1
0x4000cff	          0x4889c7	                            mov rdi, rax	       421	bisect.c	FUNCTION_12	CALL_1
0x4000d02	      0xe803f5ffff	                  call sym.strbuf_addstr	       421	bisect.c	FUNCTION_12	CALL_1
0x4000d07	        0x488d45e0	                   lea rax, [rbp - 0x20]	       422	bisect.c	FUNCTION_12	CALL_2
0x4000d0b	      0xbe00000000	                              mov esi, 0	       422	bisect.c	FUNCTION_12	CALL_2
0x4000d10	          0x4889c7	                            mov rdi, rax	       422	bisect.c	FUNCTION_12	CALL_2
0x4000d13	      0xe8f2f4ffff	                  call sym.strbuf_addstr	       422	bisect.c	FUNCTION_12	CALL_2
0x4000d18	    0x488b15000000	            mov rdx, qword [0x04000d1f] 	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d23	          0x4889d6	                            mov rsi, rdx	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d26	          0x4889c7	                            mov rdi, rax	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d29	      0xe800000000	                          call 0x4000d2e	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d2e	            0x85c0	                           test eax, eax	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d30	            0x7529	                           jne 0x4000d5b	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x4000d32	      0xbf14000000	                           mov edi, 0x14	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x4000d37	      0xe800000000	                          call 0x4000d3c	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x4000d3c	    0x488905000000	            mov qword [0x04000d43], rax 	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x4000d43	    0x488b05000000	            mov rax, qword [0x04000d4a] 	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d4a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d4e	          0x4889d6	                            mov rsi, rdx	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d51	          0x4889c7	                            mov rdi, rax	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d54	      0xe8b9f5ffff	                         call sym.oidcpy	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d59	            0xeb50	                           jmp 0x4000dab	       426	bisect.c	FUNCTION_12	IF_1	CALL_5
0x4000d5b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d63	          0x4889d6	                            mov rsi, rdx	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d66	          0x4889c7	                            mov rdi, rax	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d69	      0xe800000000	                          call 0x4000d6e	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d6e	            0x85c0	                           test eax, eax	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d70	            0x7413	                            je 0x4000d85	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x4000d72	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000d76	          0x4889c6	                            mov rsi, rax	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000d79	      0xbf00000000	                              mov edi, 0	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000d7e	      0xe800000000	                          call 0x4000d83	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000d83	            0xeb26	                           jmp 0x4000dab	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000d85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d89	      0xbe00000000	                              mov esi, 0	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d8e	          0x4889c7	                            mov rdi, rax	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d91	      0xe800000000	                          call 0x4000d96	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d96	            0x85c0	                           test eax, eax	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d98	            0x7411	                            je 0x4000dab	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x4000d9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x4000d9e	          0x4889c6	                            mov rsi, rax	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x4000da1	      0xbf00000000	                              mov edi, 0	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x4000da6	      0xe800000000	                          call 0x4000dab	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x4000dab	        0x488d45e0	                   lea rax, [rbp - 0x20]	       433	bisect.c	FUNCTION_12	CALL_10
0x4000daf	          0x4889c7	                            mov rdi, rax	       433	bisect.c	FUNCTION_12	CALL_10
0x4000db2	      0xe800000000	                          call 0x4000db7	       433	bisect.c	FUNCTION_12	CALL_10
0x4000db7	      0xb800000000	                              mov eax, 0	       435	bisect.c	FUNCTION_12
0x4000dbc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       436	bisect.c	FUNCTION_12
0x4000dc0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       436	bisect.c	FUNCTION_12
0x4000dc9	            0x7405	                            je 0x4000dd0	       436	bisect.c	FUNCTION_12
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       436	bisect.c	FUNCTION_12
0x4000dd0	              0xc9	                                   leave	       436	bisect.c	FUNCTION_12
0x4000dd1	              0xc3	                                     ret	       436	bisect.c	FUNCTION_12
oidcmp	functions,0:CALL,1:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	12
0x40002c2	              0x55	                                push rbp	       979	cache.h	FUNCTION_91
0x40002c3	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_91
0x40002c6	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_91
0x40002ca	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_91
0x40002ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_91
0x40002d2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_91	CALL_1
0x40002d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_91	CALL_1
0x40002da	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_91	CALL_1
0x40002dd	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_91	CALL_1
0x40002e0	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_91	CALL_1
0x40002e5	              0xc9	                                   leave	       981	cache.h	FUNCTION_91
0x40002e6	              0xc3	                                     ret	       981	cache.h	FUNCTION_91
exp2i	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	10
0x40025bd	              0x55	                                push rbp	      1022	bisect.c	FUNCTION_37
0x40025be	          0x4889e5	                            mov rbp, rsp	      1022	bisect.c	FUNCTION_37
0x40025c1	          0x897dfc	                mov dword [rbp - 4], edi	      1022	bisect.c	FUNCTION_37
0x40025c4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1023	bisect.c	FUNCTION_37
0x40025c7	      0xba01000000	                              mov edx, 1	      1023	bisect.c	FUNCTION_37
0x40025cc	            0x89c1	                            mov ecx, eax	      1023	bisect.c	FUNCTION_37
0x40025ce	            0xd3e2	                             shl edx, cl	      1023	bisect.c	FUNCTION_37
0x40025d0	            0x89d0	                            mov eax, edx	      1023	bisect.c	FUNCTION_37
0x40025d2	              0x5d	                                 pop rbp	      1024	bisect.c	FUNCTION_37
0x40025d3	              0xc3	                                     ret	      1024	bisect.c	FUNCTION_37
bisect_next_all	functions,0:CALL,30:DO,0:SWITCH,0:IF,4:ELSE,0:FOR,0:WHILE,0	180
0x4002261	              0x55	                                push rbp	       942	bisect.c	FUNCTION_35
0x4002262	          0x4889e5	                            mov rbp, rsp	       942	bisect.c	FUNCTION_35
0x4002265	            0x4155	                                push r13	       942	bisect.c	FUNCTION_35
0x4002267	            0x4154	                                push r12	       942	bisect.c	FUNCTION_35
0x4002269	              0x53	                                push rbx	       942	bisect.c	FUNCTION_35
0x400226a	    0x4881ec080900	                          sub rsp, 0x908	       942	bisect.c	FUNCTION_35
0x4002271	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	       942	bisect.c	FUNCTION_35
0x4002278	    0x89b5e4f6ffff	            mov dword [rbp - 0x91c], esi	       942	bisect.c	FUNCTION_35
0x400227e	    0x64488b042528	                mov rax, qword fs:[0x28]	       942	bisect.c	FUNCTION_35
0x4002287	        0x488945d8	             mov qword [rbp - 0x28], rax	       942	bisect.c	FUNCTION_35
0x400228b	            0x31c0	                            xor eax, eax	       942	bisect.c	FUNCTION_35
0x400228d	    0xc785f8f6ffff	              mov dword [rbp - 0x908], 0	       945	bisect.c	FUNCTION_35
0x4002297	    0xc785fcf6ffff	              mov dword [rbp - 0x904], 0	       945	bisect.c	FUNCTION_35
0x40022a1	      0xbe00000000	                              mov esi, 0	       949	bisect.c	FUNCTION_35	CALL_1
0x40022a6	      0xbf00000000	                              mov edi, 0	       949	bisect.c	FUNCTION_35	CALL_1
0x40022ab	      0xe800000000	                          call 0x40022b0	       949	bisect.c	FUNCTION_35	CALL_1
0x40022b0	      0xe81debffff	               call sym.read_bisect_refs	       950	bisect.c	FUNCTION_35	IF_1	CALL_2
0x40022b5	            0x85c0	                           test eax, eax	       950	bisect.c	FUNCTION_35	IF_1	CALL_2
0x40022b7	            0x7417	                            je 0x40022d0	       950	bisect.c	FUNCTION_35	IF_1	CALL_2
0x40022b9	      0xbf00000000	                              mov edi, 0	       951	bisect.c	FUNCTION_35	CALL_4
0x40022be	      0xe87cdfffff	                               call sym.	       951	bisect.c	FUNCTION_35	CALL_4
0x40022c3	          0x4889c7	                            mov rdi, rax	       951	bisect.c	FUNCTION_35	CALL_4
0x40022c6	      0xb800000000	                              mov eax, 0	       951	bisect.c	FUNCTION_35	CALL_4
0x40022cb	      0xe800000000	                          call 0x40022d0	       951	bisect.c	FUNCTION_35	CALL_4
0x40022d0	    0x8b95e4f6ffff	            mov edx, dword [rbp - 0x91c]	       953	bisect.c	FUNCTION_35	CALL_5
0x40022d6	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       953	bisect.c	FUNCTION_35	CALL_5
0x40022dd	            0x89d6	                            mov esi, edx	       953	bisect.c	FUNCTION_35	CALL_5
0x40022df	          0x4889c7	                            mov rdi, rax	       953	bisect.c	FUNCTION_35	CALL_5
0x40022e2	      0xe8b2fbffff	call sym.check_good_are_ancestors_of_bad	       953	bisect.c	FUNCTION_35	CALL_5
0x40022e7	    0x488bb5e8f6ff	            mov rsi, qword [rbp - 0x918]	       955	bisect.c	FUNCTION_35	CALL_6
0x40022ee	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       955	bisect.c	FUNCTION_35	CALL_6
0x40022f5	    0x41b801000000	                              mov r8d, 1	       955	bisect.c	FUNCTION_35	CALL_6
0x40022fb	      0xb900000000	                              mov ecx, 0	       955	bisect.c	FUNCTION_35	CALL_6
0x4002300	      0xba00000000	                              mov edx, 0	       955	bisect.c	FUNCTION_35	CALL_6
0x4002305	          0x4889c7	                            mov rdi, rax	       955	bisect.c	FUNCTION_35	CALL_6
0x4002308	      0xe8ccf1ffff	               call sym.bisect_rev_setup	       955	bisect.c	FUNCTION_35	CALL_6
0x400230d	     0xfb68596f7ff	           movzx eax, byte [rbp - 0x86a]	       956	bisect.c	FUNCTION_35
0x4002314	          0x83c804	                               or eax, 4	       956	bisect.c	FUNCTION_35
0x4002317	    0x888596f7ffff	              mov byte [rbp - 0x86a], al	       956	bisect.c	FUNCTION_35
0x400231d	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       958	bisect.c	FUNCTION_35	CALL_7
0x4002324	          0x4889c7	                            mov rdi, rax	       958	bisect.c	FUNCTION_35	CALL_7
0x4002327	      0xe802f3ffff	                  call sym.bisect_common	       958	bisect.c	FUNCTION_35	CALL_7
0x400232c	    0x8b0500000000	            mov eax, dword [0x04002332] 	       960	bisect.c	FUNCTION_35	CALL_8
0x4002332	            0x85c0	                           test eax, eax	       960	bisect.c	FUNCTION_35	CALL_8
0x4002334	           0xf95c0	                                setne al	       960	bisect.c	FUNCTION_35	CALL_8
0x4002337	           0xfb6c8	                           movzx ecx, al	       960	bisect.c	FUNCTION_35	CALL_8
0x400233a	    0x488d95fcf6ff	                  lea rdx, [rbp - 0x904]	       960	bisect.c	FUNCTION_35	CALL_8
0x4002341	    0x488db5f8f6ff	                  lea rsi, [rbp - 0x908]	       960	bisect.c	FUNCTION_35	CALL_8
0x4002348	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       960	bisect.c	FUNCTION_35	CALL_8
0x400234f	          0x4889c7	                            mov rdi, rax	       960	bisect.c	FUNCTION_35	CALL_8
0x4002352	      0xe800000000	                          call 0x4002357	       960	bisect.c	FUNCTION_35	CALL_8
0x4002357	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       961	bisect.c	FUNCTION_35	CALL_9
0x400235e	    0x488d9508f7ff	                  lea rdx, [rbp - 0x8f8]	       961	bisect.c	FUNCTION_35	CALL_9
0x4002365	          0x4889d6	                            mov rsi, rdx	       961	bisect.c	FUNCTION_35	CALL_9
0x4002368	          0x4889c7	                            mov rdi, rax	       961	bisect.c	FUNCTION_35	CALL_9
0x400236b	      0xe8d4f0ffff	                call sym.managed_skipped	       961	bisect.c	FUNCTION_35	CALL_9
0x4002370	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       961	bisect.c	FUNCTION_35	CALL_9
0x4002377	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       963	bisect.c	FUNCTION_35	IF_2
0x400237e	          0x4885c0	                           test rax, rax	       963	bisect.c	FUNCTION_35	IF_2
0x4002381	            0x755e	                           jne 0x40023e1	       963	bisect.c	FUNCTION_35	IF_2
0x4002383	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	       968	bisect.c	FUNCTION_35	IF_2	CALL_10
0x400238a	      0xbe00000000	                              mov esi, 0	       968	bisect.c	FUNCTION_35	IF_2	CALL_10
0x400238f	          0x4889c7	                            mov rdi, rax	       968	bisect.c	FUNCTION_35	IF_2	CALL_10
0x4002392	      0xe8e5f2ffff	        call sym.exit_if_skipped_commits	       968	bisect.c	FUNCTION_35	IF_2	CALL_10
0x4002397	    0x4c8b25000000	            mov r12, qword [0x0400239e] 	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x400239e	    0x488b1d000000	            mov rbx, qword [0x040023a5] 	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023a5	    0x488b05000000	            mov rax, qword [0x040023ac] 	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023ac	          0x4889c7	                            mov rdi, rax	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023af	      0xe800000000	                          call 0x40023b4	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023b4	          0x4989c5	                            mov r13, rax	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023b7	      0xbf00000000	                              mov edi, 0	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023bc	      0xe87edeffff	                               call sym.	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023c1	          0x4c89e1	                            mov rcx, r12	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023c4	          0x4889da	                            mov rdx, rbx	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023c7	          0x4c89ee	                            mov rsi, r13	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023ca	          0x4889c7	                            mov rdi, rax	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023cd	      0xb800000000	                              mov eax, 0	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023d2	      0xe800000000	                          call 0x40023d7	       970	bisect.c	FUNCTION_35	IF_2	CALL_12
0x40023d7	      0xbf01000000	                              mov edi, 1	       974	bisect.c	FUNCTION_35	IF_2	CALL_14
0x40023dc	      0xe800000000	                          call 0x40023e1	       974	bisect.c	FUNCTION_35	IF_2	CALL_14
0x40023e1	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       977	bisect.c	FUNCTION_35	IF_3
0x40023e7	            0x85c0	                           test eax, eax	       977	bisect.c	FUNCTION_35	IF_3
0x40023e9	            0x752e	                           jne 0x4002419	       977	bisect.c	FUNCTION_35	IF_3
0x40023eb	      0xbf00000000	                              mov edi, 0	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x40023f0	      0xe84adeffff	                               call sym.	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x40023f5	          0x4889c2	                            mov rdx, rax	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x40023f8	    0x488b05000000	            mov rax, qword [0x040023ff] 	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x40023ff	          0x4889d6	                            mov rsi, rdx	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x4002402	          0x4889c7	                            mov rdi, rax	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x4002405	      0xb800000000	                              mov eax, 0	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x400240a	      0xe800000000	                          call 0x400240f	       978	bisect.c	FUNCTION_35	IF_3	CALL_16
0x400240f	      0xbf04000000	                              mov edi, 4	       980	bisect.c	FUNCTION_35	IF_3	CALL_17
0x4002414	      0xe800000000	                          call 0x4002419	       980	bisect.c	FUNCTION_35	IF_3	CALL_17
0x4002419	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       983	bisect.c	FUNCTION_35
0x4002420	          0x488b00	                    mov rax, qword [rax]	       983	bisect.c	FUNCTION_35
0x4002423	        0x4883c004	                              add rax, 4	       983	bisect.c	FUNCTION_35
0x4002427	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       983	bisect.c	FUNCTION_35
0x400242e	    0x488b15000000	            mov rdx, qword [0x04002435] 	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x4002435	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x400243c	          0x4889d6	                            mov rsi, rdx	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x400243f	          0x4889c7	                            mov rdi, rax	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x4002442	      0xe87bdeffff	                         call sym.oidcmp	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x4002447	            0x85c0	                           test eax, eax	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x4002449	            0x756a	                           jne 0x40024b5	       985	bisect.c	FUNCTION_35	IF_4	CALL_18
0x400244b	    0x488b15000000	            mov rdx, qword [0x04002452] 	       986	bisect.c	FUNCTION_35	IF_4	CALL_19
0x4002452	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	       986	bisect.c	FUNCTION_35	IF_4	CALL_19
0x4002459	          0x4889d6	                            mov rsi, rdx	       986	bisect.c	FUNCTION_35	IF_4	CALL_19
0x400245c	          0x4889c7	                            mov rdi, rax	       986	bisect.c	FUNCTION_35	IF_4	CALL_19
0x400245f	      0xe818f2ffff	        call sym.exit_if_skipped_commits	       986	bisect.c	FUNCTION_35	IF_4	CALL_19
0x4002464	    0x488b1d000000	            mov rbx, qword [0x0400246b] 	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x400246b	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x4002472	          0x4889c7	                            mov rdi, rax	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x4002475	      0xe800000000	                          call 0x400247a	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x400247a	          0x4889da	                            mov rdx, rbx	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x400247d	          0x4889c6	                            mov rsi, rax	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x4002480	      0xbf00000000	                              mov edi, 0	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x4002485	      0xb800000000	                              mov eax, 0	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x400248a	      0xe800000000	                          call 0x400248f	       987	bisect.c	FUNCTION_35	IF_4	CALL_21
0x400248f	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x4002496	          0x488b10	                    mov rdx, qword [rax]	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x4002499	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x40024a0	          0x4889d6	                            mov rsi, rdx	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x40024a3	          0x4889c7	                            mov rdi, rax	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x40024a6	      0xe892fbffff	                 call sym.show_diff_tree	       989	bisect.c	FUNCTION_35	IF_4	CALL_22
0x40024ab	      0xbf0a000000	                            mov edi, 0xa	       991	bisect.c	FUNCTION_35	IF_4	CALL_23
0x40024b0	      0xe800000000	                          call 0x40024b5	       991	bisect.c	FUNCTION_35	IF_4	CALL_23
0x40024b5	    0x8b95fcf6ffff	            mov edx, dword [rbp - 0x904]	       994	bisect.c	FUNCTION_35
0x40024bb	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       994	bisect.c	FUNCTION_35
0x40024c1	            0x29c2	                            sub edx, eax	       994	bisect.c	FUNCTION_35
0x40024c3	            0x89d0	                            mov eax, edx	       994	bisect.c	FUNCTION_35
0x40024c5	          0x83e801	                              sub eax, 1	       994	bisect.c	FUNCTION_35
0x40024c8	    0x898500f7ffff	            mov dword [rbp - 0x900], eax	       994	bisect.c	FUNCTION_35
0x40024ce	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       995	bisect.c	FUNCTION_35	CALL_24
0x40024d4	            0x89c7	                            mov edi, eax	       995	bisect.c	FUNCTION_35	CALL_24
0x40024d6	      0xe800000000	                          call 0x40024db	       995	bisect.c	FUNCTION_35	CALL_24
0x40024db	    0x898504f7ffff	            mov dword [rbp - 0x8fc], eax	       995	bisect.c	FUNCTION_35	CALL_24
0x40024e1	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	       997	bisect.c	FUNCTION_35	CALL_26
0x40024e7	            0x4898	                                    cdqe	       997	bisect.c	FUNCTION_35	CALL_26
0x40024e9	          0x4889c2	                            mov rdx, rax	       997	bisect.c	FUNCTION_35	CALL_26
0x40024ec	      0xbe00000000	                              mov esi, 0	       997	bisect.c	FUNCTION_35	CALL_26
0x40024f1	      0xbf00000000	                              mov edi, 0	       997	bisect.c	FUNCTION_35	CALL_26
0x40024f6	      0xe870ddffff	                              call sym.Q	       997	bisect.c	FUNCTION_35	CALL_26
0x40024fb	          0x4889c2	                            mov rdx, rax	       997	bisect.c	FUNCTION_35	CALL_26
0x40024fe	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	       997	bisect.c	FUNCTION_35	CALL_26
0x4002504	            0x89c6	                            mov esi, eax	       997	bisect.c	FUNCTION_35	CALL_26
0x4002506	          0x4889d7	                            mov rdi, rdx	       997	bisect.c	FUNCTION_35	CALL_26
0x4002509	      0xb800000000	                              mov eax, 0	       997	bisect.c	FUNCTION_35	CALL_26
0x400250e	      0xe800000000	                          call 0x4002513	       997	bisect.c	FUNCTION_35	CALL_26
0x4002513	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	       997	bisect.c	FUNCTION_35	CALL_26
0x400251a	    0x8b8500f7ffff	            mov eax, dword [rbp - 0x900]	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002520	            0x4898	                                    cdqe	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002522	          0x4889c2	                            mov rdx, rax	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002525	      0xbe00000000	                              mov esi, 0	      1003	bisect.c	FUNCTION_35	CALL_28
0x400252a	      0xbf00000000	                              mov edi, 0	      1003	bisect.c	FUNCTION_35	CALL_28
0x400252f	      0xe837ddffff	                              call sym.Q	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002534	          0x4889c1	                            mov rcx, rax	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002537	    0x488b9518f7ff	            mov rdx, qword [rbp - 0x8e8]	      1003	bisect.c	FUNCTION_35	CALL_28
0x400253e	    0x8b8500f7ffff	            mov eax, dword [rbp - 0x900]	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002544	            0x89c6	                            mov esi, eax	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002546	          0x4889cf	                            mov rdi, rcx	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002549	      0xb800000000	                              mov eax, 0	      1003	bisect.c	FUNCTION_35	CALL_28
0x400254e	      0xe800000000	                          call 0x4002553	      1003	bisect.c	FUNCTION_35	CALL_28
0x4002553	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      1006	bisect.c	FUNCTION_35	CALL_29
0x400255a	          0x4889c7	                            mov rdi, rax	      1006	bisect.c	FUNCTION_35	CALL_29
0x400255d	      0xe800000000	                          call 0x4002562	      1006	bisect.c	FUNCTION_35	CALL_29
0x4002562	    0x8b95e4f6ffff	            mov edx, dword [rbp - 0x91c]	      1008	bisect.c	FUNCTION_35	CALL_30
0x4002568	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      1008	bisect.c	FUNCTION_35	CALL_30
0x400256f	            0x89d6	                            mov esi, edx	      1008	bisect.c	FUNCTION_35	CALL_30
0x4002571	          0x4889c7	                            mov rdi, rax	      1008	bisect.c	FUNCTION_35	CALL_30
0x4002574	      0xe8edf2ffff	                call sym.bisect_checkout	      1008	bisect.c	FUNCTION_35	CALL_30
0x4002579	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      1009	bisect.c	FUNCTION_35
0x400257d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1009	bisect.c	FUNCTION_35
0x4002586	            0x7405	                            je 0x400258d	      1009	bisect.c	FUNCTION_35
0x4002588	      0xe800000000	                          call 0x400258d	      1009	bisect.c	FUNCTION_35
0x400258d	    0x4881c4080900	                          add rsp, 0x908	      1009	bisect.c	FUNCTION_35
0x4002594	              0x5b	                                 pop rbx	      1009	bisect.c	FUNCTION_35
0x4002595	            0x415c	                                 pop r12	      1009	bisect.c	FUNCTION_35
0x4002597	            0x415d	                                 pop r13	      1009	bisect.c	FUNCTION_35
0x4002599	              0x5d	                                 pop rbp	      1009	bisect.c	FUNCTION_35
0x400259a	              0xc3	                                     ret	      1009	bisect.c	FUNCTION_35
strbuf_setlen	functions,0:CALL,2:DO,0:SWITCH,0:IF,2:ELSE,1:FOR,0:WHILE,0	43
0x4000102	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_70
0x4000103	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_70
0x4000106	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_70
0x400010a	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_70
0x400010e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_70
0x4000112	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_70	IF_1
0x4000116	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_70	IF_1
0x4000119	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_70	IF_1
0x400011c	            0x740d	                            je 0x400012b	       162	strbuf.h	FUNCTION_70	IF_1
0x400011e	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_70	IF_1
0x4000122	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_70	IF_1
0x4000125	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_70	IF_1
0x4000129	            0xeb05	                           jmp 0x4000130	       162	strbuf.h	FUNCTION_70	IF_1
0x400012b	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_70	IF_1
0x4000130	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_70	IF_1
0x4000134	            0x730f	                           jae 0x4000145	       162	strbuf.h	FUNCTION_70	IF_1
0x4000136	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_70	CALL_1
0x400013b	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_70	CALL_1
0x4000140	      0xe800000000	                          call 0x4000145	       163	strbuf.h	FUNCTION_70	CALL_1
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_70
0x4000149	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_70
0x400014d	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_70
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_70	IF_2
0x4000155	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_70	IF_2
0x4000159	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_70	IF_2
0x400015f	            0x7414	                            je 0x4000175	       165	strbuf.h	FUNCTION_70	IF_2
0x4000161	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_70	IF_2
0x4000165	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_70	IF_2
0x4000169	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_70	IF_2
0x400016d	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_70	IF_2
0x4000170	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_70	IF_2
0x4000173	            0xeb24	                           jmp 0x4000199	       169	strbuf.h	FUNCTION_70
0x4000175	     0xfb605000000	           movzx eax, byte [0x0400017c] 	       168	strbuf.h	FUNCTION_70	CALL_2
0x400017c	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_70	CALL_2
0x400017e	            0x7419	                            je 0x4000199	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000180	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000185	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_70	CALL_2
0x400018a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x400018f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000194	      0xe800000000	                          call 0x4000199	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000199	              0x90	                                     nop	       169	strbuf.h	FUNCTION_70
0x400019a	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_70
0x400019b	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_70
read_bisect_terms	functions,0:CALL,9:DO,0:SWITCH,0:IF,2:ELSE,2:FOR,0:WHILE,0	73
0x4002133	              0x55	                                push rbp	       910	bisect.c	FUNCTION_34
0x4002134	          0x4889e5	                            mov rbp, rsp	       910	bisect.c	FUNCTION_34
0x4002137	        0x4883ec40	                           sub rsp, 0x40	       910	bisect.c	FUNCTION_34
0x400213b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       910	bisect.c	FUNCTION_34
0x400213f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       910	bisect.c	FUNCTION_34
0x4002143	    0x64488b042528	                mov rax, qword fs:[0x28]	       910	bisect.c	FUNCTION_34
0x400214c	        0x488945f8	                mov qword [rbp - 8], rax	       910	bisect.c	FUNCTION_34
0x4002150	            0x31c0	                            xor eax, eax	       910	bisect.c	FUNCTION_34
0x4002152	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       911	bisect.c	FUNCTION_34
0x400215a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       911	bisect.c	FUNCTION_34
0x4002162	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       911	bisect.c	FUNCTION_34
0x400216a	      0xe897edffff	          call sym.git_path_bisect_terms	       912	bisect.c	FUNCTION_34	CALL_1
0x400216f	        0x488945d0	             mov qword [rbp - 0x30], rax	       912	bisect.c	FUNCTION_34	CALL_1
0x4002173	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       913	bisect.c	FUNCTION_34
0x4002177	      0xbe00000000	                              mov esi, 0	       913	bisect.c	FUNCTION_34
0x400217c	          0x4889c7	                            mov rdi, rax	       913	bisect.c	FUNCTION_34
0x400217f	      0xe800000000	                          call 0x4002184	       913	bisect.c	FUNCTION_34
0x4002184	        0x488945d8	             mov qword [rbp - 0x28], rax	       913	bisect.c	FUNCTION_34
0x4002188	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       915	bisect.c	FUNCTION_34	IF_1
0x400218d	            0x7548	                           jne 0x40021d7	       915	bisect.c	FUNCTION_34	IF_1
0x400218f	      0xe800000000	                          call 0x4002194	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x4002194	            0x8b00	                    mov eax, dword [rax]	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x4002196	          0x83f802	                              cmp eax, 2	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x4002199	            0x751b	                           jne 0x40021b6	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x400219b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       917	bisect.c	FUNCTION_34	IF_1	IF_2
0x400219f	    0x48c700000000	                      mov qword [rax], 0	       917	bisect.c	FUNCTION_34	IF_1	IF_2
0x40021a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x40021aa	    0x48c700000000	                      mov qword [rax], 0	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x40021b1	      0xe995000000	                           jmp 0x400224b	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x40021b6	      0xbf00000000	                              mov edi, 0	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021bb	      0xe87fe0ffff	                               call sym.	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021c0	          0x4889c2	                            mov rdx, rax	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021c7	          0x4889c6	                            mov rsi, rax	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021ca	          0x4889d7	                            mov rdi, rdx	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021cd	      0xb800000000	                              mov eax, 0	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021d2	      0xe800000000	                          call 0x40021d7	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40021d7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x40021db	        0x488d45e0	                   lea rax, [rbp - 0x20]	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x40021df	          0x4889d6	                            mov rsi, rdx	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x40021e2	          0x4889c7	                            mov rdi, rax	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x40021e5	      0xe800000000	                          call 0x40021ea	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x40021ea	        0x488d45e0	                   lea rax, [rbp - 0x20]	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x40021ee	      0xbe00000000	                              mov esi, 0	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x40021f3	          0x4889c7	                            mov rdi, rax	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x40021f6	      0xe800000000	                          call 0x40021fb	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x40021fb	          0x4889c2	                            mov rdx, rax	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x40021fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x4002202	          0x488910	                    mov qword [rax], rdx	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x4002205	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4002209	        0x488d45e0	                   lea rax, [rbp - 0x20]	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x400220d	          0x4889d6	                            mov rsi, rdx	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4002210	          0x4889c7	                            mov rdi, rax	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4002213	      0xe800000000	                          call 0x4002218	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4002218	        0x488d45e0	                   lea rax, [rbp - 0x20]	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x400221c	      0xbe00000000	                              mov esi, 0	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4002221	          0x4889c7	                            mov rdi, rax	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4002224	      0xe800000000	                          call 0x4002229	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4002229	          0x4889c2	                            mov rdx, rax	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x400222c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4002230	          0x488910	                    mov qword [rax], rdx	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4002233	        0x488d45e0	                   lea rax, [rbp - 0x20]	       929	bisect.c	FUNCTION_34	CALL_8
0x4002237	          0x4889c7	                            mov rdi, rax	       929	bisect.c	FUNCTION_34	CALL_8
0x400223a	      0xe800000000	                          call 0x400223f	       929	bisect.c	FUNCTION_34	CALL_8
0x400223f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       930	bisect.c	FUNCTION_34	CALL_9
0x4002243	          0x4889c7	                            mov rdi, rax	       930	bisect.c	FUNCTION_34	CALL_9
0x4002246	      0xe800000000	                          call 0x400224b	       930	bisect.c	FUNCTION_34	CALL_9
0x400224b	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	bisect.c	FUNCTION_34
0x400224f	    0x644833042528	                xor rax, qword fs:[0x28]	       931	bisect.c	FUNCTION_34
0x4002258	            0x7405	                            je 0x400225f	       931	bisect.c	FUNCTION_34
0x400225a	      0xe800000000	                          call 0x400225f	       931	bisect.c	FUNCTION_34
0x400225f	              0xc9	                                   leave	       931	bisect.c	FUNCTION_34
0x4002260	              0xc3	                                     ret	       931	bisect.c	FUNCTION_34
check_merge_bases	functions,0:CALL,11:DO,0:SWITCH,0:IF,3:ELSE,3:FOR,1:WHILE,0	70
0x4001cf0	              0x55	                                push rbp	       797	bisect.c	FUNCTION_30
0x4001cf1	          0x4889e5	                            mov rbp, rsp	       797	bisect.c	FUNCTION_30
0x4001cf4	        0x4883ec20	                           sub rsp, 0x20	       797	bisect.c	FUNCTION_30
0x4001cf8	          0x897dec	             mov dword [rbp - 0x14], edi	       797	bisect.c	FUNCTION_30
0x4001cfb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       797	bisect.c	FUNCTION_30
0x4001cff	          0x8955e8	             mov dword [rbp - 0x18], edx	       797	bisect.c	FUNCTION_30
0x4001d02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d06	        0x488d5008	                      lea rdx, [rax + 8]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d0a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d0d	          0x8d48ff	                      lea ecx, [rax - 1]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d10	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d14	          0x488b00	                    mov rax, qword [rax]	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d17	            0x89ce	                            mov esi, ecx	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d19	          0x4889c7	                            mov rdi, rax	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d1c	      0xe800000000	                          call 0x4001d21	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d21	        0x488945f0	             mov qword [rbp - 0x10], rax	       800	bisect.c	FUNCTION_30	CALL_1
0x4001d25	      0xe9a4000000	                           jmp 0x4001dce	       802	bisect.c	FUNCTION_30	FOR_1
0x4001d2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       803	bisect.c	FUNCTION_30	FOR_1
0x4001d2e	          0x488b00	                    mov rax, qword [rax]	       803	bisect.c	FUNCTION_30	FOR_1
0x4001d31	        0x4883c004	                              add rax, 4	       803	bisect.c	FUNCTION_30	FOR_1
0x4001d35	        0x488945f8	                mov qword [rbp - 8], rax	       803	bisect.c	FUNCTION_30	FOR_1
0x4001d39	    0x488b15000000	            mov rdx, qword [0x04001d40] 	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d40	        0x488b45f8	                mov rax, qword [rbp - 8]	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d44	          0x4889d6	                            mov rsi, rdx	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d47	          0x4889c7	                            mov rdi, rax	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d4a	      0xe873e5ffff	                         call sym.oidcmp	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d4f	            0x85c0	                           test eax, eax	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d51	            0x7507	                           jne 0x4001d5a	       804	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4001d53	      0xe846fdffff	          call sym.handle_bad_merge_base	       805	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_3
0x4001d58	            0xeb68	                           jmp 0x4001dc2	       805	bisect.c	FUNCTION_30	FOR_1	IF_1	CALL_3
0x4001d5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d5e	          0x4889c6	                            mov rsi, rax	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d61	      0xbf00000000	                              mov edi, 0	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d66	      0xe800000000	                          call 0x4001d6b	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d6b	            0x85c0	                           test eax, eax	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d6d	            0x7952	                           jns 0x4001dc1	       806	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2	CALL_4
0x4001d6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d73	          0x4889c6	                            mov rsi, rax	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d76	      0xbf00000000	                              mov edi, 0	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d7b	      0xe800000000	                          call 0x4001d80	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d80	            0x85c0	                           test eax, eax	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d82	            0x780e	                            js 0x4001d92	       808	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_5
0x4001d84	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_6
0x4001d88	          0x4889c7	                            mov rdi, rax	       809	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_6
0x4001d8b	      0xe8cffeffff	      call sym.handle_skipped_merge_base	       809	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_6
0x4001d90	            0xeb30	                           jmp 0x4001dc2	       809	bisect.c	FUNCTION_30	FOR_1	ELSE_2	IF_3	CALL_6
0x4001d92	      0xbf00000000	                              mov edi, 0	       811	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_8
0x4001d97	      0xe8a3e4ffff	                               call sym.	       811	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_8
0x4001d9c	          0x4889c7	                            mov rdi, rax	       811	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_8
0x4001d9f	      0xb800000000	                              mov eax, 0	       811	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_8
0x4001da4	      0xe800000000	                          call 0x4001da9	       811	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_8
0x4001da9	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001dac	        0x488b45f8	                mov rax, qword [rbp - 8]	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001db0	            0x89d6	                            mov esi, edx	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001db2	          0x4889c7	                            mov rdi, rax	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001db5	      0xe8acfaffff	                call sym.bisect_checkout	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001dba	            0x89c7	                            mov edi, eax	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001dbc	      0xe800000000	                          call 0x4001dc1	       812	bisect.c	FUNCTION_30	FOR_1	ELSE_3	CALL_10
0x4001dc1	              0x90	                                     nop	       807	bisect.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x4001dc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       802	bisect.c	FUNCTION_30	FOR_1
0x4001dc6	        0x488b4008	                mov rax, qword [rax + 8]	       802	bisect.c	FUNCTION_30	FOR_1
0x4001dca	        0x488945f0	             mov qword [rbp - 0x10], rax	       802	bisect.c	FUNCTION_30	FOR_1
0x4001dce	      0x48837df000	               cmp qword [rbp - 0x10], 0	       802	bisect.c	FUNCTION_30	FOR_1
0x4001dd3	     0xf8551ffffff	                           jne 0x4001d2a	       802	bisect.c	FUNCTION_30	FOR_1
0x4001dd9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       816	bisect.c	FUNCTION_30	CALL_11
0x4001ddd	          0x4889c7	                            mov rdi, rax	       816	bisect.c	FUNCTION_30	CALL_11
0x4001de0	      0xe800000000	                          call 0x4001de5	       816	bisect.c	FUNCTION_30	CALL_11
0x4001de5	              0x90	                                     nop	       817	bisect.c	FUNCTION_30
0x4001de6	              0xc9	                                   leave	       817	bisect.c	FUNCTION_30
0x4001de7	              0xc3	                                     ret	       817	bisect.c	FUNCTION_30
best_bisection	functions,0:CALL,1:DO,0:SWITCH,0:IF,3:ELSE,0:FOR,1:WHILE,0	49
0x4000556	              0x55	                                push rbp	       162	bisect.c	FUNCTION_7
0x4000557	          0x4889e5	                            mov rbp, rsp	       162	bisect.c	FUNCTION_7
0x400055a	        0x4883ec30	                           sub rsp, 0x30	       162	bisect.c	FUNCTION_7
0x400055e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       162	bisect.c	FUNCTION_7
0x4000562	          0x8975d4	             mov dword [rbp - 0x2c], esi	       162	bisect.c	FUNCTION_7
0x4000565	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       164	bisect.c	FUNCTION_7
0x400056c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       166	bisect.c	FUNCTION_7
0x4000570	        0x488945f8	                mov qword [rbp - 8], rax	       166	bisect.c	FUNCTION_7
0x4000574	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	bisect.c	FUNCTION_7	FOR_1
0x4000578	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	bisect.c	FUNCTION_7	FOR_1
0x400057c	            0xeb66	                           jmp 0x40005e4	       167	bisect.c	FUNCTION_7	FOR_1
0x400057e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	bisect.c	FUNCTION_7	FOR_1
0x4000582	          0x488b00	                    mov rax, qword [rax]	       169	bisect.c	FUNCTION_7	FOR_1
0x4000585	            0x8b00	                    mov eax, dword [rax]	       169	bisect.c	FUNCTION_7	FOR_1
0x4000587	          0xc1e804	                              shr eax, 4	       169	bisect.c	FUNCTION_7	FOR_1
0x400058a	      0x25ffffff07	                      and eax, 0x7ffffff	       169	bisect.c	FUNCTION_7	FOR_1
0x400058f	          0x8945ec	             mov dword [rbp - 0x14], eax	       169	bisect.c	FUNCTION_7	FOR_1
0x4000592	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x4000595	          0x83e004	                              and eax, 4	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x4000598	            0x85c0	                           test eax, eax	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x400059a	            0x753b	                           jne 0x40005d7	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x400059c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	bisect.c	FUNCTION_7	FOR_1	CALL_1
0x40005a0	          0x4889c7	                            mov rdi, rax	       173	bisect.c	FUNCTION_7	FOR_1	CALL_1
0x40005a3	      0xe8d0feffff	                         call sym.weight	       173	bisect.c	FUNCTION_7	FOR_1	CALL_1
0x40005a8	          0x8945e8	             mov dword [rbp - 0x18], eax	       173	bisect.c	FUNCTION_7	FOR_1	CALL_1
0x40005ab	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005ae	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005b1	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005b4	            0x7d09	                           jge 0x40005bf	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005b6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       175	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005b9	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       175	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005bc	          0x8945e8	             mov dword [rbp - 0x18], eax	       175	bisect.c	FUNCTION_7	FOR_1	IF_2
0x40005bf	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005c2	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005c5	            0x7e11	                           jle 0x40005d8	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005cb	        0x488945f8	                mov qword [rbp - 8], rax	       177	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005cf	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       178	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005d2	          0x8945e4	             mov dword [rbp - 0x1c], eax	       178	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005d5	            0xeb01	                           jmp 0x40005d8	       178	bisect.c	FUNCTION_7	FOR_1	IF_3
0x40005d7	              0x90	                                     nop	       172	bisect.c	FUNCTION_7	FOR_1	IF_1
0x40005d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	bisect.c	FUNCTION_7	FOR_1
0x40005dc	        0x488b4008	                mov rax, qword [rax + 8]	       167	bisect.c	FUNCTION_7	FOR_1
0x40005e0	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	bisect.c	FUNCTION_7	FOR_1
0x40005e4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       167	bisect.c	FUNCTION_7	FOR_1
0x40005e9	            0x7593	                           jne 0x400057e	       167	bisect.c	FUNCTION_7	FOR_1
0x40005eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	bisect.c	FUNCTION_7
0x40005ef	              0xc9	                                   leave	       183	bisect.c	FUNCTION_7
0x40005f0	              0xc3	                                     ret	       183	bisect.c	FUNCTION_7
managed_skipped	functions,0:CALL,2:DO,0:SWITCH,0:IF,2:ELSE,0:FOR,0:WHILE,0	41
0x4001444	              0x55	                                push rbp	       606	bisect.c	FUNCTION_20
0x4001445	          0x4889e5	                            mov rbp, rsp	       606	bisect.c	FUNCTION_20
0x4001448	        0x4883ec20	                           sub rsp, 0x20	       606	bisect.c	FUNCTION_20
0x400144c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       606	bisect.c	FUNCTION_20
0x4001450	        0x488975e0	             mov qword [rbp - 0x20], rsi	       606	bisect.c	FUNCTION_20
0x4001454	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	bisect.c	FUNCTION_20
0x400145d	        0x488945f8	                mov qword [rbp - 8], rax	       606	bisect.c	FUNCTION_20
0x4001461	            0x31c0	                            xor eax, eax	       606	bisect.c	FUNCTION_20
0x4001463	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       609	bisect.c	FUNCTION_20
0x4001467	    0x48c700000000	                      mov qword [rax], 0	       609	bisect.c	FUNCTION_20
0x400146e	    0x8b0500000000	            mov eax, dword [0x04001474] 	       611	bisect.c	FUNCTION_20	IF_1
0x4001474	            0x85c0	                           test eax, eax	       611	bisect.c	FUNCTION_20	IF_1
0x4001476	            0x7506	                           jne 0x400147e	       611	bisect.c	FUNCTION_20	IF_1
0x4001478	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	bisect.c	FUNCTION_20	IF_1
0x400147c	            0xeb45	                           jmp 0x40014c3	       612	bisect.c	FUNCTION_20	IF_1
0x400147e	        0x488d4df4	                    lea rcx, [rbp - 0xc]	       614	bisect.c	FUNCTION_20	CALL_1
0x4001482	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       614	bisect.c	FUNCTION_20	CALL_1
0x4001486	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       614	bisect.c	FUNCTION_20	CALL_1
0x400148a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	bisect.c	FUNCTION_20	CALL_1
0x400148e	          0x4989c8	                             mov r8, rcx	       614	bisect.c	FUNCTION_20	CALL_1
0x4001491	          0x4889d1	                            mov rcx, rdx	       614	bisect.c	FUNCTION_20	CALL_1
0x4001494	      0xba00000000	                              mov edx, 0	       614	bisect.c	FUNCTION_20	CALL_1
0x4001499	          0x4889c7	                            mov rdi, rax	       614	bisect.c	FUNCTION_20	CALL_1
0x400149c	      0xe800000000	                          call 0x40014a1	       614	bisect.c	FUNCTION_20	CALL_1
0x40014a1	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	bisect.c	FUNCTION_20	CALL_1
0x40014a5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       616	bisect.c	FUNCTION_20	IF_2
0x40014a8	            0x85c0	                           test eax, eax	       616	bisect.c	FUNCTION_20	IF_2
0x40014aa	            0x7506	                           jne 0x40014b2	       616	bisect.c	FUNCTION_20	IF_2
0x40014ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       617	bisect.c	FUNCTION_20	IF_2
0x40014b0	            0xeb11	                           jmp 0x40014c3	       617	bisect.c	FUNCTION_20	IF_2
0x40014b2	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       619	bisect.c	FUNCTION_20	CALL_2
0x40014b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       619	bisect.c	FUNCTION_20	CALL_2
0x40014b9	            0x89d6	                            mov esi, edx	       619	bisect.c	FUNCTION_20	CALL_2
0x40014bb	          0x4889c7	                            mov rdi, rax	       619	bisect.c	FUNCTION_20	CALL_2
0x40014be	      0xe8a7feffff	                      call sym.skip_away	       619	bisect.c	FUNCTION_20	CALL_2
0x40014c3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       620	bisect.c	FUNCTION_20
0x40014c7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       620	bisect.c	FUNCTION_20
0x40014d0	            0x7405	                            je 0x40014d7	       620	bisect.c	FUNCTION_20
0x40014d2	      0xe800000000	                          call 0x40014d7	       620	bisect.c	FUNCTION_20
0x40014d7	              0xc9	                                   leave	       620	bisect.c	FUNCTION_20
0x40014d8	              0xc3	                                     ret	       620	bisect.c	FUNCTION_20
best_bisection_sorted	functions,0:CALL,7:DO,0:SWITCH,0:IF,4:ELSE,0:FOR,2:WHILE,0	148
0x400065a	              0x55	                                push rbp	       202	bisect.c	FUNCTION_9
0x400065b	          0x4889e5	                            mov rbp, rsp	       202	bisect.c	FUNCTION_9
0x400065e	        0x4883ec60	                           sub rsp, 0x60	       202	bisect.c	FUNCTION_9
0x4000662	        0x48897da8	             mov qword [rbp - 0x58], rdi	       202	bisect.c	FUNCTION_9
0x4000666	          0x8975a4	             mov dword [rbp - 0x5c], esi	       202	bisect.c	FUNCTION_9
0x4000669	    0x64488b042528	                mov rax, qword fs:[0x28]	       202	bisect.c	FUNCTION_9
0x4000672	        0x488945f8	                mov qword [rbp - 8], rax	       202	bisect.c	FUNCTION_9
0x4000676	            0x31c0	                            xor eax, eax	       202	bisect.c	FUNCTION_9
0x4000678	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       204	bisect.c	FUNCTION_9	CALL_1
0x400067b	            0x4898	                                    cdqe	       204	bisect.c	FUNCTION_9	CALL_1
0x400067d	      0xbe10000000	                           mov esi, 0x10	       204	bisect.c	FUNCTION_9	CALL_1
0x4000682	          0x4889c7	                            mov rdi, rax	       204	bisect.c	FUNCTION_9	CALL_1
0x4000685	      0xe800000000	                          call 0x400068a	       204	bisect.c	FUNCTION_9	CALL_1
0x400068a	        0x488945d0	             mov qword [rbp - 0x30], rax	       204	bisect.c	FUNCTION_9	CALL_1
0x400068e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       205	bisect.c	FUNCTION_9
0x4000696	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       205	bisect.c	FUNCTION_9
0x400069e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       205	bisect.c	FUNCTION_9
0x40006a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       208	bisect.c	FUNCTION_9	FOR_1
0x40006aa	        0x488945c8	             mov qword [rbp - 0x38], rax	       208	bisect.c	FUNCTION_9	FOR_1
0x40006ae	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       208	bisect.c	FUNCTION_9	FOR_1
0x40006b5	      0xe98a000000	                           jmp 0x4000744	       208	bisect.c	FUNCTION_9	FOR_1
0x40006ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       210	bisect.c	FUNCTION_9	FOR_1
0x40006be	          0x488b00	                    mov rax, qword [rax]	       210	bisect.c	FUNCTION_9	FOR_1
0x40006c1	            0x8b00	                    mov eax, dword [rax]	       210	bisect.c	FUNCTION_9	FOR_1
0x40006c3	          0xc1e804	                              shr eax, 4	       210	bisect.c	FUNCTION_9	FOR_1
0x40006c6	      0x25ffffff07	                      and eax, 0x7ffffff	       210	bisect.c	FUNCTION_9	FOR_1
0x40006cb	          0x8945c4	             mov dword [rbp - 0x3c], eax	       210	bisect.c	FUNCTION_9	FOR_1
0x40006ce	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x40006d1	          0x83e004	                              and eax, 4	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x40006d4	            0x85c0	                           test eax, eax	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x40006d6	            0x755f	                           jne 0x4000737	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x40006d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       214	bisect.c	FUNCTION_9	FOR_1	CALL_2
0x40006dc	          0x4889c7	                            mov rdi, rax	       214	bisect.c	FUNCTION_9	FOR_1	CALL_2
0x40006df	      0xe894fdffff	                         call sym.weight	       214	bisect.c	FUNCTION_9	FOR_1	CALL_2
0x40006e4	          0x8945c0	             mov dword [rbp - 0x40], eax	       214	bisect.c	FUNCTION_9	FOR_1	CALL_2
0x40006e7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006ea	          0x2b45c0	             sub eax, dword [rbp - 0x40]	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006ed	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006f0	            0x7d09	                           jge 0x40006fb	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006f2	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       216	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006f5	          0x2b45c0	             sub eax, dword [rbp - 0x40]	       216	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006f8	          0x8945c0	             mov dword [rbp - 0x40], eax	       216	bisect.c	FUNCTION_9	FOR_1	IF_2
0x40006fb	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       217	bisect.c	FUNCTION_9	FOR_1
0x40006fe	            0x4898	                                    cdqe	       217	bisect.c	FUNCTION_9	FOR_1
0x4000700	        0x48c1e004	                              shl rax, 4	       217	bisect.c	FUNCTION_9	FOR_1
0x4000704	          0x4889c2	                            mov rdx, rax	       217	bisect.c	FUNCTION_9	FOR_1
0x4000707	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       217	bisect.c	FUNCTION_9	FOR_1
0x400070b	          0x4801c2	                            add rdx, rax	       217	bisect.c	FUNCTION_9	FOR_1
0x400070e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       217	bisect.c	FUNCTION_9	FOR_1
0x4000712	          0x488b00	                    mov rax, qword [rax]	       217	bisect.c	FUNCTION_9	FOR_1
0x4000715	          0x488902	                    mov qword [rdx], rax	       217	bisect.c	FUNCTION_9	FOR_1
0x4000718	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       218	bisect.c	FUNCTION_9	FOR_1
0x400071b	            0x4898	                                    cdqe	       218	bisect.c	FUNCTION_9	FOR_1
0x400071d	        0x48c1e004	                              shl rax, 4	       218	bisect.c	FUNCTION_9	FOR_1
0x4000721	          0x4889c2	                            mov rdx, rax	       218	bisect.c	FUNCTION_9	FOR_1
0x4000724	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       218	bisect.c	FUNCTION_9	FOR_1
0x4000728	          0x4801c2	                            add rdx, rax	       218	bisect.c	FUNCTION_9	FOR_1
0x400072b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       218	bisect.c	FUNCTION_9	FOR_1
0x400072e	          0x894208	                mov dword [rdx + 8], eax	       218	bisect.c	FUNCTION_9	FOR_1
0x4000731	        0x8345b801	               add dword [rbp - 0x48], 1	       219	bisect.c	FUNCTION_9	FOR_1
0x4000735	            0xeb01	                           jmp 0x4000738	       219	bisect.c	FUNCTION_9	FOR_1
0x4000737	              0x90	                                     nop	       213	bisect.c	FUNCTION_9	FOR_1	IF_1
0x4000738	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       208	bisect.c	FUNCTION_9	FOR_1
0x400073c	        0x488b4008	                mov rax, qword [rax + 8]	       208	bisect.c	FUNCTION_9	FOR_1
0x4000740	        0x488945c8	             mov qword [rbp - 0x38], rax	       208	bisect.c	FUNCTION_9	FOR_1
0x4000744	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       208	bisect.c	FUNCTION_9	FOR_1
0x4000749	     0xf856bffffff	                           jne 0x40006ba	       208	bisect.c	FUNCTION_9	FOR_1
0x400074f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       221	bisect.c	FUNCTION_9
0x4000752	          0x4863f0	                         movsxd rsi, eax	       221	bisect.c	FUNCTION_9
0x4000755	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       221	bisect.c	FUNCTION_9
0x4000759	      0xb900000000	                              mov ecx, 0	       221	bisect.c	FUNCTION_9
0x400075e	      0xba10000000	                           mov edx, 0x10	       221	bisect.c	FUNCTION_9
0x4000763	          0x4889c7	                            mov rdi, rax	       221	bisect.c	FUNCTION_9
0x4000766	      0xe827f9ffff	                     call sym.sane_qsort	       221	bisect.c	FUNCTION_9
0x400076b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       222	bisect.c	FUNCTION_9	FOR_2
0x400076f	        0x488945c8	             mov qword [rbp - 0x38], rax	       222	bisect.c	FUNCTION_9	FOR_2
0x4000773	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       222	bisect.c	FUNCTION_9	FOR_2
0x400077a	      0xe9a4000000	                           jmp 0x4000823	       222	bisect.c	FUNCTION_9	FOR_2
0x400077f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       223	bisect.c	FUNCTION_9	FOR_2
0x4000782	            0x4898	                                    cdqe	       223	bisect.c	FUNCTION_9	FOR_2
0x4000784	        0x48c1e004	                              shl rax, 4	       223	bisect.c	FUNCTION_9	FOR_2
0x4000788	          0x4889c2	                            mov rdx, rax	       223	bisect.c	FUNCTION_9	FOR_2
0x400078b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	bisect.c	FUNCTION_9	FOR_2
0x400078f	          0x4801d0	                            add rax, rdx	       223	bisect.c	FUNCTION_9	FOR_2
0x4000792	          0x488b00	                    mov rax, qword [rax]	       223	bisect.c	FUNCTION_9	FOR_2
0x4000795	        0x488945d8	             mov qword [rbp - 0x28], rax	       223	bisect.c	FUNCTION_9	FOR_2
0x4000799	        0x488d45e0	                   lea rax, [rbp - 0x20]	       225	bisect.c	FUNCTION_9	FOR_2
0x400079d	      0xbe00000000	                              mov esi, 0	       225	bisect.c	FUNCTION_9	FOR_2
0x40007a2	          0x4889c7	                            mov rdi, rax	       225	bisect.c	FUNCTION_9	FOR_2
0x40007a5	      0xe858f9ffff	                  call sym.strbuf_setlen	       225	bisect.c	FUNCTION_9	FOR_2
0x40007aa	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007ad	            0x4898	                                    cdqe	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007af	        0x48c1e004	                              shl rax, 4	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007b3	          0x4889c2	                            mov rdx, rax	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007b6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007ba	          0x4801d0	                            add rax, rdx	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007bd	          0x8b5008	                mov edx, dword [rax + 8]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007c0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007c4	      0xbe00000000	                              mov esi, 0	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007c9	          0x4889c7	                            mov rdi, rax	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007cc	      0xb800000000	                              mov eax, 0	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007d1	      0xe800000000	                          call 0x40007d6	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x40007d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x40007da	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x40007de	          0x4889c6	                            mov rsi, rax	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x40007e1	      0xbf00000000	                              mov edi, 0	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x40007e6	      0xe800000000	                          call 0x40007eb	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x40007eb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       229	bisect.c	FUNCTION_9	FOR_2
0x40007ee	            0x4898	                                    cdqe	       229	bisect.c	FUNCTION_9	FOR_2
0x40007f0	        0x48c1e004	                              shl rax, 4	       229	bisect.c	FUNCTION_9	FOR_2
0x40007f4	          0x4889c2	                            mov rdx, rax	       229	bisect.c	FUNCTION_9	FOR_2
0x40007f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	bisect.c	FUNCTION_9	FOR_2
0x40007fb	          0x4801d0	                            add rax, rdx	       229	bisect.c	FUNCTION_9	FOR_2
0x40007fe	          0x488b10	                    mov rdx, qword [rax]	       229	bisect.c	FUNCTION_9	FOR_2
0x4000801	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       229	bisect.c	FUNCTION_9	FOR_2
0x4000805	          0x488910	                    mov qword [rax], rdx	       229	bisect.c	FUNCTION_9	FOR_2
0x4000808	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x400080b	          0x83e801	                              sub eax, 1	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x400080e	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000811	            0x7e0c	                           jle 0x400081f	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000813	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       231	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000817	        0x488b4008	                mov rax, qword [rax + 8]	       231	bisect.c	FUNCTION_9	FOR_2	IF_3
0x400081b	        0x488945c8	             mov qword [rbp - 0x38], rax	       231	bisect.c	FUNCTION_9	FOR_2	IF_3
0x400081f	        0x8345bc01	               add dword [rbp - 0x44], 1	       222	bisect.c	FUNCTION_9	FOR_2
0x4000823	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       222	bisect.c	FUNCTION_9	FOR_2
0x4000826	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       222	bisect.c	FUNCTION_9	FOR_2
0x4000829	     0xf8c50ffffff	                            jl 0x400077f	       222	bisect.c	FUNCTION_9	FOR_2
0x400082f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       233	bisect.c	FUNCTION_9	IF_4
0x4000834	            0x741c	                            je 0x4000852	       233	bisect.c	FUNCTION_9	IF_4
0x4000836	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x400083a	        0x488b4008	                mov rax, qword [rax + 8]	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x400083e	          0x4889c7	                            mov rdi, rax	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x4000841	      0xe800000000	                          call 0x4000846	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x4000846	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	bisect.c	FUNCTION_9	IF_4
0x400084a	    0x48c740080000	                  mov qword [rax + 8], 0	       235	bisect.c	FUNCTION_9	IF_4
0x4000852	        0x488d45e0	                   lea rax, [rbp - 0x20]	       237	bisect.c	FUNCTION_9	CALL_6
0x4000856	          0x4889c7	                            mov rdi, rax	       237	bisect.c	FUNCTION_9	CALL_6
0x4000859	      0xe800000000	                          call 0x400085e	       237	bisect.c	FUNCTION_9	CALL_6
0x400085e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	bisect.c	FUNCTION_9	CALL_7
0x4000862	          0x4889c7	                            mov rdi, rax	       238	bisect.c	FUNCTION_9	CALL_7
0x4000865	      0xe800000000	                          call 0x400086a	       238	bisect.c	FUNCTION_9	CALL_7
0x400086a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       239	bisect.c	FUNCTION_9
0x400086e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       240	bisect.c	FUNCTION_9
0x4000872	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       240	bisect.c	FUNCTION_9
0x400087b	            0x7405	                            je 0x4000882	       240	bisect.c	FUNCTION_9
0x400087d	      0xe800000000	                          call 0x4000882	       240	bisect.c	FUNCTION_9
0x4000882	              0xc9	                                   leave	       240	bisect.c	FUNCTION_9
0x4000883	              0xc3	                                     ret	       240	bisect.c	FUNCTION_9
exit_if_skipped_commits	functions,0:CALL,8:DO,0:SWITCH,0:IF,2:ELSE,0:FOR,1:WHILE,0	42
0x400167c	              0x55	                                push rbp	       657	bisect.c	FUNCTION_23
0x400167d	          0x4889e5	                            mov rbp, rsp	       657	bisect.c	FUNCTION_23
0x4001680	        0x4883ec10	                           sub rsp, 0x10	       657	bisect.c	FUNCTION_23
0x4001684	        0x48897df8	                mov qword [rbp - 8], rdi	       657	bisect.c	FUNCTION_23
0x4001688	        0x488975f0	             mov qword [rbp - 0x10], rsi	       657	bisect.c	FUNCTION_23
0x400168c	      0x48837df800	                  cmp qword [rbp - 8], 0	       658	bisect.c	FUNCTION_23	IF_1
0x4001691	     0xf8485000000	                            je 0x400171c	       658	bisect.c	FUNCTION_23	IF_1
0x4001697	    0x488b05000000	            mov rax, qword [0x0400169e] 	       661	bisect.c	FUNCTION_23	CALL_1
0x400169e	          0x4889c6	                            mov rsi, rax	       661	bisect.c	FUNCTION_23	CALL_1
0x40016a1	      0xbf00000000	                              mov edi, 0	       661	bisect.c	FUNCTION_23	CALL_1
0x40016a6	      0xb800000000	                              mov eax, 0	       661	bisect.c	FUNCTION_23	CALL_1
0x40016ab	      0xe800000000	                          call 0x40016b0	       661	bisect.c	FUNCTION_23	CALL_1
0x40016b0	            0xeb27	                           jmp 0x40016d9	       664	bisect.c	FUNCTION_23	FOR_1
0x40016b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       665	bisect.c	FUNCTION_23	CALL_3
0x40016b6	          0x488b00	                    mov rax, qword [rax]	       665	bisect.c	FUNCTION_23	CALL_3
0x40016b9	        0x4883c004	                              add rax, 4	       665	bisect.c	FUNCTION_23	CALL_3
0x40016bd	          0x4889c7	                            mov rdi, rax	       665	bisect.c	FUNCTION_23	CALL_3
0x40016c0	      0xe800000000	                          call 0x40016c5	       665	bisect.c	FUNCTION_23	CALL_3
0x40016c5	          0x4889c7	                            mov rdi, rax	       665	bisect.c	FUNCTION_23	CALL_3
0x40016c8	      0xe800000000	                          call 0x40016cd	       665	bisect.c	FUNCTION_23	CALL_3
0x40016cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       664	bisect.c	FUNCTION_23	FOR_1
0x40016d1	        0x488b4008	                mov rax, qword [rax + 8]	       664	bisect.c	FUNCTION_23	FOR_1
0x40016d5	        0x488945f8	                mov qword [rbp - 8], rax	       664	bisect.c	FUNCTION_23	FOR_1
0x40016d9	      0x48837df800	                  cmp qword [rbp - 8], 0	       664	bisect.c	FUNCTION_23	FOR_1
0x40016de	            0x75d2	                           jne 0x40016b2	       664	bisect.c	FUNCTION_23	FOR_1
0x40016e0	      0x48837df000	               cmp qword [rbp - 0x10], 0	       667	bisect.c	FUNCTION_23	IF_2
0x40016e5	            0x7414	                            je 0x40016fb	       667	bisect.c	FUNCTION_23	IF_2
0x40016e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       668	bisect.c	FUNCTION_23	CALL_5
0x40016eb	          0x4889c7	                            mov rdi, rax	       668	bisect.c	FUNCTION_23	CALL_5
0x40016ee	      0xe800000000	                          call 0x40016f3	       668	bisect.c	FUNCTION_23	CALL_5
0x40016f3	          0x4889c7	                            mov rdi, rax	       668	bisect.c	FUNCTION_23	CALL_5
0x40016f6	      0xe800000000	                          call 0x40016fb	       668	bisect.c	FUNCTION_23	CALL_5
0x40016fb	      0xbf00000000	                              mov edi, 0	       669	bisect.c	FUNCTION_23	CALL_7
0x4001700	      0xe83aebffff	                               call sym.	       669	bisect.c	FUNCTION_23	CALL_7
0x4001705	          0x4889c7	                            mov rdi, rax	       669	bisect.c	FUNCTION_23	CALL_7
0x4001708	      0xb800000000	                              mov eax, 0	       669	bisect.c	FUNCTION_23	CALL_7
0x400170d	      0xe800000000	                          call 0x4001712	       669	bisect.c	FUNCTION_23	CALL_7
0x4001712	      0xbf02000000	                              mov edi, 2	       670	bisect.c	FUNCTION_23	CALL_8
0x4001717	      0xe800000000	                          call 0x400171c	       670	bisect.c	FUNCTION_23	CALL_8
0x400171c	              0x90	                                     nop	       659	bisect.c	FUNCTION_23	IF_1
0x400171d	              0xc9	                                   leave	       671	bisect.c	FUNCTION_23
0x400171e	              0xc3	                                     ret	       671	bisect.c	FUNCTION_23
Q_	functions,0:CALL,0:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	14
0x400026b	              0x55	                                push rbp	        59	gettext.h	FUNCTION_82
0x400026c	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_82
0x400026f	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_82
0x4000273	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_82
0x4000277	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_82
0x400027b	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_82
0x400027f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_82
0x4000283	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_82
0x4000287	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_82
0x400028b	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_82
0x400028e	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_82
0x4000291	      0xe800000000	                          call 0x4000296	        62	gettext.h	FUNCTION_82
0x4000296	              0xc9	                                   leave	        63	gettext.h	FUNCTION_82
0x4000297	              0xc3	                                     ret	        63	gettext.h	FUNCTION_82
join_sha1_array_hex	functions,0:CALL,4:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,1:WHILE,0	56
0x400104f	              0x55	                                push rbp	       470	bisect.c	FUNCTION_15
0x4001050	          0x4889e5	                            mov rbp, rsp	       470	bisect.c	FUNCTION_15
0x4001053	        0x4883ec40	                           sub rsp, 0x40	       470	bisect.c	FUNCTION_15
0x4001057	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       470	bisect.c	FUNCTION_15
0x400105b	            0x89f0	                            mov eax, esi	       470	bisect.c	FUNCTION_15
0x400105d	          0x8845c4	               mov byte [rbp - 0x3c], al	       470	bisect.c	FUNCTION_15
0x4001060	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	bisect.c	FUNCTION_15
0x4001069	        0x488945f8	                mov qword [rbp - 8], rax	       470	bisect.c	FUNCTION_15
0x400106d	            0x31c0	                            xor eax, eax	       470	bisect.c	FUNCTION_15
0x400106f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       471	bisect.c	FUNCTION_15
0x4001077	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       471	bisect.c	FUNCTION_15
0x400107f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       471	bisect.c	FUNCTION_15
0x4001087	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       474	bisect.c	FUNCTION_15	FOR_1
0x400108e	            0xeb5f	                           jmp 0x40010ef	       474	bisect.c	FUNCTION_15	FOR_1
0x4001090	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x4001094	          0x488b08	                    mov rcx, qword [rax]	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x4001097	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x400109a	          0x4863d0	                         movsxd rdx, eax	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x400109d	          0x4889d0	                            mov rax, rdx	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010a0	        0x48c1e002	                              shl rax, 2	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010a4	          0x4801d0	                            add rax, rdx	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010a7	        0x48c1e002	                              shl rax, 2	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010ab	          0x4801c8	                            add rax, rcx	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010ae	          0x4889c7	                            mov rdi, rax	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010b1	      0xe800000000	                          call 0x40010b6	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010b6	          0x4889c2	                            mov rdx, rax	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010b9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010bd	          0x4889d6	                            mov rsi, rdx	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010c0	          0x4889c7	                            mov rdi, rax	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010c3	      0xe842f1ffff	                  call sym.strbuf_addstr	       475	bisect.c	FUNCTION_15	FOR_1	CALL_2
0x40010c8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010cb	          0x8d5001	                      lea edx, [rax + 1]	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010d2	          0x8b4008	                mov eax, dword [rax + 8]	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010d5	            0x39c2	                            cmp edx, eax	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010d7	            0x7d12	                           jge 0x40010eb	       476	bisect.c	FUNCTION_15	FOR_1	IF_1
0x40010d9	         0xfbe55c4	            movsx edx, byte [rbp - 0x3c]	       477	bisect.c	FUNCTION_15	FOR_1	CALL_3
0x40010dd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       477	bisect.c	FUNCTION_15	FOR_1	CALL_3
0x40010e1	            0x89d6	                            mov esi, edx	       477	bisect.c	FUNCTION_15	FOR_1	CALL_3
0x40010e3	          0x4889c7	                            mov rdi, rax	       477	bisect.c	FUNCTION_15	FOR_1	CALL_3
0x40010e6	      0xe8b1f0ffff	                   call sym.strbuf_addch	       477	bisect.c	FUNCTION_15	FOR_1	CALL_3
0x40010eb	        0x8345dc01	               add dword [rbp - 0x24], 1	       474	bisect.c	FUNCTION_15	FOR_1
0x40010ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       474	bisect.c	FUNCTION_15	FOR_1
0x40010f3	          0x8b4008	                mov eax, dword [rax + 8]	       474	bisect.c	FUNCTION_15	FOR_1
0x40010f6	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       474	bisect.c	FUNCTION_15	FOR_1
0x40010f9	            0x7f95	                            jg 0x4001090	       474	bisect.c	FUNCTION_15	FOR_1
0x40010fb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       480	bisect.c	FUNCTION_15	CALL_4
0x40010ff	      0xbe00000000	                              mov esi, 0	       480	bisect.c	FUNCTION_15	CALL_4
0x4001104	          0x4889c7	                            mov rdi, rax	       480	bisect.c	FUNCTION_15	CALL_4
0x4001107	      0xe800000000	                          call 0x400110c	       480	bisect.c	FUNCTION_15	CALL_4
0x400110c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       481	bisect.c	FUNCTION_15
0x4001110	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       481	bisect.c	FUNCTION_15
0x4001119	            0x7405	                            je 0x4001120	       481	bisect.c	FUNCTION_15
0x400111b	      0xe800000000	                          call 0x4001120	       481	bisect.c	FUNCTION_15
0x4001120	              0xc9	                                   leave	       481	bisect.c	FUNCTION_15
0x4001121	              0xc3	                                     ret	       481	bisect.c	FUNCTION_15
log2i	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,1:WHILE,0	12
0x400259b	              0x55	                                push rbp	      1012	bisect.c	FUNCTION_36
0x400259c	          0x4889e5	                            mov rbp, rsp	      1012	bisect.c	FUNCTION_36
0x400259f	          0x897dec	             mov dword [rbp - 0x14], edi	      1012	bisect.c	FUNCTION_36
0x40025a2	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1013	bisect.c	FUNCTION_36
0x40025a9	            0xeb07	                           jmp 0x40025b2	      1015	bisect.c	FUNCTION_36	FOR_1
0x40025ab	        0x8345fc01	                  add dword [rbp - 4], 1	      1016	bisect.c	FUNCTION_36	FOR_1
0x40025af	          0xd17dec	               sar dword [rbp - 0x14], 1	      1015	bisect.c	FUNCTION_36	FOR_1
0x40025b2	        0x837dec01	               cmp dword [rbp - 0x14], 1	      1015	bisect.c	FUNCTION_36	FOR_1
0x40025b6	            0x7ff3	                            jg 0x40025ab	      1015	bisect.c	FUNCTION_36	FOR_1
0x40025b8	          0x8b45fc	                mov eax, dword [rbp - 4]	      1018	bisect.c	FUNCTION_36
0x40025bb	              0x5d	                                 pop rbp	      1019	bisect.c	FUNCTION_36
0x40025bc	              0xc3	                                     ret	      1019	bisect.c	FUNCTION_36
weight_set	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	12
0x400048f	              0x55	                                push rbp	        81	bisect.c	FUNCTION_4
0x4000490	          0x4889e5	                            mov rbp, rsp	        81	bisect.c	FUNCTION_4
0x4000493	        0x48897df8	                mov qword [rbp - 8], rdi	        81	bisect.c	FUNCTION_4
0x4000497	          0x8975f4	              mov dword [rbp - 0xc], esi	        81	bisect.c	FUNCTION_4
0x400049a	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	bisect.c	FUNCTION_4
0x400049e	          0x488b00	                    mov rax, qword [rax]	        82	bisect.c	FUNCTION_4
0x40004a1	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	bisect.c	FUNCTION_4
0x40004a5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        82	bisect.c	FUNCTION_4
0x40004a8	            0x8910	                    mov dword [rax], edx	        82	bisect.c	FUNCTION_4
0x40004aa	              0x90	                                     nop	        83	bisect.c	FUNCTION_4
0x40004ab	              0x5d	                                 pop rbp	        83	bisect.c	FUNCTION_4
0x40004ac	              0xc3	                                     ret	        83	bisect.c	FUNCTION_4
get_prn	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	12
0x40012b6	              0x55	                                push rbp	       554	bisect.c	FUNCTION_17
0x40012b7	          0x4889e5	                            mov rbp, rsp	       554	bisect.c	FUNCTION_17
0x40012ba	          0x897dfc	                mov dword [rbp - 4], edi	       554	bisect.c	FUNCTION_17
0x40012bd	          0x8b45fc	                mov eax, dword [rbp - 4]	       555	bisect.c	FUNCTION_17
0x40012c0	    0x69c06d4ec641	               imul eax, eax, 0x41c64e6d	       555	bisect.c	FUNCTION_17
0x40012c6	       0x539300000	                         add eax, 0x3039	       555	bisect.c	FUNCTION_17
0x40012cb	          0x8945fc	                mov dword [rbp - 4], eax	       555	bisect.c	FUNCTION_17
0x40012ce	          0x8b45fc	                mov eax, dword [rbp - 4]	       556	bisect.c	FUNCTION_17
0x40012d1	          0xc1e810	                           shr eax, 0x10	       556	bisect.c	FUNCTION_17
0x40012d4	      0x25ff7f0000	                         and eax, 0x7fff	       556	bisect.c	FUNCTION_17
0x40012d9	              0x5d	                                 pop rbp	       557	bisect.c	FUNCTION_17
0x40012da	              0xc3	                                     ret	       557	bisect.c	FUNCTION_17
hashcpy	functions,0:CALL,1:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	14
0x40002e7	              0x55	                                push rbp	       994	cache.h	FUNCTION_94
0x40002e8	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_94
0x40002eb	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_94
0x40002ef	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_94
0x40002f3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_94
0x40002f7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_94	CALL_1
0x40002fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_94	CALL_1
0x40002ff	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_94	CALL_1
0x4000304	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_94	CALL_1
0x4000307	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_94	CALL_1
0x400030a	      0xe800000000	                          call 0x400030f	       995	cache.h	FUNCTION_94	CALL_1
0x400030f	              0x90	                                     nop	       996	cache.h	FUNCTION_94
0x4000310	              0xc9	                                   leave	       996	cache.h	FUNCTION_94
0x4000311	              0xc3	                                     ret	       996	cache.h	FUNCTION_94
oidcpy	functions,0:CALL,1:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	13
0x4000312	              0x55	                                push rbp	       999	cache.h	FUNCTION_95
0x4000313	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_95
0x4000316	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_95
0x400031a	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_95
0x400031e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_95
0x4000322	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_95	CALL_1
0x4000326	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_95	CALL_1
0x400032a	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_95	CALL_1
0x400032d	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_95	CALL_1
0x4000330	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_95	CALL_1
0x4000335	              0x90	                                     nop	      1001	cache.h	FUNCTION_95
0x4000336	              0xc9	                                   leave	      1001	cache.h	FUNCTION_95
0x4000337	              0xc3	                                     ret	      1001	cache.h	FUNCTION_95
read_bisect_paths	functions,0:CALL,9:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,1	61
0x4000f64	              0x55	                                push rbp	       453	bisect.c	FUNCTION_14
0x4000f65	          0x4889e5	                            mov rbp, rsp	       453	bisect.c	FUNCTION_14
0x4000f68	              0x53	                                push rbx	       453	bisect.c	FUNCTION_14
0x4000f69	        0x4883ec48	                           sub rsp, 0x48	       453	bisect.c	FUNCTION_14
0x4000f6d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       453	bisect.c	FUNCTION_14
0x4000f71	    0x64488b042528	                mov rax, qword fs:[0x28]	       453	bisect.c	FUNCTION_14
0x4000f7a	        0x488945e8	             mov qword [rbp - 0x18], rax	       453	bisect.c	FUNCTION_14
0x4000f7e	            0x31c0	                            xor eax, eax	       453	bisect.c	FUNCTION_14
0x4000f80	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       454	bisect.c	FUNCTION_14
0x4000f88	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       454	bisect.c	FUNCTION_14
0x4000f90	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       454	bisect.c	FUNCTION_14
0x4000f98	      0xe84ffeffff	          call sym.git_path_bisect_names	       455	bisect.c	FUNCTION_14	CALL_1
0x4000f9d	        0x488945c0	             mov qword [rbp - 0x40], rax	       455	bisect.c	FUNCTION_14	CALL_1
0x4000fa1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       456	bisect.c	FUNCTION_14	CALL_2
0x4000fa5	      0xbe00000000	                              mov esi, 0	       456	bisect.c	FUNCTION_14	CALL_2
0x4000faa	          0x4889c7	                            mov rdi, rax	       456	bisect.c	FUNCTION_14	CALL_2
0x4000fad	      0xe800000000	                          call 0x4000fb2	       456	bisect.c	FUNCTION_14	CALL_2
0x4000fb2	        0x488945c8	             mov qword [rbp - 0x38], rax	       456	bisect.c	FUNCTION_14	CALL_2
0x4000fb6	            0xeb4b	                           jmp 0x4001003	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x4000fb8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       459	bisect.c	FUNCTION_14	WHILE_1	CALL_4
0x4000fbc	          0x4889c7	                            mov rdi, rax	       459	bisect.c	FUNCTION_14	WHILE_1	CALL_4
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       459	bisect.c	FUNCTION_14	WHILE_1	CALL_4
0x4000fc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fc8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fcc	          0x4889d6	                            mov rsi, rdx	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fcf	          0x4889c7	                            mov rdi, rax	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fd2	      0xe800000000	                          call 0x4000fd7	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fd7	            0x85c0	                           test eax, eax	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fd9	            0x7428	                            je 0x4001003	       460	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_5
0x4000fdb	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000fdf	      0xbf00000000	                              mov edi, 0	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000fe4	      0xe856f2ffff	                               call sym.	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000fe9	          0x4889c1	                            mov rcx, rax	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000fec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000ff0	          0x4889da	                            mov rdx, rbx	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000ff3	          0x4889c6	                            mov rsi, rax	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000ff6	          0x4889cf	                            mov rdi, rcx	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000ff9	      0xb800000000	                              mov eax, 0	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4000ffe	      0xe800000000	                          call 0x4001003	       461	bisect.c	FUNCTION_14	WHILE_1	IF_1	CALL_7
0x4001003	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x4001007	        0x488d45d0	                   lea rax, [rbp - 0x30]	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x400100b	          0x4889d6	                            mov rsi, rdx	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x400100e	          0x4889c7	                            mov rdi, rax	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x4001011	      0xe800000000	                          call 0x4001016	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x4001016	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x4001019	            0x759d	                           jne 0x4000fb8	       458	bisect.c	FUNCTION_14	WHILE_1	CALL_3
0x400101b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       465	bisect.c	FUNCTION_14	CALL_8
0x400101f	          0x4889c7	                            mov rdi, rax	       465	bisect.c	FUNCTION_14	CALL_8
0x4001022	      0xe800000000	                          call 0x4001027	       465	bisect.c	FUNCTION_14	CALL_8
0x4001027	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       466	bisect.c	FUNCTION_14	CALL_9
0x400102b	          0x4889c7	                            mov rdi, rax	       466	bisect.c	FUNCTION_14	CALL_9
0x400102e	      0xe800000000	                          call 0x4001033	       466	bisect.c	FUNCTION_14	CALL_9
0x4001033	              0x90	                                     nop	       467	bisect.c	FUNCTION_14
0x4001034	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       467	bisect.c	FUNCTION_14
0x4001038	    0x644833042528	                xor rax, qword fs:[0x28]	       467	bisect.c	FUNCTION_14
0x4001041	            0x7405	                            je 0x4001048	       467	bisect.c	FUNCTION_14
0x4001043	      0xe800000000	                          call 0x4001048	       467	bisect.c	FUNCTION_14
0x4001048	        0x4883c448	                           add rsp, 0x48	       467	bisect.c	FUNCTION_14
0x400104c	              0x5b	                                 pop rbx	       467	bisect.c	FUNCTION_14
0x400104d	              0x5d	                                 pop rbp	       467	bisect.c	FUNCTION_14
0x400104e	              0xc3	                                     ret	       467	bisect.c	FUNCTION_14
strbuf_avail	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	18
0x40000cc	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_69
0x40000cd	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_69
0x40000d0	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_69
0x40000d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x40000d8	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_69
0x40000db	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_69
0x40000de	            0x741b	                            je 0x40000fb	       141	strbuf.h	FUNCTION_69
0x40000e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x40000e4	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_69
0x40000e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_69
0x40000eb	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_69
0x40000ef	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_69
0x40000f2	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_69
0x40000f5	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_69
0x40000f9	            0xeb05	                           jmp 0x4000100	       141	strbuf.h	FUNCTION_69
0x40000fb	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_69
0x4000100	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_69
0x4000101	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_69
is_expected_rev	functions,0:CALL,8:DO,0:SWITCH,0:IF,3:ELSE,0:FOR,0:WHILE,0	67
0x400171f	              0x55	                                push rbp	       674	bisect.c	FUNCTION_24
0x4001720	          0x4889e5	                            mov rbp, rsp	       674	bisect.c	FUNCTION_24
0x4001723	    0x4881ecf00000	                           sub rsp, 0xf0	       674	bisect.c	FUNCTION_24
0x400172a	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       674	bisect.c	FUNCTION_24
0x4001731	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	bisect.c	FUNCTION_24
0x400173a	        0x488945f8	                mov qword [rbp - 8], rax	       674	bisect.c	FUNCTION_24
0x400173e	            0x31c0	                            xor eax, eax	       674	bisect.c	FUNCTION_24
0x4001740	      0xe8d6f6ffff	   call sym.git_path_bisect_expected_rev	       675	bisect.c	FUNCTION_24	CALL_1
0x4001745	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       675	bisect.c	FUNCTION_24	CALL_1
0x400174c	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       677	bisect.c	FUNCTION_24
0x4001757	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       677	bisect.c	FUNCTION_24
0x4001762	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       677	bisect.c	FUNCTION_24
0x400176d	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       679	bisect.c	FUNCTION_24
0x4001777	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x400177e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x4001785	          0x4889d6	                            mov rsi, rdx	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x4001788	          0x4889c7	                            mov rdi, rax	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x400178b	      0xe800000000	                          call 0x4001790	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x4001790	            0x85c0	                           test eax, eax	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x4001792	            0x7512	                           jne 0x40017a6	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x4001794	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x400179a	      0x2500f00000	                         and eax, 0xf000	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x400179f	      0x3d00800000	                         cmp eax, 0x8000	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x40017a4	            0x740a	                            je 0x40017b0	       681	bisect.c	FUNCTION_24	IF_1	CALL_2
0x40017a6	      0xb800000000	                              mov eax, 0	       682	bisect.c	FUNCTION_24	IF_1
0x40017ab	      0xe9a0000000	                           jmp 0x4001850	       682	bisect.c	FUNCTION_24	IF_1
0x40017b0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       684	bisect.c	FUNCTION_24	CALL_3
0x40017b7	      0xbe00000000	                              mov esi, 0	       684	bisect.c	FUNCTION_24	CALL_3
0x40017bc	          0x4889c7	                            mov rdi, rax	       684	bisect.c	FUNCTION_24	CALL_3
0x40017bf	      0xe800000000	                          call 0x40017c4	       684	bisect.c	FUNCTION_24	CALL_3
0x40017c4	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       684	bisect.c	FUNCTION_24	CALL_3
0x40017cb	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       685	bisect.c	FUNCTION_24	IF_2
0x40017d3	            0x7507	                           jne 0x40017dc	       685	bisect.c	FUNCTION_24	IF_2
0x40017d5	      0xb800000000	                              mov eax, 0	       686	bisect.c	FUNCTION_24	IF_2
0x40017da	            0xeb74	                           jmp 0x4001850	       686	bisect.c	FUNCTION_24	IF_2
0x40017dc	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017e3	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017ea	          0x4889d6	                            mov rsi, rdx	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017ed	          0x4889c7	                            mov rdi, rax	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017f0	      0xe800000000	                          call 0x40017f5	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017f5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017f8	            0x7432	                            je 0x400182c	       688	bisect.c	FUNCTION_24	IF_3	CALL_4
0x40017fa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       689	bisect.c	FUNCTION_24	CALL_6
0x4001801	          0x4889c7	                            mov rdi, rax	       689	bisect.c	FUNCTION_24	CALL_6
0x4001804	      0xe800000000	                          call 0x4001809	       689	bisect.c	FUNCTION_24	CALL_6
0x4001809	          0x4889c2	                            mov rdx, rax	       689	bisect.c	FUNCTION_24	CALL_6
0x400180c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       689	bisect.c	FUNCTION_24	CALL_6
0x4001813	          0x4889d6	                            mov rsi, rdx	       689	bisect.c	FUNCTION_24	CALL_6
0x4001816	          0x4889c7	                            mov rdi, rax	       689	bisect.c	FUNCTION_24	CALL_6
0x4001819	      0xe800000000	                          call 0x400181e	       689	bisect.c	FUNCTION_24	CALL_6
0x400181e	            0x85c0	                           test eax, eax	       689	bisect.c	FUNCTION_24	CALL_6
0x4001820	           0xf94c0	                                 sete al	       689	bisect.c	FUNCTION_24	CALL_6
0x4001823	           0xfb6c0	                           movzx eax, al	       689	bisect.c	FUNCTION_24	CALL_6
0x4001826	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       689	bisect.c	FUNCTION_24	CALL_6
0x400182c	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       691	bisect.c	FUNCTION_24	CALL_7
0x4001833	          0x4889c7	                            mov rdi, rax	       691	bisect.c	FUNCTION_24	CALL_7
0x4001836	      0xe800000000	                          call 0x400183b	       691	bisect.c	FUNCTION_24	CALL_7
0x400183b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       692	bisect.c	FUNCTION_24	CALL_8
0x4001842	          0x4889c7	                            mov rdi, rax	       692	bisect.c	FUNCTION_24	CALL_8
0x4001845	      0xe800000000	                          call 0x400184a	       692	bisect.c	FUNCTION_24	CALL_8
0x400184a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       694	bisect.c	FUNCTION_24
0x4001850	        0x488b4df8	                mov rcx, qword [rbp - 8]	       695	bisect.c	FUNCTION_24
0x4001854	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       695	bisect.c	FUNCTION_24
0x400185d	            0x7405	                            je 0x4001864	       695	bisect.c	FUNCTION_24
0x400185f	      0xe800000000	                          call 0x4001864	       695	bisect.c	FUNCTION_24
0x4001864	              0xc9	                                   leave	       695	bisect.c	FUNCTION_24
0x4001865	              0xc3	                                     ret	       695	bisect.c	FUNCTION_24
handle_skipped_merge_base	functions,0:CALL,6:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	39
0x4001c5f	              0x55	                                push rbp	       773	bisect.c	FUNCTION_29
0x4001c60	          0x4889e5	                            mov rbp, rsp	       773	bisect.c	FUNCTION_29
0x4001c63	              0x53	                                push rbx	       773	bisect.c	FUNCTION_29
0x4001c64	        0x4883ec38	                           sub rsp, 0x38	       773	bisect.c	FUNCTION_29
0x4001c68	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       773	bisect.c	FUNCTION_29
0x4001c6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       774	bisect.c	FUNCTION_29	CALL_1
0x4001c70	          0x4889c7	                            mov rdi, rax	       774	bisect.c	FUNCTION_29	CALL_1
0x4001c73	      0xe800000000	                          call 0x4001c78	       774	bisect.c	FUNCTION_29	CALL_1
0x4001c78	        0x488945d8	             mov qword [rbp - 0x28], rax	       774	bisect.c	FUNCTION_29	CALL_1
0x4001c7c	    0x488b05000000	            mov rax, qword [0x04001c83] 	       775	bisect.c	FUNCTION_29	CALL_2
0x4001c83	          0x4889c7	                            mov rdi, rax	       775	bisect.c	FUNCTION_29	CALL_2
0x4001c86	      0xe800000000	                          call 0x4001c8b	       775	bisect.c	FUNCTION_29	CALL_2
0x4001c8b	        0x488945e0	             mov qword [rbp - 0x20], rax	       775	bisect.c	FUNCTION_29	CALL_2
0x4001c8f	      0xbe20000000	                           mov esi, 0x20	       776	bisect.c	FUNCTION_29	CALL_3
0x4001c94	      0xbf00000000	                              mov edi, 0	       776	bisect.c	FUNCTION_29	CALL_3
0x4001c99	      0xe8b1f3ffff	            call sym.join_sha1_array_hex	       776	bisect.c	FUNCTION_29	CALL_3
0x4001c9e	        0x488945e8	             mov qword [rbp - 0x18], rax	       776	bisect.c	FUNCTION_29	CALL_3
0x4001ca2	    0x488b1d000000	            mov rbx, qword [0x04001ca9] 	       778	bisect.c	FUNCTION_29	CALL_5
0x4001ca9	      0xbf00000000	                              mov edi, 0	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cae	      0xe88ce5ffff	                               call sym.	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cb3	          0x4889c7	                            mov rdi, rax	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cb6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cba	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cbe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cc6	          0x4989f1	                             mov r9, rsi	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cc9	          0x4989c8	                             mov r8, rcx	       778	bisect.c	FUNCTION_29	CALL_5
0x4001ccc	          0x4889d9	                            mov rcx, rbx	       778	bisect.c	FUNCTION_29	CALL_5
0x4001ccf	          0x4889c6	                            mov rsi, rax	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cd2	      0xb800000000	                              mov eax, 0	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cd7	      0xe800000000	                          call 0x4001cdc	       778	bisect.c	FUNCTION_29	CALL_5
0x4001cdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       784	bisect.c	FUNCTION_29	CALL_6
0x4001ce0	          0x4889c7	                            mov rdi, rax	       784	bisect.c	FUNCTION_29	CALL_6
0x4001ce3	      0xe800000000	                          call 0x4001ce8	       784	bisect.c	FUNCTION_29	CALL_6
0x4001ce8	              0x90	                                     nop	       785	bisect.c	FUNCTION_29
0x4001ce9	        0x4883c438	                           add rsp, 0x38	       785	bisect.c	FUNCTION_29
0x4001ced	              0x5b	                                 pop rbx	       785	bisect.c	FUNCTION_29
0x4001cee	              0x5d	                                 pop rbp	       785	bisect.c	FUNCTION_29
0x4001cef	              0xc3	                                     ret	       785	bisect.c	FUNCTION_29
bisect_common	functions,0:CALL,3:DO,0:SWITCH,0:IF,2:ELSE,0:FOR,0:WHILE,0	24
0x400162e	              0x55	                                push rbp	       648	bisect.c	FUNCTION_22
0x400162f	          0x4889e5	                            mov rbp, rsp	       648	bisect.c	FUNCTION_22
0x4001632	        0x4883ec10	                           sub rsp, 0x10	       648	bisect.c	FUNCTION_22
0x4001636	        0x48897df8	                mov qword [rbp - 8], rdi	       648	bisect.c	FUNCTION_22
0x400163a	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	bisect.c	FUNCTION_22	IF_1	CALL_1
0x400163e	          0x4889c7	                            mov rdi, rax	       649	bisect.c	FUNCTION_22	IF_1	CALL_1
0x4001641	      0xe800000000	                          call 0x4001646	       649	bisect.c	FUNCTION_22	IF_1	CALL_1
0x4001646	            0x85c0	                           test eax, eax	       649	bisect.c	FUNCTION_22	IF_1	CALL_1
0x4001648	            0x740f	                            je 0x4001659	       649	bisect.c	FUNCTION_22	IF_1	CALL_1
0x400164a	      0xbf00000000	                              mov edi, 0	       650	bisect.c	FUNCTION_22	CALL_2
0x400164f	      0xb800000000	                              mov eax, 0	       650	bisect.c	FUNCTION_22	CALL_2
0x4001654	      0xe800000000	                          call 0x4001659	       650	bisect.c	FUNCTION_22	CALL_2
0x4001659	        0x488b45f8	                mov rax, qword [rbp - 8]	       651	bisect.c	FUNCTION_22	IF_2
0x400165d	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       651	bisect.c	FUNCTION_22	IF_2
0x4001661	          0x83e020	                           and eax, 0x20	       651	bisect.c	FUNCTION_22	IF_2
0x4001664	            0x84c0	                             test al, al	       651	bisect.c	FUNCTION_22	IF_2
0x4001666	            0x7411	                            je 0x4001679	       651	bisect.c	FUNCTION_22	IF_2
0x4001668	        0x488b45f8	                mov rax, qword [rbp - 8]	       652	bisect.c	FUNCTION_22	CALL_3
0x400166c	      0xbe00000000	                              mov esi, 0	       652	bisect.c	FUNCTION_22	CALL_3
0x4001671	          0x4889c7	                            mov rdi, rax	       652	bisect.c	FUNCTION_22	CALL_3
0x4001674	      0xe800000000	                          call 0x4001679	       652	bisect.c	FUNCTION_22	CALL_3
0x4001679	              0x90	                                     nop	       653	bisect.c	FUNCTION_22
0x400167a	              0xc9	                                   leave	       653	bisect.c	FUNCTION_22
0x400167b	              0xc3	                                     ret	       653	bisect.c	FUNCTION_22
bisect_checkout	functions,0:CALL,7:DO,0:SWITCH,0:IF,2:ELSE,1:FOR,0:WHILE,0	64
0x4001866	              0x55	                                push rbp	       698	bisect.c	FUNCTION_25
0x4001867	          0x4889e5	                            mov rbp, rsp	       698	bisect.c	FUNCTION_25
0x400186a	        0x4883ec60	                           sub rsp, 0x60	       698	bisect.c	FUNCTION_25
0x400186e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       698	bisect.c	FUNCTION_25
0x4001872	          0x8975a4	             mov dword [rbp - 0x5c], esi	       698	bisect.c	FUNCTION_25
0x4001875	    0x64488b042528	                mov rax, qword fs:[0x28]	       698	bisect.c	FUNCTION_25
0x400187e	        0x488945f8	                mov qword [rbp - 8], rax	       698	bisect.c	FUNCTION_25
0x4001882	            0x31c0	                            xor eax, eax	       698	bisect.c	FUNCTION_25
0x4001884	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       701	bisect.c	FUNCTION_25	CALL_2
0x4001888	          0x4889c7	                            mov rdi, rax	       701	bisect.c	FUNCTION_25	CALL_2
0x400188b	      0xe800000000	                          call 0x4001890	       701	bisect.c	FUNCTION_25	CALL_2
0x4001890	          0x488b10	                    mov rdx, qword [rax]	       701	bisect.c	FUNCTION_25	CALL_2
0x4001893	        0x488955c0	             mov qword [rbp - 0x40], rdx	       701	bisect.c	FUNCTION_25	CALL_2
0x4001897	        0x488b5008	                mov rdx, qword [rax + 8]	       701	bisect.c	FUNCTION_25	CALL_2
0x400189b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       701	bisect.c	FUNCTION_25	CALL_2
0x400189f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       701	bisect.c	FUNCTION_25	CALL_2
0x40018a3	        0x488955d0	             mov qword [rbp - 0x30], rdx	       701	bisect.c	FUNCTION_25	CALL_2
0x40018a7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       701	bisect.c	FUNCTION_25	CALL_2
0x40018ab	        0x488955d8	             mov qword [rbp - 0x28], rdx	       701	bisect.c	FUNCTION_25	CALL_2
0x40018af	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       701	bisect.c	FUNCTION_25	CALL_2
0x40018b3	        0x488955e0	             mov qword [rbp - 0x20], rdx	       701	bisect.c	FUNCTION_25	CALL_2
0x40018b7	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       701	bisect.c	FUNCTION_25	CALL_2
0x40018bb	          0x8845e8	               mov byte [rbp - 0x18], al	       701	bisect.c	FUNCTION_25	CALL_2
0x40018be	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       702	bisect.c	FUNCTION_25	CALL_3
0x40018c2	    0x41b901000000	                              mov r9d, 1	       702	bisect.c	FUNCTION_25	CALL_3
0x40018c8	    0x41b800000000	                              mov r8d, 0	       702	bisect.c	FUNCTION_25	CALL_3
0x40018ce	      0xb900000000	                              mov ecx, 0	       702	bisect.c	FUNCTION_25	CALL_3
0x40018d3	          0x4889c2	                            mov rdx, rax	       702	bisect.c	FUNCTION_25	CALL_3
0x40018d6	      0xbe00000000	                              mov esi, 0	       702	bisect.c	FUNCTION_25	CALL_3
0x40018db	      0xbf00000000	                              mov edi, 0	       702	bisect.c	FUNCTION_25	CALL_3
0x40018e0	      0xe800000000	                          call 0x40018e5	       702	bisect.c	FUNCTION_25	CALL_3
0x40018e5	        0x488d45c0	                   lea rax, [rbp - 0x40]	       704	bisect.c	FUNCTION_25
0x40018e9	    0x488905000000	            mov qword [0x040018f0], rax 	       704	bisect.c	FUNCTION_25
0x40018f0	        0x837da400	               cmp dword [rbp - 0x5c], 0	       705	bisect.c	FUNCTION_25	IF_1
0x40018f4	            0x7429	                            je 0x400191f	       705	bisect.c	FUNCTION_25	IF_1
0x40018f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x40018fa	    0x41b901000000	                              mov r9d, 1	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x4001900	    0x41b800000000	                              mov r8d, 0	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x4001906	      0xb900000000	                              mov ecx, 0	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x400190b	          0x4889c2	                            mov rdx, rax	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x400190e	      0xbe00000000	                              mov esi, 0	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x4001913	      0xbf00000000	                              mov edi, 0	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x4001918	      0xe800000000	                          call 0x400191d	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x400191d	            0xeb22	                           jmp 0x4001941	       706	bisect.c	FUNCTION_25	IF_1	CALL_4
0x400191f	      0xbe02000000	                              mov esi, 2	       710	bisect.c	FUNCTION_25	ELSE_1	CALL_5
0x4001924	      0xbf00000000	                              mov edi, 0	       710	bisect.c	FUNCTION_25	ELSE_1	CALL_5
0x4001929	      0xe800000000	                          call 0x400192e	       710	bisect.c	FUNCTION_25	ELSE_1	CALL_5
0x400192e	          0x8945bc	             mov dword [rbp - 0x44], eax	       710	bisect.c	FUNCTION_25	ELSE_1	CALL_5
0x4001931	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       711	bisect.c	FUNCTION_25	ELSE_1	IF_2
0x4001935	            0x740a	                            je 0x4001941	       711	bisect.c	FUNCTION_25	ELSE_1	IF_2
0x4001937	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       712	bisect.c	FUNCTION_25	ELSE_1	CALL_6
0x400193a	            0x89c7	                            mov edi, eax	       712	bisect.c	FUNCTION_25	ELSE_1	CALL_6
0x400193c	      0xe800000000	                          call 0x4001941	       712	bisect.c	FUNCTION_25	ELSE_1	CALL_6
0x4001941	        0x488d45c0	                   lea rax, [rbp - 0x40]	       715	bisect.c	FUNCTION_25
0x4001945	    0x488905000000	            mov qword [0x0400194c], rax 	       715	bisect.c	FUNCTION_25
0x400194c	      0xbe02000000	                              mov esi, 2	       716	bisect.c	FUNCTION_25	CALL_7
0x4001951	      0xbf00000000	                              mov edi, 0	       716	bisect.c	FUNCTION_25	CALL_7
0x4001956	      0xe800000000	                          call 0x400195b	       716	bisect.c	FUNCTION_25	CALL_7
0x400195b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       717	bisect.c	FUNCTION_25
0x400195f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       717	bisect.c	FUNCTION_25
0x4001968	            0x7405	                            je 0x400196f	       717	bisect.c	FUNCTION_25
0x400196a	      0xe800000000	                          call 0x400196f	       717	bisect.c	FUNCTION_25
0x400196f	              0xc9	                                   leave	       717	bisect.c	FUNCTION_25
0x4001970	              0xc3	                                     ret	       717	bisect.c	FUNCTION_25
check_good_are_ancestors_of_bad	functions,0:CALL,13:DO,0:SWITCH,0:IF,5:ELSE,1:FOR,0:WHILE,0	95
0x4001e99	              0x55	                                push rbp	       844	bisect.c	FUNCTION_32
0x4001e9a	          0x4889e5	                            mov rbp, rsp	       844	bisect.c	FUNCTION_32
0x4001e9d	              0x53	                                push rbx	       844	bisect.c	FUNCTION_32
0x4001e9e	    0x4881ecd80000	                           sub rsp, 0xd8	       844	bisect.c	FUNCTION_32
0x4001ea5	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       844	bisect.c	FUNCTION_32
0x4001eac	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	       844	bisect.c	FUNCTION_32
0x4001eb2	    0x64488b042528	                mov rax, qword fs:[0x28]	       844	bisect.c	FUNCTION_32
0x4001ebb	        0x488945e8	             mov qword [rbp - 0x18], rax	       844	bisect.c	FUNCTION_32
0x4001ebf	            0x31c0	                            xor eax, eax	       844	bisect.c	FUNCTION_32
0x4001ec1	      0xbf00000000	                              mov edi, 0	       845	bisect.c	FUNCTION_32	CALL_1
0x4001ec6	      0xb800000000	                              mov eax, 0	       845	bisect.c	FUNCTION_32	CALL_1
0x4001ecb	      0xe800000000	                          call 0x4001ed0	       845	bisect.c	FUNCTION_32	CALL_1
0x4001ed0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       845	bisect.c	FUNCTION_32	CALL_1
0x4001ed7	    0x488b05000000	            mov rax, qword [0x04001ede] 	       850	bisect.c	FUNCTION_32	IF_1
0x4001ede	          0x4885c0	                           test rax, rax	       850	bisect.c	FUNCTION_32	IF_1
0x4001ee1	            0x7521	                           jne 0x4001f04	       850	bisect.c	FUNCTION_32	IF_1
0x4001ee3	    0x488b1d000000	            mov rbx, qword [0x04001eea] 	       851	bisect.c	FUNCTION_32	CALL_3
0x4001eea	      0xbf00000000	                              mov edi, 0	       851	bisect.c	FUNCTION_32	CALL_3
0x4001eef	      0xe84be3ffff	                               call sym.	       851	bisect.c	FUNCTION_32	CALL_3
0x4001ef4	          0x4889de	                            mov rsi, rbx	       851	bisect.c	FUNCTION_32	CALL_3
0x4001ef7	          0x4889c7	                            mov rdi, rax	       851	bisect.c	FUNCTION_32	CALL_3
0x4001efa	      0xb800000000	                              mov eax, 0	       851	bisect.c	FUNCTION_32	CALL_3
0x4001eff	      0xe800000000	                          call 0x4001f04	       851	bisect.c	FUNCTION_32	CALL_3
0x4001f04	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f0b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f12	          0x4889d6	                            mov rsi, rdx	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f15	          0x4889c7	                            mov rdi, rax	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f18	      0xe800000000	                          call 0x4001f1d	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f1d	            0x85c0	                           test eax, eax	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f1f	            0x7516	                           jne 0x4001f37	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f21	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f27	      0x2500f00000	                         and eax, 0xf000	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f2c	      0x3d00800000	                         cmp eax, 0x8000	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f31	     0xf84d4000000	                            je 0x400200b	       854	bisect.c	FUNCTION_32	IF_2	CALL_4
0x4001f37	    0x8b0500000000	            mov eax, dword [0x04001f3d] 	       858	bisect.c	FUNCTION_32	IF_3
0x4001f3d	            0x85c0	                           test eax, eax	       858	bisect.c	FUNCTION_32	IF_3
0x4001f3f	     0xf84c9000000	                            je 0x400200e	       858	bisect.c	FUNCTION_32	IF_3
0x4001f45	    0x488d8538ffff	                   lea rax, [rbp - 0xc8]	       862	bisect.c	FUNCTION_32	CALL_5
0x4001f4c	          0x4889c7	                            mov rdi, rax	       862	bisect.c	FUNCTION_32	CALL_5
0x4001f4f	      0xe875faffff	       call sym.get_bad_and_good_commits	       862	bisect.c	FUNCTION_32	CALL_5
0x4001f54	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       862	bisect.c	FUNCTION_32	CALL_5
0x4001f5b	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f61	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f68	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f6f	          0x4889ce	                            mov rsi, rcx	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f72	            0x89c7	                            mov edi, eax	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f74	      0xe86ffeffff	                call sym.check_ancestors	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f79	            0x85c0	                           test eax, eax	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f7b	            0x741d	                            je 0x4001f9a	       863	bisect.c	FUNCTION_32	IF_4	CALL_6
0x4001f7d	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f83	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f89	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f90	          0x4889ce	                            mov rsi, rcx	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f93	            0x89c7	                            mov edi, eax	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f95	      0xe856fdffff	              call sym.check_merge_bases	       864	bisect.c	FUNCTION_32	CALL_7
0x4001f9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       865	bisect.c	FUNCTION_32	CALL_8
0x4001fa1	          0x4889c7	                            mov rdi, rax	       865	bisect.c	FUNCTION_32	CALL_8
0x4001fa4	      0xe800000000	                          call 0x4001fa9	       865	bisect.c	FUNCTION_32	CALL_8
0x4001fa9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fb0	      0xba80010000	                          mov edx, 0x180	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fb5	      0xbe41020000	                          mov esi, 0x241	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fba	          0x4889c7	                            mov rdi, rax	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fbd	      0xb800000000	                              mov eax, 0	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fc2	      0xe800000000	                          call 0x4001fc7	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fc7	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       868	bisect.c	FUNCTION_32	CALL_9
0x4001fcd	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       869	bisect.c	FUNCTION_32	IF_5
0x4001fd4	            0x7926	                           jns 0x4001ffc	       869	bisect.c	FUNCTION_32	IF_5
0x4001fd6	      0xbf00000000	                              mov edi, 0	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001fdb	      0xe85fe2ffff	                               call sym.	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001fe0	          0x4889c2	                            mov rdx, rax	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001fe3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001fea	          0x4889c6	                            mov rsi, rax	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001fed	          0x4889d7	                            mov rdi, rdx	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001ff0	      0xb800000000	                              mov eax, 0	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001ff5	      0xe800000000	                          call 0x4001ffa	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001ffa	            0xeb13	                           jmp 0x400200f	       870	bisect.c	FUNCTION_32	IF_5	CALL_11
0x4001ffc	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       873	bisect.c	FUNCTION_32	CALL_12
0x4002002	            0x89c7	                            mov edi, eax	       873	bisect.c	FUNCTION_32	CALL_12
0x4002004	      0xe800000000	                          call 0x4002009	       873	bisect.c	FUNCTION_32	CALL_12
0x4002009	            0xeb04	                           jmp 0x400200f	       873	bisect.c	FUNCTION_32	CALL_12
0x400200b	              0x90	                                     nop	       855	bisect.c	FUNCTION_32	IF_2
0x400200c	            0xeb01	                           jmp 0x400200f	       855	bisect.c	FUNCTION_32	IF_2
0x400200e	              0x90	                                     nop	       859	bisect.c	FUNCTION_32	IF_3
0x400200f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       875	bisect.c	FUNCTION_32	CALL_13
0x4002016	          0x4889c7	                            mov rdi, rax	       875	bisect.c	FUNCTION_32	CALL_13
0x4002019	      0xe800000000	                          call 0x400201e	       875	bisect.c	FUNCTION_32	CALL_13
0x400201e	              0x90	                                     nop	       876	bisect.c	FUNCTION_32
0x400201f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	bisect.c	FUNCTION_32
0x4002023	    0x644833042528	                xor rax, qword fs:[0x28]	       876	bisect.c	FUNCTION_32
0x400202c	            0x7405	                            je 0x4002033	       876	bisect.c	FUNCTION_32
0x400202e	      0xe800000000	                          call 0x4002033	       876	bisect.c	FUNCTION_32
0x4002033	    0x4881c4d80000	                           add rsp, 0xd8	       876	bisect.c	FUNCTION_32
0x400203a	              0x5b	                                 pop rbx	       876	bisect.c	FUNCTION_32
0x400203b	              0x5d	                                 pop rbp	       876	bisect.c	FUNCTION_32
0x400203c	              0xc3	                                     ret	       876	bisect.c	FUNCTION_32
find_bisection	functions,0:CALL,6:DO,0:SWITCH,0:IF,4:ELSE,0:FOR,1:WHILE,0	96
0x4000b5f	              0x55	                                push rbp	       369	bisect.c	FUNCTION_11
0x4000b60	          0x4889e5	                            mov rbp, rsp	       369	bisect.c	FUNCTION_11
0x4000b63	        0x4883ec60	                           sub rsp, 0x60	       369	bisect.c	FUNCTION_11
0x4000b67	        0x48897db8	             mov qword [rbp - 0x48], rdi	       369	bisect.c	FUNCTION_11
0x4000b6b	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	bisect.c	FUNCTION_11
0x4000b6f	        0x488955a8	             mov qword [rbp - 0x58], rdx	       369	bisect.c	FUNCTION_11
0x4000b73	          0x894da4	             mov dword [rbp - 0x5c], ecx	       369	bisect.c	FUNCTION_11
0x4000b76	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b7d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b80	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b83	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b8f	          0x488b00	                    mov rax, qword [rax]	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b92	        0x488945d0	             mov qword [rbp - 0x30], rax	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b96	            0xeb66	                           jmp 0x4000bfe	       380	bisect.c	FUNCTION_11	FOR_1
0x4000b98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       383	bisect.c	FUNCTION_11	FOR_1
0x4000b9c	          0x488b00	                    mov rax, qword [rax]	       383	bisect.c	FUNCTION_11	FOR_1
0x4000b9f	            0x8b00	                    mov eax, dword [rax]	       383	bisect.c	FUNCTION_11	FOR_1
0x4000ba1	          0xc1e804	                              shr eax, 4	       383	bisect.c	FUNCTION_11	FOR_1
0x4000ba4	      0x25ffffff07	                      and eax, 0x7ffffff	       383	bisect.c	FUNCTION_11	FOR_1
0x4000ba9	          0x8945cc	             mov dword [rbp - 0x34], eax	       383	bisect.c	FUNCTION_11	FOR_1
0x4000bac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       385	bisect.c	FUNCTION_11	FOR_1
0x4000bb0	        0x488b4008	                mov rax, qword [rax + 8]	       385	bisect.c	FUNCTION_11	FOR_1
0x4000bb4	        0x488945e8	             mov qword [rbp - 0x18], rax	       385	bisect.c	FUNCTION_11	FOR_1
0x4000bb8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000bbb	          0x83e002	                              and eax, 2	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000bbe	            0x85c0	                           test eax, eax	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000bc0	            0x740e	                            je 0x4000bd0	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000bc2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       387	bisect.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000bc6	          0x4889c7	                            mov rdi, rax	       387	bisect.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000bc9	      0xe800000000	                          call 0x4000bce	       387	bisect.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000bce	            0xeb26	                           jmp 0x4000bf6	       388	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000bd0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       390	bisect.c	FUNCTION_11	FOR_1
0x4000bd4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       390	bisect.c	FUNCTION_11	FOR_1
0x4000bd8	        0x48895008	                mov qword [rax + 8], rdx	       390	bisect.c	FUNCTION_11	FOR_1
0x4000bdc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	bisect.c	FUNCTION_11	FOR_1
0x4000be0	        0x488945e0	             mov qword [rbp - 0x20], rax	       391	bisect.c	FUNCTION_11	FOR_1
0x4000be4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       392	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000be7	          0x83e004	                              and eax, 4	       392	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000bea	            0x85c0	                           test eax, eax	       392	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000bec	            0x7504	                           jne 0x4000bf2	       392	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000bee	        0x8345c401	               add dword [rbp - 0x3c], 1	       393	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000bf2	        0x8345c801	               add dword [rbp - 0x38], 1	       394	bisect.c	FUNCTION_11	FOR_1
0x4000bf6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       382	bisect.c	FUNCTION_11	FOR_1
0x4000bfa	        0x488945d0	             mov qword [rbp - 0x30], rax	       382	bisect.c	FUNCTION_11	FOR_1
0x4000bfe	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       380	bisect.c	FUNCTION_11	FOR_1
0x4000c03	            0x7593	                           jne 0x4000b98	       380	bisect.c	FUNCTION_11	FOR_1
0x4000c05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       396	bisect.c	FUNCTION_11
0x4000c09	        0x488945f0	             mov qword [rbp - 0x10], rax	       396	bisect.c	FUNCTION_11
0x4000c0d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       399	bisect.c	FUNCTION_11
0x4000c11	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       399	bisect.c	FUNCTION_11
0x4000c14	            0x8910	                    mov dword [rax], edx	       399	bisect.c	FUNCTION_11
0x4000c16	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c19	            0x4898	                                    cdqe	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c1b	      0xbe04000000	                              mov esi, 4	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c20	          0x4889c7	                            mov rdi, rax	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c23	      0xe800000000	                          call 0x4000c28	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c28	        0x488945f8	                mov qword [rbp - 8], rax	       400	bisect.c	FUNCTION_11	CALL_2
0x4000c2c	          0x8b4da4	             mov ecx, dword [rbp - 0x5c]	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c2f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c33	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c3a	          0x4889c7	                            mov rdi, rax	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c3d	      0xe842fcffff	              call sym.do_find_bisection	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c42	        0x488945d8	             mov qword [rbp - 0x28], rax	       403	bisect.c	FUNCTION_11	CALL_3
0x4000c46	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       404	bisect.c	FUNCTION_11	IF_3
0x4000c4b	            0x744c	                            je 0x4000c99	       404	bisect.c	FUNCTION_11	IF_3
0x4000c4d	        0x837da400	               cmp dword [rbp - 0x5c], 0	       405	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c51	            0x7532	                           jne 0x4000c85	       405	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       406	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c57	          0x488b10	                    mov rdx, qword [rax]	       406	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       406	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c5e	          0x488910	                    mov qword [rax], rdx	       406	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000c65	        0x488b4008	                mov rax, qword [rax + 8]	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000c69	          0x4889c7	                            mov rdi, rax	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000c6c	      0xe800000000	                          call 0x4000c71	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000c71	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       408	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c75	        0x488945d8	             mov qword [rbp - 0x28], rax	       408	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       409	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c7d	    0x48c740080000	                  mov qword [rax + 8], 0	       409	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000c85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c89	          0x4889c7	                            mov rdi, rax	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c8c	      0xe8e7f7ffff	                         call sym.weight	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c91	            0x89c2	                            mov edx, eax	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c93	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c97	            0x8910	                    mov dword [rax], edx	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x4000c99	        0x488b45f8	                mov rax, qword [rbp - 8]	       413	bisect.c	FUNCTION_11	CALL_6
0x4000c9d	          0x4889c7	                            mov rdi, rax	       413	bisect.c	FUNCTION_11	CALL_6
0x4000ca0	      0xe800000000	                          call 0x4000ca5	       413	bisect.c	FUNCTION_11	CALL_6
0x4000ca5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       414	bisect.c	FUNCTION_11
0x4000ca9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       414	bisect.c	FUNCTION_11
0x4000cad	          0x488910	                    mov qword [rax], rdx	       414	bisect.c	FUNCTION_11
0x4000cb0	              0x90	                                     nop	       415	bisect.c	FUNCTION_11
0x4000cb1	              0xc9	                                   leave	       415	bisect.c	FUNCTION_11
0x4000cb2	              0xc3	                                     ret	       415	bisect.c	FUNCTION_11
filter_skipped	functions,0:CALL,1:DO,0:SWITCH,0:IF,10:ELSE,2:FOR,0:WHILE,1	107
0x4001122	              0x55	                                push rbp	       501	bisect.c	FUNCTION_16
0x4001123	          0x4889e5	                            mov rbp, rsp	       501	bisect.c	FUNCTION_16
0x4001126	        0x4883ec50	                           sub rsp, 0x50	       501	bisect.c	FUNCTION_16
0x400112a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       501	bisect.c	FUNCTION_16
0x400112e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       501	bisect.c	FUNCTION_16
0x4001132	          0x8955cc	             mov dword [rbp - 0x34], edx	       501	bisect.c	FUNCTION_16
0x4001135	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       501	bisect.c	FUNCTION_16
0x4001139	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       501	bisect.c	FUNCTION_16
0x400113d	    0x64488b042528	                mov rax, qword fs:[0x28]	       501	bisect.c	FUNCTION_16
0x4001146	        0x488945f8	                mov qword [rbp - 8], rax	       501	bisect.c	FUNCTION_16
0x400114a	            0x31c0	                            xor eax, eax	       501	bisect.c	FUNCTION_16
0x400114c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       502	bisect.c	FUNCTION_16
0x4001154	        0x488d45e0	                   lea rax, [rbp - 0x20]	       502	bisect.c	FUNCTION_16
0x4001158	        0x488945e8	             mov qword [rbp - 0x18], rax	       502	bisect.c	FUNCTION_16
0x400115c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       504	bisect.c	FUNCTION_16
0x4001160	    0x48c700000000	                      mov qword [rax], 0	       504	bisect.c	FUNCTION_16
0x4001167	      0x48837db800	               cmp qword [rbp - 0x48], 0	       506	bisect.c	FUNCTION_16	IF_1
0x400116c	            0x740a	                            je 0x4001178	       506	bisect.c	FUNCTION_16	IF_1
0x400116e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       507	bisect.c	FUNCTION_16	IF_1
0x4001172	    0xc70000000000	                      mov dword [rax], 0	       507	bisect.c	FUNCTION_16	IF_1
0x4001178	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       508	bisect.c	FUNCTION_16	IF_2
0x400117d	            0x740a	                            je 0x4001189	       508	bisect.c	FUNCTION_16	IF_2
0x400117f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       509	bisect.c	FUNCTION_16	IF_2
0x4001183	    0xc70000000000	                      mov dword [rax], 0	       509	bisect.c	FUNCTION_16	IF_2
0x4001189	    0x8b0500000000	            mov eax, dword [0x0400118f] 	       511	bisect.c	FUNCTION_16	IF_3
0x400118f	            0x85c0	                           test eax, eax	       511	bisect.c	FUNCTION_16	IF_3
0x4001191	     0xf85de000000	                           jne 0x4001275	       511	bisect.c	FUNCTION_16	IF_3
0x4001197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       512	bisect.c	FUNCTION_16	IF_3
0x400119b	      0xe900010000	                           jmp 0x40012a0	       512	bisect.c	FUNCTION_16	IF_3
0x40011a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       515	bisect.c	FUNCTION_16	WHILE_1
0x40011a4	        0x488b4008	                mov rax, qword [rax + 8]	       515	bisect.c	FUNCTION_16	WHILE_1
0x40011a8	        0x488945f0	             mov qword [rbp - 0x10], rax	       515	bisect.c	FUNCTION_16	WHILE_1
0x40011ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       516	bisect.c	FUNCTION_16	WHILE_1
0x40011b0	    0x48c740080000	                  mov qword [rax + 8], 0	       516	bisect.c	FUNCTION_16	WHILE_1
0x40011b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011bc	          0x488b00	                    mov rax, qword [rax]	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011bf	        0x4883c004	                              add rax, 4	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011c3	          0x4889c6	                            mov rsi, rax	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011c6	      0xbf00000000	                              mov edi, 0	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011cb	      0xe800000000	                          call 0x40011d0	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011d0	            0x85c0	                           test eax, eax	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011d2	            0x7834	                            js 0x4001208	       517	bisect.c	FUNCTION_16	WHILE_1	IF_4	CALL_1
0x40011d4	      0x48837db800	               cmp qword [rbp - 0x48], 0	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011d9	            0x7414	                            je 0x40011ef	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011db	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011df	            0x8b00	                    mov eax, dword [rax]	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011e1	            0x85c0	                           test eax, eax	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011e3	            0x750a	                           jne 0x40011ef	       518	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011e5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       519	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011e9	    0xc70001000000	                      mov dword [rax], 1	       519	bisect.c	FUNCTION_16	WHILE_1	IF_4	IF_5
0x40011ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       521	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x40011f3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       521	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x40011f7	          0x488910	                    mov qword [rax], rdx	       521	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x40011fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       522	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x40011fe	        0x4883c008	                              add rax, 8	       522	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x4001202	        0x488945d0	             mov qword [rbp - 0x30], rax	       522	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x4001206	            0xeb65	                           jmp 0x400126d	       522	bisect.c	FUNCTION_16	WHILE_1	IF_4
0x4001208	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       524	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6
0x400120c	            0x7517	                           jne 0x4001225	       524	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6
0x400120e	      0x48837db800	               cmp qword [rbp - 0x48], 0	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x4001213	            0x740a	                            je 0x400121f	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x4001215	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x4001219	            0x8b00	                    mov eax, dword [rax]	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x400121b	            0x85c0	                           test eax, eax	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x400121d	            0x7521	                           jne 0x4001240	       525	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x400121f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       526	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x4001223	            0xeb7b	                           jmp 0x40012a0	       526	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_6	IF_7
0x4001225	      0x48837db800	               cmp qword [rbp - 0x48], 0	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x400122a	            0x7414	                            je 0x4001240	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x400122c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x4001230	            0x8b00	                    mov eax, dword [rax]	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x4001232	            0x85c0	                           test eax, eax	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x4001234	            0x750a	                           jne 0x4001240	       527	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x4001236	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       529	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x400123a	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       529	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	ELSE_2	IF_8
0x4001240	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x4001244	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       532	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x4001248	          0x488910	                    mov qword [rax], rdx	       532	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x400124b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       533	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x400124f	        0x4883c008	                              add rax, 8	       533	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x4001253	        0x488945e8	             mov qword [rbp - 0x18], rax	       533	bisect.c	FUNCTION_16	WHILE_1	ELSE_1
0x4001257	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       534	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x400125c	            0x740f	                            je 0x400126d	       534	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x400125e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       535	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x4001262	            0x8b00	                    mov eax, dword [rax]	       535	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x4001264	          0x8d5001	                      lea edx, [rax + 1]	       535	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x4001267	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       535	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x400126b	            0x8910	                    mov dword [rax], edx	       535	bisect.c	FUNCTION_16	WHILE_1	ELSE_1	IF_9
0x400126d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       537	bisect.c	FUNCTION_16	WHILE_1
0x4001271	        0x488945d8	             mov qword [rbp - 0x28], rax	       537	bisect.c	FUNCTION_16	WHILE_1
0x4001275	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       514	bisect.c	FUNCTION_16	WHILE_1
0x400127a	     0xf8520ffffff	                           jne 0x40011a0	       514	bisect.c	FUNCTION_16	WHILE_1
0x4001280	      0x48837db800	               cmp qword [rbp - 0x48], 0	       540	bisect.c	FUNCTION_16	IF_10
0x4001285	            0x7415	                            je 0x400129c	       540	bisect.c	FUNCTION_16	IF_10
0x4001287	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	bisect.c	FUNCTION_16	IF_10
0x400128b	            0x8b00	                    mov eax, dword [rax]	       540	bisect.c	FUNCTION_16	IF_10
0x400128d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       540	bisect.c	FUNCTION_16	IF_10
0x4001290	            0x750a	                           jne 0x400129c	       540	bisect.c	FUNCTION_16	IF_10
0x4001292	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       541	bisect.c	FUNCTION_16	IF_10
0x4001296	    0xc70000000000	                      mov dword [rax], 0	       541	bisect.c	FUNCTION_16	IF_10
0x400129c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       543	bisect.c	FUNCTION_16
0x40012a0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       544	bisect.c	FUNCTION_16
0x40012a4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       544	bisect.c	FUNCTION_16
0x40012ad	            0x7405	                            je 0x40012b4	       544	bisect.c	FUNCTION_16
0x40012af	      0xe800000000	                          call 0x40012b4	       544	bisect.c	FUNCTION_16
0x40012b4	              0xc9	                                   leave	       544	bisect.c	FUNCTION_16
0x40012b5	              0xc3	                                     ret	       544	bisect.c	FUNCTION_16
halfway	functions,0:CALL,1:DO,0:SWITCH,1:IF,2:ELSE,0:FOR,0:WHILE,0	28
0x4000501	              0x55	                                push rbp	        99	bisect.c	FUNCTION_6
0x4000502	          0x4889e5	                            mov rbp, rsp	        99	bisect.c	FUNCTION_6
0x4000505	        0x4883ec10	                           sub rsp, 0x10	        99	bisect.c	FUNCTION_6
0x4000509	        0x48897df8	                mov qword [rbp - 8], rdi	        99	bisect.c	FUNCTION_6
0x400050d	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	bisect.c	FUNCTION_6
0x4000510	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	bisect.c	FUNCTION_6	IF_1
0x4000514	          0x488b00	                    mov rax, qword [rax]	       103	bisect.c	FUNCTION_6	IF_1
0x4000517	            0x8b00	                    mov eax, dword [rax]	       103	bisect.c	FUNCTION_6	IF_1
0x4000519	          0xc1e804	                              shr eax, 4	       103	bisect.c	FUNCTION_6	IF_1
0x400051c	      0x25ffffff07	                      and eax, 0x7ffffff	       103	bisect.c	FUNCTION_6	IF_1
0x4000521	          0x83e004	                              and eax, 4	       103	bisect.c	FUNCTION_6	IF_1
0x4000524	            0x85c0	                           test eax, eax	       103	bisect.c	FUNCTION_6	IF_1
0x4000526	            0x7407	                            je 0x400052f	       103	bisect.c	FUNCTION_6	IF_1
0x4000528	      0xb800000000	                              mov eax, 0	       104	bisect.c	FUNCTION_6	IF_1
0x400052d	            0xeb25	                           jmp 0x4000554	       104	bisect.c	FUNCTION_6	IF_1
0x400052f	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000533	          0x4889c7	                            mov rdi, rax	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000536	      0xe83dffffff	                         call sym.weight	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x400053b	             0x1c0	                            add eax, eax	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x400053d	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000540	          0x83c001	                              add eax, 1	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000543	          0x83f802	                              cmp eax, 2	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000546	            0x7707	                            ja 0x400054f	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000548	      0xb801000000	                              mov eax, 1	       113	bisect.c	FUNCTION_6	SWITCH_1
0x400054d	            0xeb05	                           jmp 0x4000554	       113	bisect.c	FUNCTION_6	SWITCH_1
0x400054f	      0xb800000000	                              mov eax, 0	       115	bisect.c	FUNCTION_6	SWITCH_1
0x4000554	              0xc9	                                   leave	       117	bisect.c	FUNCTION_6
0x4000555	              0xc3	                                     ret	       117	bisect.c	FUNCTION_6
estimate_bisect_steps	functions,0:CALL,2:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	32
0x40025d4	              0x55	                                push rbp	      1037	bisect.c	FUNCTION_38
0x40025d5	          0x4889e5	                            mov rbp, rsp	      1037	bisect.c	FUNCTION_38
0x40025d8	        0x4883ec18	                           sub rsp, 0x18	      1037	bisect.c	FUNCTION_38
0x40025dc	          0x897dec	             mov dword [rbp - 0x14], edi	      1037	bisect.c	FUNCTION_38
0x40025df	        0x837dec02	               cmp dword [rbp - 0x14], 2	      1040	bisect.c	FUNCTION_38	IF_1
0x40025e3	            0x7f07	                            jg 0x40025ec	      1040	bisect.c	FUNCTION_38	IF_1
0x40025e5	      0xb800000000	                              mov eax, 0	      1041	bisect.c	FUNCTION_38	IF_1
0x40025ea	            0xeb3d	                           jmp 0x4002629	      1041	bisect.c	FUNCTION_38	IF_1
0x40025ec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1043	bisect.c	FUNCTION_38	CALL_1
0x40025ef	            0x89c7	                            mov edi, eax	      1043	bisect.c	FUNCTION_38	CALL_1
0x40025f1	      0xe8a5ffffff	                          call sym.log2i	      1043	bisect.c	FUNCTION_38	CALL_1
0x40025f6	          0x8945f4	              mov dword [rbp - 0xc], eax	      1043	bisect.c	FUNCTION_38	CALL_1
0x40025f9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1044	bisect.c	FUNCTION_38	CALL_2
0x40025fc	            0x89c7	                            mov edi, eax	      1044	bisect.c	FUNCTION_38	CALL_2
0x40025fe	      0xe8baffffff	                          call sym.exp2i	      1044	bisect.c	FUNCTION_38	CALL_2
0x4002603	          0x8945f8	                mov dword [rbp - 8], eax	      1044	bisect.c	FUNCTION_38	CALL_2
0x4002606	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1045	bisect.c	FUNCTION_38
0x4002609	          0x2b45f8	                sub eax, dword [rbp - 8]	      1045	bisect.c	FUNCTION_38
0x400260c	          0x8945fc	                mov dword [rbp - 4], eax	      1045	bisect.c	FUNCTION_38
0x400260f	          0x8b55fc	                mov edx, dword [rbp - 4]	      1047	bisect.c	FUNCTION_38
0x4002612	            0x89d0	                            mov eax, edx	      1047	bisect.c	FUNCTION_38
0x4002614	             0x1c0	                            add eax, eax	      1047	bisect.c	FUNCTION_38
0x4002616	             0x1d0	                            add eax, edx	      1047	bisect.c	FUNCTION_38
0x4002618	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1047	bisect.c	FUNCTION_38
0x400261b	            0x7f08	                            jg 0x4002625	      1047	bisect.c	FUNCTION_38
0x400261d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1047	bisect.c	FUNCTION_38
0x4002620	          0x83e801	                              sub eax, 1	      1047	bisect.c	FUNCTION_38
0x4002623	            0xeb03	                           jmp 0x4002628	      1047	bisect.c	FUNCTION_38
0x4002625	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1047	bisect.c	FUNCTION_38
0x4002628	              0x90	                                     nop	      1047	bisect.c	FUNCTION_38
0x4002629	              0xc9	                                   leave	      1048	bisect.c	FUNCTION_38
0x400262a	              0xc3	                                     ret	      1048	bisect.c	FUNCTION_38
hashcmp	functions,0:CALL,1:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	13
0x4000298	              0x55	                                push rbp	       974	cache.h	FUNCTION_90
0x4000299	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_90
0x400029c	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_90
0x40002a0	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_90
0x40002a4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_90
0x40002a8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_90	CALL_1
0x40002ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_90	CALL_1
0x40002b0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_90	CALL_1
0x40002b5	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_90	CALL_1
0x40002b8	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_90	CALL_1
0x40002bb	      0xe800000000	                          call 0x40002c0	       975	cache.h	FUNCTION_90	CALL_1
0x40002c0	              0xc9	                                   leave	       976	cache.h	FUNCTION_90
0x40002c1	              0xc3	                                     ret	       976	cache.h	FUNCTION_90
count_interesting_parents	functions,0:CALL,0:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,1:WHILE,0	27
0x40004ad	              0x55	                                push rbp	        86	bisect.c	FUNCTION_5
0x40004ae	          0x4889e5	                            mov rbp, rsp	        86	bisect.c	FUNCTION_5
0x40004b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	bisect.c	FUNCTION_5
0x40004b5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        90	bisect.c	FUNCTION_5	FOR_1
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	bisect.c	FUNCTION_5	FOR_1
0x40004c0	        0x488b4030	            mov rax, qword [rax + 0x30] 	        90	bisect.c	FUNCTION_5	FOR_1
0x40004c4	        0x488945f8	                mov qword [rbp - 8], rax	        90	bisect.c	FUNCTION_5	FOR_1
0x40004c8	            0xeb2b	                           jmp 0x40004f5	        90	bisect.c	FUNCTION_5	FOR_1
0x40004ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004ce	          0x488b00	                    mov rax, qword [rax]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004d1	            0x8b00	                    mov eax, dword [rax]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004d3	          0xc1e804	                              shr eax, 4	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004d6	      0x25ffffff07	                      and eax, 0x7ffffff	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004db	          0x83e002	                              and eax, 2	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004de	            0x85c0	                           test eax, eax	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004e0	            0x7506	                           jne 0x40004e8	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004e2	        0x8345f401	                add dword [rbp - 0xc], 1	        93	bisect.c	FUNCTION_5	FOR_1
0x40004e6	            0xeb01	                           jmp 0x40004e9	        93	bisect.c	FUNCTION_5	FOR_1
0x40004e8	              0x90	                                     nop	        92	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40004e9	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	bisect.c	FUNCTION_5	FOR_1
0x40004ed	        0x488b4008	                mov rax, qword [rax + 8]	        90	bisect.c	FUNCTION_5	FOR_1
0x40004f1	        0x488945f8	                mov qword [rbp - 8], rax	        90	bisect.c	FUNCTION_5	FOR_1
0x40004f5	      0x48837df800	                  cmp qword [rbp - 8], 0	        90	bisect.c	FUNCTION_5	FOR_1
0x40004fa	            0x75ce	                           jne 0x40004ca	        90	bisect.c	FUNCTION_5	FOR_1
0x40004fc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        95	bisect.c	FUNCTION_5
0x40004ff	              0x5d	                                 pop rbp	        96	bisect.c	FUNCTION_5
0x4000500	              0xc3	                                     ret	        96	bisect.c	FUNCTION_5
bisect_rev_setup	functions,0:CALL,9:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,1:WHILE,0	82
0x40014d9	              0x55	                                push rbp	       625	bisect.c	FUNCTION_21
0x40014da	          0x4889e5	                            mov rbp, rsp	       625	bisect.c	FUNCTION_21
0x40014dd	        0x4883ec60	                           sub rsp, 0x60	       625	bisect.c	FUNCTION_21
0x40014e1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       625	bisect.c	FUNCTION_21
0x40014e5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       625	bisect.c	FUNCTION_21
0x40014e9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       625	bisect.c	FUNCTION_21
0x40014ed	        0x48894db0	             mov qword [rbp - 0x50], rcx	       625	bisect.c	FUNCTION_21
0x40014f1	        0x448945ac	             mov dword [rbp - 0x54], r8d	       625	bisect.c	FUNCTION_21
0x40014f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       625	bisect.c	FUNCTION_21
0x40014fe	        0x488945f8	                mov qword [rbp - 8], rax	       625	bisect.c	FUNCTION_21
0x4001502	            0x31c0	                            xor eax, eax	       625	bisect.c	FUNCTION_21
0x4001504	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       626	bisect.c	FUNCTION_21
0x400150c	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       626	bisect.c	FUNCTION_21
0x4001513	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       626	bisect.c	FUNCTION_21
0x400151a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       629	bisect.c	FUNCTION_21	CALL_1
0x400151e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       629	bisect.c	FUNCTION_21	CALL_1
0x4001522	          0x4889d6	                            mov rsi, rdx	       629	bisect.c	FUNCTION_21	CALL_1
0x4001525	          0x4889c7	                            mov rdi, rax	       629	bisect.c	FUNCTION_21	CALL_1
0x4001528	      0xe800000000	                          call 0x400152d	       629	bisect.c	FUNCTION_21	CALL_1
0x400152d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	bisect.c	FUNCTION_21
0x4001531	    0xc780a0000000	               mov dword [rax + 0xa0], 0	       630	bisect.c	FUNCTION_21
0x400153b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       631	bisect.c	FUNCTION_21
0x400153f	    0xc780a4000000	               mov dword [rax + 0xa4], 9	       631	bisect.c	FUNCTION_21
0x4001549	        0x488d45e0	                   lea rax, [rbp - 0x20]	       634	bisect.c	FUNCTION_21	CALL_2
0x400154d	      0xbe00000000	                              mov esi, 0	       634	bisect.c	FUNCTION_21	CALL_2
0x4001552	          0x4889c7	                            mov rdi, rax	       634	bisect.c	FUNCTION_21	CALL_2
0x4001555	      0xe800000000	                          call 0x400155a	       634	bisect.c	FUNCTION_21	CALL_2
0x400155a	    0x488b05000000	            mov rax, qword [0x04001561] 	       635	bisect.c	FUNCTION_21	CALL_4
0x4001561	          0x4889c7	                            mov rdi, rax	       635	bisect.c	FUNCTION_21	CALL_4
0x4001564	      0xe800000000	                          call 0x4001569	       635	bisect.c	FUNCTION_21	CALL_4
0x4001569	          0x4889c2	                            mov rdx, rax	       635	bisect.c	FUNCTION_21	CALL_4
0x400156c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       635	bisect.c	FUNCTION_21	CALL_4
0x4001570	        0x488d45e0	                   lea rax, [rbp - 0x20]	       635	bisect.c	FUNCTION_21	CALL_4
0x4001574	          0x4889ce	                            mov rsi, rcx	       635	bisect.c	FUNCTION_21	CALL_4
0x4001577	          0x4889c7	                            mov rdi, rax	       635	bisect.c	FUNCTION_21	CALL_4
0x400157a	      0xb800000000	                              mov eax, 0	       635	bisect.c	FUNCTION_21	CALL_4
0x400157f	      0xe800000000	                          call 0x4001584	       635	bisect.c	FUNCTION_21	CALL_4
0x4001584	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       636	bisect.c	FUNCTION_21	FOR_1
0x400158b	            0xeb45	                           jmp 0x40015d2	       636	bisect.c	FUNCTION_21	FOR_1
0x400158d	    0x488b0d000000	            mov rcx, qword [0x04001594] 	       638	bisect.c	FUNCTION_21	CALL_6
0x4001594	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x4001597	          0x4863d0	                         movsxd rdx, eax	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x400159a	          0x4889d0	                            mov rax, rdx	       638	bisect.c	FUNCTION_21	CALL_6
0x400159d	        0x48c1e002	                              shl rax, 2	       638	bisect.c	FUNCTION_21	CALL_6
0x40015a1	          0x4801d0	                            add rax, rdx	       638	bisect.c	FUNCTION_21	CALL_6
0x40015a4	        0x48c1e002	                              shl rax, 2	       638	bisect.c	FUNCTION_21	CALL_6
0x40015a8	          0x4801c8	                            add rax, rcx	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015ab	          0x4889c7	                            mov rdi, rax	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015ae	      0xe800000000	                          call 0x40015b3	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015b3	          0x4889c2	                            mov rdx, rax	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015b6	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015ba	        0x488d45e0	                   lea rax, [rbp - 0x20]	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015be	          0x4889ce	                            mov rsi, rcx	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015c1	          0x4889c7	                            mov rdi, rax	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015c4	      0xb800000000	                              mov eax, 0	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015c9	      0xe800000000	                          call 0x40015ce	       637	bisect.c	FUNCTION_21	FOR_1	CALL_5
0x40015ce	        0x8345dc01	               add dword [rbp - 0x24], 1	       636	bisect.c	FUNCTION_21	FOR_1
0x40015d2	    0x8b0500000000	            mov eax, dword [0x040015d8] 	       636	bisect.c	FUNCTION_21	FOR_1
0x40015d8	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       636	bisect.c	FUNCTION_21	FOR_1
0x40015db	            0x7fb0	                            jg 0x400158d	       636	bisect.c	FUNCTION_21	FOR_1
0x40015dd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       639	bisect.c	FUNCTION_21	CALL_7
0x40015e1	      0xbe00000000	                              mov esi, 0	       639	bisect.c	FUNCTION_21	CALL_7
0x40015e6	          0x4889c7	                            mov rdi, rax	       639	bisect.c	FUNCTION_21	CALL_7
0x40015e9	      0xe800000000	                          call 0x40015ee	       639	bisect.c	FUNCTION_21	CALL_7
0x40015ee	        0x837dac00	               cmp dword [rbp - 0x54], 0	       640	bisect.c	FUNCTION_21	IF_1
0x40015f2	            0x740c	                            je 0x4001600	       640	bisect.c	FUNCTION_21	IF_1
0x40015f4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       641	bisect.c	FUNCTION_21	CALL_8
0x40015f8	          0x4889c7	                            mov rdi, rax	       641	bisect.c	FUNCTION_21	CALL_8
0x40015fb	      0xe864f9ffff	              call sym.read_bisect_paths	       641	bisect.c	FUNCTION_21	CALL_8
0x4001600	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       643	bisect.c	FUNCTION_21	CALL_9
0x4001604	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       643	bisect.c	FUNCTION_21	CALL_9
0x4001607	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       643	bisect.c	FUNCTION_21	CALL_9
0x400160b	      0xb900000000	                              mov ecx, 0	       643	bisect.c	FUNCTION_21	CALL_9
0x4001610	            0x89c7	                            mov edi, eax	       643	bisect.c	FUNCTION_21	CALL_9
0x4001612	      0xe800000000	                          call 0x4001617	       643	bisect.c	FUNCTION_21	CALL_9
0x4001617	              0x90	                                     nop	       645	bisect.c	FUNCTION_21
0x4001618	        0x488b45f8	                mov rax, qword [rbp - 8]	       645	bisect.c	FUNCTION_21
0x400161c	    0x644833042528	                xor rax, qword fs:[0x28]	       645	bisect.c	FUNCTION_21
0x4001625	            0x7405	                            je 0x400162c	       645	bisect.c	FUNCTION_21
0x4001627	      0xe800000000	                          call 0x400162c	       645	bisect.c	FUNCTION_21
0x400162c	              0xc9	                                   leave	       645	bisect.c	FUNCTION_21
0x400162d	              0xc3	                                     ret	       645	bisect.c	FUNCTION_21
_	functions,0:CALL,0:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	15
0x400023f	              0x55	                                push rbp	        51	gettext.h	FUNCTION_81
0x4000240	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_81
0x4000243	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_81
0x4000247	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_81
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_81	IF_1
0x400024f	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_81	IF_1
0x4000252	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_81	IF_1
0x4000254	            0x7507	                           jne 0x400025d	        52	gettext.h	FUNCTION_81	IF_1
0x4000256	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_81	IF_1
0x400025b	            0xeb0c	                           jmp 0x4000269	        53	gettext.h	FUNCTION_81	IF_1
0x400025d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_81
0x4000261	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_81
0x4000264	      0xe800000000	                          call 0x4000269	        54	gettext.h	FUNCTION_81
0x4000269	              0xc9	                                   leave	        55	gettext.h	FUNCTION_81
0x400026a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_81
compare_commit_dist	functions,0:CALL,1:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	33
0x40005f1	              0x55	                                push rbp	       191	bisect.c	FUNCTION_8
0x40005f2	          0x4889e5	                            mov rbp, rsp	       191	bisect.c	FUNCTION_8
0x40005f5	        0x4883ec20	                           sub rsp, 0x20	       191	bisect.c	FUNCTION_8
0x40005f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       191	bisect.c	FUNCTION_8
0x40005fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       191	bisect.c	FUNCTION_8
0x4000601	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	bisect.c	FUNCTION_8
0x4000605	        0x488945f0	             mov qword [rbp - 0x10], rax	       194	bisect.c	FUNCTION_8
0x4000609	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       195	bisect.c	FUNCTION_8
0x400060d	        0x488945f8	                mov qword [rbp - 8], rax	       195	bisect.c	FUNCTION_8
0x4000611	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	bisect.c	FUNCTION_8	IF_1
0x4000615	          0x8b5008	                mov edx, dword [rax + 8]	       196	bisect.c	FUNCTION_8	IF_1
0x4000618	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	bisect.c	FUNCTION_8	IF_1
0x400061c	          0x8b4008	                mov eax, dword [rax + 8]	       196	bisect.c	FUNCTION_8	IF_1
0x400061f	            0x39c2	                            cmp edx, eax	       196	bisect.c	FUNCTION_8	IF_1
0x4000621	            0x7414	                            je 0x4000637	       196	bisect.c	FUNCTION_8	IF_1
0x4000623	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	bisect.c	FUNCTION_8	IF_1
0x4000627	          0x8b5008	                mov edx, dword [rax + 8]	       197	bisect.c	FUNCTION_8	IF_1
0x400062a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       197	bisect.c	FUNCTION_8	IF_1
0x400062e	          0x8b4008	                mov eax, dword [rax + 8]	       197	bisect.c	FUNCTION_8	IF_1
0x4000631	            0x29c2	                            sub edx, eax	       197	bisect.c	FUNCTION_8	IF_1
0x4000633	            0x89d0	                            mov eax, edx	       197	bisect.c	FUNCTION_8	IF_1
0x4000635	            0xeb21	                           jmp 0x4000658	       197	bisect.c	FUNCTION_8	IF_1
0x4000637	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	bisect.c	FUNCTION_8	CALL_1
0x400063b	          0x488b00	                    mov rax, qword [rax]	       198	bisect.c	FUNCTION_8	CALL_1
0x400063e	        0x488d5004	                      lea rdx, [rax + 4]	       198	bisect.c	FUNCTION_8	CALL_1
0x4000642	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	bisect.c	FUNCTION_8	CALL_1
0x4000646	          0x488b00	                    mov rax, qword [rax]	       198	bisect.c	FUNCTION_8	CALL_1
0x4000649	        0x4883c004	                              add rax, 4	       198	bisect.c	FUNCTION_8	CALL_1
0x400064d	          0x4889d6	                            mov rsi, rdx	       198	bisect.c	FUNCTION_8	CALL_1
0x4000650	          0x4889c7	                            mov rdi, rax	       198	bisect.c	FUNCTION_8	CALL_1
0x4000653	      0xe86afcffff	                         call sym.oidcmp	       198	bisect.c	FUNCTION_8	CALL_1
0x4000658	              0xc9	                                   leave	       199	bisect.c	FUNCTION_8
0x4000659	              0xc3	                                     ret	       199	bisect.c	FUNCTION_8
strbuf_addch	functions,0:CALL,2:DO,0:SWITCH,0:IF,1:ELSE,0:FOR,0:WHILE,0	33
0x400019c	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_71
0x400019d	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_71
0x40001a0	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_71
0x40001a4	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_71
0x40001a8	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_71
0x40001ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x40001af	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x40001b2	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x40001b7	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x40001ba	            0x7511	                           jne 0x40001cd	       227	strbuf.h	FUNCTION_71	IF_1	CALL_1
0x40001bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_71	CALL_2
0x40001c0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_71	CALL_2
0x40001c5	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_71	CALL_2
0x40001c8	      0xe800000000	                          call 0x40001cd	       228	strbuf.h	FUNCTION_71	CALL_2
0x40001cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x40001d1	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_71
0x40001d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x40001d9	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_71
0x40001dd	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_71
0x40001e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_71
0x40001e5	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_71
0x40001e9	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_71
0x40001ec	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_71
0x40001ef	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_71
0x40001f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_71
0x40001f5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_71
0x40001f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_71
0x40001fd	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_71
0x4000201	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_71
0x4000204	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_71
0x4000207	              0x90	                                     nop	       231	strbuf.h	FUNCTION_71
0x4000208	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_71
0x4000209	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_71
bisect_clean_state	functions,0:CALL,21:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	70
0x400267e	              0x55	                                push rbp	      1060	bisect.c	FUNCTION_40
0x400267f	          0x4889e5	                            mov rbp, rsp	      1060	bisect.c	FUNCTION_40
0x4002682	        0x4883ec40	                           sub rsp, 0x40	      1060	bisect.c	FUNCTION_40
0x4002686	    0x64488b042528	                mov rax, qword fs:[0x28]	      1060	bisect.c	FUNCTION_40
0x400268f	        0x488945f8	                mov qword [rbp - 8], rax	      1060	bisect.c	FUNCTION_40
0x4002693	            0x31c0	                            xor eax, eax	      1060	bisect.c	FUNCTION_40
0x4002695	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1061	bisect.c	FUNCTION_40
0x400269c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1064	bisect.c	FUNCTION_40
0x40026a4	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1064	bisect.c	FUNCTION_40
0x40026ab	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1064	bisect.c	FUNCTION_40
0x40026b2	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1064	bisect.c	FUNCTION_40
0x40026b6	          0x83e0fe	                     and eax, 0xfffffffe	      1064	bisect.c	FUNCTION_40
0x40026b9	          0x8845e0	               mov byte [rbp - 0x20], al	      1064	bisect.c	FUNCTION_40
0x40026bc	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1064	bisect.c	FUNCTION_40
0x40026c4	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1065	bisect.c	FUNCTION_40	CALL_1
0x40026c8	          0x4889c2	                            mov rdx, rax	      1065	bisect.c	FUNCTION_40	CALL_1
0x40026cb	      0xbe00000000	                              mov esi, 0	      1065	bisect.c	FUNCTION_40	CALL_1
0x40026d0	      0xbf00000000	                              mov edi, 0	      1065	bisect.c	FUNCTION_40	CALL_1
0x40026d5	      0xe800000000	                          call 0x40026da	      1065	bisect.c	FUNCTION_40	CALL_1
0x40026da	      0xbf00000000	                              mov edi, 0	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026df	      0xe800000000	                          call 0x40026e4	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026e4	          0x4889c2	                            mov rdx, rax	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026e7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026eb	          0x4889d6	                            mov rsi, rdx	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026ee	          0x4889c7	                            mov rdi, rax	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026f1	      0xe800000000	                          call 0x40026f6	      1066	bisect.c	FUNCTION_40	CALL_3
0x40026f6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1067	bisect.c	FUNCTION_40	CALL_4
0x40026fa	      0xba01000000	                              mov edx, 1	      1067	bisect.c	FUNCTION_40	CALL_4
0x40026ff	          0x4889c6	                            mov rsi, rax	      1067	bisect.c	FUNCTION_40	CALL_4
0x4002702	      0xbf00000000	                              mov edi, 0	      1067	bisect.c	FUNCTION_40	CALL_4
0x4002707	      0xe800000000	                          call 0x400270c	      1067	bisect.c	FUNCTION_40	CALL_4
0x400270c	          0x8945cc	             mov dword [rbp - 0x34], eax	      1067	bisect.c	FUNCTION_40	CALL_4
0x400270f	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1068	bisect.c	FUNCTION_40
0x4002713	          0x83c801	                               or eax, 1	      1068	bisect.c	FUNCTION_40
0x4002716	          0x8845e0	               mov byte [rbp - 0x20], al	      1068	bisect.c	FUNCTION_40
0x4002719	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1069	bisect.c	FUNCTION_40	CALL_5
0x400271d	      0xbe00000000	                              mov esi, 0	      1069	bisect.c	FUNCTION_40	CALL_5
0x4002722	          0x4889c7	                            mov rdi, rax	      1069	bisect.c	FUNCTION_40	CALL_5
0x4002725	      0xe800000000	                          call 0x400272a	      1069	bisect.c	FUNCTION_40	CALL_5
0x400272a	      0xe8ece6ffff	   call sym.git_path_bisect_expected_rev	      1070	bisect.c	FUNCTION_40	CALL_7
0x400272f	          0x4889c7	                            mov rdi, rax	      1070	bisect.c	FUNCTION_40	CALL_7
0x4002732	      0xe800000000	                          call 0x4002737	      1070	bisect.c	FUNCTION_40	CALL_7
0x4002737	      0xe80ee7ffff	   call sym.git_path_bisect_ancestors_ok	      1071	bisect.c	FUNCTION_40	CALL_9
0x400273c	          0x4889c7	                            mov rdi, rax	      1071	bisect.c	FUNCTION_40	CALL_9
0x400273f	      0xe800000000	                          call 0x4002744	      1071	bisect.c	FUNCTION_40	CALL_9
0x4002744	      0xe88ee7ffff	            call sym.git_path_bisect_log	      1072	bisect.c	FUNCTION_40	CALL_11
0x4002749	          0x4889c7	                            mov rdi, rax	      1072	bisect.c	FUNCTION_40	CALL_11
0x400274c	      0xe800000000	                          call 0x4002751	      1072	bisect.c	FUNCTION_40	CALL_11
0x4002751	      0xe896e6ffff	          call sym.git_path_bisect_names	      1073	bisect.c	FUNCTION_40	CALL_13
0x4002756	          0x4889c7	                            mov rdi, rax	      1073	bisect.c	FUNCTION_40	CALL_13
0x4002759	      0xe800000000	                          call 0x400275e	      1073	bisect.c	FUNCTION_40	CALL_13
0x400275e	      0xe816e7ffff	            call sym.git_path_bisect_run	      1074	bisect.c	FUNCTION_40	CALL_15
0x4002763	          0x4889c7	                            mov rdi, rax	      1074	bisect.c	FUNCTION_40	CALL_15
0x4002766	      0xe800000000	                          call 0x400276b	      1074	bisect.c	FUNCTION_40	CALL_15
0x400276b	      0xe896e7ffff	          call sym.git_path_bisect_terms	      1075	bisect.c	FUNCTION_40	CALL_17
0x4002770	          0x4889c7	                            mov rdi, rax	      1075	bisect.c	FUNCTION_40	CALL_17
0x4002773	      0xe800000000	                          call 0x4002778	      1075	bisect.c	FUNCTION_40	CALL_17
0x4002778	      0xe8b8e7ffff	             call sym.git_path_head_name	      1077	bisect.c	FUNCTION_40	CALL_19
0x400277d	          0x4889c7	                            mov rdi, rax	      1077	bisect.c	FUNCTION_40	CALL_19
0x4002780	      0xe800000000	                          call 0x4002785	      1077	bisect.c	FUNCTION_40	CALL_19
0x4002785	      0xe81ee7ffff	          call sym.git_path_bisect_start	      1082	bisect.c	FUNCTION_40	CALL_21
0x400278a	          0x4889c7	                            mov rdi, rax	      1082	bisect.c	FUNCTION_40	CALL_21
0x400278d	      0xe800000000	                          call 0x4002792	      1082	bisect.c	FUNCTION_40	CALL_21
0x4002792	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1084	bisect.c	FUNCTION_40
0x4002795	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1085	bisect.c	FUNCTION_40
0x4002799	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	bisect.c	FUNCTION_40
0x40027a2	            0x7405	                            je 0x40027a9	      1085	bisect.c	FUNCTION_40
0x40027a4	      0xe800000000	                          call 0x40027a9	      1085	bisect.c	FUNCTION_40
0x40027a9	              0xc9	                                   leave	      1085	bisect.c	FUNCTION_40
0x40027aa	              0xc3	                                     ret	      1085	bisect.c	FUNCTION_40
handle_bad_merge_base	functions,0:CALL,17:DO,0:SWITCH,0:IF,3:ELSE,2:FOR,0:WHILE,0	106
0x4001a9e	              0x55	                                push rbp	       742	bisect.c	FUNCTION_28
0x4001a9f	          0x4889e5	                            mov rbp, rsp	       742	bisect.c	FUNCTION_28
0x4001aa2	            0x4156	                                push r14	       742	bisect.c	FUNCTION_28
0x4001aa4	            0x4155	                                push r13	       742	bisect.c	FUNCTION_28
0x4001aa6	            0x4154	                                push r12	       742	bisect.c	FUNCTION_28
0x4001aa8	              0x53	                                push rbx	       742	bisect.c	FUNCTION_28
0x4001aa9	        0x4883ec10	                           sub rsp, 0x10	       742	bisect.c	FUNCTION_28
0x4001aad	    0x488b05000000	            mov rax, qword [0x04001ab4] 	       743	bisect.c	FUNCTION_28	IF_1	CALL_1
0x4001ab4	          0x4889c7	                            mov rdi, rax	       743	bisect.c	FUNCTION_28	IF_1	CALL_1
0x4001ab7	      0xe863fcffff	                call sym.is_expected_rev	       743	bisect.c	FUNCTION_28	IF_1	CALL_1
0x4001abc	            0x85c0	                           test eax, eax	       743	bisect.c	FUNCTION_28	IF_1	CALL_1
0x4001abe	     0xf8448010000	                            je 0x4001c0c	       743	bisect.c	FUNCTION_28	IF_1	CALL_1
0x4001ac4	    0x488b05000000	            mov rax, qword [0x04001acb] 	       744	bisect.c	FUNCTION_28	IF_1	CALL_2
0x4001acb	          0x4889c7	                            mov rdi, rax	       744	bisect.c	FUNCTION_28	IF_1	CALL_2
0x4001ace	      0xe800000000	                          call 0x4001ad3	       744	bisect.c	FUNCTION_28	IF_1	CALL_2
0x4001ad3	        0x488945d0	             mov qword [rbp - 0x30], rax	       744	bisect.c	FUNCTION_28	IF_1	CALL_2
0x4001ad7	      0xbe20000000	                           mov esi, 0x20	       745	bisect.c	FUNCTION_28	IF_1	CALL_3
0x4001adc	      0xbf00000000	                              mov edi, 0	       745	bisect.c	FUNCTION_28	IF_1	CALL_3
0x4001ae1	      0xe869f5ffff	            call sym.join_sha1_array_hex	       745	bisect.c	FUNCTION_28	IF_1	CALL_3
0x4001ae6	        0x488945d8	             mov qword [rbp - 0x28], rax	       745	bisect.c	FUNCTION_28	IF_1	CALL_3
0x4001aea	    0x488b05000000	            mov rax, qword [0x04001af1] 	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001af1	      0xbe00000000	                              mov esi, 0	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001af6	          0x4889c7	                            mov rdi, rax	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001af9	      0xe800000000	                          call 0x4001afe	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001afe	            0x85c0	                           test eax, eax	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b00	            0x7550	                           jne 0x4001b52	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b02	    0x488b05000000	            mov rax, qword [0x04001b09] 	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b09	      0xbe00000000	                              mov esi, 0	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b0e	          0x4889c7	                            mov rdi, rax	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b11	      0xe800000000	                          call 0x4001b16	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b16	            0x85c0	                           test eax, eax	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b18	            0x7538	                           jne 0x4001b52	       746	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_5
0x4001b1a	      0xbf00000000	                              mov edi, 0	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b1f	      0xe81be7ffff	                               call sym.	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b24	          0x4889c7	                            mov rdi, rax	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b27	    0x488b05000000	            mov rax, qword [0x04001b2e] 	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b2e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b32	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b36	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b3a	          0x4989f0	                             mov r8, rsi	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b3d	          0x4889fe	                            mov rsi, rdi	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b40	          0x4889c7	                            mov rdi, rax	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b43	      0xb800000000	                              mov eax, 0	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b48	      0xe800000000	                          call 0x4001b4d	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b4d	      0xe9b0000000	                           jmp 0x4001c02	       747	bisect.c	FUNCTION_28	IF_1	IF_2	CALL_7
0x4001b52	    0x488b05000000	            mov rax, qword [0x04001b59] 	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b59	      0xbe00000000	                              mov esi, 0	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b5e	          0x4889c7	                            mov rdi, rax	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b61	      0xe800000000	                          call 0x4001b66	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b66	            0x85c0	                           test eax, eax	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b68	            0x754d	                           jne 0x4001bb7	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b6a	    0x488b05000000	            mov rax, qword [0x04001b71] 	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b71	      0xbe00000000	                              mov esi, 0	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b76	          0x4889c7	                            mov rdi, rax	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b79	      0xe800000000	                          call 0x4001b7e	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b7e	            0x85c0	                           test eax, eax	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b80	            0x7535	                           jne 0x4001bb7	       751	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_9
0x4001b82	      0xbf00000000	                              mov edi, 0	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b87	      0xe8b3e6ffff	                               call sym.	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b8c	          0x4889c7	                            mov rdi, rax	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b8f	    0x488b05000000	            mov rax, qword [0x04001b96] 	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b96	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b9a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001b9e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001ba2	          0x4989f0	                             mov r8, rsi	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001ba5	          0x4889fe	                            mov rsi, rdi	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001ba8	          0x4889c7	                            mov rdi, rax	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001bab	      0xb800000000	                              mov eax, 0	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001bb0	      0xe800000000	                          call 0x4001bb5	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001bb5	            0xeb4b	                           jmp 0x4001c02	       752	bisect.c	FUNCTION_28	IF_1	ELSE_1	IF_3	CALL_11
0x4001bb7	    0x4c8b25000000	            mov r12, qword [0x04001bbe] 	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bbe	    0x488b1d000000	            mov rbx, qword [0x04001bc5] 	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bc5	      0xbf00000000	                              mov edi, 0	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bca	      0xe870e6ffff	                               call sym.	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bcf	          0x4889c6	                            mov rsi, rax	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bd2	    0x488b05000000	            mov rax, qword [0x04001bd9] 	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bd9	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bdd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001be1	        0x4883ec08	                              sub rsp, 8	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001be5	          0xff75d8	                 push qword [rbp - 0x28]	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001be8	          0x4989c9	                             mov r9, rcx	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001beb	          0x4d89e0	                             mov r8, r12	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bee	          0x4889d9	                            mov rcx, rbx	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bf1	          0x4889c7	                            mov rdi, rax	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bf4	      0xb800000000	                              mov eax, 0	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bf9	      0xe800000000	                          call 0x4001bfe	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001bfe	        0x4883c410	                           add rsp, 0x10	       757	bisect.c	FUNCTION_28	IF_1	ELSE_2	CALL_13
0x4001c02	      0xbf03000000	                              mov edi, 3	       762	bisect.c	FUNCTION_28	IF_1	CALL_14
0x4001c07	      0xe800000000	                          call 0x4001c0c	       762	bisect.c	FUNCTION_28	IF_1	CALL_14
0x4001c0c	    0x4c8b35000000	            mov r14, qword [0x04001c13] 	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c13	    0x4c8b2d000000	            mov r13, qword [0x04001c1a] 	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c1a	    0x4c8b25000000	            mov r12, qword [0x04001c21] 	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c21	    0x488b1d000000	            mov rbx, qword [0x04001c28] 	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c28	      0xbf00000000	                              mov edi, 0	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c2d	      0xe80de6ffff	                               call sym.	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c32	          0x4889c6	                            mov rsi, rax	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c35	    0x488b05000000	            mov rax, qword [0x04001c3c] 	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c3c	          0x4d89f1	                             mov r9, r14	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c3f	          0x4d89e8	                             mov r8, r13	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c42	          0x4c89e1	                            mov rcx, r12	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c45	          0x4889da	                            mov rdx, rbx	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c48	          0x4889c7	                            mov rdi, rax	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c4b	      0xb800000000	                              mov eax, 0	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c50	      0xe800000000	                          call 0x4001c55	       765	bisect.c	FUNCTION_28	CALL_16
0x4001c55	      0xbf01000000	                              mov edi, 1	       769	bisect.c	FUNCTION_28	CALL_17
0x4001c5a	      0xe800000000	      call sym.handle_skipped_merge_base	       769	bisect.c	FUNCTION_28	CALL_17
do_find_bisection	functions,0:CALL,18:DO,0:SWITCH,1:IF,11:ELSE,2:FOR,4:WHILE,1	215
0x4000884	              0x55	                                push rbp	       258	bisect.c	FUNCTION_10
0x4000885	          0x4889e5	                            mov rbp, rsp	       258	bisect.c	FUNCTION_10
0x4000888	        0x4883ec50	                           sub rsp, 0x50	       258	bisect.c	FUNCTION_10
0x400088c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       258	bisect.c	FUNCTION_10
0x4000890	          0x8975c4	             mov dword [rbp - 0x3c], esi	       258	bisect.c	FUNCTION_10
0x4000893	        0x488955b8	             mov qword [rbp - 0x48], rdx	       258	bisect.c	FUNCTION_10
0x4000897	          0x894dc0	             mov dword [rbp - 0x40], ecx	       258	bisect.c	FUNCTION_10
0x400089a	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       262	bisect.c	FUNCTION_10
0x40008a1	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       264	bisect.c	FUNCTION_10	FOR_1
0x40008a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       264	bisect.c	FUNCTION_10	FOR_1
0x40008ac	        0x488945e8	             mov qword [rbp - 0x18], rax	       264	bisect.c	FUNCTION_10	FOR_1
0x40008b0	      0xe9ac000000	                           jmp 0x4000961	       264	bisect.c	FUNCTION_10	FOR_1
0x40008b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	bisect.c	FUNCTION_10	FOR_1
0x40008b9	          0x488b00	                    mov rax, qword [rax]	       265	bisect.c	FUNCTION_10	FOR_1
0x40008bc	        0x488945f8	                mov qword [rbp - 8], rax	       265	bisect.c	FUNCTION_10	FOR_1
0x40008c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	bisect.c	FUNCTION_10	FOR_1
0x40008c4	            0x8b00	                    mov eax, dword [rax]	       266	bisect.c	FUNCTION_10	FOR_1
0x40008c6	          0xc1e804	                              shr eax, 4	       266	bisect.c	FUNCTION_10	FOR_1
0x40008c9	      0x25ffffff07	                      and eax, 0x7ffffff	       266	bisect.c	FUNCTION_10	FOR_1
0x40008ce	          0x8945e0	             mov dword [rbp - 0x20], eax	       266	bisect.c	FUNCTION_10	FOR_1
0x40008d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008d5	          0x488b10	                    mov rdx, qword [rax]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008d8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008db	          0x8d4801	                      lea ecx, [rax + 1]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008de	          0x894dd8	             mov dword [rbp - 0x28], ecx	       268	bisect.c	FUNCTION_10	FOR_1
0x40008e1	            0x4898	                                    cdqe	       268	bisect.c	FUNCTION_10	FOR_1
0x40008e3	    0x488d0c850000	                        lea rcx, [rax*4]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       268	bisect.c	FUNCTION_10	FOR_1
0x40008ef	          0x4801c8	                            add rax, rcx	       268	bisect.c	FUNCTION_10	FOR_1
0x40008f2	        0x48894218	             mov qword [rdx + 0x18], rax	       268	bisect.c	FUNCTION_10	FOR_1
0x40008f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x40008fa	          0x4889c7	                            mov rdi, rax	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x40008fd	      0xe8abfbffff	      call sym.count_interesting_parents	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000902	            0x85c0	                           test eax, eax	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000904	            0x7407	                            je 0x400090d	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000906	          0x83f801	                              cmp eax, 1	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000909	            0x7423	                            je 0x400092e	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x400090b	            0xeb34	                           jmp 0x4000941	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x400090d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x4000910	          0x83e004	                              and eax, 4	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x4000913	            0x85c0	                           test eax, eax	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x4000915	            0x753d	                           jne 0x4000954	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x4000917	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1	CALL_2
0x400091b	      0xbe01000000	                              mov esi, 1	       272	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1	CALL_2
0x4000920	          0x4889c7	                            mov rdi, rax	       272	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1	CALL_2
0x4000923	      0xe867fbffff	                     call sym.weight_set	       272	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1	CALL_2
0x4000928	        0x8345dc01	               add dword [rbp - 0x24], 1	       273	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x400092c	            0xeb26	                           jmp 0x4000954	       281	bisect.c	FUNCTION_10	FOR_1	SWITCH_1
0x400092e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_3
0x4000932	      0xbeffffffff	                     mov esi, 0xffffffff	       283	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_3
0x4000937	          0x4889c7	                            mov rdi, rax	       283	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_3
0x400093a	      0xe850fbffff	                     call sym.weight_set	       283	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_3
0x400093f	            0xeb14	                           jmp 0x4000955	       284	bisect.c	FUNCTION_10	FOR_1	SWITCH_1
0x4000941	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       286	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_4
0x4000945	      0xbefeffffff	                     mov esi, 0xfffffffe	       286	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_4
0x400094a	          0x4889c7	                            mov rdi, rax	       286	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_4
0x400094d	      0xe83dfbffff	                     call sym.weight_set	       286	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_4
0x4000952	            0xeb01	                           jmp 0x4000955	       287	bisect.c	FUNCTION_10	FOR_1	SWITCH_1
0x4000954	              0x90	                                     nop	       281	bisect.c	FUNCTION_10	FOR_1	SWITCH_1
0x4000955	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	bisect.c	FUNCTION_10	FOR_1
0x4000959	        0x488b4008	                mov rax, qword [rax + 8]	       264	bisect.c	FUNCTION_10	FOR_1
0x400095d	        0x488945e8	             mov qword [rbp - 0x18], rax	       264	bisect.c	FUNCTION_10	FOR_1
0x4000961	      0x48837de800	               cmp qword [rbp - 0x18], 0	       264	bisect.c	FUNCTION_10	FOR_1
0x4000966	     0xf8549ffffff	                           jne 0x40008b5	       264	bisect.c	FUNCTION_10	FOR_1
0x400096c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       307	bisect.c	FUNCTION_10	FOR_2
0x4000970	        0x488945e8	             mov qword [rbp - 0x18], rax	       307	bisect.c	FUNCTION_10	FOR_2
0x4000974	      0xe98b000000	                           jmp 0x4000a04	       307	bisect.c	FUNCTION_10	FOR_2
0x4000979	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x400097d	          0x488b00	                    mov rax, qword [rax]	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000980	            0x8b00	                    mov eax, dword [rax]	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000982	          0xc1e804	                              shr eax, 4	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000985	      0x25ffffff07	                      and eax, 0x7ffffff	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x400098a	          0x83e002	                              and eax, 2	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x400098d	            0x85c0	                           test eax, eax	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x400098f	            0x7563	                           jne 0x40009f4	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x4000995	          0x4889c7	                            mov rdi, rax	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x4000998	      0xe8dbfaffff	                         call sym.weight	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x400099d	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x40009a0	            0x7555	                           jne 0x40009f7	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x40009a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009a6	          0x4889c7	                            mov rdi, rax	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009a9	      0xe88af9ffff	                 call sym.count_distance	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009ae	            0x89c2	                            mov edx, eax	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009b4	            0x89d6	                            mov esi, edx	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009b6	          0x4889c7	                            mov rdi, rax	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009b9	      0xe8d1faffff	                     call sym.weight_set	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x40009be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	bisect.c	FUNCTION_10	FOR_2	CALL_8
0x40009c2	          0x4889c7	                            mov rdi, rax	       313	bisect.c	FUNCTION_10	FOR_2	CALL_8
0x40009c5	      0xe853faffff	                 call sym.clear_distance	       313	bisect.c	FUNCTION_10	FOR_2	CALL_8
0x40009ca	        0x837dc000	               cmp dword [rbp - 0x40], 0	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009ce	            0x751e	                           jne 0x40009ee	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009d0	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009d7	            0x89d6	                            mov esi, edx	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009d9	          0x4889c7	                            mov rdi, rax	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009dc	      0xe820fbffff	                        call sym.halfway	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009e1	            0x85c0	                           test eax, eax	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009e3	            0x7409	                            je 0x40009ee	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x40009e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       317	bisect.c	FUNCTION_10	FOR_2	IF_4
0x40009e9	      0xe96f010000	                           jmp 0x4000b5d	       317	bisect.c	FUNCTION_10	FOR_2	IF_4
0x40009ee	        0x8345dc01	               add dword [rbp - 0x24], 1	       318	bisect.c	FUNCTION_10	FOR_2
0x40009f2	            0xeb04	                           jmp 0x40009f8	       318	bisect.c	FUNCTION_10	FOR_2
0x40009f4	              0x90	                                     nop	       309	bisect.c	FUNCTION_10	FOR_2	IF_2
0x40009f5	            0xeb01	                           jmp 0x40009f8	       309	bisect.c	FUNCTION_10	FOR_2	IF_2
0x40009f7	              0x90	                                     nop	       311	bisect.c	FUNCTION_10	FOR_2	IF_3
0x40009f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	bisect.c	FUNCTION_10	FOR_2
0x40009fc	        0x488b4008	                mov rax, qword [rax + 8]	       307	bisect.c	FUNCTION_10	FOR_2
0x4000a00	        0x488945e8	             mov qword [rbp - 0x18], rax	       307	bisect.c	FUNCTION_10	FOR_2
0x4000a04	      0x48837de800	               cmp qword [rbp - 0x18], 0	       307	bisect.c	FUNCTION_10	FOR_2
0x4000a09	     0xf856affffff	                           jne 0x4000979	       307	bisect.c	FUNCTION_10	FOR_2
0x4000a0f	      0xe913010000	                           jmp 0x4000b27	       323	bisect.c	FUNCTION_10	WHILE_1
0x4000a14	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a18	        0x488945e8	             mov qword [rbp - 0x18], rax	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a1c	      0xe9fb000000	                           jmp 0x4000b1c	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a25	          0x488b00	                    mov rax, qword [rax]	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a28	            0x8b00	                    mov eax, dword [rax]	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a2a	          0xc1e804	                              shr eax, 4	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a2d	      0x25ffffff07	                      and eax, 0x7ffffff	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a32	          0x8945e4	             mov dword [rbp - 0x1c], eax	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000a35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x4000a39	          0x4889c7	                            mov rdi, rax	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x4000a3c	      0xe837faffff	                         call sym.weight	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x4000a41	            0x85c0	                           test eax, eax	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x4000a43	     0xf89c3000000	                           jns 0x4000b0c	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x4000a49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a4d	          0x488b00	                    mov rax, qword [rax]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a50	        0x488b4030	            mov rax, qword [rax + 0x30] 	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a54	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a58	            0xeb37	                           jmp 0x4000a91	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a5e	          0x488b00	                    mov rax, qword [rax]	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a61	            0x8b00	                    mov eax, dword [rax]	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a63	          0xc1e804	                              shr eax, 4	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a66	      0x25ffffff07	                      and eax, 0x7ffffff	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a6b	          0x83e002	                              and eax, 2	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a6e	            0x85c0	                           test eax, eax	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a70	            0x7512	                           jne 0x4000a84	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a76	          0x4889c7	                            mov rdi, rax	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a79	      0xe8faf9ffff	                         call sym.weight	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a7e	            0x85c0	                           test eax, eax	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a80	            0x7918	                           jns 0x4000a9a	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a82	            0xeb01	                           jmp 0x4000a85	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000a84	              0x90	                                     nop	       332	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000a85	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a89	        0x488b4008	                mov rax, qword [rax + 8]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a8d	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a91	      0x48837df000	               cmp qword [rbp - 0x10], 0	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a96	            0x75c2	                           jne 0x4000a5a	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a98	            0xeb01	                           jmp 0x4000a9b	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000a9a	              0x90	                                     nop	       334	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7
0x4000a9b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       336	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_8
0x4000aa0	            0x746d	                            je 0x4000b0f	       336	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_8
0x4000aa2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000aa5	          0x83e004	                              and eax, 4	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000aa8	            0x85c0	                           test eax, eax	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000aaa	            0x7523	                           jne 0x4000acf	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000aac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ab0	          0x4889c7	                            mov rdi, rax	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ab3	      0xe8c0f9ffff	                         call sym.weight	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ab8	          0x8d5001	                      lea edx, [rax + 1]	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000abb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000abf	            0x89d6	                            mov esi, edx	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ac1	          0x4889c7	                            mov rdi, rax	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ac4	      0xe8c6f9ffff	                     call sym.weight_set	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x4000ac9	        0x8345dc01	               add dword [rbp - 0x24], 1	       346	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000acd	            0xeb1c	                           jmp 0x4000aeb	       346	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000acf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000ad3	          0x4889c7	                            mov rdi, rax	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000ad6	      0xe89df9ffff	                         call sym.weight	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000adb	            0x89c2	                            mov edx, eax	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000add	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000ae1	            0x89d6	                            mov esi, edx	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000ae3	          0x4889c7	                            mov rdi, rax	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000ae6	      0xe8a4f9ffff	                     call sym.weight_set	       351	bisect.c	FUNCTION_10	WHILE_1	FOR_3	CALL_15
0x4000aeb	        0x837dc000	               cmp dword [rbp - 0x40], 0	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000aef	            0x751f	                           jne 0x4000b10	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000af1	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000af4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000af8	            0x89d6	                            mov esi, edx	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000afa	          0x4889c7	                            mov rdi, rax	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000afd	      0xe8fff9ffff	                        call sym.halfway	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000b02	            0x85c0	                           test eax, eax	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000b04	            0x740a	                            je 0x4000b10	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000b06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10
0x4000b0a	            0xeb51	                           jmp 0x4000b5d	       355	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10
0x4000b0c	              0x90	                                     nop	       329	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5
0x4000b0d	            0xeb01	                           jmp 0x4000b10	       329	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5
0x4000b0f	              0x90	                                     nop	       337	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_8
0x4000b10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000b14	        0x488b4008	                mov rax, qword [rax + 8]	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000b18	        0x488945e8	             mov qword [rbp - 0x18], rax	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000b1c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000b21	     0xf85fafeffff	                           jne 0x4000a21	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x4000b27	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       323	bisect.c	FUNCTION_10	WHILE_1
0x4000b2a	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       323	bisect.c	FUNCTION_10	WHILE_1
0x4000b2d	     0xf8ce1feffff	                            jl 0x4000a14	       323	bisect.c	FUNCTION_10	WHILE_1
0x4000b33	        0x837dc000	               cmp dword [rbp - 0x40], 0	       361	bisect.c	FUNCTION_10	IF_11
0x4000b37	            0x7513	                           jne 0x4000b4c	       361	bisect.c	FUNCTION_10	IF_11
0x4000b39	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b3c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b40	            0x89d6	                            mov esi, edx	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b42	          0x4889c7	                            mov rdi, rax	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b45	      0xe80cfaffff	                 call sym.best_bisection	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b4a	            0xeb11	                           jmp 0x4000b5d	       362	bisect.c	FUNCTION_10	CALL_17
0x4000b4c	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       364	bisect.c	FUNCTION_10	CALL_18
0x4000b4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       364	bisect.c	FUNCTION_10	CALL_18
0x4000b53	            0x89d6	                            mov esi, edx	       364	bisect.c	FUNCTION_10	CALL_18
0x4000b55	          0x4889c7	                            mov rdi, rax	       364	bisect.c	FUNCTION_10	CALL_18
0x4000b58	      0xe8fdfaffff	          call sym.best_bisection_sorted	       364	bisect.c	FUNCTION_10	CALL_18
0x4000b5d	              0xc9	                                   leave	       365	bisect.c	FUNCTION_10
0x4000b5e	              0xc3	                                     ret	       365	bisect.c	FUNCTION_10
check_ancestors	functions,0:CALL,3:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	37
0x4001de8	              0x55	                                push rbp	       820	bisect.c	FUNCTION_31
0x4001de9	          0x4889e5	                            mov rbp, rsp	       820	bisect.c	FUNCTION_31
0x4001dec	    0x4881ecf00800	                          sub rsp, 0x8f0	       820	bisect.c	FUNCTION_31
0x4001df3	    0x89bd2cf7ffff	            mov dword [rbp - 0x8d4], edi	       820	bisect.c	FUNCTION_31
0x4001df9	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	       820	bisect.c	FUNCTION_31
0x4001e00	    0x48899518f7ff	            mov qword [rbp - 0x8e8], rdx	       820	bisect.c	FUNCTION_31
0x4001e07	    0x64488b042528	                mov rax, qword fs:[0x28]	       820	bisect.c	FUNCTION_31
0x4001e10	        0x488945f8	                mov qword [rbp - 8], rax	       820	bisect.c	FUNCTION_31
0x4001e14	            0x31c0	                            xor eax, eax	       820	bisect.c	FUNCTION_31
0x4001e16	    0x488bb518f7ff	            mov rsi, qword [rbp - 0x8e8]	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e1d	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e24	    0x41b800000000	                              mov r8d, 0	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e2a	      0xb900000000	                              mov ecx, 0	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e2f	      0xba00000000	                              mov edx, 0	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e34	          0x4889c7	                            mov rdi, rax	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e37	      0xe89df6ffff	               call sym.bisect_rev_setup	       824	bisect.c	FUNCTION_31	CALL_1
0x4001e3c	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       826	bisect.c	FUNCTION_31	CALL_2
0x4001e43	          0x4889c7	                            mov rdi, rax	       826	bisect.c	FUNCTION_31	CALL_2
0x4001e46	      0xe8e3f7ffff	                  call sym.bisect_common	       826	bisect.c	FUNCTION_31	CALL_2
0x4001e4b	    0x488b8540f7ff	            mov rax, qword [rbp - 0x8c0]	       827	bisect.c	FUNCTION_31
0x4001e52	          0x4885c0	                           test rax, rax	       827	bisect.c	FUNCTION_31
0x4001e55	           0xf95c0	                                setne al	       827	bisect.c	FUNCTION_31
0x4001e58	           0xfb6c0	                           movzx eax, al	       827	bisect.c	FUNCTION_31
0x4001e5b	    0x89853cf7ffff	            mov dword [rbp - 0x8c4], eax	       827	bisect.c	FUNCTION_31
0x4001e61	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e68	    0x8b852cf7ffff	            mov eax, dword [rbp - 0x8d4]	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e6e	      0xbaff070004	                      mov edx, 0x40007ff	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e73	          0x4889ce	                            mov rsi, rcx	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e76	            0x89c7	                            mov edi, eax	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e78	      0xe800000000	                          call 0x4001e7d	       830	bisect.c	FUNCTION_31	CALL_3
0x4001e7d	    0x8b853cf7ffff	            mov eax, dword [rbp - 0x8c4]	       832	bisect.c	FUNCTION_31
0x4001e83	        0x488b55f8	                mov rdx, qword [rbp - 8]	       833	bisect.c	FUNCTION_31
0x4001e87	    0x644833142528	                xor rdx, qword fs:[0x28]	       833	bisect.c	FUNCTION_31
0x4001e90	            0x7405	                            je 0x4001e97	       833	bisect.c	FUNCTION_31
0x4001e92	      0xe800000000	                          call 0x4001e97	       833	bisect.c	FUNCTION_31
0x4001e97	              0xc9	                                   leave	       833	bisect.c	FUNCTION_31
0x4001e98	              0xc3	                                     ret	       833	bisect.c	FUNCTION_31
get_bad_and_good_commits	functions,0:CALL,2:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,1:WHILE,0	58
0x40019c9	              0x55	                                push rbp	       728	bisect.c	FUNCTION_27
0x40019ca	          0x4889e5	                            mov rbp, rsp	       728	bisect.c	FUNCTION_27
0x40019cd	              0x53	                                push rbx	       728	bisect.c	FUNCTION_27
0x40019ce	        0x4883ec28	                           sub rsp, 0x28	       728	bisect.c	FUNCTION_27
0x40019d2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       728	bisect.c	FUNCTION_27
0x40019d6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       730	bisect.c	FUNCTION_27
0x40019dd	    0x8b0500000000	            mov eax, dword [0x040019e3] 	       732	bisect.c	FUNCTION_27
0x40019e3	          0x83c001	                              add eax, 1	       732	bisect.c	FUNCTION_27
0x40019e6	            0x4898	                                    cdqe	       732	bisect.c	FUNCTION_27
0x40019e8	          0x4889c6	                            mov rsi, rax	       732	bisect.c	FUNCTION_27
0x40019eb	      0xbf08000000	                              mov edi, 8	       732	bisect.c	FUNCTION_27
0x40019f0	      0xe84be6ffff	                        call sym.st_mult	       732	bisect.c	FUNCTION_27
0x40019f5	          0x4889c7	                            mov rdi, rax	       732	bisect.c	FUNCTION_27
0x40019f8	      0xe800000000	                          call 0x40019fd	       732	bisect.c	FUNCTION_27
0x40019fd	        0x488945e8	             mov qword [rbp - 0x18], rax	       732	bisect.c	FUNCTION_27
0x4001a01	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a04	          0x8d5001	                      lea edx, [rax + 1]	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a07	          0x8955e4	             mov dword [rbp - 0x1c], edx	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a0a	            0x4898	                                    cdqe	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a0c	    0x488d14c50000	                        lea rdx, [rax*8]	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a18	        0x488d1c02	                    lea rbx, [rdx + rax]	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a1c	    0x488b05000000	            mov rax, qword [0x04001a23] 	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a23	          0x4889c7	                            mov rdi, rax	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a26	      0xe846ffffff	           call sym.get_commit_reference	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a2b	          0x488903	                    mov qword [rbx], rax	       733	bisect.c	FUNCTION_27	CALL_1
0x4001a2e	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a35	            0xeb48	                           jmp 0x4001a7f	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a37	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a3a	          0x8d5001	                      lea edx, [rax + 1]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a3d	          0x8955e4	             mov dword [rbp - 0x1c], edx	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a40	            0x4898	                                    cdqe	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a42	    0x488d14c50000	                        lea rdx, [rax*8]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a4e	        0x488d1c02	                    lea rbx, [rdx + rax]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a52	    0x488b0d000000	            mov rcx, qword [0x04001a59] 	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a59	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a5c	          0x4863d0	                         movsxd rdx, eax	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a5f	          0x4889d0	                            mov rax, rdx	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a62	        0x48c1e002	                              shl rax, 2	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a66	          0x4801d0	                            add rax, rdx	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a69	        0x48c1e002	                              shl rax, 2	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a6d	          0x4801c8	                            add rax, rcx	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a70	          0x4889c7	                            mov rdi, rax	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a73	      0xe8f9feffff	           call sym.get_commit_reference	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a78	          0x488903	                    mov qword [rbx], rax	       735	bisect.c	FUNCTION_27	CALL_2
0x4001a7b	        0x8345e001	               add dword [rbp - 0x20], 1	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a7f	    0x8b0500000000	            mov eax, dword [0x04001a85] 	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a85	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a88	            0x7fad	                            jg 0x4001a37	       734	bisect.c	FUNCTION_27	FOR_1
0x4001a8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	bisect.c	FUNCTION_27
0x4001a8e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       736	bisect.c	FUNCTION_27
0x4001a91	            0x8910	                    mov dword [rax], edx	       736	bisect.c	FUNCTION_27
0x4001a93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       738	bisect.c	FUNCTION_27
0x4001a97	        0x4883c428	                           add rsp, 0x28	       739	bisect.c	FUNCTION_27
0x4001a9b	              0x5b	                                 pop rbx	       739	bisect.c	FUNCTION_27
0x4001a9c	              0x5d	                                 pop rbp	       739	bisect.c	FUNCTION_27
0x4001a9d	              0xc3	                                     ret	       739	bisect.c	FUNCTION_27
count_distance	functions,0:CALL,1:DO,0:SWITCH,0:IF,3:ELSE,0:FOR,0:WHILE,2	65
0x4000338	              0x55	                                push rbp	        38	bisect.c	FUNCTION_1
0x4000339	          0x4889e5	                            mov rbp, rsp	        38	bisect.c	FUNCTION_1
0x400033c	        0x4883ec30	                           sub rsp, 0x30	        38	bisect.c	FUNCTION_1
0x4000340	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        38	bisect.c	FUNCTION_1
0x4000344	    0xc745ec000000	               mov dword [rbp - 0x14], 0	        39	bisect.c	FUNCTION_1
0x400034b	      0xe9ba000000	                           jmp 0x400040a	        41	bisect.c	FUNCTION_1	WHILE_1
0x4000350	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	bisect.c	FUNCTION_1	WHILE_1
0x4000354	          0x488b00	                    mov rax, qword [rax]	        42	bisect.c	FUNCTION_1	WHILE_1
0x4000357	        0x488945f8	                mov qword [rbp - 8], rax	        42	bisect.c	FUNCTION_1	WHILE_1
0x400035b	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x400035f	            0x8b00	                    mov eax, dword [rax]	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000361	          0xc1e804	                              shr eax, 4	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000364	      0x25ffffff07	                      and eax, 0x7ffffff	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000369	      0x2502000100	                        and eax, 0x10002	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x400036e	            0x85c0	                           test eax, eax	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000370	     0xf85a1000000	                           jne 0x4000417	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000376	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x400037a	            0x8b00	                    mov eax, dword [rax]	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x400037c	          0xc1e804	                              shr eax, 4	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x400037f	      0x25ffffff07	                      and eax, 0x7ffffff	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x4000384	          0x83e004	                              and eax, 4	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x4000387	            0x85c0	                           test eax, eax	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x4000389	            0x7504	                           jne 0x400038f	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x400038b	        0x8345ec01	               add dword [rbp - 0x14], 1	        48	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x400038f	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	bisect.c	FUNCTION_1	WHILE_1
0x4000393	            0x8b00	                    mov eax, dword [rax]	        49	bisect.c	FUNCTION_1	WHILE_1
0x4000395	          0xc1e804	                              shr eax, 4	        49	bisect.c	FUNCTION_1	WHILE_1
0x4000398	      0x25ffffff07	                      and eax, 0x7ffffff	        49	bisect.c	FUNCTION_1	WHILE_1
0x400039d	       0xd00000100	                         or eax, 0x10000	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003a2	            0x89c2	                            mov edx, eax	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003a4	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003a8	    0x81e2ffffff07	                      and edx, 0x7ffffff	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003ae	            0x89d1	                            mov ecx, edx	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003b0	          0xc1e104	                              shl ecx, 4	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003b3	            0x8b10	                    mov edx, dword [rax]	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003b5	    0x81e20f000080	                     and edx, 0x8000000f	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003bb	             0x9ca	                             or edx, ecx	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003bd	            0x8910	                    mov dword [rax], edx	        49	bisect.c	FUNCTION_1	WHILE_1
0x40003bf	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	bisect.c	FUNCTION_1	WHILE_1
0x40003c3	        0x488b4030	            mov rax, qword [rax + 0x30] 	        50	bisect.c	FUNCTION_1	WHILE_1
0x40003c7	        0x488945f0	             mov qword [rbp - 0x10], rax	        50	bisect.c	FUNCTION_1	WHILE_1
0x40003cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        51	bisect.c	FUNCTION_1	WHILE_1
0x40003cf	        0x488945d8	             mov qword [rbp - 0x28], rax	        51	bisect.c	FUNCTION_1	WHILE_1
0x40003d3	      0x48837df000	               cmp qword [rbp - 0x10], 0	        52	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x40003d8	            0x7430	                            je 0x400040a	        52	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x40003da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x40003de	        0x488b4008	                mov rax, qword [rax + 8]	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x40003e2	        0x488945f0	             mov qword [rbp - 0x10], rax	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x40003e6	            0xeb1b	                           jmp 0x4000403	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x40003e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x40003ec	          0x4889c7	                            mov rdi, rax	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x40003ef	      0xe844ffffff	                 call sym.count_distance	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x40003f4	           0x145ec	             add dword [rbp - 0x14], eax	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x40003f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x40003fb	        0x488b4008	                mov rax, qword [rax + 8]	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x40003ff	        0x488945f0	             mov qword [rbp - 0x10], rax	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x4000403	      0x48837df000	               cmp qword [rbp - 0x10], 0	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x4000408	            0x75de	                           jne 0x40003e8	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x400040a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        41	bisect.c	FUNCTION_1	WHILE_1
0x400040f	     0xf853bffffff	                           jne 0x4000350	        41	bisect.c	FUNCTION_1	WHILE_1
0x4000415	            0xeb01	                           jmp 0x4000418	        41	bisect.c	FUNCTION_1	WHILE_1
0x4000417	              0x90	                                     nop	        46	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x4000418	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        61	bisect.c	FUNCTION_1
0x400041b	              0xc9	                                   leave	        62	bisect.c	FUNCTION_1
0x400041c	              0xc3	                                     ret	        62	bisect.c	FUNCTION_1
read_bisect_refs	functions,0:CALL,1:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	8
0x4000dd2	              0x55	                                push rbp	       439	bisect.c	FUNCTION_13
0x4000dd3	          0x4889e5	                            mov rbp, rsp	       439	bisect.c	FUNCTION_13
0x4000dd6	      0xba00000000	                              mov edx, 0	       440	bisect.c	FUNCTION_13	CALL_1
0x4000ddb	      0xbe00000000	                              mov esi, 0	       440	bisect.c	FUNCTION_13	CALL_1
0x4000de0	      0xbf00000000	                              mov edi, 0	       440	bisect.c	FUNCTION_13	CALL_1
0x4000de5	      0xe800000000	                          call 0x4000dea	       440	bisect.c	FUNCTION_13	CALL_1
0x4000dea	              0x5d	                                 pop rbp	       441	bisect.c	FUNCTION_13
0x4000deb	              0xc3	                                     ret	       441	bisect.c	FUNCTION_13
clear_distance	functions,0:CALL,0:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,1	29
0x400041d	              0x55	                                push rbp	        65	bisect.c	FUNCTION_2
0x400041e	          0x4889e5	                            mov rbp, rsp	        65	bisect.c	FUNCTION_2
0x4000421	        0x48897de8	             mov qword [rbp - 0x18], rdi	        65	bisect.c	FUNCTION_2
0x4000425	            0xeb47	                           jmp 0x400046e	        66	bisect.c	FUNCTION_2	WHILE_1
0x4000427	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	bisect.c	FUNCTION_2	WHILE_1
0x400042b	          0x488b00	                    mov rax, qword [rax]	        67	bisect.c	FUNCTION_2	WHILE_1
0x400042e	        0x488945f8	                mov qword [rbp - 8], rax	        67	bisect.c	FUNCTION_2	WHILE_1
0x4000432	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000436	            0x8b00	                    mov eax, dword [rax]	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000438	          0xc1e804	                              shr eax, 4	        68	bisect.c	FUNCTION_2	WHILE_1
0x400043b	      0x25ffffff07	                      and eax, 0x7ffffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000440	      0x25fffffe07	                      and eax, 0x7feffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000445	            0x89c2	                            mov edx, eax	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000447	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	bisect.c	FUNCTION_2	WHILE_1
0x400044b	    0x81e2ffffff07	                      and edx, 0x7ffffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000451	            0x89d1	                            mov ecx, edx	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000453	          0xc1e104	                              shl ecx, 4	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000456	            0x8b10	                    mov edx, dword [rax]	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000458	    0x81e20f000080	                     and edx, 0x8000000f	        68	bisect.c	FUNCTION_2	WHILE_1
0x400045e	             0x9ca	                             or edx, ecx	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000460	            0x8910	                    mov dword [rax], edx	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000462	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	bisect.c	FUNCTION_2	WHILE_1
0x4000466	        0x488b4008	                mov rax, qword [rax + 8]	        69	bisect.c	FUNCTION_2	WHILE_1
0x400046a	        0x488945e8	             mov qword [rbp - 0x18], rax	        69	bisect.c	FUNCTION_2	WHILE_1
0x400046e	      0x48837de800	               cmp qword [rbp - 0x18], 0	        66	bisect.c	FUNCTION_2	WHILE_1
0x4000473	            0x75b2	                           jne 0x4000427	        66	bisect.c	FUNCTION_2	WHILE_1
0x4000475	              0x90	                                     nop	        71	bisect.c	FUNCTION_2
0x4000476	              0x5d	                                 pop rbp	        71	bisect.c	FUNCTION_2
0x4000477	              0xc3	                                     ret	        71	bisect.c	FUNCTION_2
mark_for_removal	functions,0:CALL,2:DO,0:SWITCH,0:IF,0:ELSE,0:FOR,0:WHILE,0	23
0x400262b	              0x55	                                push rbp	      1052	bisect.c	FUNCTION_39
0x400262c	          0x4889e5	                            mov rbp, rsp	      1052	bisect.c	FUNCTION_39
0x400262f	        0x4883ec30	                           sub rsp, 0x30	      1052	bisect.c	FUNCTION_39
0x4002633	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1052	bisect.c	FUNCTION_39
0x4002637	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1052	bisect.c	FUNCTION_39
0x400263b	          0x8955dc	             mov dword [rbp - 0x24], edx	      1052	bisect.c	FUNCTION_39
0x400263e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1052	bisect.c	FUNCTION_39
0x4002642	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1053	bisect.c	FUNCTION_39
0x4002646	        0x488945f0	             mov qword [rbp - 0x10], rax	      1053	bisect.c	FUNCTION_39
0x400264a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	bisect.c	FUNCTION_39	CALL_1
0x400264e	          0x4889c6	                            mov rsi, rax	      1054	bisect.c	FUNCTION_39	CALL_1
0x4002651	      0xbf00000000	                              mov edi, 0	      1054	bisect.c	FUNCTION_39	CALL_1
0x4002656	      0xb800000000	                              mov eax, 0	      1054	bisect.c	FUNCTION_39	CALL_1
0x400265b	      0xe800000000	                          call 0x4002660	      1054	bisect.c	FUNCTION_39	CALL_1
0x4002660	        0x488945f8	                mov qword [rbp - 8], rax	      1054	bisect.c	FUNCTION_39	CALL_1
0x4002664	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1055	bisect.c	FUNCTION_39	CALL_2
0x4002668	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1055	bisect.c	FUNCTION_39	CALL_2
0x400266c	          0x4889d6	                            mov rsi, rdx	      1055	bisect.c	FUNCTION_39	CALL_2
0x400266f	          0x4889c7	                            mov rdi, rax	      1055	bisect.c	FUNCTION_39	CALL_2
0x4002672	      0xe800000000	                          call 0x4002677	      1055	bisect.c	FUNCTION_39	CALL_2
0x4002677	      0xb800000000	                              mov eax, 0	      1056	bisect.c	FUNCTION_39
0x400267c	              0xc9	                                   leave	      1057	bisect.c	FUNCTION_39
0x400267d	              0xc3	                                     ret	      1057	bisect.c	FUNCTION_39
