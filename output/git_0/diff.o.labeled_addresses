builtin_diff_files	WHILE,1:DO,0:FOR,0:SWITCH,0:IF,7:CALL,10:ELSE,5:functions,0	134
0x4000ae0	              0x55	                                push rbp	       219	diff.c	FUNCTION_9
0x4000ae1	          0x4889e5	                            mov rbp, rsp	       219	diff.c	FUNCTION_9
0x4000ae4	              0x53	                                push rbx	       219	diff.c	FUNCTION_9
0x4000ae5	        0x4883ec38	                           sub rsp, 0x38	       219	diff.c	FUNCTION_9
0x4000ae9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       219	diff.c	FUNCTION_9
0x4000aed	          0x8975d4	             mov dword [rbp - 0x2c], esi	       219	diff.c	FUNCTION_9
0x4000af0	        0x488955c8	             mov qword [rbp - 0x38], rdx	       219	diff.c	FUNCTION_9
0x4000af4	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       220	diff.c	FUNCTION_9
0x4000afb	      0xe90a010000	                           jmp 0x4000c0a	       222	diff.c	FUNCTION_9	WHILE_1
0x4000b00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b04	        0x4883c008	                              add rax, 8	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b08	          0x488b00	                    mov rax, qword [rax]	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b0b	      0xbe00000000	                              mov esi, 0	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b10	          0x4889c7	                            mov rdi, rax	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b13	      0xe800000000	                          call 0x4000b18	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b18	            0x85c0	                           test eax, eax	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b1a	            0x7513	                           jne 0x4000b2f	       223	diff.c	FUNCTION_9	WHILE_1	IF_1	CALL_1
0x4000b1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	diff.c	FUNCTION_9	WHILE_1	IF_1
0x4000b20	    0xc780cc040000	              mov dword [rax + 0x4cc], 1	       224	diff.c	FUNCTION_9	WHILE_1	IF_1
0x4000b2a	      0xe9d2000000	                           jmp 0x4000c01	       224	diff.c	FUNCTION_9	WHILE_1	IF_1
0x4000b2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b33	        0x4883c008	                              add rax, 8	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b37	          0x488b00	                    mov rax, qword [rax]	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b3a	      0xbe00000000	                              mov esi, 0	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b3f	          0x4889c7	                            mov rdi, rax	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b42	      0xe800000000	                          call 0x4000b47	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b47	            0x85c0	                           test eax, eax	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b49	            0x7513	                           jne 0x4000b5e	       225	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2	CALL_2
0x4000b4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       226	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2
0x4000b4f	    0xc780cc040000	              mov dword [rax + 0x4cc], 2	       226	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2
0x4000b59	      0xe9a3000000	                           jmp 0x4000c01	       226	diff.c	FUNCTION_9	WHILE_1	ELSE_1	IF_2
0x4000b5e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b62	        0x4883c008	                              add rax, 8	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b66	          0x488b00	                    mov rax, qword [rax]	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b69	      0xbe00000000	                              mov esi, 0	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b6e	          0x4889c7	                            mov rdi, rax	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b71	      0xe800000000	                          call 0x4000b76	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b76	            0x85c0	                           test eax, eax	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b78	            0x7510	                           jne 0x4000b8a	       227	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3	CALL_3
0x4000b7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       228	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3
0x4000b7e	    0xc780cc040000	              mov dword [rax + 0x4cc], 3	       228	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3
0x4000b88	            0xeb77	                           jmp 0x4000c01	       228	diff.c	FUNCTION_9	WHILE_1	ELSE_2	IF_3
0x4000b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000b8e	        0x4883c008	                              add rax, 8	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000b92	          0x488b00	                    mov rax, qword [rax]	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000b95	      0xbe00000000	                              mov esi, 0	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000b9a	          0x4889c7	                            mov rdi, rax	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000b9d	      0xe800000000	                          call 0x4000ba2	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000ba2	            0x85c0	                           test eax, eax	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000ba4	            0x7506	                           jne 0x4000bac	       229	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4	CALL_4
0x4000ba6	        0x834dec01	                or dword [rbp - 0x14], 1	       230	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4
0x4000baa	            0xeb55	                           jmp 0x4000c01	       230	diff.c	FUNCTION_9	WHILE_1	ELSE_3	IF_4
0x4000bac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bb0	        0x4883c008	                              add rax, 8	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bb4	          0x488b00	                    mov rax, qword [rax]	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bb7	      0xbe00000000	                              mov esi, 0	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bbc	          0x4889c7	                            mov rdi, rax	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bc4	            0x85c0	                           test eax, eax	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bc6	            0x750a	                           jne 0x4000bd2	       231	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5	CALL_5
0x4000bc8	      0xbf00000000	                              mov edi, 0	       232	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5
0x4000bcd	      0xe800000000	                          call 0x4000bd2	       232	diff.c	FUNCTION_9	WHILE_1	ELSE_4	IF_5
0x4000bd2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bd6	        0x4883c008	                              add rax, 8	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bda	          0x488b18	                    mov rbx, qword [rax]	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bdd	      0xbf00000000	                              mov edi, 0	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000be2	      0xe864f4ffff	                               call sym.	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000be7	          0x4889de	                            mov rsi, rbx	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bea	          0x4889c7	                            mov rdi, rax	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bed	      0xb800000000	                              mov eax, 0	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bf2	      0xe800000000	                          call 0x4000bf7	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bf7	      0xe844f4ffff	                    call sym.const_error	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000bfc	      0xe9c9000000	                           jmp 0x4000cca	       234	diff.c	FUNCTION_9	WHILE_1	CALL_7
0x4000c01	      0x488345c808	               add qword [rbp - 0x38], 8	       235	diff.c	FUNCTION_9	WHILE_1
0x4000c06	        0x836dd401	               sub dword [rbp - 0x2c], 1	       235	diff.c	FUNCTION_9	WHILE_1
0x4000c0a	        0x837dd401	               cmp dword [rbp - 0x2c], 1	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c0e	            0x7e16	                           jle 0x4000c26	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c14	        0x4883c008	                              add rax, 8	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c18	          0x488b00	                    mov rax, qword [rax]	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c1b	           0xfb600	                   movzx eax, byte [rax]	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c1e	            0x3c2d	                            cmp al, 0x2d	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c20	     0xf84dafeffff	                            je 0x4000b00	       222	diff.c	FUNCTION_9	WHILE_1
0x4000c26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	diff.c	FUNCTION_9	IF_6
0x4000c2a	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	       244	diff.c	FUNCTION_9	IF_6
0x4000c30	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       244	diff.c	FUNCTION_9	IF_6
0x4000c33	            0x7553	                           jne 0x4000c88	       244	diff.c	FUNCTION_9	IF_6
0x4000c35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	diff.c	FUNCTION_9	IF_6
0x4000c39	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       244	diff.c	FUNCTION_9	IF_6
0x4000c3d	          0x83e040	                           and eax, 0x40	       244	diff.c	FUNCTION_9	IF_6
0x4000c40	            0x84c0	                             test al, al	       244	diff.c	FUNCTION_9	IF_6
0x4000c42	            0x7544	                           jne 0x4000c88	       244	diff.c	FUNCTION_9	IF_6
0x4000c44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	diff.c	FUNCTION_9	IF_6
0x4000c48	    0x8b8058050000	           mov eax, dword [rax + 0x558] 	       245	diff.c	FUNCTION_9	IF_6
0x4000c4e	          0x83e010	                           and eax, 0x10	       245	diff.c	FUNCTION_9	IF_6
0x4000c51	            0x85c0	                           test eax, eax	       244	diff.c	FUNCTION_9	IF_6
0x4000c53	            0x7433	                            je 0x4000c88	       244	diff.c	FUNCTION_9	IF_6
0x4000c55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       246	diff.c	FUNCTION_9	IF_6
0x4000c59	         0xfb65079	           movzx edx, byte [rax + 0x79] 	       246	diff.c	FUNCTION_9	IF_6
0x4000c5d	          0x83ca80	                      or edx, 0xffffff80	       246	diff.c	FUNCTION_9	IF_6
0x4000c60	          0x885079	               mov byte [rax + 0x79], dl	       246	diff.c	FUNCTION_9	IF_6
0x4000c63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       246	diff.c	FUNCTION_9	IF_6
0x4000c67	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       246	diff.c	FUNCTION_9	IF_6
0x4000c6b	          0xc0e807	                               shr al, 7	       246	diff.c	FUNCTION_9	IF_6
0x4000c6e	            0x89c2	                            mov edx, eax	       246	diff.c	FUNCTION_9	IF_6
0x4000c70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       246	diff.c	FUNCTION_9	IF_6
0x4000c74	          0x83e201	                              and edx, 1	       246	diff.c	FUNCTION_9	IF_6
0x4000c77	            0x89d1	                            mov ecx, edx	       246	diff.c	FUNCTION_9	IF_6
0x4000c79	          0xc1e106	                              shl ecx, 6	       246	diff.c	FUNCTION_9	IF_6
0x4000c7c	         0xfb65079	           movzx edx, byte [rax + 0x79] 	       246	diff.c	FUNCTION_9	IF_6
0x4000c80	          0x83e2bf	                     and edx, 0xffffffbf	       246	diff.c	FUNCTION_9	IF_6
0x4000c83	             0x9ca	                             or edx, ecx	       246	diff.c	FUNCTION_9	IF_6
0x4000c85	          0x885079	               mov byte [rax + 0x79], dl	       246	diff.c	FUNCTION_9	IF_6
0x4000c88	      0xe800000000	                          call 0x4000c8d	       248	diff.c	FUNCTION_9	CALL_8
0x4000c8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	diff.c	FUNCTION_9	IF_7
0x4000c91	    0x480508060000	                          add rax, 0x608	       249	diff.c	FUNCTION_9	IF_7
0x4000c97	          0x4889c6	                            mov rsi, rax	       249	diff.c	FUNCTION_9	IF_7
0x4000c9a	      0xbf00000000	                              mov edi, 0	       249	diff.c	FUNCTION_9	IF_7
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       249	diff.c	FUNCTION_9	IF_7
0x4000ca4	            0x85c0	                           test eax, eax	       249	diff.c	FUNCTION_9	IF_7
0x4000ca6	            0x7911	                           jns 0x4000cb9	       249	diff.c	FUNCTION_9	IF_7
0x4000ca8	      0xbf00000000	                              mov edi, 0	       250	diff.c	FUNCTION_9	IF_7	CALL_9
0x4000cad	      0xe800000000	                          call 0x4000cb2	       250	diff.c	FUNCTION_9	IF_7	CALL_9
0x4000cb2	      0xb8ffffffff	                     mov eax, 0xffffffff	       251	diff.c	FUNCTION_9	IF_7
0x4000cb7	            0xeb11	                           jmp 0x4000cca	       251	diff.c	FUNCTION_9	IF_7
0x4000cb9	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       253	diff.c	FUNCTION_9	CALL_10
0x4000cbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	diff.c	FUNCTION_9	CALL_10
0x4000cc0	            0x89d6	                            mov esi, edx	       253	diff.c	FUNCTION_9	CALL_10
0x4000cc2	          0x4889c7	                            mov rdi, rax	       253	diff.c	FUNCTION_9	CALL_10
0x4000cc5	      0xe800000000	                          call 0x4000cca	       253	diff.c	FUNCTION_9	CALL_10
0x4000cca	        0x4883c438	                           add rsp, 0x38	       254	diff.c	FUNCTION_9
0x4000cce	              0x5b	                                 pop rbx	       254	diff.c	FUNCTION_9
0x4000ccf	              0x5d	                                 pop rbp	       254	diff.c	FUNCTION_9
0x4000cd0	              0xc3	                                     ret	       254	diff.c	FUNCTION_9
_	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,1:CALL,0:ELSE,0:functions,0	15
0x400004b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_13
0x400004c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_13
0x400004f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_13
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_13
0x4000057	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_13	IF_1
0x400005b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_13	IF_1
0x400005e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_13	IF_1
0x4000060	            0x7507	                           jne 0x4000069	        52	gettext.h	FUNCTION_13	IF_1
0x4000062	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_13	IF_1
0x4000067	            0xeb0c	                           jmp 0x4000075	        53	gettext.h	FUNCTION_13	IF_1
0x4000069	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_13
0x400006d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_13
0x4000070	      0xe800000000	                          call 0x4000075	        54	gettext.h	FUNCTION_13
0x4000075	              0xc9	                                   leave	        55	gettext.h	FUNCTION_13
0x4000076	              0xc3	                                     ret	        55	gettext.h	FUNCTION_13
is_null_oid	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,0:CALL,1:ELSE,0:functions,0	13
0x4000127	              0x55	                                push rbp	       989	cache.h	FUNCTION_25
0x4000128	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_25
0x400012b	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_25
0x400012f	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_25
0x4000133	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_25	CALL_1
0x4000137	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_25	CALL_1
0x400013c	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_25	CALL_1
0x400013f	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_25	CALL_1
0x4000144	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_25	CALL_1
0x4000146	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_25	CALL_1
0x4000149	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_25	CALL_1
0x400014c	              0xc9	                                   leave	       991	cache.h	FUNCTION_25
0x400014d	              0xc3	                                     ret	       991	cache.h	FUNCTION_25
builtin_diff_combined	WHILE,0:DO,0:FOR,1:SWITCH,0:IF,2:CALL,4:ELSE,0:functions,0	83
0x4000916	              0x55	                                push rbp	       187	diff.c	FUNCTION_7
0x4000917	          0x4889e5	                            mov rbp, rsp	       187	diff.c	FUNCTION_7
0x400091a	        0x4883ec50	                           sub rsp, 0x50	       187	diff.c	FUNCTION_7
0x400091e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       187	diff.c	FUNCTION_7
0x4000922	          0x8975c4	             mov dword [rbp - 0x3c], esi	       187	diff.c	FUNCTION_7
0x4000925	        0x488955b8	             mov qword [rbp - 0x48], rdx	       187	diff.c	FUNCTION_7
0x4000929	        0x48894db0	             mov qword [rbp - 0x50], rcx	       187	diff.c	FUNCTION_7
0x400092d	        0x448945c0	             mov dword [rbp - 0x40], r8d	       187	diff.c	FUNCTION_7
0x4000931	    0x64488b042528	                mov rax, qword fs:[0x28]	       187	diff.c	FUNCTION_7
0x400093a	        0x488945f8	                mov qword [rbp - 8], rax	       187	diff.c	FUNCTION_7
0x400093e	            0x31c0	                            xor eax, eax	       187	diff.c	FUNCTION_7
0x4000940	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       188	diff.c	FUNCTION_7
0x4000948	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       188	diff.c	FUNCTION_7
0x400094f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       188	diff.c	FUNCTION_7
0x4000956	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       188	diff.c	FUNCTION_7
0x400095d	        0x837dc401	               cmp dword [rbp - 0x3c], 1	       191	diff.c	FUNCTION_7	IF_1
0x4000961	            0x7e0a	                           jle 0x400096d	       191	diff.c	FUNCTION_7	IF_1
0x4000963	      0xbf00000000	                              mov edi, 0	       192	diff.c	FUNCTION_7	CALL_1
0x4000968	      0xe800000000	                          call 0x400096d	       192	diff.c	FUNCTION_7	CALL_1
0x400096d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       194	diff.c	FUNCTION_7	IF_2
0x4000971	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       194	diff.c	FUNCTION_7	IF_2
0x4000975	          0x83e080	                     and eax, 0xffffff80	       194	diff.c	FUNCTION_7	IF_2
0x4000978	            0x84c0	                             test al, al	       194	diff.c	FUNCTION_7	IF_2
0x400097a	            0x7540	                           jne 0x40009bc	       194	diff.c	FUNCTION_7	IF_2
0x400097c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       194	diff.c	FUNCTION_7	IF_2
0x4000980	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       194	diff.c	FUNCTION_7	IF_2
0x4000984	          0x83e040	                           and eax, 0x40	       194	diff.c	FUNCTION_7	IF_2
0x4000987	            0x84c0	                             test al, al	       194	diff.c	FUNCTION_7	IF_2
0x4000989	            0x7531	                           jne 0x40009bc	       194	diff.c	FUNCTION_7	IF_2
0x400098b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       195	diff.c	FUNCTION_7	IF_2
0x400098f	         0xfb65079	           movzx edx, byte [rax + 0x79] 	       195	diff.c	FUNCTION_7	IF_2
0x4000993	          0x83ca40	                            or edx, 0x40	       195	diff.c	FUNCTION_7	IF_2
0x4000996	          0x885079	               mov byte [rax + 0x79], dl	       195	diff.c	FUNCTION_7	IF_2
0x4000999	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       195	diff.c	FUNCTION_7	IF_2
0x400099d	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       195	diff.c	FUNCTION_7	IF_2
0x40009a1	          0xc0e806	                               shr al, 6	       195	diff.c	FUNCTION_7	IF_2
0x40009a4	          0x83e001	                              and eax, 1	       195	diff.c	FUNCTION_7	IF_2
0x40009a7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       195	diff.c	FUNCTION_7	IF_2
0x40009ab	          0xc1e007	                              shl eax, 7	       195	diff.c	FUNCTION_7	IF_2
0x40009ae	            0x89c1	                            mov ecx, eax	       195	diff.c	FUNCTION_7	IF_2
0x40009b0	         0xfb64279	           movzx eax, byte [rdx + 0x79] 	       195	diff.c	FUNCTION_7	IF_2
0x40009b4	          0x83e07f	                           and eax, 0x7f	       195	diff.c	FUNCTION_7	IF_2
0x40009b7	             0x9c8	                             or eax, ecx	       195	diff.c	FUNCTION_7	IF_2
0x40009b9	          0x884279	               mov byte [rdx + 0x79], al	       195	diff.c	FUNCTION_7	IF_2
0x40009bc	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       196	diff.c	FUNCTION_7	FOR_1
0x40009c3	            0xeb2d	                           jmp 0x40009f2	       196	diff.c	FUNCTION_7	FOR_1
0x40009c5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       197	diff.c	FUNCTION_7	CALL_2
0x40009c8	            0x4898	                                    cdqe	       197	diff.c	FUNCTION_7	CALL_2
0x40009ca	        0x48c1e005	                              shl rax, 5	       197	diff.c	FUNCTION_7	CALL_2
0x40009ce	          0x4889c2	                            mov rdx, rax	       197	diff.c	FUNCTION_7	CALL_2
0x40009d1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       197	diff.c	FUNCTION_7	CALL_2
0x40009d5	          0x4801d0	                            add rax, rdx	       197	diff.c	FUNCTION_7	CALL_2
0x40009d8	          0x488b00	                    mov rax, qword [rax]	       197	diff.c	FUNCTION_7	CALL_2
0x40009db	        0x488d5004	                      lea rdx, [rax + 4]	       197	diff.c	FUNCTION_7	CALL_2
0x40009df	        0x488d45e0	                   lea rax, [rbp - 0x20]	       197	diff.c	FUNCTION_7	CALL_2
0x40009e3	          0x4889d6	                            mov rsi, rdx	       197	diff.c	FUNCTION_7	CALL_2
0x40009e6	          0x4889c7	                            mov rdi, rax	       197	diff.c	FUNCTION_7	CALL_2
0x40009e9	      0xe800000000	                          call 0x40009ee	       197	diff.c	FUNCTION_7	CALL_2
0x40009ee	        0x8345dc01	               add dword [rbp - 0x24], 1	       196	diff.c	FUNCTION_7	FOR_1
0x40009f2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       196	diff.c	FUNCTION_7	FOR_1
0x40009f5	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       196	diff.c	FUNCTION_7	FOR_1
0x40009f8	            0x7ccb	                            jl 0x40009c5	       196	diff.c	FUNCTION_7	FOR_1
0x40009fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       199	diff.c	FUNCTION_7
0x40009fe	         0xfb64079	           movzx eax, byte [rax + 0x79] 	       199	diff.c	FUNCTION_7
0x4000a02	          0xc0e807	                               shr al, 7	       199	diff.c	FUNCTION_7
0x4000a05	           0xfb6d0	                           movzx edx, al	       198	diff.c	FUNCTION_7	CALL_3
0x4000a08	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       198	diff.c	FUNCTION_7	CALL_3
0x4000a0c	          0x488b00	                    mov rax, qword [rax]	       198	diff.c	FUNCTION_7	CALL_3
0x4000a0f	        0x488d7804	                      lea rdi, [rax + 4]	       198	diff.c	FUNCTION_7	CALL_3
0x4000a13	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       198	diff.c	FUNCTION_7	CALL_3
0x4000a17	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	diff.c	FUNCTION_7	CALL_3
0x4000a1b	          0x4889c6	                            mov rsi, rax	       198	diff.c	FUNCTION_7	CALL_3
0x4000a1e	      0xe800000000	                          call 0x4000a23	       198	diff.c	FUNCTION_7	CALL_3
0x4000a23	        0x488d45e0	                   lea rax, [rbp - 0x20]	       200	diff.c	FUNCTION_7	CALL_4
0x4000a27	          0x4889c7	                            mov rdi, rax	       200	diff.c	FUNCTION_7	CALL_4
0x4000a2a	      0xe800000000	                          call 0x4000a2f	       200	diff.c	FUNCTION_7	CALL_4
0x4000a2f	      0xb800000000	                              mov eax, 0	       201	diff.c	FUNCTION_7
0x4000a34	        0x488b75f8	                mov rsi, qword [rbp - 8]	       202	diff.c	FUNCTION_7
0x4000a38	    0x644833342528	                xor rsi, qword fs:[0x28]	       202	diff.c	FUNCTION_7
0x4000a41	            0x7405	                            je 0x4000a48	       202	diff.c	FUNCTION_7
0x4000a43	      0xe800000000	                          call 0x4000a48	       202	diff.c	FUNCTION_7
0x4000a48	              0xc9	                                   leave	       202	diff.c	FUNCTION_7
0x4000a49	              0xc3	                                     ret	       202	diff.c	FUNCTION_7
builtin_diff_blobs	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,3:CALL,7:ELSE,0:functions,0	84
0x40005e9	              0x55	                                push rbp	       104	diff.c	FUNCTION_4
0x40005ea	          0x4889e5	                            mov rbp, rsp	       104	diff.c	FUNCTION_4
0x40005ed	              0x53	                                push rbx	       104	diff.c	FUNCTION_4
0x40005ee	        0x4883ec38	                           sub rsp, 0x38	       104	diff.c	FUNCTION_4
0x40005f2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       104	diff.c	FUNCTION_4
0x40005f6	          0x8975d4	             mov dword [rbp - 0x2c], esi	       104	diff.c	FUNCTION_4
0x40005f9	        0x488955c8	             mov qword [rbp - 0x38], rdx	       104	diff.c	FUNCTION_4
0x40005fd	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       104	diff.c	FUNCTION_4
0x4000601	      0xbfa4810000	                         mov edi, 0x81a4	       105	diff.c	FUNCTION_4	CALL_1
0x4000606	      0xe86cfaffff	                     call sym.canon_mode	       105	diff.c	FUNCTION_4	CALL_1
0x400060b	          0x8945ec	             mov dword [rbp - 0x14], eax	       105	diff.c	FUNCTION_4	CALL_1
0x400060e	        0x837dd401	               cmp dword [rbp - 0x2c], 1	       107	diff.c	FUNCTION_4	IF_1
0x4000612	            0x7e0a	                           jle 0x400061e	       107	diff.c	FUNCTION_4	IF_1
0x4000614	      0xbf00000000	                              mov edi, 0	       108	diff.c	FUNCTION_4	CALL_2
0x4000619	      0xe800000000	                          call 0x400061e	       108	diff.c	FUNCTION_4	CALL_2
0x400061e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	diff.c	FUNCTION_4	IF_2
0x4000622	          0x488b00	                    mov rax, qword [rax]	       110	diff.c	FUNCTION_4	IF_2
0x4000625	          0x8b4018	            mov eax, dword [rax + 0x18] 	       110	diff.c	FUNCTION_4	IF_2
0x4000628	      0x3d00300000	                         cmp eax, 0x3000	       110	diff.c	FUNCTION_4	IF_2
0x400062d	            0x750d	                           jne 0x400063c	       110	diff.c	FUNCTION_4	IF_2
0x400062f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       111	diff.c	FUNCTION_4	IF_2
0x4000633	          0x488b00	                    mov rax, qword [rax]	       111	diff.c	FUNCTION_4	IF_2
0x4000636	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       111	diff.c	FUNCTION_4	IF_2
0x4000639	          0x895018	             mov dword [rax + 0x18], edx	       111	diff.c	FUNCTION_4	IF_2
0x400063c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       113	diff.c	FUNCTION_4	IF_3
0x4000640	        0x4883c008	                              add rax, 8	       113	diff.c	FUNCTION_4	IF_3
0x4000644	          0x488b00	                    mov rax, qword [rax]	       113	diff.c	FUNCTION_4	IF_3
0x4000647	          0x8b4018	            mov eax, dword [rax + 0x18] 	       113	diff.c	FUNCTION_4	IF_3
0x400064a	      0x3d00300000	                         cmp eax, 0x3000	       113	diff.c	FUNCTION_4	IF_3
0x400064f	            0x7511	                           jne 0x4000662	       113	diff.c	FUNCTION_4	IF_3
0x4000651	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       114	diff.c	FUNCTION_4	IF_3
0x4000655	        0x4883c008	                              add rax, 8	       114	diff.c	FUNCTION_4	IF_3
0x4000659	          0x488b00	                    mov rax, qword [rax]	       114	diff.c	FUNCTION_4	IF_3
0x400065c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       114	diff.c	FUNCTION_4	IF_3
0x400065f	          0x895018	             mov dword [rax + 0x18], edx	       114	diff.c	FUNCTION_4	IF_3
0x4000662	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       120	diff.c	FUNCTION_4	CALL_5
0x4000666	        0x4883c008	                              add rax, 8	       120	diff.c	FUNCTION_4	CALL_5
0x400066a	          0x488b00	                    mov rax, qword [rax]	       116	diff.c	FUNCTION_4	CALL_3
0x400066d	          0x4889c7	                            mov rdi, rax	       116	diff.c	FUNCTION_4	CALL_3
0x4000670	      0xe8d9faffff	                      call sym.blob_path	       116	diff.c	FUNCTION_4	CALL_3
0x4000675	          0x4889c3	                            mov rbx, rax	       116	diff.c	FUNCTION_4	CALL_3
0x4000678	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       116	diff.c	FUNCTION_4	CALL_3
0x400067c	          0x488b00	                    mov rax, qword [rax]	       116	diff.c	FUNCTION_4	CALL_3
0x400067f	          0x4889c7	                            mov rdi, rax	       116	diff.c	FUNCTION_4	CALL_3
0x4000682	      0xe8c7faffff	                      call sym.blob_path	       116	diff.c	FUNCTION_4	CALL_3
0x4000687	          0x4989c1	                             mov r9, rax	       116	diff.c	FUNCTION_4	CALL_3
0x400068a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	diff.c	FUNCTION_4
0x400068e	        0x4883c008	                              add rax, 8	       118	diff.c	FUNCTION_4
0x4000692	          0x488b00	                    mov rax, qword [rax]	       118	diff.c	FUNCTION_4
0x4000695	          0x488b00	                    mov rax, qword [rax]	       118	diff.c	FUNCTION_4
0x4000698	        0x4c8d4004	                       lea r8, [rax + 4]	       118	diff.c	FUNCTION_4
0x400069c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	diff.c	FUNCTION_4
0x40006a0	          0x488b00	                    mov rax, qword [rax]	       118	diff.c	FUNCTION_4
0x40006a3	          0x488b00	                    mov rax, qword [rax]	       118	diff.c	FUNCTION_4
0x40006a6	        0x488d4804	                      lea rcx, [rax + 4]	       118	diff.c	FUNCTION_4
0x40006aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       117	diff.c	FUNCTION_4
0x40006ae	        0x4883c008	                              add rax, 8	       117	diff.c	FUNCTION_4
0x40006b2	          0x488b00	                    mov rax, qword [rax]	       117	diff.c	FUNCTION_4
0x40006b5	          0x8b5018	            mov edx, dword [rax + 0x18] 	       116	diff.c	FUNCTION_4	CALL_3
0x40006b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       117	diff.c	FUNCTION_4
0x40006bc	          0x488b00	                    mov rax, qword [rax]	       117	diff.c	FUNCTION_4
0x40006bf	          0x8b4018	            mov eax, dword [rax + 0x18] 	       116	diff.c	FUNCTION_4	CALL_3
0x40006c2	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       116	diff.c	FUNCTION_4	CALL_3
0x40006c6	    0x488dbef80400	                  lea rdi, [rsi + 0x4f8]	       116	diff.c	FUNCTION_4	CALL_3
0x40006cd	        0x4883ec08	                              sub rsp, 8	       116	diff.c	FUNCTION_4	CALL_3
0x40006d1	              0x53	                                push rbx	       116	diff.c	FUNCTION_4	CALL_3
0x40006d2	            0x4151	                                 push r9	       116	diff.c	FUNCTION_4	CALL_3
0x40006d4	            0x6a01	                                  push 1	       116	diff.c	FUNCTION_4	CALL_3
0x40006d6	    0x41b901000000	                              mov r9d, 1	       116	diff.c	FUNCTION_4	CALL_3
0x40006dc	            0x89c6	                            mov esi, eax	       116	diff.c	FUNCTION_4	CALL_3
0x40006de	      0xe894faffff	                   call sym.stuff_change	       116	diff.c	FUNCTION_4	CALL_3
0x40006e3	        0x4883c420	                           add rsp, 0x20	       116	diff.c	FUNCTION_4	CALL_3
0x40006e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       121	diff.c	FUNCTION_4	CALL_6
0x40006eb	    0x4805f8040000	                          add rax, 0x4f8	       121	diff.c	FUNCTION_4	CALL_6
0x40006f1	          0x4889c7	                            mov rdi, rax	       121	diff.c	FUNCTION_4	CALL_6
0x40006f4	      0xe800000000	                          call 0x40006f9	       121	diff.c	FUNCTION_4	CALL_6
0x40006f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       122	diff.c	FUNCTION_4	CALL_7
0x40006fd	    0x4805f8040000	                          add rax, 0x4f8	       122	diff.c	FUNCTION_4	CALL_7
0x4000703	          0x4889c7	                            mov rdi, rax	       122	diff.c	FUNCTION_4	CALL_7
0x4000706	      0xe800000000	                          call 0x400070b	       122	diff.c	FUNCTION_4	CALL_7
0x400070b	      0xb800000000	                              mov eax, 0	       123	diff.c	FUNCTION_4
0x4000710	        0x488b5df8	                mov rbx, qword [rbp - 8]	       124	diff.c	FUNCTION_4
0x4000714	              0xc9	                                   leave	       124	diff.c	FUNCTION_4
0x4000715	              0xc3	                                     ret	       124	diff.c	FUNCTION_4
stuff_change	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,3:CALL,10:ELSE,0:functions,0	148
0x4000177	              0x55	                                push rbp	        40	diff.c	FUNCTION_2
0x4000178	          0x4889e5	                            mov rbp, rsp	        40	diff.c	FUNCTION_2
0x400017b	    0x4881ec900000	                           sub rsp, 0x90	        40	diff.c	FUNCTION_2
0x4000182	        0x48897da8	             mov qword [rbp - 0x58], rdi	        40	diff.c	FUNCTION_2
0x4000186	          0x8975a4	             mov dword [rbp - 0x5c], esi	        40	diff.c	FUNCTION_2
0x4000189	          0x8955a0	             mov dword [rbp - 0x60], edx	        40	diff.c	FUNCTION_2
0x400018c	        0x48894d98	             mov qword [rbp - 0x68], rcx	        40	diff.c	FUNCTION_2
0x4000190	        0x4c894590	              mov qword [rbp - 0x70], r8	        40	diff.c	FUNCTION_2
0x4000194	        0x44894d8c	             mov dword [rbp - 0x74], r9d	        40	diff.c	FUNCTION_2
0x4000198	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        40	diff.c	FUNCTION_2
0x400019c	        0x48894580	             mov qword [rbp - 0x80], rax	        40	diff.c	FUNCTION_2
0x40001a0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        40	diff.c	FUNCTION_2
0x40001a4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	        40	diff.c	FUNCTION_2
0x40001ab	    0x64488b042528	                mov rax, qword fs:[0x28]	        40	diff.c	FUNCTION_2
0x40001b4	        0x488945f8	                mov qword [rbp - 8], rax	        40	diff.c	FUNCTION_2
0x40001b8	            0x31c0	                            xor eax, eax	        40	diff.c	FUNCTION_2
0x40001ba	        0x488b4598	             mov rax, qword [rbp - 0x68]	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001be	          0x4889c7	                            mov rdi, rax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001c1	      0xe861ffffff	                    call sym.is_null_oid	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001c6	            0x85c0	                           test eax, eax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001c8	            0x7535	                           jne 0x40001ff	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001ca	        0x488b4590	             mov rax, qword [rbp - 0x70]	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001ce	          0x4889c7	                            mov rdi, rax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001d1	      0xe851ffffff	                    call sym.is_null_oid	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001d6	            0x85c0	                           test eax, eax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001d8	            0x7525	                           jne 0x40001ff	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001da	        0x488b5590	             mov rdx, qword [rbp - 0x70]	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001de	        0x488b4598	             mov rax, qword [rbp - 0x68]	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001e2	          0x4889d6	                            mov rsi, rdx	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001e5	          0x4889c7	                            mov rdi, rax	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001e8	      0xe815ffffff	                         call sym.oidcmp	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001ed	            0x85c0	                           test eax, eax	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001ef	            0x750e	                           jne 0x40001ff	        43	diff.c	FUNCTION_2	IF_1	CALL_2
0x40001f1	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001f4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001f7	            0x39c2	                            cmp edx, eax	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001f9	     0xf8487010000	                            je 0x4000386	        44	diff.c	FUNCTION_2	IF_1	CALL_3
0x40001ff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        47	diff.c	FUNCTION_2	IF_2
0x4000203	         0xfb64039	           movzx eax, byte [rax + 0x39] 	        47	diff.c	FUNCTION_2	IF_2
0x4000207	          0x83e040	                           and eax, 0x40	        47	diff.c	FUNCTION_2	IF_2
0x400020a	            0x84c0	                             test al, al	        47	diff.c	FUNCTION_2	IF_2
0x400020c	     0xf8499000000	                            je 0x40002ab	        47	diff.c	FUNCTION_2	IF_2
0x4000212	        0x488d45a4	                   lea rax, [rbp - 0x5c]	        48	diff.c	FUNCTION_2	IF_2
0x4000216	        0x488945b0	             mov qword [rbp - 0x50], rax	        48	diff.c	FUNCTION_2	IF_2
0x400021a	        0x488d45a0	                   lea rax, [rbp - 0x60]	        48	diff.c	FUNCTION_2	IF_2
0x400021e	        0x488945b8	             mov qword [rbp - 0x48], rax	        48	diff.c	FUNCTION_2	IF_2
0x4000222	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        48	diff.c	FUNCTION_2	IF_2
0x4000226	            0x8b00	                    mov eax, dword [rax]	        48	diff.c	FUNCTION_2	IF_2
0x4000228	          0x8945f0	             mov dword [rbp - 0x10], eax	        48	diff.c	FUNCTION_2	IF_2
0x400022b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        48	diff.c	FUNCTION_2	IF_2
0x400022f	            0x8b10	                    mov edx, dword [rax]	        48	diff.c	FUNCTION_2	IF_2
0x4000231	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        48	diff.c	FUNCTION_2	IF_2
0x4000235	            0x8910	                    mov dword [rax], edx	        48	diff.c	FUNCTION_2	IF_2
0x4000237	          0x8b55f0	             mov edx, dword [rbp - 0x10]	        48	diff.c	FUNCTION_2	IF_2
0x400023a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        48	diff.c	FUNCTION_2	IF_2
0x400023e	            0x8910	                    mov dword [rax], edx	        48	diff.c	FUNCTION_2	IF_2
0x4000240	        0x488d4598	                   lea rax, [rbp - 0x68]	        49	diff.c	FUNCTION_2	IF_2
0x4000244	        0x488945c0	             mov qword [rbp - 0x40], rax	        49	diff.c	FUNCTION_2	IF_2
0x4000248	        0x488d4590	                   lea rax, [rbp - 0x70]	        49	diff.c	FUNCTION_2	IF_2
0x400024c	        0x488945c8	             mov qword [rbp - 0x38], rax	        49	diff.c	FUNCTION_2	IF_2
0x4000250	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        49	diff.c	FUNCTION_2	IF_2
0x4000254	          0x488b00	                    mov rax, qword [rax]	        49	diff.c	FUNCTION_2	IF_2
0x4000257	        0x488945f0	             mov qword [rbp - 0x10], rax	        49	diff.c	FUNCTION_2	IF_2
0x400025b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        49	diff.c	FUNCTION_2	IF_2
0x400025f	          0x488b10	                    mov rdx, qword [rax]	        49	diff.c	FUNCTION_2	IF_2
0x4000262	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        49	diff.c	FUNCTION_2	IF_2
0x4000266	          0x488910	                    mov qword [rax], rdx	        49	diff.c	FUNCTION_2	IF_2
0x4000269	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        49	diff.c	FUNCTION_2	IF_2
0x400026d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        49	diff.c	FUNCTION_2	IF_2
0x4000271	          0x488910	                    mov qword [rax], rdx	        49	diff.c	FUNCTION_2	IF_2
0x4000274	        0x488d4580	                   lea rax, [rbp - 0x80]	        50	diff.c	FUNCTION_2	IF_2
0x4000278	        0x488945d0	             mov qword [rbp - 0x30], rax	        50	diff.c	FUNCTION_2	IF_2
0x400027c	    0x488d8578ffff	                   lea rax, [rbp - 0x88]	        50	diff.c	FUNCTION_2	IF_2
0x4000283	        0x488945d8	             mov qword [rbp - 0x28], rax	        50	diff.c	FUNCTION_2	IF_2
0x4000287	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	diff.c	FUNCTION_2	IF_2
0x400028b	          0x488b00	                    mov rax, qword [rax]	        50	diff.c	FUNCTION_2	IF_2
0x400028e	        0x488945f0	             mov qword [rbp - 0x10], rax	        50	diff.c	FUNCTION_2	IF_2
0x4000292	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        50	diff.c	FUNCTION_2	IF_2
0x4000296	          0x488b10	                    mov rdx, qword [rax]	        50	diff.c	FUNCTION_2	IF_2
0x4000299	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	diff.c	FUNCTION_2	IF_2
0x400029d	          0x488910	                    mov qword [rax], rdx	        50	diff.c	FUNCTION_2	IF_2
0x40002a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        50	diff.c	FUNCTION_2	IF_2
0x40002a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        50	diff.c	FUNCTION_2	IF_2
0x40002a8	          0x488910	                    mov qword [rax], rdx	        50	diff.c	FUNCTION_2	IF_2
0x40002ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        53	diff.c	FUNCTION_2	IF_3
0x40002af	    0x488b80900000	            mov rax, qword [rax + 0x90] 	        53	diff.c	FUNCTION_2	IF_3
0x40002b6	          0x4885c0	                           test rax, rax	        53	diff.c	FUNCTION_2	IF_3
0x40002b9	            0x745d	                            je 0x4000318	        53	diff.c	FUNCTION_2	IF_3
0x40002bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002bf	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002c5	          0x4863d0	                         movsxd rdx, eax	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002cc	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002d3	        0x488b4580	             mov rax, qword [rbp - 0x80]	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002d7	          0x4889ce	                            mov rsi, rcx	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002da	          0x4889c7	                            mov rdi, rax	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002dd	      0xe800000000	                          call 0x40002e2	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x40002e2	            0x85c0	                           test eax, eax	        53	diff.c	FUNCTION_2	IF_3
0x40002e4	     0xf859f000000	                           jne 0x4000389	        53	diff.c	FUNCTION_2	IF_3
0x40002ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x40002ee	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x40002f4	          0x4863d0	                         movsxd rdx, eax	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x40002f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x40002fb	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x4000302	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x4000309	          0x4889ce	                            mov rsi, rcx	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x400030c	          0x4889c7	                            mov rdi, rax	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x400030f	      0xe800000000	                          call 0x4000314	        55	diff.c	FUNCTION_2	IF_3	CALL_5
0x4000314	            0x85c0	                           test eax, eax	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x4000316	            0x7571	                           jne 0x4000389	        54	diff.c	FUNCTION_2	IF_3	CALL_4
0x4000318	        0x488b4580	             mov rax, qword [rbp - 0x80]	        58	diff.c	FUNCTION_2	CALL_6
0x400031c	          0x4889c7	                            mov rdi, rax	        58	diff.c	FUNCTION_2	CALL_6
0x400031f	      0xe800000000	                          call 0x4000324	        58	diff.c	FUNCTION_2	CALL_6
0x4000324	        0x488945e0	             mov qword [rbp - 0x20], rax	        58	diff.c	FUNCTION_2	CALL_6
0x4000328	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        59	diff.c	FUNCTION_2	CALL_7
0x400032f	          0x4889c7	                            mov rdi, rax	        59	diff.c	FUNCTION_2	CALL_7
0x4000332	      0xe800000000	                          call 0x4000337	        59	diff.c	FUNCTION_2	CALL_7
0x4000337	        0x488945e8	             mov qword [rbp - 0x18], rax	        59	diff.c	FUNCTION_2	CALL_7
0x400033b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	        60	diff.c	FUNCTION_2	CALL_8
0x400033e	           0xfb7c8	                           movzx ecx, ax	        60	diff.c	FUNCTION_2	CALL_8
0x4000341	        0x488b7598	             mov rsi, qword [rbp - 0x68]	        60	diff.c	FUNCTION_2	CALL_8
0x4000345	          0x8b558c	             mov edx, dword [rbp - 0x74]	        60	diff.c	FUNCTION_2	CALL_8
0x4000348	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	diff.c	FUNCTION_2	CALL_8
0x400034c	          0x4889c7	                            mov rdi, rax	        60	diff.c	FUNCTION_2	CALL_8
0x400034f	      0xe800000000	                          call 0x4000354	        60	diff.c	FUNCTION_2	CALL_8
0x4000354	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        61	diff.c	FUNCTION_2	CALL_9
0x4000357	           0xfb7d0	                           movzx edx, ax	        61	diff.c	FUNCTION_2	CALL_9
0x400035a	        0x488b7590	             mov rsi, qword [rbp - 0x70]	        61	diff.c	FUNCTION_2	CALL_9
0x400035e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	diff.c	FUNCTION_2	CALL_9
0x4000362	            0x89d1	                            mov ecx, edx	        61	diff.c	FUNCTION_2	CALL_9
0x4000364	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        61	diff.c	FUNCTION_2	CALL_9
0x4000367	          0x4889c7	                            mov rdi, rax	        61	diff.c	FUNCTION_2	CALL_9
0x400036a	      0xe800000000	                          call 0x400036f	        61	diff.c	FUNCTION_2	CALL_9
0x400036f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        63	diff.c	FUNCTION_2	CALL_10
0x4000373	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        63	diff.c	FUNCTION_2	CALL_10
0x4000377	          0x4889c6	                            mov rsi, rax	        63	diff.c	FUNCTION_2	CALL_10
0x400037a	      0xbf00000000	                              mov edi, 0	        63	diff.c	FUNCTION_2	CALL_10
0x400037f	      0xe800000000	                          call 0x4000384	        63	diff.c	FUNCTION_2	CALL_10
0x4000384	            0xeb04	                           jmp 0x400038a	        63	diff.c	FUNCTION_2	CALL_10
0x4000386	              0x90	                                     nop	        45	diff.c	FUNCTION_2	IF_1
0x4000387	            0xeb01	                           jmp 0x400038a	        45	diff.c	FUNCTION_2	IF_1
0x4000389	              0x90	                                     nop	        56	diff.c	FUNCTION_2	IF_3
0x400038a	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	diff.c	FUNCTION_2
0x400038e	    0x644833042528	                xor rax, qword fs:[0x28]	        64	diff.c	FUNCTION_2
0x4000397	            0x7405	                            je 0x400039e	        64	diff.c	FUNCTION_2
0x4000399	      0xe800000000	                          call 0x400039e	        64	diff.c	FUNCTION_2
0x400039e	              0xc9	                                   leave	        64	diff.c	FUNCTION_2
0x400039f	              0xc3	                                     ret	        64	diff.c	FUNCTION_2
builtin_diff_index	WHILE,1:DO,0:FOR,0:SWITCH,0:IF,5:CALL,8:ELSE,2:functions,0	78
0x4000716	              0x55	                                push rbp	       128	diff.c	FUNCTION_5
0x4000717	          0x4889e5	                            mov rbp, rsp	       128	diff.c	FUNCTION_5
0x400071a	        0x4883ec30	                           sub rsp, 0x30	       128	diff.c	FUNCTION_5
0x400071e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	diff.c	FUNCTION_5
0x4000722	          0x8975e4	             mov dword [rbp - 0x1c], esi	       128	diff.c	FUNCTION_5
0x4000725	        0x488955d8	             mov qword [rbp - 0x28], rdx	       128	diff.c	FUNCTION_5
0x4000729	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       129	diff.c	FUNCTION_5
0x4000730	            0xeb52	                           jmp 0x4000784	       130	diff.c	FUNCTION_5	WHILE_1
0x4000732	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       131	diff.c	FUNCTION_5	WHILE_1
0x4000736	        0x488b4008	                mov rax, qword [rax + 8]	       131	diff.c	FUNCTION_5	WHILE_1
0x400073a	        0x488945f8	                mov qword [rbp - 8], rax	       131	diff.c	FUNCTION_5	WHILE_1
0x400073e	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000742	      0xbe00000000	                              mov esi, 0	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000747	          0x4889c7	                            mov rdi, rax	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400074a	      0xe800000000	                          call 0x400074f	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400074f	            0x85c0	                           test eax, eax	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000751	            0x7415	                            je 0x4000768	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000753	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000757	      0xbe00000000	                              mov esi, 0	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400075c	          0x4889c7	                            mov rdi, rax	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x400075f	      0xe800000000	                          call 0x4000764	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000764	            0x85c0	                           test eax, eax	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000766	            0x7512	                           jne 0x400077a	       132	diff.c	FUNCTION_5	WHILE_1	IF_1	CALL_2
0x4000768	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       133	diff.c	FUNCTION_5	WHILE_1	IF_1
0x400076f	      0x488345d808	               add qword [rbp - 0x28], 8	       136	diff.c	FUNCTION_5	WHILE_1
0x4000774	        0x836de401	               sub dword [rbp - 0x1c], 1	       136	diff.c	FUNCTION_5	WHILE_1
0x4000778	            0xeb0a	                           jmp 0x4000784	       136	diff.c	FUNCTION_5	WHILE_1
0x400077a	      0xbf00000000	                              mov edi, 0	       135	diff.c	FUNCTION_5	WHILE_1	CALL_3
0x400077f	      0xe800000000	                          call 0x4000784	       135	diff.c	FUNCTION_5	WHILE_1	CALL_3
0x4000784	        0x837de401	               cmp dword [rbp - 0x1c], 1	       130	diff.c	FUNCTION_5	WHILE_1
0x4000788	            0x7fa8	                            jg 0x4000732	       130	diff.c	FUNCTION_5	WHILE_1
0x400078a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       142	diff.c	FUNCTION_5	IF_2
0x400078e	          0x8b4008	                mov eax, dword [rax + 8]	       142	diff.c	FUNCTION_5	IF_2
0x4000791	          0x83f801	                              cmp eax, 1	       142	diff.c	FUNCTION_5	IF_2
0x4000794	            0x7531	                           jne 0x40007c7	       142	diff.c	FUNCTION_5	IF_2
0x4000796	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	diff.c	FUNCTION_5	IF_2
0x400079a	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	       143	diff.c	FUNCTION_5	IF_2
0x40007a0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       142	diff.c	FUNCTION_5	IF_2
0x40007a3	            0x7522	                           jne 0x40007c7	       142	diff.c	FUNCTION_5	IF_2
0x40007a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	diff.c	FUNCTION_5	IF_2
0x40007a9	    0x488b80d80400	           mov rax, qword [rax + 0x4d8] 	       143	diff.c	FUNCTION_5	IF_2
0x40007b0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       143	diff.c	FUNCTION_5	IF_2
0x40007b4	            0x7511	                           jne 0x40007c7	       143	diff.c	FUNCTION_5	IF_2
0x40007b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	diff.c	FUNCTION_5	IF_2
0x40007ba	    0x488b80d00400	           mov rax, qword [rax + 0x4d0] 	       144	diff.c	FUNCTION_5	IF_2
0x40007c1	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       143	diff.c	FUNCTION_5	IF_2
0x40007c5	            0x740a	                            je 0x40007d1	       143	diff.c	FUNCTION_5	IF_2
0x40007c7	      0xbf00000000	                              mov edi, 0	       145	diff.c	FUNCTION_5	CALL_4
0x40007cc	      0xe800000000	                          call 0x40007d1	       145	diff.c	FUNCTION_5	CALL_4
0x40007d1	        0x837df400	                cmp dword [rbp - 0xc], 0	       146	diff.c	FUNCTION_5	IF_3
0x40007d5	            0x7531	                           jne 0x4000808	       146	diff.c	FUNCTION_5	IF_3
0x40007d7	      0xe800000000	                          call 0x40007dc	       147	diff.c	FUNCTION_5	IF_3	CALL_5
0x40007dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007e0	    0x480508060000	                          add rax, 0x608	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007e6	          0x4889c6	                            mov rsi, rax	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007e9	      0xbf00000000	                              mov edi, 0	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007ee	      0xe800000000	                          call 0x40007f3	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007f3	            0x85c0	                           test eax, eax	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007f5	            0x7930	                           jns 0x4000827	       148	diff.c	FUNCTION_5	IF_3	IF_4
0x40007f7	      0xbf00000000	                              mov edi, 0	       149	diff.c	FUNCTION_5	IF_3	IF_4	CALL_6
0x40007fc	      0xe800000000	                          call 0x4000801	       149	diff.c	FUNCTION_5	IF_3	IF_4	CALL_6
0x4000801	      0xb8ffffffff	                     mov eax, 0xffffffff	       150	diff.c	FUNCTION_5	IF_3	IF_4
0x4000806	            0xeb30	                           jmp 0x4000838	       150	diff.c	FUNCTION_5	IF_3	IF_4
0x4000808	      0xbf00000000	                              mov edi, 0	       152	diff.c	FUNCTION_5	ELSE_2	IF_5
0x400080d	      0xe800000000	                          call 0x4000812	       152	diff.c	FUNCTION_5	ELSE_2	IF_5
0x4000812	            0x85c0	                           test eax, eax	       152	diff.c	FUNCTION_5	ELSE_2	IF_5
0x4000814	            0x7911	                           jns 0x4000827	       152	diff.c	FUNCTION_5	ELSE_2	IF_5
0x4000816	      0xbf00000000	                              mov edi, 0	       153	diff.c	FUNCTION_5	ELSE_2	IF_5	CALL_7
0x400081b	      0xe800000000	                          call 0x4000820	       153	diff.c	FUNCTION_5	ELSE_2	IF_5	CALL_7
0x4000820	      0xb8ffffffff	                     mov eax, 0xffffffff	       154	diff.c	FUNCTION_5	ELSE_2	IF_5
0x4000825	            0xeb11	                           jmp 0x4000838	       154	diff.c	FUNCTION_5	ELSE_2	IF_5
0x4000827	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       156	diff.c	FUNCTION_5	CALL_8
0x400082a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	diff.c	FUNCTION_5	CALL_8
0x400082e	            0x89d6	                            mov esi, edx	       156	diff.c	FUNCTION_5	CALL_8
0x4000830	          0x4889c7	                            mov rdi, rax	       156	diff.c	FUNCTION_5	CALL_8
0x4000833	      0xe800000000	                          call 0x4000838	       156	diff.c	FUNCTION_5	CALL_8
0x4000838	              0xc9	                                   leave	       157	diff.c	FUNCTION_5
0x4000839	              0xc3	                                     ret	       157	diff.c	FUNCTION_5
canon_mode	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,3:CALL,3:ELSE,0:functions,0	30
0x4000077	              0x55	                                push rbp	       289	cache.h	ELSE_3	FUNCTION_20
0x4000078	          0x4889e5	                            mov rbp, rsp	       289	cache.h	ELSE_3	FUNCTION_20
0x400007b	          0x897dfc	                mov dword [rbp - 4], edi	       289	cache.h	ELSE_3	FUNCTION_20
0x400007e	          0x8b45fc	                mov eax, dword [rbp - 4]	       290	cache.h	ELSE_3	FUNCTION_20	IF_1	CALL_1
0x4000081	      0x2500f00000	                         and eax, 0xf000	       290	cache.h	ELSE_3	FUNCTION_20	IF_1	CALL_1
0x4000086	      0x3d00800000	                         cmp eax, 0x8000	       290	cache.h	ELSE_3	FUNCTION_20	IF_1	CALL_1
0x400008b	            0x7518	                           jne 0x40000a5	       290	cache.h	ELSE_3	FUNCTION_20	IF_1	CALL_1
0x400008d	          0x8b45fc	                mov eax, dword [rbp - 4]	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x4000090	          0x83e040	                           and eax, 0x40	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x4000093	            0x85c0	                           test eax, eax	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x4000095	            0x7407	                            je 0x400009e	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x4000097	      0xb8ed810000	                         mov eax, 0x81ed	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x400009c	            0xeb38	                           jmp 0x40000d6	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x400009e	      0xb8a4810000	                         mov eax, 0x81a4	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x40000a3	            0xeb31	                           jmp 0x40000d6	       291	cache.h	ELSE_3	FUNCTION_20	IF_1
0x40000a5	          0x8b45fc	                mov eax, dword [rbp - 4]	       292	cache.h	ELSE_3	FUNCTION_20	IF_2	CALL_2
0x40000a8	      0x2500f00000	                         and eax, 0xf000	       292	cache.h	ELSE_3	FUNCTION_20	IF_2	CALL_2
0x40000ad	      0x3d00a00000	                         cmp eax, 0xa000	       292	cache.h	ELSE_3	FUNCTION_20	IF_2	CALL_2
0x40000b2	            0x7507	                           jne 0x40000bb	       292	cache.h	ELSE_3	FUNCTION_20	IF_2	CALL_2
0x40000b4	      0xb800a00000	                         mov eax, 0xa000	       293	cache.h	ELSE_3	FUNCTION_20	IF_2
0x40000b9	            0xeb1b	                           jmp 0x40000d6	       293	cache.h	ELSE_3	FUNCTION_20	IF_2
0x40000bb	          0x8b45fc	                mov eax, dword [rbp - 4]	       294	cache.h	ELSE_3	FUNCTION_20	IF_3	CALL_3
0x40000be	      0x2500f00000	                         and eax, 0xf000	       294	cache.h	ELSE_3	FUNCTION_20	IF_3	CALL_3
0x40000c3	      0x3d00400000	                         cmp eax, 0x4000	       294	cache.h	ELSE_3	FUNCTION_20	IF_3	CALL_3
0x40000c8	            0x7507	                           jne 0x40000d1	       294	cache.h	ELSE_3	FUNCTION_20	IF_3	CALL_3
0x40000ca	      0xb800400000	                         mov eax, 0x4000	       295	cache.h	ELSE_3	FUNCTION_20	IF_3
0x40000cf	            0xeb05	                           jmp 0x40000d6	       295	cache.h	ELSE_3	FUNCTION_20	IF_3
0x40000d1	      0xb800e00000	                         mov eax, 0xe000	       296	cache.h	ELSE_3	FUNCTION_20
0x40000d6	              0x5d	                                 pop rbp	       297	cache.h	ELSE_3	FUNCTION_20
0x40000d7	              0xc3	                                     ret	       297	cache.h	ELSE_3	FUNCTION_20
refresh_index_quietly	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,1:CALL,2:ELSE,0:functions,0	36
0x4000a4a	              0x55	                                push rbp	       205	diff.c	FUNCTION_8
0x4000a4b	          0x4889e5	                            mov rbp, rsp	       205	diff.c	FUNCTION_8
0x4000a4e	        0x4883ec20	                           sub rsp, 0x20	       205	diff.c	FUNCTION_8
0x4000a52	    0x64488b042528	                mov rax, qword fs:[0x28]	       205	diff.c	FUNCTION_8
0x4000a5b	        0x488945f8	                mov qword [rbp - 8], rax	       205	diff.c	FUNCTION_8
0x4000a5f	            0x31c0	                            xor eax, eax	       205	diff.c	FUNCTION_8
0x4000a61	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       206	diff.c	FUNCTION_8
0x4000a69	        0x488d45f0	                   lea rax, [rbp - 0x10]	       209	diff.c	FUNCTION_8	CALL_1
0x4000a6d	      0xbe00000000	                              mov esi, 0	       209	diff.c	FUNCTION_8	CALL_1
0x4000a72	          0x4889c7	                            mov rdi, rax	       209	diff.c	FUNCTION_8	CALL_1
0x4000a75	      0xe800000000	                          call 0x4000a7a	       209	diff.c	FUNCTION_8	CALL_1
0x4000a7a	          0x8945ec	             mov dword [rbp - 0x14], eax	       209	diff.c	FUNCTION_8	CALL_1
0x4000a7d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       210	diff.c	FUNCTION_8	IF_1
0x4000a81	            0x7846	                            js 0x4000ac9	       210	diff.c	FUNCTION_8	IF_1
0x4000a83	      0xbf00000000	                              mov edi, 0	       212	diff.c	FUNCTION_8
0x4000a88	      0xe800000000	                          call 0x4000a8d	       212	diff.c	FUNCTION_8
0x4000a8d	      0xbf00000000	                              mov edi, 0	       213	diff.c	FUNCTION_8
0x4000a92	      0xe800000000	                          call 0x4000a97	       213	diff.c	FUNCTION_8
0x4000a97	    0x41b800000000	                              mov r8d, 0	       214	diff.c	FUNCTION_8
0x4000a9d	      0xb900000000	                              mov ecx, 0	       214	diff.c	FUNCTION_8
0x4000aa2	      0xba00000000	                              mov edx, 0	       214	diff.c	FUNCTION_8
0x4000aa7	      0xbe06000000	                              mov esi, 6	       214	diff.c	FUNCTION_8
0x4000aac	      0xbf00000000	                              mov edi, 0	       214	diff.c	FUNCTION_8
0x4000ab1	      0xe800000000	                          call 0x4000ab6	       214	diff.c	FUNCTION_8
0x4000ab6	        0x488d45f0	                   lea rax, [rbp - 0x10]	       215	diff.c	FUNCTION_8	CALL_2
0x4000aba	          0x4889c6	                            mov rsi, rax	       215	diff.c	FUNCTION_8	CALL_2
0x4000abd	      0xbf00000000	                              mov edi, 0	       215	diff.c	FUNCTION_8	CALL_2
0x4000ac2	      0xe800000000	                          call 0x4000ac7	       215	diff.c	FUNCTION_8	CALL_2
0x4000ac7	            0xeb01	                           jmp 0x4000aca	       215	diff.c	FUNCTION_8	CALL_2
0x4000ac9	              0x90	                                     nop	       211	diff.c	FUNCTION_8	IF_1
0x4000aca	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	diff.c	FUNCTION_8
0x4000ace	    0x644833042528	                xor rax, qword fs:[0x28]	       216	diff.c	FUNCTION_8
0x4000ad7	            0x7405	                            je 0x4000ade	       216	diff.c	FUNCTION_8
0x4000ad9	      0xe800000000	                          call 0x4000ade	       216	diff.c	FUNCTION_8
0x4000ade	              0xc9	                                   leave	       216	diff.c	FUNCTION_8
0x4000adf	              0xc3	                                     ret	       216	diff.c	FUNCTION_8
oidcmp	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,0:CALL,1:ELSE,0:functions,0	12
0x4000102	              0x55	                                push rbp	       979	cache.h	FUNCTION_23
0x4000103	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_23
0x4000106	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_23
0x400010a	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_23
0x400010e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_23
0x4000112	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_23	CALL_1
0x4000116	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_23	CALL_1
0x400011a	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_23	CALL_1
0x400011d	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_23	CALL_1
0x4000120	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_23	CALL_1
0x4000125	              0xc9	                                   leave	       981	cache.h	FUNCTION_23
0x4000126	              0xc3	                                     ret	       981	cache.h	FUNCTION_23
cmd_diff	WHILE,0:DO,0:FOR,3:SWITCH,1:IF,29:CALL,46:ELSE,8:functions,0	489
0x4000cd1	              0x55	                                push rbp	       257	diff.c	FUNCTION_10
0x4000cd2	          0x4889e5	                            mov rbp, rsp	       257	diff.c	FUNCTION_10
0x4000cd5	    0x4881ec500900	                          sub rsp, 0x950	       257	diff.c	FUNCTION_10
0x4000cdc	    0x89bdccf6ffff	            mov dword [rbp - 0x934], edi	       257	diff.c	FUNCTION_10
0x4000ce2	    0x4889b5c0f6ff	            mov qword [rbp - 0x940], rsi	       257	diff.c	FUNCTION_10
0x4000ce9	    0x488995b8f6ff	            mov qword [rbp - 0x948], rdx	       257	diff.c	FUNCTION_10
0x4000cf0	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	diff.c	FUNCTION_10
0x4000cf9	        0x488945f8	                mov qword [rbp - 8], rax	       257	diff.c	FUNCTION_10
0x4000cfd	            0x31c0	                            xor eax, eax	       257	diff.c	FUNCTION_10
0x4000cff	    0xc78520f7ffff	              mov dword [rbp - 0x8e0], 0	       260	diff.c	FUNCTION_10
0x4000d09	    0xc78524f7ffff	              mov dword [rbp - 0x8dc], 0	       260	diff.c	FUNCTION_10
0x4000d13	    0x48c78528f7ff	              mov qword [rbp - 0x8d8], 0	       260	diff.c	FUNCTION_10
0x4000d1e	    0xc785e0f6ffff	              mov dword [rbp - 0x920], 0	       261	diff.c	FUNCTION_10
0x4000d28	    0xc785e4f6ffff	              mov dword [rbp - 0x91c], 0	       261	diff.c	FUNCTION_10
0x4000d32	    0xc785d8f6ffff	              mov dword [rbp - 0x928], 0	       263	diff.c	FUNCTION_10
0x4000d3c	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 0	       263	diff.c	FUNCTION_10
0x4000d46	    0xc785ecf6ffff	              mov dword [rbp - 0x914], 0	       264	diff.c	FUNCTION_10
0x4000d50	    0xc785dcf6ffff	              mov dword [rbp - 0x924], 1	       290	diff.c	FUNCTION_10	FOR_1
0x4000d5a	      0xe99a000000	                           jmp 0x4000df9	       290	diff.c	FUNCTION_10	FOR_1
0x4000d5f	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d65	            0x4898	                                    cdqe	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d67	    0x488d14c50000	                        lea rdx, [rax*8]	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d6f	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d76	          0x4801d0	                            add rax, rdx	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d79	          0x488b00	                    mov rax, qword [rax]	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d7c	      0xbe00000000	                              mov esi, 0	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d81	          0x4889c7	                            mov rdi, rax	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d84	      0xe800000000	                          call 0x4000d89	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d89	            0x85c0	                           test eax, eax	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d8b	            0x7509	                           jne 0x4000d96	       291	diff.c	FUNCTION_10	FOR_1	IF_1	CALL_1
0x4000d8d	    0x8385dcf6ffff	              add dword [rbp - 0x924], 1	       292	diff.c	FUNCTION_10	FOR_1	IF_1
0x4000d94	            0xeb78	                           jmp 0x4000e0e	       293	diff.c	FUNCTION_10	FOR_1	IF_1
0x4000d96	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000d9c	            0x4898	                                    cdqe	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000d9e	    0x488d14c50000	                        lea rdx, [rax*8]	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000da6	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000dad	          0x4801d0	                            add rax, rdx	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000db0	          0x488b00	                    mov rax, qword [rax]	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000db3	      0xbe00000000	                              mov esi, 0	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000db8	          0x4889c7	                            mov rdi, rax	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000dbb	      0xe800000000	                          call 0x4000dc0	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000dc0	            0x85c0	                           test eax, eax	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000dc2	            0x750a	                           jne 0x4000dce	       295	diff.c	FUNCTION_10	FOR_1	IF_2	CALL_2
0x4000dc4	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 1	       296	diff.c	FUNCTION_10	FOR_1	IF_2
0x4000dce	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000dd4	            0x4898	                                    cdqe	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000dd6	    0x488d14c50000	                        lea rdx, [rax*8]	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000dde	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000de5	          0x4801d0	                            add rax, rdx	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000de8	          0x488b00	                    mov rax, qword [rax]	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000deb	           0xfb600	                   movzx eax, byte [rax]	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000dee	            0x3c2d	                            cmp al, 0x2d	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000df0	            0x751b	                           jne 0x4000e0d	       297	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000df2	    0x8385dcf6ffff	              add dword [rbp - 0x924], 1	       290	diff.c	FUNCTION_10	FOR_1
0x4000df9	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       290	diff.c	FUNCTION_10	FOR_1
0x4000dff	    0x3b85ccf6ffff	            cmp eax, dword [rbp - 0x934]	       290	diff.c	FUNCTION_10	FOR_1
0x4000e05	     0xf8c54ffffff	                            jl 0x4000d5f	       290	diff.c	FUNCTION_10	FOR_1
0x4000e0b	            0xeb01	                           jmp 0x4000e0e	       290	diff.c	FUNCTION_10	FOR_1
0x4000e0d	              0x90	                                     nop	       298	diff.c	FUNCTION_10	FOR_1	IF_3
0x4000e0e	    0x488d85d8f6ff	                  lea rax, [rbp - 0x928]	       301	diff.c	FUNCTION_10	CALL_3
0x4000e15	          0x4889c7	                            mov rdi, rax	       301	diff.c	FUNCTION_10	CALL_3
0x4000e18	      0xe800000000	                          call 0x4000e1d	       301	diff.c	FUNCTION_10	CALL_3
0x4000e1d	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       301	diff.c	FUNCTION_10	CALL_3
0x4000e24	    0x83bde8f6ffff	              cmp dword [rbp - 0x918], 0	       303	diff.c	FUNCTION_10	IF_4
0x4000e2b	     0xf858f000000	                           jne 0x4000ec0	       303	diff.c	FUNCTION_10	IF_4
0x4000e31	    0x8b85d8f6ffff	            mov eax, dword [rbp - 0x928]	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e37	            0x85c0	                           test eax, eax	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e39	            0x757b	                           jne 0x4000eb6	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e3b	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e41	          0x83c002	                              add eax, 2	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e44	    0x3b85ccf6ffff	            cmp eax, dword [rbp - 0x934]	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e4a	            0x7574	                           jne 0x4000ec0	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e4c	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e52	            0x4898	                                    cdqe	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e54	    0x488d14c50000	                        lea rdx, [rax*8]	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e5c	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e63	          0x4801d0	                            add rax, rdx	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e66	          0x488b10	                    mov rdx, qword [rax]	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e69	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e70	          0x4889d6	                            mov rsi, rdx	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e73	          0x4889c7	                            mov rdi, rax	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e76	      0xe800000000	                          call 0x4000e7b	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000e7b	            0x85c0	                           test eax, eax	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e7d	            0x7437	                            je 0x4000eb6	       311	diff.c	FUNCTION_10	IF_4	IF_5
0x4000e7f	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e85	            0x4898	                                    cdqe	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e87	        0x4883c001	                              add rax, 1	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e8b	    0x488d14c50000	                        lea rdx, [rax*8]	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e93	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e9a	          0x4801d0	                            add rax, rdx	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000e9d	          0x488b10	                    mov rdx, qword [rax]	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000ea0	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000ea7	          0x4889d6	                            mov rsi, rdx	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000eaa	          0x4889c7	                            mov rdi, rax	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000ead	      0xe800000000	                          call 0x4000eb2	       313	diff.c	FUNCTION_10	IF_4	IF_5	CALL_5
0x4000eb2	            0x85c0	                           test eax, eax	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000eb4	            0x750a	                           jne 0x4000ec0	       312	diff.c	FUNCTION_10	IF_4	IF_5	CALL_4
0x4000eb6	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 2	       314	diff.c	FUNCTION_10	IF_4	IF_5
0x4000ec0	      0xe800000000	                          call 0x4000ec5	       317	diff.c	FUNCTION_10	CALL_6
0x4000ec5	      0xbe00000000	                              mov esi, 0	       318	diff.c	FUNCTION_10	CALL_7
0x4000eca	      0xbf00000000	                              mov edi, 0	       318	diff.c	FUNCTION_10	CALL_7
0x4000ecf	      0xe800000000	                          call 0x4000ed4	       318	diff.c	FUNCTION_10	CALL_7
0x4000ed4	    0x488b95b8f6ff	            mov rdx, qword [rbp - 0x948]	       321	diff.c	FUNCTION_10	CALL_8
0x4000edb	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       321	diff.c	FUNCTION_10	CALL_8
0x4000ee2	          0x4889d6	                            mov rsi, rdx	       321	diff.c	FUNCTION_10	CALL_8
0x4000ee5	          0x4889c7	                            mov rdi, rax	       321	diff.c	FUNCTION_10	CALL_8
0x4000ee8	      0xe800000000	                          call 0x4000eed	       321	diff.c	FUNCTION_10	CALL_8
0x4000eed	    0x83bde8f6ffff	              cmp dword [rbp - 0x918], 0	       323	diff.c	FUNCTION_10	IF_6
0x4000ef4	            0x747d	                            je 0x4000f73	       323	diff.c	FUNCTION_10	IF_6
0x4000ef6	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       323	diff.c	FUNCTION_10	IF_6
0x4000efc	          0x83c002	                              add eax, 2	       323	diff.c	FUNCTION_10	IF_6
0x4000eff	    0x3b85ccf6ffff	            cmp eax, dword [rbp - 0x934]	       323	diff.c	FUNCTION_10	IF_6
0x4000f05	            0x746c	                            je 0x4000f73	       323	diff.c	FUNCTION_10	IF_6
0x4000f07	    0x83bde8f6ffff	              cmp dword [rbp - 0x918], 2	       324	diff.c	FUNCTION_10	IF_6	IF_7
0x4000f0e	            0x753c	                           jne 0x4000f4c	       324	diff.c	FUNCTION_10	IF_6	IF_7
0x4000f10	    0x488b05000000	            mov rax, qword [0x04000f17] 	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f17	          0x4889c1	                            mov rcx, rax	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f1a	      0xba15000000	                           mov edx, 0x15	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f1f	      0xbe01000000	                              mov esi, 1	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f24	      0xbf00000000	                              mov edi, 0	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f29	      0xe800000000	                          call 0x4000f2e	       330	diff.c	FUNCTION_10	IF_6	IF_7	CALL_9
0x4000f2e	    0x488b05000000	            mov rax, qword [0x04000f35] 	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f35	          0x4889c1	                            mov rcx, rax	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f38	      0xba2d000000	                           mov edx, 0x2d	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f3d	      0xbe01000000	                              mov esi, 1	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f42	      0xbf00000000	                              mov edi, 0	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f47	      0xe800000000	                          call 0x4000f4c	       331	diff.c	FUNCTION_10	IF_6	IF_7	CALL_10
0x4000f4c	    0x83bde8f6ffff	              cmp dword [rbp - 0x918], 1	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f53	            0x7507	                           jne 0x4000f5c	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f55	      0xb800000000	                              mov eax, 0	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f5a	            0xeb05	                           jmp 0x4000f61	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f5c	      0xb800000000	                              mov eax, 0	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f61	          0x4889c6	                            mov rsi, rax	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f64	      0xbf00000000	                              mov edi, 0	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f69	      0xb800000000	                              mov eax, 0	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f6e	      0xe800000000	                          call 0x4000f73	       335	diff.c	FUNCTION_10	IF_6	CALL_11
0x4000f73	    0x83bde8f6ffff	              cmp dword [rbp - 0x918], 0	       340	diff.c	FUNCTION_10	IF_8
0x4000f7a	            0x741e	                            je 0x4000f9a	       340	diff.c	FUNCTION_10	IF_8
0x4000f7c	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       342	diff.c	FUNCTION_10	CALL_12
0x4000f83	    0x8b8dccf6ffff	            mov ecx, dword [rbp - 0x934]	       342	diff.c	FUNCTION_10	CALL_12
0x4000f89	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       342	diff.c	FUNCTION_10	CALL_12
0x4000f90	            0x89ce	                            mov esi, ecx	       342	diff.c	FUNCTION_10	CALL_12
0x4000f92	          0x4889c7	                            mov rdi, rax	       342	diff.c	FUNCTION_10	CALL_12
0x4000f95	      0xe800000000	                          call 0x4000f9a	       342	diff.c	FUNCTION_10	CALL_12
0x4000f9a	    0x8b0500000000	            mov eax, dword [0x04000fa0] 	       345	diff.c	FUNCTION_10
0x4000fa0	            0x85c0	                           test eax, eax	       345	diff.c	FUNCTION_10
0x4000fa2	           0xf95c0	                                setne al	       345	diff.c	FUNCTION_10
0x4000fa5	           0xfb6c0	                           movzx eax, al	       345	diff.c	FUNCTION_10
0x4000fa8	    0x898590fcffff	            mov dword [rbp - 0x370], eax	       345	diff.c	FUNCTION_10
0x4000fae	    0xc78500fdffff	    mov dword [rbp - 0x300], 0xffffffff 	       348	diff.c	FUNCTION_10
0x4000fb8	    0xc78508fdffff	    mov dword [rbp - 0x2f8], 0xffffffff 	       349	diff.c	FUNCTION_10
0x4000fc2	     0xfb68571fcff	           movzx eax, byte [rbp - 0x38f]	       352	diff.c	FUNCTION_10
0x4000fc9	          0x83c810	                            or eax, 0x10	       352	diff.c	FUNCTION_10
0x4000fcc	    0x888571fcffff	              mov byte [rbp - 0x38f], al	       352	diff.c	FUNCTION_10
0x4000fd2	     0xfb68572fcff	           movzx eax, byte [rbp - 0x38e]	       353	diff.c	FUNCTION_10
0x4000fd9	          0x83c810	                            or eax, 0x10	       353	diff.c	FUNCTION_10
0x4000fdc	    0x888572fcffff	              mov byte [rbp - 0x38e], al	       353	diff.c	FUNCTION_10
0x4000fe2	    0x8b85d8f6ffff	            mov eax, dword [rbp - 0x928]	       355	diff.c	FUNCTION_10	IF_9
0x4000fe8	            0x85c0	                           test eax, eax	       355	diff.c	FUNCTION_10	IF_9
0x4000fea	            0x7417	                            je 0x4001003	       355	diff.c	FUNCTION_10	IF_9
0x4000fec	      0xbf00000000	                              mov edi, 0	       356	diff.c	FUNCTION_10	CALL_14
0x4000ff1	      0xe855f0ffff	                               call sym.	       356	diff.c	FUNCTION_10	CALL_14
0x4000ff6	          0x4889c7	                            mov rdi, rax	       356	diff.c	FUNCTION_10	CALL_14
0x4000ff9	      0xb800000000	                              mov eax, 0	       356	diff.c	FUNCTION_10	CALL_14
0x4000ffe	      0xe800000000	                          call 0x4001003	       356	diff.c	FUNCTION_10	CALL_14
0x4001003	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       357	diff.c	FUNCTION_10	CALL_15
0x400100a	    0x488bb5c0f6ff	            mov rsi, qword [rbp - 0x940]	       357	diff.c	FUNCTION_10	CALL_15
0x4001011	    0x8b85ccf6ffff	            mov eax, dword [rbp - 0x934]	       357	diff.c	FUNCTION_10	CALL_15
0x4001017	      0xb900000000	                              mov ecx, 0	       357	diff.c	FUNCTION_10	CALL_15
0x400101c	            0x89c7	                            mov edi, eax	       357	diff.c	FUNCTION_10	CALL_15
0x400101e	      0xe800000000	                          call 0x4001023	       357	diff.c	FUNCTION_10	CALL_15
0x4001023	    0x8985ccf6ffff	            mov dword [rbp - 0x934], eax	       357	diff.c	FUNCTION_10	CALL_15
0x4001029	    0x8b8598fcffff	            mov eax, dword [rbp - 0x368]	       358	diff.c	FUNCTION_10	IF_10
0x400102f	            0x85c0	                           test eax, eax	       358	diff.c	FUNCTION_10	IF_10
0x4001031	            0x751f	                           jne 0x4001052	       358	diff.c	FUNCTION_10	IF_10
0x4001033	    0xc78598fcffff	          mov dword [rbp - 0x368], 0x10 	       359	diff.c	FUNCTION_10	IF_10
0x400103d	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       360	diff.c	FUNCTION_10	IF_10	CALL_16
0x4001044	    0x4805f8040000	                          add rax, 0x4f8	       360	diff.c	FUNCTION_10	IF_10	CALL_16
0x400104a	          0x4889c7	                            mov rdi, rax	       360	diff.c	FUNCTION_10	IF_10	CALL_16
0x400104d	      0xe800000000	                          call 0x4001052	       360	diff.c	FUNCTION_10	IF_10	CALL_16
0x4001052	     0xfb68570fcff	           movzx eax, byte [rbp - 0x390]	       363	diff.c	FUNCTION_10
0x4001059	          0x83c801	                               or eax, 1	       363	diff.c	FUNCTION_10
0x400105c	    0x888570fcffff	              mov byte [rbp - 0x390], al	       363	diff.c	FUNCTION_10
0x4001062	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       365	diff.c	FUNCTION_10	CALL_17
0x4001069	    0x4805f8040000	                          add rax, 0x4f8	       365	diff.c	FUNCTION_10	CALL_17
0x400106f	          0x4889c7	                            mov rdi, rax	       365	diff.c	FUNCTION_10	CALL_17
0x4001072	      0xe800000000	                          call 0x4001077	       365	diff.c	FUNCTION_10	CALL_17
0x4001077	    0x8b8548f7ffff	            mov eax, dword [rbp - 0x8b8]	       371	diff.c	FUNCTION_10	IF_11
0x400107d	            0x85c0	                           test eax, eax	       371	diff.c	FUNCTION_10	IF_11
0x400107f	     0xf85f5000000	                           jne 0x400117a	       371	diff.c	FUNCTION_10	IF_11
0x4001085	    0xc785f0f6ffff	              mov dword [rbp - 0x910], 1	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x400108f	      0xe9ce000000	                           jmp 0x4001162	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x4001094	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x400109a	            0x4898	                                    cdqe	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x400109c	    0x488d14c50000	                        lea rdx, [rax*8]	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x40010a4	    0x488b85c0f6ff	            mov rax, qword [rbp - 0x940]	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x40010ab	          0x4801d0	                            add rax, rdx	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x40010ae	          0x488b00	                    mov rax, qword [rax]	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x40010b1	    0x48898500f7ff	            mov qword [rbp - 0x900], rax	       374	diff.c	FUNCTION_10	IF_11	FOR_2
0x40010b8	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010bf	      0xbe00000000	                              mov esi, 0	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010c4	          0x4889c7	                            mov rdi, rax	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010c7	      0xe800000000	                          call 0x40010cc	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010cc	            0x85c0	                           test eax, eax	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010ce	     0xf84a2000000	                            je 0x4001176	       375	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12	CALL_18
0x40010d4	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010db	      0xbe00000000	                              mov esi, 0	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010e0	          0x4889c7	                            mov rdi, rax	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010e3	      0xe800000000	                          call 0x40010e8	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010e8	            0x85c0	                           test eax, eax	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010ea	            0x7418	                            je 0x4001104	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x40010ec	    0x488b8500f7ff	            mov rax, qword [rbp - 0x900]	       378	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_20
0x40010f3	      0xbe00000000	                              mov esi, 0	       378	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_20
0x40010f8	          0x4889c7	                            mov rdi, rax	       378	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_20
0x40010fb	      0xe800000000	                          call 0x4001100	       378	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_20
0x4001100	            0x85c0	                           test eax, eax	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x4001102	            0x7557	                           jne 0x400115b	       377	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_19
0x4001104	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       379	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_21
0x400110b	          0x4889c7	                            mov rdi, rax	       379	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_21
0x400110e	      0xe800000000	                          call 0x4001113	       379	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	CALL_21
0x4001113	    0x8b8548f7ffff	            mov eax, dword [rbp - 0x8b8]	       380	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14
0x4001119	            0x85c0	                           test eax, eax	       380	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14
0x400111b	            0x755c	                           jne 0x4001179	       380	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14
0x400111d	    0x488b05000000	            mov rax, qword [0x04001124] 	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x4001124	        0x488b4058	            mov rax, qword [rax + 0x58] 	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x4001128	        0x488b4038	            mov rax, qword [rax + 0x38] 	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x400112c	          0x4889c7	                            mov rdi, rax	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x400112f	      0xe800000000	                          call 0x4001134	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x4001134	    0x48898508f7ff	            mov qword [rbp - 0x8f8], rax	       382	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_22
0x400113b	    0x488b8d08f7ff	            mov rcx, qword [rbp - 0x8f8]	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x4001142	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x4001149	      0xba00000000	                              mov edx, 0	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x400114e	          0x4889ce	                            mov rsi, rcx	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x4001151	          0x4889c7	                            mov rdi, rax	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x4001154	      0xe800000000	                          call 0x4001159	       383	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13	IF_14	CALL_23
0x4001159	            0xeb1e	                           jmp 0x4001179	       385	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13
0x400115b	    0x8385f0f6ffff	              add dword [rbp - 0x910], 1	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x4001162	    0x8b85f0f6ffff	            mov eax, dword [rbp - 0x910]	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x4001168	    0x3b85ccf6ffff	            cmp eax, dword [rbp - 0x934]	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x400116e	     0xf8c20ffffff	                            jl 0x4001094	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x4001174	            0xeb04	                           jmp 0x400117a	       373	diff.c	FUNCTION_10	IF_11	FOR_2
0x4001176	              0x90	                                     nop	       376	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12
0x4001177	            0xeb01	                           jmp 0x400117a	       376	diff.c	FUNCTION_10	IF_11	FOR_2	IF_12
0x4001179	              0x90	                                     nop	       385	diff.c	FUNCTION_10	IF_11	FOR_2	ELSE_1	IF_13
0x400117a	    0xc785dcf6ffff	              mov dword [rbp - 0x924], 0	       390	diff.c	FUNCTION_10	FOR_3
0x4001184	      0xe9f6010000	                           jmp 0x400137f	       390	diff.c	FUNCTION_10	FOR_3
0x4001189	    0x488b8550f7ff	            mov rax, qword [rbp - 0x8b0]	       391	diff.c	FUNCTION_10	FOR_3
0x4001190	    0x8b95dcf6ffff	            mov edx, dword [rbp - 0x924]	       391	diff.c	FUNCTION_10	FOR_3
0x4001196	          0x4863d2	                         movsxd rdx, edx	       391	diff.c	FUNCTION_10	FOR_3
0x4001199	        0x48c1e205	                              shl rdx, 5	       391	diff.c	FUNCTION_10	FOR_3
0x400119d	          0x4801d0	                            add rax, rdx	       391	diff.c	FUNCTION_10	FOR_3
0x40011a0	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       391	diff.c	FUNCTION_10	FOR_3
0x40011a7	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       392	diff.c	FUNCTION_10	FOR_3
0x40011ae	          0x488b00	                    mov rax, qword [rax]	       392	diff.c	FUNCTION_10	FOR_3
0x40011b1	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       392	diff.c	FUNCTION_10	FOR_3
0x40011b8	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       393	diff.c	FUNCTION_10	FOR_3
0x40011bf	        0x488b4008	                mov rax, qword [rax + 8]	       393	diff.c	FUNCTION_10	FOR_3
0x40011c3	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	       393	diff.c	FUNCTION_10	FOR_3
0x40011ca	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       394	diff.c	FUNCTION_10	FOR_3
0x40011d1	            0x8b00	                    mov eax, dword [rax]	       394	diff.c	FUNCTION_10	FOR_3
0x40011d3	          0xc1e804	                              shr eax, 4	       394	diff.c	FUNCTION_10	FOR_3
0x40011d6	      0x25ffffff07	                      and eax, 0x7ffffff	       394	diff.c	FUNCTION_10	FOR_3
0x40011db	          0x83e002	                              and eax, 2	       394	diff.c	FUNCTION_10	FOR_3
0x40011de	    0x8985f4f6ffff	            mov dword [rbp - 0x90c], eax	       394	diff.c	FUNCTION_10	FOR_3
0x40011e4	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       395	diff.c	FUNCTION_10	FOR_3	IF_15
0x40011eb	           0xfb600	                   movzx eax, byte [rax]	       395	diff.c	FUNCTION_10	FOR_3	IF_15
0x40011ee	          0x83e001	                              and eax, 1	       395	diff.c	FUNCTION_10	FOR_3	IF_15
0x40011f1	            0x84c0	                             test al, al	       395	diff.c	FUNCTION_10	FOR_3	IF_15
0x40011f3	            0x751a	                           jne 0x400120f	       395	diff.c	FUNCTION_10	FOR_3	IF_15
0x40011f5	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       396	diff.c	FUNCTION_10	FOR_3	CALL_24
0x40011fc	        0x4883c004	                              add rax, 4	       396	diff.c	FUNCTION_10	FOR_3	CALL_24
0x4001200	          0x4889c7	                            mov rdi, rax	       396	diff.c	FUNCTION_10	FOR_3	CALL_24
0x4001203	      0xe800000000	                          call 0x4001208	       396	diff.c	FUNCTION_10	FOR_3	CALL_24
0x4001208	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       396	diff.c	FUNCTION_10	FOR_3	CALL_24
0x400120f	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x4001216	      0xba00000000	                              mov edx, 0	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x400121b	      0xbe00000000	                              mov esi, 0	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x4001220	          0x4889c7	                            mov rdi, rax	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x4001223	      0xe800000000	                          call 0x4001228	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x4001228	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       397	diff.c	FUNCTION_10	FOR_3	CALL_25
0x400122f	    0x4883bdf8f6ff	              cmp qword [rbp - 0x908], 0	       398	diff.c	FUNCTION_10	FOR_3	IF_16
0x4001237	            0x7524	                           jne 0x400125d	       398	diff.c	FUNCTION_10	FOR_3	IF_16
0x4001239	      0xbf00000000	                              mov edi, 0	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x400123e	      0xe808eeffff	                               call sym.	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x4001243	          0x4889c2	                            mov rdx, rax	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x4001246	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x400124d	          0x4889c6	                            mov rsi, rax	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x4001250	          0x4889d7	                            mov rdi, rdx	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x4001253	      0xb800000000	                              mov eax, 0	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x4001258	      0xe800000000	                          call 0x400125d	       399	diff.c	FUNCTION_10	FOR_3	CALL_27
0x400125d	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       400	diff.c	FUNCTION_10	FOR_3	IF_17
0x4001264	           0xfb600	                   movzx eax, byte [rax]	       400	diff.c	FUNCTION_10	FOR_3	IF_17
0x4001267	          0x83e00e	                            and eax, 0xe	       400	diff.c	FUNCTION_10	FOR_3	IF_17
0x400126a	            0x3c02	                               cmp al, 2	       400	diff.c	FUNCTION_10	FOR_3	IF_17
0x400126c	            0x7516	                           jne 0x4001284	       400	diff.c	FUNCTION_10	FOR_3	IF_17
0x400126e	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       401	diff.c	FUNCTION_10	FOR_3	CALL_28
0x4001275	          0x4889c7	                            mov rdi, rax	       401	diff.c	FUNCTION_10	FOR_3	CALL_28
0x4001278	      0xe800000000	                          call 0x400127d	       401	diff.c	FUNCTION_10	FOR_3	CALL_28
0x400127d	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       401	diff.c	FUNCTION_10	FOR_3	CALL_28
0x4001284	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       403	diff.c	FUNCTION_10	FOR_3	IF_18
0x400128b	           0xfb600	                   movzx eax, byte [rax]	       403	diff.c	FUNCTION_10	FOR_3	IF_18
0x400128e	          0x83e00e	                            and eax, 0xe	       403	diff.c	FUNCTION_10	FOR_3	IF_18
0x4001291	            0x3c04	                               cmp al, 4	       403	diff.c	FUNCTION_10	FOR_3	IF_18
0x4001293	            0x7561	                           jne 0x40012f6	       403	diff.c	FUNCTION_10	FOR_3	IF_18
0x4001295	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x400129c	            0x8b00	                    mov eax, dword [rax]	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x400129e	          0xc1e804	                              shr eax, 4	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012a1	      0x25ffffff07	                      and eax, 0x7ffffff	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012a6	     0xb85f4f6ffff	             or eax, dword [rbp - 0x90c]	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012ac	      0x25ffffff07	                      and eax, 0x7ffffff	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012b1	            0x89c2	                            mov edx, eax	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012b3	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012ba	    0x81e2ffffff07	                      and edx, 0x7ffffff	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012c0	            0x89d1	                            mov ecx, edx	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012c2	          0xc1e104	                              shl ecx, 4	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012c5	            0x8b10	                    mov edx, dword [rax]	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012c7	    0x81e20f000080	                     and edx, 0x8000000f	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012cd	             0x9ca	                             or edx, ecx	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012cf	            0x8910	                    mov dword [rax], edx	       404	diff.c	FUNCTION_10	FOR_3	IF_18
0x40012d1	    0x488d9520f7ff	                  lea rdx, [rbp - 0x8e0]	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012d8	    0x488b8d18f7ff	            mov rcx, qword [rbp - 0x8e8]	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012df	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012e6	          0x4889ce	                            mov rsi, rcx	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012e9	          0x4889c7	                            mov rdi, rax	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012ec	      0xe800000000	                          call 0x40012f1	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012f1	      0xe982000000	                           jmp 0x4001378	       405	diff.c	FUNCTION_10	FOR_3	IF_18	CALL_29
0x40012f6	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	       406	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x40012fd	           0xfb600	                   movzx eax, byte [rax]	       406	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001300	          0x83e00e	                            and eax, 0xe	       406	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001303	            0x3c06	                               cmp al, 6	       406	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001305	            0x754d	                           jne 0x4001354	       406	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001307	    0x83bde0f6ffff	              cmp dword [rbp - 0x920], 1	       407	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	IF_20
0x400130e	            0x7e24	                           jle 0x4001334	       407	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	IF_20
0x4001310	      0xbf00000000	                              mov edi, 0	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x4001315	      0xe831edffff	                               call sym.	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x400131a	          0x4889c2	                            mov rdx, rax	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x400131d	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x4001324	          0x4889c6	                            mov rsi, rax	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x4001327	          0x4889d7	                            mov rdi, rdx	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x400132a	      0xb800000000	                              mov eax, 0	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x400132f	      0xe800000000	                          call 0x4001334	       408	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19	CALL_31
0x4001334	    0x8b85e0f6ffff	            mov eax, dword [rbp - 0x920]	       409	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x400133a	            0x4898	                                    cdqe	       409	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x400133c	    0x488b9510f7ff	            mov rdx, qword [rbp - 0x8f0]	       409	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001343	    0x488994c530f7	    mov qword [rbp + rax*8 - 0x8d0], rdx	       409	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x400134b	    0x8385e0f6ffff	              add dword [rbp - 0x920], 1	       410	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001352	            0xeb24	                           jmp 0x4001378	       410	diff.c	FUNCTION_10	FOR_3	ELSE_2	IF_19
0x4001354	      0xbf00000000	                              mov edi, 0	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x4001359	      0xe8edecffff	                               call sym.	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x400135e	          0x4889c2	                            mov rdx, rax	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x4001361	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x4001368	          0x4889c6	                            mov rsi, rax	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x400136b	          0x4889d7	                            mov rdi, rdx	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x400136e	      0xb800000000	                              mov eax, 0	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x4001373	      0xe800000000	                          call 0x4001378	       413	diff.c	FUNCTION_10	FOR_3	ELSE_3	CALL_33
0x4001378	    0x8385dcf6ffff	              add dword [rbp - 0x924], 1	       390	diff.c	FUNCTION_10	FOR_3
0x400137f	    0x8b9548f7ffff	            mov edx, dword [rbp - 0x8b8]	       390	diff.c	FUNCTION_10	FOR_3
0x4001385	    0x8b85dcf6ffff	            mov eax, dword [rbp - 0x924]	       390	diff.c	FUNCTION_10	FOR_3
0x400138b	            0x39c2	                            cmp edx, eax	       390	diff.c	FUNCTION_10	FOR_3
0x400138d	     0xf87f6fdffff	                            ja 0x4001189	       390	diff.c	FUNCTION_10	FOR_3
0x4001393	    0x8b8590f7ffff	            mov eax, dword [rbp - 0x870]	       416	diff.c	FUNCTION_10	IF_21
0x4001399	            0x85c0	                           test eax, eax	       416	diff.c	FUNCTION_10	IF_21
0x400139b	            0x740c	                            je 0x40013a9	       416	diff.c	FUNCTION_10	IF_21
0x400139d	    0x8b8590f7ffff	            mov eax, dword [rbp - 0x870]	       417	diff.c	FUNCTION_10	IF_21
0x40013a3	     0x185e4f6ffff	            add dword [rbp - 0x91c], eax	       417	diff.c	FUNCTION_10	IF_21
0x40013a9	    0x8b8520f7ffff	            mov eax, dword [rbp - 0x8e0]	       422	diff.c	FUNCTION_10	IF_22
0x40013af	            0x85c0	                           test eax, eax	       422	diff.c	FUNCTION_10	IF_22
0x40013b1	     0xf85cd000000	                           jne 0x4001484	       422	diff.c	FUNCTION_10	IF_22
0x40013b7	    0x8b85e0f6ffff	            mov eax, dword [rbp - 0x920]	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013bd	          0x83f801	                              cmp eax, 1	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013c0	            0x7436	                            je 0x40013f8	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013c2	          0x83f802	                              cmp eax, 2	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013c5	            0x7472	                            je 0x4001439	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013c7	            0x85c0	                           test eax, eax	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013c9	     0xf85ab000000	                           jne 0x400147a	       423	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013cf	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013d6	    0x8b8dccf6ffff	            mov ecx, dword [rbp - 0x934]	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013dc	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013e3	            0x89ce	                            mov esi, ecx	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013e5	          0x4889c7	                            mov rdi, rax	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013e8	      0xe8f3f6ffff	             call sym.builtin_diff_files	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013ed	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       425	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_34
0x40013f3	      0xe9b1010000	                           jmp 0x40015a9	       426	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x40013f8	    0x83bde4f6ffff	              cmp dword [rbp - 0x91c], 1	       428	diff.c	FUNCTION_10	IF_22	SWITCH_1	IF_23
0x40013ff	            0x740a	                            je 0x400140b	       428	diff.c	FUNCTION_10	IF_22	SWITCH_1	IF_23
0x4001401	      0xbf00000000	                              mov edi, 0	       429	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_35
0x4001406	      0xe800000000	                          call 0x400140b	       429	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_35
0x400140b	    0x488d8d30f7ff	                  lea rcx, [rbp - 0x8d0]	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x4001412	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x4001419	    0x8bb5ccf6ffff	            mov esi, dword [rbp - 0x934]	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x400141f	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x4001426	          0x4889c7	                            mov rdi, rax	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x4001429	      0xe872efffff	               call sym.builtin_diff_b_f	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x400142e	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       430	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_36
0x4001434	      0xe970010000	                           jmp 0x40015a9	       431	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x4001439	    0x83bde4f6ffff	              cmp dword [rbp - 0x91c], 0	       433	diff.c	FUNCTION_10	IF_22	SWITCH_1	IF_24
0x4001440	            0x740a	                            je 0x400144c	       433	diff.c	FUNCTION_10	IF_22	SWITCH_1	IF_24
0x4001442	      0xbf00000000	                              mov edi, 0	       434	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_37
0x4001447	      0xe800000000	                          call 0x400144c	       434	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_37
0x400144c	    0x488d8d30f7ff	                  lea rcx, [rbp - 0x8d0]	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x4001453	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x400145a	    0x8bb5ccf6ffff	            mov esi, dword [rbp - 0x934]	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x4001460	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x4001467	          0x4889c7	                            mov rdi, rax	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x400146a	      0xe87af1ffff	             call sym.builtin_diff_blobs	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x400146f	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       435	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_38
0x4001475	      0xe92f010000	                           jmp 0x40015a9	       436	diff.c	FUNCTION_10	IF_22	SWITCH_1
0x400147a	      0xbf00000000	                              mov edi, 0	       438	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_39
0x400147f	      0xe800000000	                          call 0x4001484	       438	diff.c	FUNCTION_10	IF_22	SWITCH_1	CALL_39
0x4001484	    0x83bde0f6ffff	              cmp dword [rbp - 0x920], 0	       441	diff.c	FUNCTION_10	ELSE_4	IF_25
0x400148b	            0x740a	                            je 0x4001497	       441	diff.c	FUNCTION_10	ELSE_4	IF_25
0x400148d	      0xbf00000000	                              mov edi, 0	       442	diff.c	FUNCTION_10	ELSE_4	IF_25
0x4001492	      0xe800000000	                          call 0x4001497	       442	diff.c	FUNCTION_10	ELSE_4	IF_25
0x4001497	    0x8b8520f7ffff	            mov eax, dword [rbp - 0x8e0]	       443	diff.c	FUNCTION_10	ELSE_5	IF_26
0x400149d	          0x83f801	                              cmp eax, 1	       443	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014a0	            0x7529	                           jne 0x40014cb	       443	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014a2	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014a9	    0x8b8dccf6ffff	            mov ecx, dword [rbp - 0x934]	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014af	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014b6	            0x89ce	                            mov esi, ecx	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014b8	          0x4889c7	                            mov rdi, rax	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014bb	      0xe856f2ffff	             call sym.builtin_diff_index	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014c0	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014c6	      0xe9de000000	                           jmp 0x40015a9	       444	diff.c	FUNCTION_10	ELSE_5	IF_26
0x40014cb	    0x8b8520f7ffff	            mov eax, dword [rbp - 0x8e0]	       445	diff.c	FUNCTION_10	ELSE_6	IF_27
0x40014d1	          0x83f802	                              cmp eax, 2	       445	diff.c	FUNCTION_10	ELSE_6	IF_27
0x40014d4	            0x753c	                           jne 0x4001512	       445	diff.c	FUNCTION_10	ELSE_6	IF_27
0x40014d6	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       447	diff.c	FUNCTION_10	ELSE_6	IF_27
0x40014dd	        0x488d7820	                   lea rdi, [rax + 0x20]	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014e1	    0x488b8d28f7ff	            mov rcx, qword [rbp - 0x8d8]	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014e8	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014ef	    0x8bb5ccf6ffff	            mov esi, dword [rbp - 0x934]	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014f5	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014fc	          0x4989f8	                             mov r8, rdi	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x40014ff	          0x4889c7	                            mov rdi, rax	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x4001502	      0xe833f3ffff	              call sym.builtin_diff_tree	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x4001507	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x400150d	      0xe997000000	                           jmp 0x40015a9	       446	diff.c	FUNCTION_10	ELSE_6	IF_27	CALL_42
0x4001512	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001519	          0x488b00	                    mov rax, qword [rax]	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400151c	            0x8b00	                    mov eax, dword [rax]	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400151e	          0xc1e804	                              shr eax, 4	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001521	      0x25ffffff07	                      and eax, 0x7ffffff	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001526	          0x83e002	                              and eax, 2	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001529	            0x85c0	                           test eax, eax	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400152b	            0x7448	                            je 0x4001575	       448	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400152d	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       459	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001534	    0x8b9520f7ffff	            mov edx, dword [rbp - 0x8e0]	       459	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400153a	          0x83ea01	                              sub edx, 1	       459	diff.c	FUNCTION_10	ELSE_7	IF_28
0x400153d	            0x89d2	                            mov edx, edx	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x400153f	        0x48c1e205	                              shl rdx, 5	       459	diff.c	FUNCTION_10	ELSE_7	IF_28
0x4001543	        0x488d3c10	                    lea rdi, [rax + rdx]	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001547	    0x488b8d28f7ff	            mov rcx, qword [rbp - 0x8d8]	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x400154e	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001555	    0x8bb5ccf6ffff	            mov esi, dword [rbp - 0x934]	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x400155b	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001562	          0x4989f8	                             mov r8, rdi	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001565	          0x4889c7	                            mov rdi, rax	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001568	      0xe8cdf2ffff	              call sym.builtin_diff_tree	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x400156d	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001573	            0xeb34	                           jmp 0x40015a9	       457	diff.c	FUNCTION_10	ELSE_7	IF_28	CALL_43
0x4001575	    0x8b8520f7ffff	            mov eax, dword [rbp - 0x8e0]	       462	diff.c	FUNCTION_10	ELSE_8
0x400157b	            0x89c7	                            mov edi, eax	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x400157d	    0x488b8d28f7ff	            mov rcx, qword [rbp - 0x8d8]	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x4001584	    0x488b95c0f6ff	            mov rdx, qword [rbp - 0x940]	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x400158b	    0x8bb5ccf6ffff	            mov esi, dword [rbp - 0x934]	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x4001591	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x4001598	          0x4189f8	                            mov r8d, edi	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x400159b	          0x4889c7	                            mov rdi, rax	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x400159e	      0xe873f3ffff	          call sym.builtin_diff_combined	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x40015a3	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       461	diff.c	FUNCTION_10	ELSE_8	CALL_44
0x40015a9	    0x8b85ecf6ffff	            mov eax, dword [rbp - 0x914]	       463	diff.c	FUNCTION_10	CALL_45
0x40015af	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       463	diff.c	FUNCTION_10	CALL_45
0x40015b6	    0x4881c2f80400	                          add rdx, 0x4f8	       463	diff.c	FUNCTION_10	CALL_45
0x40015bd	            0x89c6	                            mov esi, eax	       463	diff.c	FUNCTION_10	CALL_45
0x40015bf	          0x4889d7	                            mov rdi, rdx	       463	diff.c	FUNCTION_10	CALL_45
0x40015c2	      0xe800000000	                          call 0x40015c7	       463	diff.c	FUNCTION_10	CALL_45
0x40015c7	    0x8985ecf6ffff	            mov dword [rbp - 0x914], eax	       463	diff.c	FUNCTION_10	CALL_45
0x40015cd	    0x8b8590fcffff	            mov eax, dword [rbp - 0x370]	       464	diff.c	FUNCTION_10	IF_29
0x40015d3	          0x83f801	                              cmp eax, 1	       464	diff.c	FUNCTION_10	IF_29
0x40015d6	            0x7e05	                           jle 0x40015dd	       464	diff.c	FUNCTION_10	IF_29
0x40015d8	      0xe86df4ffff	          call sym.refresh_index_quietly	       465	diff.c	FUNCTION_10	CALL_46
0x40015dd	    0x8b85ecf6ffff	            mov eax, dword [rbp - 0x914]	       469	diff.c	FUNCTION_10
0x40015e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       470	diff.c	FUNCTION_10
0x40015e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       470	diff.c	FUNCTION_10
0x40015f0	            0x7405	                            je 0x40015f7	       470	diff.c	FUNCTION_10
0x40015f2	      0xe800000000	                          call 0x40015f7	       470	diff.c	FUNCTION_10
0x40015f7	              0xc9	                                   leave	       470	diff.c	FUNCTION_10
0x40015f8	              0xc3	                                     ret	       470	diff.c	FUNCTION_10
blob_path	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,0:CALL,0:ELSE,0:functions,0	14
0x400014e	              0x55	                                push rbp	        28	diff.c	FUNCTION_1
0x400014f	          0x4889e5	                            mov rbp, rsp	        28	diff.c	FUNCTION_1
0x4000152	        0x48897df8	                mov qword [rbp - 8], rdi	        28	diff.c	FUNCTION_1
0x4000156	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	diff.c	FUNCTION_1
0x400015a	        0x488b4010	            mov rax, qword [rax + 0x10] 	        29	diff.c	FUNCTION_1
0x400015e	          0x4885c0	                           test rax, rax	        29	diff.c	FUNCTION_1
0x4000161	            0x740a	                            je 0x400016d	        29	diff.c	FUNCTION_1
0x4000163	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	diff.c	FUNCTION_1
0x4000167	        0x488b4010	            mov rax, qword [rax + 0x10] 	        29	diff.c	FUNCTION_1
0x400016b	            0xeb08	                           jmp 0x4000175	        29	diff.c	FUNCTION_1
0x400016d	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	diff.c	FUNCTION_1
0x4000171	        0x488b4008	                mov rax, qword [rax + 8]	        29	diff.c	FUNCTION_1
0x4000175	              0x5d	                                 pop rbp	        30	diff.c	FUNCTION_1
0x4000176	              0xc3	                                     ret	        30	diff.c	FUNCTION_1
builtin_diff_b_f	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,4:CALL,14:ELSE,0:functions,0	134
0x40003a0	              0x55	                                push rbp	        69	diff.c	FUNCTION_3
0x40003a1	          0x4889e5	                            mov rbp, rsp	        69	diff.c	FUNCTION_3
0x40003a4	            0x4154	                                push r12	        69	diff.c	FUNCTION_3
0x40003a6	              0x53	                                push rbx	        69	diff.c	FUNCTION_3
0x40003a7	    0x4881ecd00000	                           sub rsp, 0xd0	        69	diff.c	FUNCTION_3
0x40003ae	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        69	diff.c	FUNCTION_3
0x40003b5	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	        69	diff.c	FUNCTION_3
0x40003bb	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	        69	diff.c	FUNCTION_3
0x40003c2	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	        69	diff.c	FUNCTION_3
0x40003c9	    0x64488b042528	                mov rax, qword fs:[0x28]	        69	diff.c	FUNCTION_3
0x40003d2	        0x488945e8	             mov qword [rbp - 0x18], rax	        69	diff.c	FUNCTION_3
0x40003d6	            0x31c0	                            xor eax, eax	        69	diff.c	FUNCTION_3
0x40003d8	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 1	        74	diff.c	FUNCTION_3	IF_1
0x40003df	            0x7e0a	                           jle 0x40003eb	        74	diff.c	FUNCTION_3	IF_1
0x40003e1	      0xbf00000000	                              mov edi, 0	        75	diff.c	FUNCTION_3	CALL_1
0x40003e6	      0xe800000000	                          call 0x40003eb	        75	diff.c	FUNCTION_3	CALL_1
0x40003eb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        77	diff.c	FUNCTION_3	CALL_2
0x40003f2	          0x8b4058	            mov eax, dword [rax + 0x58] 	        77	diff.c	FUNCTION_3	CALL_2
0x40003f5	          0x83e0fa	                     and eax, 0xfffffffa	        77	diff.c	FUNCTION_3	CALL_2
0x40003f8	            0x85c0	                           test eax, eax	        77	diff.c	FUNCTION_3	CALL_2
0x40003fa	            0x7428	                            je 0x4000424	        77	diff.c	FUNCTION_3	CALL_2
0x40003fc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        77	diff.c	FUNCTION_3	CALL_2
0x4000403	          0x8b4058	            mov eax, dword [rax + 0x58] 	        77	diff.c	FUNCTION_3	CALL_2
0x4000406	          0x83e0fa	                     and eax, 0xfffffffa	        77	diff.c	FUNCTION_3	CALL_2
0x4000409	            0x89c1	                            mov ecx, eax	        77	diff.c	FUNCTION_3	CALL_2
0x400040b	      0xba4d000000	                           mov edx, 0x4d	        77	diff.c	FUNCTION_3	CALL_2
0x4000410	      0xbe00000000	                              mov esi, 0	        77	diff.c	FUNCTION_3	CALL_2
0x4000415	      0xbf00000000	                              mov edi, 0	        77	diff.c	FUNCTION_3	CALL_2
0x400041a	      0xb800000000	                              mov eax, 0	        77	diff.c	FUNCTION_3	CALL_2
0x400041f	      0xe800000000	                          call 0x4000424	        77	diff.c	FUNCTION_3	CALL_2
0x4000424	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        78	diff.c	FUNCTION_3
0x400042b	        0x488b4060	            mov rax, qword [rax + 0x60] 	        78	diff.c	FUNCTION_3
0x400042f	          0x488b00	                    mov rax, qword [rax]	        78	diff.c	FUNCTION_3
0x4000432	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        78	diff.c	FUNCTION_3
0x4000439	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	        80	diff.c	FUNCTION_3	IF_2
0x4000440	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        80	diff.c	FUNCTION_3	IF_2
0x4000447	          0x4889d6	                            mov rsi, rdx	        80	diff.c	FUNCTION_3	IF_2
0x400044a	          0x4889c7	                            mov rdi, rax	        80	diff.c	FUNCTION_3	IF_2
0x400044d	      0xe800000000	                          call 0x4000452	        80	diff.c	FUNCTION_3	IF_2
0x4000452	            0x85c0	                           test eax, eax	        80	diff.c	FUNCTION_3	IF_2
0x4000454	            0x7424	                            je 0x400047a	        80	diff.c	FUNCTION_3	IF_2
0x4000456	      0xbf00000000	                              mov edi, 0	        81	diff.c	FUNCTION_3	CALL_4
0x400045b	      0xe8ebfbffff	                               call sym.	        81	diff.c	FUNCTION_3	CALL_4
0x4000460	          0x4889c2	                            mov rdx, rax	        81	diff.c	FUNCTION_3	CALL_4
0x4000463	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        81	diff.c	FUNCTION_3	CALL_4
0x400046a	          0x4889c6	                            mov rsi, rax	        81	diff.c	FUNCTION_3	CALL_4
0x400046d	          0x4889d7	                            mov rdi, rdx	        81	diff.c	FUNCTION_3	CALL_4
0x4000470	      0xb800000000	                              mov eax, 0	        81	diff.c	FUNCTION_3	CALL_4
0x4000475	      0xe800000000	                          call 0x400047a	        81	diff.c	FUNCTION_3	CALL_4
0x400047a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x4000480	      0x2500f00000	                         and eax, 0xf000	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x4000485	      0x3d00800000	                         cmp eax, 0x8000	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x400048a	            0x7436	                            je 0x40004c2	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x400048c	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x4000492	      0x2500f00000	                         and eax, 0xf000	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x4000497	      0x3d00a00000	                         cmp eax, 0xa000	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x400049c	            0x7424	                            je 0x40004c2	        82	diff.c	FUNCTION_3	IF_3	CALL_6
0x400049e	      0xbf00000000	                              mov edi, 0	        83	diff.c	FUNCTION_3	CALL_8
0x40004a3	      0xe8a3fbffff	                               call sym.	        83	diff.c	FUNCTION_3	CALL_8
0x40004a8	          0x4889c2	                            mov rdx, rax	        83	diff.c	FUNCTION_3	CALL_8
0x40004ab	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        83	diff.c	FUNCTION_3	CALL_8
0x40004b2	          0x4889c6	                            mov rsi, rax	        83	diff.c	FUNCTION_3	CALL_8
0x40004b5	          0x4889d7	                            mov rdi, rdx	        83	diff.c	FUNCTION_3	CALL_8
0x40004b8	      0xb800000000	                              mov eax, 0	        83	diff.c	FUNCTION_3	CALL_8
0x40004bd	      0xe800000000	                          call 0x40004c2	        83	diff.c	FUNCTION_3	CALL_8
0x40004c2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        85	diff.c	FUNCTION_3	CALL_9
0x40004c9	    0x4805f8040000	                          add rax, 0x4f8	        85	diff.c	FUNCTION_3	CALL_9
0x40004cf	      0xba00000000	                              mov edx, 0	        85	diff.c	FUNCTION_3	CALL_9
0x40004d4	      0xbe00000000	                              mov esi, 0	        85	diff.c	FUNCTION_3	CALL_9
0x40004d9	          0x4889c7	                            mov rdi, rax	        85	diff.c	FUNCTION_3	CALL_9
0x40004dc	      0xe800000000	                          call 0x40004e1	        85	diff.c	FUNCTION_3	CALL_9
0x40004e1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        87	diff.c	FUNCTION_3	IF_4
0x40004e8	          0x488b00	                    mov rax, qword [rax]	        87	diff.c	FUNCTION_3	IF_4
0x40004eb	          0x8b4018	            mov eax, dword [rax + 0x18] 	        87	diff.c	FUNCTION_3	IF_4
0x40004ee	      0x3d00300000	                         cmp eax, 0x3000	        87	diff.c	FUNCTION_3	IF_4
0x40004f3	            0x751a	                           jne 0x400050f	        87	diff.c	FUNCTION_3	IF_4
0x40004f5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        88	diff.c	FUNCTION_3	CALL_10
0x40004fc	          0x488b18	                    mov rbx, qword [rax]	        88	diff.c	FUNCTION_3	CALL_10
0x40004ff	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	        88	diff.c	FUNCTION_3	CALL_10
0x4000505	            0x89c7	                            mov edi, eax	        88	diff.c	FUNCTION_3	CALL_10
0x4000507	      0xe86bfbffff	                     call sym.canon_mode	        88	diff.c	FUNCTION_3	CALL_10
0x400050c	          0x894318	             mov dword [rbx + 0x18], eax	        88	diff.c	FUNCTION_3	CALL_10
0x400050f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        94	diff.c	FUNCTION_3
0x4000516	          0x488b00	                    mov rax, qword [rax]	        94	diff.c	FUNCTION_3
0x4000519	        0x488b4010	            mov rax, qword [rax + 0x10] 	        94	diff.c	FUNCTION_3
0x400051d	          0x4885c0	                           test rax, rax	        90	diff.c	FUNCTION_3	CALL_11
0x4000520	            0x7410	                            je 0x4000532	        90	diff.c	FUNCTION_3	CALL_11
0x4000522	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        94	diff.c	FUNCTION_3
0x4000529	          0x488b00	                    mov rax, qword [rax]	        94	diff.c	FUNCTION_3
0x400052c	        0x488b5810	            mov rbx, qword [rax + 0x10] 	        90	diff.c	FUNCTION_3	CALL_11
0x4000530	            0xeb07	                           jmp 0x4000539	        90	diff.c	FUNCTION_3	CALL_11
0x4000532	    0x488b9d48ffff	             mov rbx, qword [rbp - 0xb8]	        90	diff.c	FUNCTION_3	CALL_11
0x4000539	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        92	diff.c	FUNCTION_3
0x4000540	          0x488b00	                    mov rax, qword [rax]	        92	diff.c	FUNCTION_3
0x4000543	          0x488b00	                    mov rax, qword [rax]	        92	diff.c	FUNCTION_3
0x4000546	        0x4c8d6004	                      lea r12, [rax + 4]	        92	diff.c	FUNCTION_3
0x400054a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	        90	diff.c	FUNCTION_3	CALL_11
0x4000550	            0x89c7	                            mov edi, eax	        90	diff.c	FUNCTION_3	CALL_11
0x4000552	      0xe820fbffff	                     call sym.canon_mode	        90	diff.c	FUNCTION_3	CALL_11
0x4000557	            0x89c6	                            mov esi, eax	        90	diff.c	FUNCTION_3	CALL_11
0x4000559	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        91	diff.c	FUNCTION_3	CALL_12
0x4000560	          0x488b00	                    mov rax, qword [rax]	        91	diff.c	FUNCTION_3	CALL_12
0x4000563	          0x8b4018	            mov eax, dword [rax + 0x18] 	        90	diff.c	FUNCTION_3	CALL_11
0x4000566	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	        90	diff.c	FUNCTION_3	CALL_11
0x400056d	    0x488dbaf80400	                  lea rdi, [rdx + 0x4f8]	        90	diff.c	FUNCTION_3	CALL_11
0x4000574	        0x4883ec08	                              sub rsp, 8	        90	diff.c	FUNCTION_3	CALL_11
0x4000578	    0xffb548ffffff	                 push qword [rbp - 0xb8]	        90	diff.c	FUNCTION_3	CALL_11
0x400057e	              0x53	                                push rbx	        90	diff.c	FUNCTION_3	CALL_11
0x400057f	            0x6a00	                                  push 0	        90	diff.c	FUNCTION_3	CALL_11
0x4000581	    0x41b901000000	                              mov r9d, 1	        90	diff.c	FUNCTION_3	CALL_11
0x4000587	    0x41b800000000	                              mov r8d, 0	        90	diff.c	FUNCTION_3	CALL_11
0x400058d	          0x4c89e1	                            mov rcx, r12	        90	diff.c	FUNCTION_3	CALL_11
0x4000590	            0x89f2	                            mov edx, esi	        90	diff.c	FUNCTION_3	CALL_11
0x4000592	            0x89c6	                            mov esi, eax	        90	diff.c	FUNCTION_3	CALL_11
0x4000594	      0xe8defbffff	                   call sym.stuff_change	        90	diff.c	FUNCTION_3	CALL_11
0x4000599	        0x4883c420	                           add rsp, 0x20	        90	diff.c	FUNCTION_3	CALL_11
0x400059d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        96	diff.c	FUNCTION_3	CALL_13
0x40005a4	    0x4805f8040000	                          add rax, 0x4f8	        96	diff.c	FUNCTION_3	CALL_13
0x40005aa	          0x4889c7	                            mov rdi, rax	        96	diff.c	FUNCTION_3	CALL_13
0x40005ad	      0xe800000000	                          call 0x40005b2	        96	diff.c	FUNCTION_3	CALL_13
0x40005b2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        97	diff.c	FUNCTION_3	CALL_14
0x40005b9	    0x4805f8040000	                          add rax, 0x4f8	        97	diff.c	FUNCTION_3	CALL_14
0x40005bf	          0x4889c7	                            mov rdi, rax	        97	diff.c	FUNCTION_3	CALL_14
0x40005c2	      0xe800000000	                          call 0x40005c7	        97	diff.c	FUNCTION_3	CALL_14
0x40005c7	      0xb800000000	                              mov eax, 0	        98	diff.c	FUNCTION_3
0x40005cc	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        99	diff.c	FUNCTION_3
0x40005d0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        99	diff.c	FUNCTION_3
0x40005d9	            0x7405	                            je 0x40005e0	        99	diff.c	FUNCTION_3
0x40005db	      0xe800000000	                          call 0x40005e0	        99	diff.c	FUNCTION_3
0x40005e0	        0x488d65f0	                   lea rsp, [rbp - 0x10]	        99	diff.c	FUNCTION_3
0x40005e4	              0x5b	                                 pop rbx	        99	diff.c	FUNCTION_3
0x40005e5	            0x415c	                                 pop r12	        99	diff.c	FUNCTION_3
0x40005e7	              0x5d	                                 pop rbp	        99	diff.c	FUNCTION_3
0x40005e8	              0xc3	                                     ret	        99	diff.c	FUNCTION_3
const_error	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,0:CALL,0:ELSE,0:functions,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_47
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_47
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_47
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_47
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_47
hashcmp	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,0:CALL,1:ELSE,0:functions,0	13
0x40000d8	              0x55	                                push rbp	       974	cache.h	FUNCTION_22
0x40000d9	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_22
0x40000dc	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_22
0x40000e0	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_22
0x40000e4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_22
0x40000e8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_22	CALL_1
0x40000ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_22	CALL_1
0x40000f0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_22	CALL_1
0x40000f5	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_22	CALL_1
0x40000f8	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_22	CALL_1
0x40000fb	      0xe800000000	                          call 0x4000100	       975	cache.h	FUNCTION_22	CALL_1
0x4000100	              0xc9	                                   leave	       976	cache.h	FUNCTION_22
0x4000101	              0xc3	                                     ret	       976	cache.h	FUNCTION_22
builtin_diff_tree	WHILE,0:DO,0:FOR,0:SWITCH,0:IF,2:CALL,3:ELSE,0:functions,0	57
0x400083a	              0x55	                                push rbp	       163	diff.c	FUNCTION_6
0x400083b	          0x4889e5	                            mov rbp, rsp	       163	diff.c	FUNCTION_6
0x400083e	        0x4883ec60	                           sub rsp, 0x60	       163	diff.c	FUNCTION_6
0x4000842	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       163	diff.c	FUNCTION_6
0x4000846	          0x8975c4	             mov dword [rbp - 0x3c], esi	       163	diff.c	FUNCTION_6
0x4000849	        0x488955b8	             mov qword [rbp - 0x48], rdx	       163	diff.c	FUNCTION_6
0x400084d	        0x48894db0	             mov qword [rbp - 0x50], rcx	       163	diff.c	FUNCTION_6
0x4000851	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       163	diff.c	FUNCTION_6
0x4000855	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	diff.c	FUNCTION_6
0x400085e	        0x488945f8	                mov qword [rbp - 8], rax	       163	diff.c	FUNCTION_6
0x4000862	            0x31c0	                            xor eax, eax	       163	diff.c	FUNCTION_6
0x4000864	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       165	diff.c	FUNCTION_6
0x400086b	        0x837dc401	               cmp dword [rbp - 0x3c], 1	       167	diff.c	FUNCTION_6	IF_1
0x400086f	            0x7e0a	                           jle 0x400087b	       167	diff.c	FUNCTION_6	IF_1
0x4000871	      0xbf00000000	                              mov edi, 0	       168	diff.c	FUNCTION_6	CALL_1
0x4000876	      0xe800000000	                          call 0x400087b	       168	diff.c	FUNCTION_6	CALL_1
0x400087b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       174	diff.c	FUNCTION_6	IF_2
0x400087f	          0x488b00	                    mov rax, qword [rax]	       174	diff.c	FUNCTION_6	IF_2
0x4000882	            0x8b00	                    mov eax, dword [rax]	       174	diff.c	FUNCTION_6	IF_2
0x4000884	          0xc1e804	                              shr eax, 4	       174	diff.c	FUNCTION_6	IF_2
0x4000887	      0x25ffffff07	                      and eax, 0x7ffffff	       174	diff.c	FUNCTION_6	IF_2
0x400088c	          0x83e002	                              and eax, 2	       174	diff.c	FUNCTION_6	IF_2
0x400088f	            0x85c0	                           test eax, eax	       174	diff.c	FUNCTION_6	IF_2
0x4000891	            0x7407	                            je 0x400089a	       174	diff.c	FUNCTION_6	IF_2
0x4000893	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       175	diff.c	FUNCTION_6	IF_2
0x400089a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       176	diff.c	FUNCTION_6
0x400089e	          0x488b00	                    mov rax, qword [rax]	       176	diff.c	FUNCTION_6
0x40008a1	        0x488d5004	                      lea rdx, [rax + 4]	       176	diff.c	FUNCTION_6
0x40008a5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       176	diff.c	FUNCTION_6
0x40008a8	            0x4898	                                    cdqe	       176	diff.c	FUNCTION_6
0x40008aa	      0x488954c5e0	     mov qword [rbp + rax*8 - 0x20], rdx	       176	diff.c	FUNCTION_6
0x40008af	      0xb801000000	                              mov eax, 1	       177	diff.c	FUNCTION_6
0x40008b4	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       177	diff.c	FUNCTION_6
0x40008b7	            0x89c1	                            mov ecx, eax	       177	diff.c	FUNCTION_6
0x40008b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       177	diff.c	FUNCTION_6
0x40008bd	          0x488b00	                    mov rax, qword [rax]	       177	diff.c	FUNCTION_6
0x40008c0	        0x488d5004	                      lea rdx, [rax + 4]	       177	diff.c	FUNCTION_6
0x40008c4	          0x4863c1	                         movsxd rax, ecx	       177	diff.c	FUNCTION_6
0x40008c7	      0x488954c5e0	     mov qword [rbp + rax*8 - 0x20], rdx	       177	diff.c	FUNCTION_6
0x40008cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       178	diff.c	FUNCTION_6	CALL_2
0x40008d0	    0x488d90f80400	                  lea rdx, [rax + 0x4f8]	       178	diff.c	FUNCTION_6	CALL_2
0x40008d7	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       178	diff.c	FUNCTION_6	CALL_2
0x40008db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       178	diff.c	FUNCTION_6	CALL_2
0x40008df	          0x4889d1	                            mov rcx, rdx	       178	diff.c	FUNCTION_6	CALL_2
0x40008e2	      0xba00000000	                              mov edx, 0	       178	diff.c	FUNCTION_6	CALL_2
0x40008e7	          0x4889c7	                            mov rdi, rax	       178	diff.c	FUNCTION_6	CALL_2
0x40008ea	      0xe800000000	                          call 0x40008ef	       178	diff.c	FUNCTION_6	CALL_2
0x40008ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       179	diff.c	FUNCTION_6	CALL_3
0x40008f3	          0x4889c7	                            mov rdi, rax	       179	diff.c	FUNCTION_6	CALL_3
0x40008f6	      0xe800000000	                          call 0x40008fb	       179	diff.c	FUNCTION_6	CALL_3
0x40008fb	      0xb800000000	                              mov eax, 0	       180	diff.c	FUNCTION_6
0x4000900	        0x488b4df8	                mov rcx, qword [rbp - 8]	       181	diff.c	FUNCTION_6
0x4000904	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       181	diff.c	FUNCTION_6
0x400090d	            0x7405	                            je 0x4000914	       181	diff.c	FUNCTION_6
0x400090f	      0xe800000000	                          call 0x4000914	       181	diff.c	FUNCTION_6
0x4000914	              0xc9	                                   leave	       181	diff.c	FUNCTION_6
0x4000915	              0xc3	                                     ret	       181	diff.c	FUNCTION_6
