group_slide_up	ELSE,1:DO,0:functions,0:WHILE,1:IF,1:FOR,0:CALL,1:SWITCH,0	74
0x40019a1	              0x55	                                push rbp	       789	xdiffi.c	FUNCTION_14
0x40019a2	          0x4889e5	                            mov rbp, rsp	       789	xdiffi.c	FUNCTION_14
0x40019a5	        0x4883ec20	                           sub rsp, 0x20	       789	xdiffi.c	FUNCTION_14
0x40019a9	        0x48897df8	                mov qword [rbp - 8], rdi	       789	xdiffi.c	FUNCTION_14
0x40019ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       789	xdiffi.c	FUNCTION_14
0x40019b1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       789	xdiffi.c	FUNCTION_14
0x40019b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       790	xdiffi.c	FUNCTION_14	IF_1
0x40019b9	          0x488b00	                    mov rax, qword [rax]	       790	xdiffi.c	FUNCTION_14	IF_1
0x40019bc	          0x4885c0	                           test rax, rax	       790	xdiffi.c	FUNCTION_14	IF_1
0x40019bf	     0xf8edb000000	                           jle 0x4001aa0	       790	xdiffi.c	FUNCTION_14	IF_1
0x40019c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019c9	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019d1	        0x488b4008	                mov rax, qword [rax + 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019d5	        0x48c1e003	                              shl rax, 3	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019d9	        0x4883e808	                              sub rax, 8	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019dd	          0x4801d0	                            add rax, rdx	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019e0	          0x488b08	                    mov rcx, qword [rax]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019e7	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019ef	          0x488b00	                    mov rax, qword [rax]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019f2	        0x48c1e003	                              shl rax, 3	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019f6	        0x4883e808	                              sub rax, 8	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019fa	          0x4801d0	                            add rax, rdx	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40019fd	          0x488b00	                    mov rax, qword [rax]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001a00	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001a04	          0x4889ce	                            mov rsi, rcx	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001a07	          0x4889c7	                            mov rdi, rax	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001a0a	      0xe891f8ffff	                     call sym.recs_match	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001a0f	            0x85c0	                           test eax, eax	       790	xdiffi.c	FUNCTION_14	IF_1
0x4001a11	     0xf8489000000	                            je 0x4001aa0	       790	xdiffi.c	FUNCTION_14	IF_1
0x4001a17	        0x488b45f8	                mov rax, qword [rbp - 8]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a1b	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a23	          0x488b00	                    mov rax, qword [rax]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a26	        0x488d48ff	                      lea rcx, [rax - 1]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a2e	          0x488908	                    mov qword [rax], rcx	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a31	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a35	          0x488b00	                    mov rax, qword [rax]	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a38	          0x4801d0	                            add rax, rdx	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a3b	          0xc60001	                       mov byte [rax], 1	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001a3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a42	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a4a	        0x488b4008	                mov rax, qword [rax + 8]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a4e	        0x488d48ff	                      lea rcx, [rax - 1]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a56	        0x48894808	                mov qword [rax + 8], rcx	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a5e	        0x488b4008	                mov rax, qword [rax + 8]	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a62	          0x4801d0	                            add rax, rdx	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a65	          0xc60000	                       mov byte [rax], 0	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001a68	            0xeb12	                           jmp 0x4001a7c	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a6e	          0x488b00	                    mov rax, qword [rax]	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a71	        0x488d50ff	                      lea rdx, [rax - 1]	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a79	          0x488910	                    mov qword [rax], rdx	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a80	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a84	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a88	          0x488b00	                    mov rax, qword [rax]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a8b	        0x4883e801	                              sub rax, 1	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a8f	          0x4801d0	                            add rax, rdx	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a92	           0xfb600	                   movzx eax, byte [rax]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a95	            0x84c0	                             test al, al	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a97	            0x75d1	                           jne 0x4001a6a	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001a99	      0xb800000000	                              mov eax, 0	       798	xdiffi.c	FUNCTION_14	IF_1
0x4001a9e	            0xeb05	                           jmp 0x4001aa5	       798	xdiffi.c	FUNCTION_14	IF_1
0x4001aa0	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	xdiffi.c	FUNCTION_14	ELSE_1
0x4001aa5	              0xc9	                                   leave	       802	xdiffi.c	FUNCTION_14
0x4001aa6	              0xc3	                                     ret	       802	xdiffi.c	FUNCTION_14
xdl_split	ELSE,7:DO,0:functions,0:WHILE,0:IF,24:FOR,11:CALL,2:SWITCH,0	650
0x4000040	              0x55	                                push rbp	        65	xdiffi.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        65	xdiffi.c	FUNCTION_1
0x4000044	        0x4883ec78	                           sub rsp, 0x78	        65	xdiffi.c	FUNCTION_1
0x4000048	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        65	xdiffi.c	FUNCTION_1
0x400004f	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	        65	xdiffi.c	FUNCTION_1
0x4000056	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	        65	xdiffi.c	FUNCTION_1
0x400005d	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	        65	xdiffi.c	FUNCTION_1
0x4000064	    0x4c898518ffff	              mov qword [rbp - 0xe8], r8	        65	xdiffi.c	FUNCTION_1
0x400006b	    0x4c898d10ffff	              mov qword [rbp - 0xf0], r9	        65	xdiffi.c	FUNCTION_1
0x4000072	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        66	xdiffi.c	FUNCTION_1
0x4000079	    0x482b8510ffff	             sub rax, qword [rbp - 0xf0]	        66	xdiffi.c	FUNCTION_1
0x4000080	        0x488945c0	             mov qword [rbp - 0x40], rax	        66	xdiffi.c	FUNCTION_1
0x4000084	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        66	xdiffi.c	FUNCTION_1
0x400008b	    0x482b8518ffff	             sub rax, qword [rbp - 0xe8]	        66	xdiffi.c	FUNCTION_1
0x4000092	        0x488945c8	             mov qword [rbp - 0x38], rax	        66	xdiffi.c	FUNCTION_1
0x4000096	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        67	xdiffi.c	FUNCTION_1
0x400009d	    0x482b8518ffff	             sub rax, qword [rbp - 0xe8]	        67	xdiffi.c	FUNCTION_1
0x40000a4	        0x488945d0	             mov qword [rbp - 0x30], rax	        67	xdiffi.c	FUNCTION_1
0x40000a8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        67	xdiffi.c	FUNCTION_1
0x40000af	    0x482b8510ffff	             sub rax, qword [rbp - 0xf0]	        67	xdiffi.c	FUNCTION_1
0x40000b6	        0x488945d8	             mov qword [rbp - 0x28], rax	        67	xdiffi.c	FUNCTION_1
0x40000ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        68	xdiffi.c	FUNCTION_1
0x40000be	        0x482b45d8	             sub rax, qword [rbp - 0x28]	        68	xdiffi.c	FUNCTION_1
0x40000c2	          0x83e001	                              and eax, 1	        68	xdiffi.c	FUNCTION_1
0x40000c5	        0x488945e0	             mov qword [rbp - 0x20], rax	        68	xdiffi.c	FUNCTION_1
0x40000c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        69	xdiffi.c	FUNCTION_1
0x40000cd	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	        69	xdiffi.c	FUNCTION_1
0x40000d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        69	xdiffi.c	FUNCTION_1
0x40000d8	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	        69	xdiffi.c	FUNCTION_1
0x40000df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        70	xdiffi.c	FUNCTION_1
0x40000e3	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	        70	xdiffi.c	FUNCTION_1
0x40000ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        70	xdiffi.c	FUNCTION_1
0x40000ee	    0x48898568ffff	             mov qword [rbp - 0x98], rax	        70	xdiffi.c	FUNCTION_1
0x40000f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        76	xdiffi.c	FUNCTION_1
0x40000f9	    0x488d14c50000	                        lea rdx, [rax*8]	        76	xdiffi.c	FUNCTION_1
0x4000101	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        76	xdiffi.c	FUNCTION_1
0x4000105	          0x4801c2	                            add rdx, rax	        76	xdiffi.c	FUNCTION_1
0x4000108	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        76	xdiffi.c	FUNCTION_1
0x400010f	          0x488902	                    mov qword [rdx], rax	        76	xdiffi.c	FUNCTION_1
0x4000112	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	xdiffi.c	FUNCTION_1
0x4000116	    0x488d14c50000	                        lea rdx, [rax*8]	        77	xdiffi.c	FUNCTION_1
0x400011e	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        77	xdiffi.c	FUNCTION_1
0x4000122	          0x4801c2	                            add rdx, rax	        77	xdiffi.c	FUNCTION_1
0x4000125	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        77	xdiffi.c	FUNCTION_1
0x400012c	          0x488902	                    mov qword [rdx], rax	        77	xdiffi.c	FUNCTION_1
0x400012f	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x400013a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000144	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400014b	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400014f	            0x7e27	                           jle 0x4000178	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000151	    0x4883ad50ffff	               sub qword [rbp - 0xb0], 1	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000159	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000160	        0x48c1e003	                              shl rax, 3	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000164	        0x488d50f8	                      lea rdx, [rax - 8]	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000168	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400016c	          0x4801d0	                            add rax, rdx	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400016f	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000176	            0xeb08	                           jmp 0x4000180	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000178	    0x48838550ffff	               add qword [rbp - 0xb0], 1	        92	xdiffi.c	FUNCTION_1	FOR_1	ELSE_1
0x4000180	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000187	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400018b	            0x7d2b	                           jge 0x40001b8	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400018d	    0x48838558ffff	               add qword [rbp - 0xa8], 1	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000195	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400019c	        0x4883c001	                              add rax, 1	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001a0	    0x488d14c50000	                        lea rdx, [rax*8]	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001a8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001ac	          0x4801d0	                            add rax, rdx	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001af	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001b6	            0xeb08	                           jmp 0x40001c0	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40001b8	    0x4883ad58ffff	               sub qword [rbp - 0xa8], 1	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x40001c0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40001c7	    0x48898578ffff	             mov qword [rbp - 0x88], rax	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40001ce	      0xe9bc010000	                           jmp 0x400038f	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40001d3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001da	        0x48c1e003	                              shl rax, 3	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001de	        0x488d50f8	                      lea rdx, [rax - 8]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001e2	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001e6	          0x4801d0	                            add rax, rdx	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001e9	          0x488b10	                    mov rdx, qword [rax]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001ec	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001f3	        0x4883c001	                              add rax, 1	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001f7	    0x488d0cc50000	                        lea rcx, [rax*8]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40001ff	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000203	          0x4801c8	                            add rax, rcx	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000206	          0x488b00	                    mov rax, qword [rax]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000209	          0x4839c2	                            cmp rdx, rax	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400020c	            0x7c23	                            jl 0x4000231	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400020e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000215	        0x48c1e003	                              shl rax, 3	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000219	        0x488d50f8	                      lea rdx, [rax - 8]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400021d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000221	          0x4801d0	                            add rax, rdx	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000224	          0x488b00	                    mov rax, qword [rax]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000227	        0x4883c001	                              add rax, 1	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400022b	        0x48894580	             mov qword [rbp - 0x80], rax	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400022f	            0xeb21	                           jmp 0x4000252	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000231	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x4000238	        0x4883c001	                              add rax, 1	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x400023c	    0x488d14c50000	                        lea rdx, [rax*8]	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x4000244	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x4000248	          0x4801d0	                            add rax, rdx	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x400024b	          0x488b00	                    mov rax, qword [rax]	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x400024e	        0x48894580	             mov qword [rbp - 0x80], rax	       102	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	ELSE_3
0x4000252	        0x488b4580	             mov rax, qword [rbp - 0x80]	       103	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000256	        0x488945e8	             mov qword [rbp - 0x18], rax	       103	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400025a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400025e	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000265	        0x48894588	             mov qword [rbp - 0x78], rax	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000269	            0xeb0a	                           jmp 0x4000275	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400026b	      0x4883458001	               add qword [rbp - 0x80], 1	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000270	      0x4883458801	               add qword [rbp - 0x78], 1	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000275	        0x488b4580	             mov rax, qword [rbp - 0x80]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000279	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000280	            0x7d44	                           jge 0x40002c6	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000282	        0x488b4588	             mov rax, qword [rbp - 0x78]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000286	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400028d	            0x7d37	                           jge 0x40002c6	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400028f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000293	    0x488d14c50000	                        lea rdx, [rax*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400029b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002a2	          0x4801d0	                            add rax, rdx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002a5	          0x488b10	                    mov rdx, qword [rax]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002a8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002ac	    0x488d0cc50000	                        lea rcx, [rax*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002b4	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002bb	          0x4801c8	                            add rax, rcx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002be	          0x488b00	                    mov rax, qword [rax]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002c1	          0x4839c2	                            cmp rdx, rax	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002c4	            0x74a5	                            je 0x400026b	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40002c6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002ca	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002ce	          0x4889c2	                            mov rdx, rax	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002d1	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002d5	        0x488b4008	                mov rax, qword [rax + 8]	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002d9	          0x4839c2	                            cmp rdx, rax	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002dc	            0x7e0a	                           jle 0x40002e8	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002de	    0xc7854cffffff	               mov dword [rbp - 0xb4], 1	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40002e8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40002ef	    0x488d14c50000	                        lea rdx, [rax*8]	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40002f7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40002fb	          0x4801c2	                            add rdx, rax	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40002fe	        0x488b4580	             mov rax, qword [rbp - 0x80]	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000302	          0x488902	                    mov qword [rdx], rax	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000305	      0x48837de000	               cmp qword [rbp - 0x20], 0	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400030a	            0x747b	                            je 0x4000387	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400030c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000313	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400031a	            0x7f6b	                            jg 0x4000387	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400031c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000323	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400032a	            0x7f5b	                            jg 0x4000387	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400032c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000333	    0x488d14c50000	                        lea rdx, [rax*8]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400033b	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400033f	          0x4801d0	                            add rax, rdx	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000342	          0x488b00	                    mov rax, qword [rax]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000345	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000349	            0x7f3c	                            jg 0x4000387	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400034b	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       110	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400034f	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       110	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000353	          0x488910	                    mov qword [rax], rdx	       110	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000356	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       111	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400035a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       111	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400035e	        0x48895008	                mov qword [rax + 8], rdx	       111	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000362	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000366	    0xc74014010000	               mov dword [rax + 0x14], 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400036d	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000371	          0x8b5014	            mov edx, dword [rax + 0x14] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000374	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000378	          0x895010	             mov dword [rax + 0x10], edx	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400037b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       113	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000382	      0xe9ce080000	                           jmp 0x4000c55	       113	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000387	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400038f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000396	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400039d	     0xf8d30feffff	                           jge 0x40001d3	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40003a3	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003aa	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003ae	            0x7e2d	                           jle 0x40003dd	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003b0	    0x4883ad60ffff	               sub qword [rbp - 0xa0], 1	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003b8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003bf	        0x48c1e003	                              shl rax, 3	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003c3	        0x488d50f8	                      lea rdx, [rax - 8]	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003c7	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003cb	          0x4801d0	                            add rax, rdx	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003ce	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003d8	          0x488930	                    mov qword [rax], rsi	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003db	            0xeb08	                           jmp 0x40003e5	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40003dd	    0x48838560ffff	               add qword [rbp - 0xa0], 1	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x40003e5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40003ec	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40003f0	            0x7d31	                           jge 0x4000423	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40003f2	    0x48838568ffff	               add qword [rbp - 0x98], 1	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40003fa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000401	        0x4883c001	                              add rax, 1	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000405	    0x488d14c50000	                        lea rdx, [rax*8]	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400040d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000411	          0x4801d0	                            add rax, rdx	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000414	    0x48bfffffffff	         movabs rdi, 0x7fffffffffffffff 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400041e	          0x488938	                    mov qword [rax], rdi	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000421	            0xeb08	                           jmp 0x400042b	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000423	    0x4883ad68ffff	               sub qword [rbp - 0x98], 1	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x400042b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000432	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000439	      0xe9bc010000	                           jmp 0x40005fa	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400043e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000445	        0x48c1e003	                              shl rax, 3	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000449	        0x488d50f8	                      lea rdx, [rax - 8]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400044d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000451	          0x4801d0	                            add rax, rdx	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000454	          0x488b10	                    mov rdx, qword [rax]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000457	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400045e	        0x4883c001	                              add rax, 1	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000462	    0x488d0cc50000	                        lea rcx, [rax*8]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400046a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400046e	          0x4801c8	                            add rax, rcx	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000471	          0x488b00	                    mov rax, qword [rax]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000474	          0x4839c2	                            cmp rdx, rax	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000477	            0x7d1f	                           jge 0x4000498	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000479	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000480	        0x48c1e003	                              shl rax, 3	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000484	        0x488d50f8	                      lea rdx, [rax - 8]	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000488	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400048c	          0x4801d0	                            add rax, rdx	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400048f	          0x488b00	                    mov rax, qword [rax]	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000492	        0x48894580	             mov qword [rbp - 0x80], rax	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000496	            0xeb25	                           jmp 0x40004bd	       135	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000498	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x400049f	        0x4883c001	                              add rax, 1	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004a3	    0x488d14c50000	                        lea rdx, [rax*8]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004ab	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004af	          0x4801d0	                            add rax, rdx	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004b2	          0x488b00	                    mov rax, qword [rax]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004b5	        0x4883e801	                              sub rax, 1	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004b9	        0x48894580	             mov qword [rbp - 0x80], rax	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40004bd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       138	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40004c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       138	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40004c5	        0x488b4580	             mov rax, qword [rbp - 0x80]	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40004c9	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40004d0	        0x48894588	             mov qword [rbp - 0x78], rax	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40004d4	            0xeb0a	                           jmp 0x40004e0	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004d6	      0x48836d8001	               sub qword [rbp - 0x80], 1	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004db	      0x48836d8801	               sub qword [rbp - 0x78], 1	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004e0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004e4	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004eb	            0x7e44	                           jle 0x4000531	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004ed	        0x488b4588	             mov rax, qword [rbp - 0x78]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004f1	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004f8	            0x7e37	                           jle 0x4000531	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004fa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40004fe	        0x48c1e003	                              shl rax, 3	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000502	        0x488d50f8	                      lea rdx, [rax - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000506	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400050d	          0x4801d0	                            add rax, rdx	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000510	          0x488b10	                    mov rdx, qword [rax]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000513	        0x488b4588	             mov rax, qword [rbp - 0x78]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000517	        0x48c1e003	                              shl rax, 3	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400051b	        0x488d48f8	                      lea rcx, [rax - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400051f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000526	          0x4801c8	                            add rax, rcx	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000529	          0x488b00	                    mov rax, qword [rax]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400052c	          0x4839c2	                            cmp rdx, rax	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400052f	            0x74a5	                            je 0x40004d6	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000531	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000535	        0x482b4580	             sub rax, qword [rbp - 0x80]	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000539	          0x4889c2	                            mov rdx, rax	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x400053c	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000540	        0x488b4008	                mov rax, qword [rax + 8]	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000544	          0x4839c2	                            cmp rdx, rax	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000547	            0x7e0a	                           jle 0x4000553	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000549	    0xc7854cffffff	               mov dword [rbp - 0xb4], 1	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000553	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400055a	    0x488d14c50000	                        lea rdx, [rax*8]	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000562	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000566	          0x4801c2	                            add rdx, rax	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000569	        0x488b4580	             mov rax, qword [rbp - 0x80]	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400056d	          0x488902	                    mov qword [rdx], rax	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000570	      0x48837de000	               cmp qword [rbp - 0x20], 0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000575	            0x757b	                           jne 0x40005f2	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000577	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400057e	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000585	            0x7f6b	                            jg 0x40005f2	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000587	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400058e	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000595	            0x7f5b	                            jg 0x40005f2	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000597	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400059e	    0x488d14c50000	                        lea rdx, [rax*8]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005a6	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005aa	          0x4801d0	                            add rax, rdx	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005ad	          0x488b00	                    mov rax, qword [rax]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005b0	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005b4	            0x7c3c	                            jl 0x40005f2	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005b6	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       145	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005ba	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       145	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005be	          0x488910	                    mov qword [rax], rdx	       145	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005c1	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       146	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005c5	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       146	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005c9	        0x48895008	                mov qword [rax + 8], rdx	       146	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005cd	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005d1	    0xc74014010000	               mov dword [rax + 0x14], 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005d8	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005dc	          0x8b5014	            mov edx, dword [rax + 0x14] 	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005df	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005e3	          0x895010	             mov dword [rax + 0x10], edx	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005e6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       148	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005ed	      0xe963060000	                           jmp 0x4000c55	       148	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40005f2	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40005fa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000601	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000608	     0xf8d30feffff	                           jge 0x400043e	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400060e	        0x837d2000	               cmp dword [rbp + 0x20], 0	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000612	     0xf852f060000	                           jne 0x4000c47	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000618	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400061f	     0xf84c7030000	                            je 0x40009ec	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000625	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000629	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400062d	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000634	     0xf8db2030000	                           jge 0x40009ec	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400063a	    0x48c745900000	               mov qword [rbp - 0x70], 0	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000642	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000649	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000650	      0xe977010000	                           jmp 0x40007cc	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000655	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400065c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000660	            0x7e0d	                           jle 0x400066f	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000662	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000669	        0x482b45d0	             sub rax, qword [rbp - 0x30]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400066d	            0xeb0b	                           jmp 0x400067a	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400066f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000673	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400067a	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400067e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000685	    0x488d14c50000	                        lea rdx, [rax*8]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400068d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000691	          0x4801d0	                            add rax, rdx	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000694	          0x488b00	                    mov rax, qword [rax]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000697	        0x48894580	             mov qword [rbp - 0x80], rax	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400069b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400069f	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006a6	        0x48894588	             mov qword [rbp - 0x78], rax	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006aa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006ae	    0x482b8530ffff	             sub rax, qword [rbp - 0xd0]	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006b5	          0x4889c2	                            mov rdx, rax	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006b8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006bc	    0x482b8518ffff	             sub rax, qword [rbp - 0xe8]	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006c3	          0x4801d0	                            add rax, rdx	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006c6	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006ca	        0x488945f8	                mov qword [rbp - 8], rax	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40006ce	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006d5	        0x48c1e002	                              shl rax, 2	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006d9	        0x483b45f8	                cmp rax, qword [rbp - 8]	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006dd	     0xf8de1000000	                           jge 0x40007c4	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006e7	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006eb	     0xf8ed3000000	                           jle 0x40007c4	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006f1	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006f5	        0x488b5008	                mov rdx, qword [rax + 8]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40006f9	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000700	          0x4801d0	                            add rax, rdx	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000703	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000707	     0xf8fb7000000	                            jg 0x40007c4	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400070d	        0x488b4580	             mov rax, qword [rbp - 0x80]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000711	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000718	     0xf8da6000000	                           jge 0x40007c4	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400071e	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000722	        0x488b5008	                mov rdx, qword [rax + 8]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000726	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400072d	          0x4801d0	                            add rax, rdx	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000730	        0x483b4588	             cmp rax, qword [rbp - 0x78]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000734	     0xf8f8a000000	                            jg 0x40007c4	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400073a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400073e	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000745	            0x7d7d	                           jge 0x40007c4	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000747	    0x48c745980100	               mov qword [rbp - 0x68], 1	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400074f	            0xeb34	                           jmp 0x4000785	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000751	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000755	        0x488b4008	                mov rax, qword [rax + 8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000759	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400075d	            0x7521	                           jne 0x4000780	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400075f	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000763	        0x48894590	             mov qword [rbp - 0x70], rax	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000767	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       178	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400076b	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       178	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400076f	          0x488910	                    mov qword [rax], rdx	       178	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000772	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       179	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000776	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       179	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400077a	        0x48895008	                mov qword [rax + 8], rdx	       179	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400077e	            0xeb44	                           jmp 0x40007c4	       180	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000780	      0x4883459801	               add qword [rbp - 0x68], 1	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000785	        0x488b4580	             mov rax, qword [rbp - 0x80]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000789	        0x482b4598	             sub rax, qword [rbp - 0x68]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400078d	    0x488d14c50000	                        lea rdx, [rax*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000795	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400079c	          0x4801d0	                            add rax, rdx	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400079f	          0x488b10	                    mov rdx, qword [rax]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007a2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007a6	        0x482b4598	             sub rax, qword [rbp - 0x68]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007aa	    0x488d0cc50000	                        lea rcx, [rax*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007b2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007b9	          0x4801c8	                            add rax, rcx	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007bc	          0x488b00	                    mov rax, qword [rax]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007bf	          0x4839c2	                            cmp rdx, rax	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007c2	            0x748d	                            je 0x4000751	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40007c4	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40007cc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40007d3	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40007da	     0xf8d75feffff	                           jge 0x4000655	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40007e0	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007e5	            0x7e22	                           jle 0x4000809	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007e7	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007eb	    0xc74010010000	               mov dword [rax + 0x10], 1	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007f2	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       186	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007f6	    0xc74014000000	               mov dword [rax + 0x14], 0	       186	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x40007fd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       187	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000804	      0xe94c040000	                           jmp 0x4000c55	       187	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000809	    0x48c745900000	               mov qword [rbp - 0x70], 0	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000811	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000818	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400081f	      0xe98b010000	                           jmp 0x40009af	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000824	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400082b	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400082f	            0x7e0d	                           jle 0x400083e	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000831	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000838	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400083c	            0xeb0b	                           jmp 0x4000849	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400083e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000842	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000849	        0x488945f0	             mov qword [rbp - 0x10], rax	       191	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400084d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000854	    0x488d14c50000	                        lea rdx, [rax*8]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400085c	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000860	          0x4801d0	                            add rax, rdx	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000863	          0x488b00	                    mov rax, qword [rax]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000866	        0x48894580	             mov qword [rbp - 0x80], rax	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400086a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400086e	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000875	        0x48894588	             mov qword [rbp - 0x78], rax	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000879	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000880	        0x482b4580	             sub rax, qword [rbp - 0x80]	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000884	          0x4889c2	                            mov rdx, rax	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000887	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400088e	        0x482b4588	             sub rax, qword [rbp - 0x78]	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000892	          0x4801d0	                            add rax, rdx	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000895	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000899	        0x488945f8	                mov qword [rbp - 8], rax	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x400089d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008a4	        0x48c1e002	                              shl rax, 2	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008a8	        0x483b45f8	                cmp rax, qword [rbp - 8]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008ac	     0xf8df5000000	                           jge 0x40009a7	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008b6	        0x483b4590	             cmp rax, qword [rbp - 0x70]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008ba	     0xf8ee7000000	                           jle 0x40009a7	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008c0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008c7	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008cb	     0xf8dd6000000	                           jge 0x40009a7	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008d1	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008d5	        0x488b4008	                mov rax, qword [rax + 8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008d9	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008e0	          0x4829c2	                            sub rdx, rax	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008e3	          0x4889d0	                            mov rax, rdx	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008e6	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008ea	     0xf8cb7000000	                            jl 0x40009a7	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008f0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008f7	        0x483b4588	             cmp rax, qword [rbp - 0x78]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x40008fb	     0xf8da6000000	                           jge 0x40009a7	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000901	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000905	        0x488b4008	                mov rax, qword [rax + 8]	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000909	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000910	          0x4829c2	                            sub rdx, rax	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000913	          0x4889d0	                            mov rax, rdx	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000916	        0x483b4588	             cmp rax, qword [rbp - 0x78]	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x400091a	     0xf8c87000000	                            jl 0x40009a7	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000920	    0x48c745980000	               mov qword [rbp - 0x68], 0	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000928	            0xeb38	                           jmp 0x4000962	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400092a	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400092e	        0x488b4008	                mov rax, qword [rax + 8]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000932	        0x4883e801	                              sub rax, 1	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000936	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400093a	            0x7521	                           jne 0x400095d	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400093c	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000940	        0x48894590	             mov qword [rbp - 0x70], rax	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000944	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       202	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000948	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       202	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400094c	          0x488910	                    mov qword [rax], rdx	       202	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400094f	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       203	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000953	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       203	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000957	        0x48895008	                mov qword [rax + 8], rdx	       203	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400095b	            0xeb4a	                           jmp 0x40009a7	       204	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x400095d	      0x4883459801	               add qword [rbp - 0x68], 1	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000962	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000966	        0x488b4598	             mov rax, qword [rbp - 0x68]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400096a	          0x4801d0	                            add rax, rdx	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400096d	    0x488d14c50000	                        lea rdx, [rax*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000975	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400097c	          0x4801d0	                            add rax, rdx	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400097f	          0x488b10	                    mov rdx, qword [rax]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000982	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000986	        0x488b4598	             mov rax, qword [rbp - 0x68]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400098a	          0x4801c8	                            add rax, rcx	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400098d	    0x488d0cc50000	                        lea rcx, [rax*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000995	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400099c	          0x4801c8	                            add rax, rcx	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x400099f	          0x488b00	                    mov rax, qword [rax]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x40009a2	          0x4839c2	                            cmp rdx, rax	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x40009a5	            0x7483	                            je 0x400092a	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x40009a7	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x40009af	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x40009b6	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x40009bd	     0xf8d61feffff	                           jge 0x4000824	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x40009c3	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009c8	            0x7e22	                           jle 0x40009ec	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009ca	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009ce	    0xc74010000000	               mov dword [rax + 0x10], 0	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009d5	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       210	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009d9	    0xc74014010000	               mov dword [rax + 0x14], 1	       210	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009e0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       211	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009e7	      0xe969020000	                           jmp 0x4000c55	       211	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x40009ec	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x40009f0	          0x488b00	                    mov rax, qword [rax]	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x40009f3	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x40009fa	     0xf8f48020000	                            jg 0x4000c48	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000a00	    0x48c745a8ffff	mov qword [rbp - 0x58], 0xffffffffffffffff	       222	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000a08	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       222	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000a0c	        0x488945a0	             mov qword [rbp - 0x60], rax	       222	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000a10	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a17	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a1e	      0xe997000000	                           jmp 0x4000aba	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a23	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a2a	    0x488d14c50000	                        lea rdx, [rax*8]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a32	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a36	          0x4801d0	                            add rax, rdx	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a39	          0x488b10	                    mov rdx, qword [rax]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a3c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a43	          0x4839c2	                            cmp rdx, rax	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a46	        0x480f4ec2	                         cmovle rax, rdx	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a4a	        0x48894580	             mov qword [rbp - 0x80], rax	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000a4e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a52	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a59	        0x48894588	             mov qword [rbp - 0x78], rax	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000a5d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a64	        0x483b4588	             cmp rax, qword [rbp - 0x78]	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a68	            0x7d20	                           jge 0x4000a8a	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a6a	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a71	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a78	          0x4801d0	                            add rax, rdx	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a7b	        0x48894580	             mov qword [rbp - 0x80], rax	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a7f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a86	        0x48894588	             mov qword [rbp - 0x78], rax	       227	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000a8a	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a8e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a92	          0x4801d0	                            add rax, rdx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a95	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a99	            0x7e17	                           jle 0x4000ab2	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a9b	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       229	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000a9f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       229	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000aa3	          0x4801d0	                            add rax, rdx	       229	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000aa6	        0x488945a0	             mov qword [rbp - 0x60], rax	       229	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000aaa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       230	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000aae	        0x488945a8	             mov qword [rbp - 0x58], rax	       230	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000ab2	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000aba	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ac1	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ac8	     0xf8d55ffffff	                           jge 0x4000a23	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ace	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       234	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000ad8	        0x488945b8	             mov qword [rbp - 0x48], rax	       234	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000adc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       234	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000ae0	        0x488945b0	             mov qword [rbp - 0x50], rax	       234	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000ae4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000aeb	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000af2	      0xe997000000	                           jmp 0x4000b8e	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000af7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000afe	    0x488d14c50000	                        lea rdx, [rax*8]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b06	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b0a	          0x4801d0	                            add rax, rdx	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b0d	          0x488b10	                    mov rdx, qword [rax]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b10	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b17	          0x4839c2	                            cmp rdx, rax	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b1a	        0x480f4dc2	                         cmovge rax, rdx	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b1e	        0x48894580	             mov qword [rbp - 0x80], rax	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000b22	        0x488b4580	             mov rax, qword [rbp - 0x80]	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b26	    0x482b8578ffff	             sub rax, qword [rbp - 0x88]	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b2d	        0x48894588	             mov qword [rbp - 0x78], rax	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b31	        0x488b4588	             mov rax, qword [rbp - 0x78]	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b35	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b3c	            0x7d20	                           jge 0x4000b5e	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b3e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b45	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b4c	          0x4801d0	                            add rax, rdx	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b4f	        0x48894580	             mov qword [rbp - 0x80], rax	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b53	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b5a	        0x48894588	             mov qword [rbp - 0x78], rax	       239	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000b5e	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b62	        0x488b4588	             mov rax, qword [rbp - 0x78]	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b66	          0x4801d0	                            add rax, rdx	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b69	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b6d	            0x7d17	                           jge 0x4000b86	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b6f	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       241	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b73	        0x488b4588	             mov rax, qword [rbp - 0x78]	       241	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b77	          0x4801d0	                            add rax, rdx	       241	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b7a	        0x488945b0	             mov qword [rbp - 0x50], rax	       241	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b7e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       242	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b82	        0x488945b8	             mov qword [rbp - 0x48], rax	       242	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000b86	    0x4883ad78ffff	               sub qword [rbp - 0x88], 2	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b8e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b95	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000b9c	     0xf8d55ffffff	                           jge 0x4000af7	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000ba2	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ba9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bb0	          0x4801d0	                            add rax, rdx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bb3	        0x482b45b0	             sub rax, qword [rbp - 0x50]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bb7	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bbe	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bc5	          0x4801d1	                            add rcx, rdx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bc8	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bcc	          0x4829ca	                            sub rdx, rcx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bcf	          0x4839d0	                            cmp rax, rdx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bd2	            0x7d36	                           jge 0x4000c0a	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bd4	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       247	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bd8	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       247	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bdc	          0x488910	                    mov qword [rax], rdx	       247	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bdf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000be3	        0x482b45a8	             sub rax, qword [rbp - 0x58]	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000be7	          0x4889c2	                            mov rdx, rax	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bea	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bee	        0x48895008	                mov qword [rax + 8], rdx	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bf2	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bf6	    0xc74010010000	               mov dword [rax + 0x10], 1	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000bfd	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c01	    0xc74014000000	               mov dword [rax + 0x14], 0	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c08	            0xeb34	                           jmp 0x4000c3e	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c0a	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c0e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c12	          0x488910	                    mov qword [rax], rdx	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c15	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c19	        0x482b45b8	             sub rax, qword [rbp - 0x48]	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c1d	          0x4889c2	                            mov rdx, rax	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c20	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c24	        0x48895008	                mov qword [rax + 8], rdx	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c28	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c2c	    0xc74010000000	               mov dword [rax + 0x10], 0	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c33	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       255	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c37	    0xc74014010000	               mov dword [rax + 0x14], 1	       255	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c3e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       257	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000c45	            0xeb0e	                           jmp 0x4000c55	       257	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000c47	              0x90	                                     nop	       153	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000c48	    0x48838570ffff	               add qword [rbp - 0x90], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000c50	      0xe9e5f4ffff	                           jmp 0x400013a	       259	xdiffi.c	FUNCTION_1	FOR_1
0x4000c55	              0xc9	                                   leave	       260	xdiffi.c	FUNCTION_1
0x4000c56	              0xc3	                                     ret	       260	xdiffi.c	FUNCTION_1
group_slide_down	ELSE,1:DO,0:functions,0:WHILE,1:IF,1:FOR,0:CALL,1:SWITCH,0	69
0x40018ae	              0x55	                                push rbp	       768	xdiffi.c	FUNCTION_13
0x40018af	          0x4889e5	                            mov rbp, rsp	       768	xdiffi.c	FUNCTION_13
0x40018b2	        0x4883ec20	                           sub rsp, 0x20	       768	xdiffi.c	FUNCTION_13
0x40018b6	        0x48897df8	                mov qword [rbp - 8], rdi	       768	xdiffi.c	FUNCTION_13
0x40018ba	        0x488975f0	             mov qword [rbp - 0x10], rsi	       768	xdiffi.c	FUNCTION_13
0x40018be	        0x488955e8	             mov qword [rbp - 0x18], rdx	       768	xdiffi.c	FUNCTION_13
0x40018c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018c6	        0x488b5008	                mov rdx, qword [rax + 8]	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018ce	        0x488b4038	            mov rax, qword [rax + 0x38] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018d2	          0x4839c2	                            cmp rdx, rax	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018d5	     0xf8dbf000000	                           jge 0x400199a	       769	xdiffi.c	FUNCTION_13	IF_1
0x40018db	        0x488b45f8	                mov rax, qword [rbp - 8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018df	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018e7	        0x488b4008	                mov rax, qword [rax + 8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018eb	        0x48c1e003	                              shl rax, 3	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018ef	          0x4801d0	                            add rax, rdx	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018f2	          0x488b08	                    mov rcx, qword [rax]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018f9	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40018fd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001901	          0x488b00	                    mov rax, qword [rax]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001904	        0x48c1e003	                              shl rax, 3	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001908	          0x4801d0	                            add rax, rdx	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x400190b	          0x488b00	                    mov rax, qword [rax]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x400190e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001912	          0x4889ce	                            mov rsi, rcx	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001915	          0x4889c7	                            mov rdi, rax	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001918	      0xe883f9ffff	                     call sym.recs_match	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x400191d	            0x85c0	                           test eax, eax	       769	xdiffi.c	FUNCTION_13	IF_1
0x400191f	            0x7479	                            je 0x400199a	       769	xdiffi.c	FUNCTION_13	IF_1
0x4001921	        0x488b45f8	                mov rax, qword [rbp - 8]	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001925	        0x488b7068	            mov rsi, qword [rax + 0x68] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001929	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       771	xdiffi.c	FUNCTION_13	IF_1
0x400192d	          0x488b00	                    mov rax, qword [rax]	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001930	        0x488d4801	                      lea rcx, [rax + 1]	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001934	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001938	          0x48890a	                    mov qword [rdx], rcx	       771	xdiffi.c	FUNCTION_13	IF_1
0x400193b	          0x4801f0	                            add rax, rsi	       771	xdiffi.c	FUNCTION_13	IF_1
0x400193e	          0xc60000	                       mov byte [rax], 0	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001941	        0x488b45f8	                mov rax, qword [rbp - 8]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001945	        0x488b7068	            mov rsi, qword [rax + 0x68] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001949	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       772	xdiffi.c	FUNCTION_13	IF_1
0x400194d	        0x488b4008	                mov rax, qword [rax + 8]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001951	        0x488d4801	                      lea rcx, [rax + 1]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001955	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001959	        0x48894a08	                mov qword [rdx + 8], rcx	       772	xdiffi.c	FUNCTION_13	IF_1
0x400195d	          0x4801f0	                            add rax, rsi	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001960	          0xc60001	                       mov byte [rax], 1	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001963	            0xeb14	                           jmp 0x4001979	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001965	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001969	        0x488b4008	                mov rax, qword [rax + 8]	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400196d	        0x488d5001	                      lea rdx, [rax + 1]	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001971	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001975	        0x48895008	                mov qword [rax + 8], rdx	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001979	        0x488b45f8	                mov rax, qword [rbp - 8]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400197d	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001981	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001985	        0x488b4008	                mov rax, qword [rax + 8]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001989	          0x4801d0	                            add rax, rdx	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400198c	           0xfb600	                   movzx eax, byte [rax]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400198f	            0x84c0	                             test al, al	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001991	            0x75d2	                           jne 0x4001965	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001993	      0xb800000000	                              mov eax, 0	       777	xdiffi.c	FUNCTION_13	IF_1
0x4001998	            0xeb05	                           jmp 0x400199f	       777	xdiffi.c	FUNCTION_13	IF_1
0x400199a	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	xdiffi.c	FUNCTION_13	ELSE_1
0x400199f	              0xc9	                                   leave	       781	xdiffi.c	FUNCTION_13
0x40019a0	              0xc3	                                     ret	       781	xdiffi.c	FUNCTION_13
group_init	ELSE,0:DO,0:functions,0:WHILE,1:IF,0:FOR,0:CALL,0:SWITCH,0	27
0x400175a	              0x55	                                push rbp	       724	xdiffi.c	FUNCTION_10
0x400175b	          0x4889e5	                            mov rbp, rsp	       724	xdiffi.c	FUNCTION_10
0x400175e	        0x48897df8	                mov qword [rbp - 8], rdi	       724	xdiffi.c	FUNCTION_10
0x4001762	        0x488975f0	             mov qword [rbp - 0x10], rsi	       724	xdiffi.c	FUNCTION_10
0x4001766	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       725	xdiffi.c	FUNCTION_10
0x400176a	    0x48c740080000	                  mov qword [rax + 8], 0	       725	xdiffi.c	FUNCTION_10
0x4001772	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       725	xdiffi.c	FUNCTION_10
0x4001776	        0x488b5008	                mov rdx, qword [rax + 8]	       725	xdiffi.c	FUNCTION_10
0x400177a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       725	xdiffi.c	FUNCTION_10
0x400177e	          0x488910	                    mov qword [rax], rdx	       725	xdiffi.c	FUNCTION_10
0x4001781	            0xeb14	                           jmp 0x4001797	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001783	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001787	        0x488b4008	                mov rax, qword [rax + 8]	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x400178b	        0x488d5001	                      lea rdx, [rax + 1]	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x400178f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001793	        0x48895008	                mov qword [rax + 8], rdx	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001797	        0x488b45f8	                mov rax, qword [rbp - 8]	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400179b	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400179f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017a3	        0x488b4008	                mov rax, qword [rax + 8]	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017a7	          0x4801d0	                            add rax, rdx	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017aa	           0xfb600	                   movzx eax, byte [rax]	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017ad	            0x84c0	                             test al, al	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017af	            0x75d2	                           jne 0x4001783	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40017b1	              0x90	                                     nop	       728	xdiffi.c	FUNCTION_10
0x40017b2	              0x5d	                                 pop rbp	       728	xdiffi.c	FUNCTION_10
0x40017b3	              0xc3	                                     ret	       728	xdiffi.c	FUNCTION_10
group_previous	ELSE,0:DO,0:functions,0:WHILE,0:IF,1:FOR,1:CALL,0:SWITCH,0	37
0x4001835	              0x55	                                push rbp	       751	xdiffi.c	FUNCTION_12
0x4001836	          0x4889e5	                            mov rbp, rsp	       751	xdiffi.c	FUNCTION_12
0x4001839	        0x48897df8	                mov qword [rbp - 8], rdi	       751	xdiffi.c	FUNCTION_12
0x400183d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       751	xdiffi.c	FUNCTION_12
0x4001841	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001845	          0x488b00	                    mov rax, qword [rax]	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001848	          0x4885c0	                           test rax, rax	       752	xdiffi.c	FUNCTION_12	IF_1
0x400184b	            0x7507	                           jne 0x4001854	       752	xdiffi.c	FUNCTION_12	IF_1
0x400184d	      0xb8ffffffff	                     mov eax, 0xffffffff	       753	xdiffi.c	FUNCTION_12	IF_1
0x4001852	            0xeb58	                           jmp 0x40018ac	       753	xdiffi.c	FUNCTION_12	IF_1
0x4001854	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       755	xdiffi.c	FUNCTION_12
0x4001858	          0x488b00	                    mov rax, qword [rax]	       755	xdiffi.c	FUNCTION_12
0x400185b	        0x488d50ff	                      lea rdx, [rax - 1]	       755	xdiffi.c	FUNCTION_12
0x400185f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       755	xdiffi.c	FUNCTION_12
0x4001863	        0x48895008	                mov qword [rax + 8], rdx	       755	xdiffi.c	FUNCTION_12
0x4001867	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400186b	        0x488b5008	                mov rdx, qword [rax + 8]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400186f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001873	          0x488910	                    mov qword [rax], rdx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001876	            0xeb12	                           jmp 0x400188a	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001878	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400187c	          0x488b00	                    mov rax, qword [rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400187f	        0x488d50ff	                      lea rdx, [rax - 1]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001883	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001887	          0x488910	                    mov qword [rax], rdx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400188a	        0x488b45f8	                mov rax, qword [rbp - 8]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400188e	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001892	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001896	          0x488b00	                    mov rax, qword [rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001899	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400189d	          0x4801d0	                            add rax, rdx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40018a0	           0xfb600	                   movzx eax, byte [rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40018a3	            0x84c0	                             test al, al	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40018a5	            0x75d1	                           jne 0x4001878	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40018a7	      0xb800000000	                              mov eax, 0	       759	xdiffi.c	FUNCTION_12
0x40018ac	              0x5d	                                 pop rbp	       760	xdiffi.c	FUNCTION_12
0x40018ad	              0xc3	                                     ret	       760	xdiffi.c	FUNCTION_12
xdl_bug	ELSE,0:DO,0:functions,0:WHILE,0:IF,0:FOR,0:CALL,2:SWITCH,0	12
0x4001aa7	              0x55	                                push rbp	       805	xdiffi.c	FUNCTION_15
0x4001aa8	          0x4889e5	                            mov rbp, rsp	       805	xdiffi.c	FUNCTION_15
0x4001aab	        0x4883ec10	                           sub rsp, 0x10	       805	xdiffi.c	FUNCTION_15
0x4001aaf	        0x48897df8	                mov qword [rbp - 8], rdi	       805	xdiffi.c	FUNCTION_15
0x4001ab3	    0x488b05000000	            mov rax, qword [0x04001aba] 	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001aba	        0x488b55f8	                mov rdx, qword [rbp - 8]	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001abe	      0xbe00000000	                              mov esi, 0	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001ac3	          0x4889c7	                            mov rdi, rax	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001ac6	      0xb800000000	                              mov eax, 0	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001acb	      0xe800000000	                          call 0x4001ad0	       806	xdiffi.c	FUNCTION_15	CALL_1
0x4001ad0	      0xbf01000000	                              mov edi, 1	       807	xdiffi.c	FUNCTION_15	CALL_2
0x4001ad5	      0xe800000000	             call sym.xdl_change_compact	       807	xdiffi.c	FUNCTION_15	CALL_2
xdl_recs_cmp	ELSE,2:DO,0:functions,0:WHILE,0:IF,4:FOR,4:CALL,3:SWITCH,0	180
0x4000c57	              0x55	                                push rbp	       270	xdiffi.c	FUNCTION_2
0x4000c58	          0x4889e5	                            mov rbp, rsp	       270	xdiffi.c	FUNCTION_2
0x4000c5b	    0x4881eca00000	                           sub rsp, 0xa0	       270	xdiffi.c	FUNCTION_2
0x4000c62	        0x48897da8	             mov qword [rbp - 0x58], rdi	       270	xdiffi.c	FUNCTION_2
0x4000c66	        0x488975a0	             mov qword [rbp - 0x60], rsi	       270	xdiffi.c	FUNCTION_2
0x4000c6a	        0x48895598	             mov qword [rbp - 0x68], rdx	       270	xdiffi.c	FUNCTION_2
0x4000c6e	        0x48894d90	             mov qword [rbp - 0x70], rcx	       270	xdiffi.c	FUNCTION_2
0x4000c72	        0x4c894588	              mov qword [rbp - 0x78], r8	       270	xdiffi.c	FUNCTION_2
0x4000c76	        0x4c894d80	              mov qword [rbp - 0x80], r9	       270	xdiffi.c	FUNCTION_2
0x4000c7a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       270	xdiffi.c	FUNCTION_2
0x4000c7e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       270	xdiffi.c	FUNCTION_2
0x4000c85	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       270	xdiffi.c	FUNCTION_2
0x4000c89	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       270	xdiffi.c	FUNCTION_2
0x4000c90	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       270	xdiffi.c	FUNCTION_2
0x4000c94	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       270	xdiffi.c	FUNCTION_2
0x4000c9b	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	xdiffi.c	FUNCTION_2
0x4000ca4	        0x488945f8	                mov qword [rbp - 8], rax	       270	xdiffi.c	FUNCTION_2
0x4000ca8	            0x31c0	                            xor eax, eax	       270	xdiffi.c	FUNCTION_2
0x4000caa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       271	xdiffi.c	FUNCTION_2
0x4000cae	        0x488b4008	                mov rax, qword [rax + 8]	       271	xdiffi.c	FUNCTION_2
0x4000cb2	        0x488945b0	             mov qword [rbp - 0x50], rax	       271	xdiffi.c	FUNCTION_2
0x4000cb6	        0x488b4590	             mov rax, qword [rbp - 0x70]	       271	xdiffi.c	FUNCTION_2
0x4000cba	        0x488b4008	                mov rax, qword [rax + 8]	       271	xdiffi.c	FUNCTION_2
0x4000cbe	        0x488945b8	             mov qword [rbp - 0x48], rax	       271	xdiffi.c	FUNCTION_2
0x4000cc2	            0xeb0a	                           jmp 0x4000cce	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cc4	      0x488345a001	               add qword [rbp - 0x60], 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cc9	      0x4883458801	               add qword [rbp - 0x78], 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cce	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cd2	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cd6	            0x7d47	                           jge 0x4000d1f	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cd8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cdc	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000ce0	            0x7d3d	                           jge 0x4000d1f	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000ce2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000ce6	    0x488d14c50000	                        lea rdx, [rax*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cee	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cf2	          0x4801d0	                            add rax, rdx	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cf5	          0x488b10	                    mov rdx, qword [rax]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cf8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000cfc	    0x488d0cc50000	                        lea rcx, [rax*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d08	          0x4801c8	                            add rax, rcx	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d0b	          0x488b00	                    mov rax, qword [rax]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d0e	          0x4839c2	                            cmp rdx, rax	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d11	            0x74b1	                            je 0x4000cc4	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000d13	            0xeb0a	                           jmp 0x4000d1f	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d15	      0x48836d9801	               sub qword [rbp - 0x68], 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d1a	      0x48836d8001	               sub qword [rbp - 0x80], 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d1f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d23	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d27	            0x7d3b	                           jge 0x4000d64	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d29	        0x488b4588	             mov rax, qword [rbp - 0x78]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d2d	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d31	            0x7d31	                           jge 0x4000d64	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d33	        0x488b4598	             mov rax, qword [rbp - 0x68]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d37	        0x48c1e003	                              shl rax, 3	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d3b	        0x488d50f8	                      lea rdx, [rax - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d3f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d43	          0x4801d0	                            add rax, rdx	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d46	          0x488b10	                    mov rdx, qword [rax]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d49	        0x488b4580	             mov rax, qword [rbp - 0x80]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d4d	        0x48c1e003	                              shl rax, 3	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d51	        0x488d48f8	                      lea rcx, [rax - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d55	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d59	          0x4801c8	                            add rax, rcx	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d5c	          0x488b00	                    mov rax, qword [rax]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d5f	          0x4839c2	                            cmp rdx, rax	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d62	            0x74b1	                            je 0x4000d15	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000d64	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000d68	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000d6c	            0x7551	                           jne 0x4000dbf	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000d6e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000d72	        0x488b4018	            mov rax, qword [rax + 0x18] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000d76	        0x488945d0	             mov qword [rbp - 0x30], rax	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000d7a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       285	xdiffi.c	FUNCTION_2	IF_1
0x4000d7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       285	xdiffi.c	FUNCTION_2	IF_1
0x4000d82	        0x488945d8	             mov qword [rbp - 0x28], rax	       285	xdiffi.c	FUNCTION_2	IF_1
0x4000d86	            0xeb28	                           jmp 0x4000db0	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d88	        0x488b4588	             mov rax, qword [rbp - 0x78]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d8c	    0x488d14c50000	                        lea rdx, [rax*8]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d98	          0x4801d0	                            add rax, rdx	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d9b	          0x488b00	                    mov rax, qword [rax]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000d9e	          0x4889c2	                            mov rdx, rax	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000da1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000da5	          0x4801d0	                            add rax, rdx	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000da8	          0xc60001	                       mov byte [rax], 1	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000dab	      0x4883458801	               add qword [rbp - 0x78], 1	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000db0	        0x488b4588	             mov rax, qword [rbp - 0x78]	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000db4	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000db8	            0x7cce	                            jl 0x4000d88	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000dba	      0xe93c010000	                           jmp 0x4000efb	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000dbf	        0x488b4588	             mov rax, qword [rbp - 0x78]	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dc3	        0x483b4580	             cmp rax, qword [rbp - 0x80]	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dc7	            0x7551	                           jne 0x4000e1a	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dc9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dcd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dd1	        0x488945c0	             mov qword [rbp - 0x40], rax	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dd5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000dd9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000ddd	        0x488945c8	             mov qword [rbp - 0x38], rax	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000de1	            0xeb28	                           jmp 0x4000e0b	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000de3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000de7	    0x488d14c50000	                        lea rdx, [rax*8]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000def	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000df3	          0x4801d0	                            add rax, rdx	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000df6	          0x488b00	                    mov rax, qword [rax]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000df9	          0x4889c2	                            mov rdx, rax	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000dfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e00	          0x4801d0	                            add rax, rdx	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e03	          0xc60001	                       mov byte [rax], 1	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e06	      0x488345a001	               add qword [rbp - 0x60], 1	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e0b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e0f	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e13	            0x7cce	                            jl 0x4000de3	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e15	      0xe9e1000000	                           jmp 0x4000efb	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000e1a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000e22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000e26	        0x488945e0	             mov qword [rbp - 0x20], rax	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000e2a	        0x4c8b4d80	              mov r9, qword [rbp - 0x80]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e2e	        0x4c8b4588	              mov r8, qword [rbp - 0x78]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e32	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e36	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e3a	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e3e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e42	    0xffb568ffffff	                 push qword [rbp - 0x98]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e48	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e4c	              0x57	                                push rdi	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e4d	          0x8b7d20	            mov edi, dword [rbp + 0x20] 	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e50	              0x57	                                push rdi	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e51	    0xffb570ffffff	                 push qword [rbp - 0x90]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e57	    0xffb578ffffff	                 push qword [rbp - 0x88]	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e5d	          0x4889c7	                            mov rdi, rax	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e60	      0xe8dbf1ffff	                      call sym.xdl_split	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e65	        0x4883c428	                           add rsp, 0x28	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e69	          0x4885c0	                           test rax, rax	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e6c	            0x790a	                           jns 0x4000e78	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000e6e	      0xb8ffffffff	                     mov eax, 0xffffffff	       305	xdiffi.c	FUNCTION_2	ELSE_2	IF_3
0x4000e73	      0xe988000000	                           jmp 0x4000f00	       305	xdiffi.c	FUNCTION_2	ELSE_2	IF_3
0x4000e78	          0x8b7df0	             mov edi, dword [rbp - 0x10]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e7b	        0x4c8b4de8	              mov r9, qword [rbp - 0x18]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e7f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e83	        0x4c8b4588	              mov r8, qword [rbp - 0x78]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e87	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e8b	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e8f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e93	    0xffb568ffffff	                 push qword [rbp - 0x98]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e99	              0x57	                                push rdi	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000e9a	    0xffb570ffffff	                 push qword [rbp - 0x90]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ea0	    0xffb578ffffff	                 push qword [rbp - 0x88]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ea6	          0x4889c7	                            mov rdi, rax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ea9	      0xe800000000	                          call 0x4000eae	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000eae	        0x4883c420	                           add rsp, 0x20	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000eb2	            0x85c0	                           test eax, eax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000eb4	            0x783e	                            js 0x4000ef4	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000eb6	          0x8b7df4	              mov edi, dword [rbp - 0xc]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000eb9	        0x4c8b45e8	              mov r8, qword [rbp - 0x18]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ebd	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ec1	        0x4c8b4d80	              mov r9, qword [rbp - 0x80]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ec5	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ec9	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ecd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ed1	    0xffb568ffffff	                 push qword [rbp - 0x98]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ed7	              0x57	                                push rdi	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ed8	    0xffb570ffffff	                 push qword [rbp - 0x90]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ede	    0xffb578ffffff	                 push qword [rbp - 0x88]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ee4	          0x4889c7	                            mov rdi, rax	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ee7	      0xe800000000	                          call 0x4000eec	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000eec	        0x4883c420	                           add rsp, 0x20	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000ef0	            0x85c0	                           test eax, eax	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000ef2	            0x7907	                           jns 0x4000efb	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000ef4	      0xb8ffffffff	                     mov eax, 0xffffffff	       316	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000ef9	            0xeb05	                           jmp 0x4000f00	       316	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000efb	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x4000f00	        0x488b75f8	                mov rsi, qword [rbp - 8]	       321	xdiffi.c	FUNCTION_2
0x4000f04	    0x644833342528	                xor rsi, qword fs:[0x28]	       321	xdiffi.c	FUNCTION_2
0x4000f0d	            0x7405	                            je 0x4000f14	       321	xdiffi.c	FUNCTION_2
0x4000f0f	      0xe800000000	                          call 0x4000f14	       321	xdiffi.c	FUNCTION_2
0x4000f14	              0xc9	                                   leave	       321	xdiffi.c	FUNCTION_2
0x4000f15	              0xc3	                                     ret	       321	xdiffi.c	FUNCTION_2
score_add_split	ELSE,6:DO,0:functions,0:WHILE,0:IF,8:FOR,0:CALL,0:SWITCH,0	136
0x4001553	              0x55	                                push rbp	       605	xdiffi.c	FUNCTION_8
0x4001554	          0x4889e5	                            mov rbp, rsp	       605	xdiffi.c	FUNCTION_8
0x4001557	        0x48897de8	             mov qword [rbp - 0x18], rdi	       605	xdiffi.c	FUNCTION_8
0x400155b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       605	xdiffi.c	FUNCTION_8
0x400155f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001563	          0x8b400c	              mov eax, dword [rax + 0xc]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001566	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001569	            0x751c	                           jne 0x4001587	       612	xdiffi.c	FUNCTION_8	IF_1
0x400156b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	xdiffi.c	FUNCTION_8	IF_1
0x400156f	          0x8b4008	                mov eax, dword [rax + 8]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001572	            0x85c0	                           test eax, eax	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001574	            0x7511	                           jne 0x4001587	       612	xdiffi.c	FUNCTION_8	IF_1
0x4001576	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       613	xdiffi.c	FUNCTION_8	IF_1
0x400157a	          0x8b4004	                mov eax, dword [rax + 4]	       613	xdiffi.c	FUNCTION_8	IF_1
0x400157d	          0x8d5001	                      lea edx, [rax + 1]	       613	xdiffi.c	FUNCTION_8	IF_1
0x4001580	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       613	xdiffi.c	FUNCTION_8	IF_1
0x4001584	          0x895004	                mov dword [rax + 4], edx	       613	xdiffi.c	FUNCTION_8	IF_1
0x4001587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       615	xdiffi.c	FUNCTION_8	IF_2
0x400158b	            0x8b00	                    mov eax, dword [rax]	       615	xdiffi.c	FUNCTION_8	IF_2
0x400158d	            0x85c0	                           test eax, eax	       615	xdiffi.c	FUNCTION_8	IF_2
0x400158f	            0x7411	                            je 0x40015a2	       615	xdiffi.c	FUNCTION_8	IF_2
0x4001591	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	xdiffi.c	FUNCTION_8	IF_2
0x4001595	          0x8b4004	                mov eax, dword [rax + 4]	       616	xdiffi.c	FUNCTION_8	IF_2
0x4001598	          0x8d5015	                   lea edx, [rax + 0x15]	       616	xdiffi.c	FUNCTION_8	IF_2
0x400159b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	xdiffi.c	FUNCTION_8	IF_2
0x400159f	          0x895004	                mov dword [rax + 4], edx	       616	xdiffi.c	FUNCTION_8	IF_2
0x40015a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	xdiffi.c	FUNCTION_8
0x40015a6	          0x8b4004	                mov eax, dword [rax + 4]	       622	xdiffi.c	FUNCTION_8
0x40015a9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       622	xdiffi.c	FUNCTION_8
0x40015ac	            0x750c	                           jne 0x40015ba	       622	xdiffi.c	FUNCTION_8
0x40015ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	xdiffi.c	FUNCTION_8
0x40015b2	          0x8b4010	            mov eax, dword [rax + 0x10] 	       622	xdiffi.c	FUNCTION_8
0x40015b5	          0x83c001	                              add eax, 1	       622	xdiffi.c	FUNCTION_8
0x40015b8	            0xeb05	                           jmp 0x40015bf	       622	xdiffi.c	FUNCTION_8
0x40015ba	      0xb800000000	                              mov eax, 0	       622	xdiffi.c	FUNCTION_8
0x40015bf	          0x8945f4	              mov dword [rbp - 0xc], eax	       622	xdiffi.c	FUNCTION_8
0x40015c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       623	xdiffi.c	FUNCTION_8
0x40015c6	          0x8b5008	                mov edx, dword [rax + 8]	       623	xdiffi.c	FUNCTION_8
0x40015c9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       623	xdiffi.c	FUNCTION_8
0x40015cc	             0x1d0	                            add eax, edx	       623	xdiffi.c	FUNCTION_8
0x40015ce	          0x8945f8	                mov dword [rbp - 8], eax	       623	xdiffi.c	FUNCTION_8
0x40015d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       626	xdiffi.c	FUNCTION_8
0x40015d5	          0x8b5004	                mov edx, dword [rax + 4]	       626	xdiffi.c	FUNCTION_8
0x40015d8	          0x8b45f8	                mov eax, dword [rbp - 8]	       626	xdiffi.c	FUNCTION_8
0x40015db	          0x6bc0e2	       imul eax, eax, 0xffffffffffffffe2	       626	xdiffi.c	FUNCTION_8
0x40015de	             0x1c2	                            add edx, eax	       626	xdiffi.c	FUNCTION_8
0x40015e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       626	xdiffi.c	FUNCTION_8
0x40015e4	          0x895004	                mov dword [rax + 4], edx	       626	xdiffi.c	FUNCTION_8
0x40015e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       627	xdiffi.c	FUNCTION_8
0x40015eb	          0x8b4804	                mov ecx, dword [rax + 4]	       627	xdiffi.c	FUNCTION_8
0x40015ee	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       627	xdiffi.c	FUNCTION_8
0x40015f1	            0x89d0	                            mov eax, edx	       627	xdiffi.c	FUNCTION_8
0x40015f3	             0x1c0	                            add eax, eax	       627	xdiffi.c	FUNCTION_8
0x40015f5	             0x1d0	                            add eax, edx	       627	xdiffi.c	FUNCTION_8
0x40015f7	             0x1c0	                            add eax, eax	       627	xdiffi.c	FUNCTION_8
0x40015f9	          0x8d1401	                    lea edx, [rcx + rax]	       627	xdiffi.c	FUNCTION_8
0x40015fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       627	xdiffi.c	FUNCTION_8
0x4001600	          0x895004	                mov dword [rax + 4], edx	       627	xdiffi.c	FUNCTION_8
0x4001603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       629	xdiffi.c	FUNCTION_8	IF_3
0x4001607	          0x8b4004	                mov eax, dword [rax + 4]	       629	xdiffi.c	FUNCTION_8	IF_3
0x400160a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       629	xdiffi.c	FUNCTION_8	IF_3
0x400160d	            0x740c	                            je 0x400161b	       629	xdiffi.c	FUNCTION_8	IF_3
0x400160f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       630	xdiffi.c	FUNCTION_8	IF_3
0x4001613	          0x8b4004	                mov eax, dword [rax + 4]	       630	xdiffi.c	FUNCTION_8	IF_3
0x4001616	          0x8945f0	             mov dword [rbp - 0x10], eax	       630	xdiffi.c	FUNCTION_8	IF_3
0x4001619	            0xeb0a	                           jmp 0x4001625	       630	xdiffi.c	FUNCTION_8	IF_3
0x400161b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x400161f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x4001622	          0x8945f0	             mov dword [rbp - 0x10], eax	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x4001625	        0x837df800	                  cmp dword [rbp - 8], 0	       634	xdiffi.c	FUNCTION_8
0x4001629	           0xf95c0	                                setne al	       634	xdiffi.c	FUNCTION_8
0x400162c	           0xfb6c0	                           movzx eax, al	       634	xdiffi.c	FUNCTION_8
0x400162f	          0x8945fc	                mov dword [rbp - 4], eax	       634	xdiffi.c	FUNCTION_8
0x4001632	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       637	xdiffi.c	FUNCTION_8
0x4001636	            0x8b10	                    mov edx, dword [rax]	       637	xdiffi.c	FUNCTION_8
0x4001638	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       637	xdiffi.c	FUNCTION_8
0x400163b	             0x1c2	                            add edx, eax	       637	xdiffi.c	FUNCTION_8
0x400163d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       637	xdiffi.c	FUNCTION_8
0x4001641	            0x8910	                    mov dword [rax], edx	       637	xdiffi.c	FUNCTION_8
0x4001643	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	       639	xdiffi.c	FUNCTION_8	IF_4
0x4001647	     0xf84aa000000	                            je 0x40016f7	       639	xdiffi.c	FUNCTION_8	IF_4
0x400164d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4001651	          0x8b400c	              mov eax, dword [rax + 0xc]	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4001654	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4001657	     0xf849a000000	                            je 0x40016f7	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x400165d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001661	          0x8b400c	              mov eax, dword [rax + 0xc]	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001664	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001667	            0x7d24	                           jge 0x400168d	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001669	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400166d	          0x8b4004	                mov eax, dword [rax + 4]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001670	        0x837dfc00	                  cmp dword [rbp - 4], 0	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001674	            0x7407	                            je 0x400167d	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001676	      0xba0a000000	                            mov edx, 0xa	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400167b	            0xeb05	                           jmp 0x4001682	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400167d	      0xbafcffffff	                     mov edx, 0xfffffffc	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001682	             0x1c2	                            add edx, eax	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001684	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x4001688	          0x895004	                mov dword [rax + 4], edx	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400168b	            0xeb6a	                           jmp 0x40016f7	       680	xdiffi.c	FUNCTION_8
0x400168d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4001691	          0x8b400c	              mov eax, dword [rax + 0xc]	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4001694	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4001697	            0x745e	                            je 0x40016f7	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4001699	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400169d	          0x8b4014	            mov eax, dword [rax + 0x14] 	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016a0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016a3	            0x7430	                            je 0x40016d5	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016a9	          0x8b4014	            mov eax, dword [rax + 0x14] 	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016ac	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016af	            0x7e24	                           jle 0x40016d5	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016b5	          0x8b4004	                mov eax, dword [rax + 4]	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016b8	        0x837dfc00	                  cmp dword [rbp - 4], 0	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016bc	            0x7407	                            je 0x40016c5	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016be	      0xba11000000	                           mov edx, 0x11	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016c3	            0xeb05	                           jmp 0x40016ca	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016c5	      0xba18000000	                           mov edx, 0x18	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016ca	             0x1c2	                            add edx, eax	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016d0	          0x895004	                mov dword [rax + 4], edx	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40016d3	            0xeb22	                           jmp 0x40016f7	       680	xdiffi.c	FUNCTION_8
0x40016d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016d9	          0x8b4004	                mov eax, dword [rax + 4]	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016dc	        0x837dfc00	                  cmp dword [rbp - 4], 0	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016e0	            0x7407	                            je 0x40016e9	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016e2	      0xba11000000	                           mov edx, 0x11	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016e7	            0xeb05	                           jmp 0x40016ee	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016e9	      0xba17000000	                           mov edx, 0x17	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016ee	             0x1c2	                            add edx, eax	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016f4	          0x895004	                mov dword [rax + 4], edx	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40016f7	              0x90	                                     nop	       680	xdiffi.c	FUNCTION_8
0x40016f8	              0x5d	                                 pop rbp	       680	xdiffi.c	FUNCTION_8
0x40016f9	              0xc3	                                     ret	       680	xdiffi.c	FUNCTION_8
get_indent	ELSE,2:DO,0:functions,0:WHILE,0:IF,4:FOR,1:CALL,1:SWITCH,0	54
0x400130a	              0x55	                                push rbp	       425	xdiffi.c	FUNCTION_6
0x400130b	          0x4889e5	                            mov rbp, rsp	       425	xdiffi.c	FUNCTION_6
0x400130e	        0x4883ec20	                           sub rsp, 0x20	       425	xdiffi.c	FUNCTION_6
0x4001312	        0x48897de8	             mov qword [rbp - 0x18], rdi	       425	xdiffi.c	FUNCTION_6
0x4001316	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       427	xdiffi.c	FUNCTION_6
0x400131d	    0x48c745f80000	                  mov qword [rbp - 8], 0	       429	xdiffi.c	FUNCTION_6	FOR_1
0x4001325	            0xeb7f	                           jmp 0x40013a6	       429	xdiffi.c	FUNCTION_6	FOR_1
0x4001327	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x400132b	        0x488b5008	                mov rdx, qword [rax + 8]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x400132f	        0x488b45f8	                mov rax, qword [rbp - 8]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x4001333	          0x4801d0	                            add rax, rdx	       430	xdiffi.c	FUNCTION_6	FOR_1
0x4001336	           0xfb600	                   movzx eax, byte [rax]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x4001339	          0x8845f3	                mov byte [rbp - 0xd], al	       430	xdiffi.c	FUNCTION_6	FOR_1
0x400133c	      0xe800000000	                          call 0x4001341	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001341	          0x488b00	                    mov rax, qword [rax]	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001344	         0xfb655f3	             movzx edx, byte [rbp - 0xd]	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001348	           0xfb6d2	                           movzx edx, dl	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400134b	          0x4801d2	                            add rdx, rdx	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400134e	          0x4801d0	                            add rax, rdx	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001351	           0xfb700	                   movzx eax, word [rax]	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001354	           0xfb7c0	                           movzx eax, ax	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001357	      0x2500200000	                         and eax, 0x2000	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400135c	            0x85c0	                           test eax, eax	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400135e	            0x7505	                           jne 0x4001365	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4001360	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       433	xdiffi.c	FUNCTION_6	FOR_1	IF_1
0x4001363	            0xeb58	                           jmp 0x40013bd	       433	xdiffi.c	FUNCTION_6	FOR_1	IF_1
0x4001365	        0x807df320	              cmp byte [rbp - 0xd], 0x20	       434	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x4001369	            0x7506	                           jne 0x4001371	       434	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x400136b	        0x8345f401	                add dword [rbp - 0xc], 1	       435	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x400136f	            0xeb20	                           jmp 0x4001391	       435	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x4001371	        0x807df309	                 cmp byte [rbp - 0xd], 9	       436	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001375	            0x751a	                           jne 0x4001391	       436	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001377	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400137a	              0x99	                                     cdq	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400137b	          0xc1ea1d	                           shr edx, 0x1d	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400137e	             0x1d0	                            add eax, edx	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001380	          0x83e007	                              and eax, 7	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001383	            0x29d0	                            sub eax, edx	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001385	      0xba08000000	                              mov edx, 8	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400138a	            0x29c2	                            sub edx, eax	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400138c	            0x89d0	                            mov eax, edx	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400138e	           0x145f4	              add dword [rbp - 0xc], eax	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4001391	    0x817df4c70000	            cmp dword [rbp - 0xc], 0xc7 	       440	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x4001398	            0x7e07	                           jle 0x40013a1	       440	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x400139a	      0xb8c8000000	                           mov eax, 0xc8	       441	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x400139f	            0xeb1c	                           jmp 0x40013bd	       441	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x40013a1	      0x488345f801	                  add qword [rbp - 8], 1	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40013a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40013aa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40013ae	        0x483b45f8	                cmp rax, qword [rbp - 8]	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40013b2	     0xf8f6fffffff	                            jg 0x4001327	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40013b8	      0xb8ffffffff	                     mov eax, 0xffffffff	       445	xdiffi.c	FUNCTION_6
0x40013bd	              0xc9	                                   leave	       446	xdiffi.c	FUNCTION_6
0x40013be	              0xc3	                                     ret	       446	xdiffi.c	FUNCTION_6
xdl_free_script	ELSE,0:DO,0:functions,0:WHILE,1:IF,0:FOR,0:CALL,1:SWITCH,0	18
0x4001fc6	              0x55	                                push rbp	       971	xdiffi.c	FUNCTION_18
0x4001fc7	          0x4889e5	                            mov rbp, rsp	       971	xdiffi.c	FUNCTION_18
0x4001fca	        0x4883ec20	                           sub rsp, 0x20	       971	xdiffi.c	FUNCTION_18
0x4001fce	        0x48897de8	             mov qword [rbp - 0x18], rdi	       971	xdiffi.c	FUNCTION_18
0x4001fd2	            0xeb17	                           jmp 0x4001feb	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001fd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001fd8	          0x488b00	                    mov rax, qword [rax]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001fdb	        0x488945e8	             mov qword [rbp - 0x18], rax	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001fdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001fe3	          0x4889c7	                            mov rdi, rax	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001fe6	      0xe800000000	                          call 0x4001feb	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001feb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001fef	        0x488945f8	                mov qword [rbp - 8], rax	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001ff3	      0x48837df800	                  cmp qword [rbp - 8], 0	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001ff8	            0x75da	                           jne 0x4001fd4	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001ffa	              0x90	                                     nop	       978	xdiffi.c	FUNCTION_18
0x4001ffb	              0xc9	                                   leave	       978	xdiffi.c	FUNCTION_18
0x4001ffc	              0xc3	                                     ret	       978	xdiffi.c	FUNCTION_18
xdl_diff	ELSE,0:DO,0:functions,0:WHILE,0:IF,5:FOR,0:CALL,11:SWITCH,0	109
0x400224f	              0x55	                                push rbp	      1019	xdiffi.c	FUNCTION_21
0x4002250	          0x4889e5	                            mov rbp, rsp	      1019	xdiffi.c	FUNCTION_21
0x4002253	    0x4881ec600100	                          sub rsp, 0x160	      1019	xdiffi.c	FUNCTION_21
0x400225a	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	      1019	xdiffi.c	FUNCTION_21
0x4002261	    0x4889b5c0feff	            mov qword [rbp - 0x140], rsi	      1019	xdiffi.c	FUNCTION_21
0x4002268	    0x488995b8feff	            mov qword [rbp - 0x148], rdx	      1019	xdiffi.c	FUNCTION_21
0x400226f	    0x48898db0feff	            mov qword [rbp - 0x150], rcx	      1019	xdiffi.c	FUNCTION_21
0x4002276	    0x4c8985a8feff	             mov qword [rbp - 0x158], r8	      1019	xdiffi.c	FUNCTION_21
0x400227d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1019	xdiffi.c	FUNCTION_21
0x4002286	        0x488945f8	                mov qword [rbp - 8], rax	      1019	xdiffi.c	FUNCTION_21
0x400228a	            0x31c0	                            xor eax, eax	      1019	xdiffi.c	FUNCTION_21
0x400228c	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1022	xdiffi.c	FUNCTION_21
0x4002293	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1022	xdiffi.c	FUNCTION_21
0x4002297	          0x4885c0	                           test rax, rax	      1022	xdiffi.c	FUNCTION_21
0x400229a	            0x7407	                            je 0x40022a3	      1022	xdiffi.c	FUNCTION_21
0x400229c	      0xb800000000	                              mov eax, 0	      1022	xdiffi.c	FUNCTION_21
0x40022a1	            0xeb05	                           jmp 0x40022a8	      1022	xdiffi.c	FUNCTION_21
0x40022a3	      0xb800000000	                              mov eax, 0	      1022	xdiffi.c	FUNCTION_21
0x40022a8	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1022	xdiffi.c	FUNCTION_21
0x40022af	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022b6	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022bd	    0x488bb5c0feff	            mov rsi, qword [rbp - 0x140]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022c4	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022cb	          0x4889c7	                            mov rdi, rax	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022ce	      0xe800000000	                          call 0x40022d3	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022d3	            0x85c0	                           test eax, eax	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022d5	            0x790a	                           jns 0x40022e1	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40022d7	      0xb8ffffffff	                     mov eax, 0xffffffff	      1026	xdiffi.c	FUNCTION_21	IF_1
0x40022dc	      0xe956010000	                           jmp 0x4002437	      1026	xdiffi.c	FUNCTION_21	IF_1
0x40022e1	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40022e8	          0x488b00	                    mov rax, qword [rax]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40022eb	          0x4889c2	                            mov rdx, rax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40022ee	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40022f5	    0x488d88880000	                   lea rcx, [rax + 0x88]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40022fc	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002303	          0x4889ce	                            mov rsi, rcx	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002306	          0x4889c7	                            mov rdi, rax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002309	      0xe800000000	                          call 0x400230e	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x400230e	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002310	            0x7851	                            js 0x4002363	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002312	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002319	          0x488b00	                    mov rax, qword [rax]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400231c	          0x4889c6	                            mov rsi, rax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400231f	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002326	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400232d	    0x488d8a880000	                   lea rcx, [rdx + 0x88]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002334	          0x4889f2	                            mov rdx, rsi	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002337	          0x4889c6	                            mov rsi, rax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400233a	          0x4889cf	                            mov rdi, rcx	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400233d	      0xe800000000	                          call 0x4002342	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002342	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002344	            0x781d	                            js 0x4002363	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4002346	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x400234d	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x4002354	          0x4889d6	                            mov rsi, rdx	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x4002357	          0x4889c7	                            mov rdi, rax	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x400235a	      0xe800000000	                          call 0x400235f	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x400235f	            0x85c0	                           test eax, eax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002361	            0x7919	                           jns 0x400237c	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4002363	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x400236a	          0x4889c7	                            mov rdi, rax	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x400236d	      0xe800000000	                          call 0x4002372	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x4002372	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	xdiffi.c	FUNCTION_21	IF_2
0x4002377	      0xe9bb000000	                           jmp 0x4002437	      1033	xdiffi.c	FUNCTION_21	IF_2
0x400237c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4002383	          0x4885c0	                           test rax, rax	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4002386	     0xf8497000000	                            je 0x4002423	      1035	xdiffi.c	FUNCTION_21	IF_3
0x400238c	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4002393	          0x488b00	                    mov rax, qword [rax]	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4002396	      0x2580000000	                           and eax, 0x80	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x400239b	          0x4885c0	                           test rax, rax	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x400239e	            0x7426	                            je 0x40023c6	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x40023a0	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023a7	          0x488b00	                    mov rax, qword [rax]	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023aa	          0x4889c2	                            mov rdx, rax	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023ad	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023b4	    0x488d8de0feff	                  lea rcx, [rbp - 0x120]	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023bb	          0x4889ce	                            mov rsi, rcx	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023be	          0x4889c7	                            mov rdi, rax	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023c1	      0xe833fdffff	             call sym.xdl_mark_ignorable	      1037	xdiffi.c	FUNCTION_21	IF_3	CALL_6
0x40023c6	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023cd	    0x488b8db0feff	            mov rcx, qword [rbp - 0x150]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023d4	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023db	    0x488dbde0feff	                  lea rdi, [rbp - 0x120]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023e2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023e9	            0xffd0	                                call rax	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023eb	            0x85c0	                           test eax, eax	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023ed	            0x7925	                           jns 0x4002414	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40023ef	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40023f6	          0x4889c7	                            mov rdi, rax	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40023f9	      0xe800000000	                          call 0x40023fe	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40023fe	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1042	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_9
0x4002405	          0x4889c7	                            mov rdi, rax	      1042	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_9
0x4002408	      0xe800000000	                          call 0x400240d	      1042	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_9
0x400240d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1043	xdiffi.c	FUNCTION_21	IF_3	IF_5
0x4002412	            0xeb23	                           jmp 0x4002437	      1043	xdiffi.c	FUNCTION_21	IF_3	IF_5
0x4002414	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1045	xdiffi.c	FUNCTION_21	IF_3	CALL_10
0x400241b	          0x4889c7	                            mov rdi, rax	      1045	xdiffi.c	FUNCTION_21	IF_3	CALL_10
0x400241e	      0xe800000000	                          call 0x4002423	      1045	xdiffi.c	FUNCTION_21	IF_3	CALL_10
0x4002423	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x400242a	          0x4889c7	                            mov rdi, rax	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x400242d	      0xe800000000	                          call 0x4002432	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4002432	      0xb800000000	                              mov eax, 0	      1049	xdiffi.c	FUNCTION_21
0x4002437	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1050	xdiffi.c	FUNCTION_21
0x400243b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1050	xdiffi.c	FUNCTION_21
0x4002444	            0x7405	                            je 0x400244b	      1050	xdiffi.c	FUNCTION_21
0x4002446	      0xe800000000	                          call 0x400244b	      1050	xdiffi.c	FUNCTION_21
0x400244b	              0xc9	                                   leave	      1050	xdiffi.c	FUNCTION_21
0x400244c	              0xc3	                                     ret	      1050	xdiffi.c	FUNCTION_21
measure_split	ELSE,1:DO,0:functions,0:WHILE,0:IF,5:FOR,2:CALL,3:SWITCH,0	113
0x40013bf	              0x55	                                push rbp	       504	xdiffi.c	FUNCTION_7
0x40013c0	          0x4889e5	                            mov rbp, rsp	       504	xdiffi.c	FUNCTION_7
0x40013c3	        0x4883ec30	                           sub rsp, 0x30	       504	xdiffi.c	FUNCTION_7
0x40013c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       504	xdiffi.c	FUNCTION_7
0x40013cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       504	xdiffi.c	FUNCTION_7
0x40013cf	        0x488955d8	             mov qword [rbp - 0x28], rdx	       504	xdiffi.c	FUNCTION_7
0x40013d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       507	xdiffi.c	FUNCTION_7	IF_1
0x40013d7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       507	xdiffi.c	FUNCTION_7	IF_1
0x40013db	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       507	xdiffi.c	FUNCTION_7	IF_1
0x40013df	            0x7f17	                            jg 0x40013f8	       507	xdiffi.c	FUNCTION_7	IF_1
0x40013e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       508	xdiffi.c	FUNCTION_7	IF_1
0x40013e5	    0xc70001000000	                      mov dword [rax], 1	       508	xdiffi.c	FUNCTION_7	IF_1
0x40013eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       509	xdiffi.c	FUNCTION_7	IF_1
0x40013ef	    0xc74004ffffff	        mov dword [rax + 4], 0xffffffff 	       509	xdiffi.c	FUNCTION_7	IF_1
0x40013f6	            0xeb31	                           jmp 0x4001429	       509	xdiffi.c	FUNCTION_7	IF_1
0x40013f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       511	xdiffi.c	FUNCTION_7	ELSE_1
0x40013fc	    0xc70000000000	                      mov dword [rax], 0	       511	xdiffi.c	FUNCTION_7	ELSE_1
0x4001402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001406	        0x488b4060	            mov rax, qword [rax + 0x60] 	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x400140a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x400140e	        0x48c1e203	                              shl rdx, 3	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001412	          0x4801d0	                            add rax, rdx	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001415	          0x488b00	                    mov rax, qword [rax]	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001418	          0x4889c7	                            mov rdi, rax	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x400141b	      0xe8eafeffff	                     call sym.get_indent	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001420	            0x89c2	                            mov edx, eax	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001422	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001426	          0x895004	                mov dword [rax + 4], edx	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x4001429	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       515	xdiffi.c	FUNCTION_7
0x400142d	    0xc74008000000	                  mov dword [rax + 8], 0	       515	xdiffi.c	FUNCTION_7
0x4001434	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       516	xdiffi.c	FUNCTION_7
0x4001438	    0xc7400cffffff	      mov dword [rax + 0xc], 0xffffffff 	       516	xdiffi.c	FUNCTION_7
0x400143f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       517	xdiffi.c	FUNCTION_7	FOR_1
0x4001443	        0x4883e801	                              sub rax, 1	       517	xdiffi.c	FUNCTION_7	FOR_1
0x4001447	        0x488945f8	                mov qword [rbp - 8], rax	       517	xdiffi.c	FUNCTION_7	FOR_1
0x400144b	            0xeb62	                           jmp 0x40014af	       517	xdiffi.c	FUNCTION_7	FOR_1
0x400144d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001451	        0x488b4060	            mov rax, qword [rax + 0x60] 	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001455	        0x488b55f8	                mov rdx, qword [rbp - 8]	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001459	        0x48c1e203	                              shl rdx, 3	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x400145d	          0x4801d0	                            add rax, rdx	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001460	          0x488b00	                    mov rax, qword [rax]	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001463	          0x4889c7	                            mov rdi, rax	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001466	      0xe89ffeffff	                     call sym.get_indent	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x400146b	            0x89c2	                            mov edx, eax	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x400146d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001471	          0x89500c	              mov dword [rax + 0xc], edx	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x4001474	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x4001478	          0x8b400c	              mov eax, dword [rax + 0xc]	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x400147b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x400147e	            0x7538	                           jne 0x40014b8	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x4001480	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       521	xdiffi.c	FUNCTION_7	FOR_1
0x4001484	          0x8b4008	                mov eax, dword [rax + 8]	       521	xdiffi.c	FUNCTION_7	FOR_1
0x4001487	          0x8d5001	                      lea edx, [rax + 1]	       521	xdiffi.c	FUNCTION_7	FOR_1
0x400148a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       521	xdiffi.c	FUNCTION_7	FOR_1
0x400148e	          0x895008	                mov dword [rax + 8], edx	       521	xdiffi.c	FUNCTION_7	FOR_1
0x4001491	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x4001495	          0x8b4008	                mov eax, dword [rax + 8]	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x4001498	          0x83f814	                           cmp eax, 0x14	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x400149b	            0x750d	                           jne 0x40014aa	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x400149d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40014a1	    0xc7400c000000	                mov dword [rax + 0xc], 0	       523	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40014a8	            0xeb0f	                           jmp 0x40014b9	       524	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40014aa	      0x48836df801	                  sub qword [rbp - 8], 1	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40014af	      0x48837df800	                  cmp qword [rbp - 8], 0	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40014b4	            0x7997	                           jns 0x400144d	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40014b6	            0xeb01	                           jmp 0x40014b9	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40014b8	              0x90	                                     nop	       520	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x40014b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       528	xdiffi.c	FUNCTION_7
0x40014bd	    0xc74010000000	               mov dword [rax + 0x10], 0	       528	xdiffi.c	FUNCTION_7
0x40014c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       529	xdiffi.c	FUNCTION_7
0x40014c8	    0xc74014ffffff	     mov dword [rax + 0x14], 0xffffffff 	       529	xdiffi.c	FUNCTION_7
0x40014cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       530	xdiffi.c	FUNCTION_7	FOR_2
0x40014d3	        0x4883c001	                              add rax, 1	       530	xdiffi.c	FUNCTION_7	FOR_2
0x40014d7	        0x488945f8	                mov qword [rbp - 8], rax	       530	xdiffi.c	FUNCTION_7	FOR_2
0x40014db	            0xeb62	                           jmp 0x400153f	       530	xdiffi.c	FUNCTION_7	FOR_2
0x40014dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014e1	        0x488b4060	            mov rax, qword [rax + 0x60] 	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014e5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014e9	        0x48c1e203	                              shl rdx, 3	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014ed	          0x4801d0	                            add rax, rdx	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014f0	          0x488b00	                    mov rax, qword [rax]	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014f3	          0x4889c7	                            mov rdi, rax	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014f6	      0xe80ffeffff	                     call sym.get_indent	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014fb	            0x89c2	                            mov edx, eax	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x40014fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x4001501	          0x895014	             mov dword [rax + 0x14], edx	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x4001504	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x4001508	          0x8b4014	            mov eax, dword [rax + 0x14] 	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x400150b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x400150e	            0x753f	                           jne 0x400154f	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x4001510	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4001514	          0x8b4010	            mov eax, dword [rax + 0x10] 	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4001517	          0x8d5001	                      lea edx, [rax + 1]	       534	xdiffi.c	FUNCTION_7	FOR_2
0x400151a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       534	xdiffi.c	FUNCTION_7	FOR_2
0x400151e	          0x895010	             mov dword [rax + 0x10], edx	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4001521	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4001525	          0x8b4010	            mov eax, dword [rax + 0x10] 	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4001528	          0x83f814	                           cmp eax, 0x14	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x400152b	            0x750d	                           jne 0x400153a	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x400152d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       536	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4001531	    0xc74014000000	               mov dword [rax + 0x14], 0	       536	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4001538	            0xeb16	                           jmp 0x4001550	       537	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x400153a	      0x488345f801	                  add qword [rbp - 8], 1	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400153f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4001543	        0x488b4038	            mov rax, qword [rax + 0x38] 	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4001547	        0x483b45f8	                cmp rax, qword [rbp - 8]	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400154b	            0x7f90	                            jg 0x40014dd	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400154d	            0xeb01	                           jmp 0x4001550	       540	xdiffi.c	FUNCTION_7
0x400154f	              0x90	                                     nop	       533	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x4001550	              0x90	                                     nop	       540	xdiffi.c	FUNCTION_7
0x4001551	              0xc9	                                   leave	       540	xdiffi.c	FUNCTION_7
0x4001552	              0xc3	                                     ret	       540	xdiffi.c	FUNCTION_7
group_next	ELSE,0:DO,0:functions,0:WHILE,0:IF,1:FOR,1:CALL,0:SWITCH,0	38
0x40017b4	              0x55	                                push rbp	       735	xdiffi.c	FUNCTION_11
0x40017b5	          0x4889e5	                            mov rbp, rsp	       735	xdiffi.c	FUNCTION_11
0x40017b8	        0x48897df8	                mov qword [rbp - 8], rdi	       735	xdiffi.c	FUNCTION_11
0x40017bc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       735	xdiffi.c	FUNCTION_11
0x40017c0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017c4	        0x488b5008	                mov rdx, qword [rax + 8]	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017cc	        0x488b4038	            mov rax, qword [rax + 0x38] 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017d0	          0x4839c2	                            cmp rdx, rax	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017d3	            0x7507	                           jne 0x40017dc	       736	xdiffi.c	FUNCTION_11	IF_1
0x40017d5	      0xb8ffffffff	                     mov eax, 0xffffffff	       737	xdiffi.c	FUNCTION_11	IF_1
0x40017da	            0xeb57	                           jmp 0x4001833	       737	xdiffi.c	FUNCTION_11	IF_1
0x40017dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       739	xdiffi.c	FUNCTION_11
0x40017e0	        0x488b4008	                mov rax, qword [rax + 8]	       739	xdiffi.c	FUNCTION_11
0x40017e4	        0x488d5001	                      lea rdx, [rax + 1]	       739	xdiffi.c	FUNCTION_11
0x40017e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       739	xdiffi.c	FUNCTION_11
0x40017ec	          0x488910	                    mov qword [rax], rdx	       739	xdiffi.c	FUNCTION_11
0x40017ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40017f3	          0x488b10	                    mov rdx, qword [rax]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40017f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40017fa	        0x48895008	                mov qword [rax + 8], rdx	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40017fe	            0xeb14	                           jmp 0x4001814	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001800	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001804	        0x488b4008	                mov rax, qword [rax + 8]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001808	        0x488d5001	                      lea rdx, [rax + 1]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400180c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001810	        0x48895008	                mov qword [rax + 8], rdx	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001814	        0x488b45f8	                mov rax, qword [rbp - 8]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001818	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400181c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001820	        0x488b4008	                mov rax, qword [rax + 8]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001824	          0x4801d0	                            add rax, rdx	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001827	           0xfb600	                   movzx eax, byte [rax]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400182a	            0x84c0	                             test al, al	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400182c	            0x75d2	                           jne 0x4001800	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400182e	      0xb800000000	                              mov eax, 0	       743	xdiffi.c	FUNCTION_11
0x4001833	              0x5d	                                 pop rbp	       744	xdiffi.c	FUNCTION_11
0x4001834	              0xc3	                                     ret	       744	xdiffi.c	FUNCTION_11
xdl_do_diff	ELSE,0:DO,0:functions,0:WHILE,0:IF,6:FOR,0:CALL,12:SWITCH,0	156
0x4000f16	              0x55	                                push rbp	       325	xdiffi.c	FUNCTION_3
0x4000f17	          0x4889e5	                            mov rbp, rsp	       325	xdiffi.c	FUNCTION_3
0x4000f1a	    0x4881ecb00000	                           sub rsp, 0xb0	       325	xdiffi.c	FUNCTION_3
0x4000f21	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       325	xdiffi.c	FUNCTION_3
0x4000f28	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       325	xdiffi.c	FUNCTION_3
0x4000f2f	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       325	xdiffi.c	FUNCTION_3
0x4000f36	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       325	xdiffi.c	FUNCTION_3
0x4000f3d	    0x64488b042528	                mov rax, qword fs:[0x28]	       325	xdiffi.c	FUNCTION_3
0x4000f46	        0x488945f8	                mov qword [rbp - 8], rax	       325	xdiffi.c	FUNCTION_3
0x4000f4a	            0x31c0	                            xor eax, eax	       325	xdiffi.c	FUNCTION_3
0x4000f4c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f53	          0x488b00	                    mov rax, qword [rax]	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f56	      0x2500c00000	                         and eax, 0xc000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f5b	    0x483d00400000	                         cmp rax, 0x4000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f61	            0x7529	                           jne 0x4000f8c	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f63	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f6a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f71	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f78	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f7f	          0x4889c7	                            mov rdi, rax	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f82	      0xe800000000	                          call 0x4000f87	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f87	      0xe97a020000	                           jmp 0x4001206	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000f8c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000f93	          0x488b00	                    mov rax, qword [rax]	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000f96	      0x2500c00000	                         and eax, 0xc000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000f9b	    0x483d00800000	                         cmp rax, 0x8000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000fa1	            0x7529	                           jne 0x4000fcc	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000fa3	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000faa	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fb1	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fb8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fbf	          0x4889c7	                            mov rdi, rax	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fc2	      0xe800000000	                          call 0x4000fc7	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fc7	      0xe93a020000	                           jmp 0x4001206	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000fcc	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000fd3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000fda	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000fe1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000fe8	          0x4889c7	                            mov rdi, rax	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000feb	      0xe800000000	                          call 0x4000ff0	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000ff0	            0x85c0	                           test eax, eax	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000ff2	            0x790a	                           jns 0x4000ffe	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000ff4	      0xb8ffffffff	                     mov eax, 0xffffffff	       339	xdiffi.c	FUNCTION_3	IF_3
0x4000ff9	      0xe908020000	                           jmp 0x4001206	       339	xdiffi.c	FUNCTION_3	IF_3
0x4000ffe	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       346	xdiffi.c	FUNCTION_3
0x4001005	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       346	xdiffi.c	FUNCTION_3
0x4001009	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       346	xdiffi.c	FUNCTION_3
0x4001010	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       346	xdiffi.c	FUNCTION_3
0x4001017	          0x4801d0	                            add rax, rdx	       346	xdiffi.c	FUNCTION_3
0x400101a	        0x4883c003	                              add rax, 3	       346	xdiffi.c	FUNCTION_3
0x400101e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       346	xdiffi.c	FUNCTION_3
0x4001025	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x400102c	        0x4883c001	                              add rax, 1	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4001030	        0x48c1e004	                              shl rax, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4001034	          0x4889c7	                            mov rdi, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4001037	      0xe800000000	                          call 0x400103c	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x400103c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4001043	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x400104b	            0x7519	                           jne 0x4001066	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x400104d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       349	xdiffi.c	FUNCTION_3	IF_4	CALL_7
0x4001054	          0x4889c7	                            mov rdi, rax	       349	xdiffi.c	FUNCTION_3	IF_4	CALL_7
0x4001057	      0xe800000000	                          call 0x400105c	       349	xdiffi.c	FUNCTION_3	IF_4	CALL_7
0x400105c	      0xb8ffffffff	                     mov eax, 0xffffffff	       350	xdiffi.c	FUNCTION_3	IF_4
0x4001061	      0xe9a0010000	                           jmp 0x4001206	       350	xdiffi.c	FUNCTION_3	IF_4
0x4001066	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       352	xdiffi.c	FUNCTION_3
0x400106d	        0x48894580	             mov qword [rbp - 0x80], rax	       352	xdiffi.c	FUNCTION_3
0x4001071	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       353	xdiffi.c	FUNCTION_3
0x4001078	    0x488d14c50000	                        lea rdx, [rax*8]	       353	xdiffi.c	FUNCTION_3
0x4001080	        0x488b4580	             mov rax, qword [rbp - 0x80]	       353	xdiffi.c	FUNCTION_3
0x4001084	          0x4801d0	                            add rax, rdx	       353	xdiffi.c	FUNCTION_3
0x4001087	        0x48894588	             mov qword [rbp - 0x78], rax	       353	xdiffi.c	FUNCTION_3
0x400108b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       354	xdiffi.c	FUNCTION_3
0x4001092	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       354	xdiffi.c	FUNCTION_3
0x4001099	        0x4883c001	                              add rax, 1	       354	xdiffi.c	FUNCTION_3
0x400109d	        0x48c1e003	                              shl rax, 3	       354	xdiffi.c	FUNCTION_3
0x40010a1	        0x48014580	            add qword [rbp - 0x80], rax 	       354	xdiffi.c	FUNCTION_3
0x40010a5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       355	xdiffi.c	FUNCTION_3
0x40010ac	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       355	xdiffi.c	FUNCTION_3
0x40010b3	        0x4883c001	                              add rax, 1	       355	xdiffi.c	FUNCTION_3
0x40010b7	        0x48c1e003	                              shl rax, 3	       355	xdiffi.c	FUNCTION_3
0x40010bb	        0x48014588	            add qword [rbp - 0x78], rax 	       355	xdiffi.c	FUNCTION_3
0x40010bf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       357	xdiffi.c	FUNCTION_3	CALL_8
0x40010c6	          0x4889c7	                            mov rdi, rax	       357	xdiffi.c	FUNCTION_3	CALL_8
0x40010c9	      0xe800000000	                          call 0x40010ce	       357	xdiffi.c	FUNCTION_3	CALL_8
0x40010ce	        0x48894590	             mov qword [rbp - 0x70], rax	       357	xdiffi.c	FUNCTION_3	CALL_8
0x40010d2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       358	xdiffi.c	FUNCTION_3	IF_5
0x40010d6	    0x483dff000000	                           cmp rax, 0xff	       358	xdiffi.c	FUNCTION_3	IF_5
0x40010dc	            0x7f08	                            jg 0x40010e6	       358	xdiffi.c	FUNCTION_3	IF_5
0x40010de	    0x48c745900001	          mov qword [rbp - 0x70], 0x100 	       359	xdiffi.c	FUNCTION_3	IF_5
0x40010e6	    0x48c745981400	           mov qword [rbp - 0x68], 0x14 	       360	xdiffi.c	FUNCTION_3
0x40010ee	    0x48c745a00001	          mov qword [rbp - 0x60], 0x100 	       361	xdiffi.c	FUNCTION_3
0x40010f6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       363	xdiffi.c	FUNCTION_3
0x40010fd	        0x488b4078	            mov rax, qword [rax + 0x78] 	       363	xdiffi.c	FUNCTION_3
0x4001101	        0x488945b0	             mov qword [rbp - 0x50], rax	       363	xdiffi.c	FUNCTION_3
0x4001105	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       364	xdiffi.c	FUNCTION_3
0x400110c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       364	xdiffi.c	FUNCTION_3
0x4001113	        0x488945b8	             mov qword [rbp - 0x48], rax	       364	xdiffi.c	FUNCTION_3
0x4001117	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       365	xdiffi.c	FUNCTION_3
0x400111e	        0x488b4068	            mov rax, qword [rax + 0x68] 	       365	xdiffi.c	FUNCTION_3
0x4001122	        0x488945c8	             mov qword [rbp - 0x38], rax	       365	xdiffi.c	FUNCTION_3
0x4001126	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       366	xdiffi.c	FUNCTION_3
0x400112d	        0x488b4070	            mov rax, qword [rax + 0x70] 	       366	xdiffi.c	FUNCTION_3
0x4001131	        0x488945c0	             mov qword [rbp - 0x40], rax	       366	xdiffi.c	FUNCTION_3
0x4001135	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       367	xdiffi.c	FUNCTION_3
0x400113c	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       367	xdiffi.c	FUNCTION_3
0x4001143	        0x488945d0	             mov qword [rbp - 0x30], rax	       367	xdiffi.c	FUNCTION_3
0x4001147	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       368	xdiffi.c	FUNCTION_3
0x400114e	    0x488b80080100	           mov rax, qword [rax + 0x108] 	       368	xdiffi.c	FUNCTION_3
0x4001155	        0x488945d8	             mov qword [rbp - 0x28], rax	       368	xdiffi.c	FUNCTION_3
0x4001159	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       369	xdiffi.c	FUNCTION_3
0x4001160	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       369	xdiffi.c	FUNCTION_3
0x4001167	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	xdiffi.c	FUNCTION_3
0x400116b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       370	xdiffi.c	FUNCTION_3
0x4001172	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       370	xdiffi.c	FUNCTION_3
0x4001179	        0x488945e0	             mov qword [rbp - 0x20], rax	       370	xdiffi.c	FUNCTION_3
0x400117d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       373	xdiffi.c	FUNCTION_3	IF_6
0x4001184	          0x488b00	                    mov rax, qword [rax]	       373	xdiffi.c	FUNCTION_3	IF_6
0x4001187	          0x83e001	                              and eax, 1	       373	xdiffi.c	FUNCTION_3	IF_6
0x400118a	          0x4885c0	                           test rax, rax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400118d	           0xf95c0	                                setne al	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001190	           0xfb6f0	                           movzx esi, al	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001193	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001197	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400119b	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400119f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011a3	        0x488d7d90	                   lea rdi, [rbp - 0x70]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011a7	              0x57	                                push rdi	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011a8	              0x56	                                push rsi	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011a9	          0xff7588	                 push qword [rbp - 0x78]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011ac	          0xff7580	                 push qword [rbp - 0x80]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011af	          0x4d89c1	                              mov r9, r8	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011b2	    0x41b800000000	                              mov r8d, 0	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011b8	      0xbe00000000	                              mov esi, 0	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011bd	          0x4889c7	                            mov rdi, rax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011c0	      0xe800000000	                          call 0x40011c5	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011c5	        0x4883c420	                           add rsp, 0x20	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011c9	            0x85c0	                           test eax, eax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011cb	            0x7925	                           jns 0x40011f2	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x40011cd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x40011d4	          0x4889c7	                            mov rdi, rax	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x40011d7	      0xe800000000	                          call 0x40011dc	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x40011dc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x40011e3	          0x4889c7	                            mov rdi, rax	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x40011e6	      0xe800000000	                          call 0x40011eb	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x40011eb	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	xdiffi.c	FUNCTION_3	IF_6
0x40011f0	            0xeb14	                           jmp 0x4001206	       377	xdiffi.c	FUNCTION_3	IF_6
0x40011f2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       380	xdiffi.c	FUNCTION_3	CALL_12
0x40011f9	          0x4889c7	                            mov rdi, rax	       380	xdiffi.c	FUNCTION_3	CALL_12
0x40011fc	      0xe800000000	                          call 0x4001201	       380	xdiffi.c	FUNCTION_3	CALL_12
0x4001201	      0xb800000000	                              mov eax, 0	       382	xdiffi.c	FUNCTION_3
0x4001206	        0x488b4df8	                mov rcx, qword [rbp - 8]	       383	xdiffi.c	FUNCTION_3
0x400120a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       383	xdiffi.c	FUNCTION_3
0x4001213	            0x7405	                            je 0x400121a	       383	xdiffi.c	FUNCTION_3
0x4001215	      0xe800000000	                          call 0x400121a	       383	xdiffi.c	FUNCTION_3
0x400121a	              0xc9	                                   leave	       383	xdiffi.c	FUNCTION_3
0x400121b	              0xc3	                                     ret	       383	xdiffi.c	FUNCTION_3
xdl_change_compact	ELSE,2:DO,1:functions,0:WHILE,5:IF,17:FOR,1:CALL,26:SWITCH,0	228
0x4001ada	              0x55	                                push rbp	       815	xdiffi.c	FUNCTION_16
0x4001adb	          0x4889e5	                            mov rbp, rsp	       815	xdiffi.c	FUNCTION_16
0x4001ade	    0x4881eca00000	                           sub rsp, 0xa0	       815	xdiffi.c	FUNCTION_16
0x4001ae5	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       815	xdiffi.c	FUNCTION_16
0x4001aec	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       815	xdiffi.c	FUNCTION_16
0x4001af3	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       815	xdiffi.c	FUNCTION_16
0x4001afa	    0x64488b042528	                mov rax, qword fs:[0x28]	       815	xdiffi.c	FUNCTION_16
0x4001b03	        0x488945f8	                mov qword [rbp - 8], rax	       815	xdiffi.c	FUNCTION_16
0x4001b07	            0x31c0	                            xor eax, eax	       815	xdiffi.c	FUNCTION_16
0x4001b09	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       820	xdiffi.c	FUNCTION_16	CALL_1
0x4001b0d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       820	xdiffi.c	FUNCTION_16	CALL_1
0x4001b14	          0x4889d6	                            mov rsi, rdx	       820	xdiffi.c	FUNCTION_16	CALL_1
0x4001b17	          0x4889c7	                            mov rdi, rax	       820	xdiffi.c	FUNCTION_16	CALL_1
0x4001b1a	      0xe83bfcffff	                     call sym.group_init	       820	xdiffi.c	FUNCTION_16	CALL_1
0x4001b1f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       821	xdiffi.c	FUNCTION_16	CALL_2
0x4001b23	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       821	xdiffi.c	FUNCTION_16	CALL_2
0x4001b2a	          0x4889d6	                            mov rsi, rdx	       821	xdiffi.c	FUNCTION_16	CALL_2
0x4001b2d	          0x4889c7	                            mov rdi, rax	       821	xdiffi.c	FUNCTION_16	CALL_2
0x4001b30	      0xe825fcffff	                     call sym.group_init	       821	xdiffi.c	FUNCTION_16	CALL_2
0x4001b35	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001b39	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001b3d	          0x4839c2	                            cmp rdx, rax	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001b40	     0xf84a6020000	                            je 0x4001dec	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001b46	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b4a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b4e	          0x4829c2	                            sub rdx, rax	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b51	          0x4889d0	                            mov rax, rdx	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b54	        0x488945b0	             mov qword [rbp - 0x50], rax	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b58	    0x48c74598ffff	mov qword [rbp - 0x68], 0xffffffffffffffff	       841	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001b60	            0xeb24	                           jmp 0x4001b86	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b62	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b66	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b6d	          0x4889d6	                            mov rsi, rdx	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b70	          0x4889c7	                            mov rdi, rax	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b73	      0xe8bdfcffff	                 call sym.group_previous	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b78	            0x85c0	                           test eax, eax	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b7a	            0x740a	                            je 0x4001b86	       845	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_2	CALL_4
0x4001b7c	      0xbf00000000	                              mov edi, 0	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001b81	      0xe821ffffff	                        call sym.xdl_bug	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001b86	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b8d	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b91	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b98	          0x4889ce	                            mov rsi, rcx	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b9b	          0x4889c7	                            mov rdi, rax	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001b9e	      0xe8fefdffff	                 call sym.group_slide_up	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001ba3	            0x85c0	                           test eax, eax	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001ba5	            0x74bb	                            je 0x4001b62	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001ba7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001bab	        0x488945b8	             mov qword [rbp - 0x48], rax	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001baf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bb3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bb7	          0x4839c2	                            cmp rdx, rax	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bba	            0x7e08	                           jle 0x4001bc4	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       855	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bc0	        0x48894598	             mov qword [rbp - 0x68], rax	       855	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001bc4	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001bcb	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001bcf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001bd6	          0x4889ce	                            mov rsi, rcx	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001bd9	          0x4889c7	                            mov rdi, rax	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001bdc	      0xe8cdfcffff	               call sym.group_slide_down	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001be1	            0x85c0	                           test eax, eax	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001be3	            0x753b	                           jne 0x4001c20	       859	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4	CALL_6
0x4001be5	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001be9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bf0	          0x4889d6	                            mov rsi, rdx	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bf3	          0x4889c7	                            mov rdi, rax	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bf6	      0xe8b9fbffff	                     call sym.group_next	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bfb	            0x85c0	                           test eax, eax	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bfd	            0x740a	                            je 0x4001c09	       861	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_5	CALL_7
0x4001bff	      0xbf00000000	                              mov edi, 0	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001c04	      0xe89efeffff	                        call sym.xdl_bug	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001c09	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c11	          0x4839c2	                            cmp rdx, rax	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c14	            0x7eae	                           jle 0x4001bc4	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c1a	        0x48894598	             mov qword [rbp - 0x68], rax	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001c1e	            0xeba4	                           jmp 0x4001bc4	       866	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2
0x4001c20	              0x90	                                     nop	       860	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_4
0x4001c21	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c25	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c29	          0x4829c2	                            sub rdx, rax	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c2c	          0x4889d0	                            mov rax, rdx	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c2f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c33	     0xf850dffffff	                           jne 0x4001b46	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001c39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x4001c3d	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x4001c41	     0xf84a6010000	                            je 0x4001ded	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x4001c47	      0x48837d98ff	cmp qword [rbp - 0x68], 0xffffffffffffffff	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001c4c	            0x7463	                            je 0x4001cb1	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001c4e	            0xeb4f	                           jmp 0x4001c9f	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001c50	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c57	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c5b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c62	          0x4889ce	                            mov rsi, rcx	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c65	          0x4889c7	                            mov rdi, rax	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c68	      0xe834fdffff	                 call sym.group_slide_up	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c6d	            0x85c0	                           test eax, eax	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c6f	            0x740a	                            je 0x4001c7b	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001c71	      0xbf00000000	                              mov edi, 0	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001c76	      0xe82cfeffff	                        call sym.xdl_bug	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001c7b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c7f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c86	          0x4889d6	                            mov rsi, rdx	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c89	          0x4889c7	                            mov rdi, rax	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c8c	      0xe8a4fbffff	                 call sym.group_previous	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c91	            0x85c0	                           test eax, eax	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c93	            0x740a	                            je 0x4001c9f	       888	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_10	CALL_11
0x4001c95	      0xbf00000000	                              mov edi, 0	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x4001c9a	      0xe808feffff	                        call sym.xdl_bug	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x4001c9f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001ca3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001ca7	          0x4839c2	                            cmp rdx, rax	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001caa	            0x74a4	                            je 0x4001c50	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001cac	      0xe93c010000	                           jmp 0x4001ded	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001cb1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001cb8	      0x2500008000	                       and eax, 0x800000	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001cbd	          0x4885c0	                           test rax, rax	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001cc0	     0xf8427010000	                            je 0x4001ded	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001cc6	    0x48c745a8ffff	mov qword [rbp - 0x58], 0xffffffffffffffff	       903	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001cce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001cd2	        0x488945a0	             mov qword [rbp - 0x60], rax	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001cd6	      0xe9a6000000	                           jmp 0x4001d81	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001cdb	    0xc74590000000	               mov dword [rbp - 0x70], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001ce2	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001ce9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001ced	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001cf1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001cf8	          0x4889ce	                            mov rsi, rcx	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001cfb	          0x4889c7	                            mov rdi, rax	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001cfe	      0xe8bcf6ffff	                  call sym.measure_split	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001d03	        0x488d5590	                   lea rdx, [rbp - 0x70]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001d07	        0x488d45e0	                   lea rax, [rbp - 0x20]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001d0b	          0x4889d6	                            mov rsi, rdx	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001d0e	          0x4889c7	                            mov rdi, rax	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001d11	      0xe83df8ffff	                call sym.score_add_split	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001d16	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d1a	        0x482b45b0	             sub rax, qword [rbp - 0x50]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d1e	          0x4889c1	                            mov rcx, rax	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d21	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d25	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d2c	          0x4889ce	                            mov rsi, rcx	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d2f	          0x4889c7	                            mov rdi, rax	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d32	      0xe888f6ffff	                  call sym.measure_split	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001d37	        0x488d5590	                   lea rdx, [rbp - 0x70]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001d3b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001d3f	          0x4889d6	                            mov rsi, rdx	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001d42	          0x4889c7	                            mov rdi, rax	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001d45	      0xe809f8ffff	                call sym.score_add_split	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001d4a	      0x48837da8ff	cmp qword [rbp - 0x58], 0xffffffffffffffff	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d4f	            0x7417	                            je 0x4001d68	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d51	        0x488d5580	                   lea rdx, [rbp - 0x80]	       915	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12	CALL_17
0x4001d55	        0x488d4590	                   lea rax, [rbp - 0x70]	       915	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12	CALL_17
0x4001d59	          0x4889d6	                            mov rsi, rdx	       915	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12	CALL_17
0x4001d5c	          0x4889c7	                            mov rdi, rax	       915	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12	CALL_17
0x4001d5f	      0xe896f9ffff	                      call sym.score_cmp	       915	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12	CALL_17
0x4001d64	            0x85c0	                           test eax, eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d66	            0x7f14	                            jg 0x4001d7c	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d68	          0x8b4590	             mov eax, dword [rbp - 0x70]	       916	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d6b	          0x894580	             mov dword [rbp - 0x80], eax	       916	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d6e	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       917	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d71	          0x894584	             mov dword [rbp - 0x7c], eax	       917	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d74	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       918	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d78	        0x488945a8	             mov qword [rbp - 0x58], rax	       918	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001d7c	      0x488345a001	               add qword [rbp - 0x60], 1	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001d81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001d85	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001d89	     0xf8d4cffffff	                           jge 0x4001cdb	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001d8f	            0xeb4f	                           jmp 0x4001de0	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001d91	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001d98	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001d9c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001da3	          0x4889ce	                            mov rsi, rcx	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001da6	          0x4889c7	                            mov rdi, rax	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001da9	      0xe8f3fbffff	                 call sym.group_slide_up	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001dae	            0x85c0	                           test eax, eax	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001db0	            0x740a	                            je 0x4001dbc	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001db2	      0xbf00000000	                              mov edi, 0	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001db7	      0xe8ebfcffff	                        call sym.xdl_bug	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001dbc	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dc0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dc7	          0x4889d6	                            mov rsi, rdx	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dca	          0x4889c7	                            mov rdi, rax	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dcd	      0xe863faffff	                 call sym.group_previous	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dd2	            0x85c0	                           test eax, eax	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dd4	            0x740a	                            je 0x4001de0	       925	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_14	CALL_20
0x4001dd6	      0xbf00000000	                              mov edi, 0	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x4001ddb	      0xe8c7fcffff	                        call sym.xdl_bug	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x4001de0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001de4	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001de8	            0x7fa7	                            jg 0x4001d91	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001dea	            0xeb01	                           jmp 0x4001ded	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001dec	              0x90	                                     nop	       826	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001ded	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001df1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001df8	          0x4889d6	                            mov rsi, rdx	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001dfb	          0x4889c7	                            mov rdi, rax	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001dfe	      0xe8b1f9ffff	                     call sym.group_next	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001e03	            0x85c0	                           test eax, eax	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001e05	            0x752d	                           jne 0x4001e34	       932	xdiffi.c	FUNCTION_16	WHILE_1	IF_15	CALL_22
0x4001e07	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e0b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e12	          0x4889d6	                            mov rsi, rdx	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e15	          0x4889c7	                            mov rdi, rax	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e18	      0xe897f9ffff	                     call sym.group_next	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e1d	            0x85c0	                           test eax, eax	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e1f	     0xf8410fdffff	                            je 0x4001b35	       934	xdiffi.c	FUNCTION_16	WHILE_1	IF_16	CALL_23
0x4001e25	      0xbf00000000	                              mov edi, 0	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x4001e2a	      0xe878fcffff	                        call sym.xdl_bug	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x4001e2f	      0xe901fdffff	                           jmp 0x4001b35	       936	xdiffi.c	FUNCTION_16	WHILE_1
0x4001e34	              0x90	                                     nop	       933	xdiffi.c	FUNCTION_16	WHILE_1	IF_15
0x4001e35	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e39	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e40	          0x4889d6	                            mov rsi, rdx	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e43	          0x4889c7	                            mov rdi, rax	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e46	      0xe869f9ffff	                     call sym.group_next	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e4b	            0x85c0	                           test eax, eax	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e4d	            0x750a	                           jne 0x4001e59	       938	xdiffi.c	FUNCTION_16	IF_17	CALL_25
0x4001e4f	      0xbf00000000	                              mov edi, 0	       939	xdiffi.c	FUNCTION_16	CALL_26
0x4001e54	      0xe84efcffff	                        call sym.xdl_bug	       939	xdiffi.c	FUNCTION_16	CALL_26
0x4001e59	      0xb800000000	                              mov eax, 0	       941	xdiffi.c	FUNCTION_16
0x4001e5e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       942	xdiffi.c	FUNCTION_16
0x4001e62	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       942	xdiffi.c	FUNCTION_16
0x4001e6b	            0x7405	                            je 0x4001e72	       942	xdiffi.c	FUNCTION_16
0x4001e6d	      0xe800000000	                          call 0x4001e72	       942	xdiffi.c	FUNCTION_16
0x4001e72	              0xc9	                                   leave	       942	xdiffi.c	FUNCTION_16
0x4001e73	              0xc3	                                     ret	       942	xdiffi.c	FUNCTION_16
xdl_build_script	ELSE,0:DO,0:functions,0:WHILE,0:IF,2:FOR,3:CALL,2:SWITCH,0	89
0x4001e74	              0x55	                                push rbp	       945	xdiffi.c	FUNCTION_17
0x4001e75	          0x4889e5	                            mov rbp, rsp	       945	xdiffi.c	FUNCTION_17
0x4001e78	        0x4883ec50	                           sub rsp, 0x50	       945	xdiffi.c	FUNCTION_17
0x4001e7c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       945	xdiffi.c	FUNCTION_17
0x4001e80	        0x488975b0	             mov qword [rbp - 0x50], rsi	       945	xdiffi.c	FUNCTION_17
0x4001e84	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       946	xdiffi.c	FUNCTION_17
0x4001e8c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       947	xdiffi.c	FUNCTION_17
0x4001e90	        0x488b4068	            mov rax, qword [rax + 0x68] 	       947	xdiffi.c	FUNCTION_17
0x4001e94	        0x488945d8	             mov qword [rbp - 0x28], rax	       947	xdiffi.c	FUNCTION_17
0x4001e98	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       947	xdiffi.c	FUNCTION_17
0x4001e9c	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       947	xdiffi.c	FUNCTION_17
0x4001ea3	        0x488945e0	             mov qword [rbp - 0x20], rax	       947	xdiffi.c	FUNCTION_17
0x4001ea7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001eab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001eaf	        0x488945c8	             mov qword [rbp - 0x38], rax	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001eb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001eb7	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001ebe	        0x488945d0	             mov qword [rbp - 0x30], rax	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001ec2	      0xe9d7000000	                           jmp 0x4001f9e	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001ec7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ecb	        0x488d50ff	                      lea rdx, [rax - 1]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ecf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ed3	          0x4801d0	                            add rax, rdx	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ed6	           0xfb600	                   movzx eax, byte [rax]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ed9	            0x84c0	                             test al, al	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001edb	            0x751a	                           jne 0x4001ef7	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001edd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ee1	        0x488d50ff	                      lea rdx, [rax - 1]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ee5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ee9	          0x4801d0	                            add rax, rdx	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001eec	           0xfb600	                   movzx eax, byte [rax]	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001eef	            0x84c0	                             test al, al	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ef1	     0xf849d000000	                            je 0x4001f94	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001ef7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001efb	        0x488945e8	             mov qword [rbp - 0x18], rax	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001eff	            0xeb05	                           jmp 0x4001f06	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f01	      0x48836dc801	               sub qword [rbp - 0x38], 1	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f0a	        0x488d50ff	                      lea rdx, [rax - 1]	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f12	          0x4801d0	                            add rax, rdx	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f15	           0xfb600	                   movzx eax, byte [rax]	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f18	            0x84c0	                             test al, al	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f1a	            0x75e5	                           jne 0x4001f01	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001f1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f20	        0x488945f0	             mov qword [rbp - 0x10], rax	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f24	            0xeb05	                           jmp 0x4001f2b	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f26	      0x48836dd001	               sub qword [rbp - 0x30], 1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f2b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f2f	        0x488d50ff	                      lea rdx, [rax - 1]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f33	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f37	          0x4801d0	                            add rax, rdx	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f3a	           0xfb600	                   movzx eax, byte [rax]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f3d	            0x84c0	                             test al, al	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f3f	            0x75e5	                           jne 0x4001f26	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001f41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f45	        0x482b45d0	             sub rax, qword [rbp - 0x30]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f49	          0x4889c7	                            mov rdi, rax	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f50	        0x482b45c8	             sub rax, qword [rbp - 0x38]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f54	          0x4889c1	                            mov rcx, rax	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f57	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f5b	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f63	          0x4989f8	                             mov r8, rdi	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f66	          0x4889c7	                            mov rdi, rax	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f69	      0xe8aef2ffff	                 call sym.xdl_add_change	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f6e	        0x488945f8	                mov qword [rbp - 8], rax	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f72	      0x48837df800	                  cmp qword [rbp - 8], 0	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f77	            0x7513	                           jne 0x4001f8c	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x4001f79	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       959	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_2
0x4001f7d	          0x4889c7	                            mov rdi, rax	       959	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_2
0x4001f80	      0xe800000000	                          call 0x4001f85	       959	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_2
0x4001f85	      0xb8ffffffff	                     mov eax, 0xffffffff	       960	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4001f8a	            0xeb38	                           jmp 0x4001fc4	       960	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4001f8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       962	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001f90	        0x488945c0	             mov qword [rbp - 0x40], rax	       962	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001f94	      0x48836dc801	               sub qword [rbp - 0x38], 1	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001f99	      0x48836dd001	               sub qword [rbp - 0x30], 1	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001f9e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001fa3	     0xf891effffff	                           jns 0x4001ec7	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001fa9	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001fae	     0xf8913ffffff	                           jns 0x4001ec7	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001fb4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       965	xdiffi.c	FUNCTION_17
0x4001fb8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       965	xdiffi.c	FUNCTION_17
0x4001fbc	          0x488910	                    mov qword [rax], rdx	       965	xdiffi.c	FUNCTION_17
0x4001fbf	      0xb800000000	                              mov eax, 0	       967	xdiffi.c	FUNCTION_17
0x4001fc4	              0xc9	                                   leave	       968	xdiffi.c	FUNCTION_17
0x4001fc5	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
xdl_add_change	ELSE,0:DO,0:functions,0:WHILE,0:IF,1:FOR,0:CALL,1:SWITCH,0	35
0x400121c	              0x55	                                push rbp	       386	xdiffi.c	FUNCTION_4
0x400121d	          0x4889e5	                            mov rbp, rsp	       386	xdiffi.c	FUNCTION_4
0x4001220	        0x4883ec40	                           sub rsp, 0x40	       386	xdiffi.c	FUNCTION_4
0x4001224	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	xdiffi.c	FUNCTION_4
0x4001228	        0x488975e0	             mov qword [rbp - 0x20], rsi	       386	xdiffi.c	FUNCTION_4
0x400122c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       386	xdiffi.c	FUNCTION_4
0x4001230	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       386	xdiffi.c	FUNCTION_4
0x4001234	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       386	xdiffi.c	FUNCTION_4
0x4001238	      0xbf30000000	                           mov edi, 0x30	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x400123d	      0xe800000000	                          call 0x4001242	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001242	        0x488945f8	                mov qword [rbp - 8], rax	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001246	      0x48837df800	                  cmp qword [rbp - 8], 0	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x400124b	            0x7507	                           jne 0x4001254	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x400124d	      0xb800000000	                              mov eax, 0	       390	xdiffi.c	FUNCTION_4	IF_1
0x4001252	            0xeb4a	                           jmp 0x400129e	       390	xdiffi.c	FUNCTION_4	IF_1
0x4001254	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	xdiffi.c	FUNCTION_4
0x4001258	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       392	xdiffi.c	FUNCTION_4
0x400125c	          0x488910	                    mov qword [rax], rdx	       392	xdiffi.c	FUNCTION_4
0x400125f	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	xdiffi.c	FUNCTION_4
0x4001263	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       393	xdiffi.c	FUNCTION_4
0x4001267	        0x48895008	                mov qword [rax + 8], rdx	       393	xdiffi.c	FUNCTION_4
0x400126b	        0x488b45f8	                mov rax, qword [rbp - 8]	       394	xdiffi.c	FUNCTION_4
0x400126f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       394	xdiffi.c	FUNCTION_4
0x4001273	        0x48895010	             mov qword [rax + 0x10], rdx	       394	xdiffi.c	FUNCTION_4
0x4001277	        0x488b45f8	                mov rax, qword [rbp - 8]	       395	xdiffi.c	FUNCTION_4
0x400127b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       395	xdiffi.c	FUNCTION_4
0x400127f	        0x48895018	             mov qword [rax + 0x18], rdx	       395	xdiffi.c	FUNCTION_4
0x4001283	        0x488b45f8	                mov rax, qword [rbp - 8]	       396	xdiffi.c	FUNCTION_4
0x4001287	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       396	xdiffi.c	FUNCTION_4
0x400128b	        0x48895020	             mov qword [rax + 0x20], rdx	       396	xdiffi.c	FUNCTION_4
0x400128f	        0x488b45f8	                mov rax, qword [rbp - 8]	       397	xdiffi.c	FUNCTION_4
0x4001293	    0xc74028000000	               mov dword [rax + 0x28], 0	       397	xdiffi.c	FUNCTION_4
0x400129a	        0x488b45f8	                mov rax, qword [rbp - 8]	       399	xdiffi.c	FUNCTION_4
0x400129e	              0xc9	                                   leave	       400	xdiffi.c	FUNCTION_4
0x400129f	              0xc3	                                     ret	       400	xdiffi.c	FUNCTION_4
recs_match	ELSE,0:DO,0:functions,0:WHILE,0:IF,0:FOR,0:CALL,1:SWITCH,0	31
0x40012a0	              0x55	                                push rbp	       404	xdiffi.c	FUNCTION_5
0x40012a1	          0x4889e5	                            mov rbp, rsp	       404	xdiffi.c	FUNCTION_5
0x40012a4	        0x4883ec20	                           sub rsp, 0x20	       404	xdiffi.c	FUNCTION_5
0x40012a8	        0x48897df8	                mov qword [rbp - 8], rdi	       404	xdiffi.c	FUNCTION_5
0x40012ac	        0x488975f0	             mov qword [rbp - 0x10], rsi	       404	xdiffi.c	FUNCTION_5
0x40012b0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       404	xdiffi.c	FUNCTION_5
0x40012b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       405	xdiffi.c	FUNCTION_5
0x40012b8	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x40012bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       405	xdiffi.c	FUNCTION_5
0x40012c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x40012c4	          0x4839c2	                            cmp rdx, rax	       405	xdiffi.c	FUNCTION_5
0x40012c7	            0x753a	                           jne 0x4001303	       405	xdiffi.c	FUNCTION_5
0x40012c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012cd	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012d5	        0x488b5008	                mov rdx, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012dd	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012e5	        0x488b4008	                mov rax, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012e9	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012ed	          0x4989f8	                             mov r8, rdi	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012f0	          0x4889c7	                            mov rdi, rax	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012f3	      0xe800000000	                          call 0x40012f8	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012f8	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x40012fa	            0x7407	                            je 0x4001303	       405	xdiffi.c	FUNCTION_5
0x40012fc	      0xb801000000	                              mov eax, 1	       405	xdiffi.c	FUNCTION_5
0x4001301	            0xeb05	                           jmp 0x4001308	       405	xdiffi.c	FUNCTION_5
0x4001303	      0xb800000000	                              mov eax, 0	       405	xdiffi.c	FUNCTION_5
0x4001308	              0xc9	                                   leave	       409	xdiffi.c	FUNCTION_5
0x4001309	              0xc3	                                     ret	       409	xdiffi.c	FUNCTION_5
xdl_mark_ignorable	ELSE,0:DO,0:functions,0:WHILE,0:IF,0:FOR,3:CALL,2:SWITCH,0	87
0x40020f9	              0x55	                                push rbp	       998	xdiffi.c	FUNCTION_20
0x40020fa	          0x4889e5	                            mov rbp, rsp	       998	xdiffi.c	FUNCTION_20
0x40020fd	        0x4883ec40	                           sub rsp, 0x40	       998	xdiffi.c	FUNCTION_20
0x4002101	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       998	xdiffi.c	FUNCTION_20
0x4002105	        0x488975d0	             mov qword [rbp - 0x30], rsi	       998	xdiffi.c	FUNCTION_20
0x4002109	        0x488955c8	             mov qword [rbp - 0x38], rdx	       998	xdiffi.c	FUNCTION_20
0x400210d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4002111	        0x488945e8	             mov qword [rbp - 0x18], rax	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4002115	      0xe927010000	                           jmp 0x4002241	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400211a	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x4002121	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4002125	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4002129	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x400212d	        0x488b4008	                mov rax, qword [rax + 8]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4002131	        0x48c1e003	                              shl rax, 3	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4002135	          0x4801d0	                            add rax, rdx	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4002138	        0x488945f8	                mov qword [rbp - 8], rax	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x400213c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4002144	            0xeb4b	                           jmp 0x4002191	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4002146	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400214a	    0x488d14c50000	                        lea rdx, [rax*8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002152	        0x488b45f8	                mov rax, qword [rbp - 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002156	          0x4801d0	                            add rax, rdx	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002159	          0x488b00	                    mov rax, qword [rax]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400215c	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002160	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002164	    0x488d14c50000	                        lea rdx, [rax*8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400216c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002170	          0x4801d0	                            add rax, rdx	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002173	          0x488b00	                    mov rax, qword [rax]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002176	        0x488b4008	                mov rax, qword [rax + 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400217a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400217e	          0x4889ce	                            mov rsi, rcx	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002181	          0x4889c7	                            mov rdi, rax	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002184	      0xe800000000	                          call 0x4002189	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4002189	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400218c	      0x488345f001	               add qword [rbp - 0x10], 1	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4002191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4002195	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4002199	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400219d	            0x7e06	                           jle 0x40021a5	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400219f	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40021a3	            0x75a1	                           jne 0x4002146	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40021a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021a9	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021b4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021b8	        0x48c1e003	                              shl rax, 3	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021bc	          0x4801d0	                            add rax, rdx	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021bf	        0x488945f8	                mov qword [rbp - 8], rax	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40021c3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40021cb	            0xeb4b	                           jmp 0x4002218	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40021cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021d1	    0x488d14c50000	                        lea rdx, [rax*8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021dd	          0x4801d0	                            add rax, rdx	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021e0	          0x488b00	                    mov rax, qword [rax]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021e3	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021eb	    0x488d14c50000	                        lea rdx, [rax*8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021f7	          0x4801d0	                            add rax, rdx	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021fa	          0x488b00	                    mov rax, qword [rax]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40021fd	        0x488b4008	                mov rax, qword [rax + 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4002201	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4002205	          0x4889ce	                            mov rsi, rcx	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4002208	          0x4889c7	                            mov rdi, rax	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400220b	      0xe800000000	                          call 0x4002210	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4002210	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4002213	      0x488345f001	               add qword [rbp - 0x10], 1	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4002218	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400221c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4002220	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4002224	            0x7e06	                           jle 0x400222c	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4002226	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400222a	            0x75a1	                           jne 0x40021cd	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400222c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4002230	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4002233	          0x895028	             mov dword [rax + 0x28], edx	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4002236	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400223a	          0x488b00	                    mov rax, qword [rax]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400223d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4002241	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4002246	     0xf85cefeffff	                           jne 0x400211a	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400224c	              0x90	                                     nop	      1016	xdiffi.c	FUNCTION_20
0x400224d	              0xc9	                                   leave	      1016	xdiffi.c	FUNCTION_20
0x400224e	              0xc3	                                     ret	      1016	xdiffi.c	FUNCTION_20
score_cmp	ELSE,0:DO,0:functions,0:WHILE,0:IF,0:FOR,0:CALL,0:SWITCH,0	36
0x40016fa	              0x55	                                push rbp	       683	xdiffi.c	FUNCTION_9
0x40016fb	          0x4889e5	                            mov rbp, rsp	       683	xdiffi.c	FUNCTION_9
0x40016fe	        0x48897de8	             mov qword [rbp - 0x18], rdi	       683	xdiffi.c	FUNCTION_9
0x4001702	        0x488975e0	             mov qword [rbp - 0x20], rsi	       683	xdiffi.c	FUNCTION_9
0x4001706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       685	xdiffi.c	FUNCTION_9
0x400170a	            0x8b10	                    mov edx, dword [rax]	       685	xdiffi.c	FUNCTION_9
0x400170c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       685	xdiffi.c	FUNCTION_9
0x4001710	            0x8b00	                    mov eax, dword [rax]	       685	xdiffi.c	FUNCTION_9
0x4001712	            0x39c2	                            cmp edx, eax	       685	xdiffi.c	FUNCTION_9
0x4001714	           0xf9fc0	                                 setg al	       685	xdiffi.c	FUNCTION_9
0x4001717	           0xfb6d0	                           movzx edx, al	       685	xdiffi.c	FUNCTION_9
0x400171a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       686	xdiffi.c	FUNCTION_9
0x400171e	            0x8b08	                    mov ecx, dword [rax]	       686	xdiffi.c	FUNCTION_9
0x4001720	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       686	xdiffi.c	FUNCTION_9
0x4001724	            0x8b00	                    mov eax, dword [rax]	       686	xdiffi.c	FUNCTION_9
0x4001726	            0x39c1	                            cmp ecx, eax	       686	xdiffi.c	FUNCTION_9
0x4001728	           0xf9cc0	                                 setl al	       686	xdiffi.c	FUNCTION_9
0x400172b	           0xfb6c0	                           movzx eax, al	       686	xdiffi.c	FUNCTION_9
0x400172e	            0x29c2	                            sub edx, eax	       685	xdiffi.c	FUNCTION_9
0x4001730	            0x89d0	                            mov eax, edx	       685	xdiffi.c	FUNCTION_9
0x4001732	          0x8945fc	                mov dword [rbp - 4], eax	       685	xdiffi.c	FUNCTION_9
0x4001735	          0x8b45fc	                mov eax, dword [rbp - 4]	       688	xdiffi.c	FUNCTION_9
0x4001738	          0xc1e002	                              shl eax, 2	       688	xdiffi.c	FUNCTION_9
0x400173b	            0x89c2	                            mov edx, eax	       688	xdiffi.c	FUNCTION_9
0x400173d	          0xc1e204	                              shl edx, 4	       688	xdiffi.c	FUNCTION_9
0x4001740	            0x89d1	                            mov ecx, edx	       688	xdiffi.c	FUNCTION_9
0x4001742	            0x29c1	                            sub ecx, eax	       688	xdiffi.c	FUNCTION_9
0x4001744	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       688	xdiffi.c	FUNCTION_9
0x4001748	          0x8b5004	                mov edx, dword [rax + 4]	       688	xdiffi.c	FUNCTION_9
0x400174b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       688	xdiffi.c	FUNCTION_9
0x400174f	          0x8b4004	                mov eax, dword [rax + 4]	       688	xdiffi.c	FUNCTION_9
0x4001752	            0x29c2	                            sub edx, eax	       688	xdiffi.c	FUNCTION_9
0x4001754	            0x89d0	                            mov eax, edx	       688	xdiffi.c	FUNCTION_9
0x4001756	             0x1c8	                            add eax, ecx	       688	xdiffi.c	FUNCTION_9
0x4001758	              0x5d	                                 pop rbp	       689	xdiffi.c	FUNCTION_9
0x4001759	              0xc3	                                     ret	       689	xdiffi.c	FUNCTION_9
xdl_call_hunk_func	ELSE,0:DO,0:functions,0:WHILE,0:IF,2:FOR,1:CALL,2:SWITCH,0	68
0x4001ffd	              0x55	                                push rbp	       982	xdiffi.c	FUNCTION_19
0x4001ffe	          0x4889e5	                            mov rbp, rsp	       982	xdiffi.c	FUNCTION_19
0x4002001	        0x4883ec40	                           sub rsp, 0x40	       982	xdiffi.c	FUNCTION_19
0x4002005	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       982	xdiffi.c	FUNCTION_19
0x4002009	        0x488975d0	             mov qword [rbp - 0x30], rsi	       982	xdiffi.c	FUNCTION_19
0x400200d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       982	xdiffi.c	FUNCTION_19
0x4002011	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       982	xdiffi.c	FUNCTION_19
0x4002015	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	xdiffi.c	FUNCTION_19
0x400201e	        0x488945f8	                mov qword [rbp - 8], rax	       982	xdiffi.c	FUNCTION_19
0x4002022	            0x31c0	                            xor eax, eax	       982	xdiffi.c	FUNCTION_19
0x4002024	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4002028	        0x488945e8	             mov qword [rbp - 0x18], rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400202c	      0xe99d000000	                           jmp 0x40020ce	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4002031	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x4002035	        0x488d45e8	                   lea rax, [rbp - 0x18]	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x4002039	          0x4889d6	                            mov rsi, rdx	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x400203c	          0x4889c7	                            mov rdi, rax	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x400203f	      0xe800000000	                          call 0x4002044	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x4002044	        0x488945f0	             mov qword [rbp - 0x10], rax	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x4002048	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x400204c	          0x4885c0	                           test rax, rax	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x400204f	     0xf8488000000	                            je 0x40020dd	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x4002055	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002059	        0x488b4028	            mov rax, qword [rax + 0x28] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400205d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002061	          0x4c8b02	                     mov r8, qword [rdx]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002064	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4002068	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x400206c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4002070	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4002074	          0x4801d1	                            add rcx, rdx	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4002077	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x400207b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x400207f	          0x4829d1	                            sub rcx, rdx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002082	          0x4989c9	                             mov r9, rcx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002085	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4002089	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400208d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002091	        0x488b7108	                mov rsi, qword [rcx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002095	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4002099	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400209d	          0x4801ce	                            add rsi, rcx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020a0	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020a4	        0x488b4908	                mov rcx, qword [rcx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020a8	          0x4829ce	                            sub rsi, rcx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020ab	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020af	        0x488b7908	                mov rdi, qword [rcx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020b3	          0x4c89c9	                             mov rcx, r9	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020b6	            0xffd0	                                call rax	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020b8	            0x85c0	                           test eax, eax	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020ba	            0x7907	                           jns 0x40020c3	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40020bc	      0xb8ffffffff	                     mov eax, 0xffffffff	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40020c1	            0xeb20	                           jmp 0x40020e3	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40020c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020c7	          0x488b00	                    mov rax, qword [rax]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020ca	        0x488945e8	             mov qword [rbp - 0x18], rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020d2	          0x4885c0	                           test rax, rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020d5	     0xf8556ffffff	                           jne 0x4002031	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020db	            0xeb01	                           jmp 0x40020de	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40020dd	              0x90	                                     nop	       988	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40020de	      0xb800000000	                              mov eax, 0	       994	xdiffi.c	FUNCTION_19
0x40020e3	        0x488b7df8	                mov rdi, qword [rbp - 8]	       995	xdiffi.c	FUNCTION_19
0x40020e7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       995	xdiffi.c	FUNCTION_19
0x40020f0	            0x7405	                            je 0x40020f7	       995	xdiffi.c	FUNCTION_19
0x40020f2	      0xe800000000	                          call 0x40020f7	       995	xdiffi.c	FUNCTION_19
0x40020f7	              0xc9	                                   leave	       995	xdiffi.c	FUNCTION_19
0x40020f8	              0xc3	                                     ret	       995	xdiffi.c	FUNCTION_19
