output_mouse	IF,5:WHILE,0:SWITCH,1:functions,0:CALL,7:FOR,0:ELSE,0:DO,0	161
0x0	              0x55	                                push rbp	         6	mouse.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	         6	mouse.c	FUNCTION_1
0x4	        0x4883ec50	                           sub rsp, 0x50	         6	mouse.c	FUNCTION_1
0x8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	         6	mouse.c	FUNCTION_1
0xc	          0x8975c4	             mov dword [rbp - 0x3c], esi	         6	mouse.c	FUNCTION_1
0xf	          0x8955c0	             mov dword [rbp - 0x40], edx	         6	mouse.c	FUNCTION_1
0x12	          0x894dbc	             mov dword [rbp - 0x44], ecx	         6	mouse.c	FUNCTION_1
0x15	        0x448945b8	             mov dword [rbp - 0x48], r8d	         6	mouse.c	FUNCTION_1
0x19	        0x44894db4	             mov dword [rbp - 0x4c], r9d	         6	mouse.c	FUNCTION_1
0x1d	    0x64488b042528	                mov rax, qword fs:[0x28]	         6	mouse.c	FUNCTION_1
0x26	        0x488945f8	                mov qword [rbp - 8], rax	         6	mouse.c	FUNCTION_1
0x2a	            0x31c0	                            xor eax, eax	         6	mouse.c	FUNCTION_1
0x2c	        0xc165bc02	               shl dword [rbp - 0x44], 2	         7	mouse.c	FUNCTION_1
0x30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	         9	mouse.c	FUNCTION_1	SWITCH_1
0x34	          0x8b4070	            mov eax, dword [rax + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x37	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x3a	     0xf8491000000	                            je 0x4000111	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x43	            0x7217	                            jb 0x400009c	         9	mouse.c	FUNCTION_1	SWITCH_1
0x45	          0x83f802	                              cmp eax, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x48	     0xf843f010000	                            je 0x40001cd	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4e	          0x83f803	                              cmp eax, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x51	     0xf848d010000	                            je 0x4000224	         9	mouse.c	FUNCTION_1	SWITCH_1
0x57	      0xe9d0010000	                           jmp 0x400026c	        52	mouse.c	FUNCTION_1
0x5c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x5f	          0x83c021	                           add eax, 0x21	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x62	      0x3dff000000	                           cmp eax, 0xff	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x67	            0x7e07	                           jle 0x40000b0	        11	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x69	    0xc745b8de0000	           mov dword [rbp - 0x48], 0xde 	        12	mouse.c	FUNCTION_1	SWITCH_1	IF_1
0x70	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x73	          0x83c021	                           add eax, 0x21	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x76	      0x3dff000000	                           cmp eax, 0xff	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x7b	            0x7e07	                           jle 0x40000c4	        13	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x7d	    0xc745b4de0000	           mov dword [rbp - 0x4c], 0xde 	        14	mouse.c	FUNCTION_1	SWITCH_1	IF_2
0x84	        0x837dc000	               cmp dword [rbp - 0x40], 0	        16	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x88	            0x7507	                           jne 0x40000d1	        16	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x8a	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x91	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x94	          0x8d7021	                   lea esi, [rax + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x97	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x9a	          0x8d4821	                   lea ecx, [rax + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x9d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        20	mouse.c	FUNCTION_1	SWITCH_1
0xa0	           0xb45bc	              or eax, dword [rbp - 0x44]	        20	mouse.c	FUNCTION_1	SWITCH_1
0xa3	          0x8d5020	                   lea edx, [rax + 0x20]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xa6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xaa	          0x488b00	                    mov rax, qword [rax]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xad	          0x4189f1	                            mov r9d, esi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xb0	          0x4189c8	                            mov r8d, ecx	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xb3	            0x89d1	                            mov ecx, edx	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xb5	      0xba00000000	                              mov edx, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xba	      0xbe9b000000	                           mov esi, 0x9b	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xbf	          0x4889c7	                            mov rdi, rax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xc2	      0xb800000000	                              mov eax, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xc7	      0xe800000000	                          call 0x400010c	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0xcc	      0xe95b010000	                           jmp 0x400026c	        21	mouse.c	FUNCTION_1	SWITCH_1
0xd1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        25	mouse.c	FUNCTION_1	SWITCH_1
0xd9	        0x837dc000	               cmp dword [rbp - 0x40], 0	        27	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0xdd	            0x7507	                           jne 0x4000126	        27	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0xdf	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0xe6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xee	          0x4801c2	                            add rdx, rax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xf1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xf4	           0xb45bc	              or eax, dword [rbp - 0x44]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xf7	          0x83c020	                           add eax, 0x20	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xfa	            0x4898	                                    cdqe	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xfc	          0x4889d6	                            mov rsi, rdx	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0xff	          0x4889c7	                            mov rdi, rax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x102	      0xe800000000	                          call 0x4000147	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x107	            0x4898	                                    cdqe	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x109	        0x480145d8	            add qword [rbp - 0x28], rax 	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x10d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x111	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x115	          0x4801c2	                            add rdx, rax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x118	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x11b	          0x83c021	                           add eax, 0x21	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x11e	            0x4898	                                    cdqe	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x120	          0x4889d6	                            mov rsi, rdx	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x123	          0x4889c7	                            mov rdi, rax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x126	      0xe800000000	                          call 0x400016b	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x12b	            0x4898	                                    cdqe	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x12d	        0x480145d8	            add qword [rbp - 0x28], rax 	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x131	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x135	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x139	          0x4801c2	                            add rdx, rax	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x13c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x13f	          0x83c021	                           add eax, 0x21	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x142	            0x4898	                                    cdqe	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x144	          0x4889d6	                            mov rsi, rdx	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x147	          0x4889c7	                            mov rdi, rax	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x14a	      0xe800000000	                          call 0x400018f	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x14f	            0x4898	                                    cdqe	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x151	        0x480145d8	            add qword [rbp - 0x28], rax 	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x155	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x159	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x15d	          0x4801d0	                            add rax, rdx	        33	mouse.c	FUNCTION_1	SWITCH_1
0x160	          0xc60000	                       mov byte [rax], 0	        33	mouse.c	FUNCTION_1	SWITCH_1
0x163	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x167	          0x488b00	                    mov rax, qword [rax]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x16a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x16e	          0x4889d1	                            mov rcx, rdx	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x171	      0xba00000000	                              mov edx, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x176	      0xbe9b000000	                           mov esi, 0x9b	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x17b	          0x4889c7	                            mov rdi, rax	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x17e	      0xb800000000	                              mov eax, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x183	      0xe800000000	                          call 0x40001c8	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x188	      0xe99f000000	                           jmp 0x400026c	        37	mouse.c	FUNCTION_1	SWITCH_1
0x18d	        0x837dc000	               cmp dword [rbp - 0x40], 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x191	            0x7407	                            je 0x40001da	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x193	      0xbf4d000000	                           mov edi, 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x198	            0xeb05	                           jmp 0x40001df	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x19a	      0xbf6d000000	                           mov edi, 0x6d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x19f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1a2	          0x8d7001	                      lea esi, [rax + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1a5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1a8	          0x8d4801	                      lea ecx, [rax + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1ab	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1ae	           0xb45bc	              or eax, dword [rbp - 0x44]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1b1	            0x89c2	                            mov edx, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1b7	          0x488b00	                    mov rax, qword [rax]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1ba	        0x4883ec08	                              sub rsp, 8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1be	              0x57	                                push rdi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1bf	          0x4189f1	                            mov r9d, esi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1c2	          0x4189c8	                            mov r8d, ecx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1c5	            0x89d1	                            mov ecx, edx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1c7	      0xba00000000	                              mov edx, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1cc	      0xbe9b000000	                           mov esi, 0x9b	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1d1	          0x4889c7	                            mov rdi, rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1d4	      0xb800000000	                              mov eax, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1d9	      0xe800000000	                          call 0x400021e	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1de	        0x4883c410	                           add rsp, 0x10	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x1e2	            0xeb48	                           jmp 0x400026c	        42	mouse.c	FUNCTION_1	SWITCH_1
0x1e4	        0x837dc000	               cmp dword [rbp - 0x40], 0	        45	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x1e8	            0x7507	                           jne 0x4000231	        45	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x1ea	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x1f1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x1f4	          0x8d7001	                      lea esi, [rax + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x1f7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x1fa	          0x8d4801	                      lea ecx, [rax + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x1fd	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x200	           0xb45bc	              or eax, dword [rbp - 0x44]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x203	            0x89c2	                            mov edx, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x205	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x209	          0x488b00	                    mov rax, qword [rax]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x20c	          0x4189f1	                            mov r9d, esi	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x20f	          0x4189c8	                            mov r8d, ecx	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x212	            0x89d1	                            mov ecx, edx	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x214	      0xba00000000	                              mov edx, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x219	      0xbe9b000000	                           mov esi, 0x9b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x21e	          0x4889c7	                            mov rdi, rax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x221	      0xb800000000	                              mov eax, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x226	      0xe800000000	                          call 0x400026b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x22b	              0x90	                                     nop	        50	mouse.c	FUNCTION_1	SWITCH_1
0x22c	              0x90	                                     nop	        52	mouse.c	FUNCTION_1
0x22d	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	mouse.c	FUNCTION_1
0x231	    0x644833042528	                xor rax, qword fs:[0x28]	        52	mouse.c	FUNCTION_1
0x23a	            0x7405	                            je 0x4000281	        52	mouse.c	FUNCTION_1
0x23c	      0xe800000000	                          call 0x4000281	        52	mouse.c	FUNCTION_1
0x241	              0xc9	                                   leave	        52	mouse.c	FUNCTION_1
0x242	              0xc3	                                     ret	        52	mouse.c	FUNCTION_1
vterm_mouse_move	IF,2:WHILE,0:SWITCH,0:functions,0:CALL,1:FOR,0:ELSE,0:DO,0	77
0x243	              0x55	                                push rbp	        55	mouse.c	FUNCTION_2
0x244	          0x4889e5	                            mov rbp, rsp	        55	mouse.c	FUNCTION_2
0x247	        0x4883ec30	                           sub rsp, 0x30	        55	mouse.c	FUNCTION_2
0x24b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	mouse.c	FUNCTION_2
0x24f	          0x8975e4	             mov dword [rbp - 0x1c], esi	        55	mouse.c	FUNCTION_2
0x252	          0x8955e0	             mov dword [rbp - 0x20], edx	        55	mouse.c	FUNCTION_2
0x255	          0x894ddc	             mov dword [rbp - 0x24], ecx	        55	mouse.c	FUNCTION_2
0x258	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	mouse.c	FUNCTION_2
0x25c	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        56	mouse.c	FUNCTION_2
0x263	        0x488945f8	                mov qword [rbp - 8], rax	        56	mouse.c	FUNCTION_2
0x267	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	mouse.c	FUNCTION_2	IF_1
0x26b	          0x8b4060	            mov eax, dword [rax + 0x60] 	        58	mouse.c	FUNCTION_2	IF_1
0x26e	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	        58	mouse.c	FUNCTION_2	IF_1
0x271	            0x7510	                           jne 0x40002c3	        58	mouse.c	FUNCTION_2	IF_1
0x273	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	mouse.c	FUNCTION_2	IF_1
0x277	          0x8b4064	            mov eax, dword [rax + 0x64] 	        58	mouse.c	FUNCTION_2	IF_1
0x27a	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        58	mouse.c	FUNCTION_2	IF_1
0x27d	     0xf84ac000000	                            je 0x400036f	        58	mouse.c	FUNCTION_2	IF_1
0x283	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	mouse.c	FUNCTION_2
0x287	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        61	mouse.c	FUNCTION_2
0x28a	          0x895060	             mov dword [rax + 0x60], edx	        61	mouse.c	FUNCTION_2
0x28d	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	mouse.c	FUNCTION_2
0x291	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        62	mouse.c	FUNCTION_2
0x294	          0x895064	             mov dword [rax + 0x64], edx	        62	mouse.c	FUNCTION_2
0x297	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	mouse.c	FUNCTION_2	IF_2
0x29b	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        64	mouse.c	FUNCTION_2	IF_2
0x29e	          0x83e002	                              and eax, 2	        64	mouse.c	FUNCTION_2	IF_2
0x2a1	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x2a3	            0x740b	                            je 0x40002f0	        64	mouse.c	FUNCTION_2	IF_2
0x2a5	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	mouse.c	FUNCTION_2	IF_2
0x2a9	          0x8b4068	            mov eax, dword [rax + 0x68] 	        64	mouse.c	FUNCTION_2	IF_2
0x2ac	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x2ae	            0x750e	                           jne 0x40002fe	        64	mouse.c	FUNCTION_2	IF_2
0x2b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	mouse.c	FUNCTION_2	IF_2
0x2b4	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        65	mouse.c	FUNCTION_2	IF_2
0x2b7	          0x83e004	                              and eax, 4	        65	mouse.c	FUNCTION_2	IF_2
0x2ba	            0x85c0	                           test eax, eax	        64	mouse.c	FUNCTION_2	IF_2
0x2bc	            0x7472	                            je 0x4000370	        64	mouse.c	FUNCTION_2	IF_2
0x2be	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	mouse.c	FUNCTION_2	IF_2
0x2c2	          0x8b4068	            mov eax, dword [rax + 0x68] 	        66	mouse.c	FUNCTION_2	IF_2
0x2c5	          0x83e001	                              and eax, 1	        66	mouse.c	FUNCTION_2	IF_2
0x2c8	            0x85c0	                           test eax, eax	        66	mouse.c	FUNCTION_2	IF_2
0x2ca	            0x7531	                           jne 0x400033d	        66	mouse.c	FUNCTION_2	IF_2
0x2cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	mouse.c	FUNCTION_2	IF_2
0x2d0	          0x8b4068	            mov eax, dword [rax + 0x68] 	        67	mouse.c	FUNCTION_2	IF_2
0x2d3	          0x83e002	                              and eax, 2	        67	mouse.c	FUNCTION_2	IF_2
0x2d6	            0x85c0	                           test eax, eax	        67	mouse.c	FUNCTION_2	IF_2
0x2d8	            0x751c	                           jne 0x4000336	        67	mouse.c	FUNCTION_2	IF_2
0x2da	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	mouse.c	FUNCTION_2	IF_2
0x2de	          0x8b4068	            mov eax, dword [rax + 0x68] 	        68	mouse.c	FUNCTION_2	IF_2
0x2e1	          0x83e004	                              and eax, 4	        68	mouse.c	FUNCTION_2	IF_2
0x2e4	            0x85c0	                           test eax, eax	        68	mouse.c	FUNCTION_2	IF_2
0x2e6	            0x7407	                            je 0x400032f	        68	mouse.c	FUNCTION_2	IF_2
0x2e8	      0xb803000000	                              mov eax, 3	        68	mouse.c	FUNCTION_2	IF_2
0x2ed	            0xeb13	                           jmp 0x4000342	        68	mouse.c	FUNCTION_2	IF_2
0x2ef	      0xb804000000	                              mov eax, 4	        68	mouse.c	FUNCTION_2	IF_2
0x2f4	            0xeb0c	                           jmp 0x4000342	        68	mouse.c	FUNCTION_2	IF_2
0x2f6	      0xb802000000	                              mov eax, 2	        67	mouse.c	FUNCTION_2	IF_2
0x2fb	            0xeb05	                           jmp 0x4000342	        67	mouse.c	FUNCTION_2	IF_2
0x2fd	      0xb801000000	                              mov eax, 1	        66	mouse.c	FUNCTION_2	IF_2
0x302	          0x8945f4	              mov dword [rbp - 0xc], eax	        66	mouse.c	FUNCTION_2	IF_2
0x305	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x308	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x30b	          0x8d701f	                   lea esi, [rax + 0x1f]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x30e	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x311	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x314	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x318	          0x4189f9	                            mov r9d, edi	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x31b	          0x4189c8	                            mov r8d, ecx	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x31e	            0x89d1	                            mov ecx, edx	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x320	      0xba01000000	                              mov edx, 1	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x325	          0x4889c7	                            mov rdi, rax	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x328	      0xe8d3fcffff	                   call sym.output_mouse	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x32d	            0xeb01	                           jmp 0x4000370	        69	mouse.c	FUNCTION_2	IF_2	CALL_1
0x32f	              0x90	                                     nop	        59	mouse.c	FUNCTION_2	IF_1
0x330	              0xc9	                                   leave	        71	mouse.c	FUNCTION_2
0x331	              0xc3	                                     ret	        71	mouse.c	FUNCTION_2
vterm_mouse_button	IF,6:WHILE,0:SWITCH,0:functions,0:CALL,2:FOR,0:ELSE,2:DO,0	91
0x332	              0x55	                                push rbp	        74	mouse.c	FUNCTION_3
0x333	          0x4889e5	                            mov rbp, rsp	        74	mouse.c	FUNCTION_3
0x336	        0x4883ec30	                           sub rsp, 0x30	        74	mouse.c	FUNCTION_3
0x33a	        0x48897de8	             mov qword [rbp - 0x18], rdi	        74	mouse.c	FUNCTION_3
0x33e	          0x8975e4	             mov dword [rbp - 0x1c], esi	        74	mouse.c	FUNCTION_3
0x341	          0x8955e0	             mov dword [rbp - 0x20], edx	        74	mouse.c	FUNCTION_3
0x344	          0x894ddc	             mov dword [rbp - 0x24], ecx	        74	mouse.c	FUNCTION_3
0x347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	mouse.c	FUNCTION_3
0x34b	    0x488b80180100	           mov rax, qword [rax + 0x118] 	        75	mouse.c	FUNCTION_3
0x352	        0x488945f8	                mov qword [rbp - 8], rax	        75	mouse.c	FUNCTION_3
0x356	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	mouse.c	FUNCTION_3
0x35a	          0x8b4068	            mov eax, dword [rax + 0x68] 	        77	mouse.c	FUNCTION_3
0x35d	          0x8945f4	              mov dword [rbp - 0xc], eax	        77	mouse.c	FUNCTION_3
0x360	        0x837de400	               cmp dword [rbp - 0x1c], 0	        79	mouse.c	FUNCTION_3	IF_1
0x364	            0x7e52	                           jle 0x40003f8	        79	mouse.c	FUNCTION_3	IF_1
0x366	        0x837de403	               cmp dword [rbp - 0x1c], 3	        79	mouse.c	FUNCTION_3	IF_1
0x36a	            0x7f4c	                            jg 0x40003f8	        79	mouse.c	FUNCTION_3	IF_1
0x36c	        0x837de000	               cmp dword [rbp - 0x20], 0	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x370	            0x7423	                            je 0x40003d5	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x372	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x376	          0x8b4068	            mov eax, dword [rax + 0x68] 	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x379	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x37c	          0x83ea01	                              sub edx, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x37f	      0xbe01000000	                              mov esi, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x384	            0x89d1	                            mov ecx, edx	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x386	            0xd3e6	                             shl esi, cl	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x388	            0x89f2	                            mov edx, esi	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x38a	             0x9c2	                             or edx, eax	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x38c	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x390	          0x895068	             mov dword [rax + 0x68], edx	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x393	            0xeb23	                           jmp 0x40003f8	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x395	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x399	          0x8b4068	            mov eax, dword [rax + 0x68] 	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x39c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x39f	          0x83ea01	                              sub edx, 1	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3a2	      0xbe01000000	                              mov esi, 1	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3a7	            0x89d1	                            mov ecx, edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3a9	            0xd3e6	                             shl esi, cl	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3ab	            0x89f2	                            mov edx, esi	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3ad	            0xf7d2	                                 not edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3af	            0x21c2	                            and edx, eax	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3b1	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3b5	          0x895068	             mov dword [rax + 0x68], edx	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x3b8	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	mouse.c	FUNCTION_3	IF_3
0x3bc	          0x8b4068	            mov eax, dword [rax + 0x68] 	        87	mouse.c	FUNCTION_3	IF_3
0x3bf	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        87	mouse.c	FUNCTION_3	IF_3
0x3c2	            0x7506	                           jne 0x400040a	        87	mouse.c	FUNCTION_3	IF_3
0x3c4	        0x837de403	               cmp dword [rbp - 0x1c], 3	        87	mouse.c	FUNCTION_3	IF_3
0x3c8	            0x7e78	                           jle 0x4000482	        87	mouse.c	FUNCTION_3	IF_3
0x3ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	mouse.c	FUNCTION_3	IF_4
0x3ce	          0x8b406c	            mov eax, dword [rax + 0x6c] 	        89	mouse.c	FUNCTION_3	IF_4
0x3d1	          0x83e001	                              and eax, 1	        89	mouse.c	FUNCTION_3	IF_4
0x3d4	            0x85c0	                           test eax, eax	        89	mouse.c	FUNCTION_3	IF_4
0x3d6	            0x746d	                            je 0x4000485	        89	mouse.c	FUNCTION_3	IF_4
0x3d8	        0x837de403	               cmp dword [rbp - 0x1c], 3	        92	mouse.c	FUNCTION_3	IF_5
0x3dc	            0x7f2f	                            jg 0x400044d	        92	mouse.c	FUNCTION_3	IF_5
0x3de	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3e2	        0x448b4064	            mov r8d, dword [rax + 0x64] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3e6	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3ea	          0x8b7860	            mov edi, dword [rax + 0x60] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3ed	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3f0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3f3	          0x8d70ff	                      lea esi, [rax - 1]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3f6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x3fd	          0x4589c1	                            mov r9d, r8d	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x400	          0x4189f8	                            mov r8d, edi	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x403	          0x4889c7	                            mov rdi, rax	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x406	      0xe8f5fbffff	                   call sym.output_mouse	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40b	            0xeb39	                           jmp 0x4000486	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x40d	        0x837de405	               cmp dword [rbp - 0x1c], 5	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x411	            0x7f33	                            jg 0x4000486	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x413	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x417	        0x448b4064	            mov r8d, dword [rax + 0x64] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x41b	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x41f	          0x8b7860	            mov edi, dword [rax + 0x60] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x422	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x425	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x428	          0x8d703c	                   lea esi, [rax + 0x3c]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x42b	          0x8b55e0	             mov edx, dword [rbp - 0x20]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x42e	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x432	          0x4589c1	                            mov r9d, r8d	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x435	          0x4189f8	                            mov r8d, edi	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x438	          0x4889c7	                            mov rdi, rax	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x43b	      0xe8c0fbffff	                   call sym.output_mouse	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x440	            0xeb04	                           jmp 0x4000486	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x442	              0x90	                                     nop	        88	mouse.c	FUNCTION_3	IF_3
0x443	            0xeb01	                           jmp 0x4000486	        88	mouse.c	FUNCTION_3	IF_3
0x445	              0x90	                                     nop	        90	mouse.c	FUNCTION_3	IF_4
0x446	              0xc9	                                   leave	        98	mouse.c	FUNCTION_3
0x447	              0xc3	                                     ret	        98	mouse.c	FUNCTION_3
