reflog_expire_config	FOR,0:WHILE,0:functions,0:DO,0:SWITCH,2:ELSE,2:CALL,8:IF,7	130
0x40002f0	            0x4155	                                push r13	       425	reflog.c	FUNCTION_12
0x40002f2	            0x4154	                                push r12	       425	reflog.c	FUNCTION_12
0x40002f4	          0x4989d4	                            mov r12, rdx	       425	reflog.c	FUNCTION_12
0x40002f7	              0x55	                                push rbp	       425	reflog.c	FUNCTION_12
0x40002f8	              0x53	                                push rbx	       425	reflog.c	FUNCTION_12
0x40002f9	          0x4889f5	                            mov rbp, rsi	       425	reflog.c	FUNCTION_12
0x40002fc	      0xbe00000000	                              mov esi, 0	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000301	          0x4889fb	                            mov rbx, rdi	       425	reflog.c	FUNCTION_12
0x4000304	        0x4883ec38	                           sub rsp, 0x38	       425	reflog.c	FUNCTION_12
0x4000308	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400030d	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000312	      0x488d542410	                   lea rdx, [rsp + 0x10]	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000317	    0x64488b042528	                mov rax, qword fs:[0x28]	       425	reflog.c	FUNCTION_12
0x4000320	      0x4889442428	             mov qword [rsp + 0x28], rax	       425	reflog.c	FUNCTION_12
0x4000325	            0x31c0	                            xor eax, eax	       425	reflog.c	FUNCTION_12
0x4000327	      0xe800000000	                          call 0x400032c	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400032c	            0x85c0	                           test eax, eax	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x400032e	     0xf88fc000000	                            js 0x4000430	       432	reflog.c	FUNCTION_12	IF_1	CALL_1
0x4000334	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000339	      0xbf00000000	                              mov edi, 0	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x400033e	      0xb90d000000	                            mov ecx, 0xd	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000343	          0x4889c6	                            mov rsi, rax	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000346	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x4000348	     0xf8412010000	                            je 0x4000460	       435	reflog.c	FUNCTION_12	IF_2	CALL_3
0x400034e	      0xbf00000000	                              mov edi, 0	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000353	      0xb918000000	                           mov ecx, 0x18	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000358	          0x4889c6	                            mov rsi, rax	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x400035b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x400035d	     0xf85cd000000	                           jne 0x4000430	       439	reflog.c	FUNCTION_12	ELSE_1	IF_4	CALL_5
0x4000363	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000368	          0x4889ea	                            mov rdx, rbp	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400036b	          0x4889de	                            mov rsi, rbx	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400036e	      0xe800000000	                          call 0x4000373	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000373	            0x85c0	                           test eax, eax	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x4000375	     0xf8556010000	                           jne 0x40004d1	       441	reflog.c	FUNCTION_12	ELSE_1	IF_4	IF_5	CALL_6
0x400037b	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       446	reflog.c	FUNCTION_12	IF_6
0x4000380	          0x4d85ed	                           test r13, r13	       446	reflog.c	FUNCTION_12	IF_6
0x4000383	     0xf8437010000	                            je 0x40004c0	       446	reflog.c	FUNCTION_12	IF_6
0x4000389	    0x41bc02000000	                             mov r12d, 2	       440	reflog.c	FUNCTION_12	ELSE_1	IF_4
0x400038f	    0x48833d000000	               cmp qword [0x04000397], 0	       406	reflog.c	FUNCTION_11	IF_1
0x4000397	      0x48636c240c	          movsxd rbp, dword [rsp + 0xc] 	       458	reflog.c	FUNCTION_12	CALL_8
0x400039c	     0xf840e010000	                            je 0x40004b0	       406	reflog.c	FUNCTION_11	IF_1
0x40003a2	    0x488b1d000000	            mov rbx, qword [0x040003a9] 	       409	reflog.c	FUNCTION_11	FOR_1
0x40003a9	          0x4885db	                           test rbx, rbx	       409	reflog.c	FUNCTION_11	FOR_1
0x40003ac	            0x7424	                            je 0x40003d2	       409	reflog.c	FUNCTION_11	FOR_1
0x40003ae	            0x6690	                                     nop	       409	reflog.c	FUNCTION_11	FOR_1
0x40003b0	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003b4	          0x4889ea	                            mov rdx, rbp	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003b7	          0x4c89ee	                            mov rsi, r13	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003ba	      0xe800000000	                          call 0x40003bf	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003bf	            0x85c0	                           test eax, eax	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c1	            0x7507	                           jne 0x40003ca	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c3	      0x807c2b1800	          cmp byte [rbx + rbp + 0x18], 0	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003c8	            0x7452	                            je 0x400041c	       410	reflog.c	FUNCTION_11	FOR_1	IF_2	CALL_1
0x40003ca	          0x488b1b	                    mov rbx, qword [rbx]	       409	reflog.c	FUNCTION_11	FOR_1
0x40003cd	          0x4885db	                           test rbx, rbx	       409	reflog.c	FUNCTION_11	FOR_1
0x40003d0	            0x75de	                           jne 0x40003b0	       409	reflog.c	FUNCTION_11	FOR_1
0x40003d2	        0x4883fde7	             cmp rbp, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_65	IF_1
0x40003d6	     0xf8719010000	                            ja 0x40004f5	       785	git-compat-util.h	FUNCTION_65	IF_1
0x40003dc	     0xf84fe000000	                            je 0x40004e0	       785	git-compat-util.h	FUNCTION_65	IF_1
0x40003e2	        0x488d7519	                   lea rsi, [rbp + 0x19]	       414	reflog.c	FUNCTION_11
0x40003e6	      0xbf01000000	                              mov edi, 1	       414	reflog.c	FUNCTION_11
0x40003eb	      0xe800000000	                          call 0x40003f0	       414	reflog.c	FUNCTION_11
0x40003f0	        0x488d7818	                   lea rdi, [rax + 0x18]	        53	string3.h	FUNCTION_19	CALL_3
0x40003f4	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_19	CALL_3
0x40003f7	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_19	CALL_3
0x40003fa	          0x4889c3	                            mov rbx, rax	       414	reflog.c	FUNCTION_11
0x40003fd	      0xe800000000	                          call 0x4000402	        53	string3.h	FUNCTION_19	CALL_3
0x4000402	    0x488b05000000	            mov rax, qword [0x04000409] 	       415	reflog.c	FUNCTION_11
0x4000409	          0x4885db	                           test rbx, rbx	       459	reflog.c	FUNCTION_12	IF_7
0x400040c	    0x48891d000000	            mov qword [0x04000413], rbx 	       416	reflog.c	FUNCTION_11
0x4000413	          0x488918	                    mov qword [rax], rbx	       415	reflog.c	FUNCTION_11
0x4000416	     0xf84b5000000	                            je 0x40004d1	       459	reflog.c	FUNCTION_12	IF_7
0x400041c	        0x4183fc02	                             cmp r12d, 2	       461	reflog.c	FUNCTION_12	SWITCH_2
0x4000420	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       466	reflog.c	FUNCTION_12	SWITCH_2
0x4000425	            0x7579	                           jne 0x40004a0	       461	reflog.c	FUNCTION_12	SWITCH_2
0x4000427	        0x48894310	             mov qword [rbx + 0x10], rax	       466	reflog.c	FUNCTION_12	SWITCH_2
0x400042b	            0x31c0	                            xor eax, eax	       469	reflog.c	FUNCTION_12
0x400042d	            0xeb0f	                           jmp 0x400043e	       467	reflog.c	FUNCTION_12	SWITCH_2
0x400042f	              0x90	                                     nop	       467	reflog.c	FUNCTION_12	SWITCH_2
0x4000430	          0x4c89e2	                            mov rdx, r12	       433	reflog.c	FUNCTION_12	CALL_2
0x4000433	          0x4889ee	                            mov rsi, rbp	       433	reflog.c	FUNCTION_12	CALL_2
0x4000436	          0x4889df	                            mov rdi, rbx	       433	reflog.c	FUNCTION_12	CALL_2
0x4000439	      0xe800000000	                          call 0x400043e	       433	reflog.c	FUNCTION_12	CALL_2
0x400043e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       470	reflog.c	FUNCTION_12
0x4000443	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       470	reflog.c	FUNCTION_12
0x400044c	     0xf8589000000	                           jne 0x40004db	       470	reflog.c	FUNCTION_12
0x4000452	        0x4883c438	                           add rsp, 0x38	       470	reflog.c	FUNCTION_12
0x4000456	              0x5b	                                 pop rbx	       470	reflog.c	FUNCTION_12
0x4000457	              0x5d	                                 pop rbp	       470	reflog.c	FUNCTION_12
0x4000458	            0x415c	                                 pop r12	       470	reflog.c	FUNCTION_12
0x400045a	            0x415d	                                 pop r13	       470	reflog.c	FUNCTION_12
0x400045c	              0xc3	                                     ret	       470	reflog.c	FUNCTION_12
0x400045d	           0xf1f00	                         nop dword [rax]	       470	reflog.c	FUNCTION_12
0x4000460	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000465	          0x4889ea	                            mov rdx, rbp	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000468	          0x4889de	                            mov rsi, rbx	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x400046b	      0xe800000000	                          call 0x4000470	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000470	            0x85c0	                           test eax, eax	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000472	            0x755d	                           jne 0x40004d1	       437	reflog.c	FUNCTION_12	IF_2	IF_3	CALL_4
0x4000474	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       446	reflog.c	FUNCTION_12	IF_6
0x4000479	    0x41bc01000000	                             mov r12d, 1	       436	reflog.c	FUNCTION_12	IF_2
0x400047f	          0x4d85ed	                           test r13, r13	       446	reflog.c	FUNCTION_12	IF_6
0x4000482	     0xf8507ffffff	                           jne 0x400038f	       446	reflog.c	FUNCTION_12	IF_6
0x4000488	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x400048d	    0x488915000000	            mov qword [0x04000494], rdx 	       449	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x4000494	            0xeba8	                           jmp 0x400043e	       450	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x4000496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       450	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004a0	        0x48894308	                mov qword [rbx + 8], rax	       463	reflog.c	FUNCTION_12	SWITCH_2
0x40004a4	            0x31c0	                            xor eax, eax	       469	reflog.c	FUNCTION_12
0x40004a6	            0xeb96	                           jmp 0x400043e	       464	reflog.c	FUNCTION_12	SWITCH_2
0x40004a8	     0xf1f84000000	                   nop dword [rax + rax]	       464	reflog.c	FUNCTION_12	SWITCH_2
0x40004b0	    0x48c705000000	               mov qword [0x040004bb], 0	       407	reflog.c	FUNCTION_11	IF_1
0x40004bb	      0xe9e2feffff	                           jmp 0x40003a2	       407	reflog.c	FUNCTION_11	IF_1
0x40004c0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004c5	    0x488915000000	            mov qword [0x040004cc], rdx 	       452	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004cc	      0xe96dffffff	                           jmp 0x400043e	       453	reflog.c	FUNCTION_12	IF_6	SWITCH_1
0x40004d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x40004d6	      0xe963ffffff	                           jmp 0x400043e	       438	reflog.c	FUNCTION_12	IF_2	IF_3
0x40004db	      0xe800000000	                          call 0x40004e0	       470	reflog.c	FUNCTION_12
0x40004e0	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004e5	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004e9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004ee	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004f0	      0xe800000000	                          call 0x40004f5	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004f5	          0x4889ea	                            mov rdx, rbp	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004f8	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40004fd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x4000502	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x4000504	      0xe800000000	                          call 0x4000509	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
reflog_expiry_prepare	FOR,1:WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,3:CALL,6:IF,5	74
0x4000980	    0x488b82d80800	           mov rax, qword [rdx + 0x8d8] 	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000987	            0x4154	                                push r12	       333	reflog.c	FUNCTION_8
0x4000989	              0x55	                                push rbp	       333	reflog.c	FUNCTION_8
0x400098a	              0x53	                                push rbx	       333	reflog.c	FUNCTION_8
0x400098b	          0x4889d3	                            mov rbx, rdx	       333	reflog.c	FUNCTION_8
0x400098e	          0x4885c0	                           test rax, rax	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000991	            0x741b	                            je 0x40009ae	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000993	          0x4989f8	                             mov r8, rdi	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000996	          0x4989f1	                             mov r9, rsi	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x4000999	      0xbf00000000	                              mov edi, 0	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x400099e	      0xb905000000	                              mov ecx, 5	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x40009a3	          0x4c89c6	                             mov rsi, r8	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x40009a6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x40009a8	     0xf85aa000000	                           jne 0x4000a58	       336	reflog.c	FUNCTION_8	IF_1	CALL_1
0x40009ae	    0x483b83d00800	           cmp rax, qword [rbx + 0x8d0] 	       347	reflog.c	FUNCTION_8	IF_3
0x40009b5	    0x48c783e80800	              mov qword [rbx + 0x8e8], 0	       337	reflog.c	FUNCTION_8	IF_1
0x40009c0	    0xc70302000000	                      mov dword [rbx], 2	       338	reflog.c	FUNCTION_8	IF_1
0x40009c6	            0x7728	                            ja 0x40009f0	       347	reflog.c	FUNCTION_8	IF_3
0x40009c8	    0xc70301000000	                      mov dword [rbx], 1	       348	reflog.c	FUNCTION_8	IF_3
0x40009ce	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x40009d6	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x40009e1	              0x5b	                                 pop rbx	       365	reflog.c	FUNCTION_8
0x40009e2	              0x5d	                                 pop rbp	       365	reflog.c	FUNCTION_8
0x40009e3	            0x415c	                                 pop r12	       365	reflog.c	FUNCTION_8
0x40009e5	              0xc3	                                     ret	       365	reflog.c	FUNCTION_8
0x40009e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       365	reflog.c	FUNCTION_8
0x40009f0	    0x488db3f00800	                  lea rsi, [rbx + 0x8f0]	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x40009f7	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x40009ff	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x4000a0a	      0xbf00000000	                              mov edi, 0	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000a0f	        0x4c8d6308	                      lea r12, [rbx + 8]	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000a13	      0xe800000000	                          call 0x4000a18	       356	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_3
0x4000a18	    0x488babf00800	           mov rbp, qword [rbx + 0x8f0] 	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a1f	          0x4885ed	                           test rbp, rbp	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a22	            0x7419	                            je 0x4000a3d	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a24	         0xf1f4000	                         nop dword [rax]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a28	        0x488b7d00	                    mov rdi, qword [rbp]	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000a2c	          0x4c89e6	                            mov rsi, r12	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000a2f	      0xe800000000	                          call 0x4000a34	       358	reflog.c	FUNCTION_8	IF_4	IF_5	CALL_4
0x4000a34	        0x488b6d08	                mov rbp, qword [rbp + 8]	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a38	          0x4885ed	                           test rbp, rbp	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a3b	            0x75eb	                           jne 0x4000a28	       357	reflog.c	FUNCTION_8	IF_4	IF_5	FOR_1
0x4000a3d	    0x488bb3d00800	           mov rsi, qword [rbx + 0x8d0] 	       362	reflog.c	FUNCTION_8	IF_4
0x4000a44	          0x4c89e7	                            mov rdi, r12	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000a47	        0x48897310	             mov qword [rbx + 0x10], rsi	       362	reflog.c	FUNCTION_8	IF_4
0x4000a4b	              0x5b	                                 pop rbx	       365	reflog.c	FUNCTION_8
0x4000a4c	              0x5d	                                 pop rbp	       365	reflog.c	FUNCTION_8
0x4000a4d	            0x415c	                                 pop r12	       365	reflog.c	FUNCTION_8
0x4000a4f	      0xe92cfeffff	           jmp sym.mark_reachable.isra.3	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000a54	         0xf1f4000	                         nop dword [rax]	       363	reflog.c	FUNCTION_8	IF_4	CALL_6
0x4000a58	          0x4c89cf	                             mov rdi, r9	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000a5b	      0xbe01000000	                              mov esi, 1	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000a60	      0xe800000000	                          call 0x4000a65	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000a65	          0x4885c0	                           test rax, rax	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000a68	          0x4889c7	                            mov rdi, rax	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000a6b	    0x488983e80800	            mov qword [rbx + 0x8e8], rax	       340	reflog.c	FUNCTION_8	ELSE_1	CALL_2
0x4000a72	            0x743b	                            je 0x4000aaf	       341	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000a74	    0x488b83d00800	           mov rax, qword [rbx + 0x8d0] 	       347	reflog.c	FUNCTION_8	IF_3
0x4000a7b	    0x483983d80800	           cmp qword [rbx + 0x8d8], rax 	       347	reflog.c	FUNCTION_8	IF_3
0x4000a82	    0xc70300000000	                      mov dword [rbx], 0	       344	reflog.c	FUNCTION_8	ELSE_1	ELSE_2
0x4000a88	     0xf863affffff	                           jbe 0x40009c8	       347	reflog.c	FUNCTION_8	IF_3
0x4000a8e	        0x4c8d6308	                      lea r12, [rbx + 8]	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000a92	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x4000a9a	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x4000aa5	          0x4c89e6	                            mov rsi, r12	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000aa8	      0xe800000000	                          call 0x4000aad	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000aad	            0xeb8e	                           jmp 0x4000a3d	       360	reflog.c	FUNCTION_8	IF_4	ELSE_3	CALL_5
0x4000aaf	    0x488b83d00800	           mov rax, qword [rbx + 0x8d0] 	       347	reflog.c	FUNCTION_8	IF_3
0x4000ab6	    0x483983d80800	           cmp qword [rbx + 0x8d8], rax 	       347	reflog.c	FUNCTION_8	IF_3
0x4000abd	    0xc70301000000	                      mov dword [rbx], 1	       342	reflog.c	FUNCTION_8	ELSE_1	IF_2
0x4000ac3	     0xf86fffeffff	                           jbe 0x40009c8	       347	reflog.c	FUNCTION_8	IF_3
0x4000ac9	    0x48c743080000	                  mov qword [rbx + 8], 0	       350	reflog.c	FUNCTION_8
0x4000ad1	    0x48c783f00800	              mov qword [rbx + 0x8f0], 0	       351	reflog.c	FUNCTION_8
0x4000adc	      0xe900ffffff	                           jmp 0x40009e1	       351	reflog.c	FUNCTION_8
commit_is_complete	FOR,5:WHILE,1:functions,0:DO,0:SWITCH,0:ELSE,2:CALL,12:IF,10	188
0x4000580	            0x4156	                                push r14	       103	reflog.c	FUNCTION_2
0x4000582	            0x4155	                                push r13	       103	reflog.c	FUNCTION_2
0x4000584	            0x4154	                                push r12	       103	reflog.c	FUNCTION_2
0x4000586	              0x55	                                push rbp	       103	reflog.c	FUNCTION_2
0x4000587	              0x53	                                push rbx	       103	reflog.c	FUNCTION_2
0x4000588	        0x4883ec40	                           sub rsp, 0x40	       103	reflog.c	FUNCTION_2
0x400058c	            0x8b17	                    mov edx, dword [rdi]	       110	reflog.c	FUNCTION_2	IF_1
0x400058e	    0x64488b042528	                mov rax, qword fs:[0x28]	       103	reflog.c	FUNCTION_2
0x4000597	      0x4889442438	             mov qword [rsp + 0x38], rax	       103	reflog.c	FUNCTION_2
0x400059c	            0x31c0	                            xor eax, eax	       103	reflog.c	FUNCTION_2
0x400059e	      0xb801000000	                              mov eax, 1	       111	reflog.c	FUNCTION_2	IF_1
0x40005a3	          0xc1ea04	                              shr edx, 4	       110	reflog.c	FUNCTION_2	IF_1
0x40005a6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       110	reflog.c	FUNCTION_2	IF_1
0x40005ac	          0xf6c201	                              test dl, 1	       110	reflog.c	FUNCTION_2	IF_1
0x40005af	            0x7507	                           jne 0x40005b8	       110	reflog.c	FUNCTION_2	IF_1
0x40005b1	            0x31c0	                            xor eax, eax	       113	reflog.c	FUNCTION_2	IF_2
0x40005b3	          0x80e604	                               and dh, 4	       112	reflog.c	FUNCTION_2	IF_2
0x40005b6	            0x7428	                            je 0x40005e0	       112	reflog.c	FUNCTION_2	IF_2
0x40005b8	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       189	reflog.c	FUNCTION_2
0x40005bd	    0x644833342528	                xor rsi, qword fs:[0x28]	       189	reflog.c	FUNCTION_2
0x40005c6	     0xf8567020000	                           jne 0x4000833	       189	reflog.c	FUNCTION_2
0x40005cc	        0x4883c440	                           add rsp, 0x40	       189	reflog.c	FUNCTION_2
0x40005d0	              0x5b	                                 pop rbx	       189	reflog.c	FUNCTION_2
0x40005d1	              0x5d	                                 pop rbp	       189	reflog.c	FUNCTION_2
0x40005d2	            0x415c	                                 pop r12	       189	reflog.c	FUNCTION_2
0x40005d4	            0x415d	                                 pop r13	       189	reflog.c	FUNCTION_2
0x40005d6	            0x415e	                                 pop r14	       189	reflog.c	FUNCTION_2
0x40005d8	              0xc3	                                     ret	       189	reflog.c	FUNCTION_2
0x40005d9	     0xf1f80000000	                         nop dword [rax]	       189	reflog.c	FUNCTION_2
0x40005e0	      0x488d542410	                   lea rdx, [rsp + 0x10]	       123	reflog.c	FUNCTION_2	CALL_3
0x40005e5	            0x31f6	                            xor esi, esi	       123	reflog.c	FUNCTION_2	CALL_3
0x40005e7	          0x4889fd	                            mov rbp, rdi	       123	reflog.c	FUNCTION_2	CALL_3
0x40005ea	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_22	CALL_6
0x40005f3	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_22	CALL_6
0x40005fc	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_22	CALL_6
0x4000605	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_22	CALL_6
0x400060e	      0xe800000000	                          call 0x4000613	       123	reflog.c	FUNCTION_2	CALL_3
0x4000613	      0x488d542420	                   lea rdx, [rsp + 0x20]	       124	reflog.c	FUNCTION_2	CALL_4
0x4000618	            0x31f6	                            xor esi, esi	       124	reflog.c	FUNCTION_2	CALL_4
0x400061a	          0x4889ef	                            mov rdi, rbp	       124	reflog.c	FUNCTION_2	CALL_4
0x400061d	      0xe800000000	                          call 0x4000622	       124	reflog.c	FUNCTION_2	CALL_4
0x4000622	    0x814d00008000	                  or dword [rbp], 0x8000	       125	reflog.c	FUNCTION_2
0x4000629	     0xf1f80000000	                         nop dword [rax]	       125	reflog.c	FUNCTION_2
0x4000630	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       126	reflog.c	FUNCTION_2	WHILE_1
0x4000634	            0x85d2	                           test edx, edx	       126	reflog.c	FUNCTION_2	WHILE_1
0x4000636	     0xf84cb000000	                            je 0x4000707	       126	reflog.c	FUNCTION_2	WHILE_1
0x400063c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4000641	      0xe800000000	                          call 0x4000646	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x4000646	          0xf60001	                      test byte [rax], 1	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4000649	          0x4889c3	                            mov rbx, rax	       130	reflog.c	FUNCTION_2	WHILE_1	CALL_5
0x400064c	            0x747a	                            je 0x40006c8	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x400064e	            0x8b03	                    mov eax, dword [rbx]	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4000650	          0xc1e804	                              shr eax, 4	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4000653	      0x25ffffff07	                      and eax, 0x7ffffff	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x4000658	          0xf6c404	                              test ah, 4	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x400065b	     0xf85a0000000	                           jne 0x4000701	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x4000661	            0xa801	                              test al, 1	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x4000663	            0x75cb	                           jne 0x4000630	       138	reflog.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x4000665	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000669	          0x4885db	                           test rbx, rbx	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400066c	            0x750b	                           jne 0x4000679	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400066e	            0xebc0	                           jmp 0x4000630	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000670	        0x488b5b08	                mov rbx, qword [rbx + 8]	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000674	          0x4885db	                           test rbx, rbx	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000677	            0x74b7	                            je 0x4000630	       140	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000679	          0x4c8b23	                    mov r12, qword [rbx]	       141	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400067c	        0x418b0c24	                    mov ecx, dword [r12]	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x4000680	            0x89c8	                            mov eax, ecx	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x4000682	          0xc1e804	                              shr eax, 4	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x4000685	      0x25ffffff07	                      and eax, 0x7ffffff	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x400068a	          0xf6c408	                              test ah, 8	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x400068d	            0x75e1	                           jne 0x4000670	       142	reflog.c	FUNCTION_2	WHILE_1	FOR_1	IF_6
0x400068f	          0x80cc08	                                or ah, 8	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x4000692	            0x31f6	                            xor esi, esi	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x4000694	          0x4c89e7	                            mov rdi, r12	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x4000697	          0xc1e004	                              shl eax, 4	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400069a	            0x89c2	                            mov edx, eax	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400069c	            0x89c8	                            mov eax, ecx	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x400069e	      0x250f000080	                     and eax, 0x8000000f	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x40006a3	             0x9d0	                             or eax, edx	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x40006a5	      0x488d542410	                   lea rdx, [rsp + 0x10]	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x40006aa	        0x41890424	                    mov dword [r12], eax	       144	reflog.c	FUNCTION_2	WHILE_1	FOR_1
0x40006ae	      0xe800000000	                          call 0x40006b3	       145	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_7
0x40006b3	      0x488d542420	                   lea rdx, [rsp + 0x20]	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006b8	            0x31f6	                            xor esi, esi	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006ba	          0x4c89e7	                            mov rdi, r12	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006bd	      0xe800000000	                          call 0x40006c2	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006c2	            0xebac	                           jmp 0x4000670	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006c4	         0xf1f4000	                         nop dword [rax]	       146	reflog.c	FUNCTION_2	WHILE_1	FOR_1	CALL_8
0x40006c8	        0x488d7804	                      lea rdi, [rax + 4]	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x40006cc	      0xe800000000	                          call 0x40006d1	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x40006d1	          0x4885c0	                           test rax, rax	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x40006d4	     0xf8574ffffff	                           jne 0x400064e	       131	reflog.c	FUNCTION_2	WHILE_1	IF_3	CALL_6
0x40006da	            0x8b13	                    mov edx, dword [rbx]	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006dc	            0x89d0	                            mov eax, edx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006de	    0x81e20f000080	                     and edx, 0x8000000f	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006e4	          0xc1e804	                              shr eax, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006e7	      0x25ffffff07	                      and eax, 0x7ffffff	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006ec	          0x80cc04	                                or ah, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006ef	            0x89c1	                            mov ecx, eax	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006f1	          0xc1e104	                              shl ecx, 4	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006f4	             0x9ca	                             or edx, ecx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006f6	          0xf6c404	                              test ah, 4	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x40006f9	            0x8913	                    mov dword [rbx], edx	       132	reflog.c	FUNCTION_2	WHILE_1	IF_3
0x40006fb	     0xf8460ffffff	                            je 0x4000661	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x4000701	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x4000705	            0xeb5b	                           jmp 0x4000762	       134	reflog.c	FUNCTION_2	WHILE_1	IF_4
0x4000707	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x400070b	            0x85c0	                           test eax, eax	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x400070d	     0xf8416010000	                            je 0x4000829	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000713	          0x4531ed	                          xor r13d, r13d	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000716	          0x4531e4	                          xor r12d, r12d	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000719	            0x31db	                            xor ebx, ebx	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x400071b	       0xf1f440000	                   nop dword [rax + rax]	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000720	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       155	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000725	        0x4e8b3428	              mov r14, qword [rax + r13]	       155	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000729	          0x4c89f7	                            mov rdi, r14	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x400072c	      0xe800000000	                          call 0x4000731	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x4000731	          0x4889c7	                            mov rdi, rax	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x4000734	      0xe837f9ffff	               call sym.tree_is_complete	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x4000739	            0x85c0	                           test eax, eax	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x400073b	            0x750c	                           jne 0x4000749	       157	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_10
0x400073d	    0x41810e004000	                  or dword [r14], 0x4000	       159	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000744	      0xbb01000000	                              mov ebx, 1	       158	reflog.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4000749	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x400074d	        0x4183c401	                             add r12d, 1	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000751	        0x4983c520	                           add r13, 0x20	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000755	          0x4439e2	                           cmp edx, r12d	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x4000758	            0x77c6	                            ja 0x4000720	       154	reflog.c	FUNCTION_2	IF_7	FOR_2
0x400075a	            0x85db	                           test ebx, ebx	       162	reflog.c	FUNCTION_2	IF_7	IF_9
0x400075c	     0xf848e000000	                            je 0x40007f0	       162	reflog.c	FUNCTION_2	IF_7	IF_9
0x4000762	            0x31c0	                            xor eax, eax	       169	reflog.c	FUNCTION_2	FOR_4
0x4000764	            0x85d2	                           test edx, edx	       169	reflog.c	FUNCTION_2	FOR_4
0x4000766	            0x7436	                            je 0x400079e	       169	reflog.c	FUNCTION_2	FOR_4
0x4000768	      0xbb01000000	                              mov ebx, 1	       169	reflog.c	FUNCTION_2	FOR_4
0x400076d	          0x83ea01	                              sub edx, 1	       169	reflog.c	FUNCTION_2	FOR_4
0x4000770	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       169	reflog.c	FUNCTION_2	FOR_4
0x4000775	        0x488d4a01	                      lea rcx, [rdx + 1]	       169	reflog.c	FUNCTION_2	FOR_4
0x4000779	        0x48c1e105	                              shl rcx, 5	       169	reflog.c	FUNCTION_2	FOR_4
0x400077d	          0x4801f9	                            add rcx, rdi	       169	reflog.c	FUNCTION_2	FOR_4
0x4000780	          0x4889fa	                            mov rdx, rdi	       169	reflog.c	FUNCTION_2	FOR_4
0x4000783	       0xf1f440000	                   nop dword [rax + rax]	       169	reflog.c	FUNCTION_2	FOR_4
0x4000788	          0x488b32	                    mov rsi, qword [rdx]	       170	reflog.c	FUNCTION_2	FOR_4
0x400078b	        0x4883c220	                           add rdx, 0x20	       170	reflog.c	FUNCTION_2	FOR_4
0x400078f	    0x8126ff7fffff	             and dword [rsi], 0xffff7fff	       170	reflog.c	FUNCTION_2	FOR_4
0x4000795	          0x4839ca	                            cmp rdx, rcx	       169	reflog.c	FUNCTION_2	FOR_4
0x4000798	            0x75ee	                           jne 0x4000788	       169	reflog.c	FUNCTION_2	FOR_4
0x400079a	            0x85db	                           test ebx, ebx	       171	reflog.c	FUNCTION_2	IF_10
0x400079c	            0x7432	                            je 0x40007d0	       171	reflog.c	FUNCTION_2	IF_10
0x400079e	    0x814d00004000	                  or dword [rbp], 0x4000	       172	reflog.c	FUNCTION_2	IF_10
0x40007a5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       186	reflog.c	FUNCTION_2	CALL_11
0x40007aa	        0x8944240c	              mov dword [rsp + 0xc], eax	       186	reflog.c	FUNCTION_2	CALL_11
0x40007ae	      0xe800000000	                          call 0x40007b3	       186	reflog.c	FUNCTION_2	CALL_11
0x40007b3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       187	reflog.c	FUNCTION_2	CALL_12
0x40007b8	      0xe800000000	                          call 0x40007bd	       187	reflog.c	FUNCTION_2	CALL_12
0x40007bd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       187	reflog.c	FUNCTION_2	CALL_12
0x40007c1	      0xe9f2fdffff	                           jmp 0x40005b8	       188	reflog.c	FUNCTION_2
0x40007c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       188	reflog.c	FUNCTION_2
0x40007d0	          0x488b17	                    mov rdx, qword [rdi]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007d3	        0x4883c720	                           add rdi, 0x20	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007d7	          0x830a10	                    or dword [rdx], 0x10	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007da	          0x4839f9	                            cmp rcx, rdi	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007dd	            0x74c6	                            je 0x40007a5	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007df	          0x488b17	                    mov rdx, qword [rdi]	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007e2	        0x4883c720	                           add rdi, 0x20	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007e6	          0x830a10	                    or dword [rdx], 0x10	       183	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007e9	          0x4839f9	                            cmp rcx, rdi	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007ec	            0x75e2	                           jne 0x40007d0	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007ee	            0xebb5	                           jmp 0x40007a5	       182	reflog.c	FUNCTION_2	ELSE_2	FOR_5
0x40007f0	            0x85d2	                           test edx, edx	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x40007f2	            0x7435	                            je 0x4000829	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x40007f4	          0x8d72ff	                      lea esi, [rdx - 1]	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x40007f7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x40007fc	          0x4889f2	                            mov rdx, rsi	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x40007ff	        0x4883c601	                              add rsi, 1	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000803	        0x48c1e605	                              shl rsi, 5	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000807	          0x4801c6	                            add rsi, rax	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x400080a	    0x660f1f440000	                    nop word [rax + rax]	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000810	          0x488b08	                    mov rcx, qword [rax]	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000813	        0x4883c020	                           add rax, 0x20	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000817	          0x830910	                    or dword [rcx], 0x10	       165	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x400081a	          0x4839f0	                            cmp rax, rsi	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x400081d	            0x75f1	                           jne 0x4000810	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x400081f	      0xb801000000	                              mov eax, 1	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000824	      0xe947ffffff	                           jmp 0x4000770	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000829	      0xb801000000	                              mov eax, 1	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x400082e	      0xe972ffffff	                           jmp 0x40007a5	       164	reflog.c	FUNCTION_2	IF_7	IF_9	FOR_3
0x4000833	      0xe800000000	                          call 0x4000838	       189	reflog.c	FUNCTION_2
tree_is_complete	FOR,0:WHILE,1:functions,0:DO,0:SWITCH,0:ELSE,0:CALL,8:IF,7	94
0x4000070	            0x4155	                                push r13	        61	reflog.c	FUNCTION_1
0x4000072	            0x4154	                                push r12	        61	reflog.c	FUNCTION_1
0x4000074	          0x4989fd	                            mov r13, rdi	        61	reflog.c	FUNCTION_1
0x4000077	              0x55	                                push rbp	        61	reflog.c	FUNCTION_1
0x4000078	              0x53	                                push rbx	        61	reflog.c	FUNCTION_1
0x4000079	        0x4883ec58	                           sub rsp, 0x58	        61	reflog.c	FUNCTION_1
0x400007d	    0x64488b042528	                mov rax, qword fs:[0x28]	        61	reflog.c	FUNCTION_1
0x4000086	      0x4889442448	             mov qword [rsp + 0x48], rax	        61	reflog.c	FUNCTION_1
0x400008b	            0x31c0	                            xor eax, eax	        61	reflog.c	FUNCTION_1
0x400008d	      0xe800000000	                          call 0x4000092	        67	reflog.c	FUNCTION_1	CALL_1
0x4000092	          0x4885c0	                           test rax, rax	        68	reflog.c	FUNCTION_1	IF_1
0x4000095	     0xf84f5000000	                            je 0x4000190	        68	reflog.c	FUNCTION_1	IF_1
0x400009b	            0x8b10	                    mov edx, dword [rax]	        70	reflog.c	FUNCTION_1	IF_2
0x400009d	          0x4889c3	                            mov rbx, rax	        70	reflog.c	FUNCTION_1	IF_2
0x40000a0	      0xb801000000	                              mov eax, 1	        71	reflog.c	FUNCTION_1	IF_2
0x40000a5	          0xc1ea04	                              shr edx, 4	        70	reflog.c	FUNCTION_1	IF_2
0x40000a8	    0x81e2ffffff07	                      and edx, 0x7ffffff	        70	reflog.c	FUNCTION_1	IF_2
0x40000ae	          0xf6c201	                              test dl, 1	        70	reflog.c	FUNCTION_1	IF_2
0x40000b1	     0xf8588000000	                           jne 0x400013f	        70	reflog.c	FUNCTION_1	IF_2
0x40000b7	          0x80e604	                               and dh, 4	        72	reflog.c	FUNCTION_1	IF_3
0x40000ba	     0xf85d0000000	                           jne 0x4000190	        72	reflog.c	FUNCTION_1	IF_3
0x40000c0	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        75	reflog.c	FUNCTION_1	IF_4
0x40000c4	          0x4885f6	                           test rsi, rsi	        75	reflog.c	FUNCTION_1	IF_4
0x40000c7	     0xf8493000000	                            je 0x4000160	        75	reflog.c	FUNCTION_1	IF_4
0x40000cd	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	        75	reflog.c	FUNCTION_1	IF_4
0x40000d1	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	        75	reflog.c	FUNCTION_1	IF_4
0x40000d6	          0x4989e4	                            mov r12, rsp	        75	reflog.c	FUNCTION_1	IF_4
0x40000d9	          0x4889ef	                            mov rdi, rbp	        86	reflog.c	FUNCTION_1	CALL_3
0x40000dc	    0x41bd01000000	                             mov r13d, 1	        87	reflog.c	FUNCTION_1
0x40000e2	      0xe800000000	                          call 0x40000e7	        86	reflog.c	FUNCTION_1	CALL_3
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	        86	reflog.c	FUNCTION_1	CALL_3
0x40000f0	          0x4c89e6	                            mov rsi, r12	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f3	          0x4889ef	                            mov rdi, rbp	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f6	      0xe800000000	                          call 0x40000fb	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fb	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000fd	            0x742b	                            je 0x400012a	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x40000ff	        0x488b3c24	                    mov rdi, qword [rsp]	      1251	cache.h	FUNCTION_101	CALL_1
0x4000103	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_101	CALL_1
0x4000105	      0xe800000000	                          call 0x400010a	      1251	cache.h	FUNCTION_101	CALL_1
0x400010a	            0x85c0	                           test eax, eax	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x400010c	     0xf8586000000	                           jne 0x4000198	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x4000112	    0x810b00400000	                  or dword [rbx], 0x4000	        91	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x4000118	          0x4c89e6	                            mov rsi, r12	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400011b	          0x4889ef	                            mov rdi, rbp	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400011e	          0x4531ed	                          xor r13d, r13d	        92	reflog.c	FUNCTION_1	WHILE_1	IF_6
0x4000121	      0xe800000000	                          call 0x4000126	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x4000126	            0x85c0	                           test eax, eax	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x4000128	            0x75d5	                           jne 0x40000ff	        88	reflog.c	FUNCTION_1	WHILE_1	CALL_4
0x400012a	          0x4889df	                            mov rdi, rbx	        95	reflog.c	FUNCTION_1	CALL_8
0x400012d	      0xe800000000	                          call 0x4000132	        95	reflog.c	FUNCTION_1	CALL_8
0x4000132	          0x4585ed	                         test r13d, r13d	        97	reflog.c	FUNCTION_1	IF_7
0x4000135	            0x7459	                            je 0x4000190	        97	reflog.c	FUNCTION_1	IF_7
0x4000137	          0x830b10	                    or dword [rbx], 0x10	        98	reflog.c	FUNCTION_1	IF_7
0x400013a	      0xb801000000	                              mov eax, 1	        98	reflog.c	FUNCTION_1	IF_7
0x400013f	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       100	reflog.c	FUNCTION_1
0x4000144	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       100	reflog.c	FUNCTION_1
0x400014d	     0xf8587000000	                           jne 0x40001da	       100	reflog.c	FUNCTION_1
0x4000153	        0x4883c458	                           add rsp, 0x58	       100	reflog.c	FUNCTION_1
0x4000157	              0x5b	                                 pop rbx	       100	reflog.c	FUNCTION_1
0x4000158	              0x5d	                                 pop rbp	       100	reflog.c	FUNCTION_1
0x4000159	            0x415c	                                 pop r12	       100	reflog.c	FUNCTION_1
0x400015b	            0x415d	                                 pop r13	       100	reflog.c	FUNCTION_1
0x400015d	              0xc3	                                     ret	       100	reflog.c	FUNCTION_1
0x400015e	            0x6690	                                     nop	       100	reflog.c	FUNCTION_1
0x4000160	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      1200	cache.h	FUNCTION_100	CALL_1
0x4000165	          0x4889e6	                            mov rsi, rsp	      1200	cache.h	FUNCTION_100	CALL_1
0x4000168	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_100	CALL_1
0x400016d	          0x4c89ef	                            mov rdi, r13	      1200	cache.h	FUNCTION_100	CALL_1
0x4000170	          0x4989e4	                            mov r12, rsp	      1200	cache.h	FUNCTION_100	CALL_1
0x4000173	          0x4889ea	                            mov rdx, rbp	      1200	cache.h	FUNCTION_100	CALL_1
0x4000176	      0xe800000000	                          call 0x400017b	      1200	cache.h	FUNCTION_100	CALL_1
0x400017b	          0x4885c0	                           test rax, rax	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x400017e	          0x4889c6	                            mov rsi, rax	      1200	cache.h	FUNCTION_100	CALL_1
0x4000181	            0x7545	                           jne 0x40001c8	        79	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000183	    0x810b00400000	                  or dword [rbx], 0x4000	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000189	     0xf1f80000000	                         nop dword [rax]	        80	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000190	            0x31c0	                            xor eax, eax	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000192	            0xebab	                           jmp 0x400013f	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000194	         0xf1f4000	                         nop dword [rax]	        81	reflog.c	FUNCTION_1	IF_4	IF_5
0x4000198	        0x8b442410	            mov eax, dword [rsp + 0x10] 	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x400019c	      0x2500f00000	                         and eax, 0xf000	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001a1	      0x3d00400000	                         cmp eax, 0x4000	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001a6	     0xf8544ffffff	                           jne 0x40000f0	        89	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_5
0x40001ac	        0x488b3c24	                    mov rdi, qword [rsp]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b0	      0xe8bbfeffff	               call sym.tree_is_complete	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b5	            0x85c0	                           test eax, eax	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001b7	     0xf8455ffffff	                            je 0x4000112	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001bd	      0xe92effffff	                           jmp 0x40000f0	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001c2	    0x660f1f440000	                    nop word [rax + rax]	        90	reflog.c	FUNCTION_1	WHILE_1	IF_6	CALL_7
0x40001c8	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        84	reflog.c	FUNCTION_1	IF_4
0x40001cd	        0x48894318	             mov qword [rbx + 0x18], rax	        83	reflog.c	FUNCTION_1	IF_4
0x40001d1	        0x48895320	             mov qword [rbx + 0x20], rdx	        84	reflog.c	FUNCTION_1	IF_4
0x40001d5	      0xe9fffeffff	                           jmp 0x40000d9	        84	reflog.c	FUNCTION_1	IF_4
0x40001da	      0xe800000000	                          call 0x40001df	       100	reflog.c	FUNCTION_1
count_reflog_ent	FOR,0:WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:CALL,0:IF,1	12
0x4000040	      0x488b442408	                mov rax, qword [rsp + 8]	       613	reflog.c	FUNCTION_15
0x4000045	    0x488b90d00800	           mov rdx, qword [rax + 0x8d0] 	       615	reflog.c	FUNCTION_15	IF_1
0x400004c	          0x4885d2	                           test rdx, rdx	       615	reflog.c	FUNCTION_15	IF_1
0x400004f	            0x740f	                            je 0x4000060	       615	reflog.c	FUNCTION_15	IF_1
0x4000051	          0x4839ca	                            cmp rdx, rcx	       615	reflog.c	FUNCTION_15	IF_1
0x4000054	            0x770a	                            ja 0x4000060	       615	reflog.c	FUNCTION_15	IF_1
0x4000056	            0x31c0	                            xor eax, eax	       618	reflog.c	FUNCTION_15
0x4000058	              0xc3	                                     ret	       618	reflog.c	FUNCTION_15
0x4000059	     0xf1f80000000	                         nop dword [rax]	       618	reflog.c	FUNCTION_15
0x4000060	    0x8380e0080000	              add dword [rax + 0x8e0], 1	       616	reflog.c	FUNCTION_15	IF_1
0x4000067	            0x31c0	                            xor eax, eax	       618	reflog.c	FUNCTION_15
0x4000069	              0xc3	                                     ret	       618	reflog.c	FUNCTION_15
collect_reflog	FOR,0:WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:CALL,1:IF,0	76
0x40001e0	            0x4156	                                push r14	       384	reflog.c	FUNCTION_10
0x40001e2	            0x4155	                                push r13	       384	reflog.c	FUNCTION_10
0x40001e4	          0x4989fe	                            mov r14, rdi	       384	reflog.c	FUNCTION_10
0x40001e7	            0x4154	                                push r12	       384	reflog.c	FUNCTION_10
0x40001e9	              0x55	                                push rbp	       384	reflog.c	FUNCTION_10
0x40001ea	          0x4989f5	                            mov r13, rsi	       384	reflog.c	FUNCTION_10
0x40001ed	              0x53	                                push rbx	       384	reflog.c	FUNCTION_10
0x40001ee	          0x4889cb	                            mov rbx, rcx	       384	reflog.c	FUNCTION_10
0x40001f1	      0xe800000000	                          call 0x40001f6	       388	reflog.c	FUNCTION_10
0x40001f6	        0x4883f8eb	             cmp rax, 0xffffffffffffffeb	       785	git-compat-util.h	FUNCTION_65	IF_1
0x40001fa	          0x4989c4	                            mov r12, rax	       388	reflog.c	FUNCTION_10
0x40001fd	     0xf87bf000000	                            ja 0x40002c2	       785	git-compat-util.h	FUNCTION_65	IF_1
0x4000203	     0xf84a4000000	                            je 0x40002ad	       785	git-compat-util.h	FUNCTION_65	IF_1
0x4000209	        0x488d7015	                   lea rsi, [rax + 0x15]	       388	reflog.c	FUNCTION_10
0x400020d	      0xbf01000000	                              mov edi, 1	       388	reflog.c	FUNCTION_10
0x4000212	      0xe800000000	                          call 0x4000217	       388	reflog.c	FUNCTION_10
0x4000217	        0x488d7814	                   lea rdi, [rax + 0x14]	        53	string3.h	FUNCTION_19	CALL_3
0x400021b	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_19	CALL_3
0x400021e	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_19	CALL_3
0x4000221	          0x4889c5	                            mov rbp, rax	       388	reflog.c	FUNCTION_10
0x4000224	      0xe800000000	                          call 0x4000229	        53	string3.h	FUNCTION_19	CALL_3
0x4000229	        0x498b4500	                    mov rax, qword [r13]	        53	string3.h	FUNCTION_19	CALL_3
0x400022d	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_19	CALL_3
0x4000231	        0x498b4508	                mov rax, qword [r13 + 8]	        53	string3.h	FUNCTION_19	CALL_3
0x4000235	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_19	CALL_3
0x4000239	        0x418b4510	            mov eax, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_19	CALL_3
0x400023d	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_19	CALL_3
0x4000240	        0x48637b0c	          movsxd rdi, dword [rbx + 0xc] 	       390	reflog.c	FUNCTION_10
0x4000244	          0x8b4308	                mov eax, dword [rbx + 8]	       390	reflog.c	FUNCTION_10
0x4000247	            0x39c7	                            cmp edi, eax	       390	reflog.c	FUNCTION_10
0x4000249	            0x7c5d	                            jl 0x40002a8	       390	reflog.c	FUNCTION_10
0x400024b	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       390	reflog.c	FUNCTION_10
0x400024f	            0x89c6	                            mov esi, eax	       390	reflog.c	FUNCTION_10
0x4000251	          0xc1ee1f	                           shr esi, 0x1f	       390	reflog.c	FUNCTION_10
0x4000254	             0x1c6	                            add esi, eax	       390	reflog.c	FUNCTION_10
0x4000256	          0x8d4701	                      lea eax, [rdi + 1]	       390	reflog.c	FUNCTION_10
0x4000259	            0xd1fe	                              sar esi, 1	       390	reflog.c	FUNCTION_10
0x400025b	            0x39f7	                            cmp edi, esi	       390	reflog.c	FUNCTION_10
0x400025d	           0xf4df0	                         cmovge esi, eax	       390	reflog.c	FUNCTION_10
0x4000260	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_66	IF_1
0x400026a	          0x4863d6	                         movsxd rdx, esi	       390	reflog.c	FUNCTION_10
0x400026d	          0x897308	                mov dword [rbx + 8], esi	       390	reflog.c	FUNCTION_10
0x4000270	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000273	            0x7761	                            ja 0x40002d6	       795	git-compat-util.h	FUNCTION_66	IF_1
0x4000275	          0x488b3b	                    mov rdi, qword [rbx]	       390	reflog.c	FUNCTION_10
0x4000278	    0x488d34d50000	                        lea rsi, [rdx*8]	       390	reflog.c	FUNCTION_10
0x4000280	      0xe800000000	                          call 0x4000285	       390	reflog.c	FUNCTION_10
0x4000285	        0x48637b0c	          movsxd rdi, dword [rbx + 0xc] 	       390	reflog.c	FUNCTION_10
0x4000289	          0x488903	                    mov qword [rbx], rax	       390	reflog.c	FUNCTION_10
0x400028c	          0x8d5701	                      lea edx, [rdi + 1]	       391	reflog.c	FUNCTION_10
0x400028f	          0x89530c	              mov dword [rbx + 0xc], edx	       391	reflog.c	FUNCTION_10
0x4000292	        0x48892cf8	            mov qword [rax + rdi*8], rbp	       391	reflog.c	FUNCTION_10
0x4000296	            0x31c0	                            xor eax, eax	       393	reflog.c	FUNCTION_10
0x4000298	              0x5b	                                 pop rbx	       393	reflog.c	FUNCTION_10
0x4000299	              0x5d	                                 pop rbp	       393	reflog.c	FUNCTION_10
0x400029a	            0x415c	                                 pop r12	       393	reflog.c	FUNCTION_10
0x400029c	            0x415d	                                 pop r13	       393	reflog.c	FUNCTION_10
0x400029e	            0x415e	                                 pop r14	       393	reflog.c	FUNCTION_10
0x40002a0	              0xc3	                                     ret	       393	reflog.c	FUNCTION_10
0x40002a1	     0xf1f80000000	                         nop dword [rax]	       393	reflog.c	FUNCTION_10
0x40002a8	          0x488b03	                    mov rax, qword [rbx]	       393	reflog.c	FUNCTION_10
0x40002ab	            0xebdf	                           jmp 0x400028c	       393	reflog.c	FUNCTION_10
0x40002ad	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002b2	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002b6	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002bb	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002bd	      0xe800000000	                          call 0x40002c2	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002c2	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002c5	      0xbe14000000	                           mov esi, 0x14	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002ca	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002cf	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002d1	      0xe800000000	                          call 0x40002d6	       786	git-compat-util.h	FUNCTION_65	IF_1	CALL_1
0x40002d6	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x40002db	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x40002e0	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
0x40002e2	      0xe800000000	                          call 0x40002e7	       796	git-compat-util.h	FUNCTION_66	IF_1	CALL_1
cmd_reflog	FOR,0:WHILE,0:functions,0:DO,0:SWITCH,0:ELSE,0:CALL,12:IF,6	97
0x4001750	          0x83ff01	                              cmp edi, 1	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001753	          0x4189f8	                            mov r8d, edi	       721	reflog.c	FUNCTION_18
0x4001756	          0x4989f3	                            mov r11, rsi	       721	reflog.c	FUNCTION_18
0x4001759	     0xf8e91000000	                           jle 0x40017f0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400175f	              0x53	                                push rbx	       721	reflog.c	FUNCTION_18
0x4001760	        0x488b4608	                mov rax, qword [rsi + 8]	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001764	          0x4989f1	                             mov r9, rsi	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x4001767	          0x4189fa	                           mov r10d, edi	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400176a	          0x80382d	                    cmp byte [rax], 0x2d	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400176d	            0x7461	                            je 0x40017d0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x400176f	      0xbf00000000	                              mov edi, 0	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001774	      0xb905000000	                              mov ecx, 5	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001779	          0x4889c6	                            mov rsi, rax	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x400177c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x400177e	     0xf848c000000	                            je 0x4001810	       729	reflog.c	FUNCTION_18	IF_3	CALL_4
0x4001784	      0xbf00000000	                              mov edi, 0	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001789	      0xb907000000	                              mov ecx, 7	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x400178e	          0x4889c6	                            mov rsi, rax	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001791	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001793	            0x7463	                            je 0x40017f8	       732	reflog.c	FUNCTION_18	IF_4	CALL_6
0x4001795	      0xbf00000000	                              mov edi, 0	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x400179a	      0xb907000000	                              mov ecx, 7	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x400179f	          0x4889c6	                            mov rsi, rax	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x40017a2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x40017a4	     0xf84a6000000	                            je 0x4001850	       735	reflog.c	FUNCTION_18	IF_5	CALL_8
0x40017aa	      0xbf00000000	                              mov edi, 0	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x40017af	      0xb907000000	                              mov ecx, 7	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x40017b4	          0x4889c6	                            mov rsi, rax	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x40017b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x40017b9	            0x7465	                            je 0x4001820	       738	reflog.c	FUNCTION_18	IF_6	CALL_10
0x40017bb	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x40017bc	          0x4c89de	                            mov rsi, r11	       727	reflog.c	FUNCTION_18	CALL_3
0x40017bf	          0x4489c7	                            mov edi, r8d	       727	reflog.c	FUNCTION_18	CALL_3
0x40017c2	      0xe900000000	                           jmp 0x40017c7	       727	reflog.c	FUNCTION_18	CALL_3
0x40017c7	    0x660f1f840000	                    nop word [rax + rax]	       727	reflog.c	FUNCTION_18	CALL_3
0x40017d0	        0x80780168	                cmp byte [rax + 1], 0x68	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x40017d4	            0x75e5	                           jne 0x40017bb	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x40017d6	        0x80780200	                   cmp byte [rax + 2], 0	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x40017da	            0x75df	                           jne 0x40017bb	       722	reflog.c	FUNCTION_18	IF_1	CALL_1
0x40017dc	      0xbf00000000	                              mov edi, 0	       723	reflog.c	FUNCTION_18	CALL_2
0x40017e1	      0xe800000000	                          call 0x40017e6	       723	reflog.c	FUNCTION_18	CALL_2
0x40017e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       723	reflog.c	FUNCTION_18	CALL_2
0x40017f0	      0xe900000000	                           jmp 0x40017f5	       727	reflog.c	FUNCTION_18	CALL_3
0x40017f5	           0xf1f00	                         nop dword [rax]	       727	reflog.c	FUNCTION_18	CALL_3
0x40017f8	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x40017f9	        0x498d7308	                      lea rsi, [r11 + 8]	       733	reflog.c	FUNCTION_18	CALL_7
0x40017fd	        0x418d78ff	                       lea edi, [r8 - 1]	       733	reflog.c	FUNCTION_18	CALL_7
0x4001801	      0xe9daf5ffff	               jmp sym.cmd_reflog_expire	       733	reflog.c	FUNCTION_18	CALL_7
0x4001806	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       733	reflog.c	FUNCTION_18	CALL_7
0x4001810	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x4001811	        0x498d7308	                      lea rsi, [r11 + 8]	       730	reflog.c	FUNCTION_18	CALL_5
0x4001815	        0x418d78ff	                       lea edi, [r8 - 1]	       730	reflog.c	FUNCTION_18	CALL_5
0x4001819	      0xe900000000	                           jmp 0x400181e	       730	reflog.c	FUNCTION_18	CALL_5
0x400181e	            0x6690	                                     nop	       730	reflog.c	FUNCTION_18	CALL_5
0x4001820	        0x4183ea01	                             sub r10d, 1	       739	reflog.c	FUNCTION_18	CALL_11
0x4001824	        0x4183fa01	                             cmp r10d, 1	       691	reflog.c	FUNCTION_17	FOR_1
0x4001828	            0x746f	                            je 0x4001899	       691	reflog.c	FUNCTION_17	FOR_1
0x400182a	        0x498b4310	            mov rax, qword [r11 + 0x10] 	       692	reflog.c	FUNCTION_17	FOR_1
0x400182e	          0x80382d	                    cmp byte [rax], 0x2d	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001831	            0x752d	                           jne 0x4001860	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001833	        0x8078012d	                cmp byte [rax + 1], 0x2d	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001837	            0x7560	                           jne 0x4001899	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001839	        0x80780200	                   cmp byte [rax + 2], 0	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x400183d	            0x755a	                           jne 0x4001899	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x400183f	      0xbb18000000	                           mov ebx, 0x18	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001844	      0xb802000000	                              mov eax, 2	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x4001849	            0xeb1f	                           jmp 0x400186a	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x400184b	       0xf1f440000	                   nop dword [rax + rax]	       694	reflog.c	FUNCTION_17	FOR_1	IF_1
0x4001850	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x4001851	        0x498d7308	                      lea rsi, [r11 + 8]	       736	reflog.c	FUNCTION_18	CALL_9
0x4001855	        0x418d78ff	                       lea edi, [r8 - 1]	       736	reflog.c	FUNCTION_18	CALL_9
0x4001859	      0xe992f2ffff	        jmp sym.cmd_reflog_delete.isra.8	       736	reflog.c	FUNCTION_18	CALL_9
0x400185e	            0x6690	                                     nop	       736	reflog.c	FUNCTION_18	CALL_9
0x4001860	      0xbb10000000	                           mov ebx, 0x10	       693	reflog.c	FUNCTION_17	FOR_1	IF_1	CALL_1
0x4001865	      0xb801000000	                              mov eax, 1	       691	reflog.c	FUNCTION_17	FOR_1
0x400186a	          0x4129c2	                           sub r10d, eax	       705	reflog.c	FUNCTION_17	IF_3
0x400186d	        0x4183fa01	                             cmp r10d, 1	       705	reflog.c	FUNCTION_17	IF_3
0x4001871	            0x7526	                           jne 0x4001899	       705	reflog.c	FUNCTION_17	IF_3
0x4001873	          0x4c01cb	                             add rbx, r9	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001876	      0xbe01000000	                              mov esi, 1	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x400187b	          0x488b3b	                    mov rdi, qword [rbx]	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x400187e	      0xe800000000	                          call 0x4001883	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001883	            0x85c0	                           test eax, eax	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001885	            0x751c	                           jne 0x40018a3	       708	reflog.c	FUNCTION_17	IF_4	CALL_4
0x4001887	          0x488b3b	                    mov rdi, qword [rbx]	       710	reflog.c	FUNCTION_17	CALL_6
0x400188a	      0xe800000000	                          call 0x400188f	       710	reflog.c	FUNCTION_17	CALL_6
0x400188f	            0x85c0	                           test eax, eax	       710	reflog.c	FUNCTION_17	CALL_6
0x4001891	           0xf94c0	                                 sete al	       710	reflog.c	FUNCTION_17	CALL_6
0x4001894	           0xfb6c0	                           movzx eax, al	       710	reflog.c	FUNCTION_17	CALL_6
0x4001897	              0x5b	                                 pop rbx	       742	reflog.c	FUNCTION_18
0x4001898	              0xc3	                                     ret	       742	reflog.c	FUNCTION_18
0x4001899	      0xbf00000000	                              mov edi, 0	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x400189e	      0xe800000000	                          call 0x40018a3	       698	reflog.c	FUNCTION_17	FOR_1	ELSE_1	IF_2
0x40018a3	          0x488b33	                    mov rsi, qword [rbx]	       709	reflog.c	FUNCTION_17	CALL_5
0x40018a6	      0xbf00000000	                              mov edi, 0	       709	reflog.c	FUNCTION_17	CALL_5
0x40018ab	            0x31c0	                            xor eax, eax	       709	reflog.c	FUNCTION_17	CALL_5
0x40018ad	      0xe800000000	                  call section_end..data	       709	reflog.c	FUNCTION_17	CALL_5
