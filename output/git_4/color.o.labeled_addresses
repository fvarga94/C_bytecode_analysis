color_fprintf_ln	CALL,3:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	76
0x4000ee0	            0x4155	                                push r13	       410	color.c	FUNCTION_17
0x4000ee2	            0x4154	                                push r12	       410	color.c	FUNCTION_17
0x4000ee4	          0x4989d5	                            mov r13, rdx	       410	color.c	FUNCTION_17
0x4000ee7	              0x55	                                push rbp	       410	color.c	FUNCTION_17
0x4000ee8	              0x53	                                push rbx	       410	color.c	FUNCTION_17
0x4000ee9	          0x4889fd	                            mov rbp, rdi	       410	color.c	FUNCTION_17
0x4000eec	          0x4989f4	                            mov r12, rsi	       410	color.c	FUNCTION_17
0x4000eef	    0x4881ecd80000	                           sub rsp, 0xd8	       410	color.c	FUNCTION_17
0x4000ef6	            0x84c0	                             test al, al	       410	color.c	FUNCTION_17
0x4000ef8	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       410	color.c	FUNCTION_17
0x4000efd	      0x4c89442440	              mov qword [rsp + 0x40], r8	       410	color.c	FUNCTION_17
0x4000f02	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       410	color.c	FUNCTION_17
0x4000f07	            0x7437	                            je 0x4000f40	       410	color.c	FUNCTION_17
0x4000f09	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       410	color.c	FUNCTION_17
0x4000f0e	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       410	color.c	FUNCTION_17
0x4000f13	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       410	color.c	FUNCTION_17
0x4000f18	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       410	color.c	FUNCTION_17
0x4000f20	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       410	color.c	FUNCTION_17
0x4000f28	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       410	color.c	FUNCTION_17
0x4000f30	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       410	color.c	FUNCTION_17
0x4000f38	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       410	color.c	FUNCTION_17
0x4000f40	    0x64488b042528	                mov rax, qword fs:[0x28]	       410	color.c	FUNCTION_17
0x4000f49	      0x4889442418	             mov qword [rsp + 0x18], rax	       410	color.c	FUNCTION_17
0x4000f4e	            0x31c0	                            xor eax, eax	       410	color.c	FUNCTION_17
0x4000f50	            0x31db	                            xor ebx, ebx	       387	color.c	FUNCTION_15
0x4000f52	    0x488d84240001	                  lea rax, [rsp + 0x100]	       413	color.c	FUNCTION_17	CALL_1
0x4000f5a	      0x41803c2400	                       cmp byte [r12], 0	       389	color.c	FUNCTION_15	IF_1
0x4000f5f	      0x4889442408	                mov qword [rsp + 8], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000f64	      0x488d442420	                   lea rax, [rsp + 0x20]	       413	color.c	FUNCTION_17	CALL_1
0x4000f69	    0xc70424180000	                   mov dword [rsp], 0x18	       413	color.c	FUNCTION_17	CALL_1
0x4000f70	    0xc74424043000	               mov dword [rsp + 4], 0x30	       413	color.c	FUNCTION_17	CALL_1
0x4000f78	      0x4889442410	             mov qword [rsp + 0x10], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000f7d	            0x7559	                           jne 0x4000fd8	       389	color.c	FUNCTION_15	IF_1
0x4000f7f	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000f82	          0x4c89ea	                            mov rdx, r13	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000f85	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000f8a	          0x4889ef	                            mov rdi, rbp	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000f8d	      0xe800000000	                          call 0x4000f92	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000f92	             0x1c3	                            add ebx, eax	       391	color.c	FUNCTION_15	CALL_1
0x4000f94	      0x41803c2400	                       cmp byte [r12], 0	       392	color.c	FUNCTION_15	IF_2
0x4000f99	            0x755d	                           jne 0x4000ff8	       392	color.c	FUNCTION_15	IF_2
0x4000f9b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000fa0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000fa2	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x4000fa7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000fac	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000faf	      0xe800000000	                          call 0x4000fb4	        97	stdio2.h	CALL_9
0x4000fb4	             0x1d8	                            add eax, ebx	       416	color.c	FUNCTION_17
0x4000fb6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       417	color.c	FUNCTION_17
0x4000fbb	    0x644833142528	                xor rdx, qword fs:[0x28]	       417	color.c	FUNCTION_17
0x4000fc4	            0x754f	                           jne 0x4001015	       417	color.c	FUNCTION_17
0x4000fc6	    0x4881c4d80000	                           add rsp, 0xd8	       417	color.c	FUNCTION_17
0x4000fcd	              0x5b	                                 pop rbx	       417	color.c	FUNCTION_17
0x4000fce	              0x5d	                                 pop rbp	       417	color.c	FUNCTION_17
0x4000fcf	            0x415c	                                 pop r12	       417	color.c	FUNCTION_17
0x4000fd1	            0x415d	                                 pop r13	       417	color.c	FUNCTION_17
0x4000fd3	              0xc3	                                     ret	       417	color.c	FUNCTION_17
0x4000fd4	         0xf1f4000	                         nop dword [rax]	       417	color.c	FUNCTION_17
0x4000fd8	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_9
0x4000fdb	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000fe0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000fe5	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000fe8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000fea	      0xe800000000	                          call 0x4000fef	        97	stdio2.h	CALL_9
0x4000fef	            0x89c3	                            mov ebx, eax	        97	stdio2.h	CALL_9
0x4000ff1	            0xeb8c	                           jmp 0x4000f7f	        97	stdio2.h	CALL_9
0x4000ff3	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_9
0x4000ff8	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x4000ffd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4001002	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4001007	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x400100a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x400100c	      0xe800000000	                          call 0x4001011	        97	stdio2.h	CALL_9
0x4001011	             0x1c3	                            add ebx, eax	       393	color.c	FUNCTION_15	IF_2
0x4001013	            0xeb86	                           jmp 0x4000f9b	       393	color.c	FUNCTION_15	IF_2
0x4001015	      0xe800000000	                          call 0x400101a	       417	color.c	FUNCTION_17
color_print_strbuf	CALL,0:functions,0:WHILE,0:FOR,0:IF,2:DO,0:SWITCH,0:ELSE,0	32
0x4000d40	              0x55	                                push rbp	       376	color.c	FUNCTION_14
0x4000d41	              0x53	                                push rbx	       376	color.c	FUNCTION_14
0x4000d42	          0x4889fd	                            mov rbp, rdi	       376	color.c	FUNCTION_14
0x4000d45	          0x4889f3	                            mov rbx, rsi	       376	color.c	FUNCTION_14
0x4000d48	        0x4883ec18	                           sub rsp, 0x18	       376	color.c	FUNCTION_14
0x4000d4c	          0x803e00	                       cmp byte [rsi], 0	       377	color.c	FUNCTION_14	IF_1
0x4000d4f	            0x753f	                           jne 0x4000d90	       377	color.c	FUNCTION_14	IF_1
0x4000d51	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	        97	stdio2.h	CALL_9
0x4000d55	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_9
0x4000d58	      0xe800000000	                          call 0x4000d5d	        97	stdio2.h	CALL_9
0x4000d5d	          0x803b00	                       cmp byte [rbx], 0	       380	color.c	FUNCTION_14	IF_2
0x4000d60	            0x750e	                           jne 0x4000d70	       380	color.c	FUNCTION_14	IF_2
0x4000d62	        0x4883c418	                           add rsp, 0x18	       382	color.c	FUNCTION_14
0x4000d66	              0x5b	                                 pop rbx	       382	color.c	FUNCTION_14
0x4000d67	              0x5d	                                 pop rbp	       382	color.c	FUNCTION_14
0x4000d68	              0xc3	                                     ret	       382	color.c	FUNCTION_14
0x4000d69	     0xf1f80000000	                         nop dword [rax]	       382	color.c	FUNCTION_14
0x4000d70	        0x4883c418	                           add rsp, 0x18	       382	color.c	FUNCTION_14
0x4000d74	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x4000d77	      0xba03000000	                              mov edx, 3	        97	stdio2.h	CALL_9
0x4000d7c	              0x5b	                                 pop rbx	       382	color.c	FUNCTION_14
0x4000d7d	              0x5d	                                 pop rbp	       382	color.c	FUNCTION_14
0x4000d7e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000d83	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_9
0x4000d88	      0xe900000000	                           jmp 0x4000d8d	        97	stdio2.h	CALL_9
0x4000d8d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_9
0x4000d90	          0x4889fe	                            mov rsi, rdi	        97	stdio2.h	CALL_9
0x4000d93	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_9
0x4000d96	      0x4889542408	                mov qword [rsp + 8], rdx	        97	stdio2.h	CALL_9
0x4000d9b	      0xe800000000	                          call 0x4000da0	        97	stdio2.h	CALL_9
0x4000da0	      0x488b542408	                mov rdx, qword [rsp + 8]	        97	stdio2.h	CALL_9
0x4000da5	            0xebaa	                           jmp 0x4000d51	        97	stdio2.h	CALL_9
color_is_nil	CALL,1:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	18
0x4001020	           0xfb617	                   movzx edx, byte [rdi]	       421	color.c	FUNCTION_18	CALL_1
0x4001023	      0xb84e000000	                           mov eax, 0x4e	       421	color.c	FUNCTION_18	CALL_1
0x4001028	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x400102a	            0x7520	                           jne 0x400104c	       421	color.c	FUNCTION_18	CALL_1
0x400102c	         0xfb65701	               movzx edx, byte [rdi + 1]	       421	color.c	FUNCTION_18	CALL_1
0x4001030	      0xb849000000	                           mov eax, 0x49	       421	color.c	FUNCTION_18	CALL_1
0x4001035	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4001037	            0x7513	                           jne 0x400104c	       421	color.c	FUNCTION_18	CALL_1
0x4001039	         0xfb65702	               movzx edx, byte [rdi + 2]	       421	color.c	FUNCTION_18	CALL_1
0x400103d	      0xb84c000000	                           mov eax, 0x4c	       421	color.c	FUNCTION_18	CALL_1
0x4001042	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4001044	            0x7506	                           jne 0x400104c	       421	color.c	FUNCTION_18	CALL_1
0x4001046	         0xfb64703	               movzx eax, byte [rdi + 3]	       421	color.c	FUNCTION_18	CALL_1
0x400104a	            0xf7d8	                                 neg eax	       421	color.c	FUNCTION_18	CALL_1
0x400104c	            0x85c0	                           test eax, eax	       421	color.c	FUNCTION_18	CALL_1
0x400104e	           0xf94c0	                                 sete al	       421	color.c	FUNCTION_18	CALL_1
0x4001051	           0xfb6c0	                           movzx eax, al	       421	color.c	FUNCTION_18	CALL_1
0x4001054	              0xc3	                                     ret	       422	color.c	FUNCTION_18
git_color_default_config	CALL,2:functions,0:WHILE,0:FOR,0:IF,1:DO,0:SWITCH,0:ELSE,0	58
0x4000c80	            0x4155	                                push r13	       368	color.c	FUNCTION_13
0x4000c82	            0x4154	                                push r12	       368	color.c	FUNCTION_13
0x4000c84	          0x4989fc	                            mov r12, rdi	       368	color.c	FUNCTION_13
0x4000c87	              0x55	                                push rbp	       368	color.c	FUNCTION_13
0x4000c88	              0x53	                                push rbx	       368	color.c	FUNCTION_13
0x4000c89	          0x4889f5	                            mov rbp, rsi	       368	color.c	FUNCTION_13
0x4000c8c	      0xbf00000000	                              mov edi, 0	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000c91	      0xb909000000	                              mov ecx, 9	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000c96	          0x4c89e6	                            mov rsi, r12	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000c99	        0x4883ec08	                              sub rsp, 8	       368	color.c	FUNCTION_13
0x4000c9d	          0x4989d5	                            mov r13, rdx	       368	color.c	FUNCTION_13
0x4000ca0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000ca2	           0xf97c3	                                 seta bl	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000ca5	           0xf92c0	                                 setb al	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000ca8	            0x29c3	                            sub ebx, eax	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000caa	           0xfbedb	                           movsx ebx, bl	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000cad	            0x85db	                           test ebx, ebx	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000caf	            0x741f	                            je 0x4000cd0	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000cb1	        0x4883c408	                              add rsp, 8	       373	color.c	FUNCTION_13
0x4000cb5	          0x4c89ea	                            mov rdx, r13	       372	color.c	FUNCTION_13	CALL_2
0x4000cb8	          0x4889ee	                            mov rsi, rbp	       372	color.c	FUNCTION_13	CALL_2
0x4000cbb	              0x5b	                                 pop rbx	       373	color.c	FUNCTION_13
0x4000cbc	          0x4c89e7	                            mov rdi, r12	       372	color.c	FUNCTION_13	CALL_2
0x4000cbf	              0x5d	                                 pop rbp	       373	color.c	FUNCTION_13
0x4000cc0	            0x415c	                                 pop r12	       373	color.c	FUNCTION_13
0x4000cc2	            0x415d	                                 pop r13	       373	color.c	FUNCTION_13
0x4000cc4	      0xe900000000	                           jmp 0x4000cc9	       372	color.c	FUNCTION_13	CALL_2
0x4000cc9	     0xf1f80000000	                         nop dword [rax]	       372	color.c	FUNCTION_13	CALL_2
0x4000cd0	          0x4885ed	                           test rbp, rbp	       302	color.c	FUNCTION_9	IF_1
0x4000cd3	            0x744b	                            je 0x4000d20	       302	color.c	FUNCTION_9	IF_1
0x4000cd5	      0xbe00000000	                              mov esi, 0	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000cda	          0x4889ef	                            mov rdi, rbp	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000cdd	      0xe800000000	                          call 0x4000ce2	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000ce2	            0x85c0	                           test eax, eax	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000ce4	            0x7427	                            je 0x4000d0d	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000ce6	      0xbe00000000	                              mov esi, 0	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000ceb	          0x4889ef	                            mov rdi, rbp	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000cee	      0xe800000000	                          call 0x4000cf3	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000cf3	            0x85c0	                           test eax, eax	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000cf5	            0x7421	                            je 0x4000d18	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000cf7	      0xbe00000000	                              mov esi, 0	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000cfc	          0x4889ef	                            mov rdi, rbp	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000cff	      0xe800000000	                          call 0x4000d04	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000d04	            0x85c0	                           test eax, eax	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000d06	            0x7518	                           jne 0x4000d20	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000d08	      0xbb02000000	                              mov ebx, 2	       319	color.c	FUNCTION_9
0x4000d0d	    0x891d00000000	            mov dword [0x04000d13], ebx 	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000d13	            0xeb9c	                           jmp 0x4000cb1	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000d15	           0xf1f00	                         nop dword [rax]	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000d18	      0xbb01000000	                              mov ebx, 1	       306	color.c	FUNCTION_9	IF_1	IF_3
0x4000d1d	            0xebee	                           jmp 0x4000d0d	       306	color.c	FUNCTION_9	IF_1	IF_3
0x4000d1f	              0x90	                                     nop	       306	color.c	FUNCTION_9	IF_1	IF_3
0x4000d20	          0x4889ee	                            mov rsi, rbp	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000d23	          0x4c89e7	                            mov rdi, r12	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000d26	      0xe800000000	                          call 0x4000d2b	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000d2b	            0x85c0	                           test eax, eax	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000d2d	            0x75d9	                           jne 0x4000d08	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000d2f	            0xebdc	                           jmp 0x4000d0d	       315	color.c	FUNCTION_9	IF_6	CALL_4
want_color_fd	CALL,1:functions,0:WHILE,0:FOR,0:IF,3:DO,0:SWITCH,0:ELSE,0	53
0x4000b20	            0x4155	                                push r13	       336	color.c	FUNCTION_11
0x4000b22	            0x4154	                                push r12	       336	color.c	FUNCTION_11
0x4000b24	              0x55	                                push rbp	       336	color.c	FUNCTION_11
0x4000b25	              0x53	                                push rbx	       336	color.c	FUNCTION_11
0x4000b26	        0x4883ec08	                              sub rsp, 8	       336	color.c	FUNCTION_11
0x4000b2a	            0x85f6	                           test esi, esi	       347	color.c	FUNCTION_11	IF_1
0x4000b2c	     0xf4835000000	           cmovs esi, dword [0x04000b33]	       347	color.c	FUNCTION_11	IF_1
0x4000b33	          0x83fe02	                              cmp esi, 2	       349	color.c	FUNCTION_11	IF_2
0x4000b36	          0x4189f5	                           mov r13d, esi	       347	color.c	FUNCTION_11	IF_1
0x4000b39	            0x7415	                            je 0x4000b50	       349	color.c	FUNCTION_11	IF_2
0x4000b3b	        0x4883c408	                              add rsp, 8	       355	color.c	FUNCTION_11
0x4000b3f	          0x4489e8	                           mov eax, r13d	       355	color.c	FUNCTION_11
0x4000b42	              0x5b	                                 pop rbx	       355	color.c	FUNCTION_11
0x4000b43	              0x5d	                                 pop rbp	       355	color.c	FUNCTION_11
0x4000b44	            0x415c	                                 pop r12	       355	color.c	FUNCTION_11
0x4000b46	            0x415d	                                 pop r13	       355	color.c	FUNCTION_11
0x4000b48	              0xc3	                                     ret	       355	color.c	FUNCTION_11
0x4000b49	     0xf1f80000000	                         nop dword [rax]	       355	color.c	FUNCTION_11
0x4000b50	          0x4863ef	                         movsxd rbp, edi	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000b53	    0x448b2cad0000	                 mov r13d, dword [rbp*4]	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000b5b	          0x4585ed	                         test r13d, r13d	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000b5e	            0x79db	                           jns 0x4000b3b	       350	color.c	FUNCTION_11	IF_2	IF_3
0x4000b60	          0x83ff01	                              cmp edi, 1	       325	color.c	FUNCTION_10
0x4000b63	    0x448b2d000000	           mov r13d, dword [0x04000b6a] 	       325	color.c	FUNCTION_10
0x4000b6a	    0x41bc00000000	                             mov r12d, 0	       325	color.c	FUNCTION_10
0x4000b70	            0x743e	                            je 0x4000bb0	       325	color.c	FUNCTION_10
0x4000b72	          0x4585ed	                         test r13d, r13d	       326	color.c	FUNCTION_10	IF_1
0x4000b75	            0x89fb	                            mov ebx, edi	       326	color.c	FUNCTION_10	IF_1
0x4000b77	            0x7846	                            js 0x4000bbf	       326	color.c	FUNCTION_10	IF_1
0x4000b79	          0x4585ed	                         test r13d, r13d	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b7c	            0x7522	                           jne 0x4000ba0	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b7e	          0x83fb01	                              cmp ebx, 1	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b81	            0x740a	                            je 0x4000b8d	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b83	    0x44892cad0000	                 mov dword [rbp*4], r13d	       351	color.c	FUNCTION_11	IF_2	CALL_1
0x4000b8b	            0xebae	                           jmp 0x4000b3b	       352	color.c	FUNCTION_11	IF_2
0x4000b8d	      0xe800000000	                          call 0x4000b92	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b92	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b94	            0x74ed	                            je 0x4000b83	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b96	    0x8b0500000000	            mov eax, dword [0x04000b9c] 	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b9c	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000b9e	            0x74e3	                            je 0x4000b83	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000ba0	          0x4531ed	                          xor r13d, r13d	       332	color.c	FUNCTION_10
0x4000ba3	      0xe800000000	                          call 0x4000ba8	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0x4000ba8	            0x85c0	                           test eax, eax	       332	color.c	FUNCTION_10
0x4000baa	        0x410f94c5	                               sete r13b	       332	color.c	FUNCTION_10
0x4000bae	            0xebd3	                           jmp 0x4000b83	       332	color.c	FUNCTION_10
0x4000bb0	    0x448b2d000000	           mov r13d, dword [0x04000bb7] 	       325	color.c	FUNCTION_10
0x4000bb7	    0x41bc00000000	                             mov r12d, 0	       325	color.c	FUNCTION_10
0x4000bbd	            0xebb3	                           jmp 0x4000b72	       325	color.c	FUNCTION_10
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       327	color.c	FUNCTION_10	CALL_1
0x4000bc4	          0x4189c5	                           mov r13d, eax	       327	color.c	FUNCTION_10	CALL_1
0x4000bc7	        0x41890424	                    mov dword [r12], eax	       327	color.c	FUNCTION_10	CALL_1
0x4000bcb	            0xebac	                           jmp 0x4000b79	       327	color.c	FUNCTION_10	CALL_1
color_parse	CALL,2:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	13
0x4000a60	              0x55	                                push rbp	       160	color.c	FUNCTION_5
0x4000a61	              0x53	                                push rbx	       160	color.c	FUNCTION_5
0x4000a62	          0x4889f5	                            mov rbp, rsi	       160	color.c	FUNCTION_5
0x4000a65	          0x4889fb	                            mov rbx, rdi	       160	color.c	FUNCTION_5
0x4000a68	        0x4883ec08	                              sub rsp, 8	       160	color.c	FUNCTION_5
0x4000a6c	      0xe800000000	                          call 0x4000a71	       161	color.c	FUNCTION_5	CALL_2
0x4000a71	        0x4883c408	                              add rsp, 8	       162	color.c	FUNCTION_5
0x4000a75	          0x4889ea	                            mov rdx, rbp	       161	color.c	FUNCTION_5	CALL_2
0x4000a78	          0x4889df	                            mov rdi, rbx	       161	color.c	FUNCTION_5	CALL_2
0x4000a7b	              0x5b	                                 pop rbx	       162	color.c	FUNCTION_5
0x4000a7c	              0x5d	                                 pop rbp	       162	color.c	FUNCTION_5
0x4000a7d	            0x89c6	                            mov esi, eax	       161	color.c	FUNCTION_5	CALL_2
0x4000a7f	      0xe9bcf5ffff	                 jmp sym.color_parse_mem	       161	color.c	FUNCTION_5	CALL_2
color_parse_mem	CALL,12:functions,0:WHILE,4:FOR,1:IF,13:DO,0:SWITCH,0:ELSE,1	617
0x4000040	            0x4157	                                push r15	       198	color.c	FUNCTION_8
0x4000042	            0x4156	                                push r14	       198	color.c	FUNCTION_8
0x4000044	          0x4889d0	                            mov rax, rdx	       198	color.c	FUNCTION_8
0x4000047	            0x4155	                                push r13	       198	color.c	FUNCTION_8
0x4000049	            0x4154	                                push r12	       198	color.c	FUNCTION_8
0x400004b	        0x4883c04b	                           add rax, 0x4b	       201	color.c	FUNCTION_8
0x400004f	              0x55	                                push rbp	       198	color.c	FUNCTION_8
0x4000050	              0x53	                                push rbx	       198	color.c	FUNCTION_8
0x4000051	          0x4989fe	                            mov r14, rdi	       198	color.c	FUNCTION_8
0x4000054	        0x4883ec58	                           sub rsp, 0x58	       198	color.c	FUNCTION_8
0x4000058	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       198	color.c	FUNCTION_8
0x4000061	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       198	color.c	FUNCTION_8
0x4000066	            0x31c9	                            xor ecx, ecx	       198	color.c	FUNCTION_8
0x4000068	          0x83fe00	                              cmp esi, 0	       206	color.c	FUNCTION_8	WHILE_1
0x400006b	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       198	color.c	FUNCTION_8
0x4000070	        0x8974242c	             mov dword [rsp + 0x2c], esi	       198	color.c	FUNCTION_8
0x4000074	      0x4889542430	             mov qword [rsp + 0x30], rdx	       198	color.c	FUNCTION_8
0x4000079	      0x4889442418	             mov qword [rsp + 0x18], rax	       201	color.c	FUNCTION_8
0x400007e	     0xf8edf070000	                           jle 0x4000863	       206	color.c	FUNCTION_8	WHILE_1
0x4000084	           0xfb607	                   movzx eax, byte [rdi]	       206	color.c	FUNCTION_8	WHILE_1
0x4000087	          0x4189f7	                           mov r15d, esi	       206	color.c	FUNCTION_8	WHILE_1
0x400008a	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x4000091	            0x7512	                           jne 0x40000a5	       206	color.c	FUNCTION_8	WHILE_1
0x4000093	            0xeb4e	                           jmp 0x40000e3	       206	color.c	FUNCTION_8	WHILE_1
0x4000095	           0xf1f00	                         nop dword [rax]	       206	color.c	FUNCTION_8	WHILE_1
0x4000098	        0x410fb606	                   movzx eax, byte [r14]	       206	color.c	FUNCTION_8	WHILE_1
0x400009c	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x40000a3	            0x743e	                            je 0x40000e3	       206	color.c	FUNCTION_8	WHILE_1
0x40000a5	        0x4983c601	                              add r14, 1	       207	color.c	FUNCTION_8	WHILE_1
0x40000a9	        0x4183ef01	                             sub r15d, 1	       206	color.c	FUNCTION_8	WHILE_1
0x40000ad	            0x75e9	                           jne 0x4000098	       206	color.c	FUNCTION_8	WHILE_1
0x40000af	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       212	color.c	FUNCTION_8	IF_1
0x40000b4	          0xc60000	                       mov byte [rax], 0	       212	color.c	FUNCTION_8	IF_1
0x40000b7	            0x31c0	                            xor eax, eax	       213	color.c	FUNCTION_8	IF_1
0x40000b9	     0xf1f80000000	                         nop dword [rax]	       213	color.c	FUNCTION_8	IF_1
0x40000c0	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       298	color.c	FUNCTION_8
0x40000c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       298	color.c	FUNCTION_8
0x40000ce	     0xf857e090000	                           jne 0x4000a52	       298	color.c	FUNCTION_8
0x40000d4	        0x4883c458	                           add rsp, 0x58	       298	color.c	FUNCTION_8
0x40000d8	              0x5b	                                 pop rbx	       298	color.c	FUNCTION_8
0x40000d9	              0x5d	                                 pop rbp	       298	color.c	FUNCTION_8
0x40000da	            0x415c	                                 pop r12	       298	color.c	FUNCTION_8
0x40000dc	            0x415d	                                 pop r13	       298	color.c	FUNCTION_8
0x40000de	            0x415e	                                 pop r14	       298	color.c	FUNCTION_8
0x40000e0	            0x415f	                                 pop r15	       298	color.c	FUNCTION_8
0x40000e2	              0xc3	                                     ret	       298	color.c	FUNCTION_8
0x40000e3	          0x4963d7	                        movsxd rdx, r15d	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000e6	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000eb	          0x4c89f7	                            mov rdi, r14	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000ee	      0xe800000000	                          call 0x40000f3	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000f3	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000f5	     0xf8485070000	                            je 0x4000880	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000fb	          0x4c89f0	                            mov rax, r14	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x40000fe	      0xc644243900	                mov byte [rsp + 0x39], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000103	          0x4589fe	                          mov r14d, r15d	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000106	      0xc644243a00	                mov byte [rsp + 0x3a], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400010b	      0xc644243b00	                mov byte [rsp + 0x3b], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000110	          0x4989c7	                            mov r15, rax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000113	      0xc644242b00	                mov byte [rsp + 0x2b], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000118	    0xc74424140000	               mov dword [rsp + 0x14], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000120	      0xc644242800	                mov byte [rsp + 0x28], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000125	      0xc644242900	                mov byte [rsp + 0x29], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400012a	      0xc644242a00	                mov byte [rsp + 0x2a], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400012f	      0xc644243800	                mov byte [rsp + 0x38], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000134	    0xc74424100000	               mov dword [rsp + 0x10], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400013c	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000144	         0xf1f4000	                         nop dword [rax]	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000148	          0x4d89f8	                             mov r8, r15	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400014b	            0x31ed	                            xor ebp, ebp	       225	color.c	FUNCTION_8	WHILE_2
0x400014d	           0xf1f00	                         nop dword [rax]	       225	color.c	FUNCTION_8	WHILE_2
0x4000150	        0x410fb600	                    movzx eax, byte [r8]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000154	          0x4d89c4	                             mov r12, r8	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000157	          0x4d29fc	                            sub r12, r15	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x400015a	    0xf68000000000	                      test byte [rax], 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000161	     0xf85e1020000	                           jne 0x4000448	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000167	          0x83c501	                              add ebp, 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x400016a	        0x4983c001	                               add r8, 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x400016e	        0x4183ee01	                             sub r14d, 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000172	            0x75dc	                           jne 0x4000150	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000174	          0x4c63e5	                         movsxd r12, ebp	       232	color.c	FUNCTION_8	WHILE_2
0x4000177	        0x4f8d2c27	                    lea r13, [r15 + r12]	       232	color.c	FUNCTION_8	WHILE_2
0x400017b	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x400017e	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x4000183	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000186	      0xe800000000	                          call 0x400018b	        51	color.c	FUNCTION_1	CALL_1
0x400018b	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x400018d	            0x7561	                           jne 0x40001f0	        51	color.c	FUNCTION_1	CALL_1
0x400018f	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000198	            0x7556	                           jne 0x40001f0	        51	color.c	FUNCTION_1	CALL_1
0x400019a	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x400019c	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       224	color.c	FUNCTION_8	WHILE_2
0x40001a1	            0x31db	                            xor ebx, ebx	       224	color.c	FUNCTION_8	WHILE_2
0x40001a3	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x40001a5	      0xb901000000	                              mov ecx, 1	        77	color.c	FUNCTION_3	IF_1
0x40001aa	        0x8b742410	            mov esi, dword [rsp + 0x10] 	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40001ae	            0x85f6	                           test esi, esi	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40001b0	     0xf84ca010000	                            je 0x4000380	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x40001b6	        0x8b6c2414	            mov ebp, dword [rsp + 0x14] 	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001ba	            0x85ed	                           test ebp, ebp	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001bc	     0xf852e030000	                           jne 0x40004f0	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001c2	       0xfb67c240f	            movzx edi, byte [rsp + 0xf] 	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001c7	        0x88542439	               mov byte [rsp + 0x39], dl	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001cb	        0x885c243b	               mov byte [rsp + 0x3b], bl	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001cf	        0x8844242b	               mov byte [rsp + 0x2b], al	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001d3	        0x894c2414	             mov dword [rsp + 0x14], ecx	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001d7	      0x40887c243a	              mov byte [rsp + 0x3a], dil	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x40001dc	          0x4585f6	                         test r14d, r14d	       222	color.c	FUNCTION_8	WHILE_2
0x40001df	     0xf84be010000	                            je 0x40003a3	       222	color.c	FUNCTION_8	WHILE_2
0x40001e5	          0x4d89ef	                            mov r15, r13	       222	color.c	FUNCTION_8	WHILE_2
0x40001e8	      0xe95bffffff	                           jmp 0x4000148	       222	color.c	FUNCTION_8	WHILE_2
0x40001ed	           0xf1f00	                         nop dword [rax]	       222	color.c	FUNCTION_8	WHILE_2
0x40001f0	          0x83fd07	                              cmp ebp, 7	        82	color.c	FUNCTION_3	IF_2
0x40001f3	     0xf846f030000	                            je 0x4000568	        82	color.c	FUNCTION_3	IF_2
0x40001f9	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       224	color.c	FUNCTION_8	WHILE_2
0x40001fe	            0x31db	                            xor ebx, ebx	       224	color.c	FUNCTION_8	WHILE_2
0x4000200	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x4000203	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x4000208	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x400020b	      0xe800000000	                          call 0x4000210	        51	color.c	FUNCTION_1	CALL_1
0x4000210	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x4000212	            0x750f	                           jne 0x4000223	        51	color.c	FUNCTION_1	CALL_1
0x4000214	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x400021d	     0xf8475050000	                            je 0x4000798	        51	color.c	FUNCTION_1	CALL_1
0x4000223	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x4000226	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x400022b	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x400022e	      0xe800000000	                          call 0x4000233	        51	color.c	FUNCTION_1	CALL_1
0x4000233	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x4000235	            0x750f	                           jne 0x4000246	        51	color.c	FUNCTION_1	CALL_1
0x4000237	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000240	     0xf8460050000	                            je 0x40007a6	        51	color.c	FUNCTION_1	CALL_1
0x4000246	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x4000249	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x400024e	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000251	      0xe800000000	                          call 0x4000256	        51	color.c	FUNCTION_1	CALL_1
0x4000256	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x4000258	            0x750f	                           jne 0x4000269	        51	color.c	FUNCTION_1	CALL_1
0x400025a	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000263	     0xf844e050000	                            je 0x40007b7	        51	color.c	FUNCTION_1	CALL_1
0x4000269	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x400026c	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x4000271	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000274	      0xe800000000	                          call 0x4000279	        51	color.c	FUNCTION_1	CALL_1
0x4000279	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x400027b	            0x750f	                           jne 0x400028c	        51	color.c	FUNCTION_1	CALL_1
0x400027d	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000286	     0xf843c050000	                            je 0x40007c8	        51	color.c	FUNCTION_1	CALL_1
0x400028c	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x400028f	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x4000294	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000297	      0xe800000000	                          call 0x400029c	        51	color.c	FUNCTION_1	CALL_1
0x400029c	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x400029e	            0x750f	                           jne 0x40002af	        51	color.c	FUNCTION_1	CALL_1
0x40002a0	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x40002a9	     0xf842a050000	                            je 0x40007d9	        51	color.c	FUNCTION_1	CALL_1
0x40002af	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x40002b2	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x40002b7	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x40002ba	      0xe800000000	                          call 0x40002bf	        51	color.c	FUNCTION_1	CALL_1
0x40002bf	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x40002c1	            0x750f	                           jne 0x40002d2	        51	color.c	FUNCTION_1	CALL_1
0x40002c3	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x40002cc	     0xf8418050000	                            je 0x40007ea	        51	color.c	FUNCTION_1	CALL_1
0x40002d2	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x40002d5	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x40002da	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x40002dd	      0xe800000000	                          call 0x40002e2	        51	color.c	FUNCTION_1	CALL_1
0x40002e2	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x40002e4	            0x750f	                           jne 0x40002f5	        51	color.c	FUNCTION_1	CALL_1
0x40002e6	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x40002ef	     0xf8429020000	                            je 0x400051e	        51	color.c	FUNCTION_1	CALL_1
0x40002f5	          0x4c89e2	                            mov rdx, r12	        51	color.c	FUNCTION_1	CALL_1
0x40002f8	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x40002fd	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000300	      0xe800000000	                          call 0x4000305	        51	color.c	FUNCTION_1	CALL_1
0x4000305	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x4000307	            0x750f	                           jne 0x4000318	        51	color.c	FUNCTION_1	CALL_1
0x4000309	    0x4180bc240000	                       cmp byte [r12], 0	        51	color.c	FUNCTION_1	CALL_1
0x4000312	     0xf843a050000	                            je 0x4000852	        51	color.c	FUNCTION_1	CALL_1
0x4000318	      0x488d742440	                   lea rsi, [rsp + 0x40]	       101	color.c	FUNCTION_3	CALL_6
0x400031d	      0xba0a000000	                            mov edx, 0xa	       101	color.c	FUNCTION_3	CALL_6
0x4000322	          0x4c89ff	                            mov rdi, r15	       101	color.c	FUNCTION_3	CALL_6
0x4000325	      0xe800000000	                          call 0x400032a	       101	color.c	FUNCTION_3	CALL_6
0x400032a	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       107	color.c	FUNCTION_3	IF_5	IF_6
0x400032f	          0x4863f5	                         movsxd rsi, ebp	       107	color.c	FUNCTION_3	IF_5	IF_6
0x4000332	          0x4c29fa	                            sub rdx, r15	       107	color.c	FUNCTION_3	IF_5	IF_6
0x4000335	          0x4839f2	                            cmp rdx, rsi	       107	color.c	FUNCTION_3	IF_5	IF_6
0x4000338	     0xf8533010000	                           jne 0x4000471	       107	color.c	FUNCTION_3	IF_5	IF_6
0x400033e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       107	color.c	FUNCTION_3	IF_5	IF_6
0x4000342	     0xf8c29010000	                            jl 0x4000471	       107	color.c	FUNCTION_3	IF_5	IF_6
0x4000348	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x400034c	     0xf84fe020000	                            je 0x4000650	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x4000352	        0x4883f807	                              cmp rax, 7	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000356	     0xf8ecc010000	                           jle 0x4000528	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x400035c	    0x483dff000000	                           cmp rax, 0xff	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000362	     0xf8f09010000	                            jg 0x4000471	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000368	        0x8b742410	            mov esi, dword [rsp + 0x10] 	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400036c	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x400036e	      0xb903000000	                              mov ecx, 3	       118	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000373	            0x85f6	                           test esi, esi	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000375	     0xf853bfeffff	                           jne 0x40001b6	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400037b	       0xf1f440000	                   nop dword [rax + rax]	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000380	       0xfb67c240f	            movzx edi, byte [rsp + 0xf] 	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000385	          0x4585f6	                         test r14d, r14d	       222	color.c	FUNCTION_8	WHILE_2
0x4000388	        0x88542428	               mov byte [rsp + 0x28], dl	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400038c	        0x885c242a	               mov byte [rsp + 0x2a], bl	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000390	        0x88442438	               mov byte [rsp + 0x38], al	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000394	        0x894c2410	             mov dword [rsp + 0x10], ecx	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000398	      0x40887c2429	              mov byte [rsp + 0x29], dil	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400039d	     0xf8542feffff	                           jne 0x40001e5	       222	color.c	FUNCTION_8	WHILE_2
0x40003a3	      0x448b5c243c	           mov r11d, dword [rsp + 0x3c] 	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40003a8	          0x4585db	                         test r11d, r11d	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40003ab	     0xf844a040000	                            je 0x40007fb	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40003b1	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003b6	      0x448b6c243c	           mov r13d, dword [rsp + 0x3c] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003bb	            0x31db	                            xor ebx, ebx	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003bd	            0x31f6	                            xor esi, esi	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003bf	    0x41bc01000000	                             mov r12d, 1	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003c5	          0x4889c8	                            mov rax, rcx	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003c8	          0xc6011b	                    mov byte [rcx], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003cb	        0xc641015b	                mov byte [rcx + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003cf	        0x4883c002	                              add rax, 2	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003d3	       0xf1f440000	                   nop dword [rax + rax]	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40003d8	          0x4489e2	                           mov edx, r12d	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003db	            0x89d9	                            mov ecx, ebx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003dd	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003df	          0x4485ea	                          test edx, r13d	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x40003e2	            0x745a	                            je 0x400043e	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x40003e4	            0xf7d2	                                 not edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003e6	          0x8d6e01	                      lea ebp, [rsi + 1]	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40003e9	          0x4121d5	                           and r13d, edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40003ec	            0x85f6	                           test esi, esi	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40003ee	     0xf84ac020000	                            je 0x40006a0	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40003f4	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40003f9	     0xf842c060000	                            je 0x4000a2b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40003ff	        0x4c8d7001	                      lea r14, [rax + 1]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000403	          0xc6003b	                    mov byte [rax], 0x3b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000406	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x400040b	            0x89d9	                            mov ecx, ebx	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x400040d	            0x31c0	                            xor eax, eax	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x400040f	      0xba00000000	                              mov edx, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x4000414	          0x4c89f7	                            mov rdi, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x4000417	          0x83c301	                              add ebx, 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400041a	          0x4c29f6	                            sub rsi, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x400041d	      0xe800000000	                          call 0x4000422	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x4000422	            0x4898	                                    cdqe	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x4000424	          0x4c01f0	                            add rax, r14	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x4000427	          0x4585ed	                         test r13d, r13d	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400042a	     0xf8478020000	                            je 0x40006a8	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000430	          0x4489e2	                           mov edx, r12d	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000433	            0x89d9	                            mov ecx, ebx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000435	            0x89ee	                            mov esi, ebp	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000437	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000439	          0x4485ea	                          test edx, r13d	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x400043c	            0x75a6	                           jne 0x40003e4	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x400043e	          0x83c301	                              add ebx, 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000441	            0xeb95	                           jmp 0x40003d8	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000443	       0xf1f440000	                   nop dword [rax + rax]	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000448	          0x4d89c5	                             mov r13, r8	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400044b	            0xeb15	                           jmp 0x4000462	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400044d	           0xf1f00	                         nop dword [rax]	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000450	      0x410fb64500	                   movzx eax, byte [r13]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000455	    0xf68000000000	                      test byte [rax], 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400045c	     0xf8419fdffff	                            je 0x400017b	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000462	        0x4983c501	                              add r13, 1	       234	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000466	        0x4183ee01	                             sub r14d, 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400046a	            0x75e4	                           jne 0x4000450	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400046c	      0xe90afdffff	                           jmp 0x400017b	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000471	          0x83fd01	                              cmp ebp, 1	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000474	     0xf8ebe000000	                           jle 0x4000538	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400047a	      0xba02000000	                              mov edx, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400047f	      0xbe00000000	                              mov esi, 0	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000484	          0x4c89ff	                            mov rdi, r15	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000487	      0xe800000000	                          call 0x400048c	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400048c	            0x85c0	                           test eax, eax	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400048e	     0xf85a4000000	                           jne 0x4000538	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000494	          0x4c89e0	                            mov rax, r12	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000497	        0x498d7702	                      lea rsi, [r15 + 2]	       525	git-compat-util.h	FUNCTION_44	IF_1
0x400049b	        0x4883e802	                              sub rax, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400049f	     0xf84b9010000	                            je 0x400065e	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40004a5	      0x41807f022d	                cmp byte [r15 + 2], 0x2d	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40004aa	     0xf8592030000	                           jne 0x4000842	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x40004b0	        0x4983c703	                              add r15, 3	       525	git-compat-util.h	FUNCTION_44	IF_1
0x40004b4	        0x4983ec03	                              sub r12, 3	       526	git-compat-util.h	FUNCTION_44	IF_1
0x40004b8	      0xbb01000000	                              mov ebx, 1	       149	color.c	FUNCTION_4	IF_1
0x40004bd	        0x4983fc04	                              cmp r12, 4	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c1	            0x747d	                            je 0x4000540	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c3	        0x4983fc03	                              cmp r12, 3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c7	     0xf8533010000	                           jne 0x4000600	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004cd	      0xba03000000	                              mov edx, 3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004d2	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004d5	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004da	      0xe800000000	                          call 0x40004df	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004df	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004e1	     0xf84d9040000	                            je 0x40009c0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004e7	    0x660f1f840000	                    nop word [rax + rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004f0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_65
0x40004f5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_65
0x40004fa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_65
0x40004fc	      0xe800000000	                          call 0x4000501	        54	gettext.h	FUNCTION_65
0x4000501	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       296	color.c	FUNCTION_8	CALL_12
0x4000506	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       296	color.c	FUNCTION_8	CALL_12
0x400050a	          0x4889c7	                            mov rdi, rax	       296	color.c	FUNCTION_8	CALL_12
0x400050d	            0x31c0	                            xor eax, eax	       296	color.c	FUNCTION_8	CALL_12
0x400050f	      0xe800000000	                          call 0x4000514	       296	color.c	FUNCTION_8	CALL_12
0x4000514	      0xb8ffffffff	                     mov eax, 0xffffffff	       296	color.c	FUNCTION_8	CALL_12
0x4000519	      0xe9a2fbffff	                           jmp 0x40000c0	       296	color.c	FUNCTION_8	CALL_12
0x400051e	      0xb806000000	                              mov eax, 6	        51	color.c	FUNCTION_1	CALL_1
0x4000523	       0xf1f440000	                   nop dword [rax + rax]	        51	color.c	FUNCTION_1	CALL_1
0x4000528	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x400052a	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x400052f	      0xe976fcffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000534	         0xf1f4000	                         nop dword [rax]	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000538	            0x31db	                            xor ebx, ebx	       144	color.c	FUNCTION_4
0x400053a	        0x4983fc04	                              cmp r12, 4	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400053e	            0x7583	                           jne 0x40004c3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000540	      0xba04000000	                              mov edx, 4	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000545	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000548	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400054d	      0xe800000000	                          call 0x4000552	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000552	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000554	            0x759a	                           jne 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000556	      0xb901000000	                              mov ecx, 1	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400055b	      0xb816000000	                           mov eax, 0x16	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000560	      0xe986030000	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000565	           0xf1f00	                         nop dword [rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000568	        0x41803f23	                    cmp byte [r15], 0x23	        82	color.c	FUNCTION_3	IF_2
0x400056c	     0xf8587fcffff	                           jne 0x40001f9	        82	color.c	FUNCTION_3	IF_2
0x4000572	      0x410fb64701	               movzx eax, byte [r15 + 1]	      1273	cache.h	FUNCTION_90
0x4000577	     0xfbe98000000	                   movsx ebx, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x400057e	      0x410fb64702	               movzx eax, byte [r15 + 2]	      1273	cache.h	FUNCTION_90
0x4000583	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x400058a	          0xc1e304	                              shl ebx, 4	        57	color.c	FUNCTION_2	CALL_2
0x400058d	             0x9c3	                             or ebx, eax	        57	color.c	FUNCTION_2	CALL_2
0x400058f	    0xf7c300ffffff	                    test ebx, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x4000595	     0xf855efcffff	                           jne 0x40001f9	        58	color.c	FUNCTION_2	IF_1
0x400059b	      0x410fb64703	               movzx eax, byte [r15 + 3]	      1273	cache.h	FUNCTION_90
0x40005a0	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x40005a7	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_2	CALL_2
0x40005aa	            0x89c2	                            mov edx, eax	        57	color.c	FUNCTION_2	CALL_2
0x40005ac	      0x410fb64704	               movzx eax, byte [r15 + 4]	      1273	cache.h	FUNCTION_90
0x40005b1	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x40005b8	             0x9d0	                             or eax, edx	        57	color.c	FUNCTION_2	CALL_2
0x40005ba	      0xa900ffffff	                    test eax, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x40005bf	     0xf8573020000	                           jne 0x4000838	        58	color.c	FUNCTION_2	IF_1
0x40005c5	        0x8844240f	                mov byte [rsp + 0xf], al	        60	color.c	FUNCTION_2
0x40005c9	      0x410fb64705	               movzx eax, byte [r15 + 5]	      1273	cache.h	FUNCTION_90
0x40005ce	     0xfbe90000000	                   movsx edx, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x40005d5	      0x410fb64706	               movzx eax, byte [r15 + 6]	      1273	cache.h	FUNCTION_90
0x40005da	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x40005e1	          0xc1e204	                              shl edx, 4	        57	color.c	FUNCTION_2	CALL_2
0x40005e4	             0x9c2	                             or edx, eax	        57	color.c	FUNCTION_2	CALL_2
0x40005e6	    0xf7c200ffffff	                    test edx, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x40005ec	     0xf850efcffff	                           jne 0x4000200	        58	color.c	FUNCTION_2	IF_1
0x40005f2	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x40005f4	      0xb904000000	                              mov ecx, 4	        86	color.c	FUNCTION_3	IF_2	IF_3
0x40005f9	      0xe9acfbffff	                           jmp 0x40001aa	        86	color.c	FUNCTION_3	IF_2	IF_3
0x40005fe	            0x6690	                                     nop	        86	color.c	FUNCTION_3	IF_2	IF_3
0x4000600	        0x4983fc06	                              cmp r12, 6	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000604	     0xf85b3020000	                           jne 0x40008bd	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400060a	      0xba06000000	                              mov edx, 6	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400060f	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000612	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000617	      0xe800000000	                          call 0x400061c	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400061c	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400061e	     0xf84ab030000	                            je 0x40009cf	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000624	      0xba06000000	                              mov edx, 6	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000629	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400062c	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000631	      0xe800000000	                          call 0x4000636	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000636	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000638	     0xf85b2feffff	                           jne 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400063e	      0xb909000000	                              mov ecx, 9	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000643	      0xb81d000000	                           mov eax, 0x1d	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000648	      0xe99e020000	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400064d	           0xf1f00	                         nop dword [rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000650	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x4000652	            0x31c0	                            xor eax, eax	       224	color.c	FUNCTION_8	WHILE_2
0x4000654	      0xb901000000	                              mov ecx, 1	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x4000659	      0xe94cfbffff	                           jmp 0x40001aa	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x400065e	      0xbb01000000	                              mov ebx, 1	       149	color.c	FUNCTION_4	IF_1
0x4000663	        0x4883f807	                              cmp rax, 7	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000667	          0x4989f7	                            mov r15, rsi	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400066a	     0xf856e030000	                           jne 0x40009de	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000670	      0xba07000000	                              mov edx, 7	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000675	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400067a	      0xe800000000	                          call 0x400067f	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400067f	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000681	     0xf8569feffff	                           jne 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000687	      0xb907000000	                              mov ecx, 7	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x400068c	      0xb81b000000	                           mov eax, 0x1b	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000691	      0xe955020000	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40006a0	          0x4989c6	                            mov r14, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40006a3	      0xe95efdffff	                           jmp 0x4000406	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40006a8	      0x837c241001	               cmp dword [rsp + 0x10], 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40006ad	     0xf8684030000	                           jbe 0x4000a37	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40006b3	            0x85ed	                           test ebp, ebp	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006b5	     0xf8432030000	                            je 0x40009ed	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006bb	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006c0	     0xf8465030000	                            je 0x4000a2b	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006c6	        0x488d5801	                      lea rbx, [rax + 1]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006ca	          0xc6003b	                    mov byte [rax], 0x3b	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40006cd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x40006d2	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       171	color.c	FUNCTION_6	SWITCH_1
0x40006d6	          0x4829d8	                            sub rax, rbx	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x40006d9	          0x83f903	                              cmp ecx, 3	       171	color.c	FUNCTION_6	SWITCH_1
0x40006dc	     0xf841e020000	                            je 0x4000900	       171	color.c	FUNCTION_6	SWITCH_1
0x40006e2	          0x83f904	                              cmp ecx, 4	       171	color.c	FUNCTION_6	SWITCH_1
0x40006e5	     0xf85b2010000	                           jne 0x400089d	       171	color.c	FUNCTION_6	SWITCH_1
0x40006eb	        0x4883ec08	                              sub rsp, 8	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40006ef	          0x4863f0	                         movsxd rsi, eax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40006f2	      0xb933000000	                           mov ecx, 0x33	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40006f7	       0xfb6442430	           movzx eax, byte [rsp + 0x30] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40006fc	      0xba00000000	                              mov edx, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000701	          0x4889df	                            mov rdi, rbx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000704	              0x50	                                push rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000705	    0x440fb64c2439	           movzx r9d, byte [rsp + 0x39] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400070b	            0x31c0	                            xor eax, eax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400070d	    0x440fb644243a	           movzx r8d, byte [rsp + 0x3a] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000713	      0xe800000000	                          call 0x4000718	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000718	            0x4159	                                  pop r9	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400071a	            0x415a	                                 pop r10	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400071c	            0x4898	                                    cdqe	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400071e	          0x4801d8	                            add rax, rbx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000721	      0x837c241401	               cmp dword [rsp + 0x14], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000726	            0x763c	                           jbe 0x4000764	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000728	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400072d	     0xf84f8020000	                            je 0x4000a2b	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000733	        0x488d5801	                      lea rbx, [rax + 1]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000737	          0xc6003b	                    mov byte [rax], 0x3b	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400073a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x400073f	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       171	color.c	FUNCTION_6	SWITCH_1
0x4000743	          0x4829d8	                            sub rax, rbx	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000746	          0x83f903	                              cmp ecx, 3	       171	color.c	FUNCTION_6	SWITCH_1
0x4000749	     0xf8432020000	                            je 0x4000981	       171	color.c	FUNCTION_6	SWITCH_1
0x400074f	          0x83f904	                              cmp ecx, 4	       171	color.c	FUNCTION_6	SWITCH_1
0x4000752	     0xf84ef010000	                            je 0x4000947	       171	color.c	FUNCTION_6	SWITCH_1
0x4000758	          0x83f902	                              cmp ecx, 2	       171	color.c	FUNCTION_6	SWITCH_1
0x400075b	     0xf84c6010000	                            je 0x4000927	       171	color.c	FUNCTION_6	SWITCH_1
0x4000761	          0x4889d8	                            mov rax, rbx	       171	color.c	FUNCTION_6	SWITCH_1
0x4000764	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000769	     0xf84bc020000	                            je 0x4000a2b	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400076f	        0x488d5801	                      lea rbx, [rax + 1]	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000773	          0xc6006d	                    mov byte [rax], 0x6d	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000776	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400077b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       293	color.c	FUNCTION_8
0x4000780	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       293	color.c	FUNCTION_8
0x4000785	          0x4839d8	                            cmp rax, rbx	       293	color.c	FUNCTION_8
0x4000788	     0xf849d020000	                            je 0x4000a2b	       293	color.c	FUNCTION_8
0x400078e	          0xc60000	                       mov byte [rax], 0	       293	color.c	FUNCTION_8
0x4000791	            0x31c0	                            xor eax, eax	       294	color.c	FUNCTION_8
0x4000793	      0xe928f9ffff	                           jmp 0x40000c0	       294	color.c	FUNCTION_8
0x4000798	            0x31c0	                            xor eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x400079a	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x400079c	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007a1	      0xe904faffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007a6	      0xb801000000	                              mov eax, 1	        51	color.c	FUNCTION_1	CALL_1
0x40007ab	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40007ad	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007b2	      0xe9f3f9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007b7	      0xb802000000	                              mov eax, 2	        51	color.c	FUNCTION_1	CALL_1
0x40007bc	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40007be	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007c3	      0xe9e2f9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007c8	      0xb803000000	                              mov eax, 3	        51	color.c	FUNCTION_1	CALL_1
0x40007cd	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40007cf	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007d4	      0xe9d1f9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007d9	      0xb804000000	                              mov eax, 4	        51	color.c	FUNCTION_1	CALL_1
0x40007de	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40007e0	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007e5	      0xe9c0f9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007ea	      0xb805000000	                              mov eax, 5	        51	color.c	FUNCTION_1	CALL_1
0x40007ef	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x40007f1	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007f6	      0xe9aff9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x40007fb	      0x837c241001	               cmp dword [rsp + 0x10], 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000800	     0xf86a2010000	                           jbe 0x40009a8	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000806	      0x837c241001	               cmp dword [rsp + 0x10], 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x400080b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000810	          0xc6001b	                    mov byte [rax], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000813	        0x488d5802	                      lea rbx, [rax + 2]	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000817	        0xc640015b	                mov byte [rax + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x400081b	     0xf87acfeffff	                            ja 0x40006cd	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x4000821	      0x837c241401	               cmp dword [rsp + 0x14], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000826	     0xf870effffff	                            ja 0x400073a	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x400082c	      0xe930ffffff	                           jmp 0x4000761	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000831	     0xf1f80000000	                         nop dword [rax]	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000838	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       224	color.c	FUNCTION_8	WHILE_2
0x400083d	      0xe9bef9ffff	                           jmp 0x4000200	       224	color.c	FUNCTION_8	WHILE_2
0x4000842	          0x4989c4	                            mov r12, rax	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000845	          0x4989f7	                            mov r15, rsi	       525	git-compat-util.h	FUNCTION_44	IF_1
0x4000848	      0xbb01000000	                              mov ebx, 1	       149	color.c	FUNCTION_4	IF_1
0x400084d	      0xe96bfcffff	                           jmp 0x40004bd	       149	color.c	FUNCTION_4	IF_1
0x4000852	      0xb807000000	                              mov eax, 7	        51	color.c	FUNCTION_1	CALL_1
0x4000857	            0x31d2	                            xor edx, edx	       224	color.c	FUNCTION_8	WHILE_2
0x4000859	      0xb902000000	                              mov ecx, 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x400085e	      0xe947f9ffff	                           jmp 0x40001aa	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000863	     0xf8446f8ffff	                            je 0x40000af	       211	color.c	FUNCTION_8	IF_1
0x4000869	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400086e	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000873	      0xe800000000	                          call 0x4000878	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000878	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400087a	     0xf85fbfeffff	                           jne 0x400077b	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000880	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000885	      0xba00000000	                              mov edx, 0	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x400088a	      0xbe4b000000	                           mov esi, 0x4b	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x400088f	            0x31c0	                            xor eax, eax	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000891	      0xe800000000	                          call 0x4000896	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000896	            0x31c0	                            xor eax, eax	       218	color.c	FUNCTION_8	IF_2
0x4000898	      0xe923f8ffff	                           jmp 0x40000c0	       218	color.c	FUNCTION_8	IF_2
0x400089d	          0x83f801	                              cmp eax, 1	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x40008a0	     0xf8e85010000	                           jle 0x4000a2b	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x40008a6	       0xfb6542438	           movzx edx, byte [rsp + 0x38] 	       179	color.c	FUNCTION_6	SWITCH_1
0x40008ab	          0xc60333	                    mov byte [rbx], 0x33	       178	color.c	FUNCTION_6	SWITCH_1
0x40008ae	        0x488d4302	                      lea rax, [rbx + 2]	       179	color.c	FUNCTION_6	SWITCH_1
0x40008b2	          0x83c230	                           add edx, 0x30	       179	color.c	FUNCTION_6	SWITCH_1
0x40008b5	          0x885301	                  mov byte [rbx + 1], dl	       179	color.c	FUNCTION_6	SWITCH_1
0x40008b8	      0xe964feffff	                           jmp 0x4000721	       179	color.c	FUNCTION_6	SWITCH_1
0x40008bd	        0x4983fc02	                              cmp r12, 2	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008c1	     0xf852e010000	                           jne 0x40009f5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008c7	      0xba02000000	                              mov edx, 2	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008cc	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008cf	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008d4	      0xe800000000	                          call 0x40008d9	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008d9	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008db	     0xf850ffcffff	                           jne 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008e1	      0xb904000000	                              mov ecx, 4	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008e6	      0xb818000000	                           mov eax, 0x18	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40008eb	            0x85db	                           test ebx, ebx	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40008ed	           0xf45c8	                         cmovne ecx, eax	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40008f0	      0xb801000000	                              mov eax, 1	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40008f5	            0xd3e0	                             shl eax, cl	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40008f7	         0x944243c	              or dword [rsp + 0x3c], eax	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x40008fb	      0xe9dcf8ffff	                           jmp 0x40001dc	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x4000900	    0x440fb6442438	           movzx r8d, byte [rsp + 0x38] 	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000906	          0x4863f0	                         movsxd rsi, eax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000909	      0xb933000000	                           mov ecx, 0x33	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400090e	      0xba00000000	                              mov edx, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000913	          0x4889df	                            mov rdi, rbx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000916	            0x31c0	                            xor eax, eax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000918	      0xe800000000	                          call 0x400091d	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400091d	            0x4898	                                    cdqe	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400091f	          0x4801d8	                            add rax, rbx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000922	      0xe9fafdffff	                           jmp 0x4000721	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000927	          0x83f801	                              cmp eax, 1	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x400092a	     0xf8efb000000	                           jle 0x4000a2b	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x4000930	       0xfb654242b	           movzx edx, byte [rsp + 0x2b] 	       179	color.c	FUNCTION_6	SWITCH_1
0x4000935	          0xc60334	                    mov byte [rbx], 0x34	       178	color.c	FUNCTION_6	SWITCH_1
0x4000938	        0x488d4302	                      lea rax, [rbx + 2]	       179	color.c	FUNCTION_6	SWITCH_1
0x400093c	          0x83c230	                           add edx, 0x30	       179	color.c	FUNCTION_6	SWITCH_1
0x400093f	          0x885301	                  mov byte [rbx + 1], dl	       179	color.c	FUNCTION_6	SWITCH_1
0x4000942	      0xe91dfeffff	                           jmp 0x4000764	       179	color.c	FUNCTION_6	SWITCH_1
0x4000947	        0x4883ec08	                              sub rsp, 8	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400094b	          0x4863f0	                         movsxd rsi, eax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400094e	          0x4889df	                            mov rdi, rbx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000951	       0xfb6442441	           movzx eax, byte [rsp + 0x41] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000956	      0xb934000000	                           mov ecx, 0x34	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400095b	      0xba00000000	                              mov edx, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000960	              0x50	                                push rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000961	    0x440fb64c244a	           movzx r9d, byte [rsp + 0x4a] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000967	            0x31c0	                            xor eax, eax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000969	    0x440fb644244b	           movzx r8d, byte [rsp + 0x4b] 	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400096f	      0xe800000000	                          call 0x4000974	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000974	            0x4898	                                    cdqe	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000976	              0x5f	                                 pop rdi	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000977	          0x4801d8	                            add rax, rbx	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400097a	            0x4158	                                  pop r8	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x400097c	      0xe9e3fdffff	                           jmp 0x4000764	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x4000981	    0x440fb644242b	           movzx r8d, byte [rsp + 0x2b] 	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000987	          0x4863f0	                         movsxd rsi, eax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400098a	      0xb934000000	                           mov ecx, 0x34	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400098f	      0xba00000000	                              mov edx, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000994	          0x4889df	                            mov rdi, rbx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000997	            0x31c0	                            xor eax, eax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000999	      0xe800000000	                          call 0x400099e	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x400099e	            0x4898	                                    cdqe	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40009a0	          0x4801d8	                            add rax, rbx	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40009a3	      0xe9bcfdffff	                           jmp 0x4000764	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40009a8	      0x837c241401	               cmp dword [rsp + 0x14], 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40009ad	     0xf8753feffff	                            ja 0x4000806	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40009b3	      0xe9c3fdffff	                           jmp 0x400077b	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40009b8	     0xf1f84000000	                   nop dword [rax + rax]	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x40009c0	      0xb902000000	                              mov ecx, 2	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009c5	      0xb816000000	                           mov eax, 0x16	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009ca	      0xe91cffffff	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009cf	      0xb903000000	                              mov ecx, 3	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009d4	      0xb817000000	                           mov eax, 0x17	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009d9	      0xe90dffffff	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009de	        0x4883f806	                              cmp rax, 6	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009e2	     0xf843cfcffff	                            je 0x4000624	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009e8	      0xe903fbffff	                           jmp 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009ed	          0x4889c3	                            mov rbx, rax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009f0	      0xe9d8fcffff	                           jmp 0x40006cd	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009f5	        0x4983fc05	                              cmp r12, 5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009f9	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009fc	          0x4c89e0	                            mov rax, r12	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40009ff	     0xf855efcffff	                           jne 0x4000663	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a05	      0xba05000000	                              mov edx, 5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a0a	      0xbf00000000	                              mov edi, 0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a0f	      0xe800000000	                          call 0x4000a14	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a14	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a16	     0xf85d4faffff	                           jne 0x40004f0	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a1c	      0xb905000000	                              mov ecx, 5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a21	      0xb819000000	                           mov eax, 0x19	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a26	      0xe9c0feffff	                           jmp 0x40008eb	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x4000a2b	      0xbf00000000	                              mov edi, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000a30	            0x31c0	                            xor eax, eax	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000a32	      0xe800000000	                          call 0x4000a37	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000a37	      0x837c241401	               cmp dword [rsp + 0x14], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000a3c	     0xf8622fdffff	                           jbe 0x4000764	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000a42	            0x85ed	                           test ebp, ebp	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000a44	     0xf85defcffff	                           jne 0x4000728	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000a4a	          0x4889c3	                            mov rbx, rax	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000a4d	      0xe9e8fcffff	                           jmp 0x400073a	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000a52	      0xe800000000	                          call 0x4000a57	       298	color.c	FUNCTION_8
color_fprintf	CALL,3:functions,0:WHILE,0:FOR,0:IF,0:DO,0:SWITCH,0:ELSE,0	70
0x4000db0	            0x4155	                                push r13	       400	color.c	FUNCTION_16
0x4000db2	            0x4154	                                push r12	       400	color.c	FUNCTION_16
0x4000db4	          0x4989d5	                            mov r13, rdx	       400	color.c	FUNCTION_16
0x4000db7	              0x55	                                push rbp	       400	color.c	FUNCTION_16
0x4000db8	              0x53	                                push rbx	       400	color.c	FUNCTION_16
0x4000db9	          0x4989fc	                            mov r12, rdi	       400	color.c	FUNCTION_16
0x4000dbc	          0x4889f5	                            mov rbp, rsi	       400	color.c	FUNCTION_16
0x4000dbf	    0x4881ecd80000	                           sub rsp, 0xd8	       400	color.c	FUNCTION_16
0x4000dc6	            0x84c0	                             test al, al	       400	color.c	FUNCTION_16
0x4000dc8	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       400	color.c	FUNCTION_16
0x4000dcd	      0x4c89442440	              mov qword [rsp + 0x40], r8	       400	color.c	FUNCTION_16
0x4000dd2	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       400	color.c	FUNCTION_16
0x4000dd7	            0x7437	                            je 0x4000e10	       400	color.c	FUNCTION_16
0x4000dd9	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       400	color.c	FUNCTION_16
0x4000dde	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       400	color.c	FUNCTION_16
0x4000de3	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       400	color.c	FUNCTION_16
0x4000de8	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       400	color.c	FUNCTION_16
0x4000df0	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       400	color.c	FUNCTION_16
0x4000df8	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       400	color.c	FUNCTION_16
0x4000e00	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       400	color.c	FUNCTION_16
0x4000e08	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       400	color.c	FUNCTION_16
0x4000e10	    0x64488b042528	                mov rax, qword fs:[0x28]	       400	color.c	FUNCTION_16
0x4000e19	      0x4889442418	             mov qword [rsp + 0x18], rax	       400	color.c	FUNCTION_16
0x4000e1e	            0x31c0	                            xor eax, eax	       400	color.c	FUNCTION_16
0x4000e20	            0x31db	                            xor ebx, ebx	       387	color.c	FUNCTION_15
0x4000e22	    0x488d84240001	                  lea rax, [rsp + 0x100]	       403	color.c	FUNCTION_16	CALL_1
0x4000e2a	        0x807d0000	                       cmp byte [rbp], 0	       389	color.c	FUNCTION_15	IF_1
0x4000e2e	      0x4889442408	                mov qword [rsp + 8], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000e33	      0x488d442420	                   lea rax, [rsp + 0x20]	       403	color.c	FUNCTION_16	CALL_1
0x4000e38	    0xc70424180000	                   mov dword [rsp], 0x18	       403	color.c	FUNCTION_16	CALL_1
0x4000e3f	    0xc74424043000	               mov dword [rsp + 4], 0x30	       403	color.c	FUNCTION_16	CALL_1
0x4000e47	      0x4889442410	             mov qword [rsp + 0x10], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000e4c	            0x7542	                           jne 0x4000e90	       389	color.c	FUNCTION_15	IF_1
0x4000e4e	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000e51	          0x4c89ea	                            mov rdx, r13	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000e54	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000e59	          0x4c89e7	                            mov rdi, r12	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000e5c	      0xe800000000	                          call 0x4000e61	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000e61	             0x1c3	                            add ebx, eax	       391	color.c	FUNCTION_15	CALL_1
0x4000e63	        0x807d0000	                       cmp byte [rbp], 0	       392	color.c	FUNCTION_15	IF_2
0x4000e67	            0x7547	                           jne 0x4000eb0	       392	color.c	FUNCTION_15	IF_2
0x4000e69	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       407	color.c	FUNCTION_16
0x4000e6e	    0x644833142528	                xor rdx, qword fs:[0x28]	       407	color.c	FUNCTION_16
0x4000e77	            0x89d8	                            mov eax, ebx	       407	color.c	FUNCTION_16
0x4000e79	            0x7552	                           jne 0x4000ecd	       407	color.c	FUNCTION_16
0x4000e7b	    0x4881c4d80000	                           add rsp, 0xd8	       407	color.c	FUNCTION_16
0x4000e82	              0x5b	                                 pop rbx	       407	color.c	FUNCTION_16
0x4000e83	              0x5d	                                 pop rbp	       407	color.c	FUNCTION_16
0x4000e84	            0x415c	                                 pop r12	       407	color.c	FUNCTION_16
0x4000e86	            0x415d	                                 pop r13	       407	color.c	FUNCTION_16
0x4000e88	              0xc3	                                     ret	       407	color.c	FUNCTION_16
0x4000e89	     0xf1f80000000	                         nop dword [rax]	       407	color.c	FUNCTION_16
0x4000e90	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x4000e93	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000e98	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000e9d	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_9
0x4000ea0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000ea2	      0xe800000000	                          call 0x4000ea7	        97	stdio2.h	CALL_9
0x4000ea7	            0x89c3	                            mov ebx, eax	        97	stdio2.h	CALL_9
0x4000ea9	            0xeba3	                           jmp 0x4000e4e	        97	stdio2.h	CALL_9
0x4000eab	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_9
0x4000eb0	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x4000eb5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000eba	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000ebf	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_9
0x4000ec2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000ec4	      0xe800000000	                          call 0x4000ec9	        97	stdio2.h	CALL_9
0x4000ec9	             0x1c3	                            add ebx, eax	       393	color.c	FUNCTION_15	IF_2
0x4000ecb	            0xeb9c	                           jmp 0x4000e69	       393	color.c	FUNCTION_15	IF_2
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       407	color.c	FUNCTION_16
