cache_ref_iterator_advance	CALL,4:ELSE,2:FOR,0:functions,0:DO,0:IF,6:SWITCH,0:WHILE,1	151
0x4000440	            0x4157	                                push r15	       441	ref-cache.c	FUNCTION_21
0x4000442	            0x4156	                                push r14	       441	ref-cache.c	FUNCTION_21
0x4000444	            0x4155	                                push r13	       441	ref-cache.c	FUNCTION_21
0x4000446	            0x4154	                                push r12	       441	ref-cache.c	FUNCTION_21
0x4000448	              0x55	                                push rbp	       441	ref-cache.c	FUNCTION_21
0x4000449	              0x53	                                push rbx	       441	ref-cache.c	FUNCTION_21
0x400044a	          0x4889fd	                            mov rbp, rdi	       441	ref-cache.c	FUNCTION_21
0x400044d	    0x48bbffffffff	          movabs rbx, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000457	        0x4883ec08	                              sub rsp, 8	       441	ref-cache.c	FUNCTION_21
0x400045b	        0x488b4740	            mov rax, qword [rdi + 0x40] 	       441	ref-cache.c	FUNCTION_21
0x400045f	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	       441	ref-cache.c	FUNCTION_21
0x4000463	       0xf1f440000	                   nop dword [rax + rax]	       441	ref-cache.c	FUNCTION_21
0x4000468	        0x48c1e104	                              shl rcx, 4	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x400046c	      0x4c8d6c08f0	             lea r13, [rax + rcx - 0x10]	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000471	        0x418b450c	              mov eax, dword [r13 + 0xc]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000475	        0x4d8b6500	                    mov r12, qword [r13]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x4000479	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x400047c	          0x4c89e2	                            mov rdx, r12	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x400047f	     0xf848b010000	                            je 0x4000610	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000485	          0x83c001	                              add eax, 1	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000488	            0x3b02	                    cmp eax, dword [rdx]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x400048a	        0x4189450c	              mov dword [r13 + 0xc], eax	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x400048e	     0xf84dc000000	                            je 0x4000570	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000494	        0x458b6d08	               mov r13d, dword [r13 + 8]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x4000498	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x400049d	            0x4898	                                    cdqe	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x400049f	        0x4183fd01	                             cmp r13d, 1	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40004a3	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x40004a7	     0xf84e3000000	                            je 0x4000590	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x40004ad	      0x41f6042410	                   test byte [r12], 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004b2	     0xf841d010000	                            je 0x40005d5	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004b8	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004bc	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004c0	        0x488d4a01	                      lea rcx, [rdx + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004c4	          0x4839c1	                            cmp rcx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004c7	     0xf8633010000	                           jbe 0x4000600	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004cd	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004d2	          0x48d1ee	                              shr rsi, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004d5	          0x4839ce	                            cmp rsi, rcx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004d8	        0x480f43ce	                         cmovae rcx, rsi	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004dc	          0x4839d9	                            cmp rcx, rbx	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40004df	          0x4889ca	                            mov rdx, rcx	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40004e2	        0x48894d30	            mov qword [rbp + 0x30], rcx 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40004e6	     0xf8779010000	                            ja 0x4000665	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40004ec	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004f0	          0x4889ce	                            mov rsi, rcx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004f3	        0x48c1e604	                              shl rsi, 4	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004f7	      0xe800000000	                          call 0x40004fc	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40004fc	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000500	        0x48894540	            mov qword [rbp + 0x40], rax 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000504	        0x488d4a01	                      lea rcx, [rdx + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000508	        0x48c1e204	                              shl rdx, 4	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400050c	        0x48894d28	            mov qword [rbp + 0x28], rcx 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000510	        0x4c8d3410	                    lea r14, [rax + rdx]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000514	      0x410fb61424	                   movzx edx, byte [r12]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000519	          0xf6c210	                           test dl, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400051c	     0xf843e010000	                            je 0x4000660	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000522	          0x83e220	                           and edx, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x4000525	      0x4d8d7c2408	                      lea r15, [r12 + 8]	        23	ref-cache.c	FUNCTION_2
0x400052a	            0x742d	                            je 0x4000559	        24	ref-cache.c	FUNCTION_2	IF_1
0x400052c	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4000531	        0x488b4110	            mov rax, qword [rcx + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4000535	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4000538	     0xf8418010000	                            je 0x4000656	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x400053e	        0x488b7908	                mov rdi, qword [rcx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4000542	      0x498d542428	                   lea rdx, [r12 + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4000547	          0x4c89fe	                            mov rsi, r15	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x400054a	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x400054c	      0x41802424df	                    and byte [r12], 0xdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000551	        0x488b4540	            mov rax, qword [rbp + 0x40] 	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000555	        0x488b4d28	            mov rcx, qword [rbp + 0x28] 	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000559	          0x4d893e	                    mov qword [r14], r15	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x400055c	        0x45896e08	               mov dword [r14 + 8], r13d	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000560	    0x41c7460cffff	      mov dword [r14 + 0xc], 0xffffffff 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000568	      0xe9fbfeffff	                           jmp 0x4000468	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400056d	           0xf1f00	                         nop dword [rax]	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000570	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000574	        0x488d48ff	                      lea rcx, [rax - 1]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000578	          0x4885c9	                           test rcx, rcx	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x400057b	        0x48894d28	            mov qword [rbp + 0x28], rcx 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x400057f	     0xf84bb000000	                            je 0x4000640	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000585	        0x488b4540	            mov rax, qword [rbp + 0x40] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000589	      0xe9dafeffff	                           jmp 0x4000468	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x400058e	            0x6690	                                     nop	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000590	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000594	      0x498d542428	                   lea rdx, [r12 + 0x28]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000599	           0xfb608	                   movzx ecx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400059c	            0x84c9	                             test cl, cl	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x400059e	            0x7427	                            je 0x40005c7	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005a0	    0x410fb6742428	           movzx esi, byte [r12 + 0x28] 	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005a6	          0x4038ce	                             cmp sil, cl	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005a9	            0x740d	                            je 0x40005b8	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005ab	            0xeb7b	                           jmp 0x4000628	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005ad	           0xf1f00	                         nop dword [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005b0	           0xfb632	                   movzx esi, byte [rdx]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005b3	          0x4038f1	                             cmp cl, sil	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005b6	            0x7570	                           jne 0x4000628	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005b8	        0x4883c001	                              add rax, 1	       331	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005bc	           0xfb608	                   movzx ecx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005bf	        0x4883c201	                              add rdx, 1	       330	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005c3	            0x84c9	                             test cl, cl	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005c5	            0x75e9	                           jne 0x40005b0	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x40005c7	          0x4531ed	                          xor r13d, r13d	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x40005ca	      0x41f6042410	                   test byte [r12], 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40005cf	     0xf85e3feffff	                           jne 0x40004b8	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40005d5	      0x498d442428	                   lea rax, [r12 + 0x28]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005da	        0x48894510	            mov qword [rbp + 0x10], rax 	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005de	      0x498d442408	                      lea rax, [r12 + 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005e3	        0x48894518	            mov qword [rbp + 0x18], rax 	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005e7	      0x410fb60424	                   movzx eax, byte [r12]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005ec	          0x894520	            mov dword [rbp + 0x20], eax 	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x40005ef	        0x4883c408	                              add rsp, 8	       489	ref-cache.c	FUNCTION_21
0x40005f3	            0x31c0	                            xor eax, eax	       489	ref-cache.c	FUNCTION_21
0x40005f5	              0x5b	                                 pop rbx	       489	ref-cache.c	FUNCTION_21
0x40005f6	              0x5d	                                 pop rbp	       489	ref-cache.c	FUNCTION_21
0x40005f7	            0x415c	                                 pop r12	       489	ref-cache.c	FUNCTION_21
0x40005f9	            0x415d	                                 pop r13	       489	ref-cache.c	FUNCTION_21
0x40005fb	            0x415e	                                 pop r14	       489	ref-cache.c	FUNCTION_21
0x40005fd	            0x415f	                                 pop r15	       489	ref-cache.c	FUNCTION_21
0x40005ff	              0xc3	                                     ret	       489	ref-cache.c	FUNCTION_21
0x4000600	        0x488b4540	            mov rax, qword [rbp + 0x40] 	       489	ref-cache.c	FUNCTION_21
0x4000604	      0xe9fffeffff	                           jmp 0x4000508	       489	ref-cache.c	FUNCTION_21
0x4000609	     0xf1f80000000	                         nop dword [rax]	       489	ref-cache.c	FUNCTION_21
0x4000610	          0x4c89e7	                            mov rdi, r12	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000613	      0xe898fcffff	                   call sym.sort_ref_dir	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000618	        0x418b450c	              mov eax, dword [r13 + 0xc]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x400061c	        0x498b5500	                    mov rdx, qword [r13]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000620	      0xe960feffff	                           jmp 0x4000485	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000625	           0xf1f00	                         nop dword [rax]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000628	          0x4084f6	                           test sil, sil	       335	ref-cache.c	FUNCTION_19	IF_2
0x400062b	     0xf847cfeffff	                            je 0x40004ad	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000631	        0x488b4540	            mov rax, qword [rbp + 0x40] 	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000635	        0x488b4d28	            mov rcx, qword [rbp + 0x28] 	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000639	      0xe92afeffff	                           jmp 0x4000468	       335	ref-cache.c	FUNCTION_19	IF_2
0x400063e	            0x6690	                                     nop	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000640	        0x4883c408	                              add rsp, 8	       489	ref-cache.c	FUNCTION_21
0x4000644	          0x4889ef	                            mov rdi, rbp	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000647	              0x5b	                                 pop rbx	       489	ref-cache.c	FUNCTION_21
0x4000648	              0x5d	                                 pop rbp	       489	ref-cache.c	FUNCTION_21
0x4000649	            0x415c	                                 pop r12	       489	ref-cache.c	FUNCTION_21
0x400064b	            0x415d	                                 pop r13	       489	ref-cache.c	FUNCTION_21
0x400064d	            0x415e	                                 pop r14	       489	ref-cache.c	FUNCTION_21
0x400064f	            0x415f	                                 pop r15	       489	ref-cache.c	FUNCTION_21
0x4000651	      0xe900000000	                           jmp 0x4000656	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000656	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x400065b	      0xe800000000	                          call 0x4000660	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x4000660	      0xe800000000	                          call 0x4000665	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x4000665	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400066a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x400066f	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x4000671	      0xe800000000	                          call 0x4000676	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
cache_ref_iterator_abort	CALL,3:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	11
0x4000060	              0x53	                                push rbx	       498	ref-cache.c	FUNCTION_23
0x4000061	          0x4889fb	                            mov rbx, rdi	       498	ref-cache.c	FUNCTION_23
0x4000064	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4000068	      0xe800000000	                          call 0x400006d	       502	ref-cache.c	FUNCTION_23	CALL_1
0x400006d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000071	      0xe800000000	                          call 0x4000076	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4000076	          0x4889df	                            mov rdi, rbx	       504	ref-cache.c	FUNCTION_23	CALL_3
0x4000079	      0xe800000000	                          call 0x400007e	       504	ref-cache.c	FUNCTION_23	CALL_3
0x400007e	      0xb8ffffffff	                     mov eax, 0xffffffff	       506	ref-cache.c	FUNCTION_23
0x4000083	              0x5b	                                 pop rbx	       506	ref-cache.c	FUNCTION_23
0x4000084	              0xc3	                                     ret	       506	ref-cache.c	FUNCTION_23
free_ref_cache	CALL,2:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	35
0x4001110	            0x4155	                                push r13	        71	ref-cache.c	FUNCTION_6
0x4001112	            0x4154	                                push r12	        71	ref-cache.c	FUNCTION_6
0x4001114	          0x4989fd	                            mov r13, rdi	        71	ref-cache.c	FUNCTION_6
0x4001117	              0x55	                                push rbp	        71	ref-cache.c	FUNCTION_6
0x4001118	              0x53	                                push rbx	        71	ref-cache.c	FUNCTION_6
0x4001119	        0x4883ec08	                              sub rsp, 8	        71	ref-cache.c	FUNCTION_6
0x400111d	          0x4c8b27	                    mov r12, qword [rdi]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x4001120	      0x41f6042410	                   test byte [r12], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001125	            0x7521	                           jne 0x4001148	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001127	          0x4c89e7	                            mov rdi, r12	        67	ref-cache.c	FUNCTION_5	CALL_2
0x400112a	      0xe800000000	                          call 0x400112f	        67	ref-cache.c	FUNCTION_5	CALL_2
0x400112f	        0x4883c408	                              add rsp, 8	        74	ref-cache.c	FUNCTION_6
0x4001133	          0x4c89ef	                            mov rdi, r13	        73	ref-cache.c	FUNCTION_6	CALL_2
0x4001136	              0x5b	                                 pop rbx	        74	ref-cache.c	FUNCTION_6
0x4001137	              0x5d	                                 pop rbp	        74	ref-cache.c	FUNCTION_6
0x4001138	            0x415c	                                 pop r12	        74	ref-cache.c	FUNCTION_6
0x400113a	            0x415d	                                 pop r13	        74	ref-cache.c	FUNCTION_6
0x400113c	      0xe900000000	                           jmp 0x4001141	        73	ref-cache.c	FUNCTION_6	CALL_2
0x4001141	     0xf1f80000000	                         nop dword [rax]	        73	ref-cache.c	FUNCTION_6	CALL_2
0x4001148	      0x418b442408	                mov eax, dword [r12 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400114d	            0x31ed	                            xor ebp, ebp	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400114f	            0x31db	                            xor ebx, ebx	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001151	            0x85c0	                           test eax, eax	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001153	            0x7e1f	                           jle 0x4001174	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001155	           0xf1f00	                         nop dword [rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001158	      0x498b442420	            mov rax, qword [r12 + 0x20] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400115d	          0x83c301	                              add ebx, 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001160	        0x488b3c28	              mov rdi, qword [rax + rbp]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4001164	        0x4883c508	                              add rbp, 8	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4001168	      0xe833efffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400116d	      0x413b5c2408	                cmp ebx, dword [r12 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001172	            0x7ce4	                            jl 0x4001158	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001174	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	        84	ref-cache.c	FUNCTION_7
0x4001179	      0xe800000000	                          call 0x400117e	        84	ref-cache.c	FUNCTION_7
0x400117e	            0xeba7	                           jmp 0x4001127	        84	ref-cache.c	FUNCTION_7
sort_ref_dir	CALL,2:ELSE,1:FOR,1:functions,0:DO,0:IF,2:SWITCH,0:WHILE,0	113
0x40002b0	            0x8b07	                    mov eax, dword [rdi]	       295	ref-cache.c	FUNCTION_18	IF_1
0x40002b2	          0x394708	                cmp dword [rdi + 8], eax	       295	ref-cache.c	FUNCTION_18	IF_1
0x40002b5	     0xf8418010000	                            je 0x40003d3	       295	ref-cache.c	FUNCTION_18	IF_1
0x40002bb	            0x4157	                                push r15	       287	ref-cache.c	FUNCTION_18
0x40002bd	            0x4156	                                push r14	       287	ref-cache.c	FUNCTION_18
0x40002bf	          0x4863f0	                         movsxd rsi, eax	       298	ref-cache.c	FUNCTION_18
0x40002c2	            0x4155	                                push r13	       287	ref-cache.c	FUNCTION_18
0x40002c4	            0x4154	                                push r12	       287	ref-cache.c	FUNCTION_18
0x40002c6	              0x55	                                push rbp	       287	ref-cache.c	FUNCTION_18
0x40002c7	              0x53	                                push rbx	       287	ref-cache.c	FUNCTION_18
0x40002c8	          0x4889fb	                            mov rbx, rdi	       287	ref-cache.c	FUNCTION_18
0x40002cb	        0x4883ec18	                           sub rsp, 0x18	       287	ref-cache.c	FUNCTION_18
0x40002cf	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40002d3	        0x48893c24	                    mov qword [rsp], rdi	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40002d7	            0x7615	                           jbe 0x40002ee	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x40002d9	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40002dd	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40002e2	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40002e7	      0xe800000000	                          call 0x40002ec	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40002ec	            0x8b03	                    mov eax, dword [rbx]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x40002ee	            0x85c0	                           test eax, eax	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40002f0	     0xf8e25010000	                           jle 0x400041b	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40002f6	          0x4531e4	                          xor r12d, r12d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40002f9	            0x31db	                            xor ebx, ebx	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40002fb	            0x31ed	                            xor ebp, ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40002fd	          0x4531f6	                          xor r14d, r14d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000300	        0x488b0424	                    mov rax, qword [rsp]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000304	      0xe987000000	                           jmp 0x4000390	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000309	     0xf1f80000000	                         nop dword [rax]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000310	        0x4c8d7b28	                   lea r15, [rbx + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000314	        0x498d7528	                   lea rsi, [r13 + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000318	      0x4889542408	                mov qword [rsp + 8], rdx	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400031d	          0x4c89ff	                            mov rdi, r15	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000320	      0xe800000000	                          call 0x4000325	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000325	            0x85c0	                           test eax, eax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000327	      0x488b542408	                mov rdx, qword [rsp + 8]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400032c	            0x7573	                           jne 0x40003a1	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x400032e	          0xf60310	                   test byte [rbx], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000331	     0xf85ed000000	                           jne 0x4000424	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000337	      0x41f6450010	                   test byte [r13], 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x400033c	     0xf85e2000000	                           jne 0x4000424	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000342	        0x498d7508	                      lea rsi, [r13 + 8]	       975	cache.h	FUNCTION_59	CALL_1
0x4000346	        0x488d7b08	                      lea rdi, [rbx + 8]	       975	cache.h	FUNCTION_59	CALL_1
0x400034a	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_59	CALL_1
0x400034f	      0xe800000000	                          call 0x4000354	       975	cache.h	FUNCTION_59	CALL_1
0x4000354	            0x85c0	                           test eax, eax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000356	          0x4c89fe	                            mov rsi, r15	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000359	     0xf85d4000000	                           jne 0x4000433	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x400035f	            0x31c0	                            xor eax, eax	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000361	      0xbf00000000	                              mov edi, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000366	      0xe800000000	                          call 0x400036b	       278	ref-cache.c	FUNCTION_17	CALL_5
0x400036b	      0x41f6450010	                   test byte [r13], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x4000370	            0x7566	                           jne 0x40003d8	        60	ref-cache.c	FUNCTION_5	IF_1
0x4000372	          0x4c89ef	                            mov rdi, r13	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000375	          0x83c501	                              add ebp, 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000378	        0x4983c408	                              add r12, 8	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400037c	      0xe800000000	                          call 0x4000381	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000381	        0x488b0424	                    mov rax, qword [rsp]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000385	            0x3928	                    cmp dword [rax], ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000387	            0x7e35	                           jle 0x40003be	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000389	     0xf1f80000000	                         nop dword [rax]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000390	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000394	          0x4885db	                           test rbx, rbx	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000397	        0x4e8b2c22	              mov r13, qword [rdx + r12]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x400039b	     0xf856fffffff	                           jne 0x4000310	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40003a1	          0x4963c6	                        movsxd rax, r14d	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40003a4	          0x83c501	                              add ebp, 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40003a7	        0x4183c601	                             add r14d, 1	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40003ab	        0x4c892cc2	            mov qword [rdx + rax*8], r13	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x40003af	        0x488b0424	                    mov rax, qword [rsp]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40003b3	        0x4983c408	                              add r12, 8	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40003b7	          0x4c89eb	                            mov rbx, r13	       302	ref-cache.c	FUNCTION_18	FOR_1
0x40003ba	            0x3928	                    cmp dword [rax], ebp	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40003bc	            0x7fd2	                            jg 0x4000390	       301	ref-cache.c	FUNCTION_18	FOR_1
0x40003be	          0x448930	                   mov dword [rax], r14d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40003c1	        0x44897008	               mov dword [rax + 8], r14d	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x40003c5	        0x4883c418	                           add rsp, 0x18	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003c9	              0x5b	                                 pop rbx	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003ca	              0x5d	                                 pop rbp	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003cb	            0x415c	                                 pop r12	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003cd	            0x415d	                                 pop r13	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003cf	            0x415e	                                 pop r14	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003d1	            0x415f	                                 pop r15	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003d3	            0xf3c3	                                     ret	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003d5	           0xf1f00	                         nop dword [rax]	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x40003d8	        0x418b5508	                mov edx, dword [r13 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003dc	            0x31c0	                            xor eax, eax	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003de	          0x4531ff	                          xor r15d, r15d	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003e1	            0x85d2	                           test edx, edx	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003e3	            0x7e28	                           jle 0x400040d	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003e5	           0xf1f00	                         nop dword [rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003e8	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40003ec	      0x4889442408	                mov qword [rsp + 8], rax	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40003f1	        0x4183c701	                             add r15d, 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40003f5	        0x488b3c02	              mov rdi, qword [rdx + rax]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40003f9	      0xe8a2fcffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40003fe	      0x488b442408	                mov rax, qword [rsp + 8]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000403	        0x4883c008	                              add rax, 8	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000407	        0x453b7d08	               cmp r15d, dword [r13 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400040b	            0x7cdb	                            jl 0x40003e8	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400040d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	        84	ref-cache.c	FUNCTION_7
0x4000411	      0xe800000000	                          call 0x4000416	        84	ref-cache.c	FUNCTION_7
0x4000416	      0xe957ffffff	                           jmp 0x4000372	        84	ref-cache.c	FUNCTION_7
0x400041b	          0x4531f6	                          xor r14d, r14d	       301	ref-cache.c	FUNCTION_18	FOR_1
0x400041e	        0x488b0424	                    mov rax, qword [rsp]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000422	            0xeb9a	                           jmp 0x40003be	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000424	          0x4c89fe	                            mov rsi, r15	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000427	      0xbf00000000	                              mov edi, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x400042c	            0x31c0	                            xor eax, eax	       273	ref-cache.c	FUNCTION_17	CALL_2
0x400042e	      0xe800000000	                          call 0x4000433	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000433	      0xbf00000000	                              mov edi, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000438	            0x31c0	                            xor eax, eax	       276	ref-cache.c	FUNCTION_17	CALL_4
0x400043a	      0xe800000000	                          call 0x400043f	       276	ref-cache.c	FUNCTION_17	CALL_4
remove_entry_from_dir	CALL,7:ELSE,1:FOR,0:functions,0:DO,0:IF,4:SWITCH,0:WHILE,0	152
0x40014f0	            0x4157	                                push r15	       216	ref-cache.c	FUNCTION_15
0x40014f2	            0x4156	                                push r14	       216	ref-cache.c	FUNCTION_15
0x40014f4	          0x4989f6	                            mov r14, rsi	       216	ref-cache.c	FUNCTION_15
0x40014f7	            0x4155	                                push r13	       216	ref-cache.c	FUNCTION_15
0x40014f9	            0x4154	                                push r12	       216	ref-cache.c	FUNCTION_15
0x40014fb	              0x55	                                push rbp	       216	ref-cache.c	FUNCTION_15
0x40014fc	              0x53	                                push rbx	       216	ref-cache.c	FUNCTION_15
0x40014fd	          0x4889fb	                            mov rbx, rdi	       216	ref-cache.c	FUNCTION_15
0x4001500	          0x4889f7	                            mov rdi, rsi	       217	ref-cache.c	FUNCTION_15	CALL_1
0x4001503	        0x4883ec28	                           sub rsp, 0x28	       216	ref-cache.c	FUNCTION_15
0x4001507	        0x48893424	                    mov qword [rsp], rsi	       216	ref-cache.c	FUNCTION_15
0x400150b	      0xe800000000	                          call 0x4001510	       217	ref-cache.c	FUNCTION_15	CALL_1
0x4001510	          0x4863e8	                         movsxd rbp, eax	       220	ref-cache.c	FUNCTION_15
0x4001513	    0x41807c2eff2f	         cmp byte [r14 + rbp - 1], 0x2f 	       221	ref-cache.c	FUNCTION_15	IF_1
0x4001519	     0xf8491010000	                            je 0x40016b0	       221	ref-cache.c	FUNCTION_15	IF_1
0x400151f	          0x4c89f6	                            mov rsi, r14	       221	ref-cache.c	FUNCTION_15	IF_1
0x4001522	            0x31d2	                            xor edx, edx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4001524	          0x4889df	                            mov rdi, rbx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4001527	      0xe8c4f8ffff	            call sym.find_containing_dir	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x400152c	      0x4889442410	             mov qword [rsp + 0x10], rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4001531	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       234	ref-cache.c	FUNCTION_15	IF_2
0x4001537	            0x747f	                            je 0x40015b8	       234	ref-cache.c	FUNCTION_15	IF_2
0x4001539	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       129	ref-cache.c	FUNCTION_11	IF_1
0x400153e	            0x8b10	                    mov edx, dword [rax]	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001540	            0x85d2	                           test edx, edx	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001542	            0x7474	                            je 0x40015b8	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001544	          0x4889c3	                            mov rbx, rax	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001547	          0x4889c7	                            mov rdi, rax	       132	ref-cache.c	FUNCTION_11	CALL_1
0x400154a	      0xe861edffff	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x400154f	          0x4c633b	                 movsxd r15, dword [rbx]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4001552	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4001556	            0x31db	                            xor ebx, ebx	        27	stdlib-bsearch.h	FUNCTION_79
0x4001558	      0x44897c241c	            mov dword [rsp + 0x1c], r15d	       135	ref-cache.c	FUNCTION_11	CALL_2
0x400155d	          0x4c39fb	                            cmp rbx, r15	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001560	            0x720e	                            jb 0x4001570	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001562	            0xeb54	                           jmp 0x40015b8	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001564	         0xf1f4000	                         nop dword [rax]	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001568	          0x4939dd	                            cmp r13, rbx	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400156b	          0x4d89ef	                            mov r15, r13	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400156e	            0x7648	                           jbe 0x40015b8	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001570	        0x4a8d0c3b	                    lea rcx, [rbx + r15]	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001574	        0x488b3c24	                    mov rdi, qword [rsp]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001578	          0x4889ea	                            mov rdx, rbp	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400157b	          0x48d1e9	                              shr rcx, 1	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400157e	        0x4d8b24ce	            mov r12, qword [r14 + rcx*8]	       117	ref-cache.c	FUNCTION_10
0x4001582	    0x488d04cd0000	                        lea rax, [rcx*8]	        32	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400158a	          0x4989cd	                            mov r13, rcx	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400158d	      0x4889442408	                mov qword [rsp + 8], rax	        32	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001592	      0x498d742428	                   lea rsi, [r12 + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001597	      0xe800000000	                          call 0x400159c	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400159c	            0x85c0	                           test eax, eax	       119	ref-cache.c	FUNCTION_10	IF_1
0x400159e	            0x7508	                           jne 0x40015a8	       119	ref-cache.c	FUNCTION_10	IF_1
0x40015a0	    0x410fb6442c28	     movzx eax, byte [r12 + rbp + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x40015a6	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x40015a8	            0x85c0	                           test eax, eax	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x40015aa	            0x78bc	                            js 0x4001568	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x40015ac	            0x741e	                            je 0x40015cc	        36	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x40015ae	        0x498d5d01	                      lea rbx, [r13 + 1]	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x40015b2	            0xeba9	                           jmp 0x400155d	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x40015b4	         0xf1f4000	                         nop dword [rax]	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x40015b8	        0x4883c428	                           add rsp, 0x28	       248	ref-cache.c	FUNCTION_15
0x40015bc	      0xb8ffffffff	                     mov eax, 0xffffffff	       238	ref-cache.c	FUNCTION_15	IF_3
0x40015c1	              0x5b	                                 pop rbx	       248	ref-cache.c	FUNCTION_15
0x40015c2	              0x5d	                                 pop rbp	       248	ref-cache.c	FUNCTION_15
0x40015c3	            0x415c	                                 pop r12	       248	ref-cache.c	FUNCTION_15
0x40015c5	            0x415d	                                 pop r13	       248	ref-cache.c	FUNCTION_15
0x40015c7	            0x415e	                                 pop r14	       248	ref-cache.c	FUNCTION_15
0x40015c9	            0x415f	                                 pop r15	       248	ref-cache.c	FUNCTION_15
0x40015cb	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
0x40015cc	      0x4c8b642408	                mov r12, qword [rsp + 8]	       141	ref-cache.c	FUNCTION_11
0x40015d1	        0x49c1fc03	                              sar r12, 3	       141	ref-cache.c	FUNCTION_11
0x40015d5	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       237	ref-cache.c	FUNCTION_15	IF_3
0x40015d9	            0x74dd	                            je 0x40015b8	       237	ref-cache.c	FUNCTION_15	IF_3
0x40015db	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       241	ref-cache.c	FUNCTION_15
0x40015df	          0x4963c4	                        movsxd rax, r12d	       239	ref-cache.c	FUNCTION_15
0x40015e2	        0x48c1e003	                              shl rax, 3	       239	ref-cache.c	FUNCTION_15
0x40015e6	        0x498d3c06	                    lea rdi, [r14 + rax]	       239	ref-cache.c	FUNCTION_15
0x40015ea	          0x4429e2	                           sub edx, r12d	       241	ref-cache.c	FUNCTION_15
0x40015ed	          0x83ea01	                              sub edx, 1	       241	ref-cache.c	FUNCTION_15
0x40015f0	          0x4c8b2f	                    mov r13, qword [rdi]	       239	ref-cache.c	FUNCTION_15
0x40015f3	          0x4863d2	                         movsxd rdx, edx	       241	ref-cache.c	FUNCTION_15
0x40015f6	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_42	IF_1
0x40015f9	            0x742c	                            je 0x4001627	       861	git-compat-util.h	FUNCTION_42	IF_1
0x40015fb	    0x48b9ffffffff	         movabs rcx, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4001605	          0x4839ca	                            cmp rdx, rcx	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4001608	     0xf87d2000000	                            ja 0x40016e0	       795	git-compat-util.h	FUNCTION_39	IF_1
0x400160e	      0x498d740608	                lea rsi, [r14 + rax + 8]	        59	string3.h	FUNCTION_81	CALL_3
0x4001613	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_81	CALL_3
0x4001617	      0xe800000000	                          call 0x400161c	        59	string3.h	FUNCTION_81	CALL_3
0x400161c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_81	CALL_3
0x4001621	            0x8b00	                    mov eax, dword [rax]	        59	string3.h	FUNCTION_81	CALL_3
0x4001623	        0x8944241c	             mov dword [rsp + 0x1c], eax	        59	string3.h	FUNCTION_81	CALL_3
0x4001627	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       243	ref-cache.c	FUNCTION_15
0x400162b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       243	ref-cache.c	FUNCTION_15
0x4001630	          0x83e801	                              sub eax, 1	       243	ref-cache.c	FUNCTION_15
0x4001633	            0x8902	                    mov dword [rdx], eax	       243	ref-cache.c	FUNCTION_15
0x4001635	          0x8b4208	                mov eax, dword [rdx + 8]	       244	ref-cache.c	FUNCTION_15	IF_4
0x4001638	          0x4439e0	                           cmp eax, r12d	       244	ref-cache.c	FUNCTION_15	IF_4
0x400163b	            0x7f2b	                            jg 0x4001668	       244	ref-cache.c	FUNCTION_15	IF_4
0x400163d	      0x41f6450010	                   test byte [r13], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001642	            0x7531	                           jne 0x4001675	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001644	          0x4c89ef	                            mov rdi, r13	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4001647	      0xe800000000	                          call 0x400164c	        67	ref-cache.c	FUNCTION_5	CALL_2
0x400164c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       247	ref-cache.c	FUNCTION_15
0x4001651	            0x8b00	                    mov eax, dword [rax]	       247	ref-cache.c	FUNCTION_15
0x4001653	        0x4883c428	                           add rsp, 0x28	       248	ref-cache.c	FUNCTION_15
0x4001657	              0x5b	                                 pop rbx	       248	ref-cache.c	FUNCTION_15
0x4001658	              0x5d	                                 pop rbp	       248	ref-cache.c	FUNCTION_15
0x4001659	            0x415c	                                 pop r12	       248	ref-cache.c	FUNCTION_15
0x400165b	            0x415d	                                 pop r13	       248	ref-cache.c	FUNCTION_15
0x400165d	            0x415e	                                 pop r14	       248	ref-cache.c	FUNCTION_15
0x400165f	            0x415f	                                 pop r15	       248	ref-cache.c	FUNCTION_15
0x4001661	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
0x4001662	    0x660f1f440000	                    nop word [rax + rax]	       248	ref-cache.c	FUNCTION_15
0x4001668	          0x83e801	                              sub eax, 1	       245	ref-cache.c	FUNCTION_15	IF_4
0x400166b	          0x894208	                mov dword [rdx + 8], eax	       245	ref-cache.c	FUNCTION_15	IF_4
0x400166e	      0x41f6450010	                   test byte [r13], 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001673	            0x74cf	                            je 0x4001644	        60	ref-cache.c	FUNCTION_5	IF_1
0x4001675	        0x418b4508	                mov eax, dword [r13 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001679	            0x31ed	                            xor ebp, ebp	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400167b	            0x31db	                            xor ebx, ebx	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400167d	            0x85c0	                           test eax, eax	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400167f	            0x7e21	                           jle 0x40016a2	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001681	     0xf1f80000000	                         nop dword [rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x4001688	        0x498b4520	            mov rax, qword [r13 + 0x20] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400168c	          0x83c301	                              add ebx, 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400168f	        0x488b3c28	              mov rdi, qword [rax + rbp]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4001693	        0x4883c508	                              add rbp, 8	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4001697	      0xe804eaffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400169c	        0x413b5d08	                cmp ebx, dword [r13 + 8]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40016a0	            0x7ce6	                            jl 0x4001688	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40016a2	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	        84	ref-cache.c	FUNCTION_7
0x40016a6	      0xe800000000	                          call 0x40016ab	        84	ref-cache.c	FUNCTION_7
0x40016ab	            0xeb97	                           jmp 0x4001644	        84	ref-cache.c	FUNCTION_7
0x40016ad	           0xf1f00	                         nop dword [rax]	        84	ref-cache.c	FUNCTION_7
0x40016b0	          0x83e801	                              sub eax, 1	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40016b3	          0x4c89f7	                            mov rdi, r14	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40016b6	          0x4863f0	                         movsxd rsi, eax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40016b9	      0xe800000000	                          call 0x40016be	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40016be	          0x4889df	                            mov rdi, rbx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x40016c1	          0x4989c4	                            mov r12, rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x40016c4	            0x31d2	                            xor edx, edx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x40016c6	          0x4889c6	                            mov rsi, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x40016c9	      0xe822f7ffff	            call sym.find_containing_dir	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x40016ce	          0x4c89e7	                            mov rdi, r12	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x40016d1	      0x4889442410	             mov qword [rsp + 0x10], rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x40016d6	      0xe800000000	                          call 0x40016db	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x40016db	      0xe951feffff	                           jmp 0x4001531	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x40016e0	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40016e5	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40016ea	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40016ec	      0xe800000000	                          call 0x40016f1	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
find_ref_entry	CALL,3:ELSE,0:FOR,0:functions,0:DO,0:IF,2:SWITCH,0:WHILE,0	156
0x40012c0	            0x4157	                                push r15	       202	ref-cache.c	FUNCTION_14
0x40012c2	            0x4156	                                push r14	       202	ref-cache.c	FUNCTION_14
0x40012c4	            0x4155	                                push r13	       202	ref-cache.c	FUNCTION_14
0x40012c6	            0x4154	                                push r12	       202	ref-cache.c	FUNCTION_14
0x40012c8	              0x55	                                push rbp	       202	ref-cache.c	FUNCTION_14
0x40012c9	              0x53	                                push rbx	       202	ref-cache.c	FUNCTION_14
0x40012ca	          0x4889fb	                            mov rbx, rdi	       202	ref-cache.c	FUNCTION_14
0x40012cd	          0x4889f7	                            mov rdi, rsi	       202	ref-cache.c	FUNCTION_14
0x40012d0	        0x4883ec28	                           sub rsp, 0x28	       202	ref-cache.c	FUNCTION_14
0x40012d4	      0x4889742408	                mov qword [rsp + 8], rsi	       202	ref-cache.c	FUNCTION_14
0x40012d9	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012de	      0xe800000000	                          call 0x40012e3	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012e3	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012e6	      0x4889442418	             mov qword [rsp + 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012eb	     0xf841c010000	                            je 0x400140d	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012f1	          0x4889c5	                            mov rbp, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40012f4	      0x482b6c2408	                sub rbp, qword [rsp + 8]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40012f9	            0x8b13	                    mov edx, dword [rbx]	       129	ref-cache.c	FUNCTION_11	IF_1
0x40012fb	        0x4883c501	                              add rbp, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40012ff	            0x85d2	                           test edx, edx	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001301	            0x746d	                            je 0x4001370	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001303	       0xf1f440000	                   nop dword [rax + rax]	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001308	          0x4889df	                            mov rdi, rbx	       132	ref-cache.c	FUNCTION_11	CALL_1
0x400130b	      0xe8a0efffff	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x4001310	          0x4c633b	                 movsxd r15, dword [rbx]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4001313	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4001317	            0x31db	                            xor ebx, ebx	        27	stdlib-bsearch.h	FUNCTION_79
0x4001319	          0x4c39fb	                            cmp rbx, r15	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400131c	            0x720a	                            jb 0x4001328	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400131e	            0xeb50	                           jmp 0x4001370	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001320	          0x4939dd	                            cmp r13, rbx	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001323	          0x4d89ef	                            mov r15, r13	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001326	            0x7648	                           jbe 0x4001370	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001328	        0x4a8d0c3b	                    lea rcx, [rbx + r15]	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400132c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001331	          0x4889ea	                            mov rdx, rbp	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001334	          0x48d1e9	                              shr rcx, 1	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001337	        0x4d8b24ce	            mov r12, qword [r14 + rcx*8]	       117	ref-cache.c	FUNCTION_10
0x400133b	    0x488d04cd0000	                        lea rax, [rcx*8]	        32	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001343	          0x4989cd	                            mov r13, rcx	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001346	      0x4889442410	             mov qword [rsp + 0x10], rax	        32	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400134b	      0x498d742428	                   lea rsi, [r12 + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001350	      0xe800000000	                          call 0x4001355	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001355	            0x85c0	                           test eax, eax	       119	ref-cache.c	FUNCTION_10	IF_1
0x4001357	            0x7508	                           jne 0x4001361	       119	ref-cache.c	FUNCTION_10	IF_1
0x4001359	    0x410fb6442c28	     movzx eax, byte [r12 + rbp + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x400135f	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x4001361	            0x85c0	                           test eax, eax	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x4001363	            0x78bb	                            js 0x4001320	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x4001365	            0x741a	                            je 0x4001381	        36	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x4001367	        0x498d5d01	                      lea rbx, [r13 + 1]	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x400136b	          0x4c39fb	                            cmp rbx, r15	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400136e	            0x72b8	                            jb 0x4001328	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001370	        0x4883c428	                           add rsp, 0x28	       213	ref-cache.c	FUNCTION_14
0x4001374	            0x31c0	                            xor eax, eax	       207	ref-cache.c	FUNCTION_14	IF_1
0x4001376	              0x5b	                                 pop rbx	       213	ref-cache.c	FUNCTION_14
0x4001377	              0x5d	                                 pop rbp	       213	ref-cache.c	FUNCTION_14
0x4001378	            0x415c	                                 pop r12	       213	ref-cache.c	FUNCTION_14
0x400137a	            0x415d	                                 pop r13	       213	ref-cache.c	FUNCTION_14
0x400137c	            0x415e	                                 pop r14	       213	ref-cache.c	FUNCTION_14
0x400137e	            0x415f	                                 pop r15	       213	ref-cache.c	FUNCTION_14
0x4001380	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
0x4001381	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       141	ref-cache.c	FUNCTION_11
0x4001386	        0x49c1fc03	                              sar r12, 3	       141	ref-cache.c	FUNCTION_11
0x400138a	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       157	ref-cache.c	FUNCTION_12	IF_1
0x400138e	            0x74e0	                            je 0x4001370	       157	ref-cache.c	FUNCTION_12	IF_1
0x4001390	          0x4d63e4	                        movsxd r12, r12d	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4001393	        0x4f8b24e6	            mov r12, qword [r14 + r12*8]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4001397	      0x410fb60424	                   movzx eax, byte [r12]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400139c	            0xa810	                           test al, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400139e	     0xf842f010000	                            je 0x40014d3	        22	ref-cache.c	FUNCTION_2	CALL_1
0x40013a4	            0xa820	                           test al, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x40013a6	      0x498d5c2408	                      lea rbx, [r12 + 8]	        23	ref-cache.c	FUNCTION_2
0x40013ab	            0x7425	                            je 0x40013d2	        24	ref-cache.c	FUNCTION_2	IF_1
0x40013ad	      0x498b4c2418	            mov rcx, qword [r12 + 0x18] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40013b2	        0x488b4110	            mov rax, qword [rcx + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40013b6	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40013b9	     0xf8419010000	                            je 0x40014d8	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40013bf	      0x498d542428	                   lea rdx, [r12 + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40013c4	        0x488b7908	                mov rdi, qword [rcx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40013c8	          0x4889de	                            mov rsi, rbx	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40013cb	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40013cd	      0x41802424df	                    and byte [r12], 0xdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x40013d2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013d7	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013dc	        0x4883c701	                              add rdi, 1	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013e0	      0xe800000000	                          call 0x40013e5	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013e5	          0x4885c0	                           test rax, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013e8	      0x4889442418	             mov qword [rsp + 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013ed	            0x7427	                            je 0x4001416	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013ef	          0x4889c5	                            mov rbp, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40013f2	      0x482b6c2408	                sub rbp, qword [rsp + 8]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40013f7	      0x418b4c2408	                mov ecx, dword [r12 + 8]	       129	ref-cache.c	FUNCTION_11	IF_1
0x40013fc	        0x4883c501	                              add rbp, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x4001400	            0x85c9	                           test ecx, ecx	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001402	     0xf8500ffffff	                           jne 0x4001308	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001408	      0xe963ffffff	                           jmp 0x4001370	       129	ref-cache.c	FUNCTION_11	IF_1
0x400140d	          0x4885db	                           test rbx, rbx	       206	ref-cache.c	FUNCTION_14	IF_1
0x4001410	     0xf845affffff	                            je 0x4001370	       206	ref-cache.c	FUNCTION_14	IF_1
0x4001416	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400141b	      0xe800000000	                          call 0x4001420	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4001420	          0x4989c4	                            mov r12, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4001423	            0x8b03	                    mov eax, dword [rbx]	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001425	            0x85c0	                           test eax, eax	       129	ref-cache.c	FUNCTION_11	IF_1
0x4001427	     0xf8443ffffff	                            je 0x4001370	       129	ref-cache.c	FUNCTION_11	IF_1
0x400142d	          0x4889df	                            mov rdi, rbx	       132	ref-cache.c	FUNCTION_11	CALL_1
0x4001430	            0x31ed	                            xor ebp, ebp	        27	stdlib-bsearch.h	FUNCTION_79
0x4001432	      0xe879eeffff	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x4001437	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x400143b	          0x4c633b	                 movsxd r15, dword [rbx]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x400143e	      0x4889442410	             mov qword [rsp + 0x10], rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x4001443	          0x4c39fd	                            cmp rbp, r15	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001446	            0x7214	                            jb 0x400145c	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001448	      0xe923ffffff	                           jmp 0x4001370	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400144d	           0xf1f00	                         nop dword [rax]	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001450	          0x4839eb	                            cmp rbx, rbp	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001453	          0x4989df	                            mov r15, rbx	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001456	     0xf8614ffffff	                           jbe 0x4001370	        29	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400145c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       117	ref-cache.c	FUNCTION_10
0x4001461	      0x4a8d5c3d00	                    lea rbx, [rbp + r15]	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001466	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400146b	          0x4c89e2	                            mov rdx, r12	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400146e	          0x48d1eb	                              shr rbx, 1	        31	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x4001471	        0x4c8b34d8	            mov r14, qword [rax + rbx*8]	       117	ref-cache.c	FUNCTION_10
0x4001475	    0x4c8d2cdd0000	                        lea r13, [rbx*8]	        32	stdlib-bsearch.h	FUNCTION_79	WHILE_1
0x400147d	        0x498d7628	                   lea rsi, [r14 + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001481	      0xe800000000	                          call 0x4001486	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4001486	            0x85c0	                           test eax, eax	       119	ref-cache.c	FUNCTION_10	IF_1
0x4001488	            0x7508	                           jne 0x4001492	       119	ref-cache.c	FUNCTION_10	IF_1
0x400148a	    0x430fb6442628	     movzx eax, byte [r14 + r12 + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x4001490	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x4001492	            0x85c0	                           test eax, eax	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x4001494	            0x78ba	                            js 0x4001450	        34	stdlib-bsearch.h	FUNCTION_79	WHILE_1	IF_1
0x4001496	            0x7406	                            je 0x400149e	        36	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x4001498	        0x488d6b01	                      lea rbp, [rbx + 1]	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x400149c	            0xeba5	                           jmp 0x4001443	        37	stdlib-bsearch.h	FUNCTION_79	WHILE_1	ELSE_1	IF_2
0x400149e	          0x4d89ef	                            mov r15, r13	       141	ref-cache.c	FUNCTION_11
0x40014a1	        0x49c1ff03	                              sar r15, 3	       141	ref-cache.c	FUNCTION_11
0x40014a5	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	       209	ref-cache.c	FUNCTION_14	IF_2
0x40014a9	     0xf84c1feffff	                            je 0x4001370	       209	ref-cache.c	FUNCTION_14	IF_2
0x40014af	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       211	ref-cache.c	FUNCTION_14
0x40014b4	          0x4d63ff	                        movsxd r15, r15d	       211	ref-cache.c	FUNCTION_14
0x40014b7	        0x4a8b04f8	            mov rax, qword [rax + r15*8]	       211	ref-cache.c	FUNCTION_14
0x40014bb	          0xf60010	                   test byte [rax], 0x10	       212	ref-cache.c	FUNCTION_14
0x40014be	     0xf85acfeffff	                           jne 0x4001370	       212	ref-cache.c	FUNCTION_14
0x40014c4	        0x4883c428	                           add rsp, 0x28	       213	ref-cache.c	FUNCTION_14
0x40014c8	              0x5b	                                 pop rbx	       213	ref-cache.c	FUNCTION_14
0x40014c9	              0x5d	                                 pop rbp	       213	ref-cache.c	FUNCTION_14
0x40014ca	            0x415c	                                 pop r12	       213	ref-cache.c	FUNCTION_14
0x40014cc	            0x415d	                                 pop r13	       213	ref-cache.c	FUNCTION_14
0x40014ce	            0x415e	                                 pop r14	       213	ref-cache.c	FUNCTION_14
0x40014d0	            0x415f	                                 pop r15	       213	ref-cache.c	FUNCTION_14
0x40014d2	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
0x40014d3	      0xe800000000	                          call 0x40014d8	       213	ref-cache.c	FUNCTION_14
0x40014d8	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x40014dd	      0xe800000000	                          call 0x40014e2	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
cache_ref_iterator_begin	CALL,7:ELSE,1:FOR,0:functions,0:DO,0:IF,4:SWITCH,0:WHILE,0	101
0x4001800	            0x4155	                                push r13	       517	ref-cache.c	FUNCTION_24
0x4001802	            0x4154	                                push r12	       517	ref-cache.c	FUNCTION_24
0x4001804	              0x55	                                push rbp	       517	ref-cache.c	FUNCTION_24
0x4001805	              0x53	                                push rbx	       517	ref-cache.c	FUNCTION_24
0x4001806	        0x4883ec08	                              sub rsp, 8	       517	ref-cache.c	FUNCTION_24
0x400180a	          0x488b1f	                    mov rbx, qword [rdi]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x400180d	           0xfb603	                   movzx eax, byte [rbx]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4001810	            0xa810	                           test al, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4001812	     0xf8449010000	                            je 0x4001961	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4001818	            0xa820	                           test al, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x400181a	          0x4989f4	                            mov r12, rsi	        24	ref-cache.c	FUNCTION_2	IF_1
0x400181d	            0x89d5	                            mov ebp, edx	        24	ref-cache.c	FUNCTION_2	IF_1
0x400181f	        0x4c8d6b08	                      lea r13, [rbx + 8]	        23	ref-cache.c	FUNCTION_2
0x4001823	            0x7421	                            je 0x4001846	        24	ref-cache.c	FUNCTION_2	IF_1
0x4001825	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4001829	        0x488b4110	            mov rax, qword [rcx + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x400182d	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4001830	     0xf8430010000	                            je 0x4001966	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x4001836	        0x488d5328	                   lea rdx, [rbx + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x400183a	        0x488b7908	                mov rdi, qword [rcx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x400183e	          0x4c89ee	                            mov rsi, r13	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4001841	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x4001843	          0x8023df	                    and byte [rbx], 0xdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x4001846	          0x4d85e4	                           test r12, r12	       524	ref-cache.c	FUNCTION_24	IF_1
0x4001849	            0x740b	                            je 0x4001856	       524	ref-cache.c	FUNCTION_24	IF_1
0x400184b	      0x41803c2400	                       cmp byte [r12], 0	       524	ref-cache.c	FUNCTION_24	IF_1
0x4001850	     0xf85ba000000	                           jne 0x4001910	       524	ref-cache.c	FUNCTION_24	IF_1
0x4001856	            0x85ed	                           test ebp, ebp	       530	ref-cache.c	FUNCTION_24	IF_3
0x4001858	     0xf859a000000	                           jne 0x40018f8	       530	ref-cache.c	FUNCTION_24	IF_3
0x400185e	      0xbe48000000	                           mov esi, 0x48	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001863	      0xbf01000000	                              mov edi, 1	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001868	      0xe800000000	                          call 0x400186d	       533	ref-cache.c	FUNCTION_24	CALL_5
0x400186d	      0xba01000000	                              mov edx, 1	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4001872	          0x4889c3	                            mov rbx, rax	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001875	          0x4889c7	                            mov rdi, rax	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4001878	      0xbe00000000	                              mov esi, 0	       535	ref-cache.c	FUNCTION_24	CALL_6
0x400187d	      0xe800000000	                          call 0x4001882	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4001882	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4001886	        0x4883f809	                              cmp rax, 9	       536	ref-cache.c	FUNCTION_24
0x400188a	            0x7644	                           jbe 0x40018d0	       536	ref-cache.c	FUNCTION_24
0x400188c	        0x488b6b40	            mov rbp, qword [rbx + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x4001890	          0x4d85e4	                           test r12, r12	       543	ref-cache.c	FUNCTION_24	IF_4
0x4001893	    0x48c743280100	               mov qword [rbx + 0x28], 1	       538	ref-cache.c	FUNCTION_24
0x400189b	    0xc7450cffffff	      mov dword [rbp + 0xc], 0xffffffff 	       540	ref-cache.c	FUNCTION_24
0x40018a2	        0x4c896d00	                    mov qword [rbp], r13	       541	ref-cache.c	FUNCTION_24
0x40018a6	            0x740b	                            je 0x40018b3	       543	ref-cache.c	FUNCTION_24	IF_4
0x40018a8	      0x41803c2400	                       cmp byte [r12], 0	       543	ref-cache.c	FUNCTION_24	IF_4
0x40018ad	     0xf858d000000	                           jne 0x4001940	       543	ref-cache.c	FUNCTION_24	IF_4
0x40018b3	    0xc74508000000	                  mov dword [rbp + 8], 0	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x40018ba	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x40018be	          0x4889d8	                            mov rax, rbx	       551	ref-cache.c	FUNCTION_24
0x40018c1	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x40018c2	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x40018c3	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x40018c5	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x40018c7	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
0x40018c8	     0xf1f84000000	                   nop dword [rax + rax]	       551	ref-cache.c	FUNCTION_24
0x40018d0	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x40018d5	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x40018d9	          0x48d1ee	                              shr rsi, 1	       536	ref-cache.c	FUNCTION_24
0x40018dc	        0x48897330	             mov qword [rbx + 0x30], rsi	       536	ref-cache.c	FUNCTION_24
0x40018e0	        0x48c1e604	                              shl rsi, 4	       536	ref-cache.c	FUNCTION_24
0x40018e4	      0xe800000000	                          call 0x40018e9	       536	ref-cache.c	FUNCTION_24
0x40018e9	        0x48894340	             mov qword [rbx + 0x40], rax	       536	ref-cache.c	FUNCTION_24
0x40018ed	          0x4889c5	                            mov rbp, rax	       536	ref-cache.c	FUNCTION_24
0x40018f0	            0xeb9e	                           jmp 0x4001890	       536	ref-cache.c	FUNCTION_24
0x40018f2	    0x660f1f440000	                    nop word [rax + rax]	       536	ref-cache.c	FUNCTION_24
0x40018f8	        0x498d7518	                   lea rsi, [r13 + 0x18]	       536	ref-cache.c	FUNCTION_24
0x40018fc	          0x4c89e2	                            mov rdx, r12	       531	ref-cache.c	FUNCTION_24	CALL_4
0x40018ff	          0x4c89ef	                            mov rdi, r13	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001902	      0xe819efffff	           call sym.prime_ref_dir.isra.1	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001907	      0xe952ffffff	                           jmp 0x400185e	       531	ref-cache.c	FUNCTION_24	CALL_4
0x400190c	         0xf1f4000	                         nop dword [rax]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001910	            0x31d2	                            xor edx, edx	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001912	          0x4c89ef	                            mov rdi, r13	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001915	          0x4c89e6	                            mov rsi, r12	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001918	      0xe8d3f4ffff	            call sym.find_containing_dir	       525	ref-cache.c	FUNCTION_24	CALL_2
0x400191d	          0x4885c0	                           test rax, rax	       526	ref-cache.c	FUNCTION_24	IF_2
0x4001920	          0x4989c5	                            mov r13, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001923	     0xf852dffffff	                           jne 0x4001856	       526	ref-cache.c	FUNCTION_24	IF_2
0x4001929	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x400192d	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x400192e	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x400192f	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x4001931	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4001933	      0xe900000000	                           jmp 0x4001938	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4001938	     0xf1f84000000	                   nop dword [rax + rax]	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4001940	          0x4c89e7	                            mov rdi, r12	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4001943	      0xe800000000	                          call 0x4001948	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4001948	        0x48894338	             mov qword [rbx + 0x38], rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x400194c	    0xc74508010000	                  mov dword [rbp + 8], 1	       545	ref-cache.c	FUNCTION_24	IF_4
0x4001953	        0x4883c408	                              add rsp, 8	       551	ref-cache.c	FUNCTION_24
0x4001957	          0x4889d8	                            mov rax, rbx	       551	ref-cache.c	FUNCTION_24
0x400195a	              0x5b	                                 pop rbx	       551	ref-cache.c	FUNCTION_24
0x400195b	              0x5d	                                 pop rbp	       551	ref-cache.c	FUNCTION_24
0x400195c	            0x415c	                                 pop r12	       551	ref-cache.c	FUNCTION_24
0x400195e	            0x415d	                                 pop r13	       551	ref-cache.c	FUNCTION_24
0x4001960	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
0x4001961	      0xe800000000	                          call 0x4001966	       551	ref-cache.c	FUNCTION_24
0x4001966	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x400196b	      0xe800000000	      call obj.cache_ref_iterator_vtable	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
add_ref_entry	CALL,2:ELSE,0:FOR,0:functions,0:DO,0:IF,1:SWITCH,0:WHILE,0	74
0x4001700	            0x4154	                                push r12	       251	ref-cache.c	FUNCTION_16
0x4001702	              0x55	                                push rbp	       251	ref-cache.c	FUNCTION_16
0x4001703	          0x4989f4	                            mov r12, rsi	       251	ref-cache.c	FUNCTION_16
0x4001706	              0x53	                                push rbx	       251	ref-cache.c	FUNCTION_16
0x4001707	        0x4883c628	                           add rsi, 0x28	       252	ref-cache.c	FUNCTION_16	CALL_1
0x400170b	      0xba01000000	                              mov edx, 1	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4001710	      0xe8dbf6ffff	            call sym.find_containing_dir	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4001715	          0x4885c0	                           test rax, rax	       253	ref-cache.c	FUNCTION_16	IF_1
0x4001718	     0xf84ba000000	                            je 0x40017d8	       253	ref-cache.c	FUNCTION_16	IF_1
0x400171e	          0x486308	                 movsxd rcx, dword [rax]	         9	ref-cache.c	FUNCTION_1
0x4001721	          0x4889c3	                            mov rbx, rax	         9	ref-cache.c	FUNCTION_1
0x4001724	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1
0x4001727	            0x39c1	                            cmp ecx, eax	         9	ref-cache.c	FUNCTION_1
0x4001729	            0x7d35	                           jge 0x4001760	         9	ref-cache.c	FUNCTION_1
0x400172b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x400172f	          0x8d6901	                      lea ebp, [rcx + 1]	        10	ref-cache.c	FUNCTION_1
0x4001732	    0x488d14cd0000	                        lea rdx, [rcx*8]	        10	ref-cache.c	FUNCTION_1
0x400173a	          0x83fd01	                              cmp ebp, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x400173d	            0x892b	                    mov dword [rbx], ebp	        10	ref-cache.c	FUNCTION_1
0x400173f	        0x4c8924c8	            mov qword [rax + rcx*8], r12	        10	ref-cache.c	FUNCTION_1
0x4001743	     0xf847d000000	                            je 0x40017c6	        12	ref-cache.c	FUNCTION_1	IF_1
0x4001749	          0x8b4308	                mov eax, dword [rbx + 8]	        12	ref-cache.c	FUNCTION_1	IF_1
0x400174c	          0x4531e4	                          xor r12d, r12d	       256	ref-cache.c	FUNCTION_16
0x400174f	          0x83c001	                              add eax, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x4001752	            0x39c5	                            cmp ebp, eax	        12	ref-cache.c	FUNCTION_1	IF_1
0x4001754	            0x7452	                            je 0x40017a8	        12	ref-cache.c	FUNCTION_1	IF_1
0x4001756	          0x4489e0	                           mov eax, r12d	       257	ref-cache.c	FUNCTION_16
0x4001759	              0x5b	                                 pop rbx	       257	ref-cache.c	FUNCTION_16
0x400175a	              0x5d	                                 pop rbp	       257	ref-cache.c	FUNCTION_16
0x400175b	            0x415c	                                 pop r12	       257	ref-cache.c	FUNCTION_16
0x400175d	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
0x400175e	            0x6690	                                     nop	       257	ref-cache.c	FUNCTION_16
0x4001760	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	         9	ref-cache.c	FUNCTION_1
0x4001764	            0x89c6	                            mov esi, eax	         9	ref-cache.c	FUNCTION_1
0x4001766	          0xc1ee1f	                           shr esi, 0x1f	         9	ref-cache.c	FUNCTION_1
0x4001769	             0x1c6	                            add esi, eax	         9	ref-cache.c	FUNCTION_1
0x400176b	          0x8d4101	                      lea eax, [rcx + 1]	         9	ref-cache.c	FUNCTION_1
0x400176e	            0xd1fe	                              sar esi, 1	         9	ref-cache.c	FUNCTION_1
0x4001770	            0x39f1	                            cmp ecx, esi	         9	ref-cache.c	FUNCTION_1
0x4001772	           0xf4df0	                         cmovge esi, eax	         9	ref-cache.c	FUNCTION_1
0x4001775	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_39	IF_1
0x400177f	          0x4863d6	                         movsxd rdx, esi	         9	ref-cache.c	FUNCTION_1
0x4001782	          0x897304	                mov dword [rbx + 4], esi	         9	ref-cache.c	FUNCTION_1
0x4001785	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4001788	            0x7759	                            ja 0x40017e3	       795	git-compat-util.h	FUNCTION_39	IF_1
0x400178a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x400178e	    0x488d34d50000	                        lea rsi, [rdx*8]	         9	ref-cache.c	FUNCTION_1
0x4001796	      0xe800000000	                          call 0x400179b	         9	ref-cache.c	FUNCTION_1
0x400179b	          0x48630b	                 movsxd rcx, dword [rbx]	         9	ref-cache.c	FUNCTION_1
0x400179e	        0x48894318	             mov qword [rbx + 0x18], rax	         9	ref-cache.c	FUNCTION_1
0x40017a2	            0xeb8b	                           jmp 0x400172f	         9	ref-cache.c	FUNCTION_1
0x40017a4	         0xf1f4000	                         nop dword [rax]	         9	ref-cache.c	FUNCTION_1
0x40017a8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017ac	      0x488b7c10f8	          mov rdi, qword [rax + rdx - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017b1	        0x488b34c8	            mov rsi, qword [rax + rcx*8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017b5	        0x4883c728	                           add rdi, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017b9	        0x4883c628	                           add rsi, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017bd	      0xe800000000	                          call 0x40017c2	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x40017c2	            0x85c0	                           test eax, eax	        13	ref-cache.c	FUNCTION_1	IF_1
0x40017c4	            0x7990	                           jns 0x4001756	        13	ref-cache.c	FUNCTION_1	IF_1
0x40017c6	          0x4531e4	                          xor r12d, r12d	       256	ref-cache.c	FUNCTION_16
0x40017c9	          0x896b08	                mov dword [rbx + 8], ebp	        16	ref-cache.c	FUNCTION_1	IF_1
0x40017cc	          0x4489e0	                           mov eax, r12d	       257	ref-cache.c	FUNCTION_16
0x40017cf	              0x5b	                                 pop rbx	       257	ref-cache.c	FUNCTION_16
0x40017d0	              0x5d	                                 pop rbp	       257	ref-cache.c	FUNCTION_16
0x40017d1	            0x415c	                                 pop r12	       257	ref-cache.c	FUNCTION_16
0x40017d3	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
0x40017d4	         0xf1f4000	                         nop dword [rax]	       257	ref-cache.c	FUNCTION_16
0x40017d8	    0x41bcffffffff	                    mov r12d, 0xffffffff	       254	ref-cache.c	FUNCTION_16	IF_1
0x40017de	      0xe973ffffff	                           jmp 0x4001756	       254	ref-cache.c	FUNCTION_16	IF_1
0x40017e3	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40017e8	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40017ed	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40017ef	      0xe800000000	                          call 0x40017f4	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
ref_entry_cmp	CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	5
0x4000040	          0x488b3f	                    mov rdi, qword [rdi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000043	          0x488b36	                    mov rsi, qword [rsi]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x4000046	        0x4883c728	                           add rdi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400004a	        0x4883c628	                           add rsi, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x400004e	      0xe900000000	                           jmp 0x4000053	       104	ref-cache.c	FUNCTION_9	CALL_1
cache_ref_iterator_peel	CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	2
0x4000090	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4000094	      0xe900000000	                           jmp 0x4000099	       494	ref-cache.c	FUNCTION_22	CALL_1
create_ref_entry	CALL,1:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	45
0x4001020	            0x4156	                                push r14	        36	ref-cache.c	FUNCTION_3
0x4001022	            0x4155	                                push r13	        36	ref-cache.c	FUNCTION_3
0x4001024	          0x4189d6	                           mov r14d, edx	        36	ref-cache.c	FUNCTION_3
0x4001027	            0x4154	                                push r12	        36	ref-cache.c	FUNCTION_3
0x4001029	              0x55	                                push rbp	        36	ref-cache.c	FUNCTION_3
0x400102a	          0x4989fd	                            mov r13, rdi	        36	ref-cache.c	FUNCTION_3
0x400102d	              0x53	                                push rbx	        36	ref-cache.c	FUNCTION_3
0x400102e	          0x4989f4	                            mov r12, rsi	        36	ref-cache.c	FUNCTION_3
0x4001031	      0xe800000000	                          call 0x4001036	        39	ref-cache.c	FUNCTION_3
0x4001036	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400103a	          0x4889c5	                            mov rbp, rax	        39	ref-cache.c	FUNCTION_3
0x400103d	            0x774a	                            ja 0x4001089	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400103f	            0x745c	                            je 0x400109d	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4001041	        0x488d7029	                   lea rsi, [rax + 0x29]	        39	ref-cache.c	FUNCTION_3
0x4001045	      0xbf01000000	                              mov edi, 1	        39	ref-cache.c	FUNCTION_3
0x400104a	      0xe800000000	                          call 0x400104f	        39	ref-cache.c	FUNCTION_3
0x400104f	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_80	CALL_3
0x4001053	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_80	CALL_3
0x4001056	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_80	CALL_3
0x4001059	          0x4889c3	                            mov rbx, rax	        39	ref-cache.c	FUNCTION_3
0x400105c	      0xe800000000	                          call 0x4001061	        53	string3.h	FUNCTION_80	CALL_3
0x4001061	        0x498b1424	                    mov rdx, qword [r12]	        53	string3.h	FUNCTION_80	CALL_3
0x4001065	          0x4889d8	                            mov rax, rbx	        43	ref-cache.c	FUNCTION_3
0x4001068	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_80	CALL_3
0x400106c	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_80	CALL_3
0x4001071	        0x48895310	             mov qword [rbx + 0x10], rdx	        53	string3.h	FUNCTION_80	CALL_3
0x4001075	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_80	CALL_3
0x400107a	          0x448833	                    mov byte [rbx], r14b	        41	ref-cache.c	FUNCTION_3
0x400107d	          0x895318	             mov dword [rbx + 0x18], edx	        53	string3.h	FUNCTION_80	CALL_3
0x4001080	              0x5b	                                 pop rbx	        43	ref-cache.c	FUNCTION_3
0x4001081	              0x5d	                                 pop rbp	        43	ref-cache.c	FUNCTION_3
0x4001082	            0x415c	                                 pop r12	        43	ref-cache.c	FUNCTION_3
0x4001084	            0x415d	                                 pop r13	        43	ref-cache.c	FUNCTION_3
0x4001086	            0x415e	                                 pop r14	        43	ref-cache.c	FUNCTION_3
0x4001088	              0xc3	                                     ret	        43	ref-cache.c	FUNCTION_3
0x4001089	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400108c	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4001091	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4001096	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4001098	      0xe800000000	                          call 0x400109d	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400109d	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40010a2	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40010a6	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40010ab	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x40010ad	      0xe800000000	                          call 0x40010b2	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
create_ref_cache	CALL,2:ELSE,0:FOR,0:functions,0:DO,0:IF,0:SWITCH,0:WHILE,0	22
0x40010c0	            0x4154	                                push r12	        47	ref-cache.c	FUNCTION_4
0x40010c2	              0x55	                                push rbp	        47	ref-cache.c	FUNCTION_4
0x40010c3	          0x4989fc	                            mov r12, rdi	        47	ref-cache.c	FUNCTION_4
0x40010c6	              0x53	                                push rbx	        47	ref-cache.c	FUNCTION_4
0x40010c7	          0x4889f5	                            mov rbp, rsi	        47	ref-cache.c	FUNCTION_4
0x40010ca	      0xbf01000000	                              mov edi, 1	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40010cf	      0xbe18000000	                           mov esi, 0x18	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40010d4	      0xe800000000	                          call 0x40010d9	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40010d9	      0xbe29000000	                           mov esi, 0x29	        94	ref-cache.c	FUNCTION_8
0x40010de	          0x4889c3	                            mov rbx, rax	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40010e1	        0x4c896008	                mov qword [rax + 8], r12	        50	ref-cache.c	FUNCTION_4
0x40010e5	        0x48896810	             mov qword [rax + 0x10], rbp	        51	ref-cache.c	FUNCTION_4
0x40010e9	      0xbf01000000	                              mov edi, 1	        94	ref-cache.c	FUNCTION_8
0x40010ee	      0xe800000000	                          call 0x40010f3	        94	ref-cache.c	FUNCTION_8
0x40010f3	        0x48895818	             mov qword [rax + 0x18], rbx	        95	ref-cache.c	FUNCTION_8
0x40010f7	          0xc60030	                    mov byte [rax], 0x30	        96	ref-cache.c	FUNCTION_8
0x40010fa	          0x488903	                    mov qword [rbx], rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40010fd	          0x4889d8	                            mov rax, rbx	        54	ref-cache.c	FUNCTION_4
0x4001100	              0x5b	                                 pop rbx	        54	ref-cache.c	FUNCTION_4
0x4001101	              0x5d	                                 pop rbp	        54	ref-cache.c	FUNCTION_4
0x4001102	            0x415c	                                 pop r12	        54	ref-cache.c	FUNCTION_4
0x4001104	              0xc3	                                     ret	        54	ref-cache.c	FUNCTION_4
