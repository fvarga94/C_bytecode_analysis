xdl_call_hunk_func	SWITCH,0:ELSE,0:DO,0:functions,0:IF,2:WHILE,0:FOR,1:CALL,2	50
0x4000140	            0x4154	                                push r12	       982	xdiffi.c	FUNCTION_19
0x4000142	              0x55	                                push rbp	       982	xdiffi.c	FUNCTION_19
0x4000143	          0x4989d4	                            mov r12, rdx	       982	xdiffi.c	FUNCTION_19
0x4000146	              0x53	                                push rbx	       982	xdiffi.c	FUNCTION_19
0x4000147	          0x4889cd	                            mov rbp, rcx	       982	xdiffi.c	FUNCTION_19
0x400014a	        0x4883ec10	                           sub rsp, 0x10	       982	xdiffi.c	FUNCTION_19
0x400014e	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	xdiffi.c	FUNCTION_19
0x4000157	      0x4889442408	                mov qword [rsp + 8], rax	       982	xdiffi.c	FUNCTION_19
0x400015c	            0x31c0	                            xor eax, eax	       982	xdiffi.c	FUNCTION_19
0x400015e	          0x4885f6	                           test rsi, rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000161	        0x48893424	                    mov qword [rsp], rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000165	            0x753e	                           jne 0x40001a5	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000167	            0xeb53	                           jmp 0x40001bc	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000169	     0xf1f80000000	                         nop dword [rax]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000170	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000174	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000178	        0x48034b10	             add rcx, qword [rbx + 0x10]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400017c	        0x48037308	                add rsi, qword [rbx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000180	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4000184	        0x488b7808	                mov rdi, qword [rax + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000188	        0x4d8b0424	                     mov r8, qword [r12]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400018c	          0x4829d1	                            sub rcx, rdx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400018f	          0x4829fe	                            sub rsi, rdi	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000192	          0xff5528	                 call qword [rbp + 0x28]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000195	            0x85c0	                           test eax, eax	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000197	            0x7847	                            js 0x40001e0	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000199	          0x488b03	                    mov rax, qword [rbx]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400019c	          0x4885c0	                           test rax, rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400019f	        0x48890424	                    mov qword [rsp], rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40001a3	            0x7417	                            je 0x40001bc	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40001a5	          0x4889ee	                            mov rsi, rbp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001a8	          0x4889e7	                            mov rdi, rsp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001ab	      0xe800000000	                          call 0x40001b0	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001b0	          0x4889c3	                            mov rbx, rax	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001b3	        0x488b0424	                    mov rax, qword [rsp]	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001b7	          0x4885c0	                           test rax, rax	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001ba	            0x75b4	                           jne 0x4000170	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001bc	            0x31c0	                            xor eax, eax	       994	xdiffi.c	FUNCTION_19
0x40001be	      0x488b542408	                mov rdx, qword [rsp + 8]	       995	xdiffi.c	FUNCTION_19
0x40001c3	    0x644833142528	                xor rdx, qword fs:[0x28]	       995	xdiffi.c	FUNCTION_19
0x40001cc	            0x7519	                           jne 0x40001e7	       995	xdiffi.c	FUNCTION_19
0x40001ce	        0x4883c410	                           add rsp, 0x10	       995	xdiffi.c	FUNCTION_19
0x40001d2	              0x5b	                                 pop rbx	       995	xdiffi.c	FUNCTION_19
0x40001d3	              0x5d	                                 pop rbp	       995	xdiffi.c	FUNCTION_19
0x40001d4	            0x415c	                                 pop r12	       995	xdiffi.c	FUNCTION_19
0x40001d6	              0xc3	                                     ret	       995	xdiffi.c	FUNCTION_19
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	       995	xdiffi.c	FUNCTION_19
0x40001e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40001e5	            0xebd7	                           jmp 0x40001be	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40001e7	      0xe800000000	                          call 0x40001ec	       995	xdiffi.c	FUNCTION_19
xdl_build_script	SWITCH,0:ELSE,0:DO,0:functions,0:IF,2:WHILE,0:FOR,3:CALL,2	96
0x4001780	            0x4157	                                push r15	       945	xdiffi.c	FUNCTION_17
0x4001782	            0x4156	                                push r14	       945	xdiffi.c	FUNCTION_17
0x4001784	          0x4531ff	                          xor r15d, r15d	       946	xdiffi.c	FUNCTION_17
0x4001787	            0x4155	                                push r13	       945	xdiffi.c	FUNCTION_17
0x4001789	            0x4154	                                push r12	       945	xdiffi.c	FUNCTION_17
0x400178b	              0x55	                                push rbp	       945	xdiffi.c	FUNCTION_17
0x400178c	              0x53	                                push rbx	       945	xdiffi.c	FUNCTION_17
0x400178d	        0x4883ec18	                           sub rsp, 0x18	       945	xdiffi.c	FUNCTION_17
0x4001791	    0x4c8bafc00000	            mov r13, qword [rdi + 0xc0] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001798	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	       947	xdiffi.c	FUNCTION_17
0x400179c	      0x4889742408	                mov qword [rsp + 8], rsi	       945	xdiffi.c	FUNCTION_17
0x40017a1	    0x4c8ba7f00000	            mov r12, qword [rdi + 0xf0] 	       947	xdiffi.c	FUNCTION_17
0x40017a8	        0x4c8b7738	            mov r14, qword [rdi + 0x38] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017ac	          0x4d85ed	                           test r13, r13	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017af	            0x790f	                           jns 0x40017c0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017b1	          0x4d85f6	                           test r14, r14	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017b4	     0xf8811010000	                            js 0x40018cb	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017ba	    0x660f1f440000	                    nop word [rax + rax]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017c0	    0x42807c32ff00	             cmp byte [rdx + r14 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017c6	            0x7540	                           jne 0x4001808	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017c8	    0x43807c2cff00	             cmp byte [r12 + r13 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017ce	     0xf85dc000000	                           jne 0x40018b0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017d4	          0x4c89ed	                            mov rbp, r13	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017d7	          0x4c89f3	                            mov rbx, r14	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x40017da	        0x4883eb01	                              sub rbx, 1	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017de	        0x4c8d6dff	                      lea r13, [rbp - 1]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017e2	          0x4989de	                            mov r14, rbx	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017e5	            0x79d9	                           jns 0x40017c0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017e7	          0x4d85ed	                           test r13, r13	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017ea	            0x79d4	                           jns 0x40017c0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017ec	      0x488b442408	                mov rax, qword [rsp + 8]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40017f1	          0x4c8938	                    mov qword [rax], r15	       965	xdiffi.c	FUNCTION_17
0x40017f4	        0x4883c418	                           add rsp, 0x18	       968	xdiffi.c	FUNCTION_17
0x40017f8	            0x31c0	                            xor eax, eax	       967	xdiffi.c	FUNCTION_17
0x40017fa	              0x5b	                                 pop rbx	       968	xdiffi.c	FUNCTION_17
0x40017fb	              0x5d	                                 pop rbp	       968	xdiffi.c	FUNCTION_17
0x40017fc	            0x415c	                                 pop r12	       968	xdiffi.c	FUNCTION_17
0x40017fe	            0x415d	                                 pop r13	       968	xdiffi.c	FUNCTION_17
0x4001800	            0x415e	                                 pop r14	       968	xdiffi.c	FUNCTION_17
0x4001802	            0x415f	                                 pop r15	       968	xdiffi.c	FUNCTION_17
0x4001804	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
0x4001805	           0xf1f00	                         nop dword [rax]	       968	xdiffi.c	FUNCTION_17
0x4001808	          0x4c89f3	                            mov rbx, r14	       968	xdiffi.c	FUNCTION_17
0x400180b	       0xf1f440000	                   nop dword [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x4001810	        0x4883eb01	                              sub rbx, 1	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001814	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001819	            0x75f5	                           jne 0x4001810	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x400181b	          0x4929de	                            sub r14, rbx	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x400181e	    0x43807c2cff00	             cmp byte [r12 + r13 - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001824	     0xf8496000000	                            je 0x40018c0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400182a	          0x4c89ed	                            mov rbp, r13	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400182d	           0xf1f00	                         nop dword [rax]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001830	        0x4883ed01	                              sub rbp, 1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001834	    0x41807c2cff00	             cmp byte [r12 + rbp - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400183a	            0x75f4	                           jne 0x4001830	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400183c	          0x4929ed	                            sub r13, rbp	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400183f	      0xbf30000000	                           mov edi, 0x30	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001844	        0x48891424	                    mov qword [rsp], rdx	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001848	      0xe800000000	                          call 0x400184d	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x400184d	          0x4885c0	                           test rax, rax	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001850	        0x488b1424	                    mov rdx, qword [rsp]	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001854	            0x7438	                            je 0x400188e	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001856	          0x4c8938	                    mov qword [rax], r15	       392	xdiffi.c	FUNCTION_4
0x4001859	        0x48895808	                mov qword [rax + 8], rbx	       393	xdiffi.c	FUNCTION_4
0x400185d	          0x4989c7	                            mov r15, rax	       397	xdiffi.c	FUNCTION_4
0x4001860	        0x48896810	             mov qword [rax + 0x10], rbp	       394	xdiffi.c	FUNCTION_4
0x4001864	        0x4c897018	             mov qword [rax + 0x18], r14	       395	xdiffi.c	FUNCTION_4
0x4001868	        0x4c896820	             mov qword [rax + 0x20], r13	       396	xdiffi.c	FUNCTION_4
0x400186c	    0xc74028000000	               mov dword [rax + 0x28], 0	       397	xdiffi.c	FUNCTION_4
0x4001873	      0xe962ffffff	                           jmp 0x40017da	       397	xdiffi.c	FUNCTION_4
0x4001878	     0xf1f84000000	                   nop dword [rax + rax]	       397	xdiffi.c	FUNCTION_4
0x4001880	          0x498b1f	                    mov rbx, qword [r15]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001883	          0x4c89ff	                            mov rdi, r15	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001886	      0xe800000000	                          call 0x400188b	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x400188b	          0x4989df	                            mov r15, rbx	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x400188e	          0x4d85ff	                           test r15, r15	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001891	            0x75ed	                           jne 0x4001880	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001893	        0x4883c418	                           add rsp, 0x18	       968	xdiffi.c	FUNCTION_17
0x4001897	      0xb8ffffffff	                     mov eax, 0xffffffff	       960	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x400189c	              0x5b	                                 pop rbx	       968	xdiffi.c	FUNCTION_17
0x400189d	              0x5d	                                 pop rbp	       968	xdiffi.c	FUNCTION_17
0x400189e	            0x415c	                                 pop r12	       968	xdiffi.c	FUNCTION_17
0x40018a0	            0x415d	                                 pop r13	       968	xdiffi.c	FUNCTION_17
0x40018a2	            0x415e	                                 pop r14	       968	xdiffi.c	FUNCTION_17
0x40018a4	            0x415f	                                 pop r15	       968	xdiffi.c	FUNCTION_17
0x40018a6	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
0x40018a7	    0x660f1f840000	                    nop word [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x40018b0	          0x4c89f3	                            mov rbx, r14	       968	xdiffi.c	FUNCTION_17
0x40018b3	          0x4531f6	                          xor r14d, r14d	       968	xdiffi.c	FUNCTION_17
0x40018b6	      0xe96fffffff	                           jmp 0x400182a	       968	xdiffi.c	FUNCTION_17
0x40018bb	       0xf1f440000	                   nop dword [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x40018c0	          0x4c89ed	                            mov rbp, r13	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40018c3	          0x4531ed	                          xor r13d, r13d	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40018c6	      0xe974ffffff	                           jmp 0x400183f	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40018cb	          0x4889f0	                            mov rax, rsi	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40018ce	      0xe91effffff	                           jmp 0x40017f1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
xdl_change_compact	SWITCH,0:ELSE,2:DO,1:functions,0:IF,17:WHILE,5:FOR,1:CALL,26	415
0x40010e0	            0x4157	                                push r15	       815	xdiffi.c	FUNCTION_16
0x40010e2	            0x4156	                                push r14	       815	xdiffi.c	FUNCTION_16
0x40010e4	            0x4155	                                push r13	       815	xdiffi.c	FUNCTION_16
0x40010e6	            0x4154	                                push r12	       815	xdiffi.c	FUNCTION_16
0x40010e8	          0x4989fd	                            mov r13, rdi	       815	xdiffi.c	FUNCTION_16
0x40010eb	              0x55	                                push rbp	       815	xdiffi.c	FUNCTION_16
0x40010ec	              0x53	                                push rbx	       815	xdiffi.c	FUNCTION_16
0x40010ed	    0x4881ec880000	                           sub rsp, 0x88	       815	xdiffi.c	FUNCTION_16
0x40010f4	      0x4889542418	             mov qword [rsp + 0x18], rdx	       815	xdiffi.c	FUNCTION_16
0x40010f9	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	       815	xdiffi.c	FUNCTION_16
0x40010fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       815	xdiffi.c	FUNCTION_16
0x4001106	      0x4889442478	             mov qword [rsp + 0x78], rax	       815	xdiffi.c	FUNCTION_16
0x400110b	            0x31c0	                            xor eax, eax	       815	xdiffi.c	FUNCTION_16
0x400110d	      0x4889742408	                mov qword [rsp + 8], rsi	       815	xdiffi.c	FUNCTION_16
0x4001112	          0x803a00	                       cmp byte [rdx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001115	     0xf8447060000	                            je 0x4001762	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400111b	      0xb801000000	                              mov eax, 1	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001120	          0x4889c3	                            mov rbx, rax	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001123	        0x4883c001	                              add rax, 1	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001127	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400112c	            0x75f2	                           jne 0x4001120	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400112e	      0x488b442408	                mov rax, qword [rsp + 8]	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001133	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001137	          0x803a00	                       cmp byte [rdx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400113a	     0xf841a060000	                            je 0x400175a	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001140	            0x31c0	                            xor eax, eax	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001142	        0x4c8d6001	                      lea r12, [rax + 1]	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4001146	      0x42803c2200	                 cmp byte [rdx + r12], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400114b	          0x4c89e0	                            mov rax, r12	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x400114e	            0x75f2	                           jne 0x4001142	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001150	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001155	          0x4531db	                          xor r11d, r11d	       725	xdiffi.c	FUNCTION_10
0x4001158	            0x31ed	                            xor ebp, ebp	       725	xdiffi.c	FUNCTION_10
0x400115a	          0x4d89de	                            mov r14, r11	       725	xdiffi.c	FUNCTION_10
0x400115d	      0x2500008000	                       and eax, 0x800000	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001162	      0x4889442448	             mov qword [rsp + 0x48], rax	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001167	        0x498d4560	                   lea rax, [r13 + 0x60]	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x400116b	      0x4889442440	             mov qword [rsp + 0x40], rax	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001170	          0x4839dd	                            cmp rbp, rbx	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001173	            0x755e	                           jne 0x40011d3	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001175	      0xe936020000	                           jmp 0x40013b0	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x400117a	    0x660f1f440000	                    nop word [rax + rax]	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001180	          0x4d39f4	                            cmp r12, r14	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001183	    0x49c7c3ffffff	             mov r11, 0xffffffffffffffff	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x400118a	    0x4c8d14ed0000	                        lea r10, [rbp*8]	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001192	          0x4989d9	                             mov r9, rbx	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001195	        0x4c0f4fdb	                          cmovg r11, rbx	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x4001199	          0x4989ef	                            mov r15, rbp	       854	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	IF_3
0x400119c	        0x49395d38	            cmp qword [r13 + 0x38], rbx 	       769	xdiffi.c	FUNCTION_13	IF_1
0x40011a0	          0x4c89fd	                            mov rbp, r15	       769	xdiffi.c	FUNCTION_13	IF_1
0x40011a3	            0x7e1a	                           jle 0x40011bf	       769	xdiffi.c	FUNCTION_13	IF_1
0x40011a5	        0x498b4560	            mov rax, qword [r13 + 0x60] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011a9	        0x488b14d8	            mov rdx, qword [rax + rbx*8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011ad	        0x4a8b0410	              mov rax, qword [rax + r10]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011b1	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x40011b5	        0x48397818	            cmp qword [rax + 0x18], rdi 	       405	xdiffi.c	FUNCTION_5
0x40011b9	     0xf8401010000	                            je 0x40012c0	       405	xdiffi.c	FUNCTION_5
0x40011bf	          0x4889d8	                            mov rax, rbx	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011c2	          0x4c29f8	                            sub rax, r15	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011c5	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011ca	          0x4989c7	                            mov r15, rax	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011cd	     0xf8458020000	                            je 0x400142b	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011d3	          0x4889d8	                            mov rax, rbx	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x40011d6	    0x4c8d3cddf8ff	                    lea r15, [rbx*8 - 8]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x40011de	          0x4829e8	                            sub rax, rbp	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x40011e1	      0x4889442410	             mov qword [rsp + 0x10], rax	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x40011e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x40011f0	          0x4885ed	                           test rbp, rbp	       790	xdiffi.c	FUNCTION_14	IF_1
0x40011f3	            0x7e8b	                           jle 0x4001180	       790	xdiffi.c	FUNCTION_14	IF_1
0x40011f5	        0x498b4560	            mov rax, qword [r13 + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40011f9	        0x4a8b1438	              mov rdx, qword [rax + r15]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x40011fd	      0x488b44e8f8	        mov rax, qword [rax + rbp*8 - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001202	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x4001206	        0x48397018	            cmp qword [rax + 0x18], rsi 	       405	xdiffi.c	FUNCTION_5
0x400120a	     0xf8570ffffff	                           jne 0x4001180	       405	xdiffi.c	FUNCTION_5
0x4001210	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001214	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001218	        0x488b5208	                mov rdx, qword [rdx + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400121c	        0x488b7808	                mov rdi, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001220	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001225	      0xe800000000	                          call 0x400122a	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400122a	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x400122c	     0xf844effffff	                            je 0x4001180	       405	xdiffi.c	FUNCTION_5
0x4001232	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001236	        0x4883eb01	                              sub rbx, 1	       793	xdiffi.c	FUNCTION_14	IF_1
0x400123a	        0x488d4dff	                      lea rcx, [rbp - 1]	       792	xdiffi.c	FUNCTION_14	IF_1
0x400123e	      0xc64428ff01	             mov byte [rax + rbp - 1], 1	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001243	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001247	        0xc6041800	                 mov byte [rax + rbx], 0	       793	xdiffi.c	FUNCTION_14	IF_1
0x400124b	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x400124f	        0x488d45fe	                      lea rax, [rbp - 2]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001253	      0x807c2afe00	             cmp byte [rdx + rbp - 2], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001258	     0xf8434010000	                            je 0x4001392	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x400125e	            0x6690	                                     nop	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001260	          0x4889c5	                            mov rbp, rax	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001263	        0x4883e801	                              sub rax, 1	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x4001267	        0x803c0200	                 cmp byte [rdx + rax], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x400126b	            0x75f3	                           jne 0x4001260	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x400126d	          0x4d85f6	                           test r14, r14	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001270	            0x750e	                           jne 0x4001280	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001272	      0xbf00000000	                              mov edi, 0	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001277	      0xe894eeffff	                        call sym.xdl_bug	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x400127c	         0xf1f4000	                         nop dword [rax]	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001280	      0x488b442408	                mov rax, qword [rsp + 8]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001285	        0x4d8d66ff	                      lea r12, [r14 - 1]	       755	xdiffi.c	FUNCTION_12
0x4001289	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400128d	    0x42807c22ff00	             cmp byte [rdx + r12 - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001293	     0xf840b010000	                            je 0x40013a4	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001299	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400129d	           0xf1f00	                         nop dword [rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012a0	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012a3	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012a7	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012ab	            0x75f3	                           jne 0x40012a0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012ad	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012b1	      0xe93affffff	                           jmp 0x40011f0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012c0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012c4	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012c8	        0x488b5208	                mov rdx, qword [rdx + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012cc	        0x488b7808	                mov rdi, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012d0	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012d5	      0x4c89542430	             mov qword [rsp + 0x30], r10	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012da	      0x4c894c2428	              mov qword [rsp + 0x28], r9	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012df	      0x4c895c2420	             mov qword [rsp + 0x20], r11	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012e4	      0xe800000000	                          call 0x40012e9	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40012e9	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x40012eb	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	       405	xdiffi.c	FUNCTION_5
0x40012f0	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	       405	xdiffi.c	FUNCTION_5
0x40012f5	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	       405	xdiffi.c	FUNCTION_5
0x40012fa	     0xf84bffeffff	                            je 0x40011bf	       405	xdiffi.c	FUNCTION_5
0x4001300	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001304	        0x488d4b01	                      lea rcx, [rbx + 1]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001308	      0x42c6043800	                 mov byte [rax + r15], 0	       771	xdiffi.c	FUNCTION_13	IF_1
0x400130d	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001311	        0xc6041801	                 mov byte [rax + rbx], 1	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001315	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001319	        0x488d4302	                      lea rax, [rbx + 2]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400131d	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001322	            0x7476	                            je 0x400139a	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001324	         0xf1f4000	                         nop dword [rax]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001328	          0x4889c3	                            mov rbx, rax	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400132b	        0x4883c001	                              add rax, 1	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400132f	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001334	            0x75f2	                           jne 0x4001328	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001336	      0x488b442408	                mov rax, qword [rsp + 8]	       736	xdiffi.c	FUNCTION_11	IF_1
0x400133b	        0x4c396038	            cmp qword [rax + 0x38], r12 	       736	xdiffi.c	FUNCTION_11	IF_1
0x400133f	            0x7447	                            je 0x4001388	       736	xdiffi.c	FUNCTION_11	IF_1
0x4001341	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001345	      0x4d8d742401	                      lea r14, [r12 + 1]	       739	xdiffi.c	FUNCTION_11
0x400134a	    0x42807c220100	             cmp byte [rdx + r12 + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001350	            0x744d	                            je 0x400139f	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001352	      0x498d442402	                      lea rax, [r12 + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001357	    0x660f1f840000	                    nop word [rax + rax]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001360	          0x4989c4	                            mov r12, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001363	        0x488d4001	                      lea rax, [rax + 1]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001367	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400136c	            0x75f2	                           jne 0x4001360	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400136e	          0x4d39e6	                            cmp r14, r12	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001371	        0x4c0f4cdb	                          cmovl r11, rbx	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001375	        0x4983c701	                              add r15, 1	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001379	        0x4983c208	                              add r10, 8	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x400137d	      0xe91afeffff	                           jmp 0x400119c	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001382	    0x660f1f440000	                    nop word [rax + rax]	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001388	      0xbf00000000	                              mov edi, 0	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x400138d	      0xe87eedffff	                        call sym.xdl_bug	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001392	          0x4889cd	                            mov rbp, rcx	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001395	      0xe9d3feffff	                           jmp 0x400126d	       792	xdiffi.c	FUNCTION_14	IF_1
0x400139a	          0x4889cb	                            mov rbx, rcx	       772	xdiffi.c	FUNCTION_13	IF_1
0x400139d	            0xeb97	                           jmp 0x4001336	       772	xdiffi.c	FUNCTION_13	IF_1
0x400139f	          0x4d89f4	                            mov r12, r14	       739	xdiffi.c	FUNCTION_11
0x40013a2	            0xebd1	                           jmp 0x4001375	       739	xdiffi.c	FUNCTION_11
0x40013a4	          0x4d89e6	                            mov r14, r12	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013a7	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013ab	      0xe940feffff	                           jmp 0x40011f0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013b0	        0x49395d38	            cmp qword [r13 + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013b4	            0x743e	                            je 0x40013f4	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013b6	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013ba	        0x488d6b01	                      lea rbp, [rbx + 1]	       739	xdiffi.c	FUNCTION_11
0x40013be	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013c3	     0xf84c6020000	                            je 0x400168f	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013c9	        0x488d4302	                      lea rax, [rbx + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013cd	          0x4889c3	                            mov rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013d0	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013d4	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013d9	            0x75f2	                           jne 0x40013cd	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013db	      0x488b442408	                mov rax, qword [rsp + 8]	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013e0	        0x4c396038	            cmp qword [rax + 0x38], r12 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013e4	     0xf8532010000	                           jne 0x400151c	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013ea	      0xbf00000000	                              mov edi, 0	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x40013ef	      0xe81cedffff	                        call sym.xdl_bug	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x40013f4	      0x488b442408	                mov rax, qword [rsp + 8]	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013f9	        0x4c396038	            cmp qword [rax + 0x38], r12 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013fd	     0xf856e030000	                           jne 0x4001771	       736	xdiffi.c	FUNCTION_11	IF_1
0x4001403	            0x31c0	                            xor eax, eax	       942	xdiffi.c	FUNCTION_16
0x4001405	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	       942	xdiffi.c	FUNCTION_16
0x400140a	    0x644833342528	                xor rsi, qword fs:[0x28]	       942	xdiffi.c	FUNCTION_16
0x4001413	     0xf8553030000	                           jne 0x400176c	       942	xdiffi.c	FUNCTION_16
0x4001419	    0x4881c4880000	                           add rsp, 0x88	       942	xdiffi.c	FUNCTION_16
0x4001420	              0x5b	                                 pop rbx	       942	xdiffi.c	FUNCTION_16
0x4001421	              0x5d	                                 pop rbp	       942	xdiffi.c	FUNCTION_16
0x4001422	            0x415c	                                 pop r12	       942	xdiffi.c	FUNCTION_16
0x4001424	            0x415d	                                 pop r13	       942	xdiffi.c	FUNCTION_16
0x4001426	            0x415e	                                 pop r14	       942	xdiffi.c	FUNCTION_16
0x4001428	            0x415f	                                 pop r15	       942	xdiffi.c	FUNCTION_16
0x400142a	              0xc3	                                     ret	       942	xdiffi.c	FUNCTION_16
0x400142b	          0x4939d9	                             cmp r9, rbx	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x400142e	            0x7480	                            je 0x40013b0	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x4001430	        0x4983fbff	             cmp r11, 0xffffffffffffffff	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001434	     0xf840f010000	                            je 0x4001549	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x400143a	    0x4c8d3cddf8ff	                    lea r15, [rbx*8 - 8]	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001442	          0x4d39f4	                            cmp r12, r14	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001445	     0xf8565ffffff	                           jne 0x40013b0	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x400144b	          0x4885ed	                           test rbp, rbp	       790	xdiffi.c	FUNCTION_14	IF_1
0x400144e	            0x7e17	                           jle 0x4001467	       790	xdiffi.c	FUNCTION_14	IF_1
0x4001450	        0x498b4560	            mov rax, qword [r13 + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001454	        0x4a8b1438	              mov rdx, qword [rax + r15]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001458	      0x488b44e8f8	        mov rax, qword [rax + rbp*8 - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x400145d	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x4001461	        0x48397018	            cmp qword [rax + 0x18], rsi 	       405	xdiffi.c	FUNCTION_5
0x4001465	            0x740a	                            je 0x4001471	       405	xdiffi.c	FUNCTION_5
0x4001467	      0xbf00000000	                              mov edi, 0	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x400146c	      0xe89fecffff	                        call sym.xdl_bug	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001471	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001475	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001479	        0x488b5208	                mov rdx, qword [rdx + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400147d	        0x488b7808	                mov rdi, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001481	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001486	      0xe800000000	                          call 0x400148b	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400148b	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x400148d	            0x74d8	                            je 0x4001467	       405	xdiffi.c	FUNCTION_5
0x400148f	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001493	        0x4883eb01	                              sub rbx, 1	       793	xdiffi.c	FUNCTION_14	IF_1
0x4001497	        0x488d4dff	                      lea rcx, [rbp - 1]	       792	xdiffi.c	FUNCTION_14	IF_1
0x400149b	      0xc64428ff01	             mov byte [rax + rbp - 1], 1	       792	xdiffi.c	FUNCTION_14	IF_1
0x40014a0	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       793	xdiffi.c	FUNCTION_14	IF_1
0x40014a4	        0xc6041800	                 mov byte [rax + rbx], 0	       793	xdiffi.c	FUNCTION_14	IF_1
0x40014a8	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014ac	        0x488d45fe	                      lea rax, [rbp - 2]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014b0	      0x807c2afe00	             cmp byte [rdx + rbp - 2], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014b5	            0x7454	                            je 0x400150b	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014b7	    0x660f1f840000	                    nop word [rax + rax]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014c0	          0x4889c5	                            mov rbp, rax	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014c3	        0x4883e801	                              sub rax, 1	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014c7	        0x803c0200	                 cmp byte [rdx + rax], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014cb	            0x75f3	                           jne 0x40014c0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40014cd	          0x4d85f6	                           test r14, r14	       752	xdiffi.c	FUNCTION_12	IF_1
0x40014d0	            0x750a	                           jne 0x40014dc	       752	xdiffi.c	FUNCTION_12	IF_1
0x40014d2	      0xbf00000000	                              mov edi, 0	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x40014d7	      0xe834ecffff	                        call sym.xdl_bug	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x40014dc	      0x488b442408	                mov rax, qword [rsp + 8]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014e1	        0x4d8d66ff	                      lea r12, [r14 - 1]	       755	xdiffi.c	FUNCTION_12
0x40014e5	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014e9	    0x42807c22ff00	             cmp byte [rdx + r12 - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014ef	            0x741f	                            je 0x4001510	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014f1	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014f5	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014f8	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40014fc	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001500	            0x75f3	                           jne 0x40014f5	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001502	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001506	      0xe937ffffff	                           jmp 0x4001442	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400150b	          0x4889cd	                            mov rbp, rcx	       792	xdiffi.c	FUNCTION_14	IF_1
0x400150e	            0xebbd	                           jmp 0x40014cd	       792	xdiffi.c	FUNCTION_14	IF_1
0x4001510	          0x4d89e6	                            mov r14, r12	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001513	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001517	      0xe926ffffff	                           jmp 0x4001442	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400151c	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001520	      0x4d8d742401	                      lea r14, [r12 + 1]	       739	xdiffi.c	FUNCTION_11
0x4001525	    0x42807c220100	             cmp byte [rdx + r12 + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400152b	     0xf8466010000	                            je 0x4001697	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001531	      0x498d442402	                      lea rax, [r12 + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001536	          0x4989c4	                            mov r12, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001539	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400153d	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001542	            0x75f2	                           jne 0x4001536	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001544	      0xe927fcffff	                           jmp 0x4001170	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001549	    0x48837c244800	               cmp qword [rsp + 0x48], 0	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x400154f	     0xf845bfeffff	                            je 0x40013b0	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001555	          0x4939d9	                             cmp r9, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001558	     0xf8ffa000000	                            jg 0x4001658	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400155e	      0x4c89742410	             mov qword [rsp + 0x10], r14	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001563	      0x48896c2420	             mov qword [rsp + 0x20], rbp	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001568	          0x4d89e6	                            mov r14, r12	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400156b	          0x4c89dd	                            mov rbp, r11	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400156e	          0x4989dc	                            mov r12, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001571	          0x4c89cb	                             mov rbx, r9	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001574	            0xeb48	                           jmp 0x40015be	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001580	        0x8b742438	            mov esi, dword [rsp + 0x38] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001584	        0x8b542450	            mov edx, dword [rsp + 0x50] 	       685	xdiffi.c	FUNCTION_9
0x4001588	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	       688	xdiffi.c	FUNCTION_9
0x400158c	            0x39f2	                            cmp edx, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400158e	           0xf9fc0	                                 setg al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001591	        0x400f9cc6	                                setl sil	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001595	        0x400fb6f6	                          movzx esi, sil	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001599	           0xfb6c0	                           movzx eax, al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400159c	            0x29f0	                            sub eax, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400159e	            0x89ce	                            mov esi, ecx	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015a0	        0x2b74243c	             sub esi, dword [rsp + 0x3c]	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015a4	          0x6bc03c	                     imul eax, eax, 0x3c	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015a7	             0x1f0	                            add eax, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015a9	            0x85c0	                           test eax, eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015ab	     0xf8e9c010000	                           jle 0x400174d	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015b1	        0x4883c301	                              add rbx, 1	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40015b5	          0x4939dc	                            cmp r12, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40015b8	     0xf8c87000000	                            jl 0x4001645	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40015be	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40015c2	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40015c7	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40015cc	          0x4889da	                            mov rdx, rbx	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40015cf	    0xc74424500000	               mov dword [rsp + 0x50], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40015d7	    0xc74424540000	               mov dword [rsp + 0x54], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40015df	      0xe80cecffff	           call sym.measure_split.isra.8	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40015e4	      0x488d742450	                   lea rsi, [rsp + 0x50]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40015e9	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40015ee	      0xe84deaffff	                call sym.score_add_split	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40015f3	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40015f7	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40015fc	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001601	          0x4889da	                            mov rdx, rbx	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001604	          0x4c29fa	                            sub rdx, r15	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001607	      0xe8e4ebffff	           call sym.measure_split.isra.8	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x400160c	      0x488d742450	                   lea rsi, [rsp + 0x50]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001611	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001616	      0xe825eaffff	                call sym.score_add_split	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x400161b	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400161f	     0xf855bffffff	                           jne 0x4001580	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001625	        0x8b442454	            mov eax, dword [rsp + 0x54] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001629	        0x8944243c	             mov dword [rsp + 0x3c], eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400162d	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001631	        0x89442438	             mov dword [rsp + 0x38], eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001635	          0x4889dd	                            mov rbp, rbx	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001638	        0x4883c301	                              add rbx, 1	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400163c	          0x4939dc	                            cmp r12, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400163f	     0xf8d79ffffff	                           jge 0x40015be	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001645	          0x4989eb	                            mov r11, rbp	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001648	          0x4c89e3	                            mov rbx, r12	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400164b	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001650	          0x4d89f4	                            mov r12, r14	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001653	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001658	    0x4c8d3cddf8ff	                    lea r15, [rbx*8 - 8]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001660	          0x4939db	                            cmp r11, rbx	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001663	     0xf8d47fdffff	                           jge 0x40013b0	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001669	          0x4885ed	                           test rbp, rbp	       790	xdiffi.c	FUNCTION_14	IF_1
0x400166c	            0x7e17	                           jle 0x4001685	       790	xdiffi.c	FUNCTION_14	IF_1
0x400166e	        0x498b4560	            mov rax, qword [r13 + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001672	        0x4a8b1438	              mov rdx, qword [rax + r15]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4001676	      0x488b44e8f8	        mov rax, qword [rax + rbp*8 - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x400167b	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x400167f	        0x48397018	            cmp qword [rax + 0x18], rsi 	       405	xdiffi.c	FUNCTION_5
0x4001683	            0x741b	                            je 0x40016a0	       405	xdiffi.c	FUNCTION_5
0x4001685	      0xbf00000000	                              mov edi, 0	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400168a	      0xe881eaffff	                        call sym.xdl_bug	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400168f	          0x4889eb	                            mov rbx, rbp	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001692	      0xe944fdffff	                           jmp 0x40013db	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001697	          0x4d89f4	                            mov r12, r14	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400169a	      0xe9d1faffff	                           jmp 0x4001170	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400169f	              0x90	                                     nop	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40016a0	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016a4	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016a8	        0x488b5208	                mov rdx, qword [rdx + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016ac	        0x488b7808	                mov rdi, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016b0	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016b5	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016ba	      0xe800000000	                          call 0x40016bf	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40016bf	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x40016c1	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       405	xdiffi.c	FUNCTION_5
0x40016c6	            0x74bd	                            je 0x4001685	       405	xdiffi.c	FUNCTION_5
0x40016c8	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       792	xdiffi.c	FUNCTION_14	IF_1
0x40016cc	        0x4883eb01	                              sub rbx, 1	       793	xdiffi.c	FUNCTION_14	IF_1
0x40016d0	        0x488d55ff	                      lea rdx, [rbp - 1]	       792	xdiffi.c	FUNCTION_14	IF_1
0x40016d4	      0xc64428ff01	             mov byte [rax + rbp - 1], 1	       792	xdiffi.c	FUNCTION_14	IF_1
0x40016d9	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       793	xdiffi.c	FUNCTION_14	IF_1
0x40016dd	        0xc6041800	                 mov byte [rax + rbx], 0	       793	xdiffi.c	FUNCTION_14	IF_1
0x40016e1	        0x498b4d68	            mov rcx, qword [r13 + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016e5	        0x488d45fe	                      lea rax, [rbp - 2]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016e9	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016ee	            0x740d	                            je 0x40016fd	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016f0	          0x4889c2	                            mov rdx, rax	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016f3	        0x4883e801	                              sub rax, 1	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016f7	        0x803c0100	                 cmp byte [rcx + rax], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016fb	            0x75f3	                           jne 0x40016f0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40016fd	          0x4d85f6	                           test r14, r14	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001700	            0x750a	                           jne 0x400170c	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001702	      0xbf00000000	                              mov edi, 0	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x4001707	      0xe804eaffff	                        call sym.xdl_bug	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x400170c	      0x488b442408	                mov rax, qword [rsp + 8]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001711	        0x4d8d66ff	                      lea r12, [r14 - 1]	       755	xdiffi.c	FUNCTION_12
0x4001715	        0x488b4868	            mov rcx, qword [rax + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001719	    0x42807c21ff00	             cmp byte [rcx + r12 - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400171f	            0x741d	                            je 0x400173e	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001721	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001725	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001728	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400172c	        0x803c0100	                 cmp byte [rcx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001730	            0x75f3	                           jne 0x4001725	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001732	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001736	          0x4889d5	                            mov rbp, rdx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001739	      0xe922ffffff	                           jmp 0x4001660	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400173e	          0x4d89e6	                            mov r14, r12	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001741	        0x4983ef08	                              sub r15, 8	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001745	          0x4889d5	                            mov rbp, rdx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001748	      0xe913ffffff	                           jmp 0x4001660	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400174d	        0x894c243c	             mov dword [rsp + 0x3c], ecx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001751	        0x89542438	             mov dword [rsp + 0x38], edx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001755	      0xe9dbfeffff	                           jmp 0x4001635	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400175a	          0x4531e4	                          xor r12d, r12d	       725	xdiffi.c	FUNCTION_10
0x400175d	      0xe9eef9ffff	                           jmp 0x4001150	       725	xdiffi.c	FUNCTION_10
0x4001762	            0x31db	                            xor ebx, ebx	       725	xdiffi.c	FUNCTION_10
0x4001764	          0x4889f0	                            mov rax, rsi	       725	xdiffi.c	FUNCTION_10
0x4001767	      0xe9c7f9ffff	                           jmp 0x4001133	       725	xdiffi.c	FUNCTION_10
0x400176c	      0xe800000000	                          call 0x4001771	       942	xdiffi.c	FUNCTION_16
0x4001771	      0xbf00000000	                              mov edi, 0	       939	xdiffi.c	FUNCTION_16	CALL_26
0x4001776	      0xe895e9ffff	                        call sym.xdl_bug	       939	xdiffi.c	FUNCTION_16	CALL_26
xdl_diff	SWITCH,0:ELSE,0:DO,0:functions,0:IF,5:WHILE,0:FOR,0:CALL,11	152
0x4001910	            0x4157	                                push r15	      1019	xdiffi.c	FUNCTION_21
0x4001912	            0x4156	                                push r14	      1019	xdiffi.c	FUNCTION_21
0x4001914	            0x4155	                                push r13	      1019	xdiffi.c	FUNCTION_21
0x4001916	            0x4154	                                push r12	      1019	xdiffi.c	FUNCTION_21
0x4001918	          0x4989cd	                            mov r13, rcx	      1019	xdiffi.c	FUNCTION_21
0x400191b	              0x55	                                push rbp	      1019	xdiffi.c	FUNCTION_21
0x400191c	              0x53	                                push rbx	      1019	xdiffi.c	FUNCTION_21
0x400191d	    0x41bc00000000	                             mov r12d, 0	      1022	xdiffi.c	FUNCTION_21
0x4001923	          0x4889d5	                            mov rbp, rdx	      1019	xdiffi.c	FUNCTION_21
0x4001926	    0x4881ec480100	                          sub rsp, 0x148	      1019	xdiffi.c	FUNCTION_21
0x400192d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1019	xdiffi.c	FUNCTION_21
0x4001936	    0x488984243801	            mov qword [rsp + 0x138], rax	      1019	xdiffi.c	FUNCTION_21
0x400193e	            0x31c0	                            xor eax, eax	      1019	xdiffi.c	FUNCTION_21
0x4001940	      0x4883792800	               cmp qword [rcx + 0x28], 0	      1022	xdiffi.c	FUNCTION_21
0x4001945	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400194a	      0xb800000000	                              mov eax, 0	      1022	xdiffi.c	FUNCTION_21
0x400194f	      0x4c89442408	                 mov qword [rsp + 8], r8	      1019	xdiffi.c	FUNCTION_21
0x4001954	        0x4c0f45e0	                         cmovne r12, rax	      1022	xdiffi.c	FUNCTION_21
0x4001958	      0xe800000000	                          call 0x400195d	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400195d	            0x85c0	                           test eax, eax	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400195f	     0xf88f8010000	                            js 0x4001b5d	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x4001965	      0x488d442420	                   lea rax, [rsp + 0x20]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x400196a	    0x488d9c24a800	                   lea rbx, [rsp + 0xa8]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001972	        0x488b5500	                    mov rdx, qword [rbp]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001976	          0x4889de	                            mov rsi, rbx	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001979	          0x4889c7	                            mov rdi, rax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x400197c	      0xe800000000	                          call 0x4001981	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001981	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001983	     0xf88c0010000	                            js 0x4001b49	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x4001989	        0x488b5500	                    mov rdx, qword [rbp]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400198d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4001992	          0x4889df	                            mov rdi, rbx	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x4001995	      0xe800000000	                          call 0x400199a	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x400199a	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x400199c	     0xf88a7010000	                            js 0x4001b49	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40019a2	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40019a7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40019ac	      0xe800000000	                          call 0x40019b1	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40019b1	            0x85c0	                           test eax, eax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40019b3	     0xf8890010000	                            js 0x4001b49	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40019b9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1035	xdiffi.c	FUNCTION_21	IF_3
0x40019be	          0x4885db	                           test rbx, rbx	      1035	xdiffi.c	FUNCTION_21	IF_3
0x40019c1	            0x744d	                            je 0x4001a10	      1035	xdiffi.c	FUNCTION_21	IF_3
0x40019c3	        0x488b6d00	                    mov rbp, qword [rbp]	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x40019c7	          0x4889de	                            mov rsi, rbx	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x40019ca	        0x40f6c580	                          test bpl, 0x80	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x40019ce	     0xf858d000000	                           jne 0x4001a61	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x40019d4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019d9	          0x4c89e9	                            mov rcx, r13	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019dc	      0x488b542408	                mov rdx, qword [rsp + 8]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019e1	          0x41ffd4	                                call r12	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019e4	            0x85c0	                           test eax, eax	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019e6	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40019eb	     0xf8843010000	                            js 0x4001b34	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40019f1	          0x4885ff	                           test rdi, rdi	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x40019f4	            0x741a	                            je 0x4001a10	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x40019f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001a00	          0x488b1f	                    mov rbx, qword [rdi]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001a03	      0xe800000000	                          call 0x4001a08	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001a08	          0x4885db	                           test rbx, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001a0b	          0x4889df	                            mov rdi, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001a0e	            0x75f0	                           jne 0x4001a00	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001a10	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4001a15	      0xe800000000	                          call 0x4001a1a	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4001a1a	            0x31c0	                            xor eax, eax	      1049	xdiffi.c	FUNCTION_21
0x4001a1c	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1050	xdiffi.c	FUNCTION_21
0x4001a24	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1050	xdiffi.c	FUNCTION_21
0x4001a2d	     0xf8534010000	                           jne 0x4001b67	      1050	xdiffi.c	FUNCTION_21
0x4001a33	    0x4881c4480100	                          add rsp, 0x148	      1050	xdiffi.c	FUNCTION_21
0x4001a3a	              0x5b	                                 pop rbx	      1050	xdiffi.c	FUNCTION_21
0x4001a3b	              0x5d	                                 pop rbp	      1050	xdiffi.c	FUNCTION_21
0x4001a3c	            0x415c	                                 pop r12	      1050	xdiffi.c	FUNCTION_21
0x4001a3e	            0x415d	                                 pop r13	      1050	xdiffi.c	FUNCTION_21
0x4001a40	            0x415e	                                 pop r14	      1050	xdiffi.c	FUNCTION_21
0x4001a42	            0x415f	                                 pop r15	      1050	xdiffi.c	FUNCTION_21
0x4001a44	              0xc3	                                     ret	      1050	xdiffi.c	FUNCTION_21
0x4001a45	           0xf1f00	                         nop dword [rax]	      1050	xdiffi.c	FUNCTION_21
0x4001a48	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001a4d	            0x7e03	                           jle 0x4001a52	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001a4f	              0x90	                                     nop	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001a50	            0x31c0	                            xor eax, eax	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x4001a52	          0x894328	             mov dword [rbx + 0x28], eax	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4001a55	          0x488b1b	                    mov rbx, qword [rbx]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001a58	          0x4885db	                           test rbx, rbx	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001a5b	     0xf84a4000000	                            je 0x4001b05	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001a61	        0x488b4308	                mov rax, qword [rbx + 8]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4001a65	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4001a6d	        0x48c1e003	                              shl rax, 3	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4001a71	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a76	     0xf8e93000000	                           jle 0x4001b0f	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a7c	          0x4531ff	                          xor r15d, r15d	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a7f	        0x4c8d3402	                    lea r14, [rdx + rax]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a83	            0xeb07	                           jmp 0x4001a8c	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a85	           0xf1f00	                         nop dword [rax]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a88	            0x85c0	                           test eax, eax	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a8a	            0x74bc	                            je 0x4001a48	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a8c	        0x4b8b04fe	            mov rax, qword [r14 + r15*8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001a90	          0x4889ea	                            mov rdx, rbp	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001a93	        0x4983c701	                              add r15, 1	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001a97	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001a9b	        0x488b7808	                mov rdi, qword [rax + 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001a9f	      0xe800000000	                          call 0x4001aa4	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001aa4	        0x4c3b7b18	            cmp r15, qword [rbx + 0x18] 	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001aa8	            0x7cde	                            jl 0x4001a88	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001aaa	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001aae	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001ab6	        0x48c1e203	                              shl rdx, 3	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001aba	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001abf	            0x7e91	                           jle 0x4001a52	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ac1	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ac3	            0x748b	                            je 0x4001a50	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ac5	          0x4531ff	                          xor r15d, r15d	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001ac8	        0x4c8d3411	                    lea r14, [rcx + rdx]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001acc	            0xeb0a	                           jmp 0x4001ad8	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001ace	            0x6690	                                     nop	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001ad0	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ad2	     0xf8478ffffff	                            je 0x4001a50	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ad8	        0x4b8b04fe	            mov rax, qword [r14 + r15*8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001adc	          0x4889ea	                            mov rdx, rbp	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001adf	        0x4983c701	                              add r15, 1	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001ae3	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001ae7	        0x488b7808	                mov rdi, qword [rax + 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001aeb	      0xe800000000	                          call 0x4001af0	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001af0	        0x4c3b7b20	            cmp r15, qword [rbx + 0x20] 	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001af4	            0x7cda	                            jl 0x4001ad0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001af6	          0x894328	             mov dword [rbx + 0x28], eax	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4001af9	          0x488b1b	                    mov rbx, qword [rbx]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001afc	          0x4885db	                           test rbx, rbx	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001aff	     0xf855cffffff	                           jne 0x4001a61	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001b05	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001b0a	      0xe9c5feffff	                           jmp 0x40019d4	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001b0f	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001b14	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001b18	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001b20	    0x488d14c50000	                        lea rdx, [rax*8]	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001b28	      0xb801000000	                              mov eax, 1	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x4001b2d	            0x7f96	                            jg 0x4001ac5	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001b2f	      0xe91effffff	                           jmp 0x4001a52	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001b34	          0x4885ff	                           test rdi, rdi	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b37	            0x7410	                            je 0x4001b49	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b39	          0x488b1f	                    mov rbx, qword [rdi]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b3c	      0xe800000000	                          call 0x4001b41	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001b41	          0x4885db	                           test rbx, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b44	          0x4889df	                            mov rdi, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b47	            0x75f0	                           jne 0x4001b39	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001b49	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x4001b4e	      0xe800000000	                          call 0x4001b53	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x4001b53	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	xdiffi.c	FUNCTION_21	IF_2
0x4001b58	      0xe9bffeffff	                           jmp 0x4001a1c	      1033	xdiffi.c	FUNCTION_21	IF_2
0x4001b5d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1026	xdiffi.c	FUNCTION_21	IF_1
0x4001b62	      0xe9b5feffff	                           jmp 0x4001a1c	      1026	xdiffi.c	FUNCTION_21	IF_1
0x4001b67	      0xe800000000	                        call str.BUG:__s	      1050	xdiffi.c	FUNCTION_21
xdl_do_diff	SWITCH,0:ELSE,0:DO,0:functions,0:IF,6:WHILE,0:FOR,0:CALL,12	103
0x4000f30	            0x4157	                                push r15	       325	xdiffi.c	FUNCTION_3
0x4000f32	            0x4156	                                push r14	       325	xdiffi.c	FUNCTION_3
0x4000f34	            0x4155	                                push r13	       325	xdiffi.c	FUNCTION_3
0x4000f36	            0x4154	                                push r12	       325	xdiffi.c	FUNCTION_3
0x4000f38	              0x55	                                push rbp	       325	xdiffi.c	FUNCTION_3
0x4000f39	              0x53	                                push rbx	       325	xdiffi.c	FUNCTION_3
0x4000f3a	          0x4889d5	                            mov rbp, rdx	       325	xdiffi.c	FUNCTION_3
0x4000f3d	          0x4889cb	                            mov rbx, rcx	       325	xdiffi.c	FUNCTION_3
0x4000f40	        0x4883ec78	                           sub rsp, 0x78	       325	xdiffi.c	FUNCTION_3
0x4000f44	    0x64488b042528	                mov rax, qword fs:[0x28]	       325	xdiffi.c	FUNCTION_3
0x4000f4d	      0x4889442468	             mov qword [rsp + 0x68], rax	       325	xdiffi.c	FUNCTION_3
0x4000f52	            0x31c0	                            xor eax, eax	       325	xdiffi.c	FUNCTION_3
0x4000f54	          0x488b02	                    mov rax, qword [rdx]	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f57	      0x2500c00000	                         and eax, 0xc000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f5c	    0x483d00400000	                         cmp rax, 0x4000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f62	     0xf8438010000	                            je 0x40010a0	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000f68	    0x483d00800000	                         cmp rax, 0x8000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000f6e	     0xf8424010000	                            je 0x4001098	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000f74	      0xe800000000	                          call 0x4000f79	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000f79	            0x85c0	                           test eax, eax	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000f7b	     0xf882f010000	                            js 0x40010b0	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000f81	    0x4c8bab000100	           mov r13, qword [rbx + 0x100] 	       346	xdiffi.c	FUNCTION_3
0x4000f88	          0x4c89ef	                            mov rdi, r13	       346	xdiffi.c	FUNCTION_3
0x4000f8b	        0x48037b78	             add rdi, qword [rbx + 0x78]	       346	xdiffi.c	FUNCTION_3
0x4000f8f	        0x4c8d7703	                      lea r14, [rdi + 3]	       346	xdiffi.c	FUNCTION_3
0x4000f93	        0x4883c704	                              add rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f97	        0x48c1e704	                              shl rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f9b	      0xe800000000	                          call 0x4000fa0	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000fa0	          0x4885c0	                           test rax, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000fa3	          0x4989c4	                            mov r12, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000fa6	     0xf8419010000	                            je 0x40010c5	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000fac	    0x4a8d04ed0800	                    lea rax, [r13*8 + 8]	       354	xdiffi.c	FUNCTION_3
0x4000fb4	          0x4c89f7	                            mov rdi, r14	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fb7	        0x4e8d2cf0	                  lea r13, [rax + r14*8]	       355	xdiffi.c	FUNCTION_3
0x4000fbb	        0x4d8d3c04	                    lea r15, [r12 + rax]	       354	xdiffi.c	FUNCTION_3
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fc4	          0x4d01e5	                            add r13, r12	       355	xdiffi.c	FUNCTION_3
0x4000fc7	      0xba00010000	                          mov edx, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fcc	    0x483d00010000	                          cmp rax, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fd2	        0x480f4cc2	                          cmovl rax, rdx	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fd6	    0x4c8b8b000100	            mov r9, qword [rbx + 0x100] 	       367	xdiffi.c	FUNCTION_3
0x4000fdd	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	       363	xdiffi.c	FUNCTION_3
0x4000fe1	        0x48890424	                    mov qword [rsp], rax	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000fe5	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       364	xdiffi.c	FUNCTION_3
0x4000fec	          0x4531c0	                            xor r8d, r8d	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fef	    0x48c744240814	               mov qword [rsp + 8], 0x14	       360	xdiffi.c	FUNCTION_3
0x4000ff8	    0x48c744241000	          mov qword [rsp + 0x10], 0x100 	       361	xdiffi.c	FUNCTION_3
0x4001001	            0x31f6	                            xor esi, esi	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001003	      0x4889542420	             mov qword [rsp + 0x20], rdx	       363	xdiffi.c	FUNCTION_3
0x4001008	      0x4c894c2440	              mov qword [rsp + 0x40], r9	       367	xdiffi.c	FUNCTION_3
0x400100d	      0x4889442428	             mov qword [rsp + 0x28], rax	       364	xdiffi.c	FUNCTION_3
0x4001012	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       365	xdiffi.c	FUNCTION_3
0x4001016	      0x4889442438	             mov qword [rsp + 0x38], rax	       365	xdiffi.c	FUNCTION_3
0x400101b	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       366	xdiffi.c	FUNCTION_3
0x400101f	      0x4889442430	             mov qword [rsp + 0x30], rax	       366	xdiffi.c	FUNCTION_3
0x4001024	    0x488b83080100	           mov rax, qword [rbx + 0x108] 	       368	xdiffi.c	FUNCTION_3
0x400102b	      0x4889442448	             mov qword [rsp + 0x48], rax	       368	xdiffi.c	FUNCTION_3
0x4001030	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	       369	xdiffi.c	FUNCTION_3
0x4001037	      0x4889442458	             mov qword [rsp + 0x58], rax	       369	xdiffi.c	FUNCTION_3
0x400103c	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       370	xdiffi.c	FUNCTION_3
0x4001043	      0x4889442450	             mov qword [rsp + 0x50], rax	       370	xdiffi.c	FUNCTION_3
0x4001048	        0x488b4500	                    mov rax, qword [rbp]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400104c	              0x54	                                push rsp	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400104d	          0x83e001	                              and eax, 1	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001050	              0x50	                                push rax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001051	            0x4155	                                push r13	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001053	            0x4157	                                push r15	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001055	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400105a	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400105f	      0xe800000000	                          call 0x4001064	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001064	        0x4883c420	                           add rsp, 0x20	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4001068	            0x85c0	                           test eax, eax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400106a	          0x4c89e7	                            mov rdi, r12	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x400106d	            0x7851	                            js 0x40010c0	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x400106f	      0xe800000000	                          call 0x4001074	       380	xdiffi.c	FUNCTION_3	CALL_12
0x4001074	            0x31c0	                            xor eax, eax	       382	xdiffi.c	FUNCTION_3
0x4001076	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       383	xdiffi.c	FUNCTION_3
0x400107b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       383	xdiffi.c	FUNCTION_3
0x4001084	            0x754e	                           jne 0x40010d4	       383	xdiffi.c	FUNCTION_3
0x4001086	        0x4883c478	                           add rsp, 0x78	       383	xdiffi.c	FUNCTION_3
0x400108a	              0x5b	                                 pop rbx	       383	xdiffi.c	FUNCTION_3
0x400108b	              0x5d	                                 pop rbp	       383	xdiffi.c	FUNCTION_3
0x400108c	            0x415c	                                 pop r12	       383	xdiffi.c	FUNCTION_3
0x400108e	            0x415d	                                 pop r13	       383	xdiffi.c	FUNCTION_3
0x4001090	            0x415e	                                 pop r14	       383	xdiffi.c	FUNCTION_3
0x4001092	            0x415f	                                 pop r15	       383	xdiffi.c	FUNCTION_3
0x4001094	              0xc3	                                     ret	       383	xdiffi.c	FUNCTION_3
0x4001095	           0xf1f00	                         nop dword [rax]	       383	xdiffi.c	FUNCTION_3
0x4001098	      0xe800000000	                          call 0x400109d	       335	xdiffi.c	FUNCTION_3	CALL_4
0x400109d	            0xebd7	                           jmp 0x4001076	       335	xdiffi.c	FUNCTION_3	CALL_4
0x400109f	              0x90	                                     nop	       335	xdiffi.c	FUNCTION_3	CALL_4
0x40010a0	      0xe800000000	                          call 0x40010a5	       332	xdiffi.c	FUNCTION_3	CALL_2
0x40010a5	            0xebcf	                           jmp 0x4001076	       332	xdiffi.c	FUNCTION_3	CALL_2
0x40010a7	    0x660f1f840000	                    nop word [rax + rax]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x40010b0	      0xb8ffffffff	                     mov eax, 0xffffffff	       339	xdiffi.c	FUNCTION_3	IF_3
0x40010b5	            0xebbf	                           jmp 0x4001076	       339	xdiffi.c	FUNCTION_3	IF_3
0x40010b7	    0x660f1f840000	                    nop word [rax + rax]	       339	xdiffi.c	FUNCTION_3	IF_3
0x40010c0	      0xe800000000	                          call 0x40010c5	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x40010c5	          0x4889df	                            mov rdi, rbx	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x40010c8	      0xe800000000	                          call 0x40010cd	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x40010cd	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	xdiffi.c	FUNCTION_3	IF_6
0x40010d2	            0xeba2	                           jmp 0x4001076	       377	xdiffi.c	FUNCTION_3	IF_6
0x40010d4	      0xe800000000	                          call 0x40010d9	       383	xdiffi.c	FUNCTION_3
score_add_split	SWITCH,0:ELSE,6:DO,0:functions,0:IF,8:WHILE,0:FOR,0:CALL,0	70
0x4000040	        0x448b470c	              mov r8d, dword [rdi + 0xc]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000044	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000048	     0xf8492000000	                            je 0x40000e0	       612	xdiffi.c	FUNCTION_8	IF_1
0x400004e	          0x8b4604	                mov eax, dword [rsi + 4]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000051	          0x8b4f08	                mov ecx, dword [rdi + 8]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000054	            0x8b17	                    mov edx, dword [rdi]	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000056	            0x85d2	                           test edx, edx	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000058	            0x7406	                            je 0x4000060	       615	xdiffi.c	FUNCTION_8	IF_2
0x400005a	          0x83c015	                           add eax, 0x15	       616	xdiffi.c	FUNCTION_8	IF_2
0x400005d	          0x894604	                mov dword [rsi + 4], eax	       616	xdiffi.c	FUNCTION_8	IF_2
0x4000060	          0x8b5704	                mov edx, dword [rdi + 4]	       622	xdiffi.c	FUNCTION_8
0x4000063	          0x83faff	             cmp edx, 0xffffffffffffffff	       622	xdiffi.c	FUNCTION_8
0x4000066	            0x7438	                            je 0x40000a0	       622	xdiffi.c	FUNCTION_8
0x4000068	        0x446bc9e2	       imul r9d, ecx, 0xffffffffffffffe2	       626	xdiffi.c	FUNCTION_8
0x400006c	             0x116	                    add dword [rsi], edx	       637	xdiffi.c	FUNCTION_8
0x400006e	          0x4401c8	                            add eax, r9d	       626	xdiffi.c	FUNCTION_8
0x4000071	          0x894604	                mov dword [rsi + 4], eax	       626	xdiffi.c	FUNCTION_8
0x4000074	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4000078	            0x7448	                            je 0x40000c2	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x400007a	          0x4139d0	                            cmp r8d, edx	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400007d	            0x7c49	                            jl 0x40000c8	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400007f	            0x7441	                            je 0x40000c2	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4000081	          0x8b7f14	            mov edi, dword [rdi + 0x14] 	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000084	          0x83ffff	             cmp edi, 0xffffffffffffffff	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000087	            0x7477	                            je 0x4000100	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000089	            0x39d7	                            cmp edi, edx	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400008b	            0x7e73	                           jle 0x4000100	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400008d	          0x83f901	                              cmp ecx, 1	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000090	            0x19d2	                            sbb edx, edx	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000092	          0x83e207	                              and edx, 7	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000095	        0x8d440211	            lea eax, [rdx + rax + 0x11] 	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000099	          0x894604	                mov dword [rsi + 4], eax	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400009c	              0xc3	                                     ret	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400009d	           0xf1f00	                         nop dword [rax]	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000a0	          0x8b5710	            mov edx, dword [rdi + 0x10] 	       622	xdiffi.c	FUNCTION_8
0x40000a3	          0x83c201	                              add edx, 1	       622	xdiffi.c	FUNCTION_8
0x40000a6	             0x1d1	                            add ecx, edx	       623	xdiffi.c	FUNCTION_8
0x40000a8	          0x8d1452	                  lea edx, [rdx + rdx*2]	       627	xdiffi.c	FUNCTION_8
0x40000ab	        0x446bc9e2	       imul r9d, ecx, 0xffffffffffffffe2	       627	xdiffi.c	FUNCTION_8
0x40000af	          0x4401c8	                            add eax, r9d	       627	xdiffi.c	FUNCTION_8
0x40000b2	          0x8d0450	                  lea eax, [rax + rdx*2]	       627	xdiffi.c	FUNCTION_8
0x40000b5	          0x8b5714	            mov edx, dword [rdi + 0x14] 	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x40000b8	             0x116	                    add dword [rsi], edx	       637	xdiffi.c	FUNCTION_8
0x40000ba	          0x894604	                mov dword [rsi + 4], eax	       627	xdiffi.c	FUNCTION_8
0x40000bd	          0x83faff	             cmp edx, 0xffffffffffffffff	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c0	            0x75b2	                           jne 0x4000074	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c2	            0xf3c3	                                     ret	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c4	         0xf1f4000	                         nop dword [rax]	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c8	          0x83f901	                              cmp ecx, 1	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000cb	            0x19d2	                            sbb edx, edx	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000cd	          0x83e2f2	                     and edx, 0xfffffff2	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d0	        0x8d44020a	              lea eax, [rdx + rax + 0xa]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d4	          0x894604	                mov dword [rsi + 4], eax	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d7	              0xc3	                                     ret	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d8	     0xf1f84000000	                   nop dword [rax + rax]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000e0	          0x8b4f08	                mov ecx, dword [rdi + 8]	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000e3	          0x8b4604	                mov eax, dword [rsi + 4]	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000e6	            0x85c9	                           test ecx, ecx	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000e8	     0xf8566ffffff	                           jne 0x4000054	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000ee	          0x83c001	                              add eax, 1	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f1	            0x31c9	                            xor ecx, ecx	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f3	          0x894604	                mov dword [rsi + 4], eax	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f6	      0xe959ffffff	                           jmp 0x4000054	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000fb	       0xf1f440000	                   nop dword [rax + rax]	       613	xdiffi.c	FUNCTION_8	IF_1
0x4000100	          0x83f901	                              cmp ecx, 1	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000103	            0x19d2	                            sbb edx, edx	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000105	          0x83e206	                              and edx, 6	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000108	        0x8d440211	            lea eax, [rdx + rax + 0x11] 	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x400010c	          0x894604	                mov dword [rsi + 4], eax	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x400010f	              0xc3	                                     ret	       680	xdiffi.c	FUNCTION_8
xdl_bug	SWITCH,0:ELSE,0:DO,0:functions,0:IF,0:WHILE,0:FOR,0:CALL,1	9
0x4000110	        0x4883ec08	                              sub rsp, 8	       805	xdiffi.c	FUNCTION_15
0x4000114	          0x4889f9	                            mov rcx, rdi	       805	xdiffi.c	FUNCTION_15
0x4000117	    0x488b3d000000	            mov rdi, qword [0x0400011e] 	        97	stdio2.h	CALL_11
0x400011e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x4000123	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x4000128	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_11
0x400012a	      0xe800000000	                          call 0x400012f	        97	stdio2.h	CALL_11
0x400012f	      0xbf01000000	                              mov edi, 1	       807	xdiffi.c	FUNCTION_15	CALL_1
0x4000134	      0xe800000000	                          call 0x4000139	       807	xdiffi.c	FUNCTION_15	CALL_1
xdl_recs_cmp	SWITCH,0:ELSE,2:DO,0:functions,0:IF,4:WHILE,0:FOR,4:CALL,3	597
0x40004f0	            0x4157	                                push r15	       270	xdiffi.c	FUNCTION_2
0x40004f2	            0x4156	                                push r14	       270	xdiffi.c	FUNCTION_2
0x40004f4	          0x4d89c7	                             mov r15, r8	       270	xdiffi.c	FUNCTION_2
0x40004f7	            0x4155	                                push r13	       270	xdiffi.c	FUNCTION_2
0x40004f9	            0x4154	                                push r12	       270	xdiffi.c	FUNCTION_2
0x40004fb	          0x4989f6	                            mov r14, rsi	       270	xdiffi.c	FUNCTION_2
0x40004fe	              0x55	                                push rbp	       270	xdiffi.c	FUNCTION_2
0x40004ff	              0x53	                                push rbx	       270	xdiffi.c	FUNCTION_2
0x4000500	          0x4889d3	                            mov rbx, rdx	       270	xdiffi.c	FUNCTION_2
0x4000503	          0x4d89cb	                             mov r11, r9	       270	xdiffi.c	FUNCTION_2
0x4000506	    0x4881ecb80000	                           sub rsp, 0xb8	       270	xdiffi.c	FUNCTION_2
0x400050d	          0x4839de	                            cmp rsi, rbx	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000510	        0x488b4708	                mov rax, qword [rdi + 8]	       271	xdiffi.c	FUNCTION_2
0x4000514	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       270	xdiffi.c	FUNCTION_2
0x4000519	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       270	xdiffi.c	FUNCTION_2
0x400051e	    0x4c8bac240801	           mov r13, qword [rsp + 0x108] 	       270	xdiffi.c	FUNCTION_2
0x4000526	        0x488b5108	                mov rdx, qword [rcx + 8]	       271	xdiffi.c	FUNCTION_2
0x400052a	     0xf8d0d070000	                           jge 0x4000c3d	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000530	          0x4d39c8	                              cmp r8, r9	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000533	     0xf8d04070000	                           jge 0x4000c3d	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000539	        0x4a8b0cc2	             mov rcx, qword [rdx + r8*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400053d	        0x48390cf0	           cmp qword [rax + rsi*8], rcx 	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000541	            0x7529	                           jne 0x400056c	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000543	       0xf1f440000	                   nop dword [rax + rax]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000548	        0x4983c601	                              add r14, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400054c	        0x4983c701	                              add r15, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000550	          0x4c39f3	                            cmp rbx, r14	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000553	     0xf8ee4060000	                           jle 0x4000c3d	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000559	          0x4d39fb	                            cmp r11, r15	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400055c	     0xf8edb060000	                           jle 0x4000c3d	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000562	        0x4a8b34fa	            mov rsi, qword [rdx + r15*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000566	        0x4a3934f0	           cmp qword [rax + r14*8], rsi 	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400056a	            0x74dc	                            je 0x4000548	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400056c	      0x488b74d8f8	        mov rsi, qword [rax + rbx*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000571	      0x4a3974daf8	       cmp qword [rdx + r11*8 - 8], rsi 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000576	     0xf8501070000	                           jne 0x4000c7d	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400057c	         0xf1f4000	                         nop dword [rax]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000580	        0x4883eb01	                              sub rbx, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000584	        0x4983eb01	                              sub r11, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000588	          0x4c39f3	                            cmp rbx, r14	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400058b	     0xf8eac060000	                           jle 0x4000c3d	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000591	          0x4d39fb	                            cmp r11, r15	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000594	     0xf8ea3060000	                           jle 0x4000c3d	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400059a	      0x4a8b7cdaf8	        mov rdi, qword [rdx + r11*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400059f	      0x48397cd8f8	       cmp qword [rax + rbx*8 - 8], rdi 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x40005a4	            0x74da	                            je 0x4000580	       277	xdiffi.c	FUNCTION_2	FOR_2
0x40005a6	          0x4c89f6	                            mov rsi, r14	        66	xdiffi.c	FUNCTION_1
0x40005a9	    0x4c8b8424f000	              mov r8, qword [rsp + 0xf0]	        76	xdiffi.c	FUNCTION_1
0x40005b1	          0x4889d9	                            mov rcx, rbx	        66	xdiffi.c	FUNCTION_1
0x40005b4	          0x4c29de	                            sub rsi, r11	        66	xdiffi.c	FUNCTION_1
0x40005b7	          0x4c89f7	                            mov rdi, r14	        67	xdiffi.c	FUNCTION_1
0x40005ba	          0x4c29f9	                            sub rcx, r15	        66	xdiffi.c	FUNCTION_1
0x40005bd	          0x4c29ff	                            sub rdi, r15	        67	xdiffi.c	FUNCTION_1
0x40005c0	      0x4889742430	             mov qword [rsp + 0x30], rsi	        66	xdiffi.c	FUNCTION_1
0x40005c5	          0x4889de	                            mov rsi, rbx	        67	xdiffi.c	FUNCTION_1
0x40005c8	          0x4c29de	                            sub rsi, r11	        67	xdiffi.c	FUNCTION_1
0x40005cb	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        66	xdiffi.c	FUNCTION_1
0x40005d0	          0x4889f9	                            mov rcx, rdi	        68	xdiffi.c	FUNCTION_1
0x40005d3	          0x4829f1	                            sub rcx, rsi	        68	xdiffi.c	FUNCTION_1
0x40005d6	        0x4d8934f8	             mov qword [r8 + rdi*8], r14	        76	xdiffi.c	FUNCTION_1
0x40005da	    0x4c8b8424f800	              mov r8, qword [rsp + 0xf8]	        77	xdiffi.c	FUNCTION_1
0x40005e2	          0x83e101	                              and ecx, 1	        68	xdiffi.c	FUNCTION_1
0x40005e5	    0x4889b4248800	             mov qword [rsp + 0x88], rsi	        67	xdiffi.c	FUNCTION_1
0x40005ed	      0x4889742428	             mov qword [rsp + 0x28], rsi	        67	xdiffi.c	FUNCTION_1
0x40005f2	        0x884c247f	               mov byte [rsp + 0x7f], cl	        67	xdiffi.c	FUNCTION_1
0x40005f6	        0x4883f101	                              xor rcx, 1	        67	xdiffi.c	FUNCTION_1
0x40005fa	      0x4889742408	                mov qword [rsp + 8], rsi	        67	xdiffi.c	FUNCTION_1
0x40005ff	        0x49891cf0	             mov qword [r8 + rsi*8], rbx	        77	xdiffi.c	FUNCTION_1
0x4000603	            0x89ce	                            mov esi, ecx	        77	xdiffi.c	FUNCTION_1
0x4000605	          0x4889f9	                            mov rcx, rdi	        77	xdiffi.c	FUNCTION_1
0x4000608	          0x83e601	                              and esi, 1	        77	xdiffi.c	FUNCTION_1
0x400060b	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000610	    0x4889bc248000	             mov qword [rsp + 0x80], rdi	        67	xdiffi.c	FUNCTION_1
0x4000618	      0x48897c2420	             mov qword [rsp + 0x20], rdi	        67	xdiffi.c	FUNCTION_1
0x400061d	      0x48897c2418	             mov qword [rsp + 0x18], rdi	        67	xdiffi.c	FUNCTION_1
0x4000622	    0x48c744246800	               mov qword [rsp + 0x68], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x400062b	    0x48c744247000	               mov qword [rsp + 0x70], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000634	    0x48c744246001	               mov qword [rsp + 0x60], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x400063d	      0x408874247e	              mov byte [rsp + 0x7e], sil	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000642	     0xf8dcf050000	                           jge 0x4000c17	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000648	        0x4883e901	                              sub rcx, 1	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400064c	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000651	      0x4839742438	            cmp qword [rsp + 0x38], rsi 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000656	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400065e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000663	    0x48c744cff8ff	mov qword [rdi + rcx*8 - 8], 0xffffffffffffffff	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400066c	     0xf8ebb050000	                           jle 0x4000c2d	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000672	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400067a	        0x4883c601	                              add rsi, 1	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400067e	      0x4889742420	             mov qword [rsp + 0x20], rsi	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000683	    0x48c744f708ff	mov qword [rdi + rsi*8 + 8], 0xffffffffffffffff	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400068c	          0x4889f7	                            mov rdi, rsi	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400068f	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000694	     0xf8f24070000	                            jg 0x4000dbe	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400069a	    0x488b8c24f000	            mov rcx, qword [rsp + 0xf0] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006a2	      0x4c897c2458	             mov qword [rsp + 0x58], r15	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006a7	          0x4989f9	                             mov r9, rdi	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006aa	    0x440fb67c247f	          movzx r15d, byte [rsp + 0x7f] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006b0	      0x4c89742450	             mov qword [rsp + 0x50], r14	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006b5	          0x4531c0	                            xor r8d, r8d	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006b8	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006bd	      0x4c8d54f9f8	              lea r10, [rcx + rdi*8 - 8]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006c2	    0x660f1f440000	                    nop word [rax + rax]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006c8	          0x498b0a	                    mov rcx, qword [r10]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40006cb	        0x498b7a10	            mov rdi, qword [r10 + 0x10] 	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40006cf	        0x488d7101	                      lea rsi, [rcx + 1]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40006d3	          0x4839f9	                            cmp rcx, rdi	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40006d6	        0x480f4dfe	                         cmovge rdi, rsi	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x40006da	          0x4889fd	                            mov rbp, rdi	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006dd	          0x4c29cd	                             sub rbp, r9	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006e0	          0x4839df	                            cmp rdi, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006e3	     0xf8dec050000	                           jge 0x4000cd5	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006e9	          0x4c39dd	                            cmp rbp, r11	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006ec	     0xf8de3050000	                           jge 0x4000cd5	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006f2	        0x488b34f8	            mov rsi, qword [rax + rdi*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006f6	        0x483934ea	           cmp qword [rdx + rbp*8], rsi 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006fa	     0xf85d5050000	                           jne 0x4000cd5	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000700	        0x488d4f01	                      lea rcx, [rdi + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000704	        0x488d7501	                      lea rsi, [rbp + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000708	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400070d	           0xf1f00	                         nop dword [rax]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000710	          0x4839d9	                            cmp rcx, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000713	          0x4989cc	                            mov r12, rcx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000716	          0x4889f5	                            mov rbp, rsi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000719	     0xf8d99050000	                           jge 0x4000cb8	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400071f	          0x4c39de	                            cmp rsi, r11	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000722	     0xf8d90050000	                           jge 0x4000cb8	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000728	        0x488b3cea	            mov rdi, qword [rdx + rbp*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400072c	        0x4a393ce0	           cmp qword [rax + r12*8], rdi 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000730	        0x488d4901	                      lea rcx, [rcx + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000734	        0x488d7601	                      lea rsi, [rsi + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000738	            0x74d6	                            je 0x4000710	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400073a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400073f	          0x4c89e1	                            mov rcx, r12	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000742	          0x4829f9	                            sub rcx, rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000745	        0x49394d08	                cmp qword [r13 + 8], rcx	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x4000749	      0xbe01000000	                              mov esi, 1	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x400074e	        0x4d896208	                mov qword [r10 + 8], r12	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000752	        0x440f4cc6	                          cmovl r8d, esi	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x4000756	          0x4d39ce	                             cmp r14, r9	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000759	        0x400f9dc6	                               setge sil	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400075d	      0x4c394c2408	                 cmp qword [rsp + 8], r9	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000762	           0xf9ec1	                                setle cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000765	          0x4084ce	                            test sil, cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000768	            0x7417	                            je 0x4000781	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400076a	          0x4584ff	                         test r15b, r15b	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400076d	            0x7412	                            je 0x4000781	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400076f	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000777	        0x4e3924c9	            cmp qword [rcx + r9*8], r12 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400077b	     0xf8e83050000	                           jle 0x4000d04	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000781	        0x4983e902	                               sub r9, 2	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000785	        0x4983ea10	                           sub r10, 0x10	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000789	      0x4c3b4c2418	              cmp r9, qword [rsp + 0x18]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400078e	     0xf8d34ffffff	                           jge 0x40006c8	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000794	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000799	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400079e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007a3	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007a8	     0xf8d4b050000	                           jge 0x4000cf9	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007ae	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007b6	        0x4883ef01	                              sub rdi, 1	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007ba	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007c4	      0x48897c2408	                mov qword [rsp + 8], rdi	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007c9	      0x48894cfef8	        mov qword [rsi + rdi*8 - 8], rcx	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x40007ce	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007d3	      0x48394c2438	            cmp qword [rsp + 0x38], rcx 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007d8	     0xf8e0b050000	                           jle 0x4000ce9	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007de	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007e6	        0x4883c101	                              add rcx, 1	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007ea	    0x48bfffffffff	         movabs rdi, 0x7fffffffffffffff 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007f4	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007f9	      0x48897cce08	        mov qword [rsi + rcx*8 + 8], rdi	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x40007fe	          0x4889ce	                            mov rsi, rcx	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000801	      0x4839742408	                cmp qword [rsp + 8], rsi	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000806	     0xf8f01010000	                            jg 0x400090d	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400080c	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000814	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000819	          0x4989f1	                             mov r9, rsi	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400081c	      0x4c895c2458	             mov qword [rsp + 0x58], r11	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000821	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000826	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400082b	      0x4c8d54f1f8	              lea r10, [rcx + rsi*8 - 8]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000830	        0x498b4a10	            mov rcx, qword [r10 + 0x10] 	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000834	          0x498b3a	                    mov rdi, qword [r10]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x4000837	        0x488d71ff	                      lea rsi, [rcx - 1]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x400083b	          0x4839cf	                            cmp rdi, rcx	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x400083e	        0x480f4dfe	                         cmovge rdi, rsi	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x4000842	          0x4889fd	                            mov rbp, rdi	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000845	          0x4c29cd	                             sub rbp, r9	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000848	          0x4c39f7	                            cmp rdi, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400084b	     0xf8e8e040000	                           jle 0x4000cdf	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000851	          0x4c39fd	                            cmp rbp, r15	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000854	     0xf8e85040000	                           jle 0x4000cdf	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400085a	      0x488b74f8f8	        mov rsi, qword [rax + rdi*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400085f	      0x483974eaf8	       cmp qword [rdx + rbp*8 - 8], rsi 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000864	     0xf8575040000	                           jne 0x4000cdf	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400086a	        0x488d4fff	                      lea rcx, [rdi - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400086e	        0x488d75ff	                      lea rsi, [rbp - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000872	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000877	    0x660f1f840000	                    nop word [rax + rax]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000880	          0x4c39f1	                            cmp rcx, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000883	          0x4989cc	                            mov r12, rcx	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000886	          0x4889f5	                            mov rbp, rsi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000889	     0xf8e39040000	                           jle 0x4000cc8	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400088f	          0x4c39fe	                            cmp rsi, r15	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000892	     0xf8e30040000	                           jle 0x4000cc8	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000898	      0x488b7ceaf8	        mov rdi, qword [rdx + rbp*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400089d	      0x4a397ce0f8	       cmp qword [rax + r12*8 - 8], rdi 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008a2	        0x488d49ff	                      lea rcx, [rcx - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008a6	        0x488d76ff	                      lea rsi, [rsi - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008aa	            0x74d4	                            je 0x4000880	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008ac	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008b1	          0x4c29e7	                            sub rdi, r12	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40008b4	        0x49397d08	                cmp qword [r13 + 8], rdi	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x40008b8	      0xbe01000000	                              mov esi, 1	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x40008bd	        0x4d896208	                mov qword [r10 + 8], r12	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008c1	        0x440f4cc6	                          cmovl r8d, esi	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x40008c5	          0x4c39cb	                             cmp rbx, r9	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008c8	        0x400f9dc6	                               setge sil	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008cc	          0x4d39cb	                             cmp r11, r9	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008cf	           0xf9ec1	                                setle cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008d2	          0x4084ce	                            test sil, cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008d5	            0x7419	                            je 0x40008f0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008d7	      0x807c247e00	                cmp byte [rsp + 0x7e], 0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008dc	            0x7412	                            je 0x40008f0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008de	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008e6	        0x4e3924ce	            cmp qword [rsi + r9*8], r12 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008ea	     0xf8db4040000	                           jge 0x4000da4	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x40008f0	        0x4983e902	                               sub r9, 2	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008f4	        0x4983ea10	                           sub r10, 0x10	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008f8	      0x4c3b4c2408	                 cmp r9, qword [rsp + 8]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008fd	     0xf8d2dffffff	                           jge 0x4000830	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000903	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000908	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400090d	    0x8b8c24000100	           mov ecx, dword [rsp + 0x100] 	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000914	            0x85c9	                           test ecx, ecx	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000916	     0xf85e5020000	                           jne 0x4000c01	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x400091c	          0x4585c0	                           test r8d, r8d	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400091f	     0xf84cd020000	                            je 0x4000bf2	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000925	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400092a	        0x49397d10	            cmp qword [r13 + 0x10], rdi 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400092e	     0xf8dbe020000	                           jge 0x4000bf2	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000934	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000939	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400093e	     0xf8f61010000	                            jg 0x4000aa5	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000944	    0x488d34bd0000	                        lea rsi, [rdi*4]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400094c	      0x4c895c2458	             mov qword [rsp + 0x58], r11	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000951	          0x4989cc	                            mov r12, rcx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000954	            0x31ed	                            xor ebp, ebp	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000956	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400095b	      0x4889742410	             mov qword [rsp + 0x10], rsi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000960	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000968	          0x4989f2	                            mov r10, rsi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400096b	          0x4989f3	                            mov r11, rsi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400096e	          0x4929ca	                            sub r10, rcx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000971	    0x488b9c24f000	            mov rbx, qword [rsp + 0xf0] 	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000979	          0x4d89e0	                             mov r8, r12	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400097c	          0x4d29d8	                             sub r8, r11	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400097f	          0x4d39e3	                            cmp r11, r12	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000982	        0x4d0f4dc2	                          cmovge r8, r10	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000986	        0x4a8b34e3	            mov rsi, qword [rbx + r12*8]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400098a	          0x4889f7	                            mov rdi, rsi	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400098d	          0x4989f1	                             mov r9, rsi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000990	          0x4c29e7	                            sub rdi, r12	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000993	          0x4d29f1	                             sub r9, r14	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000996	          0x4889f9	                            mov rcx, rdi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000999	          0x4c29f9	                            sub rcx, r15	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400099c	          0x4c01c9	                             add rcx, r9	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400099f	          0x4c29c1	                             sub rcx, r8	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40009a2	          0x4839e9	                            cmp rcx, rbp	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009a5	     0xf8ed4000000	                           jle 0x4000a7f	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009ab	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009b0	     0xf8dc9000000	                           jge 0x4000a7f	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009b6	        0x498b5d08	                mov rbx, qword [r13 + 8]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009ba	        0x4e8d0433	                     lea r8, [rbx + r14]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009be	          0x4c39c6	                             cmp rsi, r8	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009c1	     0xf8cb8000000	                            jl 0x4000a7f	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009c7	      0x483b742450	            cmp rsi, qword [rsp + 0x50] 	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009cc	     0xf8dad000000	                           jge 0x4000a7f	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009d2	        0x4e8d043b	                     lea r8, [rbx + r15]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009d6	          0x4c39c7	                             cmp rdi, r8	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009d9	     0xf8ca0000000	                            jl 0x4000a7f	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009df	      0x483b7c2458	            cmp rdi, qword [rsp + 0x58] 	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009e4	     0xf8d95000000	                           jge 0x4000a7f	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40009ea	        0x4c8d46ff	                       lea r8, [rsi - 1]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009ee	    0x4e8d0cc50000	                          lea r9, [r8*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009f6	        0x4e8b04c0	              mov r8, qword [rax + r8*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009fa	      0x4c3944faf8	        cmp qword [rdx + rdi*8 - 8], r8 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009ff	            0x757e	                           jne 0x4000a7f	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a01	        0x4883fb01	                              cmp rbx, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a05	            0x746b	                            je 0x4000a72	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a07	      0x4e8d440808	                  lea r8, [rax + r9 + 8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a0c	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a14	          0x4531c9	                            xor r9d, r9d	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a17	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a1f	    0x4c8984249000	              mov qword [rsp + 0x90], r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a27	        0x4c8d04fa	                   lea r8, [rdx + rdi*8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a2b	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a33	    0x4c8984249800	              mov qword [rsp + 0x98], r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a3b	    0x41b801000000	                              mov r8d, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a41	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a49	        0x4983c001	                               add r8, 1	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a4d	      0x4a8b740ef0	        mov rsi, qword [rsi + r9 - 0x10]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a52	      0x4a397409f0	       cmp qword [rcx + r9 - 0x10], rsi 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a57	            0x7526	                           jne 0x4000a7f	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a59	        0x4983e908	                               sub r9, 8	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000a5d	          0x4c39c3	                             cmp rbx, r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a60	            0x75df	                           jne 0x4000a41	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a62	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a6a	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a72	      0x48897c2468	             mov qword [rsp + 0x68], rdi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a77	      0x4889742470	             mov qword [rsp + 0x70], rsi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a7c	          0x4889cd	                            mov rbp, rcx	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a7f	        0x4983ec02	                              sub r12, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a83	        0x4983c202	                              add r10, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a87	      0x4c39642418	            cmp qword [rsp + 0x18], r12 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a8c	     0xf8edffeffff	                           jle 0x4000971	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a92	          0x4885ed	                           test rbp, rbp	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a95	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a9a	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a9f	     0xf855a030000	                           jne 0x4000dff	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000aa5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aaa	      0x48397c2408	                cmp qword [rsp + 8], rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aaf	     0xf8f3d010000	                            jg 0x4000bf2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ab5	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aba	      0x4c89742450	             mov qword [rsp + 0x50], r14	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000abf	          0x4989fc	                            mov r12, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ac2	          0x4531d2	                          xor r10d, r10d	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ac5	    0x488d0cb50000	                        lea rcx, [rsi*4]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000acd	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ad5	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ada	          0x4889f5	                            mov rbp, rsi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000add	          0x4989f6	                            mov r14, rsi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ae0	          0x4829fd	                            sub rbp, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ae3	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aeb	          0x4d89e0	                             mov r8, r12	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aee	          0x4989d9	                             mov r9, rbx	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000af1	          0x4d29f0	                             sub r8, r14	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000af4	          0x4d39e6	                            cmp r14, r12	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000af7	        0x4c0f4dc5	                          cmovge r8, rbp	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000afb	        0x4a8b34e1	            mov rsi, qword [rcx + r12*8]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aff	          0x4c89d9	                            mov rcx, r11	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b02	          0x4889f7	                            mov rdi, rsi	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b05	          0x4929f1	                             sub r9, rsi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b08	          0x4c29e7	                            sub rdi, r12	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b0b	          0x4829f9	                            sub rcx, rdi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b0e	          0x4c01c9	                             add rcx, r9	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b11	          0x4c29c1	                             sub rcx, r8	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b14	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b19	     0xf8db2000000	                           jge 0x4000bd1	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b1f	          0x4c39d1	                            cmp rcx, r10	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b22	     0xf8ea9000000	                           jle 0x4000bd1	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b28	      0x483b742450	            cmp rsi, qword [rsp + 0x50] 	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b2d	     0xf8e9e000000	                           jle 0x4000bd1	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b33	        0x4d8b4508	                 mov r8, qword [r13 + 8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b37	          0x4989d9	                             mov r9, rbx	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b3a	          0x4d29c1	                              sub r9, r8	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b3d	          0x4c39ce	                             cmp rsi, r9	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b40	     0xf8f8b000000	                            jg 0x4000bd1	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b46	          0x4c39ff	                            cmp rdi, r15	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b49	     0xf8e82000000	                           jle 0x4000bd1	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b4f	          0x4d89d9	                             mov r9, r11	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b52	      0x4c89442458	              mov qword [rsp + 0x58], r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b57	          0x4d29c1	                              sub r9, r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b5a	          0x4c39cf	                             cmp rdi, r9	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b5d	            0x7f72	                            jg 0x4000bd1	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000b5f	        0x4c8d0cf0	                   lea r9, [rax + rsi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b63	        0x4c8d04fa	                   lea r8, [rdx + rdi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b67	    0x4c8984249800	              mov qword [rsp + 0x98], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b6f	          0x4d8b00	                      mov r8, qword [r8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b72	          0x4d3901	                      cmp qword [r9], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b75	    0x4c898c249000	              mov qword [rsp + 0x90], r9	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b7d	            0x7552	                           jne 0x4000bd1	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b7f	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b84	        0x4983e801	                               sub r8, 1	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b88	      0x4c89442458	              mov qword [rsp + 0x58], r8	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b8d	     0xf8443020000	                            je 0x4000dd6	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b93	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b9b	          0x4531c0	                            xor r8d, r8d	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b9e	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000ba6	    0x4c8b8c249800	              mov r9, qword [rsp + 0x98]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000bae	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000bb6	            0xeb0b	                           jmp 0x4000bc3	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000bb8	      0x4c3b442458	              cmp r8, qword [rsp + 0x58]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000bbd	     0xf8403020000	                            je 0x4000dc6	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000bc3	        0x4983c001	                               add r8, 1	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000bc7	        0x4b8b34c1	              mov rsi, qword [r9 + r8*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000bcb	        0x4a3934c1	            cmp qword [rcx + r8*8], rsi 	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000bcf	            0x74e7	                            je 0x4000bb8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000bd1	        0x4983ec02	                              sub r12, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000bd5	        0x4883c502	                              add rbp, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000bd9	      0x4c39642408	                cmp qword [rsp + 8], r12	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000bde	     0xf8efffeffff	                           jle 0x4000ae3	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000be4	          0x4d85d2	                           test r10, r10	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000be7	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000bec	     0xf85f6010000	                           jne 0x4000de8	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000bf2	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000bf7	        0x493b7d00	                    cmp rdi, qword [r13]	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000bfb	     0xf8d15020000	                           jge 0x4000e16	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000c01	    0x488344246001	               add qword [rsp + 0x60], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000c07	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000c0c	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000c11	     0xf8c31faffff	                            jl 0x4000648	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000c17	    0x488344241801	               add qword [rsp + 0x18], 1	        92	xdiffi.c	FUNCTION_1	FOR_1	ELSE_1
0x4000c1d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000c22	      0x4839742438	            cmp qword [rsp + 0x38], rsi 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000c27	     0xf8f45faffff	                            jg 0x4000672	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000c2d	    0x48836c242001	               sub qword [rsp + 0x20], 1	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x4000c33	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x4000c38	      0xe952faffff	                           jmp 0x400068f	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x4000c3d	          0x4c39f3	                            cmp rbx, r14	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000c40	            0x753b	                           jne 0x4000c7d	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000c42	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000c47	          0x4d39fb	                            cmp r11, r15	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c4a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000c4e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       285	xdiffi.c	FUNCTION_2	IF_1
0x4000c52	            0x7e15	                           jle 0x4000c69	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c54	         0xf1f4000	                         nop dword [rax]	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c58	        0x4a8b04fa	            mov rax, qword [rdx + r15*8]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c5c	        0x4983c701	                              add r15, 1	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c60	          0x4d39df	                            cmp r15, r11	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c63	        0xc6040101	                 mov byte [rcx + rax], 1	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c67	            0x75ef	                           jne 0x4000c58	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c69	            0x31c0	                            xor eax, eax	       320	xdiffi.c	FUNCTION_2
0x4000c6b	    0x4881c4b80000	                           add rsp, 0xb8	       321	xdiffi.c	FUNCTION_2
0x4000c72	              0x5b	                                 pop rbx	       321	xdiffi.c	FUNCTION_2
0x4000c73	              0x5d	                                 pop rbp	       321	xdiffi.c	FUNCTION_2
0x4000c74	            0x415c	                                 pop r12	       321	xdiffi.c	FUNCTION_2
0x4000c76	            0x415d	                                 pop r13	       321	xdiffi.c	FUNCTION_2
0x4000c78	            0x415e	                                 pop r14	       321	xdiffi.c	FUNCTION_2
0x4000c7a	            0x415f	                                 pop r15	       321	xdiffi.c	FUNCTION_2
0x4000c7c	              0xc3	                                     ret	       321	xdiffi.c	FUNCTION_2
0x4000c7d	          0x4d39fb	                            cmp r11, r15	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c80	     0xf8520f9ffff	                           jne 0x40005a6	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c86	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c8b	          0x4c39f3	                            cmp rbx, r14	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c8e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c92	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c96	            0x7ed1	                           jle 0x4000c69	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c98	     0xf1f84000000	                   nop dword [rax + rax]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000ca0	        0x4a8b04f2	            mov rax, qword [rdx + r14*8]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000ca4	        0x4983c601	                              add r14, 1	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000ca8	          0x4939de	                            cmp r14, rbx	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cab	        0xc6040101	                 mov byte [rcx + rax], 1	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000caf	            0x75ef	                           jne 0x4000ca0	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cb1	            0xebb6	                           jmp 0x4000c69	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cb3	       0xf1f440000	                   nop dword [rax + rax]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cb8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cbd	          0x4829f9	                            sub rcx, rdi	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cc0	      0xe980faffff	                           jmp 0x4000745	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cc5	           0xf1f00	                         nop dword [rax]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cc8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000ccd	          0x4829cf	                            sub rdi, rcx	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cd0	      0xe9dffbffff	                           jmp 0x40008b4	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000cd5	          0x4989fc	                            mov r12, rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000cd8	            0x31c9	                            xor ecx, ecx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000cda	      0xe966faffff	                           jmp 0x4000745	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000cdf	          0x4989fc	                            mov r12, rdi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000ce2	            0x31ff	                            xor edi, edi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000ce4	      0xe9cbfbffff	                           jmp 0x40008b4	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000ce9	    0x48836c242801	               sub qword [rsp + 0x28], 1	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000cef	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000cf4	      0xe908fbffff	                           jmp 0x4000801	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000cf9	    0x488344240801	                  add qword [rsp + 8], 1	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000cff	      0xe9cafaffff	                           jmp 0x40007ce	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000d04	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000d09	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000d0e	    0x41ba01000000	                             mov r10d, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000d14	      0xb801000000	                              mov eax, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000d19	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000d1e	      0x4489542408	               mov dword [rsp + 8], r10d	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000d23	          0x4989e9	                             mov r9, rbp	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d26	            0x4155	                                push r13	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d28	              0x50	                                push rax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d29	          0x4d89f8	                             mov r8, r15	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d2c	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d33	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d3a	          0x4c89e2	                            mov rdx, r12	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d3d	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d42	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d47	          0x4c89f6	                            mov rsi, r14	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d4a	      0xe800000000	                          call 0x4000d4f	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d4f	        0x4883c420	                           add rsp, 0x20	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d53	            0x85c0	                           test eax, eax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d55	      0x448b542408	               mov r10d, dword [rsp + 8]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d5a	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d5f	            0x7839	                            js 0x4000d9a	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d61	            0x4155	                                push r13	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d63	            0x4152	                                push r10	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d65	          0x4d89d9	                             mov r9, r11	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d68	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d6f	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d76	          0x4989e8	                             mov r8, rbp	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d79	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d7e	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d83	          0x4889da	                            mov rdx, rbx	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d86	          0x4c89e6	                            mov rsi, r12	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d89	      0xe800000000	                          call 0x4000d8e	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d8e	        0x4883c420	                           add rsp, 0x20	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d92	            0x85c0	                           test eax, eax	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d94	     0xf89cffeffff	                           jns 0x4000c69	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d9a	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000d9f	      0xe9c7feffff	                           jmp 0x4000c6b	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000da4	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000da9	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000dae	    0x41ba01000000	                             mov r10d, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000db4	      0xb801000000	                              mov eax, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000db9	      0xe95bffffff	                           jmp 0x4000d19	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000dbe	          0x4531c0	                            xor r8d, r8d	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000dc1	      0xe9d8f9ffff	                           jmp 0x400079e	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000dc6	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000dce	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000dd6	      0x48897c2468	             mov qword [rsp + 0x68], rdi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000ddb	      0x4889742470	             mov qword [rsp + 0x70], rsi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000de0	          0x4989ca	                            mov r10, rcx	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000de3	      0xe9e9fdffff	                           jmp 0x4000bd1	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000de8	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000ded	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000df2	    0x41ba01000000	                             mov r10d, 1	       210	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000df8	            0x31c0	                            xor eax, eax	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000dfa	      0xe91affffff	                           jmp 0x4000d19	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000dff	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000e04	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000e09	          0x4531d2	                          xor r10d, r10d	       186	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000e0c	      0xb801000000	                              mov eax, 1	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000e11	      0xe903ffffff	                           jmp 0x4000d19	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000e16	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e1b	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e20	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e27	     0xf8fdb000000	                            jg 0x4000f08	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e2d	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e35	          0x4c89e6	                            mov rsi, r12	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e38	          0x4889c2	                            mov rdx, rax	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e3b	        0x48391cd7	           cmp qword [rdi + rdx*8], rbx 	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000e3f	          0x4889d9	                            mov rcx, rbx	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000e42	        0x4d8d0413	                     lea r8, [r11 + rdx]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000e46	      0x480f4e0cd7	         cmovle rcx, qword [rdi + rdx*8]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000e4b	          0x4889c8	                            mov rax, rcx	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e4e	          0x4829d0	                            sub rax, rdx	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e51	          0x4c39d8	                            cmp rax, r11	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e54	        0x490f4fc8	                           cmovg rcx, r8	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e58	        0x490f4fc3	                          cmovg rax, r11	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e5c	          0x4989f0	                             mov r8, rsi	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e5f	          0x4801c8	                            add rax, rcx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e62	          0x4839f0	                            cmp rax, rsi	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e65	        0x4c0f4dc0	                          cmovge r8, rax	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e69	        0x4c0f4fe1	                          cmovg r12, rcx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000e6d	        0x4883ea02	                              sub rdx, 2	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e71	      0x4839542418	            cmp qword [rsp + 0x18], rdx 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e76	          0x4c89c6	                             mov rsi, r8	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e79	            0x7ec0	                           jle 0x4000e3b	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000e7b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e80	      0x4839442408	                cmp qword [rsp + 8], rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e85	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e8f	            0x7f7f	                            jg 0x4000f10	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e91	    0x4c8b8c24f800	              mov r9, qword [rsp + 0xf8]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e99	          0x4889f7	                            mov rdi, rsi	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e9c	          0x4889c2	                            mov rdx, rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e9f	        0x4d3934d1	            cmp qword [r9 + rdx*8], r14 	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000ea3	          0x4c89f1	                            mov rcx, r14	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000ea6	        0x4d8d1417	                    lea r10, [r15 + rdx]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000eaa	      0x490f4d0cd1	          cmovge rcx, qword [r9 + rdx*8]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000eaf	          0x4889fd	                            mov rbp, rdi	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000eb2	          0x4889c8	                            mov rax, rcx	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000eb5	          0x4829d0	                            sub rax, rdx	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000eb8	          0x4c39f8	                            cmp rax, r15	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000ebb	        0x490f4cca	                          cmovl rcx, r10	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000ebf	        0x490f4cc7	                          cmovl rax, r15	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000ec3	          0x4801c8	                            add rax, rcx	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000ec6	          0x4839f8	                            cmp rax, rdi	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000ec9	        0x480f4ee8	                         cmovle rbp, rax	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000ecd	        0x480f4cf1	                          cmovl rsi, rcx	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000ed1	        0x4883ea02	                              sub rdx, 2	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000ed5	      0x4839542408	                cmp qword [rsp + 8], rdx	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000eda	          0x4889ef	                            mov rdi, rbp	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000edd	            0x7ec0	                           jle 0x4000e9f	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000edf	        0x498d041b	                    lea rax, [r11 + rbx]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ee3	        0x4b8d1437	                    lea rdx, [r15 + r14]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ee7	          0x4c89c1	                             mov rcx, r8	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000eea	          0x4829e8	                            sub rax, rbp	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000eed	          0x4829d1	                            sub rcx, rdx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ef0	          0x4839c8	                            cmp rax, rcx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ef3	            0x7d20	                           jge 0x4000f15	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ef5	          0x4d29e0	                             sub r8, r12	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000ef8	          0x4531d2	                          xor r10d, r10d	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000efb	      0xb801000000	                              mov eax, 1	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000f00	          0x4c89c5	                             mov rbp, r8	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000f03	      0xe911feffff	                           jmp 0x4000d19	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000f08	          0x4d89e0	                             mov r8, r12	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000f0b	      0xe96bffffff	                           jmp 0x4000e7b	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000f10	          0x4889f5	                            mov rbp, rsi	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000f13	            0xebca	                           jmp 0x4000edf	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000f15	          0x4829f5	                            sub rbp, rsi	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000f18	          0x4989f4	                            mov r12, rsi	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000f1b	    0x41ba01000000	                             mov r10d, 1	       255	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000f21	            0x31c0	                            xor eax, eax	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000f23	      0xe9f1fdffff	                           jmp 0x4000d19	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
