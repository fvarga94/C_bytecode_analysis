unmerge_index_entry_at	functions,0:IF,8:DO,0:SWITCH,0:ELSE,0:WHILE,1:FOR,1:CALL,11	179
0x4000490	            0x4157	                                push r15	       118	resolve-undo.c	FUNCTION_5
0x4000492	            0x4156	                                push r14	       118	resolve-undo.c	FUNCTION_5
0x4000494	            0x4155	                                push r13	       118	resolve-undo.c	FUNCTION_5
0x4000496	            0x4154	                                push r12	       118	resolve-undo.c	FUNCTION_5
0x4000498	              0x55	                                push rbp	       118	resolve-undo.c	FUNCTION_5
0x4000499	              0x53	                                push rbx	       118	resolve-undo.c	FUNCTION_5
0x400049a	          0x4889fd	                            mov rbp, rdi	       118	resolve-undo.c	FUNCTION_5
0x400049d	        0x4883ec18	                           sub rsp, 0x18	       118	resolve-undo.c	FUNCTION_5
0x40004a1	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       125	resolve-undo.c	FUNCTION_5	IF_1
0x40004a5	        0x89742404	                mov dword [rsp + 4], esi	       118	resolve-undo.c	FUNCTION_5
0x40004a9	          0x4885ff	                           test rdi, rdi	       125	resolve-undo.c	FUNCTION_5	IF_1
0x40004ac	     0xf8406020000	                            je 0x40006b8	       125	resolve-undo.c	FUNCTION_5	IF_1
0x40004b2	      0x4863542404	            movsxd rdx, dword [rsp + 4] 	       128	resolve-undo.c	FUNCTION_5
0x40004b7	        0x488b4500	                    mov rax, qword [rbp]	       128	resolve-undo.c	FUNCTION_5
0x40004bb	        0x4c8b2cd0	            mov r13, qword [rax + rdx*8]	       128	resolve-undo.c	FUNCTION_5
0x40004bf	    0x488d0cd50000	                        lea rcx, [rdx*8]	       128	resolve-undo.c	FUNCTION_5
0x40004c7	      0x48894c2408	                mov qword [rsp + 8], rcx	       128	resolve-undo.c	FUNCTION_5
0x40004cc	    0x41f745380030	        test dword [r13 + 0x38], 0x3000 	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x40004d4	            0x746d	                            je 0x4000543	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x40004d6	      0xe9f5010000	                           jmp 0x40006d0	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x40004db	       0xf1f440000	                   nop dword [rax + rax]	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x40004e0	          0x8b7b04	                mov edi, dword [rbx + 4]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004e3	          0x4531ff	                          xor r15d, r15d	       122	resolve-undo.c	FUNCTION_5
0x40004e6	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004e8	     0xf8502010000	                           jne 0x40005f0	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004ee	          0x8b7b08	                mov edi, dword [rbx + 8]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004f1	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004f3	     0xf854b010000	                           jne 0x4000644	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40004f9	          0x4c89f7	                            mov rdi, r14	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x40004fc	      0xe800000000	                          call 0x4000501	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000501	          0x4585ff	                         test r15d, r15d	       159	resolve-undo.c	FUNCTION_5	IF_8
0x4000504	     0xf85ae010000	                           jne 0x40006b8	       159	resolve-undo.c	FUNCTION_5	IF_8
0x400050a	          0x4889df	                            mov rdi, rbx	       161	resolve-undo.c	FUNCTION_5	CALL_10
0x400050d	      0xe800000000	                          call 0x4000512	       161	resolve-undo.c	FUNCTION_5	CALL_10
0x4000512	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000516	    0x49c744240800	                  mov qword [r12 + 8], 0	       162	resolve-undo.c	FUNCTION_5
0x400051f	          0x4885ff	                           test rdi, rdi	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000522	     0xf8490010000	                            je 0x40006b8	       125	resolve-undo.c	FUNCTION_5	IF_1
0x4000528	        0x488b4500	                    mov rax, qword [rbp]	       128	resolve-undo.c	FUNCTION_5
0x400052c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       128	resolve-undo.c	FUNCTION_5
0x4000531	        0x4c8b2c08	              mov r13, qword [rax + rcx]	       128	resolve-undo.c	FUNCTION_5
0x4000535	    0x41f745380030	        test dword [r13 + 0x38], 0x3000 	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x400053d	     0xf858d010000	                           jne 0x40006d0	       129	resolve-undo.c	FUNCTION_5	IF_2	CALL_1
0x4000543	        0x4d8d7558	                   lea r14, [r13 + 0x58]	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x4000547	          0x4c89f6	                            mov rsi, r14	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x400054a	      0xe800000000	                          call 0x400054f	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x400054f	          0x4885c0	                           test rax, rax	       137	resolve-undo.c	FUNCTION_5	IF_3
0x4000552	          0x4989c4	                            mov r12, rax	       136	resolve-undo.c	FUNCTION_5	CALL_3
0x4000555	     0xf845d010000	                            je 0x40006b8	       137	resolve-undo.c	FUNCTION_5	IF_3
0x400055b	        0x488b5808	                mov rbx, qword [rax + 8]	       139	resolve-undo.c	FUNCTION_5
0x400055f	          0x4885db	                           test rbx, rbx	       140	resolve-undo.c	FUNCTION_5	IF_4
0x4000562	     0xf8450010000	                            je 0x40006b8	       140	resolve-undo.c	FUNCTION_5	IF_4
0x4000568	          0x4c89f7	                            mov rdi, r14	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x400056b	        0x458b6d38	           mov r13d, dword [r13 + 0x38] 	       142	resolve-undo.c	FUNCTION_5
0x400056f	      0xe800000000	                          call 0x4000574	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x4000574	        0x8b742404	                mov esi, dword [rsp + 4]	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x4000578	          0x4889ef	                            mov rdi, rbp	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x400057b	          0x4989c6	                            mov r14, rax	       143	resolve-undo.c	FUNCTION_5	CALL_4
0x400057e	    0x4181e5000000	        and r13d, loc.imp.match_pathspec	       142	resolve-undo.c	FUNCTION_5
0x4000585	      0xe800000000	                          call 0x400058a	       144	resolve-undo.c	FUNCTION_5	CALL_5
0x400058a	            0x8b3b	                    mov edi, dword [rbx]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x400058c	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x400058e	     0xf844cffffff	                            je 0x40004e0	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x4000594	        0x488d730c	                    lea rsi, [rbx + 0xc]	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000598	          0x4531c0	                            xor r8d, r8d	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x400059b	      0xb901000000	                              mov ecx, 1	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005a0	          0x4c89f2	                            mov rdx, r14	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005a3	      0xe800000000	                          call 0x40005a8	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005a8	          0x4585ed	                         test r13d, r13d	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x40005ab	            0x7407	                            je 0x40005b4	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x40005ad	    0x814838000000	or dword [rax + 0x38], loc.imp.match_pathspec	       152	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x40005b4	      0xba01000000	                              mov edx, 1	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005b9	          0x4889c6	                            mov rsi, rax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005bc	          0x4889ef	                            mov rdi, rbp	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005bf	      0xe800000000	                          call 0x40005c4	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005c4	            0x85c0	                           test eax, eax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005c6	     0xf8414ffffff	                            je 0x40004e0	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x40005cc	      0xbf00000000	                              mov edi, 0	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x40005d1	            0x31c0	                            xor eax, eax	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x40005d3	          0x4c89f6	                            mov rsi, r14	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x40005d6	      0xe800000000	                          call 0x40005db	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x40005db	          0x8b7b04	                mov edi, dword [rbx + 4]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40005de	    0x41bf01000000	                             mov r15d, 1	       154	resolve-undo.c	FUNCTION_5	FOR_1	IF_7
0x40005e4	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40005e6	     0xf8402ffffff	                            je 0x40004ee	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40005ec	         0xf1f4000	                         nop dword [rax]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x40005f0	        0x488d7320	                   lea rsi, [rbx + 0x20]	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005f4	          0x4531c0	                            xor r8d, r8d	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005f7	      0xb902000000	                              mov ecx, 2	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005fc	          0x4c89f2	                            mov rdx, r14	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x40005ff	      0xe800000000	                          call 0x4000604	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000604	          0x4585ed	                         test r13d, r13d	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000607	            0x7407	                            je 0x4000610	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000609	    0x814838000000	or dword [rax + 0x38], loc.imp.match_pathspec	       152	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000610	      0xba01000000	                              mov edx, 1	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000615	          0x4889c6	                            mov rsi, rax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000618	          0x4889ef	                            mov rdi, rbp	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400061b	      0xe800000000	                          call 0x4000620	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000620	            0x85c0	                           test eax, eax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000622	     0xf84c6feffff	                            je 0x40004ee	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000628	      0xbf00000000	                              mov edi, 0	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400062d	            0x31c0	                            xor eax, eax	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400062f	          0x4c89f6	                            mov rsi, r14	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000632	      0xe800000000	                          call 0x4000637	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000637	          0x8b7b08	                mov edi, dword [rbx + 8]	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x400063a	            0x85ff	                           test edi, edi	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x400063c	            0x7472	                            je 0x40006b0	       147	resolve-undo.c	FUNCTION_5	FOR_1	IF_5
0x400063e	    0x41bf01000000	                             mov r15d, 1	       154	resolve-undo.c	FUNCTION_5	FOR_1	IF_7
0x4000644	        0x488d7334	                   lea rsi, [rbx + 0x34]	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000648	          0x4531c0	                            xor r8d, r8d	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x400064b	      0xb903000000	                              mov ecx, 3	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000650	          0x4c89f2	                            mov rdx, r14	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000653	      0xe800000000	                          call 0x4000658	       149	resolve-undo.c	FUNCTION_5	FOR_1	CALL_6
0x4000658	          0x4585ed	                         test r13d, r13d	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x400065b	            0x7407	                            je 0x4000664	       151	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x400065d	    0x814838000000	or dword [rax + 0x38], loc.imp.match_pathspec	       152	resolve-undo.c	FUNCTION_5	FOR_1	IF_6
0x4000664	      0xba01000000	                              mov edx, 1	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000669	          0x4889c6	                            mov rsi, rax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400066c	          0x4889ef	                            mov rdi, rbp	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400066f	      0xe800000000	                          call 0x4000674	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000674	            0x85c0	                           test eax, eax	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x4000676	     0xf847dfeffff	                            je 0x40004f9	       153	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_7
0x400067c	          0x4c89f6	                            mov rsi, r14	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400067f	      0xbf00000000	                              mov edi, 0	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000684	            0x31c0	                            xor eax, eax	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x4000686	      0xe800000000	                          call 0x400068b	       155	resolve-undo.c	FUNCTION_5	FOR_1	IF_7	CALL_8
0x400068b	          0x4c89f7	                            mov rdi, r14	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x400068e	      0xe800000000	                          call 0x4000693	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x4000693	        0x8b442404	                mov eax, dword [rsp + 4]	       160	resolve-undo.c	FUNCTION_5	IF_8
0x4000697	        0x4883c418	                           add rsp, 0x18	       164	resolve-undo.c	FUNCTION_5
0x400069b	              0x5b	                                 pop rbx	       164	resolve-undo.c	FUNCTION_5
0x400069c	              0x5d	                                 pop rbp	       164	resolve-undo.c	FUNCTION_5
0x400069d	            0x415c	                                 pop r12	       164	resolve-undo.c	FUNCTION_5
0x400069f	            0x415d	                                 pop r13	       164	resolve-undo.c	FUNCTION_5
0x40006a1	            0x415e	                                 pop r14	       164	resolve-undo.c	FUNCTION_5
0x40006a3	            0x415f	                                 pop r15	       164	resolve-undo.c	FUNCTION_5
0x40006a5	              0xc3	                                     ret	       164	resolve-undo.c	FUNCTION_5
0x40006a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       164	resolve-undo.c	FUNCTION_5
0x40006b0	          0x4c89f7	                            mov rdi, r14	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x40006b3	      0xe800000000	                          call 0x40006b8	       158	resolve-undo.c	FUNCTION_5	CALL_9
0x40006b8	        0x8b442404	                mov eax, dword [rsp + 4]	       160	resolve-undo.c	FUNCTION_5	IF_8
0x40006bc	        0x4883c418	                           add rsp, 0x18	       164	resolve-undo.c	FUNCTION_5
0x40006c0	              0x5b	                                 pop rbx	       164	resolve-undo.c	FUNCTION_5
0x40006c1	              0x5d	                                 pop rbp	       164	resolve-undo.c	FUNCTION_5
0x40006c2	            0x415c	                                 pop r12	       164	resolve-undo.c	FUNCTION_5
0x40006c4	            0x415d	                                 pop r13	       164	resolve-undo.c	FUNCTION_5
0x40006c6	            0x415e	                                 pop r14	       164	resolve-undo.c	FUNCTION_5
0x40006c8	            0x415f	                                 pop r15	       164	resolve-undo.c	FUNCTION_5
0x40006ca	              0xc3	                                     ret	       164	resolve-undo.c	FUNCTION_5
0x40006cb	       0xf1f440000	                   nop dword [rax + rax]	       164	resolve-undo.c	FUNCTION_5
0x40006d0	          0x8b5d0c	              mov ebx, dword [rbp + 0xc]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006d3	        0x3b5c2404	                cmp ebx, dword [rsp + 4]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006d7	            0x763c	                           jbe 0x4000715	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006d9	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006de	        0x4983c558	                           add r13, 0x58	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006e2	          0x4801c5	                            add rbp, rax	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006e5	            0xeb1a	                           jmp 0x4000701	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006e7	    0x660f1f840000	                    nop word [rax + rax]	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006f0	      0x8344240401	                  add dword [rsp + 4], 1	       133	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006f5	        0x4883c508	                              add rbp, 8	       133	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006f9	        0x8b442404	                mov eax, dword [rsp + 4]	       133	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006fd	            0x39c3	                            cmp ebx, eax	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x40006ff	            0x7614	                           jbe 0x4000715	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x4000701	        0x488b4500	                    mov rax, qword [rbp]	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x4000705	          0x4c89ee	                            mov rsi, r13	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x4000708	        0x488d7858	                   lea rdi, [rax + 0x58]	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x400070c	      0xe800000000	                          call 0x4000711	       132	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1	CALL_2
0x4000711	            0x85c0	                           test eax, eax	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x4000713	            0x74db	                            je 0x40006f0	       131	resolve-undo.c	FUNCTION_5	IF_2	WHILE_1
0x4000715	        0x8b442404	                mov eax, dword [rsp + 4]	       134	resolve-undo.c	FUNCTION_5	IF_2
0x4000719	        0x4883c418	                           add rsp, 0x18	       164	resolve-undo.c	FUNCTION_5
0x400071d	              0x5b	                                 pop rbx	       164	resolve-undo.c	FUNCTION_5
0x400071e	              0x5d	                                 pop rbp	       164	resolve-undo.c	FUNCTION_5
0x400071f	          0x83e801	                              sub eax, 1	       134	resolve-undo.c	FUNCTION_5	IF_2
0x4000722	            0x415c	                                 pop r12	       164	resolve-undo.c	FUNCTION_5
0x4000724	            0x415d	                                 pop r13	       164	resolve-undo.c	FUNCTION_5
0x4000726	            0x415e	                                 pop r14	       164	resolve-undo.c	FUNCTION_5
0x4000728	            0x415f	                                 pop r15	       164	resolve-undo.c	FUNCTION_5
0x400072a	              0xc3	                                     ret	       164	resolve-undo.c	FUNCTION_5
unmerge_marked_index	functions,0:IF,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,1:CALL,1	27
0x4000730	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       170	resolve-undo.c	FUNCTION_6	IF_1
0x4000735	            0x7445	                            je 0x400077c	       170	resolve-undo.c	FUNCTION_6	IF_1
0x4000737	          0x8b770c	              mov esi, dword [rdi + 0xc]	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400073a	            0x85f6	                           test esi, esi	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400073c	            0x743e	                            je 0x400077c	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400073e	              0x53	                                push rbx	       167	resolve-undo.c	FUNCTION_6
0x400073f	            0x31c0	                            xor eax, eax	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000741	          0x4889fb	                            mov rbx, rdi	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000744	            0xeb11	                           jmp 0x4000757	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000750	          0x83c001	                              add eax, 1	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000753	            0x39f0	                            cmp eax, esi	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000755	            0x7324	                           jae 0x400077b	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000757	          0x488b0b	                    mov rcx, qword [rbx]	       174	resolve-undo.c	FUNCTION_6	FOR_1
0x400075a	          0x4863d0	                         movsxd rdx, eax	       174	resolve-undo.c	FUNCTION_6	FOR_1
0x400075d	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000761	        0xf6423b04	               test byte [rdx + 0x3b], 4	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000765	            0x74e9	                            je 0x4000750	       175	resolve-undo.c	FUNCTION_6	FOR_1	IF_2
0x4000767	            0x89c6	                            mov esi, eax	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x4000769	          0x4889df	                            mov rdi, rbx	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x400076c	      0xe800000000	                          call 0x4000771	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x4000771	          0x8b730c	              mov esi, dword [rbx + 0xc]	       176	resolve-undo.c	FUNCTION_6	FOR_1	CALL_1
0x4000774	          0x83c001	                              add eax, 1	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000777	            0x39f0	                            cmp eax, esi	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x4000779	            0x72dc	                            jb 0x4000757	       173	resolve-undo.c	FUNCTION_6	FOR_1
0x400077b	              0x5b	                                 pop rbx	       178	resolve-undo.c	FUNCTION_6
0x400077c	            0xf3c3	                                     ret	       178	resolve-undo.c	FUNCTION_6
unmerge_index	functions,0:IF,2:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,1:CALL,2	45
0x4000780	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       184	resolve-undo.c	FUNCTION_7	IF_1
0x4000785	     0xf847c000000	                            je 0x4000807	       184	resolve-undo.c	FUNCTION_7	IF_1
0x400078b	          0x8b470c	              mov eax, dword [rdi + 0xc]	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x400078e	            0x85c0	                           test eax, eax	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000790	            0x7475	                            je 0x4000807	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000792	            0x4154	                                push r12	       181	resolve-undo.c	FUNCTION_7
0x4000794	          0x4989fc	                            mov r12, rdi	       181	resolve-undo.c	FUNCTION_7
0x4000797	              0x55	                                push rbp	       181	resolve-undo.c	FUNCTION_7
0x4000798	          0x4889f5	                            mov rbp, rsi	       181	resolve-undo.c	FUNCTION_7
0x400079b	              0x53	                                push rbx	       181	resolve-undo.c	FUNCTION_7
0x400079c	            0x31db	                            xor ebx, ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x400079e	            0xeb0a	                           jmp 0x40007aa	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40007a0	          0x83c301	                              add ebx, 1	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40007a3	      0x41395c240c	              cmp dword [r12 + 0xc], ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40007a8	            0x7659	                           jbe 0x4000803	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40007aa	        0x498b1424	                    mov rdx, qword [r12]	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x40007ae	          0x4863c3	                         movsxd rax, ebx	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x40007b1	          0x4889ef	                            mov rdi, rbp	       336	dir.h	FUNCTION_21	CALL_2
0x40007b4	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       188	resolve-undo.c	FUNCTION_7	FOR_1
0x40007b8	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       337	dir.h	FUNCTION_21	CALL_4
0x40007bb	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	       336	dir.h	FUNCTION_21	CALL_2
0x40007be	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_21	CALL_4
0x40007c3	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_21	CALL_2
0x40007c8	        0x410f94c1	                                sete r9b	       336	dir.h	FUNCTION_21	CALL_2
0x40007cc	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_21	CALL_2
0x40007d1	           0xf94c0	                                 sete al	       336	dir.h	FUNCTION_21	CALL_2
0x40007d4	        0x4883c658	                           add rsi, 0x58	       336	dir.h	FUNCTION_21	CALL_2
0x40007d8	          0x4531c0	                            xor r8d, r8d	       336	dir.h	FUNCTION_21	CALL_2
0x40007db	          0x4109c1	                             or r9d, eax	       336	dir.h	FUNCTION_21	CALL_2
0x40007de	            0x31c9	                            xor ecx, ecx	       336	dir.h	FUNCTION_21	CALL_2
0x40007e0	        0x4183e101	                              and r9d, 1	       336	dir.h	FUNCTION_21	CALL_2
0x40007e4	      0xe800000000	                          call 0x40007e9	       336	dir.h	FUNCTION_21	CALL_2
0x40007e9	            0x85c0	                           test eax, eax	       189	resolve-undo.c	FUNCTION_7	FOR_1	IF_2	CALL_1
0x40007eb	            0x74b3	                            je 0x40007a0	       189	resolve-undo.c	FUNCTION_7	FOR_1	IF_2	CALL_1
0x40007ed	            0x89de	                            mov esi, ebx	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40007ef	          0x4c89e7	                            mov rdi, r12	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40007f2	      0xe800000000	                          call 0x40007f7	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40007f7	            0x89c3	                            mov ebx, eax	       191	resolve-undo.c	FUNCTION_7	FOR_1	CALL_2
0x40007f9	          0x83c301	                              add ebx, 1	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x40007fc	      0x41395c240c	              cmp dword [r12 + 0xc], ebx	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000801	            0x77a7	                            ja 0x40007aa	       187	resolve-undo.c	FUNCTION_7	FOR_1
0x4000803	              0x5b	                                 pop rbx	       193	resolve-undo.c	FUNCTION_7
0x4000804	              0x5d	                                 pop rbp	       193	resolve-undo.c	FUNCTION_7
0x4000805	            0x415c	                                 pop r12	       193	resolve-undo.c	FUNCTION_7
0x4000807	            0xf3c3	                                     ret	       193	resolve-undo.c	FUNCTION_7
resolve_undo_write	functions,1:IF,0:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:CALL,0	107
0x40000f0	            0x4157	                                push r15	        32	resolve-undo.c	FUNCTION_2
0x40000f2	            0x4156	                                push r14	        32	resolve-undo.c	FUNCTION_2
0x40000f4	            0x4155	                                push r13	        32	resolve-undo.c	FUNCTION_2
0x40000f6	            0x4154	                                push r12	        32	resolve-undo.c	FUNCTION_2
0x40000f8	              0x55	                                push rbp	        32	resolve-undo.c	FUNCTION_2
0x40000f9	              0x53	                                push rbx	        32	resolve-undo.c	FUNCTION_2
0x40000fa	        0x4883ec08	                              sub rsp, 8	        32	resolve-undo.c	FUNCTION_2
0x40000fe	          0x4c8b2e	                    mov r13, qword [rsi]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000101	          0x4d85ed	                           test r13, r13	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000104	     0xf84db000000	                            je 0x40001e5	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400010a	          0x8b4608	                mov eax, dword [rsi + 8]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400010d	          0x4989f6	                            mov r14, rsi	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000110	          0x4889fd	                            mov rbp, rdi	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000113	        0x48c1e004	                              shl rax, 4	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000117	          0x4c01e8	                            add rax, r13	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400011a	          0x4939c5	                            cmp r13, rax	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400011d	     0xf83c2000000	                           jae 0x40001e5	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000123	       0xf1f440000	                   nop dword [rax + rax]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x4000128	        0x4d8b6508	                mov r12, qword [r13 + 8]	        35	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x400012c	          0x4d85e4	                           test r12, r12	        38	resolve-undo.c	FUNCTION_2	FUNCTION_1	IF_1
0x400012f	     0xf8496000000	                            je 0x40001cb	        38	resolve-undo.c	FUNCTION_2	FUNCTION_1	IF_1
0x4000135	        0x498b5d00	                    mov rbx, qword [r13]	        40	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_1
0x4000139	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_27	CALL_2
0x400013c	      0xe800000000	                          call 0x4000141	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000141	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000144	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000147	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_27	CALL_2
0x400014a	      0xe800000000	                          call 0x400014f	       279	strbuf.h	FUNCTION_27	CALL_2
0x400014f	        0x488b4500	                    mov rax, qword [rbp]	       279	strbuf.h	FUNCTION_27	CALL_2
0x4000153	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000156	     0xf859c000000	                           jne 0x40001f8	       141	strbuf.h	FUNCTION_24
0x400015c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000161	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000164	      0xe800000000	                          call 0x4000169	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000169	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x400016d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000171	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x4000175	      0x4d8d7c240c	                    lea r15, [r12 + 0xc]	       229	strbuf.h	FUNCTION_26
0x400017a	          0x4c89e3	                            mov rbx, r12	       229	strbuf.h	FUNCTION_26
0x400017d	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000181	        0xc6041000	                 mov byte [rax + rdx], 0	       229	strbuf.h	FUNCTION_26
0x4000185	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_26
0x4000189	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_26
0x400018d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x4000191	            0x8b13	                    mov edx, dword [rbx]	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x4000193	            0x31c9	                            xor ecx, ecx	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x4000195	            0x31c0	                            xor eax, eax	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x4000197	      0xbe00000000	                              mov esi, 0	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x400019c	          0x4889ef	                            mov rdi, rbp	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x400019f	        0x4883c304	                              add rbx, 4	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001a3	      0xe800000000	                          call 0x40001a8	        43	resolve-undo.c	FUNCTION_2	FUNCTION_1	CALL_3
0x40001a8	          0x4939df	                            cmp r15, rbx	        42	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_1
0x40001ab	            0x75e4	                           jne 0x4000191	        42	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_1
0x40001ad	        0x418b0c24	                    mov ecx, dword [r12]	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001b1	            0x85c9	                           test ecx, ecx	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001b3	     0xf859f000000	                           jne 0x4000258	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001b9	      0x418b542404	                mov edx, dword [r12 + 4]	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001be	            0x85d2	                           test edx, edx	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c0	            0x756e	                           jne 0x4000230	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c2	      0x418b442408	                mov eax, dword [r12 + 8]	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c7	            0x85c0	                           test eax, eax	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001c9	            0x7545	                           jne 0x4000210	        45	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	IF_2
0x40001cb	        0x4983c510	                           add r13, 0x10	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001cf	            0x7414	                            je 0x40001e5	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d1	        0x418b4608	                mov eax, dword [r14 + 8]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d5	        0x48c1e004	                              shl rax, 4	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001d9	          0x490306	                    add rax, qword [r14]	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001dc	          0x4939c5	                            cmp r13, rax	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001df	     0xf8243ffffff	                            jb 0x4000128	        34	resolve-undo.c	FUNCTION_2	FUNCTION_1
0x40001e5	        0x4883c408	                              add rsp, 8	        50	resolve-undo.c	FUNCTION_2
0x40001e9	              0x5b	                                 pop rbx	        50	resolve-undo.c	FUNCTION_2
0x40001ea	              0x5d	                                 pop rbp	        50	resolve-undo.c	FUNCTION_2
0x40001eb	            0x415c	                                 pop r12	        50	resolve-undo.c	FUNCTION_2
0x40001ed	            0x415d	                                 pop r13	        50	resolve-undo.c	FUNCTION_2
0x40001ef	            0x415e	                                 pop r14	        50	resolve-undo.c	FUNCTION_2
0x40001f1	            0x415f	                                 pop r15	        50	resolve-undo.c	FUNCTION_2
0x40001f3	              0xc3	                                     ret	        50	resolve-undo.c	FUNCTION_2
0x40001f4	         0xf1f4000	                         nop dword [rax]	        50	resolve-undo.c	FUNCTION_2
0x40001f8	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_24
0x40001fc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000200	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000203	     0xf8564ffffff	                           jne 0x400016d	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000209	      0xe94effffff	                           jmp 0x400015c	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x400020e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000210	    0x488b05000000	            mov rax, qword [0x04000217] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000217	      0x498d742434	                   lea rsi, [r12 + 0x34]	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400021c	          0x4889ef	                            mov rdi, rbp	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400021f	        0x488b4058	            mov rax, qword [rax + 0x58] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000223	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000227	      0xe800000000	                          call 0x400022c	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400022c	            0xeb9d	                           jmp 0x40001cb	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400022e	            0x6690	                                     nop	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000230	    0x488b05000000	            mov rax, qword [0x04000237] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000237	      0x498d742420	                   lea rsi, [r12 + 0x20]	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400023c	          0x4889ef	                            mov rdi, rbp	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400023f	        0x488b4058	            mov rax, qword [rax + 0x58] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000243	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000247	      0xe800000000	                          call 0x400024c	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400024c	      0xe971ffffff	                           jmp 0x40001c2	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000251	     0xf1f80000000	                         nop dword [rax]	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000258	    0x488b05000000	            mov rax, qword [0x0400025f] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400025f	          0x4c89fe	                            mov rsi, r15	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000262	          0x4889ef	                            mov rdi, rbp	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000265	        0x488b4058	            mov rax, qword [rax + 0x58] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000269	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x400026d	      0xe800000000	                          call 0x4000272	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
0x4000272	      0xe942ffffff	                           jmp 0x40001b9	        47	resolve-undo.c	FUNCTION_2	FUNCTION_1	FOR_2	CALL_4
record_resolve_undo	functions,0:IF,3:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:CALL,5	50
0x4000040	            0x4154	                                push r12	         8	resolve-undo.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	         8	resolve-undo.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	         8	resolve-undo.c	FUNCTION_1
0x4000044	          0x8b5e38	            mov ebx, dword [rsi + 0x38] 	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x4000047	    0x81e300300000	                         and ebx, 0x3000	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x400004d	          0xc1eb0c	                            shr ebx, 0xc	        12	resolve-undo.c	FUNCTION_1	CALL_1
0x4000050	            0x85db	                           test ebx, ebx	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000052	            0x7452	                            je 0x40000a6	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000054	          0x4989fc	                            mov r12, rdi	        14	resolve-undo.c	FUNCTION_1	IF_1
0x4000057	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	        17	resolve-undo.c	FUNCTION_1	IF_2
0x400005b	          0x4889f5	                            mov rbp, rsi	        17	resolve-undo.c	FUNCTION_1	IF_2
0x400005e	          0x4885ff	                           test rdi, rdi	        17	resolve-undo.c	FUNCTION_1	IF_2
0x4000061	            0x744d	                            je 0x40000b0	        17	resolve-undo.c	FUNCTION_1	IF_2
0x4000063	        0x488d7558	                   lea rsi, [rbp + 0x58]	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x4000067	      0xe800000000	                          call 0x400006c	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x400006c	          0x4989c4	                            mov r12, rax	        23	resolve-undo.c	FUNCTION_1	CALL_3
0x400006f	        0x488b4008	                mov rax, qword [rax + 8]	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000073	          0x4885c0	                           test rax, rax	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000076	            0x7458	                            je 0x40000d0	        24	resolve-undo.c	FUNCTION_1	IF_3
0x4000078	          0x83eb01	                              sub ebx, 1	        27	resolve-undo.c	FUNCTION_1	CALL_5
0x400007b	        0x488b7d44	            mov rdi, qword [rbp + 0x44] 	        53	string3.h	FUNCTION_8	CALL_3
0x400007f	          0x4863db	                         movsxd rbx, ebx	        53	string3.h	FUNCTION_8	CALL_3
0x4000082	        0x488d149b	                  lea rdx, [rbx + rbx*4]	        53	string3.h	FUNCTION_8	CALL_3
0x4000086	        0x488d3490	                  lea rsi, [rax + rdx*4]	        53	string3.h	FUNCTION_8	CALL_3
0x400008a	        0x48897e0c	              mov qword [rsi + 0xc], rdi	        53	string3.h	FUNCTION_8	CALL_3
0x400008e	        0x488d560c	                    lea rdx, [rsi + 0xc]	        53	string3.h	FUNCTION_8	CALL_3
0x4000092	        0x488b754c	            mov rsi, qword [rbp + 0x4c] 	        53	string3.h	FUNCTION_8	CALL_3
0x4000096	        0x48897208	                mov qword [rdx + 8], rsi	        53	string3.h	FUNCTION_8	CALL_3
0x400009a	          0x8b4d54	            mov ecx, dword [rbp + 0x54] 	        53	string3.h	FUNCTION_8	CALL_3
0x400009d	          0x894a10	             mov dword [rdx + 0x10], ecx	        53	string3.h	FUNCTION_8	CALL_3
0x40000a0	          0x8b5534	            mov edx, dword [rbp + 0x34] 	        28	resolve-undo.c	FUNCTION_1
0x40000a3	          0x891498	            mov dword [rax + rbx*4], edx	        28	resolve-undo.c	FUNCTION_1
0x40000a6	              0x5b	                                 pop rbx	        29	resolve-undo.c	FUNCTION_1
0x40000a7	              0x5d	                                 pop rbp	        29	resolve-undo.c	FUNCTION_1
0x40000a8	            0x415c	                                 pop r12	        29	resolve-undo.c	FUNCTION_1
0x40000aa	              0xc3	                                     ret	        29	resolve-undo.c	FUNCTION_1
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	        29	resolve-undo.c	FUNCTION_1
0x40000b0	      0xbf01000000	                              mov edi, 1	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000b5	      0xbe20000000	                           mov esi, 0x20	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000ba	      0xe800000000	                          call 0x40000bf	        18	resolve-undo.c	FUNCTION_1	IF_2	CALL_2
0x40000bf	        0x80481001	                 or byte [rax + 0x10], 1	        19	resolve-undo.c	FUNCTION_1	IF_2
0x40000c3	          0x4889c7	                            mov rdi, rax	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000c6	      0x4989442418	             mov qword [r12 + 0x18], rax	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000cb	            0xeb96	                           jmp 0x4000063	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000cd	           0xf1f00	                         nop dword [rax]	        20	resolve-undo.c	FUNCTION_1	IF_2
0x40000d0	      0xbe48000000	                           mov esi, 0x48	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000d5	      0xbf01000000	                              mov edi, 1	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000da	      0xe800000000	                          call 0x40000df	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000df	      0x4989442408	                mov qword [r12 + 8], rax	        25	resolve-undo.c	FUNCTION_1	CALL_4
0x40000e4	            0xeb92	                           jmp 0x4000078	        25	resolve-undo.c	FUNCTION_1	CALL_4
resolve_undo_clear_index	functions,0:IF,1:DO,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:CALL,2	18
0x4000450	              0x55	                                push rbp	       107	resolve-undo.c	FUNCTION_4
0x4000451	              0x53	                                push rbx	       107	resolve-undo.c	FUNCTION_4
0x4000452	        0x4883ec08	                              sub rsp, 8	       107	resolve-undo.c	FUNCTION_4
0x4000456	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       108	resolve-undo.c	FUNCTION_4
0x400045a	          0x4885ed	                           test rbp, rbp	       109	resolve-undo.c	FUNCTION_4	IF_1
0x400045d	            0x7424	                            je 0x4000483	       109	resolve-undo.c	FUNCTION_4	IF_1
0x400045f	          0x4889fb	                            mov rbx, rdi	       109	resolve-undo.c	FUNCTION_4	IF_1
0x4000462	      0xbe01000000	                              mov esi, 1	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x4000467	          0x4889ef	                            mov rdi, rbp	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x400046a	      0xe800000000	                          call 0x400046f	       111	resolve-undo.c	FUNCTION_4	CALL_1
0x400046f	          0x4889ef	                            mov rdi, rbp	       112	resolve-undo.c	FUNCTION_4	CALL_2
0x4000472	      0xe800000000	                          call 0x4000477	       112	resolve-undo.c	FUNCTION_4	CALL_2
0x4000477	        0x834b1410	             or dword [rbx + 0x14], 0x10	       114	resolve-undo.c	FUNCTION_4
0x400047b	    0x48c743180000	               mov qword [rbx + 0x18], 0	       113	resolve-undo.c	FUNCTION_4
0x4000483	        0x4883c408	                              add rsp, 8	       115	resolve-undo.c	FUNCTION_4
0x4000487	              0x5b	                                 pop rbx	       115	resolve-undo.c	FUNCTION_4
0x4000488	              0x5d	                                 pop rbp	       115	resolve-undo.c	FUNCTION_4
0x4000489	              0xc3	                                     ret	       115	resolve-undo.c	FUNCTION_4
resolve_undo_read	functions,0:IF,6:DO,0:SWITCH,0:ELSE,0:WHILE,1:FOR,2:CALL,8	127
0x4000280	            0x4157	                                push r15	        53	resolve-undo.c	FUNCTION_3
0x4000282	            0x4156	                                push r14	        53	resolve-undo.c	FUNCTION_3
0x4000284	            0x4155	                                push r13	        53	resolve-undo.c	FUNCTION_3
0x4000286	            0x4154	                                push r12	        53	resolve-undo.c	FUNCTION_3
0x4000288	          0x4989f4	                            mov r12, rsi	        53	resolve-undo.c	FUNCTION_3
0x400028b	              0x55	                                push rbp	        53	resolve-undo.c	FUNCTION_3
0x400028c	              0x53	                                push rbx	        53	resolve-undo.c	FUNCTION_3
0x400028d	      0xbe20000000	                           mov esi, 0x20	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x4000292	          0x4889fb	                            mov rbx, rdi	        53	resolve-undo.c	FUNCTION_3
0x4000295	      0xbf01000000	                              mov edi, 1	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x400029a	        0x4883ec28	                           sub rsp, 0x28	        53	resolve-undo.c	FUNCTION_3
0x400029e	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	resolve-undo.c	FUNCTION_3
0x40002a7	      0x4889442418	             mov qword [rsp + 0x18], rax	        53	resolve-undo.c	FUNCTION_3
0x40002ac	            0x31c0	                            xor eax, eax	        53	resolve-undo.c	FUNCTION_3
0x40002ae	    0x488b05000000	            mov rax, qword [0x040002b5] 	        58	resolve-undo.c	FUNCTION_3
0x40002b5	        0x488b4058	            mov rax, qword [rax + 0x58] 	        58	resolve-undo.c	FUNCTION_3
0x40002b9	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	        58	resolve-undo.c	FUNCTION_3
0x40002bd	      0xe800000000	                          call 0x40002c2	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x40002c2	        0x80481001	                 or byte [rax + 0x10], 1	        61	resolve-undo.c	FUNCTION_3
0x40002c6	      0x4889442408	                mov qword [rsp + 8], rax	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x40002cb	          0x4589ed	                          mov r13d, r13d	        60	resolve-undo.c	FUNCTION_3	CALL_1
0x40002ce	          0x4d85e4	                           test r12, r12	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002d1	     0xf846c010000	                            je 0x4000443	        63	resolve-undo.c	FUNCTION_3	WHILE_1
0x40002d7	          0x4889df	                            mov rdi, rbx	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x40002da	      0xe800000000	                          call 0x40002df	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x40002df	        0x488d6801	                      lea rbp, [rax + 1]	        67	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_2
0x40002e3	          0x4939ec	                            cmp r12, rbp	        68	resolve-undo.c	FUNCTION_3	WHILE_1	IF_1
0x40002e6	     0xf86fc000000	                           jbe 0x40003e8	        68	resolve-undo.c	FUNCTION_3	WHILE_1	IF_1
0x40002ec	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002f1	          0x4889de	                            mov rsi, rbx	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002f4	      0xe800000000	                          call 0x40002f9	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x40002f9	        0x4c8b7008	                mov r14, qword [rax + 8]	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x40002fd	          0x4989c7	                            mov r15, rax	        70	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_3
0x4000300	          0x4d85f6	                           test r14, r14	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x4000303	     0xf841f010000	                            je 0x4000428	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x4000309	        0x498d460c	                    lea rax, [r14 + 0xc]	        71	resolve-undo.c	FUNCTION_3	WHILE_1	IF_2
0x400030d	          0x4929ec	                            sub r12, rbp	        74	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000310	          0x4d89f7	                            mov r15, r14	        74	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000313	          0x4801dd	                            add rbp, rbx	        75	resolve-undo.c	FUNCTION_3	WHILE_1
0x4000316	        0x48890424	                    mov qword [rsp], rax	        75	resolve-undo.c	FUNCTION_3	WHILE_1
0x400031a	      0x488d742410	                   lea rsi, [rsp + 0x10]	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x400031f	      0xba08000000	                              mov edx, 8	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x4000324	          0x4889ef	                            mov rdi, rbp	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x4000327	      0xe800000000	                          call 0x400032c	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x400032c	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000331	          0x418907	                    mov dword [r15], eax	        78	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	CALL_5
0x4000334	          0x4839eb	                            cmp rbx, rbp	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000337	     0xf84ab000000	                            je 0x40003e8	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x400033d	          0x4885db	                           test rbx, rbx	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000340	     0xf84a2000000	                            je 0x40003e8	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000346	          0x803b00	                       cmp byte [rbx], 0	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x4000349	     0xf8599000000	                           jne 0x40003e8	        79	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_3
0x400034f	        0x4883c301	                              add rbx, 1	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000353	          0x4889d8	                            mov rax, rbx	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000356	          0x4829e8	                            sub rax, rbp	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000359	          0x4939c4	                            cmp r12, rax	        82	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_4
0x400035c	     0xf8686000000	                           jbe 0x40003e8	        82	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1	IF_4
0x4000362	          0x4929c4	                            sub r12, rax	        84	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000365	        0x4983c704	                              add r15, 4	        84	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000369	        0x4c3b3c24	                    cmp r15, qword [rsp]	        77	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400036d	            0x7409	                            je 0x4000378	        77	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x400036f	          0x4889dd	                            mov rbp, rbx	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000372	            0xeba6	                           jmp 0x400031a	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000374	         0xf1f4000	                         nop dword [rax]	        81	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_1
0x4000378	          0x418b0e	                    mov ecx, dword [r14]	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400037b	            0x85c9	                           test ecx, ecx	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400037d	            0x7419	                            je 0x4000398	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400037f	          0x4d39ec	                            cmp r12, r13	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x4000382	            0x7264	                            jb 0x40003e8	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x4000384	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_8	CALL_3
0x4000387	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_8	CALL_3
0x400038a	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_8	CALL_3
0x400038d	          0x4d29ec	                            sub r12, r13	        94	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x4000390	          0x4c01eb	                            add rbx, r13	        95	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x4000393	      0xe800000000	                          call 0x4000398	        53	string3.h	FUNCTION_8	CALL_3
0x4000398	        0x418b5604	                mov edx, dword [r14 + 4]	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400039c	            0x85d2	                           test edx, edx	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x400039e	            0x741a	                            je 0x40003ba	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x40003a0	          0x4d39ec	                            cmp r12, r13	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x40003a3	            0x7243	                            jb 0x40003e8	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x40003a5	        0x498d7e20	                   lea rdi, [r14 + 0x20]	        53	string3.h	FUNCTION_8	CALL_3
0x40003a9	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_8	CALL_3
0x40003ac	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_8	CALL_3
0x40003af	          0x4d29ec	                            sub r12, r13	        94	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x40003b2	          0x4c01eb	                            add rbx, r13	        95	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x40003b5	      0xe800000000	                          call 0x40003ba	        53	string3.h	FUNCTION_8	CALL_3
0x40003ba	        0x418b4608	                mov eax, dword [r14 + 8]	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x40003be	            0x85c0	                           test eax, eax	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x40003c0	     0xf8408ffffff	                            je 0x40002ce	        89	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_5
0x40003c6	          0x4d39ec	                            cmp r12, r13	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x40003c9	            0x721d	                            jb 0x40003e8	        91	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2	IF_6
0x40003cb	        0x498d7e34	                   lea rdi, [r14 + 0x34]	        53	string3.h	FUNCTION_8	CALL_3
0x40003cf	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_8	CALL_3
0x40003d2	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_8	CALL_3
0x40003d5	          0x4d29ec	                            sub r12, r13	        94	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x40003d8	          0x4c01eb	                            add rbx, r13	        95	resolve-undo.c	FUNCTION_3	WHILE_1	FOR_2
0x40003db	      0xe800000000	                          call 0x40003e0	        53	string3.h	FUNCTION_8	CALL_3
0x40003e0	      0xe9e9feffff	                           jmp 0x40002ce	        53	string3.h	FUNCTION_8	CALL_3
0x40003e5	           0xf1f00	                         nop dword [rax]	        53	string3.h	FUNCTION_8	CALL_3
0x40003e8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x40003ed	      0xbe01000000	                              mov esi, 1	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x40003f2	      0xe800000000	                          call 0x40003f7	       101	resolve-undo.c	FUNCTION_3	CALL_7
0x40003f7	      0xbf00000000	                              mov edi, 0	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x40003fc	            0x31c0	                            xor eax, eax	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x40003fe	      0xe800000000	                          call 0x4000403	       102	resolve-undo.c	FUNCTION_3	CALL_8
0x4000403	            0x31c0	                            xor eax, eax	       103	resolve-undo.c	FUNCTION_3
0x4000405	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	resolve-undo.c	FUNCTION_3
0x400040a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	resolve-undo.c	FUNCTION_3
0x4000413	            0x7535	                           jne 0x400044a	       104	resolve-undo.c	FUNCTION_3
0x4000415	        0x4883c428	                           add rsp, 0x28	       104	resolve-undo.c	FUNCTION_3
0x4000419	              0x5b	                                 pop rbx	       104	resolve-undo.c	FUNCTION_3
0x400041a	              0x5d	                                 pop rbp	       104	resolve-undo.c	FUNCTION_3
0x400041b	            0x415c	                                 pop r12	       104	resolve-undo.c	FUNCTION_3
0x400041d	            0x415d	                                 pop r13	       104	resolve-undo.c	FUNCTION_3
0x400041f	            0x415e	                                 pop r14	       104	resolve-undo.c	FUNCTION_3
0x4000421	            0x415f	                                 pop r15	       104	resolve-undo.c	FUNCTION_3
0x4000423	              0xc3	                                     ret	       104	resolve-undo.c	FUNCTION_3
0x4000424	         0xf1f4000	                         nop dword [rax]	       104	resolve-undo.c	FUNCTION_3
0x4000428	      0xbe48000000	                           mov esi, 0x48	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x400042d	      0xbf01000000	                              mov edi, 1	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x4000432	      0xe800000000	                          call 0x4000437	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x4000437	          0x4989c6	                            mov r14, rax	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x400043a	        0x49894708	                mov qword [r15 + 8], rax	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x400043e	      0xe9c6feffff	                           jmp 0x4000309	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x4000443	      0x488b442408	                mov rax, qword [rsp + 8]	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x4000448	            0xebbb	                           jmp 0x4000405	        72	resolve-undo.c	FUNCTION_3	WHILE_1	CALL_4
0x400044a	      0xe800000000	                          call 0x400044f	       104	resolve-undo.c	FUNCTION_3
