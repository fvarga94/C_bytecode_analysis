outf	functions,0:SWITCH,0:IF,1:FOR,1:WHILE,0:DO,0:CALL,1:ELSE,0	33
0x4000040	            0x85d2	                           test edx, edx	        20	rerere.c	FUNCTION_1	FOR_1
0x4000042	            0x7e55	                           jle 0x4000099	        20	rerere.c	FUNCTION_1	FOR_1
0x4000044	          0x8d42ff	                      lea eax, [rdx - 1]	        20	rerere.c	FUNCTION_1	FOR_1
0x4000047	              0x55	                                push rbp	        18	rerere.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        18	rerere.c	FUNCTION_1
0x4000049	        0x488d5e08	                      lea rbx, [rsi + 8]	        18	rerere.c	FUNCTION_1
0x400004d	        0x48c1e004	                              shl rax, 4	        18	rerere.c	FUNCTION_1
0x4000051	        0x4883ec08	                              sub rsp, 8	        18	rerere.c	FUNCTION_1
0x4000055	      0x488d6c0618	            lea rbp, [rsi + rax + 0x18] 	        18	rerere.c	FUNCTION_1
0x400005a	            0xeb0d	                           jmp 0x4000069	        18	rerere.c	FUNCTION_1
0x400005c	         0xf1f4000	                         nop dword [rax]	        18	rerere.c	FUNCTION_1
0x4000060	        0x4883c310	                           add rbx, 0x10	        18	rerere.c	FUNCTION_1
0x4000064	          0x4839eb	                            cmp rbx, rbp	        20	rerere.c	FUNCTION_1	FOR_1
0x4000067	            0x7427	                            je 0x4000090	        20	rerere.c	FUNCTION_1	FOR_1
0x4000069	        0x488b73f8	                mov rsi, qword [rbx - 8]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400006d	          0x488b13	                    mov rdx, qword [rbx]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000070	      0xbf01000000	                              mov edi, 1	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000075	      0xe800000000	                          call 0x400007a	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007a	          0x4885c0	                           test rax, rax	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007d	            0x79e1	                           jns 0x4000060	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007f	        0x4883c408	                              add rsp, 8	        24	rerere.c	FUNCTION_1
0x4000083	      0xb8ffffffff	                     mov eax, 0xffffffff	        22	rerere.c	FUNCTION_1	FOR_1	IF_1
0x4000088	              0x5b	                                 pop rbx	        24	rerere.c	FUNCTION_1
0x4000089	              0x5d	                                 pop rbp	        24	rerere.c	FUNCTION_1
0x400008a	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
0x400008b	       0xf1f440000	                   nop dword [rax + rax]	        24	rerere.c	FUNCTION_1
0x4000090	        0x4883c408	                              add rsp, 8	        24	rerere.c	FUNCTION_1
0x4000094	            0x31c0	                            xor eax, eax	        23	rerere.c	FUNCTION_1
0x4000096	              0x5b	                                 pop rbx	        24	rerere.c	FUNCTION_1
0x4000097	              0x5d	                                 pop rbp	        24	rerere.c	FUNCTION_1
0x4000098	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
0x4000099	            0x31c0	                            xor eax, eax	        23	rerere.c	FUNCTION_1
0x400009b	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
cmd_rerere	functions,0:SWITCH,0:IF,14:FOR,3:WHILE,0:DO,0:CALL,26:ELSE,6	247
0x40000a0	            0x4157	                                push r15	        53	rerere.c	FUNCTION_3
0x40000a2	            0x4156	                                push r14	        53	rerere.c	FUNCTION_3
0x40000a4	          0x4189fa	                           mov r10d, edi	        53	rerere.c	FUNCTION_3
0x40000a7	            0x4155	                                push r13	        53	rerere.c	FUNCTION_3
0x40000a9	            0x4154	                                push r12	        53	rerere.c	FUNCTION_3
0x40000ab	      0xb910000000	                           mov ecx, 0x10	        57	rerere.c	FUNCTION_3
0x40000b0	              0x55	                                push rbp	        53	rerere.c	FUNCTION_3
0x40000b1	              0x53	                                push rbx	        53	rerere.c	FUNCTION_3
0x40000b2	          0x4531c9	                            xor r9d, r9d	        63	rerere.c	FUNCTION_3	CALL_4
0x40000b5	    0x41b800000000	                              mov r8d, 0	        63	rerere.c	FUNCTION_3	CALL_4
0x40000bb	          0x4889f3	                            mov rbx, rsi	        53	rerere.c	FUNCTION_3
0x40000be	          0x4889d5	                            mov rbp, rdx	        53	rerere.c	FUNCTION_3
0x40000c1	    0x4881ec480100	                          sub rsp, 0x148	        53	rerere.c	FUNCTION_3
0x40000c8	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	rerere.c	FUNCTION_3
0x40000d1	    0x488984243801	            mov qword [rsp + 0x138], rax	        53	rerere.c	FUNCTION_3
0x40000d9	            0x31c0	                            xor eax, eax	        53	rerere.c	FUNCTION_3
0x40000db	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        57	rerere.c	FUNCTION_3
0x40000e3	      0x804c247001	                 or byte [rsp + 0x70], 1	        54	rerere.c	FUNCTION_3
0x40000e8	    0x48c744246000	               mov qword [rsp + 0x60], 0	        54	rerere.c	FUNCTION_3
0x40000f1	    0xc74424680000	               mov dword [rsp + 0x68], 0	        54	rerere.c	FUNCTION_3
0x40000f9	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	        54	rerere.c	FUNCTION_3
0x4000101	          0xf348ab	              rep stosq qword [rdi], rax	        57	rerere.c	FUNCTION_3
0x4000104	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	        63	rerere.c	FUNCTION_3	CALL_4
0x400010c	      0x488d44240c	                    lea rax, [rsp + 0xc]	        57	rerere.c	FUNCTION_3
0x4000111	          0x4489d7	                           mov edi, r10d	        63	rerere.c	FUNCTION_3	CALL_4
0x4000114	    0x48c744247800	               mov qword [rsp + 0x78], 0	        54	rerere.c	FUNCTION_3
0x400011d	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	        55	rerere.c	FUNCTION_3
0x4000125	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	        57	rerere.c	FUNCTION_3
0x4000130	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        57	rerere.c	FUNCTION_3
0x400013c	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        57	rerere.c	FUNCTION_3
0x4000144	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        57	rerere.c	FUNCTION_3
0x4000150	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	        57	rerere.c	FUNCTION_3
0x400015b	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	        57	rerere.c	FUNCTION_3
0x4000167	      0xe800000000	                          call 0x400016c	        63	rerere.c	FUNCTION_3	CALL_4
0x400016c	            0x31f6	                            xor esi, esi	        65	rerere.c	FUNCTION_3	CALL_5
0x400016e	      0xbf00000000	                              mov edi, 0	        65	rerere.c	FUNCTION_3	CALL_5
0x4000173	          0x4189c4	                           mov r12d, eax	        63	rerere.c	FUNCTION_3	CALL_4
0x4000176	      0xe800000000	                          call 0x400017b	        65	rerere.c	FUNCTION_3	CALL_5
0x400017b	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	        67	rerere.c	FUNCTION_3	IF_1
0x400017f	          0x83f901	                              cmp ecx, 1	        67	rerere.c	FUNCTION_3	IF_1
0x4000182	     0xf8450020000	                            je 0x40003d8	        67	rerere.c	FUNCTION_3	IF_1
0x4000188	            0x19d2	                            sbb edx, edx	        69	rerere.c	FUNCTION_3	IF_2
0x400018a	          0x83e202	                              and edx, 2	        69	rerere.c	FUNCTION_3	IF_2
0x400018d	          0x83c204	                              add edx, 4	        69	rerere.c	FUNCTION_3	IF_2
0x4000190	          0x83f901	                              cmp ecx, 1	        69	rerere.c	FUNCTION_3	IF_2
0x4000193	            0x19ff	                            sbb edi, edi	        69	rerere.c	FUNCTION_3	IF_2
0x4000195	          0x83e702	                              and edi, 2	        69	rerere.c	FUNCTION_3	IF_2
0x4000198	          0x4585e4	                         test r12d, r12d	        72	rerere.c	FUNCTION_3	IF_3
0x400019b	     0xf8eb7020000	                           jle 0x4000458	        72	rerere.c	FUNCTION_3	IF_3
0x40001a1	          0x4c8b03	                     mov r8, qword [rbx]	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a4	      0xbf00000000	                              mov edi, 0	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a9	      0xb907000000	                              mov ecx, 7	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001ae	          0x4c89c6	                             mov rsi, r8	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b3	            0x755b	                           jne 0x4000210	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b5	        0x4183fc01	                             cmp r12d, 1	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001b9	     0xf84a9020000	                            je 0x4000468	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001bf	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001c7	        0x4c8d4308	                       lea r8, [rbx + 8]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001cb	          0x4889e9	                            mov rcx, rbp	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001ce	      0xba01000000	                              mov edx, 1	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001d3	            0x31f6	                            xor esi, esi	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001d5	      0xe800000000	                          call 0x40001da	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001da	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001e2	      0xe800000000	                          call 0x40001e7	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001e7	    0x488b94243801	           mov rdx, qword [rsp + 0x138] 	       117	rerere.c	FUNCTION_3
0x40001ef	    0x644833142528	                xor rdx, qword fs:[0x28]	       117	rerere.c	FUNCTION_3
0x40001f8	     0xf85da020000	                           jne 0x40004d8	       117	rerere.c	FUNCTION_3
0x40001fe	    0x4881c4480100	                          add rsp, 0x148	       117	rerere.c	FUNCTION_3
0x4000205	              0x5b	                                 pop rbx	       117	rerere.c	FUNCTION_3
0x4000206	              0x5d	                                 pop rbp	       117	rerere.c	FUNCTION_3
0x4000207	            0x415c	                                 pop r12	       117	rerere.c	FUNCTION_3
0x4000209	            0x415d	                                 pop r13	       117	rerere.c	FUNCTION_3
0x400020b	            0x415e	                                 pop r14	       117	rerere.c	FUNCTION_3
0x400020d	            0x415f	                                 pop r15	       117	rerere.c	FUNCTION_3
0x400020f	              0xc3	                                     ret	       117	rerere.c	FUNCTION_3
0x4000210	      0xbf00000000	                              mov edi, 0	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000215	      0xb906000000	                              mov ecx, 6	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400021a	          0x4c89c6	                             mov rsi, r8	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400021d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400021f	     0xf841b020000	                            je 0x4000440	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000225	        0x41803867	                     cmp byte [r8], 0x67	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000229	            0x7535	                           jne 0x4000260	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x400022b	      0x4180780163	                 cmp byte [r8 + 1], 0x63	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000230	            0x752e	                           jne 0x4000260	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000232	      0x4180780200	                    cmp byte [r8 + 2], 0	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000237	            0x7527	                           jne 0x4000260	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000239	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x400023e	          0x4c89ff	                            mov rdi, r15	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000241	      0xe800000000	                          call 0x4000246	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000246	      0xbe01000000	                              mov esi, 1	       115	rerere.c	FUNCTION_3	CALL_26
0x400024b	          0x4c89ff	                            mov rdi, r15	       115	rerere.c	FUNCTION_3	CALL_26
0x400024e	      0xe800000000	                          call 0x4000253	       115	rerere.c	FUNCTION_3	CALL_26
0x4000253	            0x31c0	                            xor eax, eax	       116	rerere.c	FUNCTION_3
0x4000255	            0xeb90	                           jmp 0x40001e7	       116	rerere.c	FUNCTION_3
0x4000257	    0x660f1f840000	                    nop word [rax + rax]	       116	rerere.c	FUNCTION_3
0x4000260	      0xbf00000000	                              mov edi, 0	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000265	      0xb907000000	                              mov ecx, 7	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400026a	          0x4c89c6	                             mov rsi, r8	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400026d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400026f	     0xf847b010000	                            je 0x40003f0	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000275	      0xbf00000000	                              mov edi, 0	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x400027a	      0xb90a000000	                            mov ecx, 0xa	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x400027f	          0x4c89c6	                             mov rsi, r8	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x4000282	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x4000284	     0xf84f6010000	                            je 0x4000480	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x400028a	      0xbf00000000	                              mov edi, 0	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x400028f	      0xb905000000	                              mov ecx, 5	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000294	          0x4c89c6	                             mov rsi, r8	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000297	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000299	     0xf853e020000	                           jne 0x40004dd	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x400029f	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002a4	            0x89d6	                            mov esi, edx	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002a6	          0x4c89ff	                            mov rdi, r15	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002a9	      0xe800000000	                          call 0x40002ae	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002ae	            0x85c0	                           test eax, eax	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002b0	            0x78a1	                            js 0x4000253	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x40002b2	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002b6	            0x85c0	                           test eax, eax	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002b8	            0x748c	                            je 0x4000246	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002ba	          0x4531e4	                          xor r12d, r12d	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002bd	            0x31ed	                            xor ebp, ebp	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002bf	    0x4c8dac248000	                   lea r13, [rsp + 0x80]	        90	string3.h	FUNCTION_7	CALL_6
0x40002c7	      0xe9be000000	                           jmp 0x400038a	        90	string3.h	FUNCTION_7	CALL_6
0x40002cc	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_7	CALL_6
0x40002d0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002d5	          0x4889de	                            mov rsi, rbx	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002d8	      0xe800000000	                          call 0x40002dd	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002dd	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002df	     0xf85d6000000	                           jne 0x40003bb	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002e5	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x40002e8	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x40002eb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002f0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002f5	      0xe800000000	                          call 0x40002fa	       104	stdio2.h	CALL_16
0x40002fa	    0x488b3d000000	            mov rdi, qword [0x04000301] 	        39	rerere.c	FUNCTION_2	CALL_3
0x4000301	      0xe800000000	                          call 0x4000306	        39	rerere.c	FUNCTION_2	CALL_3
0x4000306	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_7	CALL_6
0x4000308	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_7	CALL_6
0x400030d	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_7	CALL_6
0x4000310	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_7	CALL_6
0x4000313	      0x4c8d442410	                    lea r8, [rsp + 0x10]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000318	      0x488d542440	                   lea rdx, [rsp + 0x40]	        45	rerere.c	FUNCTION_2	CALL_6
0x400031d	      0x488d742430	                   lea rsi, [rsp + 0x30]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000322	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000327	          0x4c89e9	                            mov rcx, r13	        45	rerere.c	FUNCTION_2	CALL_6
0x400032a	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_7	CALL_6
0x4000333	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_7	CALL_6
0x400033c	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_7	CALL_6
0x4000345	    0x48c784248000	               mov qword [rsp + 0x80], 3	        43	rerere.c	FUNCTION_2
0x4000351	    0x48c744241800	               mov qword [rsp + 0x18], 0	        44	rerere.c	FUNCTION_2
0x400035a	      0xe800000000	                          call 0x400035f	        45	rerere.c	FUNCTION_2	CALL_6
0x400035f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        47	rerere.c	FUNCTION_2	CALL_7
0x4000364	            0x89c3	                            mov ebx, eax	        45	rerere.c	FUNCTION_2	CALL_6
0x4000366	      0xe800000000	                          call 0x400036b	        47	rerere.c	FUNCTION_2	CALL_7
0x400036b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        48	rerere.c	FUNCTION_2	CALL_8
0x4000370	      0xe800000000	                          call 0x4000375	        48	rerere.c	FUNCTION_2	CALL_8
0x4000375	            0x85db	                           test ebx, ebx	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000377	            0x7542	                           jne 0x40003bb	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000379	          0x83c501	                              add ebp, 1	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400037c	        0x4983c410	                           add r12, 0x10	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000380	        0x396c2468	            cmp dword [rsp + 0x68], ebp 	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000384	     0xf86bcfeffff	                           jbe 0x4000246	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400038a	          0x4c89e0	                            mov rax, r12	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400038d	      0x4803442460	             add rax, qword [rsp + 0x60]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000392	      0xbe00000000	                              mov esi, 0	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000397	        0x4c8b7008	                mov r14, qword [rax + 8]	       108	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400039b	          0x488b18	                    mov rbx, qword [rax]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400039e	          0x4c89f7	                            mov rdi, r14	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x40003a1	      0xe800000000	                          call 0x40003a6	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x40003a6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003ab	          0x4889c6	                            mov rsi, rax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003ae	      0xe800000000	                          call 0x40003b3	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003b3	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003b5	     0xf8415ffffff	                            je 0x40002d0	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003bb	            0x31f6	                            xor esi, esi	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003bd	          0x4c89f7	                            mov rdi, r14	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003c0	      0xe800000000	                          call 0x40003c5	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003c5	      0xbf00000000	                              mov edi, 0	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003ca	          0x4889c6	                            mov rsi, rax	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003cd	            0x31c0	                            xor eax, eax	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003cf	      0xe800000000	                          call 0x40003d4	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003d4	         0xf1f4000	                         nop dword [rax]	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003d8	      0xba05000000	                              mov edx, 5	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x40003dd	      0xbf01000000	                              mov edi, 1	        68	rerere.c	FUNCTION_3	IF_1
0x40003e2	      0xe9b1fdffff	                           jmp 0x4000198	        68	rerere.c	FUNCTION_3	IF_1
0x40003e7	    0x660f1f840000	                    nop word [rax + rax]	        68	rerere.c	FUNCTION_3	IF_1
0x40003f0	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003f5	            0x89d6	                            mov esi, edx	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003f7	          0x4c89ff	                            mov rdi, r15	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003fa	      0xe800000000	                          call 0x40003ff	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003ff	            0x85c0	                           test eax, eax	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x4000401	     0xf884cfeffff	                            js 0x4000253	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x4000407	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400040b	            0x85c9	                           test ecx, ecx	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400040d	     0xf8433feffff	                            je 0x4000246	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000413	            0x31ed	                            xor ebp, ebp	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000415	            0x31db	                            xor ebx, ebx	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000417	    0x660f1f840000	                    nop word [rax + rax]	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000420	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        92	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000425	          0x83c301	                              add ebx, 1	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000428	        0x488b3c28	              mov rdi, qword [rax + rbp]	       104	stdio2.h	CALL_16
0x400042c	        0x4883c510	                           add rbp, 0x10	       104	stdio2.h	CALL_16
0x4000430	      0xe800000000	                          call 0x4000435	       104	stdio2.h	CALL_16
0x4000435	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000439	            0x77e5	                            ja 0x4000420	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400043b	      0xe906feffff	                           jmp 0x4000246	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000440	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000445	          0x4c89ff	                            mov rdi, r15	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000448	      0xe800000000	                          call 0x400044d	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x400044d	      0xe9f4fdffff	                           jmp 0x4000246	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000452	    0x660f1f440000	                    nop word [rax + rax]	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000458	      0xe800000000	                          call 0x400045d	        73	rerere.c	FUNCTION_3	CALL_6
0x400045d	      0xe985fdffff	                           jmp 0x40001e7	        73	rerere.c	FUNCTION_3	CALL_6
0x4000462	    0x660f1f440000	                    nop word [rax + rax]	        73	rerere.c	FUNCTION_3	CALL_6
0x4000468	      0xbf00000000	                              mov edi, 0	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x400046d	            0x31c0	                            xor eax, eax	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x400046f	      0xe800000000	                          call 0x4000474	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000474	      0xe946fdffff	                           jmp 0x40001bf	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000479	     0xf1f80000000	                         nop dword [rax]	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000480	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x4000485	          0x4c89ff	                            mov rdi, r15	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x4000488	      0xe800000000	                          call 0x400048d	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x400048d	        0x8b542468	            mov edx, dword [rsp + 0x68] 	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000491	            0x85d2	                           test edx, edx	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000493	     0xf84adfdffff	                            je 0x4000246	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000499	            0x31ed	                            xor ebp, ebp	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400049b	            0x31db	                            xor ebx, ebx	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400049d	            0xeb1a	                           jmp 0x40004b9	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400049f	              0x90	                                     nop	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40004a0	          0x488b38	                    mov rdi, qword [rax]	       104	stdio2.h	CALL_16
0x40004a3	      0xe800000000	                          call 0x40004a8	       104	stdio2.h	CALL_16
0x40004a8	          0x83c301	                              add ebx, 1	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40004ab	        0x4883c510	                           add rbp, 0x10	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40004af	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40004b3	     0xf868dfdffff	                           jbe 0x4000246	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40004b9	          0x4889e8	                            mov rax, rbp	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004bc	      0x4803442460	             add rax, qword [rsp + 0x60]	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004c1	    0x488b15000000	            mov rdx, qword [0x040004c8] 	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004c8	        0x48395008	                cmp qword [rax + 8], rdx	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004cc	            0x75d2	                           jne 0x40004a0	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004ce	    0x48c740080000	                  mov qword [rax + 8], 0	       101	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	ELSE_4
0x40004d6	            0xebd0	                           jmp 0x40004a8	       101	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	ELSE_4
0x40004d8	      0xe800000000	                          call 0x40004dd	       117	rerere.c	FUNCTION_3
0x40004dd	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       113	rerere.c	FUNCTION_3	CALL_25
0x40004e5	      0xbf00000000	                              mov edi, 0	       113	rerere.c	FUNCTION_3	CALL_25
0x40004ea	      0xe800000000	              call str.rerere_autoupdate	       113	rerere.c	FUNCTION_3	CALL_25
