check_repo_format	WHILE,0:IF,9:functions,0:SWITCH,0:ELSE,6:CALL,15:DO,0:FOR,0	134
0x40000a0	              0x55	                                push rbp	       406	setup.c	FUNCTION_17
0x40000a1	              0x53	                                push rbx	       406	setup.c	FUNCTION_17
0x40000a2	          0x4989f9	                             mov r9, rdi	       406	setup.c	FUNCTION_17
0x40000a5	          0x4989f2	                            mov r10, rsi	       406	setup.c	FUNCTION_17
0x40000a8	      0xbf00000000	                              mov edi, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000ad	      0xb91d000000	                           mov ecx, 0x1d	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000b2	        0x4883ec08	                              sub rsp, 8	       406	setup.c	FUNCTION_17
0x40000b6	          0x4c89ce	                             mov rsi, r9	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000b9	          0x4889d5	                            mov rbp, rdx	       406	setup.c	FUNCTION_17
0x40000bc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000be	          0x4d89c8	                              mov r8, r9	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000c1	           0xf92c0	                                 setb al	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000c4	           0xf97c3	                                 seta bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000c7	            0x29c3	                            sub ebx, eax	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000c9	      0xb800000000	                              mov eax, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000ce	           0xfbedb	                           movsx ebx, bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000d1	            0x85db	                           test ebx, ebx	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000d3	            0x751d	                           jne 0x40000f2	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000d5	      0xe906010000	                           jmp 0x40001e0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000da	    0x660f1f440000	                    nop word [rax + rax]	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x40000e0	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000e4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000e8	        0x413a48ff	                   cmp cl, byte [r8 - 1]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000ec	     0xf858e000000	                           jne 0x4000180	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000f2	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x40000f5	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x40000f7	            0x75e7	                           jne 0x40000e0	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x40000f9	      0xbf00000000	                              mov edi, 0	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40000fe	      0xb905000000	                              mov ecx, 5	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000103	          0x4c89c6	                             mov rsi, r8	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000106	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000108	           0xf97c3	                                 seta bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x400010b	           0xf92c0	                                 setb al	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x400010e	            0x29c3	                            sub ebx, eax	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000110	           0xfbedb	                           movsx ebx, bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000113	            0x85db	                           test ebx, ebx	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000115	            0x7459	                            je 0x4000170	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000117	      0xbf00000000	                              mov edi, 0	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x400011c	      0xb910000000	                           mov ecx, 0x10	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000121	          0x4c89c6	                             mov rsi, r8	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000124	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000126	           0xf97c3	                                 seta bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000129	           0xf92c0	                                 setb al	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x400012c	            0x29c3	                            sub ebx, eax	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x400012e	           0xfbedb	                           movsx ebx, bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000131	            0x85db	                           test ebx, ebx	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000133	     0xf84d2000000	                            je 0x400020b	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x4000139	      0xbf00000000	                              mov edi, 0	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x400013e	      0xb90d000000	                            mov ecx, 0xd	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000143	          0x4c89c6	                             mov rsi, r8	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000146	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000148	           0xf97c3	                                 seta bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x400014b	           0xf92c0	                                 setb al	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x400014e	            0x29c3	                            sub ebx, eax	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000150	           0xfbedb	                           movsx ebx, bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000153	            0x85db	                           test ebx, ebx	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x4000155	     0xf85d6000000	                           jne 0x4000231	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x400015b	          0x4d85d2	                           test r10, r10	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x400015e	     0xf84e0000000	                            je 0x4000244	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x4000164	          0x4c89d7	                            mov rdi, r10	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000167	      0xe800000000	                          call 0x400016c	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x400016c	        0x48894508	                mov qword [rbp + 8], rax	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000170	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x4000174	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x4000176	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x4000177	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x4000178	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x4000179	     0xf1f80000000	                         nop dword [rax]	       436	setup.c	FUNCTION_17
0x4000180	      0xbf00000000	                              mov edi, 0	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000185	      0xb90a000000	                            mov ecx, 0xa	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400018a	          0x4c89ce	                             mov rsi, r9	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400018d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400018f	           0xf97c3	                                 seta bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000192	           0xf92c0	                                 setb al	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000195	            0x29c3	                            sub ebx, eax	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x4000197	           0xfbedb	                           movsx ebx, bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400019a	            0x85db	                           test ebx, ebx	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x400019c	     0xf847c000000	                            je 0x400021e	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001a2	      0xbf00000000	                              mov edi, 0	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001a7	      0xb90e000000	                            mov ecx, 0xe	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001ac	          0x4c89ce	                             mov rsi, r9	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001b1	           0xf97c3	                                 seta bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001b4	           0xf92c0	                                 setb al	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001b7	            0x29c3	                            sub ebx, eax	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001b9	           0xfbedb	                           movsx ebx, bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001bc	            0x85db	                           test ebx, ebx	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001be	            0x7540	                           jne 0x4000200	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x40001c0	          0x4d85d2	                           test r10, r10	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x40001c3	            0x747f	                            je 0x4000244	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x40001c5	          0x4c89d7	                            mov rdi, r10	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x40001c8	      0xe800000000	                          call 0x40001cd	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x40001cd	        0x48894518	            mov qword [rbp + 0x18], rax 	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x40001d1	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x40001d5	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x40001d7	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x40001d8	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x40001d9	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x40001da	    0x660f1f440000	                    nop word [rax + rax]	       436	setup.c	FUNCTION_17
0x40001e0	          0x4c89d6	                            mov rsi, r10	       411	setup.c	FUNCTION_17	CALL_2
0x40001e3	          0x4c89cf	                             mov rdi, r9	       411	setup.c	FUNCTION_17	CALL_2
0x40001e6	      0xe800000000	                          call 0x40001eb	       411	setup.c	FUNCTION_17	CALL_2
0x40001eb	          0x894500	                    mov dword [rbp], eax	       411	setup.c	FUNCTION_17	CALL_2
0x40001ee	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x40001f2	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x40001f4	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x40001f5	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x40001f6	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x40001f7	    0x660f1f840000	                    nop word [rax + rax]	       436	setup.c	FUNCTION_17
0x4000200	            0x31db	                            xor ebx, ebx	       435	setup.c	FUNCTION_17
0x4000202	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x4000206	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x4000208	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x4000209	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x400020a	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
0x400020b	          0x4c89d6	                            mov rsi, r10	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x400020e	          0x4c89cf	                             mov rdi, r9	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4000211	      0xe800000000	                          call 0x4000216	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4000216	          0x894504	                mov dword [rbp + 4], eax	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4000219	      0xe952ffffff	                           jmp 0x4000170	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x400021e	          0x4c89d6	                            mov rsi, r10	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000221	          0x4c89cf	                             mov rdi, r9	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000224	      0xe800000000	                          call 0x4000229	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000229	          0x894510	            mov dword [rbp + 0x10], eax 	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x400022c	      0xe93fffffff	                           jmp 0x4000170	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000231	        0x488d7d20	                   lea rdi, [rbp + 0x20]	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000235	          0x4c89c6	                             mov rsi, r8	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000238	            0x31db	                            xor ebx, ebx	       435	setup.c	FUNCTION_17
0x400023a	      0xe800000000	                          call 0x400023f	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x400023f	      0xe92cffffff	                           jmp 0x4000170	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000244	          0x4c89cf	                             mov rdi, r9	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x4000247	      0xbbffffffff	                     mov ebx, 0xffffffff	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x400024c	      0xe800000000	                          call 0x4000251	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x4000251	      0xe91affffff	                           jmp 0x4000170	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
verify_filename	WHILE,0:IF,2:functions,0:SWITCH,0:ELSE,0:CALL,5:DO,0:FOR,0	47
0x4000750	            0x4154	                                push r12	       232	setup.c	FUNCTION_8
0x4000752	              0x55	                                push rbp	       232	setup.c	FUNCTION_8
0x4000753	              0x53	                                push rbx	       232	setup.c	FUNCTION_8
0x4000754	          0x803e2d	                    cmp byte [rsi], 0x2d	       233	setup.c	FUNCTION_8	IF_1
0x4000757	          0x4889f3	                            mov rbx, rsi	       232	setup.c	FUNCTION_8
0x400075a	            0x7475	                            je 0x40007d1	       233	setup.c	FUNCTION_8	IF_1
0x400075c	          0x4889fd	                            mov rbp, rdi	       233	setup.c	FUNCTION_8	IF_1
0x400075f	          0x4889f7	                            mov rdi, rsi	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x4000762	          0x4189d4	                           mov r12d, edx	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x4000765	      0xe800000000	                          call 0x400076a	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400076a	            0x85c0	                           test eax, eax	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400076c	            0x750a	                           jne 0x4000778	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x400076e	              0x5b	                                 pop rbx	       238	setup.c	FUNCTION_8
0x400076f	              0x5d	                                 pop rbp	       238	setup.c	FUNCTION_8
0x4000770	            0x415c	                                 pop r12	       238	setup.c	FUNCTION_8
0x4000772	              0xc3	                                     ret	       238	setup.c	FUNCTION_8
0x4000773	       0xf1f440000	                   nop dword [rax + rax]	       238	setup.c	FUNCTION_8
0x4000778	      0xbe00000000	                              mov esi, 0	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x400077d	          0x4889df	                            mov rdi, rbx	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000780	      0xe800000000	                          call 0x4000785	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000785	            0x85c0	                           test eax, eax	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000787	            0x75e5	                           jne 0x400076e	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x4000789	          0x4889de	                            mov rsi, rbx	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x400078c	          0x4889ef	                            mov rdi, rbp	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x400078f	      0xe800000000	                          call 0x4000794	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000794	            0x85c0	                           test eax, eax	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000796	            0x75d6	                           jne 0x400076e	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000798	          0x4585e4	                         test r12d, r12d	       171	setup.c	FUNCTION_6	IF_1
0x400079b	            0x743b	                            je 0x40007d8	       171	setup.c	FUNCTION_6	IF_1
0x400079d	          0x803b3a	                    cmp byte [rbx], 0x3a	       181	setup.c	FUNCTION_6	IF_2
0x40007a0	            0x750d	                           jne 0x40007af	       181	setup.c	FUNCTION_6	IF_2
0x40007a2	         0xfb64301	               movzx eax, byte [rbx + 1]	       181	setup.c	FUNCTION_6	IF_2
0x40007a6	    0xf68000000000	                      test byte [rax], 6	       181	setup.c	FUNCTION_6	IF_2
0x40007ad	            0x740b	                            je 0x40007ba	       181	setup.c	FUNCTION_6	IF_2
0x40007af	          0x4889ee	                            mov rsi, rbp	       182	setup.c	FUNCTION_6	CALL_3
0x40007b2	          0x4889df	                            mov rdi, rbx	       182	setup.c	FUNCTION_6	CALL_3
0x40007b5	      0xe800000000	                          call 0x40007ba	       182	setup.c	FUNCTION_6	CALL_3
0x40007ba	      0xbf00000000	                              mov edi, 0	       182	setup.c	FUNCTION_6	CALL_3
0x40007bf	      0xe80cfbffff	                       call sym._.part.4	       182	setup.c	FUNCTION_6	CALL_3
0x40007c4	          0x4889de	                            mov rsi, rbx	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007c7	          0x4889c7	                            mov rdi, rax	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007ca	            0x31c0	                            xor eax, eax	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007cc	      0xe800000000	                          call 0x40007d1	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007d1	      0xbf00000000	                              mov edi, 0	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007d6	            0xebe7	                           jmp 0x40007bf	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007d8	      0xbf00000000	                              mov edi, 0	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x40007dd	            0xebe0	                           jmp 0x40007bf	       172	setup.c	FUNCTION_6	IF_1	CALL_2
git_config_perm	WHILE,0:IF,6:functions,0:SWITCH,1:ELSE,0:CALL,9:DO,0:FOR,0	94
0x4002c90	            0x4155	                                push r13	      1129	setup.c	FUNCTION_32
0x4002c92	            0x4154	                                push r12	      1129	setup.c	FUNCTION_32
0x4002c94	              0x55	                                push rbp	      1129	setup.c	FUNCTION_32
0x4002c95	              0x53	                                push rbx	      1129	setup.c	FUNCTION_32
0x4002c96	        0x4883ec18	                           sub rsp, 0x18	      1129	setup.c	FUNCTION_32
0x4002c9a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1129	setup.c	FUNCTION_32
0x4002ca3	      0x4889442408	                mov qword [rsp + 8], rax	      1129	setup.c	FUNCTION_32
0x4002ca8	            0x31c0	                            xor eax, eax	      1129	setup.c	FUNCTION_32
0x4002caa	          0x4885f6	                           test rsi, rsi	      1133	setup.c	FUNCTION_32	IF_1
0x4002cad	            0x7425	                            je 0x4002cd4	      1133	setup.c	FUNCTION_32	IF_1
0x4002caf	          0x4989fc	                            mov r12, rdi	      1133	setup.c	FUNCTION_32	IF_1
0x4002cb2	      0xb906000000	                              mov ecx, 6	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002cb7	      0xbf00000000	                              mov edi, 0	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002cbc	          0x4889f3	                            mov rbx, rsi	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002cbf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002cc1	            0x744d	                            je 0x4002d10	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002cc3	      0xbf00000000	                              mov edi, 0	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x4002cc8	      0xb906000000	                              mov ecx, 6	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x4002ccd	          0x4889de	                            mov rsi, rbx	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x4002cd0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x4002cd2	            0x7544	                           jne 0x4002d18	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x4002cd4	      0xbdb0010000	                          mov ebp, 0x1b0	      1160	setup.c	FUNCTION_32	SWITCH_1
0x4002cd9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1177	setup.c	FUNCTION_32
0x4002cde	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1177	setup.c	FUNCTION_32
0x4002ce7	            0x89e8	                            mov eax, ebp	      1177	setup.c	FUNCTION_32
0x4002ce9	     0xf85f9000000	                           jne 0x4002de8	      1177	setup.c	FUNCTION_32
0x4002cef	        0x4883c418	                           add rsp, 0x18	      1177	setup.c	FUNCTION_32
0x4002cf3	              0x5b	                                 pop rbx	      1177	setup.c	FUNCTION_32
0x4002cf4	              0x5d	                                 pop rbp	      1177	setup.c	FUNCTION_32
0x4002cf5	            0x415c	                                 pop r12	      1177	setup.c	FUNCTION_32
0x4002cf7	            0x415d	                                 pop r13	      1177	setup.c	FUNCTION_32
0x4002cf9	              0xc3	                                     ret	      1177	setup.c	FUNCTION_32
0x4002cfa	          0x4889de	                            mov rsi, rbx	      1150	setup.c	FUNCTION_32	CALL_7
0x4002cfd	          0x4c89e7	                            mov rdi, r12	      1150	setup.c	FUNCTION_32	CALL_7
0x4002d00	      0xe800000000	                          call 0x4002d05	      1150	setup.c	FUNCTION_32	CALL_7
0x4002d05	            0x85c0	                           test eax, eax	      1150	setup.c	FUNCTION_32	CALL_7
0x4002d07	            0x75cb	                           jne 0x4002cd4	      1150	setup.c	FUNCTION_32	CALL_7
0x4002d09	     0xf1f80000000	                         nop dword [rax]	      1150	setup.c	FUNCTION_32	CALL_7
0x4002d10	            0x31ed	                            xor ebp, ebp	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002d12	            0xebc5	                           jmp 0x4002cd9	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002d14	         0xf1f4000	                         nop dword [rax]	      1158	setup.c	FUNCTION_32	SWITCH_1
0x4002d18	          0x803b61	                    cmp byte [rbx], 0x61	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002d1b	     0xf849f000000	                            je 0x4002dc0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002d21	      0xbf00000000	                              mov edi, 0	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d26	      0xb906000000	                              mov ecx, 6	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d2b	          0x4889de	                            mov rsi, rbx	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d2e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d30	      0xbdb4010000	                          mov ebp, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x4002d35	           0xf97c2	                                 seta dl	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d38	           0xf92c0	                                 setb al	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d3b	            0x38c2	                              cmp dl, al	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002d3d	            0x749a	                            je 0x4002cd9	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002d3f	      0xbf00000000	                              mov edi, 0	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002d44	      0xb90a000000	                            mov ecx, 0xa	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002d49	          0x4889de	                            mov rsi, rbx	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002d4c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d4e	            0x7489	                            je 0x4002cd9	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002d50	      0xba08000000	                              mov edx, 8	      1146	setup.c	FUNCTION_32	CALL_6
0x4002d55	          0x4889e6	                            mov rsi, rsp	      1146	setup.c	FUNCTION_32	CALL_6
0x4002d58	          0x4889df	                            mov rdi, rbx	      1146	setup.c	FUNCTION_32	CALL_6
0x4002d5b	      0xe800000000	                          call 0x4002d60	      1146	setup.c	FUNCTION_32	CALL_6
0x4002d60	          0x4989c5	                            mov r13, rax	      1146	setup.c	FUNCTION_32	CALL_6
0x4002d63	        0x488b0424	                    mov rax, qword [rsp]	      1149	setup.c	FUNCTION_32	IF_5
0x4002d67	          0x803800	                       cmp byte [rax], 0	      1149	setup.c	FUNCTION_32	IF_5
0x4002d6a	            0x758e	                           jne 0x4002cfa	      1149	setup.c	FUNCTION_32	IF_5
0x4002d6c	        0x4183fd01	                             cmp r13d, 1	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d70	     0xf845effffff	                            je 0x4002cd4	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d76	        0x4183fd02	                             cmp r13d, 2	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d7a	     0xf8459ffffff	                            je 0x4002cd9	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d80	          0x4585ed	                         test r13d, r13d	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d83	            0x748b	                            je 0x4002d10	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002d85	          0x4489e8	                           mov eax, r13d	      1167	setup.c	FUNCTION_32	IF_6
0x4002d88	          0x4489ed	                           mov ebp, r13d	      1176	setup.c	FUNCTION_32
0x4002d8b	    0x81e5b6010000	                          and ebp, 0x1b6	      1176	setup.c	FUNCTION_32
0x4002d91	      0x2580010000	                          and eax, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x4002d96	            0xf7dd	                                 neg ebp	      1176	setup.c	FUNCTION_32
0x4002d98	      0x3d80010000	                          cmp eax, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x4002d9d	     0xf8436ffffff	                            je 0x4002cd9	      1167	setup.c	FUNCTION_32	IF_6
0x4002da3	      0xbf00000000	                              mov edi, 0	      1167	setup.c	FUNCTION_32	IF_6
0x4002da8	      0xe823d5ffff	                       call sym._.part.4	      1167	setup.c	FUNCTION_32	IF_6
0x4002dad	          0x4489ee	                           mov esi, r13d	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x4002db0	          0x4889c7	                            mov rdi, rax	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x4002db3	            0x31c0	                            xor eax, eax	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x4002db5	      0xe800000000	                          call 0x4002dba	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x4002dba	    0x660f1f440000	                    nop word [rax + rax]	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x4002dc0	        0x807b016c	                cmp byte [rbx + 1], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dc4	     0xf8557ffffff	                           jne 0x4002d21	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dca	        0x807b026c	                cmp byte [rbx + 2], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dce	     0xf854dffffff	                           jne 0x4002d21	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dd4	        0x807b0300	                   cmp byte [rbx + 3], 0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dd8	     0xf8543ffffff	                           jne 0x4002d21	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002dde	      0xbdb4010000	                          mov ebp, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x4002de3	      0xe9f1feffff	                           jmp 0x4002cd9	      1143	setup.c	FUNCTION_32	IF_4
0x4002de8	      0xe800000000	                          call 0x4002ded	      1177	setup.c	FUNCTION_32
get_common_dir_noenv	WHILE,1:IF,3:functions,0:SWITCH,0:ELSE,1:CALL,12:DO,0:FOR,0	113
0x4000880	            0x4154	                                push r12	       270	setup.c	FUNCTION_11
0x4000882	              0x55	                                push rbp	       270	setup.c	FUNCTION_11
0x4000883	          0x4989fc	                            mov r12, rdi	       270	setup.c	FUNCTION_11
0x4000886	              0x53	                                push rbx	       270	setup.c	FUNCTION_11
0x4000887	          0x4889f2	                            mov rdx, rsi	       275	setup.c	FUNCTION_11	CALL_1
0x400088a	          0x4889f3	                            mov rbx, rsi	       270	setup.c	FUNCTION_11
0x400088d	      0xbe00000000	                              mov esi, 0	       275	setup.c	FUNCTION_11	CALL_1
0x4000892	        0x4883ec40	                           sub rsp, 0x40	       270	setup.c	FUNCTION_11
0x4000896	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	setup.c	FUNCTION_11
0x400089f	      0x4889442438	             mov qword [rsp + 0x38], rax	       270	setup.c	FUNCTION_11
0x40008a4	            0x31c0	                            xor eax, eax	       270	setup.c	FUNCTION_11
0x40008a6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       275	setup.c	FUNCTION_11	CALL_1
0x40008ab	    0x48c704240000	                      mov qword [rsp], 0	       271	setup.c	FUNCTION_11
0x40008b3	    0x48c744240800	                  mov qword [rsp + 8], 0	       271	setup.c	FUNCTION_11
0x40008bc	    0x48c744241000	               mov qword [rsp + 0x10], 0	       271	setup.c	FUNCTION_11
0x40008c5	    0x48c744242000	               mov qword [rsp + 0x20], 0	       272	setup.c	FUNCTION_11
0x40008ce	    0x48c744242800	               mov qword [rsp + 0x28], 0	       272	setup.c	FUNCTION_11
0x40008d7	    0x48c744243000	               mov qword [rsp + 0x30], 0	       272	setup.c	FUNCTION_11
0x40008e0	      0xe800000000	                          call 0x40008e5	       275	setup.c	FUNCTION_11	CALL_1
0x40008e5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40008ea	      0xe800000000	                          call 0x40008ef	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40008ef	            0x85c0	                           test eax, eax	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40008f1	     0xf84d9000000	                            je 0x40009d0	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40008f7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40008fc	            0x31d2	                            xor edx, edx	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40008fe	          0x4889e7	                            mov rdi, rsp	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000901	          0x4889e5	                            mov rbp, rsp	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000904	      0xe800000000	                          call 0x4000909	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000909	          0x4885c0	                           test rax, rax	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400090c	     0xf8e3b010000	                           jle 0x4000a4d	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4000912	      0x488b542408	                mov rdx, qword [rsp + 8]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000917	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400091c	          0x4885d2	                           test rdx, rdx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400091f	            0x7445	                            je 0x4000966	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000921	       0xfb64c16ff	         movzx ecx, byte [rsi + rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000926	        0x488d42ff	                      lea rax, [rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400092a	          0x80f90a	                             cmp cl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400092d	            0x742b	                            je 0x400095a	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400092f	          0x80f90d	                             cmp cl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000932	            0x7426	                            je 0x400095a	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000934	            0xeb30	                           jmp 0x4000966	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000940	       0xfb65406ff	         movzx edx, byte [rsi + rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000945	        0x488d48ff	                      lea rcx, [rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000949	          0x80fa0a	                             cmp dl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400094c	            0x7409	                            je 0x4000957	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400094e	          0x80fa0d	                             cmp dl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000951	     0xf85c9000000	                           jne 0x4000a20	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000957	          0x4889c8	                            mov rax, rcx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400095a	          0x4885c0	                           test rax, rax	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400095d	      0x4889442408	                mov qword [rsp + 8], rax	       281	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000962	            0x75dc	                           jne 0x4000940	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000964	            0x31d2	                            xor edx, edx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000966	        0xc6041600	                 mov byte [rsi + rdx], 0	       282	setup.c	FUNCTION_11	IF_1
0x400096a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_67	IF_2
0x400096f	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_67
0x4000978	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x400097e	     0xf84ac000000	                            je 0x4000a30	       165	strbuf.h	FUNCTION_67	IF_2
0x4000984	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4000987	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       166	strbuf.h	FUNCTION_67	IF_2
0x400098c	          0x80382f	                    cmp byte [rax], 0x2f	      1154	cache.h	FUNCTION_96
0x400098f	            0x7414	                            je 0x40009a5	      1154	cache.h	FUNCTION_96
0x4000991	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x4000996	          0x4889da	                            mov rdx, rbx	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x4000999	      0xbe00000000	                              mov esi, 0	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x400099e	            0x31c0	                            xor eax, eax	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40009a0	      0xe800000000	                          call 0x40009a5	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40009a5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40009aa	          0x4889ee	                            mov rsi, rbp	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40009ad	      0xbb01000000	                              mov ebx, 1	       288	setup.c	FUNCTION_11	IF_1
0x40009b2	      0xe800000000	                          call 0x40009b7	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40009b7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40009bc	          0x4c89e7	                            mov rdi, r12	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40009bf	      0xe800000000	                          call 0x40009c4	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40009c4	            0xeb25	                           jmp 0x40009eb	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40009c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40009d0	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009d3	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009d6	      0xe800000000	                          call 0x40009db	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009db	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009de	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009e1	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009e4	            0x31db	                            xor ebx, ebx	       273	setup.c	FUNCTION_11
0x40009e6	      0xe800000000	                          call 0x40009eb	       279	strbuf.h	FUNCTION_69	CALL_2
0x40009eb	          0x4889ef	                            mov rdi, rbp	       293	setup.c	FUNCTION_11	CALL_11
0x40009ee	      0xe800000000	                          call 0x40009f3	       293	setup.c	FUNCTION_11	CALL_11
0x40009f3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       294	setup.c	FUNCTION_11	CALL_12
0x40009f8	      0xe800000000	                          call 0x40009fd	       294	setup.c	FUNCTION_11	CALL_12
0x40009fd	            0x89d8	                            mov eax, ebx	       296	setup.c	FUNCTION_11
0x40009ff	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       296	setup.c	FUNCTION_11
0x4000a04	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       296	setup.c	FUNCTION_11
0x4000a0d	            0x7539	                           jne 0x4000a48	       296	setup.c	FUNCTION_11
0x4000a0f	        0x4883c440	                           add rsp, 0x40	       296	setup.c	FUNCTION_11
0x4000a13	              0x5b	                                 pop rbx	       296	setup.c	FUNCTION_11
0x4000a14	              0x5d	                                 pop rbp	       296	setup.c	FUNCTION_11
0x4000a15	            0x415c	                                 pop r12	       296	setup.c	FUNCTION_11
0x4000a17	              0xc3	                                     ret	       296	setup.c	FUNCTION_11
0x4000a18	     0xf1f84000000	                   nop dword [rax + rax]	       296	setup.c	FUNCTION_11
0x4000a20	          0x4889c2	                            mov rdx, rax	       296	setup.c	FUNCTION_11
0x4000a23	      0xe93effffff	                           jmp 0x4000966	       296	setup.c	FUNCTION_11
0x4000a28	     0xf1f84000000	                   nop dword [rax + rax]	       296	setup.c	FUNCTION_11
0x4000a30	    0x803d00000000	                cmp byte [0x04000a37], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000a37	     0xf844affffff	                            je 0x4000987	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000a3d	      0xe800000000	                          call 0x4000a42	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000a42	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000a48	      0xe800000000	                          call 0x4000a4d	       296	setup.c	FUNCTION_11
0x4000a4d	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a52	      0xbf00000000	                              mov edi, 0	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a57	      0xe874f8ffff	                       call sym._.part.4	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a5c	          0x4889c7	                            mov rdi, rax	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a5f	            0x31c0	                            xor eax, eax	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a61	          0x4889de	                            mov rsi, rbx	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000a64	      0xe800000000	                          call 0x4000a69	       278	setup.c	FUNCTION_11	IF_1	CALL_5
prefix_path	WHILE,0:IF,1:functions,0:SWITCH,0:ELSE,0:CALL,3:DO,0:FOR,0	42
0x40004c0	              0x55	                                push rbp	       120	setup.c	FUNCTION_3
0x40004c1	              0x53	                                push rbx	       120	setup.c	FUNCTION_3
0x40004c2	          0x4889d3	                            mov rbx, rdx	       120	setup.c	FUNCTION_3
0x40004c5	        0x4883ec08	                              sub rsp, 8	       120	setup.c	FUNCTION_3
0x40004c9	          0x803a2f	                    cmp byte [rdx], 0x2f	      1154	cache.h	FUNCTION_96
0x40004cc	            0x7442	                            je 0x4000510	      1154	cache.h	FUNCTION_96
0x40004ce	            0x85f6	                           test esi, esi	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004d0	      0xba00000000	                              mov edx, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004d5	          0x4889d9	                            mov rcx, rbx	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004d8	        0x480f45d7	                         cmovne rdx, rdi	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004dc	      0xbf00000000	                              mov edi, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004e1	            0x31c0	                            xor eax, eax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004e3	      0xe800000000	                          call 0x40004e8	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004e8	            0x31d2	                            xor edx, edx	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004ea	          0x4889c6	                            mov rsi, rax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004ed	          0x4889c7	                            mov rdi, rax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004f0	          0x4889c5	                            mov rbp, rax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004f3	      0xe800000000	                          call 0x40004f8	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004f8	            0x89c2	                            mov edx, eax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004fa	          0x4889e8	                            mov rax, rbp	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40004fd	            0x85d2	                           test edx, edx	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x40004ff	            0x751f	                           jne 0x4000520	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x4000501	          0x4885c0	                           test rax, rax	       122	setup.c	FUNCTION_3	IF_1
0x4000504	            0x7422	                            je 0x4000528	       122	setup.c	FUNCTION_3	IF_1
0x4000506	        0x4883c408	                              add rsp, 8	       125	setup.c	FUNCTION_3
0x400050a	              0x5b	                                 pop rbx	       125	setup.c	FUNCTION_3
0x400050b	              0x5d	                                 pop rbp	       125	setup.c	FUNCTION_3
0x400050c	              0xc3	                                     ret	       125	setup.c	FUNCTION_3
0x400050d	           0xf1f00	                         nop dword [rax]	       125	setup.c	FUNCTION_3
0x4000510	          0x4889d6	                            mov rsi, rdx	       125	setup.c	FUNCTION_3
0x4000513	            0x31ff	                            xor edi, edi	       125	setup.c	FUNCTION_3
0x4000515	      0xe8c6fdffff	      call sym.prefix_path_gently.part.7	       125	setup.c	FUNCTION_3
0x400051a	            0xebe5	                           jmp 0x4000501	       125	setup.c	FUNCTION_3
0x400051c	         0xf1f4000	                         nop dword [rax]	       125	setup.c	FUNCTION_3
0x4000520	          0x4889ef	                            mov rdi, rbp	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x4000523	      0xe800000000	                          call 0x4000528	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x4000528	      0xbf00000000	                              mov edi, 0	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x400052d	      0xe89efdffff	                       call sym._.part.4	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x4000532	          0x4889de	                            mov rsi, rbx	       123	setup.c	FUNCTION_3	CALL_3
0x4000535	          0x4889c7	                            mov rdi, rax	       123	setup.c	FUNCTION_3	CALL_3
0x4000538	            0x31c0	                            xor eax, eax	       123	setup.c	FUNCTION_3	CALL_3
0x400053a	      0xe800000000	                          call 0x400053f	       123	setup.c	FUNCTION_3	CALL_3
setup_git_directory	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:CALL,1:DO,0:FOR,0	287
0x40030a0	            0x4155	                                push r13	      1193	setup.c	FUNCTION_34
0x40030a2	            0x4154	                                push r12	      1193	setup.c	FUNCTION_34
0x40030a4	              0x55	                                push rbp	      1193	setup.c	FUNCTION_34
0x40030a5	              0x53	                                push rbx	      1193	setup.c	FUNCTION_34
0x40030a6	    0x4881ec980000	                           sub rsp, 0x98	      1193	setup.c	FUNCTION_34
0x40030ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      1193	setup.c	FUNCTION_34
0x40030b6	    0x488984248800	             mov qword [rsp + 0x88], rax	      1193	setup.c	FUNCTION_34
0x40030be	            0x31c0	                            xor eax, eax	      1193	setup.c	FUNCTION_34
0x40030c0	    0x48c704240000	                      mov qword [rsp], 0	      1032	setup.c	FUNCTION_31
0x40030c8	    0x48c744240800	                  mov qword [rsp + 8], 0	      1032	setup.c	FUNCTION_31
0x40030d1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1032	setup.c	FUNCTION_31
0x40030da	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1032	setup.c	FUNCTION_31
0x40030e3	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1032	setup.c	FUNCTION_31
0x40030ec	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1032	setup.c	FUNCTION_31
0x40030f5	      0xe800000000	                          call 0x40030fa	      1043	setup.c	FUNCTION_31	CALL_1
0x40030fa	      0xbf00000000	                              mov edi, 0	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x40030ff	      0xe800000000	                          call 0x4003104	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4003104	            0x85c0	                           test eax, eax	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4003106	     0xf8507040000	                           jne 0x4003513	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x400310c	      0xbe00000000	                              mov esi, 0	      1055	setup.c	FUNCTION_31	CALL_5
0x4003111	          0x4889e7	                            mov rdi, rsp	      1055	setup.c	FUNCTION_31	CALL_5
0x4003114	      0xe800000000	                          call 0x4003119	      1055	setup.c	FUNCTION_31	CALL_5
0x4003119	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400311e	      0xba01000000	                              mov edx, 1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4003123	          0x4889e7	                            mov rdi, rsp	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4003126	      0xe8e5ecffff	   call sym.setup_git_directory_gently_1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400312b	          0x83c002	                              add eax, 2	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400312e	          0x83f805	                              cmp eax, 5	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4003131	     0xf8719030000	                            ja 0x4003450	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4003137	    0xff24c5000000	                       jmp qword [rax*8]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400313e	            0x6690	                                     nop	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4003140	      0x488b442408	                mov rax, qword [rsp + 8]	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4003145	    0x483b05000000	            cmp rax, qword [0x0400314c] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400314c	            0x7317	                           jae 0x4003165	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400314e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4003153	      0xe800000000	                          call 0x4003158	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4003158	            0x85c0	                           test eax, eax	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400315a	     0xf854e040000	                           jne 0x40035ae	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4003160	      0x488b442408	                mov rax, qword [rsp + 8]	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4003165	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x400316a	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x400316f	            0x31d2	                            xor edx, edx	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4003171	            0x89c3	                            mov ebx, eax	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x4003173	          0x4889ee	                            mov rsi, rbp	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4003176	          0x4c89ef	                            mov rdi, r13	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4003179	      0xe842d9ffff	 call sym.check_repository_format_gently	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x400317e	            0x85c0	                           test eax, eax	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4003180	     0xf85aa020000	                           jne 0x4003430	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x4003186	      0xbf00000000	                              mov edi, 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x400318b	      0xe800000000	                          call 0x4003190	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4003190	          0x4885c0	                           test rax, rax	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4003193	     0xf8407030000	                            je 0x40034a0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4003199	          0x4863c3	                         movsxd rax, ebx	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x400319c	          0x4531e4	                          xor r12d, r12d	       737	setup.c	FUNCTION_24	IF_2
0x400319f	    0x483b05000000	            cmp rax, qword [0x040031a6] 	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x40031a6	            0x741a	                            je 0x40031c2	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x40031a8	      0x41807d002f	                    cmp byte [r13], 0x2f	      1154	cache.h	FUNCTION_96
0x40031ad	            0x7413	                            je 0x40031c2	      1154	cache.h	FUNCTION_96
0x40031af	          0x4c89ef	                            mov rdi, r13	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x40031b2	      0xbe01000000	                              mov esi, 1	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x40031b7	      0xe800000000	                          call 0x40031bc	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x40031bc	          0x4989c5	                            mov r13, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x40031bf	          0x4989c4	                            mov r12, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x40031c2	    0x488b3d000000	            mov rdi, qword [0x040031c9] 	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x40031c9	      0xe800000000	                          call 0x40031ce	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x40031ce	            0x85c0	                           test eax, eax	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x40031d0	     0xf8512030000	                           jne 0x40034e8	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x40031d6	          0x4c89ef	                            mov rdi, r13	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x40031d9	            0x31d2	                            xor edx, edx	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x40031db	          0x4889ee	                            mov rsi, rbp	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x40031de	      0xe89de4ffff	call sym.setup_explicit_git_dir.constprop.13	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x40031e3	          0x4c89e7	                            mov rdi, r12	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x40031e6	          0x4889c3	                            mov rbx, rax	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x40031e9	      0xe800000000	                          call 0x40031ee	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x40031ee	          0x4885db	                           test rbx, rbx	      1092	setup.c	FUNCTION_31	IF_6
0x40031f1	     0xf8439020000	                            je 0x4003430	      1092	setup.c	FUNCTION_31	IF_6
0x40031f7	      0xba01000000	                              mov edx, 1	      1093	setup.c	FUNCTION_31	IF_6
0x40031fc	          0x4889de	                            mov rsi, rbx	      1093	setup.c	FUNCTION_31	IF_6
0x40031ff	      0xbf00000000	                              mov edi, 0	      1093	setup.c	FUNCTION_31	IF_6
0x4003204	      0xe800000000	                          call 0x4003209	      1093	setup.c	FUNCTION_31	IF_6
0x4003209	    0x488b3d000000	            mov rdi, qword [0x04003210] 	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x4003210	    0x488b05000000	            mov rax, qword [0x04003217] 	      1097	setup.c	FUNCTION_31
0x4003217	        0x48833f00	                      cmp qword [rdi], 0	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x400321b	    0xc70001000000	                      mov dword [rax], 1	      1097	setup.c	FUNCTION_31
0x4003221	        0x48895808	                mov qword [rax + 8], rbx	      1098	setup.c	FUNCTION_31
0x4003225	     0xf8435020000	                            je 0x4003460	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x400322b	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x400322f	      0xe800000000	                          call 0x4003234	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4003234	          0x4889e7	                            mov rdi, rsp	      1122	setup.c	FUNCTION_31	CALL_26
0x4003237	      0xe800000000	                          call 0x400323c	      1122	setup.c	FUNCTION_31	CALL_26
0x400323c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1123	setup.c	FUNCTION_31	CALL_27
0x4003241	      0xe800000000	                          call 0x4003246	      1123	setup.c	FUNCTION_31	CALL_27
0x4003246	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1195	setup.c	FUNCTION_34
0x400324e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1195	setup.c	FUNCTION_34
0x4003257	          0x4889d8	                            mov rax, rbx	      1195	setup.c	FUNCTION_34
0x400325a	     0xf85ae020000	                           jne 0x400350e	      1195	setup.c	FUNCTION_34
0x4003260	    0x4881c4980000	                           add rsp, 0x98	      1195	setup.c	FUNCTION_34
0x4003267	              0x5b	                                 pop rbx	      1195	setup.c	FUNCTION_34
0x4003268	              0x5d	                                 pop rbp	      1195	setup.c	FUNCTION_34
0x4003269	            0x415c	                                 pop r12	      1195	setup.c	FUNCTION_34
0x400326b	            0x415d	                                 pop r13	      1195	setup.c	FUNCTION_34
0x400326d	              0xc3	                                     ret	      1195	setup.c	FUNCTION_34
0x400326e	            0x6690	                                     nop	      1195	setup.c	FUNCTION_34
0x4003270	      0x488b742408	                mov rsi, qword [rsp + 8]	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4003275	    0x483b35000000	            cmp rsi, qword [0x0400327c] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400327c	            0x7317	                           jae 0x4003295	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400327e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4003283	      0xe800000000	                          call 0x4003288	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4003288	            0x85c0	                           test eax, eax	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x400328a	     0xf851e030000	                           jne 0x40035ae	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4003290	      0x488b742408	                mov rsi, qword [rsp + 8]	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x4003295	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x400329a	            0x31d2	                            xor edx, edx	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x400329c	          0x4863de	                         movsxd rbx, esi	      1073	setup.c	FUNCTION_31	SWITCH_1	CALL_15
0x400329f	      0xbf00000000	                              mov edi, 0	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40032a4	          0x4889ee	                            mov rsi, rbp	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40032a7	      0xe814d8ffff	 call sym.check_repository_format_gently	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40032ac	            0x85c0	                           test eax, eax	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40032ae	     0xf857c010000	                           jne 0x4003430	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40032b4	      0xba01000000	                              mov edx, 1	       784	setup.c	FUNCTION_25
0x40032b9	      0xbe00000000	                              mov esi, 0	       784	setup.c	FUNCTION_25
0x40032be	      0xbf00000000	                              mov edi, 0	       784	setup.c	FUNCTION_25
0x40032c3	      0xe800000000	                          call 0x40032c8	       784	setup.c	FUNCTION_25
0x40032c8	      0xbf00000000	                              mov edi, 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40032cd	      0xe800000000	                          call 0x40032d2	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40032d2	          0x4885c0	                           test rax, rax	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40032d5	     0xf84b5000000	                            je 0x4003390	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x40032db	          0x4863f3	                         movsxd rsi, ebx	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032de	    0x483b35000000	            cmp rsi, qword [0x040032e5] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032e5	      0xbb00000000	                              mov ebx, 0	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032ea	            0x740f	                            je 0x40032fb	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032ec	    0x488b3d000000	            mov rdi, qword [0x040032f3] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032f3	      0xe800000000	                          call 0x40032f8	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032f8	          0x4889c3	                            mov rbx, rax	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x40032fb	    0x488b3d000000	            mov rdi, qword [0x04003302] 	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4003302	    0x48891d000000	            mov qword [0x04003309], rbx 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4003309	      0xe800000000	                          call 0x400330e	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x400330e	            0x85c0	                           test eax, eax	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4003310	     0xf85d2010000	                           jne 0x40034e8	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4003316	          0x4889df	                            mov rdi, rbx	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4003319	            0x31d2	                            xor edx, edx	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400331b	          0x4889ee	                            mov rsi, rbp	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400331e	      0xe85de3ffff	call sym.setup_explicit_git_dir.constprop.13	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4003323	          0x4889c3	                            mov rbx, rax	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4003326	      0xe9c3feffff	                           jmp 0x40031ee	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400332b	       0xf1f440000	                   nop dword [rax + rax]	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4003330	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003335	      0xbf00000000	                              mov edi, 0	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400333a	      0xe891cfffff	                       call sym._.part.4	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400333f	          0x4889de	                            mov rsi, rbx	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003342	          0x4889c7	                            mov rdi, rax	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003345	            0x31c0	                            xor eax, eax	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003347	      0xe800000000	                          call 0x400334c	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400334c	         0xf1f4000	                         nop dword [rax]	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003350	      0xbf00000000	                              mov edi, 0	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4003355	      0xe876cfffff	                       call sym._.part.4	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400335a	      0xbe00000000	                              mov esi, 0	       813	setup.c	FUNCTION_26	CALL_2
0x400335f	          0x4889c7	                            mov rdi, rax	       813	setup.c	FUNCTION_26	CALL_2
0x4003362	            0x31c0	                            xor eax, eax	       813	setup.c	FUNCTION_26	CALL_2
0x4003364	      0xe800000000	                          call 0x4003369	       813	setup.c	FUNCTION_26	CALL_2
0x4003369	     0xf1f80000000	                         nop dword [rax]	       813	setup.c	FUNCTION_26	CALL_2
0x4003370	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4003375	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x400337a	            0x31d2	                            xor edx, edx	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x400337c	      0xe8ffe2ffff	call sym.setup_explicit_git_dir.constprop.13	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4003381	          0x4889c3	                            mov rbx, rax	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4003384	      0xe965feffff	                           jmp 0x40031ee	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4003389	     0xf1f80000000	                         nop dword [rax]	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4003390	    0x48833d000000	               cmp qword [0x04003398], 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x4003398	     0xf853dffffff	                           jne 0x40032db	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x400339e	          0x4863c3	                         movsxd rax, ebx	       798	setup.c	FUNCTION_25	IF_4
0x40033a1	    0x483b05000000	            cmp rax, qword [0x040033a8] 	       798	setup.c	FUNCTION_25	IF_4
0x40033a8	    0xc70500000000	               mov dword [0x040033b2], 1	       796	setup.c	FUNCTION_25
0x40033b2	    0xc70500000000	               mov dword [0x040033bc], 0	       797	setup.c	FUNCTION_25
0x40033bc	     0xf84e2010000	                            je 0x40035a4	       798	setup.c	FUNCTION_25	IF_4
0x40033c2	    0x488b3d000000	            mov rdi, qword [0x040033c9] 	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40033c9	      0xe800000000	                          call 0x40033ce	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40033ce	            0x85c0	                           test eax, eax	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40033d0	     0xf8512010000	                           jne 0x40034e8	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40033d6	    0x488b3d000000	            mov rdi, qword [0x040033dd] 	       801	setup.c	FUNCTION_25	IF_4
0x40033dd	            0x31c0	                            xor eax, eax	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40033df	    0x488b15000000	            mov rdx, qword [0x040033e6] 	       162	strbuf.h	FUNCTION_67	IF_1
0x40033e6	          0x803f2f	                    cmp byte [rdi], 0x2f	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40033e9	           0xf94c0	                                 sete al	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40033ec	            0x39d8	                            cmp eax, ebx	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40033ee	        0x480f4cc3	                          cmovl rax, rbx	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x40033f2	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x40033f6	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x40033fa	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_67	IF_1
0x40033fd	     0xf87ba010000	                            ja 0x40035bd	       162	strbuf.h	FUNCTION_67	IF_1
0x4003403	    0x4881ff000000	                              cmp rdi, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x400340a	    0x488905000000	            mov qword [0x04003411], rax 	       164	strbuf.h	FUNCTION_67
0x4003411	     0xf84e5000000	                            je 0x40034fc	       165	strbuf.h	FUNCTION_67	IF_2
0x4003417	        0xc6040700	                 mov byte [rdi + rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x400341b	    0x488b3d000000	            mov rdi, qword [0x04003422] 	       166	strbuf.h	FUNCTION_67	IF_2
0x4003422	      0xe800000000	                          call 0x4003427	       806	setup.c	FUNCTION_25	CALL_13
0x4003427	    0x660f1f840000	                    nop word [rax + rax]	       806	setup.c	FUNCTION_25	CALL_13
0x4003430	      0xba01000000	                              mov edx, 1	      1095	setup.c	FUNCTION_31	ELSE_1
0x4003435	      0xbe00000000	                              mov esi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x400343a	      0xbf00000000	                              mov edi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x400343f	      0xe800000000	                          call 0x4003444	      1095	setup.c	FUNCTION_31	ELSE_1
0x4003444	            0x31db	                            xor ebx, ebx	      1095	setup.c	FUNCTION_31	ELSE_1
0x4003446	      0xe9befdffff	                           jmp 0x4003209	      1095	setup.c	FUNCTION_31	ELSE_1
0x400344b	       0xf1f440000	                   nop dword [rax + rax]	      1095	setup.c	FUNCTION_31	ELSE_1
0x4003450	      0xbf00000000	                              mov edi, 0	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4003455	            0x31c0	                            xor eax, eax	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4003457	      0xe800000000	                          call 0x400345c	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x400345c	         0xf1f4000	                         nop dword [rax]	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4003460	      0xbf00000000	                              mov edi, 0	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x4003465	      0xe800000000	                          call 0x400346a	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x400346a	      0xba00000000	                              mov edx, 0	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x400346f	          0x4885c0	                           test rax, rax	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x4003472	        0x480f44c2	                          cmove rax, rdx	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x4003476	          0x4889c7	                            mov rdi, rax	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x4003479	      0xe800000000	                          call 0x400347e	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x400347e	    0x488b05000000	            mov rax, qword [0x04003485] 	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4003485	            0x8b00	                    mov eax, dword [rax]	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4003487	            0x85c0	                           test eax, eax	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4003489	     0xf84a5fdffff	                            je 0x4003234	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x400348f	    0x488b3d000000	            mov rdi, qword [0x04003496] 	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4003496	      0xe990fdffff	                           jmp 0x400322b	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x400349b	       0xf1f440000	                   nop dword [rax + rax]	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x40034a0	    0x48833d000000	               cmp qword [0x040034a8], 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40034a8	     0xf85ebfcffff	                           jne 0x4003199	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40034ae	    0x8b1500000000	            mov edx, dword [0x040034b4] 	       750	setup.c	FUNCTION_24	IF_5
0x40034b4	            0x85d2	                           test edx, edx	       750	setup.c	FUNCTION_24	IF_5
0x40034b6	            0x7e6f	                           jle 0x4003527	       750	setup.c	FUNCTION_24	IF_5
0x40034b8	          0x4863c3	                         movsxd rax, ebx	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034bb	    0x483b05000000	            cmp rax, qword [0x040034c2] 	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034c2	          0x4c89ef	                            mov rdi, r13	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x40034c5	            0x7408	                            je 0x40034cf	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034c7	      0xe800000000	                          call 0x40034cc	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034cc	          0x4889c7	                            mov rdi, rax	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034cf	      0xe800000000	                          call 0x40034d4	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40034d4	    0x488b3d000000	            mov rdi, qword [0x040034db] 	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034db	      0xe800000000	                          call 0x40034e0	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034e0	            0x85c0	                           test eax, eax	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034e2	     0xf8448ffffff	                            je 0x4003430	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034e8	      0xbf00000000	                              mov edi, 0	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034ed	      0xe8decdffff	                       call sym._.part.4	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40034f2	          0x4889c7	                            mov rdi, rax	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x40034f5	            0x31c0	                            xor eax, eax	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x40034f7	      0xe800000000	                          call 0x40034fc	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x40034fc	    0x803d00000000	                cmp byte [0x04003503], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4003503	     0xf8419ffffff	                            je 0x4003422	       168	strbuf.h	FUNCTION_67	CALL_2
0x4003509	      0xe800000000	                          call 0x400350e	       168	strbuf.h	FUNCTION_67	CALL_2
0x400350e	      0xe800000000	                          call 0x4003513	      1195	setup.c	FUNCTION_34
0x4003513	      0xbf00000000	                              mov edi, 0	      1195	setup.c	FUNCTION_34
0x4003518	      0xe8b3cdffff	                       call sym._.part.4	      1195	setup.c	FUNCTION_34
0x400351d	          0x4889c7	                            mov rdi, rax	      1054	setup.c	FUNCTION_31	CALL_4
0x4003520	            0x31c0	                            xor eax, eax	      1054	setup.c	FUNCTION_31	CALL_4
0x4003522	      0xe800000000	                          call 0x4003527	      1054	setup.c	FUNCTION_31	CALL_4
0x4003527	      0xbf00000000	                              mov edi, 0	       758	setup.c	FUNCTION_24	CALL_15
0x400352c	      0xe800000000	                          call 0x4003531	       758	setup.c	FUNCTION_24	CALL_15
0x4003531	      0xbe00000000	                              mov esi, 0	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4003536	          0x4c89ef	                            mov rdi, r13	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4003539	      0xe800000000	                          call 0x400353e	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x400353e	            0x85c0	                           test eax, eax	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4003540	            0x7408	                            je 0x400354a	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x4003542	          0x4c89ef	                            mov rdi, r13	       760	setup.c	FUNCTION_24	CALL_17
0x4003545	      0xe800000000	                          call 0x400354a	       760	setup.c	FUNCTION_24	CALL_17
0x400354a	          0x4863c3	                         movsxd rax, ebx	       763	setup.c	FUNCTION_24	IF_8
0x400354d	    0x483b05000000	            cmp rax, qword [0x04003554] 	       763	setup.c	FUNCTION_24	IF_8
0x4003554	    0xc70500000000	               mov dword [0x0400355e], 0	       761	setup.c	FUNCTION_24
0x400355e	    0xc70500000000	               mov dword [0x04003568], 1	       762	setup.c	FUNCTION_24
0x4003568	     0xf84c2feffff	                            je 0x4003430	       763	setup.c	FUNCTION_24	IF_8
0x400356e	    0x488b05000000	            mov rax, qword [0x04003575] 	       763	setup.c	FUNCTION_24	IF_8
0x4003575	            0x31ed	                            xor ebp, ebp	       364	git-compat-util.h	FUNCTION_40
0x4003577	      0xbe2f000000	                           mov esi, 0x2f	       770	setup.c	FUNCTION_24	CALL_18
0x400357c	      0xbf00000000	                              mov edi, 0	       770	setup.c	FUNCTION_24	CALL_18
0x4003581	          0x80382f	                    cmp byte [rax], 0x2f	       364	git-compat-util.h	FUNCTION_40
0x4003584	          0x8d4301	                      lea eax, [rbx + 1]	       768	setup.c	FUNCTION_24	IF_9
0x4003587	        0x400f94c5	                                sete bpl	       364	git-compat-util.h	FUNCTION_40
0x400358b	            0x39eb	                            cmp ebx, ebp	       768	setup.c	FUNCTION_24	IF_9
0x400358d	           0xf45e8	                         cmovne ebp, eax	       768	setup.c	FUNCTION_24	IF_9
0x4003590	          0x4863dd	                         movsxd rbx, ebp	       771	setup.c	FUNCTION_24
0x4003593	      0xe8a8caffff	                   call sym.strbuf_addch	       770	setup.c	FUNCTION_24	CALL_18
0x4003598	    0x48031d000000	             add rbx, qword [0x0400359f]	       771	setup.c	FUNCTION_24
0x400359f	      0xe94afcffff	                           jmp 0x40031ee	       771	setup.c	FUNCTION_24
0x40035a4	      0xbf00000000	                              mov edi, 0	       806	setup.c	FUNCTION_25	CALL_13
0x40035a9	      0xe974feffff	                           jmp 0x4003422	       806	setup.c	FUNCTION_25	CALL_13
0x40035ae	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40035b3	      0xbf00000000	                              mov edi, 0	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40035b8	      0xe97dfdffff	                           jmp 0x400333a	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40035bd	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x40035c2	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_67	CALL_1
0x40035c4	      0xe800000000	                          call 0x40035c9	       163	strbuf.h	FUNCTION_67	CALL_1
path_inside_repo	WHILE,0:IF,1:functions,0:SWITCH,0:ELSE,0:CALL,3:DO,0:FOR,0	56
0x4000540	              0x55	                                push rbp	       128	setup.c	FUNCTION_4
0x4000541	              0x53	                                push rbx	       128	setup.c	FUNCTION_4
0x4000542	          0x4889f5	                            mov rbp, rsi	       128	setup.c	FUNCTION_4
0x4000545	        0x4883ec08	                              sub rsp, 8	       128	setup.c	FUNCTION_4
0x4000549	          0x4885ff	                           test rdi, rdi	       129	setup.c	FUNCTION_4	CALL_1
0x400054c	            0x747a	                            je 0x40005c8	       129	setup.c	FUNCTION_4	CALL_1
0x400054e	          0x4889fb	                            mov rbx, rdi	       129	setup.c	FUNCTION_4	CALL_1
0x4000551	      0xe800000000	                          call 0x4000556	       129	setup.c	FUNCTION_4	CALL_1
0x4000556	        0x807d002f	                    cmp byte [rbp], 0x2f	      1154	cache.h	FUNCTION_96
0x400055a	            0x744c	                            je 0x40005a8	      1154	cache.h	FUNCTION_96
0x400055c	            0x85c0	                           test eax, eax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400055e	      0xba00000000	                              mov edx, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000563	            0x89c6	                            mov esi, eax	       129	setup.c	FUNCTION_4	CALL_1
0x4000565	        0x480f45d3	                         cmovne rdx, rbx	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000569	          0x4889e9	                            mov rcx, rbp	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400056c	      0xbf00000000	                              mov edi, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000571	            0x31c0	                            xor eax, eax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000573	      0xe800000000	                          call 0x4000578	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000578	            0x31d2	                            xor edx, edx	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400057a	          0x4889c7	                            mov rdi, rax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400057d	          0x4889c6	                            mov rsi, rax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x4000580	          0x4889c3	                            mov rbx, rax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000583	      0xe800000000	                          call 0x4000588	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x4000588	            0x85c0	                           test eax, eax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400058a	          0x4889df	                            mov rdi, rbx	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400058d	            0x7551	                           jne 0x40005e0	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400058f	          0x4885ff	                           test rdi, rdi	       131	setup.c	FUNCTION_4	IF_1
0x4000592	            0x7426	                            je 0x40005ba	       131	setup.c	FUNCTION_4	IF_1
0x4000594	      0xe800000000	                          call 0x4000599	       132	setup.c	FUNCTION_4	IF_1	CALL_3
0x4000599	      0xb801000000	                              mov eax, 1	       133	setup.c	FUNCTION_4	IF_1
0x400059e	        0x4883c408	                              add rsp, 8	       136	setup.c	FUNCTION_4
0x40005a2	              0x5b	                                 pop rbx	       136	setup.c	FUNCTION_4
0x40005a3	              0x5d	                                 pop rbp	       136	setup.c	FUNCTION_4
0x40005a4	              0xc3	                                     ret	       136	setup.c	FUNCTION_4
0x40005a5	           0xf1f00	                         nop dword [rax]	       136	setup.c	FUNCTION_4
0x40005a8	            0x31ff	                            xor edi, edi	       136	setup.c	FUNCTION_4
0x40005aa	          0x4889ee	                            mov rsi, rbp	       136	setup.c	FUNCTION_4
0x40005ad	      0xe82efdffff	      call sym.prefix_path_gently.part.7	       136	setup.c	FUNCTION_4
0x40005b2	          0x4889c7	                            mov rdi, rax	       136	setup.c	FUNCTION_4
0x40005b5	          0x4885ff	                           test rdi, rdi	       131	setup.c	FUNCTION_4	IF_1
0x40005b8	            0x75da	                           jne 0x4000594	       131	setup.c	FUNCTION_4	IF_1
0x40005ba	        0x4883c408	                              add rsp, 8	       136	setup.c	FUNCTION_4
0x40005be	            0x31c0	                            xor eax, eax	       135	setup.c	FUNCTION_4
0x40005c0	              0x5b	                                 pop rbx	       136	setup.c	FUNCTION_4
0x40005c1	              0x5d	                                 pop rbp	       136	setup.c	FUNCTION_4
0x40005c2	              0xc3	                                     ret	       136	setup.c	FUNCTION_4
0x40005c3	       0xf1f440000	                   nop dword [rax + rax]	       136	setup.c	FUNCTION_4
0x40005c8	          0x803e2f	                    cmp byte [rsi], 0x2f	      1154	cache.h	FUNCTION_96
0x40005cb	            0x74db	                            je 0x40005a8	      1154	cache.h	FUNCTION_96
0x40005cd	            0x31f6	                            xor esi, esi	       129	setup.c	FUNCTION_4	CALL_1
0x40005cf	      0xba00000000	                              mov edx, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40005d4	            0xeb93	                           jmp 0x4000569	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40005d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x40005e0	      0xe800000000	                          call 0x40005e5	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x40005e5	            0x31c0	                            xor eax, eax	       135	setup.c	FUNCTION_4
0x40005e7	            0xebb5	                           jmp 0x400059e	       135	setup.c	FUNCTION_4
canonicalize_ceiling_entry	WHILE,0:IF,4:functions,0:SWITCH,0:ELSE,3:CALL,3:DO,0:FOR,0	43
0x4000260	            0x4154	                                push r12	       841	setup.c	FUNCTION_28
0x4000262	              0x55	                                push rbp	       841	setup.c	FUNCTION_28
0x4000263	              0x53	                                push rbx	       841	setup.c	FUNCTION_28
0x4000264	          0x488b17	                    mov rdx, qword [rdi]	       843	setup.c	FUNCTION_28
0x4000267	           0xfb602	                   movzx eax, byte [rdx]	       845	setup.c	FUNCTION_28	IF_1
0x400026a	            0x84c0	                             test al, al	       845	setup.c	FUNCTION_28	IF_1
0x400026c	            0x744a	                            je 0x40002b8	       845	setup.c	FUNCTION_28	IF_1
0x400026e	            0x3c2f	                            cmp al, 0x2f	      1154	cache.h	FUNCTION_96
0x4000270	            0x740e	                            je 0x4000280	      1154	cache.h	FUNCTION_96
0x4000272	            0x31ed	                            xor ebp, ebp	       849	setup.c	FUNCTION_28	ELSE_1	IF_2
0x4000274	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x4000276	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x4000277	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x4000278	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x400027a	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
0x400027b	       0xf1f440000	                   nop dword [rax + rax]	       862	setup.c	FUNCTION_28
0x4000280	            0x8b06	                    mov eax, dword [rsi]	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000282	      0xbd01000000	                              mov ebp, 1	       852	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000287	            0x85c0	                           test eax, eax	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x4000289	            0x75e9	                           jne 0x4000274	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x400028b	            0x31f6	                            xor esi, esi	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x400028d	          0x4889fb	                            mov rbx, rdi	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000290	          0x4889d7	                            mov rdi, rdx	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000293	      0xe800000000	                          call 0x4000298	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x4000298	          0x4885c0	                           test rax, rax	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x400029b	          0x4989c4	                            mov r12, rax	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x400029e	            0x74d2	                            je 0x4000272	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x40002a0	          0x488b3b	                    mov rdi, qword [rbx]	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x40002a3	      0xe800000000	                          call 0x40002a8	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x40002a8	          0x4c8923	                    mov qword [rbx], r12	       859	setup.c	FUNCTION_28	ELSE_3
0x40002ab	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x40002ad	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x40002ae	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x40002af	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x40002b1	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
0x40002b2	    0x660f1f440000	                    nop word [rax + rax]	       862	setup.c	FUNCTION_28
0x40002b8	            0x31ed	                            xor ebp, ebp	       847	setup.c	FUNCTION_28	IF_1
0x40002ba	    0xc70601000000	                      mov dword [rsi], 1	       846	setup.c	FUNCTION_28	IF_1
0x40002c0	            0x89e8	                            mov eax, ebp	       862	setup.c	FUNCTION_28
0x40002c2	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x40002c3	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x40002c4	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x40002c6	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
discover_git_directory	WHILE,0:IF,5:functions,0:SWITCH,0:ELSE,1:CALL,17:DO,0:FOR,0	246
0x4002260	            0x4157	                                push r15	       982	setup.c	FUNCTION_30
0x4002262	            0x4156	                                push r14	       982	setup.c	FUNCTION_30
0x4002264	            0x4155	                                push r13	       982	setup.c	FUNCTION_30
0x4002266	            0x4154	                                push r12	       982	setup.c	FUNCTION_30
0x4002268	          0x4989fc	                            mov r12, rdi	       982	setup.c	FUNCTION_30
0x400226b	              0x55	                                push rbp	       982	setup.c	FUNCTION_30
0x400226c	              0x53	                                push rbx	       982	setup.c	FUNCTION_30
0x400226d	          0x4889f5	                            mov rbp, rsi	       982	setup.c	FUNCTION_30
0x4002270	    0x4881eca80000	                           sub rsp, 0xa8	       982	setup.c	FUNCTION_30
0x4002277	        0x4c8b7608	                mov r14, qword [rsi + 8]	       984	setup.c	FUNCTION_30
0x400227b	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	setup.c	FUNCTION_30
0x4002284	    0x488984249800	             mov qword [rsp + 0x98], rax	       982	setup.c	FUNCTION_30
0x400228c	            0x31c0	                            xor eax, eax	       982	setup.c	FUNCTION_30
0x400228e	        0x488b4708	                mov rax, qword [rdi + 8]	       985	setup.c	FUNCTION_30
0x4002292	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4002297	    0x48c744241000	               mov qword [rsp + 0x10], 0	       983	setup.c	FUNCTION_30
0x40022a0	    0x48c744241800	               mov qword [rsp + 0x18], 0	       983	setup.c	FUNCTION_30
0x40022a9	    0x48c744242000	               mov qword [rsp + 0x20], 0	       983	setup.c	FUNCTION_30
0x40022b2	    0x48c744243000	               mov qword [rsp + 0x30], 0	       983	setup.c	FUNCTION_30
0x40022bb	    0x48c744243800	               mov qword [rsp + 0x38], 0	       983	setup.c	FUNCTION_30
0x40022c4	    0x48c744244000	               mov qword [rsp + 0x40], 0	       983	setup.c	FUNCTION_30
0x40022cd	      0x4889442408	                mov qword [rsp + 8], rax	       985	setup.c	FUNCTION_30
0x40022d2	      0xe800000000	                          call 0x40022d7	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x40022d7	            0x85c0	                           test eax, eax	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x40022d9	     0xf8521030000	                           jne 0x4002600	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x40022df	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022e4	            0x31d2	                            xor edx, edx	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022e6	          0x4889ee	                            mov rsi, rbp	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022e9	            0x89c3	                            mov ebx, eax	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022eb	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       991	setup.c	FUNCTION_30
0x40022f0	      0xe81bfbffff	   call sym.setup_git_directory_gently_1	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022f5	            0x85c0	                           test eax, eax	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022f7	     0xf8e83030000	                           jle 0x4002680	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x40022fd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4002302	          0x4939cd	                            cmp r13, rcx	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4002305	     0xf8715010000	                            ja 0x4002420	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x400230b	          0x4d89f5	                            mov r13, r14	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x400230e	        0x4c036d10	             add r13, qword [rbp + 0x10]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4002312	      0xbf00000000	                              mov edi, 0	       260	setup.c	FUNCTION_10	CALL_1
0x4002317	      0xe800000000	                          call 0x400231c	       260	setup.c	FUNCTION_10	CALL_1
0x400231c	          0x4885c0	                           test rax, rax	       261	setup.c	FUNCTION_10	IF_1
0x400231f	          0x4989c7	                            mov r15, rax	       260	setup.c	FUNCTION_10	CALL_1
0x4002322	     0xf84b8020000	                            je 0x40025e0	       261	setup.c	FUNCTION_10	IF_1
0x4002328	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x400232b	      0xe800000000	                          call 0x4002330	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002330	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002333	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002336	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002339	      0xe800000000	                          call 0x400233e	       279	strbuf.h	FUNCTION_69	CALL_2
0x400233e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4002343	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_67
0x400234c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x4002352	     0xf8478020000	                            je 0x40025d0	       165	strbuf.h	FUNCTION_67	IF_2
0x4002358	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x400235b	      0x488b542408	                mov rdx, qword [rsp + 8]	      1013	setup.c	FUNCTION_30	CALL_10
0x4002360	      0x4903542410	             add rdx, qword [r12 + 0x10]	      1013	setup.c	FUNCTION_30	CALL_10
0x4002365	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	        90	string3.h	FUNCTION_106	CALL_6
0x400236a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1013	setup.c	FUNCTION_30	CALL_10
0x400236f	            0x31c0	                            xor eax, eax	      1013	setup.c	FUNCTION_30	CALL_10
0x4002371	      0xbe00000000	                              mov esi, 0	      1013	setup.c	FUNCTION_30	CALL_10
0x4002376	      0xe800000000	                          call 0x400237b	      1013	setup.c	FUNCTION_30	CALL_10
0x400237b	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_106	CALL_6
0x400237d	          0x4c89ff	                            mov rdi, r15	        90	string3.h	FUNCTION_106	CALL_6
0x4002380	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_106	CALL_6
0x4002385	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_106	CALL_6
0x4002388	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      1014	setup.c	FUNCTION_30	CALL_11
0x400238d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       494	setup.c	FUNCTION_19	CALL_2
0x4002392	      0xbe01000000	                              mov esi, 1	       494	setup.c	FUNCTION_19	CALL_2
0x4002397	    0xc7442450ffff	     mov dword [rsp + 0x50], 0xffffffff 	       491	setup.c	FUNCTION_19
0x400239f	    0xc7442460ffff	     mov dword [rsp + 0x60], 0xffffffff 	       492	setup.c	FUNCTION_19
0x40023a7	    0xc74424640100	               mov dword [rsp + 0x64], 1	       493	setup.c	FUNCTION_19
0x40023af	      0xe800000000	                          call 0x40023b4	       494	setup.c	FUNCTION_19	CALL_2
0x40023b4	          0x4c89fa	                            mov rdx, r15	       495	setup.c	FUNCTION_19	CALL_3
0x40023b7	          0x4c89ee	                            mov rsi, r13	       495	setup.c	FUNCTION_19	CALL_3
0x40023ba	      0xbf00000000	                              mov edi, 0	       495	setup.c	FUNCTION_19	CALL_3
0x40023bf	      0xe800000000	                          call 0x40023c4	       495	setup.c	FUNCTION_19	CALL_3
0x40023c4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1015	setup.c	FUNCTION_30	CALL_12
0x40023c9	      0xe800000000	                          call 0x40023ce	      1015	setup.c	FUNCTION_30	CALL_12
0x40023ce	      0x448b7c2450	           mov r15d, dword [rsp + 0x50] 	       502	setup.c	FUNCTION_20	IF_1
0x40023d3	        0x4183ff01	                             cmp r15d, 1	       502	setup.c	FUNCTION_20	IF_1
0x40023d7	     0xf8f5b020000	                            jg 0x4002638	       502	setup.c	FUNCTION_20	IF_1
0x40023dd	            0x750c	                           jne 0x40023eb	       508	setup.c	FUNCTION_20	IF_2
0x40023df	        0x8b542478	            mov edx, dword [rsp + 0x78] 	       508	setup.c	FUNCTION_20	IF_2
0x40023e3	            0x85d2	                           test edx, edx	       508	setup.c	FUNCTION_20	IF_2
0x40023e5	     0xf85a5000000	                           jne 0x4002490	       508	setup.c	FUNCTION_20	IF_2
0x40023eb	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      1027	setup.c	FUNCTION_30
0x40023f3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1027	setup.c	FUNCTION_30
0x40023fc	            0x89d8	                            mov eax, ebx	      1027	setup.c	FUNCTION_30
0x40023fe	     0xf8590020000	                           jne 0x4002694	      1027	setup.c	FUNCTION_30
0x4002404	    0x4881c4a80000	                           add rsp, 0xa8	      1027	setup.c	FUNCTION_30
0x400240b	              0x5b	                                 pop rbx	      1027	setup.c	FUNCTION_30
0x400240c	              0x5d	                                 pop rbp	      1027	setup.c	FUNCTION_30
0x400240d	            0x415c	                                 pop r12	      1027	setup.c	FUNCTION_30
0x400240f	            0x415d	                                 pop r13	      1027	setup.c	FUNCTION_30
0x4002411	            0x415e	                                 pop r14	      1027	setup.c	FUNCTION_30
0x4002413	            0x415f	                                 pop r15	      1027	setup.c	FUNCTION_30
0x4002415	              0xc3	                                     ret	      1027	setup.c	FUNCTION_30
0x4002416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1027	setup.c	FUNCTION_30
0x4002420	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4002424	        0x4e8d2c32	                    lea r13, [rdx + r14]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4002428	      0x410fb64500	                   movzx eax, byte [r13]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x400242d	            0x3c2f	                            cmp al, 0x2f	      1154	cache.h	FUNCTION_96
0x400242f	     0xf84ddfeffff	                            je 0x4002312	      1154	cache.h	FUNCTION_96
0x4002435	            0x3c2e	                            cmp al, 0x2e	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4002437	     0xf854b010000	                           jne 0x4002588	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x400243d	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4002442	     0xf8540010000	                           jne 0x4002588	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4002448	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_67	IF_1
0x400244c	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x4002450	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x4002454	          0x4939c6	                            cmp r14, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x4002457	     0xf873c020000	                            ja 0x4002699	       162	strbuf.h	FUNCTION_67	IF_1
0x400245d	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x4002464	        0x4c897508	                mov qword [rbp + 8], r14	       164	strbuf.h	FUNCTION_67
0x4002468	     0xf84fa010000	                            je 0x4002668	       165	strbuf.h	FUNCTION_67	IF_2
0x400246e	      0x41c6450000	                       mov byte [r13], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4002473	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       166	strbuf.h	FUNCTION_67	IF_2
0x4002478	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x400247d	          0x4c89f6	                            mov rsi, r14	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4002480	          0x4889ef	                            mov rdi, rbp	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4002483	      0xe800000000	                          call 0x4002488	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4002488	      0xe97efeffff	                           jmp 0x400230b	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x400248d	           0xf1f00	                         nop dword [rax]	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4002490	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4002495	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x400249a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x400249c	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024a1	      0xe800000000	                          call 0x40024a6	        54	gettext.h	FUNCTION_117
0x40024a6	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_117
0x40024a9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024ac	      0xe800000000	                          call 0x40024b1	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024b1	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024b4	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024b7	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024ba	      0xe800000000	                          call 0x40024bf	       279	strbuf.h	FUNCTION_69	CALL_2
0x40024bf	        0x8b442478	            mov eax, dword [rsp + 0x78] 	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024c3	            0x85c0	                           test eax, eax	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024c5	            0x742e	                            je 0x40024f5	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024c7	          0x4531ff	                          xor r15d, r15d	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024ca	            0x31db	                            xor ebx, ebx	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024cc	         0xf1f4000	                         nop dword [rax]	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024d0	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024d5	      0xbe00000000	                              mov esi, 0	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024da	          0x4c89ef	                            mov rdi, r13	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024dd	          0x83c301	                              add ebx, 1	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024e0	        0x4a8b1438	              mov rdx, qword [rax + r15]	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024e4	            0x31c0	                            xor eax, eax	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024e6	        0x4983c710	                           add r15, 0x10	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024ea	      0xe800000000	                          call 0x40024ef	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x40024ef	        0x395c2478	            cmp dword [rsp + 0x78], ebx 	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024f3	            0x77db	                            ja 0x40024d0	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x40024f5	          0x4c89f6	                            mov rsi, r14	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x40024f8	        0x48037510	             add rsi, qword [rbp + 0x10]	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x40024fc	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4002501	            0x31c0	                            xor eax, eax	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4002503	      0xbf00000000	                              mov edi, 0	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4002508	      0xe800000000	                          call 0x400250d	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x400250d	          0x4c89ef	                            mov rdi, r13	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4002510	      0xe800000000	                          call 0x4002515	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4002515	        0x498b0424	                    mov rax, qword [r12]	       162	strbuf.h	FUNCTION_67	IF_1
0x4002519	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x400251d	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x4002521	      0x4839442408	                cmp qword [rsp + 8], rax	       162	strbuf.h	FUNCTION_67	IF_1
0x4002526	     0xf876d010000	                            ja 0x4002699	       162	strbuf.h	FUNCTION_67	IF_1
0x400252c	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4002531	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       164	strbuf.h	FUNCTION_67
0x4002536	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x400253c	      0x49894c2408	                mov qword [r12 + 8], rcx	       164	strbuf.h	FUNCTION_67
0x4002541	     0xf84d9000000	                            je 0x4002620	       165	strbuf.h	FUNCTION_67	IF_2
0x4002547	        0xc6040800	                 mov byte [rax + rcx], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x400254b	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_67	IF_1
0x400254f	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x4002553	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x4002557	          0x4939c6	                            cmp r14, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x400255a	     0xf8739010000	                            ja 0x4002699	       162	strbuf.h	FUNCTION_67	IF_1
0x4002560	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4002564	        0x4c897508	                mov qword [rbp + 8], r14	       164	strbuf.h	FUNCTION_67
0x4002568	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x400256e	     0xf847c000000	                            je 0x40025f0	       165	strbuf.h	FUNCTION_67	IF_2
0x4002574	      0x42c6043000	                 mov byte [rax + r14], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4002579	      0xbbffffffff	                     mov ebx, 0xffffffff	      1023	setup.c	FUNCTION_30	IF_5
0x400257e	      0xe968feffff	                           jmp 0x40023eb	      1023	setup.c	FUNCTION_30	IF_5
0x4002583	       0xf1f440000	                   nop dword [rax + rax]	      1023	setup.c	FUNCTION_30	IF_5
0x4002588	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1023	setup.c	FUNCTION_30	IF_5
0x400258d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_66
0x4002590	            0x757e	                           jne 0x4002610	       141	strbuf.h	FUNCTION_66
0x4002592	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_68	CALL_2
0x4002597	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_68	CALL_2
0x400259c	      0xe800000000	                          call 0x40025a1	       228	strbuf.h	FUNCTION_68	CALL_2
0x40025a1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       228	strbuf.h	FUNCTION_68	CALL_2
0x40025a6	        0x488d4101	                      lea rax, [rcx + 1]	       229	strbuf.h	FUNCTION_68
0x40025aa	      0x4889442418	             mov qword [rsp + 0x18], rax	       229	strbuf.h	FUNCTION_68
0x40025af	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_68
0x40025b4	        0xc604082f	              mov byte [rax + rcx], 0x2f	       229	strbuf.h	FUNCTION_68
0x40025b8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_68
0x40025bd	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_68
0x40025c2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_68
0x40025c6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_68
0x40025cb	      0xe9a8feffff	                           jmp 0x4002478	       230	strbuf.h	FUNCTION_68
0x40025d0	    0x803d00000000	                cmp byte [0x040025d7], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025d7	     0xf847efdffff	                            je 0x400235b	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025dd	            0xeb4e	                           jmp 0x400262d	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025df	              0x90	                                     nop	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025e0	          0x4c89ee	                            mov rsi, r13	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40025e3	          0x4c89e7	                            mov rdi, r12	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40025e6	      0xe800000000	                          call 0x40025eb	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40025eb	      0xe94efdffff	                           jmp 0x400233e	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40025f0	    0x803d00000000	                cmp byte [0x040025f7], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025f7	            0x7534	                           jne 0x400262d	       168	strbuf.h	FUNCTION_67	CALL_2
0x40025f9	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002600	      0xbbffffffff	                     mov ebx, 0xffffffff	       989	setup.c	FUNCTION_30	IF_1
0x4002605	      0xe9e1fdffff	                           jmp 0x40023eb	       989	setup.c	FUNCTION_30	IF_1
0x400260a	    0x660f1f440000	                    nop word [rax + rax]	       989	setup.c	FUNCTION_30	IF_1
0x4002610	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4002614	          0x4839c1	                            cmp rcx, rax	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4002617	            0x758d	                           jne 0x40025a6	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4002619	      0xe974ffffff	                           jmp 0x4002592	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x400261e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4002620	    0x803d00000000	                cmp byte [0x04002627], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002627	     0xf841effffff	                            je 0x400254b	       168	strbuf.h	FUNCTION_67	CALL_2
0x400262d	      0xe800000000	                          call 0x4002632	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002632	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002638	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x400263d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x400263f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4002644	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x4002649	      0xe800000000	                          call 0x400264e	        54	gettext.h	FUNCTION_117
0x400264e	          0x4489f9	                           mov ecx, r15d	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4002651	          0x4889c6	                            mov rsi, rax	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4002654	      0xba01000000	                              mov edx, 1	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4002659	          0x4c89ef	                            mov rdi, r13	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x400265c	            0x31c0	                            xor eax, eax	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x400265e	      0xe800000000	                          call 0x4002663	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4002663	      0xe98dfeffff	                           jmp 0x40024f5	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4002668	    0x803d00000000	                cmp byte [0x0400266f], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x400266f	     0xf8403feffff	                            je 0x4002478	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002675	            0xebb6	                           jmp 0x400262d	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002677	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_67	CALL_2
0x4002680	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x4002685	      0xbbffffffff	                     mov ebx, 0xffffffff	       994	setup.c	FUNCTION_30	IF_2
0x400268a	      0xe800000000	                          call 0x400268f	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x400268f	      0xe957fdffff	                           jmp 0x40023eb	       994	setup.c	FUNCTION_30	IF_2
0x4002694	      0xe800000000	                          call 0x4002699	      1027	setup.c	FUNCTION_30
0x4002699	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x400269e	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_67	CALL_1
0x40026a0	      0xe800000000	                          call 0x40026a5	       163	strbuf.h	FUNCTION_67	CALL_1
setup_work_tree	WHILE,0:IF,4:functions,0:SWITCH,0:ELSE,0:CALL,7:DO,0:FOR,0	35
0x4001090	    0x8b1500000000	            mov edx, dword [0x04001096] 	       385	setup.c	FUNCTION_16	IF_1
0x4001096	            0x85d2	                           test edx, edx	       385	setup.c	FUNCTION_16	IF_1
0x4001098	            0x7555	                           jne 0x40010ef	       385	setup.c	FUNCTION_16	IF_1
0x400109a	        0x4883ec08	                              sub rsp, 8	       381	setup.c	FUNCTION_16
0x400109e	    0x8b0500000000	            mov eax, dword [0x040010a4] 	       388	setup.c	FUNCTION_16	IF_2
0x40010a4	            0x85c0	                           test eax, eax	       388	setup.c	FUNCTION_16	IF_2
0x40010a6	            0x755d	                           jne 0x4001105	       388	setup.c	FUNCTION_16	IF_2
0x40010a8	      0xe800000000	                          call 0x40010ad	       391	setup.c	FUNCTION_16	CALL_3
0x40010ad	          0x4885c0	                           test rax, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010b0	            0x743f	                            je 0x40010f1	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010b2	          0x4889c7	                            mov rdi, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010b5	      0xe800000000	                          call 0x40010ba	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010ba	            0x85c0	                           test eax, eax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010bc	            0x7533	                           jne 0x40010f1	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x40010be	      0xbf00000000	                              mov edi, 0	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x40010c3	      0xe800000000	                          call 0x40010c8	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x40010c8	          0x4885c0	                           test rax, rax	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x40010cb	            0x7414	                            je 0x40010e1	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x40010cd	      0xba01000000	                              mov edx, 1	       400	setup.c	FUNCTION_16	IF_4
0x40010d2	      0xbe00000000	                              mov esi, 0	       400	setup.c	FUNCTION_16	IF_4
0x40010d7	      0xbf00000000	                              mov edi, 0	       400	setup.c	FUNCTION_16	IF_4
0x40010dc	      0xe800000000	                          call 0x40010e1	       400	setup.c	FUNCTION_16	IF_4
0x40010e1	    0xc70500000000	               mov dword [0x040010eb], 1	       402	setup.c	FUNCTION_16
0x40010eb	        0x4883c408	                              add rsp, 8	       403	setup.c	FUNCTION_16
0x40010ef	            0xf3c3	                                     ret	       403	setup.c	FUNCTION_16
0x40010f1	      0xbf00000000	                              mov edi, 0	       403	setup.c	FUNCTION_16
0x40010f6	      0xe8d5f1ffff	                       call sym._.part.4	       403	setup.c	FUNCTION_16
0x40010fb	          0x4889c7	                            mov rdi, rax	       393	setup.c	FUNCTION_16	CALL_6
0x40010fe	            0x31c0	                            xor eax, eax	       393	setup.c	FUNCTION_16	CALL_6
0x4001100	      0xe800000000	                          call 0x4001105	       393	setup.c	FUNCTION_16	CALL_6
0x4001105	      0xbf00000000	                              mov edi, 0	       393	setup.c	FUNCTION_16	CALL_6
0x400110a	      0xe8c1f1ffff	                       call sym._.part.4	       393	setup.c	FUNCTION_16	CALL_6
0x400110f	          0x4889c7	                            mov rdi, rax	       389	setup.c	FUNCTION_16	CALL_2
0x4001112	            0x31c0	                            xor eax, eax	       389	setup.c	FUNCTION_16	CALL_2
0x4001114	      0xe800000000	                          call 0x4001119	       389	setup.c	FUNCTION_16	CALL_2
daemonize	WHILE,0:IF,1:functions,0:SWITCH,1:ELSE,0:CALL,11:DO,0:FOR,0	62
0x40038a0	        0x4883ec08	                              sub rsp, 8	      1217	setup.c	FUNCTION_37
0x40038a4	      0xe800000000	                          call 0x40038a9	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40038a9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40038ac	     0xf848e000000	                            je 0x4003940	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40038b2	            0x85c0	                           test eax, eax	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40038b4	            0x757a	                           jne 0x4003930	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40038b6	      0xe800000000	                          call 0x40038bb	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x40038bb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x40038be	     0xf84ab000000	                            je 0x400396f	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x40038c4	            0x31ff	                            xor edi, edi	      1232	setup.c	FUNCTION_37	CALL_8
0x40038c6	      0xe800000000	                          call 0x40038cb	      1232	setup.c	FUNCTION_37	CALL_8
0x40038cb	      0xbf01000000	                              mov edi, 1	      1233	setup.c	FUNCTION_37	CALL_9
0x40038d0	      0xe800000000	                          call 0x40038d5	      1233	setup.c	FUNCTION_37	CALL_9
0x40038d5	      0xbf02000000	                              mov edi, 2	      1234	setup.c	FUNCTION_37	CALL_10
0x40038da	      0xe800000000	                          call 0x40038df	      1234	setup.c	FUNCTION_37	CALL_10
0x40038df	            0x31d2	                            xor edx, edx	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x40038e1	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x40038e3	      0xbe02000000	                              mov esi, 2	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x40038e8	      0xbf00000000	                              mov edi, 0	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x40038ed	      0xe800000000	                          call 0x40038f2	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x40038f2	          0x83f801	                              cmp eax, 1	      1208	setup.c	FUNCTION_36	WHILE_1
0x40038f5	            0x7f1a	                            jg 0x4003911	      1208	setup.c	FUNCTION_36	WHILE_1
0x40038f7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1208	setup.c	FUNCTION_36	WHILE_1
0x40038fa	            0x7509	                           jne 0x4003905	      1208	setup.c	FUNCTION_36	WHILE_1
0x40038fc	            0xeb13	                           jmp 0x4003911	      1208	setup.c	FUNCTION_36	WHILE_1
0x40038fe	            0x6690	                                     nop	      1208	setup.c	FUNCTION_36	WHILE_1
0x4003900	          0x83f801	                              cmp eax, 1	      1208	setup.c	FUNCTION_36	WHILE_1
0x4003903	            0x7f0c	                            jg 0x4003911	      1208	setup.c	FUNCTION_36	WHILE_1
0x4003905	            0x89c7	                            mov edi, eax	      1209	setup.c	FUNCTION_36	CALL_2
0x4003907	      0xe800000000	                          call 0x400390c	      1209	setup.c	FUNCTION_36	CALL_2
0x400390c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1208	setup.c	FUNCTION_36	WHILE_1
0x400390f	            0x75ef	                           jne 0x4003900	      1208	setup.c	FUNCTION_36	WHILE_1
0x4003911	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1210	setup.c	FUNCTION_36	IF_1
0x4003914	            0x7445	                            je 0x400395b	      1210	setup.c	FUNCTION_36	IF_1
0x4003916	          0x83f802	                              cmp eax, 2	      1212	setup.c	FUNCTION_36	IF_2
0x4003919	            0x7e07	                           jle 0x4003922	      1212	setup.c	FUNCTION_36	IF_2
0x400391b	            0x89c7	                            mov edi, eax	      1213	setup.c	FUNCTION_36	CALL_5
0x400391d	      0xe800000000	                          call 0x4003922	      1213	setup.c	FUNCTION_36	CALL_5
0x4003922	            0x31c0	                            xor eax, eax	      1238	setup.c	FUNCTION_37
0x4003924	        0x4883c408	                              add rsp, 8	      1238	setup.c	FUNCTION_37
0x4003928	              0xc3	                                     ret	      1238	setup.c	FUNCTION_37
0x4003929	     0xf1f80000000	                         nop dword [rax]	      1238	setup.c	FUNCTION_37
0x4003930	            0x31ff	                            xor edi, edi	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x4003932	      0xe800000000	                          call 0x4003937	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x4003937	    0x660f1f840000	                    nop word [rax + rax]	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x4003940	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x4003942	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4003947	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x400394c	      0xe800000000	                          call 0x4003951	        54	gettext.h	FUNCTION_117
0x4003951	          0x4889c7	                            mov rdi, rax	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4003954	            0x31c0	                            xor eax, eax	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4003956	      0xe800000000	                          call 0x400395b	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x400395b	      0xbf00000000	                              mov edi, 0	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4003960	      0xe86bc9ffff	                       call sym._.part.4	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4003965	          0x4889c7	                            mov rdi, rax	      1211	setup.c	FUNCTION_36	CALL_4
0x4003968	            0x31c0	                            xor eax, eax	      1211	setup.c	FUNCTION_36	CALL_4
0x400396a	      0xe800000000	                          call 0x400396f	      1211	setup.c	FUNCTION_36	CALL_4
0x400396f	      0xbf00000000	                              mov edi, 0	      1211	setup.c	FUNCTION_36	CALL_4
0x4003974	      0xe857c9ffff	                       call sym._.part.4	      1211	setup.c	FUNCTION_36	CALL_4
0x4003979	          0x4889c7	                            mov rdi, rax	      1231	setup.c	FUNCTION_37	CALL_7
0x400397c	            0x31c0	                            xor eax, eax	      1231	setup.c	FUNCTION_37	CALL_7
0x400397e	      0xe800000000	                  call section_end..text	      1231	setup.c	FUNCTION_37	CALL_7
read_gitfile_error_die	WHILE,0:IF,0:functions,0:SWITCH,1:ELSE,0:CALL,13:DO,0:FOR,0	57
0x4001280	              0x55	                                push rbp	       523	setup.c	FUNCTION_21
0x4001281	              0x53	                                push rbx	       523	setup.c	FUNCTION_21
0x4001282	        0x4883ec08	                              sub rsp, 8	       523	setup.c	FUNCTION_21
0x4001286	          0x83ff08	                              cmp edi, 8	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001289	     0xf87b9000000	                            ja 0x4001348	       524	setup.c	FUNCTION_21	SWITCH_1
0x400128f	            0x89ff	                            mov edi, edi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001291	          0x4889f3	                            mov rbx, rsi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001294	    0xff24fd000000	                       jmp qword [rdi*8]	       524	setup.c	FUNCTION_21	SWITCH_1
0x400129b	       0xf1f440000	                   nop dword [rax + rax]	       524	setup.c	FUNCTION_21	SWITCH_1
0x40012a0	        0x4883c408	                              add rsp, 8	       544	setup.c	FUNCTION_21
0x40012a4	              0x5b	                                 pop rbx	       544	setup.c	FUNCTION_21
0x40012a5	              0x5d	                                 pop rbp	       544	setup.c	FUNCTION_21
0x40012a6	              0xc3	                                     ret	       544	setup.c	FUNCTION_21
0x40012a7	    0x660f1f840000	                    nop word [rax + rax]	       544	setup.c	FUNCTION_21
0x40012b0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x40012b5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x40012ba	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x40012bc	      0xe800000000	                          call 0x40012c1	        54	gettext.h	FUNCTION_117
0x40012c1	          0x4889de	                            mov rsi, rbx	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40012c4	          0x4889c7	                            mov rdi, rax	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40012c7	            0x31c0	                            xor eax, eax	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40012c9	      0xe800000000	                          call 0x40012ce	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40012ce	            0x6690	                                     nop	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40012d0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x40012d5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x40012d7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x40012dc	      0xe800000000	                          call 0x40012e1	        54	gettext.h	FUNCTION_117
0x40012e1	          0x4889de	                            mov rsi, rbx	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40012e4	          0x4889c7	                            mov rdi, rax	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40012e7	            0x31c0	                            xor eax, eax	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40012e9	      0xe800000000	                          call 0x40012ee	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40012ee	            0x6690	                                     nop	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40012f0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x40012f5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x40012fa	            0xebbe	                           jmp 0x40012ba	        54	gettext.h	FUNCTION_117
0x40012fc	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_117
0x4001300	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4001305	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x400130a	            0xebae	                           jmp 0x40012ba	        54	gettext.h	FUNCTION_117
0x400130c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_117
0x4001310	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4001315	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x400131a	            0xeb9e	                           jmp 0x40012ba	        54	gettext.h	FUNCTION_117
0x400131c	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_117
0x4001320	          0x4889d5	                            mov rbp, rdx	        54	gettext.h	FUNCTION_117
0x4001323	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x4001328	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x400132a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x400132f	      0xe800000000	                          call 0x4001334	        54	gettext.h	FUNCTION_117
0x4001334	          0x4889ee	                            mov rsi, rbp	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001337	          0x4889c7	                            mov rdi, rax	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x400133a	            0x31c0	                            xor eax, eax	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x400133c	      0xe800000000	                          call 0x4001341	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001341	     0xf1f80000000	                         nop dword [rax]	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001348	      0xbf00000000	                              mov edi, 0	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400134d	            0x31c0	                            xor eax, eax	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400134f	      0xe800000000	                          call 0x4001354	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
verify_non_filename	WHILE,0:IF,3:functions,0:SWITCH,0:ELSE,0:CALL,5:DO,0:FOR,0	45
0x40007e0	              0x55	                                push rbp	       246	setup.c	FUNCTION_9
0x40007e1	              0x53	                                push rbx	       246	setup.c	FUNCTION_9
0x40007e2	          0x4889fd	                            mov rbp, rdi	       246	setup.c	FUNCTION_9
0x40007e5	          0x4889f3	                            mov rbx, rsi	       246	setup.c	FUNCTION_9
0x40007e8	        0x4883ec08	                              sub rsp, 8	       246	setup.c	FUNCTION_9
0x40007ec	    0x8b0500000000	            mov eax, dword [0x040007f2] 	       375	setup.c	FUNCTION_15	IF_1
0x40007f2	            0x85c0	                           test eax, eax	       375	setup.c	FUNCTION_15	IF_1
0x40007f4	            0x7852	                            js 0x4000848	       375	setup.c	FUNCTION_15	IF_1
0x40007f6	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x40007f8	            0x750e	                           jne 0x4000808	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x40007fa	        0x4883c408	                              add rsp, 8	       256	setup.c	FUNCTION_9
0x40007fe	              0x5b	                                 pop rbx	       256	setup.c	FUNCTION_9
0x40007ff	              0x5d	                                 pop rbp	       256	setup.c	FUNCTION_9
0x4000800	              0xc3	                                     ret	       256	setup.c	FUNCTION_9
0x4000801	     0xf1f80000000	                         nop dword [rax]	       256	setup.c	FUNCTION_9
0x4000808	    0x8b0500000000	            mov eax, dword [0x0400080e] 	       368	setup.c	FUNCTION_14	IF_1
0x400080e	            0x85c0	                           test eax, eax	       368	setup.c	FUNCTION_14	IF_1
0x4000810	            0x784e	                            js 0x4000860	       368	setup.c	FUNCTION_14	IF_1
0x4000812	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000814	            0x75e4	                           jne 0x40007fa	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000816	          0x803b2d	                    cmp byte [rbx], 0x2d	       249	setup.c	FUNCTION_9	IF_2
0x4000819	            0x74df	                            je 0x40007fa	       249	setup.c	FUNCTION_9	IF_2
0x400081b	          0x4889de	                            mov rsi, rbx	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x400081e	          0x4889ef	                            mov rdi, rbp	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000821	      0xe800000000	                          call 0x4000826	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000826	            0x85c0	                           test eax, eax	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000828	            0x74d0	                            je 0x40007fa	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x400082a	      0xbf00000000	                              mov edi, 0	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x400082f	      0xe89cfaffff	                       call sym._.part.4	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000834	          0x4889de	                            mov rsi, rbx	       253	setup.c	FUNCTION_9	CALL_5
0x4000837	          0x4889c7	                            mov rdi, rax	       253	setup.c	FUNCTION_9	CALL_5
0x400083a	            0x31c0	                            xor eax, eax	       253	setup.c	FUNCTION_9	CALL_5
0x400083c	      0xe800000000	                          call 0x4000841	       253	setup.c	FUNCTION_9	CALL_5
0x4000841	     0xf1f80000000	                         nop dword [rax]	       253	setup.c	FUNCTION_9	CALL_5
0x4000848	      0xe800000000	                          call 0x400084d	       376	setup.c	FUNCTION_15	CALL_2
0x400084d	          0x4889c7	                            mov rdi, rax	       376	setup.c	FUNCTION_15	CALL_2
0x4000850	      0xe800000000	                          call 0x4000855	       376	setup.c	FUNCTION_15	CALL_2
0x4000855	    0x890500000000	            mov dword [0x0400085b], eax 	       376	setup.c	FUNCTION_15	CALL_2
0x400085b	            0xeb99	                           jmp 0x40007f6	       376	setup.c	FUNCTION_15	CALL_2
0x400085d	           0xf1f00	                         nop dword [rax]	       376	setup.c	FUNCTION_15	CALL_2
0x4000860	      0xe800000000	                          call 0x4000865	       369	setup.c	FUNCTION_14	CALL_2
0x4000865	          0x4889c7	                            mov rdi, rax	       369	setup.c	FUNCTION_14	CALL_2
0x4000868	      0xe800000000	                          call 0x400086d	       369	setup.c	FUNCTION_14	CALL_2
0x400086d	    0x890500000000	            mov dword [0x04000873], eax 	       369	setup.c	FUNCTION_14	CALL_2
0x4000873	            0xeb9d	                           jmp 0x4000812	       369	setup.c	FUNCTION_14	CALL_2
check_repository_format	WHILE,0:IF,0:functions,0:SWITCH,0:ELSE,0:CALL,2:DO,0:FOR,0	152
0x4002df0	            0x4155	                                push r13	      1180	setup.c	FUNCTION_33
0x4002df2	            0x4154	                                push r12	      1180	setup.c	FUNCTION_33
0x4002df4	              0x55	                                push rbp	      1180	setup.c	FUNCTION_33
0x4002df5	              0x53	                                push rbx	      1180	setup.c	FUNCTION_33
0x4002df6	    0x4881ec980000	                           sub rsp, 0x98	      1180	setup.c	FUNCTION_33
0x4002dfd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	setup.c	FUNCTION_33
0x4002e06	    0x488984248800	             mov qword [rsp + 0x88], rax	      1180	setup.c	FUNCTION_33
0x4002e0e	            0x31c0	                            xor eax, eax	      1180	setup.c	FUNCTION_33
0x4002e10	      0xe800000000	                          call 0x4002e15	      1182	setup.c	FUNCTION_33	CALL_2
0x4002e15	      0xbf00000000	                              mov edi, 0	       260	setup.c	FUNCTION_10	CALL_1
0x4002e1a	          0x4989c4	                            mov r12, rax	      1182	setup.c	FUNCTION_33	CALL_2
0x4002e1d	    0x48c704240000	                      mov qword [rsp], 0	       440	setup.c	FUNCTION_18
0x4002e25	    0x48c744240800	                  mov qword [rsp + 8], 0	       440	setup.c	FUNCTION_18
0x4002e2e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       440	setup.c	FUNCTION_18
0x4002e37	    0x48c744242000	               mov qword [rsp + 0x20], 0	       441	setup.c	FUNCTION_18
0x4002e40	    0x48c744242800	               mov qword [rsp + 0x28], 0	       441	setup.c	FUNCTION_18
0x4002e49	    0x48c744243000	               mov qword [rsp + 0x30], 0	       441	setup.c	FUNCTION_18
0x4002e52	      0xe800000000	                          call 0x4002e57	       260	setup.c	FUNCTION_10	CALL_1
0x4002e57	          0x4885c0	                           test rax, rax	       261	setup.c	FUNCTION_10	IF_1
0x4002e5a	     0xf8450010000	                            je 0x4002fb0	       261	setup.c	FUNCTION_10	IF_1
0x4002e60	          0x4889c3	                            mov rbx, rax	       261	setup.c	FUNCTION_10	IF_1
0x4002e63	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e66	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e69	      0xe800000000	                          call 0x4002e6e	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e6e	    0x41bc01000000	                             mov r12d, 1	       263	setup.c	FUNCTION_10	IF_1
0x4002e74	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e77	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e7a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e7d	      0xe800000000	                          call 0x4002e82	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e82	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	        90	string3.h	FUNCTION_106	CALL_6
0x4002e87	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e8c	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e8f	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e94	      0xe800000000	                          call 0x4002e99	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002e99	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_106	CALL_6
0x4002e9b	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_106	CALL_6
0x4002ea0	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_106	CALL_6
0x4002ea3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_106	CALL_6
0x4002ea6	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       446	setup.c	FUNCTION_18	CALL_3
0x4002eab	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       494	setup.c	FUNCTION_19	CALL_2
0x4002eaf	      0xbe01000000	                              mov esi, 1	       494	setup.c	FUNCTION_19	CALL_2
0x4002eb4	    0xc7442440ffff	     mov dword [rsp + 0x40], 0xffffffff 	       491	setup.c	FUNCTION_19
0x4002ebc	    0xc7442450ffff	     mov dword [rsp + 0x50], 0xffffffff 	       492	setup.c	FUNCTION_19
0x4002ec4	    0xc74424540100	               mov dword [rsp + 0x54], 1	       493	setup.c	FUNCTION_19
0x4002ecc	      0xe800000000	                          call 0x4002ed1	       494	setup.c	FUNCTION_19	CALL_2
0x4002ed1	          0x4889da	                            mov rdx, rbx	       495	setup.c	FUNCTION_19	CALL_3
0x4002ed4	          0x4c89ee	                            mov rsi, r13	       495	setup.c	FUNCTION_19	CALL_3
0x4002ed7	      0xbf00000000	                              mov edi, 0	       495	setup.c	FUNCTION_19	CALL_3
0x4002edc	      0xe800000000	                          call 0x4002ee1	       495	setup.c	FUNCTION_19	CALL_3
0x4002ee1	          0x4889ef	                            mov rdi, rbp	       447	setup.c	FUNCTION_18	CALL_4
0x4002ee4	      0xe800000000	                          call 0x4002ee9	       447	setup.c	FUNCTION_18	CALL_4
0x4002ee9	        0x8b6c2440	            mov ebp, dword [rsp + 0x40] 	       454	setup.c	FUNCTION_18	IF_1
0x4002eed	            0x85ed	                           test ebp, ebp	       454	setup.c	FUNCTION_18	IF_1
0x4002eef	     0xf8883000000	                            js 0x4002f78	       454	setup.c	FUNCTION_18	IF_1
0x4002ef5	          0x83fd01	                              cmp ebp, 1	       502	setup.c	FUNCTION_20	IF_1
0x4002ef8	     0xf8f72010000	                            jg 0x4003070	       502	setup.c	FUNCTION_20	IF_1
0x4002efe	            0x750c	                           jne 0x4002f0c	       508	setup.c	FUNCTION_20	IF_2
0x4002f00	        0x8b542468	            mov edx, dword [rsp + 0x68] 	       508	setup.c	FUNCTION_20	IF_2
0x4002f04	            0x85d2	                           test edx, edx	       508	setup.c	FUNCTION_20	IF_2
0x4002f06	     0xf85c4000000	                           jne 0x4002fd0	       508	setup.c	FUNCTION_20	IF_2
0x4002f0c	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       467	setup.c	FUNCTION_18
0x4002f10	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       469	setup.c	FUNCTION_18	CALL_9
0x4002f14	            0x31f6	                            xor esi, esi	       469	setup.c	FUNCTION_18	CALL_9
0x4002f16	    0x890500000000	            mov dword [0x04002f1c], eax 	       467	setup.c	FUNCTION_18
0x4002f1c	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       468	setup.c	FUNCTION_18
0x4002f21	    0x488905000000	            mov qword [0x04002f28], rax 	       468	setup.c	FUNCTION_18
0x4002f28	      0xe800000000	                          call 0x4002f2d	       469	setup.c	FUNCTION_18	CALL_9
0x4002f2d	          0x4585e4	                         test r12d, r12d	       470	setup.c	FUNCTION_18	IF_4
0x4002f30	     0xf851a010000	                           jne 0x4003050	       470	setup.c	FUNCTION_18	IF_4
0x4002f36	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4002f3a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4002f3d	            0x740f	                            je 0x4002f4e	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4002f3f	          0x83f801	                              cmp eax, 1	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4002f42	    0x890500000000	            mov dword [0x04002f48], eax 	       472	setup.c	FUNCTION_18	IF_4	IF_5
0x4002f48	     0xf8412010000	                            je 0x4003060	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4002f4e	    0x48837c245800	               cmp qword [rsp + 0x58], 0	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4002f54	            0x7422	                            je 0x4002f78	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4002f56	    0x488b3d000000	            mov rdi, qword [0x04002f5d] 	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x4002f5d	      0xe800000000	                          call 0x4002f62	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x4002f62	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x4002f67	    0xc70500000000	     mov dword [0x04002f71], 0xffffffff 	       479	setup.c	FUNCTION_18	IF_4	IF_7
0x4002f71	    0x488905000000	            mov qword [0x04002f78], rax 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x4002f78	    0x488b05000000	            mov rax, qword [0x04002f7f] 	      1183	setup.c	FUNCTION_33
0x4002f7f	    0xc70001000000	                      mov dword [rax], 1	      1183	setup.c	FUNCTION_33
0x4002f85	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1184	setup.c	FUNCTION_33
0x4002f8d	    0x644833042528	                xor rax, qword fs:[0x28]	      1184	setup.c	FUNCTION_33
0x4002f96	     0xf85fd000000	                           jne 0x4003099	      1184	setup.c	FUNCTION_33
0x4002f9c	    0x4881c4980000	                           add rsp, 0x98	      1184	setup.c	FUNCTION_33
0x4002fa3	              0x5b	                                 pop rbx	      1184	setup.c	FUNCTION_33
0x4002fa4	              0x5d	                                 pop rbp	      1184	setup.c	FUNCTION_33
0x4002fa5	            0x415c	                                 pop r12	      1184	setup.c	FUNCTION_33
0x4002fa7	            0x415d	                                 pop r13	      1184	setup.c	FUNCTION_33
0x4002fa9	              0xc3	                                     ret	      1184	setup.c	FUNCTION_33
0x4002faa	    0x660f1f440000	                    nop word [rax + rax]	      1184	setup.c	FUNCTION_33
0x4002fb0	          0x4c89e6	                            mov rsi, r12	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fb3	          0x4889e7	                            mov rdi, rsp	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fb6	          0x4889e5	                            mov rbp, rsp	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fb9	      0xe800000000	                          call 0x4002fbe	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fbe	          0x4189c4	                           mov r12d, eax	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fc1	      0xe9bcfeffff	                           jmp 0x4002e82	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4002fd0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4002fd5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x4002fda	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x4002fdc	      0xe800000000	                          call 0x4002fe1	        54	gettext.h	FUNCTION_117
0x4002fe1	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002fe4	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_117
0x4002fe7	      0xe800000000	                          call 0x4002fec	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002fec	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002ff1	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002ff4	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002ff7	      0xe800000000	                          call 0x4002ffc	       279	strbuf.h	FUNCTION_69	CALL_2
0x4002ffc	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003000	            0x85c0	                           test eax, eax	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003002	            0x7433	                            je 0x4003037	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003004	            0x31ed	                            xor ebp, ebp	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003006	            0x31db	                            xor ebx, ebx	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003008	     0xf1f84000000	                   nop dword [rax + rax]	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003010	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4003015	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x400301a	      0xbe00000000	                              mov esi, 0	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x400301f	          0x83c301	                              add ebx, 1	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003022	        0x488b1428	              mov rdx, qword [rax + rbp]	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4003026	            0x31c0	                            xor eax, eax	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4003028	        0x4883c510	                           add rbp, 0x10	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x400302c	      0xe800000000	                          call 0x4003031	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4003031	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003035	            0x77d9	                            ja 0x4003010	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4003037	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x400303c	      0xbf00000000	                              mov edi, 0	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4003041	            0x31c0	                            xor eax, eax	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4003043	      0xe800000000	                          call 0x4003048	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4003048	     0xf1f84000000	                   nop dword [rax + rax]	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4003050	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4003055	      0xe800000000	                          call 0x400305a	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x400305a	      0xe919ffffff	                           jmp 0x4002f78	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x400305f	              0x90	                                     nop	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4003060	    0xc70500000000	     mov dword [0x0400306a], 0xffffffff 	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x400306a	      0xe9dffeffff	                           jmp 0x4002f4e	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x400306f	              0x90	                                     nop	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4003070	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_117
0x4003072	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_117
0x4003077	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_117
0x400307c	      0xe800000000	                          call 0x4003081	        54	gettext.h	FUNCTION_117
0x4003081	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003086	          0x4889c6	                            mov rsi, rax	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003089	            0x89e9	                            mov ecx, ebp	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x400308b	      0xba01000000	                              mov edx, 1	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003090	            0x31c0	                            xor eax, eax	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003092	      0xe800000000	                          call 0x4003097	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003097	            0xeb9e	                           jmp 0x4003037	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4003099	      0xe800000000	                          call 0x400309e	      1184	setup.c	FUNCTION_33
is_git_directory	WHILE,0:IF,5:functions,0:SWITCH,0:ELSE,1:CALL,15:DO,0:FOR,0	150
0x4000da0	              0x55	                                push rbp	       310	setup.c	FUNCTION_12
0x4000da1	              0x53	                                push rbx	       310	setup.c	FUNCTION_12
0x4000da2	          0x4889fb	                            mov rbx, rdi	       310	setup.c	FUNCTION_12
0x4000da5	        0x4883ec28	                           sub rsp, 0x28	       310	setup.c	FUNCTION_12
0x4000da9	    0x64488b042528	                mov rax, qword fs:[0x28]	       310	setup.c	FUNCTION_12
0x4000db2	      0x4889442418	             mov qword [rsp + 0x18], rax	       310	setup.c	FUNCTION_12
0x4000db7	            0x31c0	                            xor eax, eax	       310	setup.c	FUNCTION_12
0x4000db9	    0x48c704240000	                      mov qword [rsp], 0	       311	setup.c	FUNCTION_12
0x4000dc1	    0x48c744240800	                  mov qword [rsp + 8], 0	       311	setup.c	FUNCTION_12
0x4000dca	    0x48c744241000	               mov qword [rsp + 0x10], 0	       311	setup.c	FUNCTION_12
0x4000dd3	      0xe800000000	                          call 0x4000dd8	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000dd8	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ddb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000dde	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000de1	      0xe800000000	                          call 0x4000de6	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000de6	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_74	IF_1
0x4000deb	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_74	IF_1
0x4000dee	            0x7441	                            je 0x4000e31	       595	strbuf.h	FUNCTION_74	IF_1
0x4000df0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_74	IF_1
0x4000df5	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_74	IF_1
0x4000dfa	            0x7435	                            je 0x4000e31	       595	strbuf.h	FUNCTION_74	IF_1
0x4000dfc	        0x488b0c24	                    mov rcx, qword [rsp]	       595	strbuf.h	FUNCTION_74	IF_1
0x4000e00	          0x4885c9	                           test rcx, rcx	       141	strbuf.h	FUNCTION_66
0x4000e03	     0xf8457010000	                            je 0x4000f60	       141	strbuf.h	FUNCTION_66
0x4000e09	        0x4883e901	                              sub rcx, 1	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4000e0d	          0x4839c8	                            cmp rax, rcx	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4000e10	     0xf844a010000	                            je 0x4000f60	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0x4000e16	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_68
0x4000e1a	      0x48894c2408	                mov qword [rsp + 8], rcx	       229	strbuf.h	FUNCTION_68
0x4000e1f	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_68
0x4000e23	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_68
0x4000e28	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_68
0x4000e2d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_68
0x4000e31	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000e36	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000e3b	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000e3e	      0xe800000000	                          call 0x4000e43	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000e43	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000e48	      0xe800000000	                          call 0x4000e4d	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000e4d	            0x85c0	                           test eax, eax	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000e4f	            0x742f	                            je 0x4000e80	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000e51	            0x31db	                            xor ebx, ebx	       312	setup.c	FUNCTION_12
0x4000e53	          0x4889e7	                            mov rdi, rsp	       345	setup.c	FUNCTION_12	CALL_15
0x4000e56	      0xe800000000	                          call 0x4000e5b	       345	setup.c	FUNCTION_12	CALL_15
0x4000e5b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       347	setup.c	FUNCTION_12
0x4000e60	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	setup.c	FUNCTION_12
0x4000e69	            0x89d8	                            mov eax, ebx	       347	setup.c	FUNCTION_12
0x4000e6b	     0xf85a5010000	                           jne 0x4001016	       347	setup.c	FUNCTION_12
0x4000e71	        0x4883c428	                           add rsp, 0x28	       347	setup.c	FUNCTION_12
0x4000e75	              0x5b	                                 pop rbx	       347	setup.c	FUNCTION_12
0x4000e76	              0x5d	                                 pop rbp	       347	setup.c	FUNCTION_12
0x4000e77	              0xc3	                                     ret	       347	setup.c	FUNCTION_12
0x4000e78	     0xf1f84000000	                   nop dword [rax + rax]	       347	setup.c	FUNCTION_12
0x4000e80	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4000e85	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_67
0x4000e8e	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x4000e94	     0xf8406010000	                            je 0x4000fa0	       165	strbuf.h	FUNCTION_67	IF_2
0x4000e9a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4000e9d	      0xbf00000000	                              mov edi, 0	       260	setup.c	FUNCTION_10	CALL_1
0x4000ea2	      0xe800000000	                          call 0x4000ea7	       260	setup.c	FUNCTION_10	CALL_1
0x4000ea7	          0x4885c0	                           test rax, rax	       261	setup.c	FUNCTION_10	IF_1
0x4000eaa	          0x4889c5	                            mov rbp, rax	       260	setup.c	FUNCTION_10	CALL_1
0x4000ead	     0xf84dd000000	                            je 0x4000f90	       261	setup.c	FUNCTION_10	IF_1
0x4000eb3	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000eb6	      0xe800000000	                          call 0x4000ebb	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ebb	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ebe	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ec1	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ec4	      0xe800000000	                          call 0x4000ec9	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000ec9	      0xbf00000000	                              mov edi, 0	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ece	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       324	setup.c	FUNCTION_12
0x4000ed3	      0xe800000000	                          call 0x4000ed8	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ed8	          0x4885c0	                           test rax, rax	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000edb	     0xf84cf000000	                            je 0x4000fb0	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ee1	      0xbf00000000	                              mov edi, 0	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ee6	      0xe800000000	                          call 0x4000eeb	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000eeb	      0xbe01000000	                              mov esi, 1	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ef0	          0x4889c7	                            mov rdi, rax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ef3	      0xe800000000	                          call 0x4000ef8	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ef8	            0x85c0	                           test eax, eax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000efa	     0xf8551ffffff	                           jne 0x4000e51	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000f00	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_67	IF_1
0x4000f04	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x4000f08	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x4000f0c	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x4000f0f	     0xf8706010000	                            ja 0x400101b	       162	strbuf.h	FUNCTION_67	IF_1
0x4000f15	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4000f1a	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_67
0x4000f1f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x4000f25	            0x7459	                            je 0x4000f80	       165	strbuf.h	FUNCTION_67	IF_2
0x4000f27	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4000f2b	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000f30	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000f35	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000f38	      0xe800000000	                          call 0x4000f3d	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000f3d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000f42	      0xbe01000000	                              mov esi, 1	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000f47	            0x31db	                            xor ebx, ebx	       312	setup.c	FUNCTION_12
0x4000f49	      0xe800000000	                          call 0x4000f4e	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000f4e	            0x85c0	                           test eax, eax	       312	setup.c	FUNCTION_12
0x4000f50	           0xf94c3	                                 sete bl	       312	setup.c	FUNCTION_12
0x4000f53	      0xe9fbfeffff	                           jmp 0x4000e53	       312	setup.c	FUNCTION_12
0x4000f58	     0xf1f84000000	                   nop dword [rax + rax]	       312	setup.c	FUNCTION_12
0x4000f60	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f65	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f68	      0xe800000000	                          call 0x4000f6d	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f6d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f72	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f77	      0xe99afeffff	                           jmp 0x4000e16	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f7c	         0xf1f4000	                         nop dword [rax]	       228	strbuf.h	FUNCTION_68	CALL_2
0x4000f80	    0x803d00000000	                cmp byte [0x04000f87], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000f87	            0x74a2	                            je 0x4000f2b	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000f89	      0xe983000000	                           jmp 0x4001011	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000f8e	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000f90	          0x4889de	                            mov rsi, rbx	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4000f93	          0x4889e7	                            mov rdi, rsp	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4000f96	      0xe800000000	                          call 0x4000f9b	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4000f9b	      0xe929ffffff	                           jmp 0x4000ec9	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x4000fa0	    0x803d00000000	                cmp byte [0x04000fa7], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000fa7	     0xf84f0feffff	                            je 0x4000e9d	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000fad	            0xeb62	                           jmp 0x4001011	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000faf	              0x90	                                     nop	       168	strbuf.h	FUNCTION_67	CALL_2
0x4000fb0	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_67	IF_1
0x4000fb4	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x4000fb8	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_67	IF_1
0x4000fbc	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x4000fbf	            0x775a	                            ja 0x400101b	       162	strbuf.h	FUNCTION_67	IF_1
0x4000fc1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0x4000fc6	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_67
0x4000fcb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0x4000fd1	            0x7435	                            je 0x4001008	       165	strbuf.h	FUNCTION_67	IF_2
0x4000fd3	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_67	IF_2
0x4000fd7	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000fdc	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000fe1	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000fe4	      0xe800000000	                          call 0x4000fe9	       279	strbuf.h	FUNCTION_69	CALL_2
0x4000fe9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000fee	      0xbe01000000	                              mov esi, 1	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000ff3	      0xe800000000	                          call 0x4000ff8	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000ff8	            0x85c0	                           test eax, eax	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000ffa	     0xf8400ffffff	                            je 0x4000f00	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4001000	      0xe94cfeffff	                           jmp 0x4000e51	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4001005	           0xf1f00	                         nop dword [rax]	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4001008	    0x803d00000000	                cmp byte [0x0400100f], 0	       168	strbuf.h	FUNCTION_67	CALL_2
0x400100f	            0x74c6	                            je 0x4000fd7	       168	strbuf.h	FUNCTION_67	CALL_2
0x4001011	      0xe800000000	                          call 0x4001016	       168	strbuf.h	FUNCTION_67	CALL_2
0x4001016	      0xe800000000	                          call 0x400101b	       347	setup.c	FUNCTION_12
0x400101b	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x4001020	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_67	CALL_1
0x4001022	      0xe800000000	                          call 0x4001027	       163	strbuf.h	FUNCTION_67	CALL_1
