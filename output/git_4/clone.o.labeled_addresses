add_one_reference	ELSE,2:CALL,8:functions,0:WHILE,0:SWITCH,0:IF,2:DO,0:FOR,0	66
0x4000100	            0x4154	                                push r12	       320	clone.c	FUNCTION_6
0x4000102	              0x55	                                push rbp	       320	clone.c	FUNCTION_6
0x4000103	          0x4889fd	                            mov rbp, rdi	       320	clone.c	FUNCTION_6
0x4000106	              0x53	                                push rbx	       320	clone.c	FUNCTION_6
0x4000107	          0x4989f4	                            mov r12, rsi	       320	clone.c	FUNCTION_6
0x400010a	        0x4883ec40	                           sub rsp, 0x40	       320	clone.c	FUNCTION_6
0x400010e	          0x488b3f	                    mov rdi, qword [rdi]	       323	clone.c	FUNCTION_6	CALL_1
0x4000111	          0x4889e6	                            mov rsi, rsp	       323	clone.c	FUNCTION_6	CALL_1
0x4000114	    0x48c704240000	                      mov qword [rsp], 0	       321	clone.c	FUNCTION_6
0x400011c	    0x48c744240800	                  mov qword [rsp + 8], 0	       321	clone.c	FUNCTION_6
0x4000125	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	clone.c	FUNCTION_6
0x400012e	      0x4889442438	             mov qword [rsp + 0x38], rax	       320	clone.c	FUNCTION_6
0x4000133	            0x31c0	                            xor eax, eax	       320	clone.c	FUNCTION_6
0x4000135	    0x48c744241000	               mov qword [rsp + 0x10], 0	       321	clone.c	FUNCTION_6
0x400013e	      0xe800000000	                          call 0x4000143	       323	clone.c	FUNCTION_6	CALL_1
0x4000143	          0x4885c0	                           test rax, rax	       325	clone.c	FUNCTION_6	IF_1
0x4000146	          0x4889c3	                            mov rbx, rax	       323	clone.c	FUNCTION_6	CALL_1
0x4000149	            0x7475	                            je 0x40001c0	       325	clone.c	FUNCTION_6	IF_1
0x400014b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000150	          0x4889c2	                            mov rdx, rax	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000153	      0xbe00000000	                              mov esi, 0	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x4000158	            0x31c0	                            xor eax, eax	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x400015a	    0x48c744242000	               mov qword [rsp + 0x20], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x4000163	    0x48c744242800	               mov qword [rsp + 0x28], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x400016c	    0x48c744243000	               mov qword [rsp + 0x30], 0	       333	clone.c	FUNCTION_6	ELSE_2
0x4000175	      0xe800000000	                          call 0x400017a	       334	clone.c	FUNCTION_6	ELSE_2	CALL_4
0x400017a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       335	clone.c	FUNCTION_6	ELSE_2	CALL_5
0x400017f	      0xe800000000	                          call 0x4000184	       335	clone.c	FUNCTION_6	ELSE_2	CALL_5
0x4000184	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       336	clone.c	FUNCTION_6	ELSE_2	CALL_6
0x4000189	      0xe800000000	                          call 0x400018e	       336	clone.c	FUNCTION_6	ELSE_2	CALL_6
0x400018e	          0x4889e7	                            mov rdi, rsp	       339	clone.c	FUNCTION_6	CALL_7
0x4000191	      0xe800000000	                          call 0x4000196	       339	clone.c	FUNCTION_6	CALL_7
0x4000196	          0x4889df	                            mov rdi, rbx	       340	clone.c	FUNCTION_6	CALL_8
0x4000199	      0xe800000000	                          call 0x400019e	       340	clone.c	FUNCTION_6	CALL_8
0x400019e	            0x31c0	                            xor eax, eax	       342	clone.c	FUNCTION_6
0x40001a0	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       342	clone.c	FUNCTION_6
0x40001a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       342	clone.c	FUNCTION_6
0x40001ae	            0x7550	                           jne 0x4000200	       342	clone.c	FUNCTION_6
0x40001b0	        0x4883c440	                           add rsp, 0x40	       342	clone.c	FUNCTION_6
0x40001b4	              0x5b	                                 pop rbx	       342	clone.c	FUNCTION_6
0x40001b5	              0x5d	                                 pop rbp	       342	clone.c	FUNCTION_6
0x40001b6	            0x415c	                                 pop r12	       342	clone.c	FUNCTION_6
0x40001b8	              0xc3	                                     ret	       342	clone.c	FUNCTION_6
0x40001b9	     0xf1f80000000	                         nop dword [rax]	       342	clone.c	FUNCTION_6
0x40001c0	        0x418b0424	                    mov eax, dword [r12]	       326	clone.c	FUNCTION_6	IF_1	IF_2
0x40001c4	            0x85c0	                           test eax, eax	       326	clone.c	FUNCTION_6	IF_1	IF_2
0x40001c6	            0x753d	                           jne 0x4000205	       326	clone.c	FUNCTION_6	IF_1	IF_2
0x40001c8	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       329	clone.c	FUNCTION_6	IF_1	ELSE_1
0x40001cd	        0x488b6d00	                    mov rbp, qword [rbp]	       329	clone.c	FUNCTION_6	IF_1	ELSE_1
0x40001d1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_29
0x40001d3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_29
0x40001d8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_29
0x40001dd	      0xe800000000	                          call 0x40001e2	        54	gettext.h	FUNCTION_29
0x40001e2	    0x488b3d000000	            mov rdi, qword [0x040001e9] 	        97	stdio2.h	CALL_42
0x40001e9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_42
0x40001ec	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_42
0x40001ef	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_42
0x40001f2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_42
0x40001f7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_42
0x40001f9	      0xe800000000	                          call 0x40001fe	        97	stdio2.h	CALL_42
0x40001fe	            0xeb8e	                           jmp 0x400018e	        97	stdio2.h	CALL_42
0x4000200	      0xe800000000	                          call 0x4000205	       342	clone.c	FUNCTION_6
0x4000205	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x400020a	      0xbf00000000	                              mov edi, 0	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x400020f	            0x31c0	                            xor eax, eax	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	       327	clone.c	FUNCTION_6	IF_1	CALL_2
write_one_config	ELSE,0:CALL,1:functions,0:WHILE,0:SWITCH,0:IF,0:DO,0:FOR,0	6
0x4000040	          0x4885f6	                           test rsi, rsi	       790	clone.c	FUNCTION_21	CALL_1
0x4000043	      0xb800000000	                              mov eax, 0	       790	clone.c	FUNCTION_21	CALL_1
0x4000048	      0xba01000000	                              mov edx, 1	       790	clone.c	FUNCTION_21	CALL_1
0x400004d	        0x480f44f0	                          cmove rsi, rax	       790	clone.c	FUNCTION_21	CALL_1
0x4000051	            0x31c9	                            xor ecx, ecx	       790	clone.c	FUNCTION_21	CALL_1
0x4000053	      0xe900000000	                           jmp 0x4000058	       790	clone.c	FUNCTION_21	CALL_1
remove_junk_on_signal	ELSE,0:CALL,3:functions,0:WHILE,0:SWITCH,0:IF,0:DO,0:FOR,0	78
0x4000640	            0x4154	                                push r12	       522	clone.c	FUNCTION_12
0x4000642	              0x55	                                push rbp	       522	clone.c	FUNCTION_12
0x4000643	              0x53	                                push rbx	       522	clone.c	FUNCTION_12
0x4000644	            0x89fb	                            mov ebx, edi	       522	clone.c	FUNCTION_12
0x4000646	        0x4883ec20	                           sub rsp, 0x20	       522	clone.c	FUNCTION_12
0x400064a	    0x64488b042528	                mov rax, qword fs:[0x28]	       522	clone.c	FUNCTION_12
0x4000653	      0x4889442418	             mov qword [rsp + 0x18], rax	       522	clone.c	FUNCTION_12
0x4000658	            0x31c0	                            xor eax, eax	       522	clone.c	FUNCTION_12
0x400065a	    0x8b0500000000	            mov eax, dword [0x04000660] 	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000660	    0x48c704240000	                      mov qword [rsp], 0	       496	clone.c	FUNCTION_11
0x4000668	    0x48c744240800	                  mov qword [rsp + 8], 0	       496	clone.c	FUNCTION_11
0x4000671	    0x48c744241000	               mov qword [rsp + 0x10], 0	       496	clone.c	FUNCTION_11
0x400067a	          0x83f801	                              cmp eax, 1	       498	clone.c	FUNCTION_11	SWITCH_1
0x400067d	     0xf84c5000000	                            je 0x4000748	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000683	          0x83f802	                              cmp eax, 2	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000686	            0x7530	                           jne 0x40006b8	       498	clone.c	FUNCTION_11	SWITCH_1
0x4000688	            0x89df	                            mov edi, ebx	       524	clone.c	FUNCTION_12	CALL_2
0x400068a	      0xe800000000	                          call 0x400068f	       524	clone.c	FUNCTION_12	CALL_2
0x400068f	            0x89df	                            mov edi, ebx	       525	clone.c	FUNCTION_12	CALL_3
0x4000691	      0xe800000000	                          call 0x4000696	       525	clone.c	FUNCTION_12	CALL_3
0x4000696	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       526	clone.c	FUNCTION_12
0x400069b	    0x644833042528	                xor rax, qword fs:[0x28]	       526	clone.c	FUNCTION_12
0x40006a4	     0xf85d4000000	                           jne 0x400077e	       526	clone.c	FUNCTION_12
0x40006aa	        0x4883c420	                           add rsp, 0x20	       526	clone.c	FUNCTION_12
0x40006ae	              0x5b	                                 pop rbx	       526	clone.c	FUNCTION_12
0x40006af	              0x5d	                                 pop rbp	       526	clone.c	FUNCTION_12
0x40006b0	            0x415c	                                 pop r12	       526	clone.c	FUNCTION_12
0x40006b2	              0xc3	                                     ret	       526	clone.c	FUNCTION_12
0x40006b3	       0xf1f440000	                   nop dword [rax + rax]	       526	clone.c	FUNCTION_12
0x40006b8	    0x4c8b25000000	            mov r12, qword [0x040006bf] 	       509	clone.c	FUNCTION_11	IF_1
0x40006bf	          0x4889e5	                            mov rbp, rsp	       509	clone.c	FUNCTION_11	IF_1
0x40006c2	          0x4d85e4	                           test r12, r12	       509	clone.c	FUNCTION_11	IF_1
0x40006c5	            0x7440	                            je 0x4000707	       509	clone.c	FUNCTION_11	IF_1
0x40006c7	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006ca	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006cd	      0xe800000000	                          call 0x40006d2	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006d2	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006d5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006d8	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006db	      0xe800000000	                          call 0x40006e0	       279	strbuf.h	FUNCTION_79	CALL_2
0x40006e0	    0x8b3500000000	            mov esi, dword [0x040006e6] 	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x40006e6	          0x4889e7	                            mov rdi, rsp	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x40006e9	      0xe800000000	                          call 0x40006ee	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x40006ee	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_77	IF_2
0x40006f3	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_77
0x40006fc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_77	IF_2
0x4000702	            0x746c	                            je 0x4000770	       165	strbuf.h	FUNCTION_77	IF_2
0x4000704	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_77	IF_2
0x4000707	    0x4c8b25000000	            mov r12, qword [0x0400070e] 	       514	clone.c	FUNCTION_11	IF_2
0x400070e	          0x4d85e4	                           test r12, r12	       514	clone.c	FUNCTION_11	IF_2
0x4000711	            0x7424	                            je 0x4000737	       514	clone.c	FUNCTION_11	IF_2
0x4000713	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000716	      0xe800000000	                          call 0x400071b	       279	strbuf.h	FUNCTION_79	CALL_2
0x400071b	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_79	CALL_2
0x400071e	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000721	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000724	      0xe800000000	                          call 0x4000729	       279	strbuf.h	FUNCTION_79	CALL_2
0x4000729	    0x8b3500000000	            mov esi, dword [0x0400072f] 	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x400072f	          0x4889ef	                            mov rdi, rbp	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x4000732	      0xe800000000	                          call 0x4000737	       516	clone.c	FUNCTION_11	IF_2	CALL_6
0x4000737	          0x4889ef	                            mov rdi, rbp	       518	clone.c	FUNCTION_11	CALL_7
0x400073a	      0xe800000000	                          call 0x400073f	       518	clone.c	FUNCTION_11	CALL_7
0x400073f	      0xe944ffffff	                           jmp 0x4000688	       518	clone.c	FUNCTION_11	CALL_7
0x4000744	         0xf1f4000	                         nop dword [rax]	       518	clone.c	FUNCTION_11	CALL_7
0x4000748	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_29
0x400074a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_29
0x400074f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_29
0x4000754	      0xe800000000	                          call 0x4000759	        54	gettext.h	FUNCTION_29
0x4000759	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x400075e	          0x4889c6	                            mov rsi, rax	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000761	            0x31c0	                            xor eax, eax	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000763	      0xe800000000	                          call 0x4000768	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000768	      0xe91bffffff	                           jmp 0x4000688	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x400076d	           0xf1f00	                         nop dword [rax]	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x4000770	    0x803d00000000	                cmp byte [0x04000777], 0	       168	strbuf.h	FUNCTION_77	CALL_2
0x4000777	            0x748e	                            je 0x4000707	       168	strbuf.h	FUNCTION_77	CALL_2
0x4000779	      0xe800000000	                          call 0x400077e	       168	strbuf.h	FUNCTION_77	CALL_2
0x400077e	      0xe800000000	                          call 0x4000783	       526	clone.c	FUNCTION_12
iterate_ref_map	ELSE,0:CALL,1:functions,0:WHILE,1:SWITCH,0:IF,1:DO,0:FOR,0	24
0x4000060	          0x488b17	                    mov rdx, qword [rdi]	       628	clone.c	FUNCTION_17
0x4000063	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_17	IF_1
0x4000068	          0x4885d2	                           test rdx, rdx	       634	clone.c	FUNCTION_17	WHILE_1
0x400006b	            0x750b	                           jne 0x4000078	       634	clone.c	FUNCTION_17	WHILE_1
0x400006d	            0xeb2d	                           jmp 0x400009c	       634	clone.c	FUNCTION_17	WHILE_1
0x400006f	              0x90	                                     nop	       634	clone.c	FUNCTION_17	WHILE_1
0x4000070	          0x488b12	                    mov rdx, qword [rdx]	       635	clone.c	FUNCTION_17	WHILE_1
0x4000073	          0x4885d2	                           test rdx, rdx	       634	clone.c	FUNCTION_17	WHILE_1
0x4000076	            0x7428	                            je 0x40000a0	       634	clone.c	FUNCTION_17	WHILE_1
0x4000078	      0x48837a6800	               cmp qword [rdx + 0x68], 0	       634	clone.c	FUNCTION_17	WHILE_1
0x400007d	            0x74f1	                            je 0x4000070	       634	clone.c	FUNCTION_17	WHILE_1
0x400007f	        0x488b4a08	                mov rcx, qword [rdx + 8]	        53	string3.h	FUNCTION_113	CALL_3
0x4000083	          0x48890e	                    mov qword [rsi], rcx	        53	string3.h	FUNCTION_113	CALL_3
0x4000086	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        53	string3.h	FUNCTION_113	CALL_3
0x400008a	        0x48894e08	                mov qword [rsi + 8], rcx	        53	string3.h	FUNCTION_113	CALL_3
0x400008e	          0x8b4218	            mov eax, dword [rdx + 0x18] 	        53	string3.h	FUNCTION_113	CALL_3
0x4000091	          0x894610	             mov dword [rsi + 0x10], eax	        53	string3.h	FUNCTION_113	CALL_3
0x4000094	          0x488b02	                    mov rax, qword [rdx]	       641	clone.c	FUNCTION_17
0x4000097	          0x488907	                    mov qword [rdi], rax	       641	clone.c	FUNCTION_17
0x400009a	            0x31c0	                            xor eax, eax	       642	clone.c	FUNCTION_17
0x400009c	            0xf3c3	                                     ret	       643	clone.c	FUNCTION_17
0x400009e	            0x6690	                                     nop	       643	clone.c	FUNCTION_17
0x40000a0	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_17	IF_1
0x40000a5	              0xc3	                                     ret	       638	clone.c	FUNCTION_17	IF_1
