write_one_dir	FOR,3:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,6:CALL,16:DO,0	150
0x4000180	            0x4157	                                push r15	      2603	dir.c	FUNCTION_84
0x4000182	            0x4156	                                push r14	      2603	dir.c	FUNCTION_84
0x4000184	            0x4155	                                push r13	      2603	dir.c	FUNCTION_84
0x4000186	            0x4154	                                push r12	      2603	dir.c	FUNCTION_84
0x4000188	          0x4989f4	                            mov r12, rsi	      2603	dir.c	FUNCTION_84
0x400018b	              0x55	                                push rbp	      2603	dir.c	FUNCTION_84
0x400018c	              0x53	                                push rbx	      2603	dir.c	FUNCTION_84
0x400018d	        0x488d6e20	                   lea rbp, [rsi + 0x20]	      2605	dir.c	FUNCTION_84
0x4000191	          0x4889fb	                            mov rbx, rdi	      2603	dir.c	FUNCTION_84
0x4000194	        0x4883ec58	                           sub rsp, 0x58	      2603	dir.c	FUNCTION_84
0x4000198	          0x448b2e	                   mov r13d, dword [rsi]	      2608	dir.c	FUNCTION_84
0x400019b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2603	dir.c	FUNCTION_84
0x40001a4	      0x4889442448	             mov qword [rsp + 0x48], rax	      2603	dir.c	FUNCTION_84
0x40001a9	            0x31c0	                            xor eax, eax	      2603	dir.c	FUNCTION_84
0x40001ab	        0x418d4501	                      lea eax, [r13 + 1]	      2608	dir.c	FUNCTION_84
0x40001af	            0x8906	                    mov dword [rsi], eax	      2608	dir.c	FUNCTION_84
0x40001b1	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      2614	dir.c	FUNCTION_84	IF_1
0x40001b5	            0xa802	                              test al, 2	      2614	dir.c	FUNCTION_84	IF_1
0x40001b7	     0xf8563010000	                           jne 0x4000320	      2614	dir.c	FUNCTION_84	IF_1
0x40001bd	          0x83e0fe	                     and eax, 0xfffffffe	      2616	dir.c	FUNCTION_84	IF_1
0x40001c0	    0xc74740000000	               mov dword [rdi + 0x40], 0	      2615	dir.c	FUNCTION_84	IF_1
0x40001c7	          0x884744	               mov byte [rdi + 0x44], al	      2616	dir.c	FUNCTION_84	IF_1
0x40001ca	            0xa802	                              test al, 2	      2621	dir.c	FUNCTION_84	IF_3
0x40001cc	     0xf8552010000	                           jne 0x4000324	      2621	dir.c	FUNCTION_84	IF_3
0x40001d2	        0x4c8d7345	                   lea r14, [rbx + 0x45]	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40001d6	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_110	CALL_1
0x40001db	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_110	CALL_1
0x40001e0	          0x4c89f7	                            mov rdi, r14	       975	cache.h	FUNCTION_110	CALL_1
0x40001e3	      0xe800000000	                          call 0x40001e8	       975	cache.h	FUNCTION_110	CALL_1
0x40001e8	            0x85c0	                           test eax, eax	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40001ea	     0xf8580010000	                           jne 0x4000370	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x40001f0	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	      2631	dir.c	FUNCTION_84	CALL_8
0x40001f3	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2631	dir.c	FUNCTION_84	CALL_8
0x40001f8	      0xe800000000	                          call 0x40001fd	      2631	dir.c	FUNCTION_84	CALL_8
0x40001fd	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2632	dir.c	FUNCTION_84	CALL_9
0x4000202	            0x89c2	                            mov edx, eax	      2632	dir.c	FUNCTION_84	CALL_9
0x4000204	          0x4889ef	                            mov rdi, rbp	      2632	dir.c	FUNCTION_84	CALL_9
0x4000207	      0xe800000000	                          call 0x400020c	      2632	dir.c	FUNCTION_84	CALL_9
0x400020c	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2635	dir.c	FUNCTION_84	FOR_1
0x400020f	            0x85c0	                           test eax, eax	      2635	dir.c	FUNCTION_84	FOR_1
0x4000211	     0xf847d010000	                            je 0x4000394	      2635	dir.c	FUNCTION_84	FOR_1
0x4000217	          0x488b13	                    mov rdx, qword [rbx]	      2635	dir.c	FUNCTION_84	FOR_1
0x400021a	          0x83e801	                              sub eax, 1	      2635	dir.c	FUNCTION_84	FOR_1
0x400021d	            0x31ff	                            xor edi, edi	      2635	dir.c	FUNCTION_84	FOR_1
0x400021f	      0x488d4cc208	              lea rcx, [rdx + rax*8 + 8]	      2635	dir.c	FUNCTION_84	FOR_1
0x4000224	         0xf1f4000	                         nop dword [rax]	      2635	dir.c	FUNCTION_84	FOR_1
0x4000228	          0x488b02	                    mov rax, qword [rdx]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400022b	        0x4883c208	                              add rdx, 8	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400022f	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000233	          0xc1e802	                              shr eax, 2	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000236	          0x83e001	                              and eax, 1	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000239	             0x1c7	                            add edi, eax	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x400023b	          0x4839ca	                            cmp rdx, rcx	      2635	dir.c	FUNCTION_84	FOR_1
0x400023e	            0x75e8	                           jne 0x4000228	      2635	dir.c	FUNCTION_84	FOR_1
0x4000240	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2638	dir.c	FUNCTION_84	CALL_10
0x4000245	        0x4c8d6b59	                   lea r13, [rbx + 0x59]	      2641	dir.c	FUNCTION_84	CALL_13
0x4000249	          0x4531f6	                          xor r14d, r14d	      2643	dir.c	FUNCTION_84	FOR_2
0x400024c	      0xe800000000	                          call 0x4000251	      2638	dir.c	FUNCTION_84	CALL_10
0x4000251	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2639	dir.c	FUNCTION_84	CALL_11
0x4000256	            0x89c2	                            mov edx, eax	      2639	dir.c	FUNCTION_84	CALL_11
0x4000258	          0x4889ef	                            mov rdi, rbp	      2639	dir.c	FUNCTION_84	CALL_11
0x400025b	      0xe800000000	                          call 0x4000260	      2639	dir.c	FUNCTION_84	CALL_11
0x4000260	          0x4c89ef	                            mov rdi, r13	      2641	dir.c	FUNCTION_84	CALL_13
0x4000263	      0xe800000000	                          call 0x4000268	      2641	dir.c	FUNCTION_84	CALL_13
0x4000268	        0x488d5001	                      lea rdx, [rax + 1]	      2641	dir.c	FUNCTION_84	CALL_13
0x400026c	          0x4c89ee	                            mov rsi, r13	      2641	dir.c	FUNCTION_84	CALL_13
0x400026f	          0x4889ef	                            mov rdi, rbp	      2641	dir.c	FUNCTION_84	CALL_13
0x4000272	          0x4531ed	                          xor r13d, r13d	      2643	dir.c	FUNCTION_84	FOR_2
0x4000275	      0xe800000000	                          call 0x400027a	      2641	dir.c	FUNCTION_84	CALL_13
0x400027a	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2643	dir.c	FUNCTION_84	FOR_2
0x400027d	            0x85c0	                           test eax, eax	      2643	dir.c	FUNCTION_84	FOR_2
0x400027f	            0x7434	                            je 0x40002b5	      2643	dir.c	FUNCTION_84	FOR_2
0x4000281	     0xf1f80000000	                         nop dword [rax]	      2643	dir.c	FUNCTION_84	FOR_2
0x4000288	        0x488b4308	                mov rax, qword [rbx + 8]	      2645	dir.c	FUNCTION_84	CALL_15
0x400028c	        0x4183c501	                             add r13d, 1	      2643	dir.c	FUNCTION_84	FOR_2
0x4000290	        0x4e8b3c30	              mov r15, qword [rax + r14]	      2645	dir.c	FUNCTION_84	CALL_15
0x4000294	        0x4983c608	                              add r14, 8	      2645	dir.c	FUNCTION_84	CALL_15
0x4000298	          0x4c89ff	                            mov rdi, r15	      2645	dir.c	FUNCTION_84	CALL_15
0x400029b	      0xe800000000	                          call 0x40002a0	      2645	dir.c	FUNCTION_84	CALL_15
0x40002a0	        0x488d5001	                      lea rdx, [rax + 1]	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x40002a4	          0x4c89fe	                            mov rsi, r15	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x40002a7	          0x4889ef	                            mov rdi, rbp	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x40002aa	      0xe800000000	                          call 0x40002af	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x40002af	        0x44396b40	           cmp dword [rbx + 0x40], r13d 	      2643	dir.c	FUNCTION_84	FOR_2
0x40002b3	            0x77d3	                            ja 0x4000288	      2643	dir.c	FUNCTION_84	FOR_2
0x40002b5	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2647	dir.c	FUNCTION_84	FOR_3
0x40002b8	          0x4531ed	                          xor r13d, r13d	      2647	dir.c	FUNCTION_84	FOR_3
0x40002bb	            0x31ed	                            xor ebp, ebp	      2647	dir.c	FUNCTION_84	FOR_3
0x40002bd	            0x85d2	                           test edx, edx	      2647	dir.c	FUNCTION_84	FOR_3
0x40002bf	            0x7512	                           jne 0x40002d3	      2647	dir.c	FUNCTION_84	FOR_3
0x40002c1	            0xeb33	                           jmp 0x40002f6	      2647	dir.c	FUNCTION_84	FOR_3
0x40002c3	       0xf1f440000	                   nop dword [rax + rax]	      2647	dir.c	FUNCTION_84	FOR_3
0x40002c8	          0x83c501	                              add ebp, 1	      2647	dir.c	FUNCTION_84	FOR_3
0x40002cb	        0x4983c508	                              add r13, 8	      2647	dir.c	FUNCTION_84	FOR_3
0x40002cf	            0x39d5	                            cmp ebp, edx	      2647	dir.c	FUNCTION_84	FOR_3
0x40002d1	            0x7323	                           jae 0x40002f6	      2647	dir.c	FUNCTION_84	FOR_3
0x40002d3	          0x488b03	                    mov rax, qword [rbx]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002d6	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002da	        0xf6474404	               test byte [rdi + 0x44], 4	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002de	            0x74e8	                            je 0x40002c8	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002e0	          0x4c89e6	                            mov rsi, r12	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002e3	          0x83c501	                              add ebp, 1	      2647	dir.c	FUNCTION_84	FOR_3
0x40002e6	        0x4983c508	                              add r13, 8	      2647	dir.c	FUNCTION_84	FOR_3
0x40002ea	      0xe891feffff	                  call sym.write_one_dir	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002ef	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x40002f2	            0x39d5	                            cmp ebp, edx	      2647	dir.c	FUNCTION_84	FOR_3
0x40002f4	            0x72dd	                            jb 0x40002d3	      2647	dir.c	FUNCTION_84	FOR_3
0x40002f6	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2650	dir.c	FUNCTION_84
0x40002fb	    0x644833042528	                xor rax, qword fs:[0x28]	      2650	dir.c	FUNCTION_84
0x4000304	     0xf8591000000	                           jne 0x400039b	      2650	dir.c	FUNCTION_84
0x400030a	        0x4883c458	                           add rsp, 0x58	      2650	dir.c	FUNCTION_84
0x400030e	              0x5b	                                 pop rbx	      2650	dir.c	FUNCTION_84
0x400030f	              0x5d	                                 pop rbp	      2650	dir.c	FUNCTION_84
0x4000310	            0x415c	                                 pop r12	      2650	dir.c	FUNCTION_84
0x4000312	            0x415d	                                 pop r13	      2650	dir.c	FUNCTION_84
0x4000314	            0x415e	                                 pop r14	      2650	dir.c	FUNCTION_84
0x4000316	            0x415f	                                 pop r15	      2650	dir.c	FUNCTION_84
0x4000318	              0xc3	                                     ret	      2650	dir.c	FUNCTION_84
0x4000319	     0xf1f80000000	                         nop dword [rax]	      2650	dir.c	FUNCTION_84
0x4000320	            0xa801	                              test al, 1	      2619	dir.c	FUNCTION_84	IF_2
0x4000322	            0x7534	                           jne 0x4000358	      2619	dir.c	FUNCTION_84	IF_2
0x4000324	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000329	          0x4963f5	                        movsxd rsi, r13d	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x400032c	      0xe800000000	                          call 0x4000331	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000331	        0x488d7310	                   lea rsi, [rbx + 0x10]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000335	          0x4889e7	                            mov rdi, rsp	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000338	      0xe863fdffff	              call sym.stat_data_to_disk	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x400033d	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000342	      0xba24000000	                           mov edx, 0x24	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000347	          0x4889e6	                            mov rsi, rsp	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x400034a	      0xe800000000	                          call 0x400034f	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x400034f	      0xe97efeffff	                           jmp 0x40001d2	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000354	         0xf1f4000	                         nop dword [rax]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000358	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2620	dir.c	FUNCTION_84	CALL_1
0x400035d	          0x4963f5	                        movsxd rsi, r13d	      2620	dir.c	FUNCTION_84	CALL_1
0x4000360	      0xe800000000	                          call 0x4000365	      2620	dir.c	FUNCTION_84	CALL_1
0x4000365	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	      2620	dir.c	FUNCTION_84	CALL_1
0x4000369	      0xe95cfeffff	                           jmp 0x40001ca	      2620	dir.c	FUNCTION_84	CALL_1
0x400036e	            0x6690	                                     nop	      2620	dir.c	FUNCTION_84	CALL_1
0x4000370	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000375	          0x4963f5	                        movsxd rsi, r13d	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000378	      0xe800000000	                          call 0x400037d	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x400037d	      0x498d7c2450	                   lea rdi, [r12 + 0x50]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000382	      0xba14000000	                           mov edx, 0x14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000387	          0x4c89f6	                            mov rsi, r14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400038a	      0xe800000000	                          call 0x400038f	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x400038f	      0xe95cfeffff	                           jmp 0x40001f0	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000394	            0x31ff	                            xor edi, edi	      2635	dir.c	FUNCTION_84	FOR_1
0x4000396	      0xe9a5feffff	                           jmp 0x4000240	      2635	dir.c	FUNCTION_84	FOR_1
0x400039b	      0xe800000000	       call sym.common_prefix_len.isra.6	      2650	dir.c	FUNCTION_84
cmp_dir_entry	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,1:DO,0	7
0x4000160	          0x488b16	                    mov rdx, qword [rsi]	      2046	dir.c	FUNCTION_62
0x4000163	          0x488b3f	                    mov rdi, qword [rdi]	      2045	dir.c	FUNCTION_62
0x4000166	            0x8b0a	                    mov ecx, dword [rdx]	      2048	dir.c	FUNCTION_62	CALL_1
0x4000168	            0x8b37	                    mov esi, dword [rdi]	      2048	dir.c	FUNCTION_62	CALL_1
0x400016a	        0x4883c204	                              add rdx, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x400016e	        0x4883c704	                              add rdi, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x4000172	      0xe900000000	                           jmp 0x4000177	      2048	dir.c	FUNCTION_62	CALL_1
remove_untracked_cache	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,1:DO,0	54
0x4006440	            0x4156	                                push r14	      2163	dir.c	FUNCTION_70
0x4006442	            0x4155	                                push r13	      2163	dir.c	FUNCTION_70
0x4006444	            0x4154	                                push r12	      2163	dir.c	FUNCTION_70
0x4006446	              0x55	                                push rbp	      2163	dir.c	FUNCTION_70
0x4006447	              0x53	                                push rbx	      2163	dir.c	FUNCTION_70
0x4006448	    0x4c8bb7b80000	            mov r14, qword [rdi + 0xb8] 	      2164	dir.c	FUNCTION_70	IF_1
0x400644f	          0x4d85f6	                           test r14, r14	      2164	dir.c	FUNCTION_70	IF_1
0x4006452	     0xf8495000000	                            je 0x40064ed	      2164	dir.c	FUNCTION_70	IF_1
0x4006458	    0x498b9ea00000	            mov rbx, qword [r14 + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x400645f	          0x4989fd	                            mov r13, rdi	      2724	dir.c	FUNCTION_87	CALL_1
0x4006462	          0x4885db	                           test rbx, rbx	      2710	dir.c	FUNCTION_86	IF_1
0x4006465	            0x746b	                            je 0x40064d2	      2710	dir.c	FUNCTION_86	IF_1
0x4006467	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2712	dir.c	FUNCTION_86	FOR_1
0x400646a	          0x4531e4	                          xor r12d, r12d	      2712	dir.c	FUNCTION_86	FOR_1
0x400646d	            0x31ed	                            xor ebp, ebp	      2712	dir.c	FUNCTION_86	FOR_1
0x400646f	            0x85d2	                           test edx, edx	      2712	dir.c	FUNCTION_86	FOR_1
0x4006471	            0x741d	                            je 0x4006490	      2712	dir.c	FUNCTION_86	FOR_1
0x4006473	       0xf1f440000	                   nop dword [rax + rax]	      2712	dir.c	FUNCTION_86	FOR_1
0x4006478	          0x488b03	                    mov rax, qword [rbx]	      2713	dir.c	FUNCTION_86	CALL_1
0x400647b	          0x83c501	                              add ebp, 1	      2712	dir.c	FUNCTION_86	FOR_1
0x400647e	        0x4a8b3c20	              mov rdi, qword [rax + r12]	      2713	dir.c	FUNCTION_86	CALL_1
0x4006482	        0x4983c408	                              add r12, 8	      2713	dir.c	FUNCTION_86	CALL_1
0x4006486	      0xe8f5a9ffff	                 call sym.free_untracked	      2713	dir.c	FUNCTION_86	CALL_1
0x400648b	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2712	dir.c	FUNCTION_86	FOR_1
0x400648e	            0x77e8	                            ja 0x4006478	      2712	dir.c	FUNCTION_86	FOR_1
0x4006490	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2714	dir.c	FUNCTION_86	FOR_2
0x4006493	          0x4531e4	                          xor r12d, r12d	      2714	dir.c	FUNCTION_86	FOR_2
0x4006496	            0x31ed	                            xor ebp, ebp	      2714	dir.c	FUNCTION_86	FOR_2
0x4006498	            0x85c0	                           test eax, eax	      2714	dir.c	FUNCTION_86	FOR_2
0x400649a	            0x741d	                            je 0x40064b9	      2714	dir.c	FUNCTION_86	FOR_2
0x400649c	         0xf1f4000	                         nop dword [rax]	      2714	dir.c	FUNCTION_86	FOR_2
0x40064a0	        0x488b4308	                mov rax, qword [rbx + 8]	      2715	dir.c	FUNCTION_86	CALL_2
0x40064a4	          0x83c501	                              add ebp, 1	      2714	dir.c	FUNCTION_86	FOR_2
0x40064a7	        0x4a8b3c20	              mov rdi, qword [rax + r12]	      2715	dir.c	FUNCTION_86	CALL_2
0x40064ab	        0x4983c408	                              add r12, 8	      2715	dir.c	FUNCTION_86	CALL_2
0x40064af	      0xe800000000	                          call 0x40064b4	      2715	dir.c	FUNCTION_86	CALL_2
0x40064b4	          0x396b40	            cmp dword [rbx + 0x40], ebp 	      2714	dir.c	FUNCTION_86	FOR_2
0x40064b7	            0x77e7	                            ja 0x40064a0	      2714	dir.c	FUNCTION_86	FOR_2
0x40064b9	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2716	dir.c	FUNCTION_86	CALL_3
0x40064bd	      0xe800000000	                          call 0x40064c2	      2716	dir.c	FUNCTION_86	CALL_3
0x40064c2	          0x488b3b	                    mov rdi, qword [rbx]	      2717	dir.c	FUNCTION_86	CALL_4
0x40064c5	      0xe800000000	                          call 0x40064ca	      2717	dir.c	FUNCTION_86	CALL_4
0x40064ca	          0x4889df	                            mov rdi, rbx	      2718	dir.c	FUNCTION_86	CALL_5
0x40064cd	      0xe800000000	                          call 0x40064d2	      2718	dir.c	FUNCTION_86	CALL_5
0x40064d2	          0x4c89f7	                            mov rdi, r14	      2725	dir.c	FUNCTION_87	CALL_2
0x40064d5	      0xe800000000	                          call 0x40064da	      2725	dir.c	FUNCTION_87	CALL_2
0x40064da	    0x41814d148000	             or dword [r13 + 0x14], 0x80	      2167	dir.c	FUNCTION_70	IF_1
0x40064e2	    0x49c785b80000	               mov qword [r13 + 0xb8], 0	      2166	dir.c	FUNCTION_70	IF_1
0x40064ed	              0x5b	                                 pop rbx	      2169	dir.c	FUNCTION_70
0x40064ee	              0x5d	                                 pop rbp	      2169	dir.c	FUNCTION_70
0x40064ef	            0x415c	                                 pop r12	      2169	dir.c	FUNCTION_70
0x40064f1	            0x415d	                                 pop r13	      2169	dir.c	FUNCTION_70
0x40064f3	            0x415e	                                 pop r14	      2169	dir.c	FUNCTION_70
0x40064f5	              0xc3	                                     ret	      2169	dir.c	FUNCTION_70
is_inside_dir	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,3:DO,0	24
0x4007160	          0x4885ff	                           test rdi, rdi	      2386	dir.c	FUNCTION_76	IF_1
0x4007163	            0x743b	                            je 0x40071a0	      2386	dir.c	FUNCTION_76	IF_1
0x4007165	              0x55	                                push rbp	      2382	dir.c	FUNCTION_76
0x4007166	              0x53	                                push rbx	      2382	dir.c	FUNCTION_76
0x4007167	          0x4889fb	                            mov rbx, rdi	      2382	dir.c	FUNCTION_76
0x400716a	        0x4883ec08	                              sub rsp, 8	      2382	dir.c	FUNCTION_76
0x400716e	      0xe800000000	                          call 0x4007173	      2389	dir.c	FUNCTION_76	CALL_1
0x4007173	          0x4889de	                            mov rsi, rbx	      2390	dir.c	FUNCTION_76	CALL_2
0x4007176	          0x4889c7	                            mov rdi, rax	      2390	dir.c	FUNCTION_76	CALL_2
0x4007179	          0x4889c5	                            mov rbp, rax	      2389	dir.c	FUNCTION_76	CALL_1
0x400717c	      0xe800000000	                          call 0x4007181	      2390	dir.c	FUNCTION_76	CALL_2
0x4007181	            0xf7d0	                                 not eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4007183	          0x4889ef	                            mov rdi, rbp	      2391	dir.c	FUNCTION_76	CALL_3
0x4007186	          0xc1e81f	                           shr eax, 0x1f	      2390	dir.c	FUNCTION_76	CALL_2
0x4007189	            0x89c3	                            mov ebx, eax	      2390	dir.c	FUNCTION_76	CALL_2
0x400718b	      0xe800000000	                          call 0x4007190	      2391	dir.c	FUNCTION_76	CALL_3
0x4007190	        0x4883c408	                              add rsp, 8	      2393	dir.c	FUNCTION_76
0x4007194	            0x89d8	                            mov eax, ebx	      2392	dir.c	FUNCTION_76
0x4007196	              0x5b	                                 pop rbx	      2393	dir.c	FUNCTION_76
0x4007197	              0x5d	                                 pop rbp	      2393	dir.c	FUNCTION_76
0x4007198	              0xc3	                                     ret	      2393	dir.c	FUNCTION_76
0x4007199	     0xf1f80000000	                         nop dword [rax]	      2393	dir.c	FUNCTION_76
0x40071a0	            0x31c0	                            xor eax, eax	      2393	dir.c	FUNCTION_76
0x40071a2	              0xc3	                                     ret	      2393	dir.c	FUNCTION_76
is_excluded_from_list	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,1:DO,0	17
0x4004ba0	        0x4883ec10	                           sub rsp, 0x10	      1104	dir.c	FUNCTION_38
0x4004ba4	            0x4151	                                 push r9	      1106	dir.c	FUNCTION_38	CALL_1
0x4004ba6	        0x4d8d4818	                     lea r9, [r8 + 0x18]	      1106	dir.c	FUNCTION_38	CALL_1
0x4004baa	          0x458b00	                     mov r8d, dword [r8]	      1106	dir.c	FUNCTION_38	CALL_1
0x4004bad	      0xe8fec8ffff	call sym.last_exclude_matching_from_list.isra.19	      1106	dir.c	FUNCTION_38	CALL_1
0x4004bb2	          0x4885c0	                           test rax, rax	      1108	dir.c	FUNCTION_38	IF_1
0x4004bb5	              0x5a	                                 pop rdx	      1108	dir.c	FUNCTION_38	IF_1
0x4004bb6	              0x59	                                 pop rcx	      1108	dir.c	FUNCTION_38	IF_1
0x4004bb7	            0x7411	                            je 0x4004bca	      1108	dir.c	FUNCTION_38	IF_1
0x4004bb9	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1109	dir.c	FUNCTION_38	IF_1
0x4004bbc	          0xc1e804	                              shr eax, 4	      1109	dir.c	FUNCTION_38	IF_1
0x4004bbf	          0x83f001	                              xor eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x4004bc2	          0x83e001	                              and eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x4004bc5	        0x4883c408	                              add rsp, 8	      1111	dir.c	FUNCTION_38
0x4004bc9	              0xc3	                                     ret	      1111	dir.c	FUNCTION_38
0x4004bca	      0xb8ffffffff	                     mov eax, 0xffffffff	      1110	dir.c	FUNCTION_38
0x4004bcf	            0xebf4	                           jmp 0x4004bc5	      1110	dir.c	FUNCTION_38
fill_directory	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2:DO,0	30
0x4006f60	            0x4155	                                push r13	       193	dir.c	FUNCTION_8
0x4006f62	            0x4154	                                push r12	       193	dir.c	FUNCTION_8
0x4006f64	          0x4989f5	                            mov r13, rsi	       193	dir.c	FUNCTION_8
0x4006f67	              0x55	                                push rbp	       193	dir.c	FUNCTION_8
0x4006f68	              0x53	                                push rbx	       193	dir.c	FUNCTION_8
0x4006f69	          0x4889d3	                            mov rbx, rdx	       193	dir.c	FUNCTION_8
0x4006f6c	          0x4989fc	                            mov r12, rdi	       193	dir.c	FUNCTION_8
0x4006f6f	        0x4883c210	                           add rdx, 0x10	       193	dir.c	FUNCTION_8
0x4006f73	        0x4883ec08	                              sub rsp, 8	       193	dir.c	FUNCTION_8
0x4006f77	          0x8b7308	                mov esi, dword [rbx + 8]	       201	dir.c	FUNCTION_8	CALL_1
0x4006f7a	            0x8b3b	                    mov edi, dword [rbx]	       201	dir.c	FUNCTION_8	CALL_1
0x4006f7c	      0xe81f94ffff	       call sym.common_prefix_len.isra.6	       201	dir.c	FUNCTION_8	CALL_1
0x4006f81	          0x4885c0	                           test rax, rax	       202	dir.c	FUNCTION_8
0x4006f84	          0x4889c5	                            mov rbp, rax	       201	dir.c	FUNCTION_8	CALL_1
0x4006f87	      0xba00000000	                              mov edx, 0	       201	dir.c	FUNCTION_8	CALL_1
0x4006f8c	            0x7407	                            je 0x4006f95	       202	dir.c	FUNCTION_8
0x4006f8e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       202	dir.c	FUNCTION_8
0x4006f92	          0x488b10	                    mov rdx, qword [rax]	       202	dir.c	FUNCTION_8
0x4006f95	          0x4989d8	                             mov r8, rbx	       205	dir.c	FUNCTION_8	CALL_2
0x4006f98	            0x89e9	                            mov ecx, ebp	       205	dir.c	FUNCTION_8	CALL_2
0x4006f9a	          0x4c89ee	                            mov rsi, r13	       205	dir.c	FUNCTION_8	CALL_2
0x4006f9d	          0x4c89e7	                            mov rdi, r12	       205	dir.c	FUNCTION_8	CALL_2
0x4006fa0	      0xe800000000	                          call 0x4006fa5	       205	dir.c	FUNCTION_8	CALL_2
0x4006fa5	        0x4883c408	                              add rsp, 8	       208	dir.c	FUNCTION_8
0x4006fa9	            0x89e8	                            mov eax, ebp	       208	dir.c	FUNCTION_8
0x4006fab	              0x5b	                                 pop rbx	       208	dir.c	FUNCTION_8
0x4006fac	              0x5d	                                 pop rbp	       208	dir.c	FUNCTION_8
0x4006fad	            0x415c	                                 pop r12	       208	dir.c	FUNCTION_8
0x4006faf	            0x415d	                                 pop r13	       208	dir.c	FUNCTION_8
0x4006fb1	              0xc3	                                     ret	       208	dir.c	FUNCTION_8
remove_path	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,2:CALL,7:DO,1	45
0x4007af0	            0x4154	                                push r12	      2517	dir.c	FUNCTION_81
0x4007af2	              0x55	                                push rbp	      2517	dir.c	FUNCTION_81
0x4007af3	          0x4989fc	                            mov r12, rdi	      2517	dir.c	FUNCTION_81
0x4007af6	              0x53	                                push rbx	      2517	dir.c	FUNCTION_81
0x4007af7	      0xe800000000	                          call 0x4007afc	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007afc	            0x85c0	                           test eax, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007afe	            0x7416	                            je 0x4007b16	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b00	      0xe800000000	                          call 0x4007b05	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b05	            0x8b10	                    mov edx, dword [rax]	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b07	          0x83fa02	                              cmp edx, 2	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b0a	            0x740a	                            je 0x4007b16	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b0c	          0x83fa14	                           cmp edx, 0x14	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b0f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2521	dir.c	FUNCTION_81	IF_1
0x4007b14	            0x755d	                           jne 0x4007b73	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x4007b16	      0xbe2f000000	                           mov esi, 0x2f	      2523	dir.c	FUNCTION_81	CALL_3
0x4007b1b	          0x4c89e7	                            mov rdi, r12	      2523	dir.c	FUNCTION_81	CALL_3
0x4007b1e	      0xe800000000	                          call 0x4007b23	      2523	dir.c	FUNCTION_81	CALL_3
0x4007b23	          0x4889c3	                            mov rbx, rax	      2523	dir.c	FUNCTION_81	CALL_3
0x4007b26	            0x31c0	                            xor eax, eax	      2532	dir.c	FUNCTION_81
0x4007b28	          0x4885db	                           test rbx, rbx	      2524	dir.c	FUNCTION_81	IF_2
0x4007b2b	            0x7446	                            je 0x4007b73	      2524	dir.c	FUNCTION_81	IF_2
0x4007b2d	          0x4c89e7	                            mov rdi, r12	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x4007b30	          0x4c29e3	                            sub rbx, r12	      2526	dir.c	FUNCTION_81	IF_2
0x4007b33	      0xe800000000	                          call 0x4007b38	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x4007b38	          0x4889c5	                            mov rbp, rax	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x4007b3b	        0x488d0418	                    lea rax, [rax + rbx]	      2526	dir.c	FUNCTION_81	IF_2
0x4007b3f	            0xeb19	                           jmp 0x4007b5a	      2526	dir.c	FUNCTION_81	IF_2
0x4007b41	     0xf1f80000000	                         nop dword [rax]	      2526	dir.c	FUNCTION_81	IF_2
0x4007b48	      0xbe2f000000	                           mov esi, 0x2f	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b4d	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b50	      0xe800000000	                          call 0x4007b55	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b55	          0x4885c0	                           test rax, rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b58	            0x740f	                            je 0x4007b69	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b5a	          0xc60000	                       mov byte [rax], 0	      2528	dir.c	FUNCTION_81	IF_2	DO_1
0x4007b5d	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b60	      0xe800000000	                          call 0x4007b65	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b65	            0x85c0	                           test eax, eax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b67	            0x74df	                            je 0x4007b48	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4007b69	          0x4889ef	                            mov rdi, rbp	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4007b6c	      0xe800000000	                          call 0x4007b71	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4007b71	            0x31c0	                            xor eax, eax	      2532	dir.c	FUNCTION_81
0x4007b73	              0x5b	                                 pop rbx	      2533	dir.c	FUNCTION_81
0x4007b74	              0x5d	                                 pop rbp	      2533	dir.c	FUNCTION_81
0x4007b75	            0x415c	                                 pop r12	      2533	dir.c	FUNCTION_81
0x4007b77	              0xc3	                                     ret	      2533	dir.c	FUNCTION_81
dir_inside_of	FOR,0:WHILE,1:SWITCH,0:functions,0:ELSE,0:IF,3:CALL,2:DO,0	84
0x4007020	        0x4883ec08	                              sub rsp, 8	      2355	dir.c	FUNCTION_75
0x4007024	          0x4885f6	                           test rsi, rsi	      2358	dir.c	FUNCTION_75	CALL_1
0x4007027	     0xf8406010000	                            je 0x4007133	      2358	dir.c	FUNCTION_75	CALL_1
0x400702d	          0x4885ff	                           test rdi, rdi	      2358	dir.c	FUNCTION_75	CALL_1
0x4007030	     0xf84fd000000	                            je 0x4007133	      2358	dir.c	FUNCTION_75	CALL_1
0x4007036	           0xfb606	                   movzx eax, byte [rsi]	      2358	dir.c	FUNCTION_75	CALL_1
0x4007039	            0x84c0	                             test al, al	      2358	dir.c	FUNCTION_75	CALL_1
0x400703b	     0xf84f2000000	                            je 0x4007133	      2358	dir.c	FUNCTION_75	CALL_1
0x4007041	           0xfb617	                   movzx edx, byte [rdi]	      2358	dir.c	FUNCTION_75	CALL_1
0x4007044	            0x84d2	                             test dl, dl	      2358	dir.c	FUNCTION_75	CALL_1
0x4007046	     0xf84e7000000	                            je 0x4007133	      2358	dir.c	FUNCTION_75	CALL_1
0x400704c	    0x448b05000000	            mov r8d, dword [0x04007053] 	      2358	dir.c	FUNCTION_75	CALL_1
0x4007053	            0x31c9	                            xor ecx, ecx	      2344	dir.c	FUNCTION_74	IF_2
0x4007055	          0x4585c0	                           test r8d, r8d	      2344	dir.c	FUNCTION_74	IF_2
0x4007058	            0x7528	                           jne 0x4007082	      2344	dir.c	FUNCTION_74	IF_2
0x400705a	    0x660f1f440000	                    nop word [rax + rax]	      2344	dir.c	FUNCTION_74	IF_2
0x4007060	            0x38c2	                              cmp dl, al	      2342	dir.c	FUNCTION_74	IF_1
0x4007062	     0xf8488000000	                            je 0x40070f0	      2342	dir.c	FUNCTION_74	IF_1
0x4007068	      0xb8ffffffff	                     mov eax, 0xffffffff	      2375	dir.c	FUNCTION_75	IF_3
0x400706d	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x4007071	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x4007072	    0x660f1f440000	                    nop word [rax + rax]	      2379	dir.c	FUNCTION_75
0x4007078	           0xfb617	                   movzx edx, byte [rdi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400707b	            0x84d2	                             test dl, dl	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400707d	            0x74e9	                            je 0x4007068	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400707f	          0x4489c1	                            mov ecx, r8d	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007082	            0x38d0	                              cmp al, dl	      2342	dir.c	FUNCTION_74	IF_1
0x4007084	            0x7435	                            je 0x40070bb	      2342	dir.c	FUNCTION_74	IF_1
0x4007086	          0x4c63c8	                          movsxd r9, eax	       993	git-compat-util.h	FUNCTION_167	IF_1
0x4007089	          0x4189c0	                            mov r8d, eax	       994	git-compat-util.h	FUNCTION_167	IF_1
0x400708c	        0x440fb6d2	                          movzx r10d, dl	      2345	dir.c	FUNCTION_74	IF_2
0x4007090	        0x4183e0df	                     and r8d, 0xffffffdf	       994	git-compat-util.h	FUNCTION_167	IF_1
0x4007094	    0x41f681000000	                       test byte [r9], 4	       994	git-compat-util.h	FUNCTION_167	IF_1
0x400709c	          0x4589d1	                           mov r9d, r10d	       994	git-compat-util.h	FUNCTION_167	IF_1
0x400709f	        0x410f45c0	                         cmovne eax, r8d	       994	git-compat-util.h	FUNCTION_167	IF_1
0x40070a3	        0x4183e1df	                     and r9d, 0xffffffdf	       994	git-compat-util.h	FUNCTION_167	IF_1
0x40070a7	    0x41f682000000	                      test byte [r10], 4	       994	git-compat-util.h	FUNCTION_167	IF_1
0x40070af	          0x4d89d0	                             mov r8, r10	      2345	dir.c	FUNCTION_74	IF_2
0x40070b2	        0x450f45c1	                         cmovne r8d, r9d	       994	git-compat-util.h	FUNCTION_167	IF_1
0x40070b6	          0x4439c0	                            cmp eax, r8d	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070b9	            0x75ad	                           jne 0x4007068	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070bb	        0x4883c601	                              add rsi, 1	      2361	dir.c	FUNCTION_75	WHILE_1
0x40070bf	           0xfb606	                   movzx eax, byte [rsi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070c2	        0x4883c701	                              add rdi, 1	      2362	dir.c	FUNCTION_75	WHILE_1
0x40070c6	        0x448d4101	                      lea r8d, [rcx + 1]	      2363	dir.c	FUNCTION_75	WHILE_1
0x40070ca	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070cc	            0x75aa	                           jne 0x4007078	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070ce	           0xfb607	                   movzx eax, byte [rdi]	      2370	dir.c	FUNCTION_75	IF_2
0x40070d1	            0x84c0	                             test al, al	      2370	dir.c	FUNCTION_75	IF_2
0x40070d3	            0x7477	                            je 0x400714c	      2370	dir.c	FUNCTION_75	IF_2
0x40070d5	        0x807eff2f	                cmp byte [rsi - 1], 0x2f	      2374	dir.c	FUNCTION_75	IF_3
0x40070d9	            0x7445	                            je 0x4007120	      2374	dir.c	FUNCTION_75	IF_3
0x40070db	          0x83c102	                              add ecx, 2	      2378	dir.c	FUNCTION_75
0x40070de	            0x3c2f	                            cmp al, 0x2f	      2378	dir.c	FUNCTION_75
0x40070e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      2378	dir.c	FUNCTION_75
0x40070e5	           0xf44c1	                          cmove eax, ecx	      2378	dir.c	FUNCTION_75
0x40070e8	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x40070ec	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x40070ed	           0xf1f00	                         nop dword [rax]	      2379	dir.c	FUNCTION_75
0x40070f0	        0x4883c601	                              add rsi, 1	      2361	dir.c	FUNCTION_75	WHILE_1
0x40070f4	           0xfb606	                   movzx eax, byte [rsi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40070f7	        0x4883c701	                              add rdi, 1	      2362	dir.c	FUNCTION_75	WHILE_1
0x40070fb	        0x448d4101	                      lea r8d, [rcx + 1]	      2363	dir.c	FUNCTION_75	WHILE_1
0x40070ff	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4007101	            0x74cb	                            je 0x40070ce	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4007103	           0xfb617	                   movzx edx, byte [rdi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4007106	            0x84d2	                             test dl, dl	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4007108	     0xf845affffff	                            je 0x4007068	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400710e	          0x4489c1	                            mov ecx, r8d	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007111	      0xe94affffff	                           jmp 0x4007060	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007120	          0x80fa2f	                            cmp dl, 0x2f	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007123	      0xbaffffffff	                     mov edx, 0xffffffff	      2363	dir.c	FUNCTION_75	WHILE_1
0x4007128	            0x89d0	                            mov eax, edx	      2363	dir.c	FUNCTION_75	WHILE_1
0x400712a	        0x410f44c0	                          cmove eax, r8d	      2363	dir.c	FUNCTION_75	WHILE_1
0x400712e	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x4007132	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
0x4007133	      0xb900000000	                              mov ecx, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4007138	      0xba36090000	                          mov edx, 0x936	      2358	dir.c	FUNCTION_75	CALL_1
0x400713d	      0xbe00000000	                              mov esi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4007142	      0xbf00000000	                              mov edi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4007147	      0xe800000000	                          call 0x400714c	      2358	dir.c	FUNCTION_75	CALL_1
0x400714c	          0x4489c0	                            mov eax, r8d	      2363	dir.c	FUNCTION_75	WHILE_1
0x400714f	      0xe919ffffff	                           jmp 0x400706d	      2363	dir.c	FUNCTION_75	WHILE_1
read_directory	FOR,1:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,9:CALL,10:DO,0	612
0x4006500	            0x4157	                                push r15	      2263	dir.c	FUNCTION_72
0x4006502	            0x4156	                                push r14	      2263	dir.c	FUNCTION_72
0x4006504	          0x4d89c7	                             mov r15, r8	      2263	dir.c	FUNCTION_72
0x4006507	            0x4155	                                push r13	      2263	dir.c	FUNCTION_72
0x4006509	            0x4154	                                push r12	      2263	dir.c	FUNCTION_72
0x400650b	          0x4989d5	                            mov r13, rdx	      2263	dir.c	FUNCTION_72
0x400650e	              0x55	                                push rbp	      2263	dir.c	FUNCTION_72
0x400650f	              0x53	                                push rbx	      2263	dir.c	FUNCTION_72
0x4006510	            0x89cb	                            mov ebx, ecx	      2263	dir.c	FUNCTION_72
0x4006512	          0x4889fd	                            mov rbp, rdi	      2263	dir.c	FUNCTION_72
0x4006515	    0x4881ec980000	                           sub rsp, 0x98	      2263	dir.c	FUNCTION_72
0x400651c	      0x4889742408	                mov qword [rsp + 8], rsi	      2263	dir.c	FUNCTION_72
0x4006521	        0x894c2434	             mov dword [rsp + 0x34], ecx	      2263	dir.c	FUNCTION_72
0x4006525	    0x64488b042528	                mov rax, qword fs:[0x28]	      2263	dir.c	FUNCTION_72
0x400652e	    0x488984248800	             mov qword [rsp + 0x88], rax	      2263	dir.c	FUNCTION_72
0x4006536	            0x31c0	                            xor eax, eax	      2263	dir.c	FUNCTION_72
0x4006538	      0xe800000000	                          call 0x400653d	      2265	dir.c	FUNCTION_72	CALL_1
0x400653d	            0x89de	                            mov esi, ebx	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400653f	          0x4c89ef	                            mov rdi, r13	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4006542	      0x4889442440	             mov qword [rsp + 0x40], rax	      2265	dir.c	FUNCTION_72	CALL_1
0x4006547	      0xe800000000	                          call 0x400654c	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400654c	            0x85c0	                           test eax, eax	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x400654e	            0x7430	                            je 0x4006580	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4006550	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      2332	dir.c	FUNCTION_72
0x4006558	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2332	dir.c	FUNCTION_72
0x4006561	          0x8b4500	                    mov eax, dword [rbp]	      2331	dir.c	FUNCTION_72
0x4006564	     0xf85eb090000	                           jne 0x4006f55	      2332	dir.c	FUNCTION_72
0x400656a	    0x4881c4980000	                           add rsp, 0x98	      2332	dir.c	FUNCTION_72
0x4006571	              0x5b	                                 pop rbx	      2332	dir.c	FUNCTION_72
0x4006572	              0x5d	                                 pop rbp	      2332	dir.c	FUNCTION_72
0x4006573	            0x415c	                                 pop r12	      2332	dir.c	FUNCTION_72
0x4006575	            0x415d	                                 pop r13	      2332	dir.c	FUNCTION_72
0x4006577	            0x415e	                                 pop r14	      2332	dir.c	FUNCTION_72
0x4006579	            0x415f	                                 pop r15	      2332	dir.c	FUNCTION_72
0x400657b	              0xc3	                                     ret	      2332	dir.c	FUNCTION_72
0x400657c	         0xf1f4000	                         nop dword [rax]	      2332	dir.c	FUNCTION_72
0x4006580	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      2178	dir.c	FUNCTION_71	IF_1
0x4006588	     0xf8422010000	                            je 0x40066b0	      2178	dir.c	FUNCTION_71	IF_1
0x400658e	    0x8b0500000000	            mov eax, dword [0x04006594] 	      2180	dir.c	FUNCTION_71	IF_2
0x4006594	            0x85c0	                           test eax, eax	      2180	dir.c	FUNCTION_71	IF_2
0x4006596	     0xf88d0070000	                            js 0x4006d6c	      2180	dir.c	FUNCTION_71	IF_2
0x400659c	            0x85c0	                           test eax, eax	      2182	dir.c	FUNCTION_71	IF_3
0x400659e	     0xf850c010000	                           jne 0x40066b0	      2182	dir.c	FUNCTION_71	IF_3
0x40065a4	    0x448b8d080100	           mov r9d, dword [rbp + 0x108] 	      2201	dir.c	FUNCTION_71	IF_5
0x40065ab	          0x4585c9	                           test r9d, r9d	      2201	dir.c	FUNCTION_71	IF_5
0x40065ae	     0xf85fc000000	                           jne 0x40066b0	      2201	dir.c	FUNCTION_71	IF_5
0x40065b4	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	      2201	dir.c	FUNCTION_71	IF_5
0x40065b9	          0x4585c0	                           test r8d, r8d	      2201	dir.c	FUNCTION_71	IF_5
0x40065bc	     0xf85ee000000	                           jne 0x40066b0	      2201	dir.c	FUNCTION_71	IF_5
0x40065c2	          0x4d85ff	                           test r15, r15	      2201	dir.c	FUNCTION_71	IF_5
0x40065c5	            0x740b	                            je 0x40065d2	      2201	dir.c	FUNCTION_71	IF_5
0x40065c7	          0x418b3f	                    mov edi, dword [r15]	      2201	dir.c	FUNCTION_71	IF_5
0x40065ca	            0x85ff	                           test edi, edi	      2201	dir.c	FUNCTION_71	IF_5
0x40065cc	     0xf85de000000	                           jne 0x40066b0	      2201	dir.c	FUNCTION_71	IF_5
0x40065d2	    0x488b9d880000	            mov rbx, qword [rbp + 0x88] 	      2205	dir.c	FUNCTION_71	IF_6
0x40065d9	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      2205	dir.c	FUNCTION_71	IF_6
0x40065dc	    0x3b8398000000	            cmp eax, dword [rbx + 0x98] 	      2205	dir.c	FUNCTION_71	IF_6
0x40065e2	     0xf85c8000000	                           jne 0x40066b0	      2205	dir.c	FUNCTION_71	IF_6
0x40065e8	          0x83e033	                           and eax, 0x33	      2211	dir.c	FUNCTION_71	IF_6
0x40065eb	          0x83f802	                              cmp eax, 2	      2211	dir.c	FUNCTION_71	IF_6
0x40065ee	     0xf85bc000000	                           jne 0x40066b0	      2211	dir.c	FUNCTION_71	IF_6
0x40065f4	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      2221	dir.c	FUNCTION_71	IF_7
0x40065f8	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2221	dir.c	FUNCTION_71	IF_7
0x40065fc	          0x4839f7	                            cmp rdi, rsi	      2221	dir.c	FUNCTION_71	IF_7
0x40065ff	            0x740d	                            je 0x400660e	      2221	dir.c	FUNCTION_71	IF_7
0x4006601	      0xe800000000	                          call 0x4006606	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x4006606	            0x85c0	                           test eax, eax	      2221	dir.c	FUNCTION_71	IF_7
0x4006608	     0xf85a2000000	                           jne 0x40066b0	      2221	dir.c	FUNCTION_71	IF_7
0x400660e	          0x8b7530	            mov esi, dword [rbp + 0x30] 	      2229	dir.c	FUNCTION_71	IF_8
0x4006611	            0x85f6	                           test esi, esi	      2229	dir.c	FUNCTION_71	IF_8
0x4006613	     0xf8597000000	                           jne 0x40066b0	      2229	dir.c	FUNCTION_71	IF_8
0x4006619	      0xe872b7ffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x400661e	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x4006625	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4006628	      0xe800000000	                          call 0x400662d	      2123	dir.c	FUNCTION_66	CALL_2
0x400662d	            0x85c0	                           test eax, eax	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x400662f	            0x755a	                           jne 0x400668b	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4006631	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	      2237	dir.c	FUNCTION_71	IF_10
0x4006638	    0x498b9c24a000	            mov rbx, qword [r12 + 0xa0] 	      2237	dir.c	FUNCTION_71	IF_10
0x4006640	          0x4885db	                           test rbx, rbx	      2237	dir.c	FUNCTION_71	IF_10
0x4006643	     0xf8499080000	                            je 0x4006ee2	      2237	dir.c	FUNCTION_71	IF_10
0x4006649	      0x498d742424	                   lea rsi, [r12 + 0x24]	       975	cache.h	FUNCTION_110	CALL_1
0x400664e	    0x488dbdb40000	                   lea rdi, [rbp + 0xb4]	       975	cache.h	FUNCTION_110	CALL_1
0x4006655	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_110	CALL_1
0x400665a	      0xe800000000	                          call 0x400665f	       975	cache.h	FUNCTION_110	CALL_1
0x400665f	            0x85c0	                           test eax, eax	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4006661	     0xf85ad070000	                           jne 0x4006e14	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4006667	      0x498d742460	                   lea rsi, [r12 + 0x60]	       975	cache.h	FUNCTION_110	CALL_1
0x400666c	    0x488dbdf00000	                   lea rdi, [rbp + 0xf0]	       975	cache.h	FUNCTION_110	CALL_1
0x4006673	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_110	CALL_1
0x4006678	      0xe800000000	                          call 0x400667d	       975	cache.h	FUNCTION_110	CALL_1
0x400667d	            0x85c0	                           test eax, eax	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x400667f	     0xf851c070000	                           jne 0x4006da1	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x4006685	        0x804b4404	                 or byte [rbx + 0x44], 4	      2257	dir.c	FUNCTION_71
0x4006689	            0xeb7c	                           jmp 0x4006707	      2257	dir.c	FUNCTION_71
0x400668b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_180
0x400668d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_180
0x4006692	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_180
0x4006697	      0xe800000000	                          call 0x400669c	        54	gettext.h	FUNCTION_180
0x400669c	          0x4889c7	                            mov rdi, rax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400669f	            0x31c0	                            xor eax, eax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x40066a1	      0xe800000000	                          call 0x40066a6	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x40066a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x40066b0	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40066b4	    0x48c785880000	               mov qword [rbp + 0x88], 0	      2276	dir.c	FUNCTION_72	IF_2
0x40066bf	            0x85c0	                           test eax, eax	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40066c1	            0x7442	                            je 0x4006705	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40066c3	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40066c7	    0x48c744247000	               mov qword [rsp + 0x70], 0	      2064	dir.c	FUNCTION_64
0x40066d0	    0x48c744247800	               mov qword [rsp + 0x78], 0	      2064	dir.c	FUNCTION_64
0x40066d9	    0x48c784248000	               mov qword [rsp + 0x80], 0	      2064	dir.c	FUNCTION_64
0x40066e5	          0x4863c1	                         movsxd rax, ecx	      2064	dir.c	FUNCTION_64
0x40066e8	            0x89ca	                            mov edx, ecx	      2064	dir.c	FUNCTION_64
0x40066ea	    0x660f1f440000	                    nop word [rax + rax]	      2064	dir.c	FUNCTION_64
0x40066f0	    0x41807c05ff2f	         cmp byte [r13 + rax - 1], 0x2f 	      2069	dir.c	FUNCTION_64	WHILE_1
0x40066f6	     0xf850c020000	                           jne 0x4006908	      2069	dir.c	FUNCTION_64	WHILE_1
0x40066fc	        0x4883e801	                              sub rax, 1	      2069	dir.c	FUNCTION_64	WHILE_1
0x4006700	          0x83ea01	                              sub edx, 1	      2069	dir.c	FUNCTION_64	WHILE_1
0x4006703	            0x75eb	                           jne 0x40066f0	      2069	dir.c	FUNCTION_64	WHILE_1
0x4006705	            0x31db	                            xor ebx, ebx	      2069	dir.c	FUNCTION_64	WHILE_1
0x4006707	            0x4157	                                push r15	      2278	dir.c	FUNCTION_72	CALL_5
0x4006709	            0x6a00	                                  push 0	      2278	dir.c	FUNCTION_72	CALL_5
0x400670b	          0x4989d8	                             mov r8, rbx	      2278	dir.c	FUNCTION_72	CALL_5
0x400670e	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      2278	dir.c	FUNCTION_72	CALL_5
0x4006712	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2278	dir.c	FUNCTION_72	CALL_5
0x4006717	          0x4531c9	                            xor r9d, r9d	      2278	dir.c	FUNCTION_72	CALL_5
0x400671a	          0x4c89ea	                            mov rdx, r13	      2278	dir.c	FUNCTION_72	CALL_5
0x400671d	          0x4889ef	                            mov rdi, rbp	      2278	dir.c	FUNCTION_72	CALL_5
0x4006720	      0xe82be8ffff	       call sym.read_directory_recursive	      2278	dir.c	FUNCTION_72	CALL_5
0x4006725	            0x415b	                                 pop r11	      2278	dir.c	FUNCTION_72	CALL_5
0x4006727	              0x5b	                                 pop rbx	      2278	dir.c	FUNCTION_72	CALL_5
0x4006728	     0xf1f84000000	                   nop dword [rax + rax]	      2278	dir.c	FUNCTION_72	CALL_5
0x4006730	        0x48637500	                 movsxd rsi, dword [rbp]	      2279	dir.c	FUNCTION_72
0x4006734	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_171	IF_1
0x4006738	            0x7613	                           jbe 0x400674d	      1048	git-compat-util.h	FUNCTION_171	IF_1
0x400673a	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x400673e	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x4006743	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x4006748	      0xe800000000	                          call 0x400674d	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x400674d	        0x48637508	            movsxd rsi, dword [rbp + 8] 	      2280	dir.c	FUNCTION_72
0x4006751	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_171	IF_1
0x4006755	            0x7613	                           jbe 0x400676a	      1048	git-compat-util.h	FUNCTION_171	IF_1
0x4006757	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x400675b	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x4006760	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x4006765	      0xe800000000	                          call 0x400676a	      1049	git-compat-util.h	FUNCTION_171	IF_1
0x400676a	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      2287	dir.c	FUNCTION_72	IF_4
0x400676d	      0x25a0000000	                           and eax, 0xa0	      2287	dir.c	FUNCTION_72	IF_4
0x4006772	          0x83f820	                           cmp eax, 0x20	      2287	dir.c	FUNCTION_72	IF_4
0x4006775	     0xf8415010000	                            je 0x4006890	      2287	dir.c	FUNCTION_72	IF_4
0x400677b	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	      2304	dir.c	FUNCTION_72	CALL_7
0x4006785	    0x482305000000	             and rax, qword [0x0400678c]	      2304	dir.c	FUNCTION_72	CALL_7
0x400678c	    0x48ba00000000	                 movabs rdx, 0x100000000	      2304	dir.c	FUNCTION_72	CALL_7
0x4006796	          0x4839d0	                            cmp rax, rdx	      2304	dir.c	FUNCTION_72	CALL_7
0x4006799	            0x742b	                            je 0x40067c6	      2304	dir.c	FUNCTION_72	CALL_7
0x400679b	      0xe800000000	                          call 0x40067a0	      2304	dir.c	FUNCTION_72	CALL_7
0x40067a0	      0x482b442440	             sub rax, qword [rsp + 0x40]	      2304	dir.c	FUNCTION_72	CALL_7
0x40067a5	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	      2304	dir.c	FUNCTION_72	CALL_7
0x40067aa	          0x4d89e9	                             mov r9, r13	      2304	dir.c	FUNCTION_72	CALL_7
0x40067ad	      0xb900000000	                              mov ecx, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x40067b2	      0xbe00090000	                          mov esi, 0x900	      2304	dir.c	FUNCTION_72	CALL_7
0x40067b7	      0xbf00000000	                              mov edi, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x40067bc	          0x4889c2	                            mov rdx, rax	      2304	dir.c	FUNCTION_72	CALL_7
0x40067bf	            0x31c0	                            xor eax, eax	      2304	dir.c	FUNCTION_72	CALL_7
0x40067c1	      0xe800000000	                          call 0x40067c6	      2304	dir.c	FUNCTION_72	CALL_7
0x40067c6	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2305	dir.c	FUNCTION_72	IF_6
0x40067cd	          0x4885ff	                           test rdi, rdi	      2305	dir.c	FUNCTION_72	IF_6
0x40067d0	     0xf847afdffff	                            je 0x4006550	      2305	dir.c	FUNCTION_72	IF_6
0x40067d6	    0x8b0500000000	            mov eax, dword [0x040067dc] 	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40067dc	            0x85c0	                           test eax, eax	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40067de	     0xf889f050000	                            js 0x4006d83	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40067e4	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40067ee	    0x482315000000	             and rdx, qword [0x040067f5]	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40067f5	    0x48b900000000	                 movabs rcx, 0x100000000	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x40067ff	          0x4839ca	                            cmp rdx, rcx	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006802	            0x7448	                            je 0x400684c	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006804	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400680a	      0xb900000000	                              mov ecx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400680f	      0xba00000000	                              mov edx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006814	      0xbe10090000	                          mov esi, 0x910	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006819	              0x50	                                push rax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400681a	    0x8b87b0000000	            mov eax, dword [rdi + 0xb0] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006820	              0x50	                                push rax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006821	    0x448b8fac0000	            mov r9d, dword [rdi + 0xac] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006828	            0x31c0	                            xor eax, eax	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400682a	    0x448b87a80000	            mov r8d, dword [rdi + 0xa8] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006831	      0xbf00000000	                              mov edi, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006836	      0xe800000000	                          call 0x400683b	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400683b	            0x4158	                                  pop r8	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400683d	            0x4159	                                  pop r9	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400683f	    0x8b0500000000	            mov eax, dword [0x04006845] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4006845	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400684c	            0x85c0	                           test eax, eax	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400684e	      0x488b442408	                mov rax, qword [rsp + 8]	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4006853	            0x742b	                            je 0x4006880	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4006855	    0x4839b8b80000	            cmp qword [rax + 0xb8], rdi 	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400685c	     0xf844b060000	                            je 0x4006ead	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4006862	      0xe800000000	                          call 0x4006867	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4006867	    0x48c785880000	               mov qword [rbp + 0x88], 0	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4006872	      0xe9d9fcffff	                           jmp 0x4006550	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4006877	    0x660f1f840000	                    nop word [rax + rax]	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x4006880	    0x4839b8b80000	            cmp qword [rax + 0xb8], rdi 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4006887	            0x75d9	                           jne 0x4006862	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4006889	      0xe9c2fcffff	                           jmp 0x4006550	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x400688e	            0x6690	                                     nop	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x4006890	        0x448b5500	                   mov r10d, dword [rbp]	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4006894	          0x4585d2	                         test r10d, r10d	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4006897	     0xf8e3e060000	                           jle 0x4006edb	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400689d	            0x31c9	                            xor ecx, ecx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400689f	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068a4	          0x4531ff	                          xor r15d, r15d	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068a7	          0x4989ed	                            mov r13, rbp	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068aa	            0x31db	                            xor ebx, ebx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068ac	            0x89cd	                            mov ebp, ecx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068ae	            0x6690	                                     nop	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068b0	        0x4d8b7518	            mov r14, qword [r13 + 0x18] 	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40068b4	          0x4531e4	                          xor r12d, r12d	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40068b7	            0x85db	                           test ebx, ebx	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40068b9	        0x4b8b0c3e	              mov rcx, qword [r14 + r15]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40068bd	            0x7421	                            je 0x40068e0	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x40068bf	          0x4c63e3	                         movsxd r12, ebx	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40068c2	        0x49c1e403	                              shl r12, 3	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40068c6	      0x4b8b4426f8	          mov rax, qword [r14 + r12 - 8]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x40068cb	            0x8b10	                    mov edx, dword [rax]	      2054	dir.c	FUNCTION_63
0x40068cd	            0x3b11	                    cmp edx, dword [rcx]	      2055	dir.c	FUNCTION_63
0x40068cf	            0x730f	                           jae 0x40068e0	      2055	dir.c	FUNCTION_63
0x40068d1	          0x8d72ff	                      lea esi, [rdx - 1]	      2055	dir.c	FUNCTION_63
0x40068d4	      0x807c30042f	         cmp byte [rax + rsi + 4], 0x2f 	      2054	dir.c	FUNCTION_63
0x40068d9	     0xf84c1030000	                            je 0x4006ca0	      2054	dir.c	FUNCTION_63
0x40068df	              0x90	                                     nop	      2054	dir.c	FUNCTION_63
0x40068e0	          0x83c301	                              add ebx, 1	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x40068e3	        0x4b890c26	              mov qword [r14 + r12], rcx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x40068e7	          0x83c501	                              add ebp, 1	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068ea	        0x4983c708	                              add r15, 8	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068ee	        0x41396d00	                    cmp dword [r13], ebp	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068f2	            0x7fbc	                            jg 0x40068b0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068f4	          0x4c89ed	                            mov rbp, r13	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068f7	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x40068fc	          0x895d00	                    mov dword [rbp], ebx	      2301	dir.c	FUNCTION_72	IF_4
0x40068ff	      0xe977feffff	                           jmp 0x400677b	      2301	dir.c	FUNCTION_72	IF_4
0x4006904	         0xf1f4000	                         nop dword [rax]	      2301	dir.c	FUNCTION_72	IF_4
0x4006908	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      2067	dir.c	FUNCTION_64
0x400690b	          0x4c01e8	                            add rax, r13	      2067	dir.c	FUNCTION_64
0x400690e	        0x89542430	             mov dword [rsp + 0x30], edx	      2067	dir.c	FUNCTION_64
0x4006912	      0x4889442438	             mov qword [rsp + 0x38], rax	      2067	dir.c	FUNCTION_64
0x4006917	        0x488d4560	                   lea rax, [rbp + 0x60]	      2067	dir.c	FUNCTION_64
0x400691b	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      2067	dir.c	FUNCTION_64
0x4006920	      0xbb00000000	                              mov ebx, 0	      2074	dir.c	FUNCTION_64
0x4006925	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2074	dir.c	FUNCTION_64
0x400692e	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      2074	dir.c	FUNCTION_64
0x4006933	            0x89ca	                            mov edx, ecx	      2074	dir.c	FUNCTION_64
0x4006935	        0x894c2450	             mov dword [rsp + 0x50], ecx	      2067	dir.c	FUNCTION_64
0x4006939	            0x31c9	                            xor ecx, ecx	      2073	dir.c	FUNCTION_64
0x400693b	          0x83e2fd	                     and edx, 0xfffffffd	      2074	dir.c	FUNCTION_64
0x400693e	      0x4889442448	             mov qword [rsp + 0x48], rax	      2074	dir.c	FUNCTION_64
0x4006943	          0x4189cd	                           mov r13d, ecx	      2074	dir.c	FUNCTION_64
0x4006946	          0x895510	            mov dword [rbp + 0x10], edx 	      2074	dir.c	FUNCTION_64
0x4006949	     0xf1f80000000	                         nop dword [rax]	      2074	dir.c	FUNCTION_64
0x4006950	            0x31ff	                            xor edi, edi	      2076	dir.c	FUNCTION_64	WHILE_2
0x4006952	          0x4585ed	                         test r13d, r13d	      2076	dir.c	FUNCTION_64	WHILE_2
0x4006955	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2076	dir.c	FUNCTION_64	WHILE_2
0x400695a	        0x400f95c7	                               setne dil	      2076	dir.c	FUNCTION_64	WHILE_2
0x400695e	      0x48037c2420	             add rdi, qword [rsp + 0x20]	      2076	dir.c	FUNCTION_64	WHILE_2
0x4006963	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4006968	      0xbe2f000000	                           mov esi, 0x2f	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x400696d	          0x4c01f7	                            add rdi, r14	      2076	dir.c	FUNCTION_64	WHILE_2
0x4006970	          0x4829fa	                            sub rdx, rdi	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4006973	      0xe800000000	                          call 0x4006978	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4006978	            0x89c2	                            mov edx, eax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x400697a	    0x48c744247800	               mov qword [rsp + 0x78], 0	       164	strbuf.h	FUNCTION_184
0x4006983	          0x4429f2	                           sub edx, r14d	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4006986	          0x4885c0	                           test rax, rax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4006989	       0xf44542430	           cmove edx, dword [rsp + 0x30]	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x400698e	    0x4881fb000000	                              cmp rbx, 0	       165	strbuf.h	FUNCTION_184	IF_2
0x4006995	          0x4189d5	                           mov r13d, edx	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x4006998	     0xf84aa020000	                            je 0x4006c48	       165	strbuf.h	FUNCTION_184	IF_2
0x400699e	          0xc60300	                       mov byte [rbx], 0	       166	strbuf.h	FUNCTION_184	IF_2
0x40069a1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069a6	          0x4963c5	                        movsxd rax, r13d	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069a9	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069ae	          0x4889c2	                            mov rdx, rax	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069b1	      0x4889442420	             mov qword [rsp + 0x20], rax	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069b6	      0xe800000000	                          call 0x40069bb	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x40069bb	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x40069c3	      0xe800000000	                          call 0x40069c8	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x40069c8	            0x85c0	                           test eax, eax	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x40069ca	     0xf84ed000000	                            je 0x4006abd	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x40069d0	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x40069d5	          0x4d85ff	                           test r15, r15	      1528	dir.c	FUNCTION_49	IF_1
0x40069d8	    0x488bac248000	            mov rbp, qword [rsp + 0x80] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x40069e0	      0x4889442428	             mov qword [rsp + 0x28], rax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x40069e5	          0x4863d8	                         movsxd rbx, eax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x40069e8	            0x747e	                            je 0x4006a68	      1528	dir.c	FUNCTION_49	IF_1
0x40069ea	          0x418b07	                    mov eax, dword [r15]	      1528	dir.c	FUNCTION_49	IF_1
0x40069ed	            0x85c0	                           test eax, eax	      1528	dir.c	FUNCTION_49	IF_1
0x40069ef	            0x7477	                            je 0x4006a68	      1528	dir.c	FUNCTION_49	IF_1
0x40069f1	        0x418b4f08	                mov ecx, dword [r15 + 8]	      1531	dir.c	FUNCTION_49
0x40069f5	          0x83e180	                     and ecx, 0xffffff80	      1531	dir.c	FUNCTION_49
0x40069f8	     0xf8541050000	                           jne 0x4006f3f	      1531	dir.c	FUNCTION_49
0x40069fe	            0x85c0	                           test eax, eax	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a00	     0xf8eb7000000	                           jle 0x4006abd	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a06	          0x83e801	                              sub eax, 1	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a09	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a0d	    0x488d34c50000	                        lea rsi, [rax*8]	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a15	        0x48c1e006	                              shl rax, 6	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a19	          0x4829f0	                            sub rax, rsi	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a1c	        0x4c8d721c	                   lea r14, [rdx + 0x1c]	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a20	      0x4c8d640254	            lea r12, [rdx + rax + 0x54] 	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a25	            0xeb1b	                           jmp 0x4006a42	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a27	    0x660f1f840000	                    nop word [rax + rax]	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a30	      0xe800000000	                          call 0x4006a35	        95	pathspec.h	FUNCTION_193	CALL_2
0x4006a35	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a37	            0x742f	                            je 0x4006a68	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a39	        0x4983c638	                           add r14, 0x38	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a3d	          0x4d39f4	                            cmp r12, r14	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a40	            0x747b	                            je 0x4006abd	      1540	dir.c	FUNCTION_49	FOR_1
0x4006a42	          0x496316	                 movsxd rdx, dword [r14]	      1542	dir.c	FUNCTION_49	FOR_1
0x4006a45	        0x498b7ee4	             mov rdi, qword [r14 - 0x1c]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a49	          0x4889ee	                            mov rsi, rbp	        93	pathspec.h	FUNCTION_193	CALL_1
0x4006a4c	            0x39d3	                            cmp ebx, edx	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a4e	        0x480f4ed3	                         cmovle rdx, rbx	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a52	      0x41f646f410	            test byte [r14 - 0xc], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x4006a57	            0x74d7	                            je 0x4006a30	        92	pathspec.h	FUNCTION_193	IF_1
0x4006a59	      0xe800000000	                          call 0x4006a5e	        93	pathspec.h	FUNCTION_193	CALL_1
0x4006a5e	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a60	            0x75d7	                           jne 0x4006a39	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a62	    0x660f1f440000	                    nop word [rax + rax]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x4006a68	    0x8b0d00000000	            mov ecx, dword [0x04006a6e] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a6e	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a72	          0x4889ee	                            mov rsi, rbp	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a75	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a7a	    0xc744246c0400	               mov dword [rsp + 0x6c], 4	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a82	      0xe800000000	                          call 0x4006a87	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a87	          0x4885c0	                           test rax, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a8a	          0x4889c3	                            mov rbx, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a8d	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      1668	dir.c	FUNCTION_53	IF_1
0x4006a91	        0x400f95c5	                               setne bpl	      1665	dir.c	FUNCTION_53	CALL_1
0x4006a95	            0x85c0	                           test eax, eax	      1668	dir.c	FUNCTION_53	IF_1
0x4006a97	            0x751a	                           jne 0x4006ab3	      1668	dir.c	FUNCTION_53	IF_1
0x4006a99	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      1668	dir.c	FUNCTION_53	IF_1
0x4006a9d	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      1668	dir.c	FUNCTION_53	IF_1
0x4006aa5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1668	dir.c	FUNCTION_53	IF_1
0x4006aaa	      0xe8019affff	              call sym.get_dtype.part.10	      1668	dir.c	FUNCTION_53	IF_1
0x4006aaf	        0x8944246c	             mov dword [rsp + 0x6c], eax	      1669	dir.c	FUNCTION_53	CALL_2
0x4006ab3	          0x83f804	                              cmp eax, 4	      1672	dir.c	FUNCTION_53	IF_2
0x4006ab6	            0x7428	                            je 0x4006ae0	      1672	dir.c	FUNCTION_53	IF_2
0x4006ab8	          0x4084ed	                           test bpl, bpl	      1672	dir.c	FUNCTION_53	IF_2
0x4006abb	            0x7423	                            je 0x4006ae0	      1672	dir.c	FUNCTION_53	IF_2
0x4006abd	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2096	dir.c	FUNCTION_64	CALL_7
0x4006ac2	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4006ac7	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4006acc	      0xe800000000	                          call 0x4006ad1	      2096	dir.c	FUNCTION_64	CALL_7
0x4006ad1	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      2097	dir.c	FUNCTION_64
0x4006ad5	          0x894510	            mov dword [rbp + 0x10], eax 	      2097	dir.c	FUNCTION_64
0x4006ad8	      0xe953fcffff	                           jmp 0x4006730	      2097	dir.c	FUNCTION_64
0x4006add	           0xf1f00	                         nop dword [rax]	      2097	dir.c	FUNCTION_64
0x4006ae0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1693	dir.c	FUNCTION_53	IF_3
0x4006ae5	        0xf6411040	           test byte [rcx + 0x10], 0x40 	      1693	dir.c	FUNCTION_53	IF_3
0x4006ae9	            0x740e	                            je 0x4006af9	      1693	dir.c	FUNCTION_53	IF_3
0x4006aeb	          0x83f804	                              cmp eax, 4	      1694	dir.c	FUNCTION_53	IF_3
0x4006aee	            0x7509	                           jne 0x4006af9	      1694	dir.c	FUNCTION_53	IF_3
0x4006af0	          0x4885db	                           test rbx, rbx	      1694	dir.c	FUNCTION_53	IF_3
0x4006af3	     0xf8467010000	                            je 0x4006c60	      1694	dir.c	FUNCTION_53	IF_3
0x4006af9	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      1699	dir.c	FUNCTION_53	CALL_4
0x4006b01	          0x4889df	                            mov rdi, rbx	      1300	dir.c	FUNCTION_41	CALL_1
0x4006b04	      0xe800000000	                          call 0x4006b09	      1300	dir.c	FUNCTION_41	CALL_1
0x4006b09	      0xbe2f000000	                           mov esi, 0x2f	      1301	dir.c	FUNCTION_41	CALL_2
0x4006b0e	          0x4889df	                            mov rdi, rbx	      1301	dir.c	FUNCTION_41	CALL_2
0x4006b11	          0x4989c6	                            mov r14, rax	      1300	dir.c	FUNCTION_41	CALL_1
0x4006b14	      0xe800000000	                          call 0x4006b19	      1301	dir.c	FUNCTION_41	CALL_2
0x4006b19	        0x488d6801	                      lea rbp, [rax + 1]	      1302	dir.c	FUNCTION_41
0x4006b1d	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      1304	dir.c	FUNCTION_41	CALL_3
0x4006b22	      0x488b742408	                mov rsi, qword [rsp + 8]	      1304	dir.c	FUNCTION_41	CALL_3
0x4006b27	      0xba00000000	                              mov edx, 0	      1302	dir.c	FUNCTION_41
0x4006b2c	            0x89e9	                            mov ecx, ebp	      1302	dir.c	FUNCTION_41
0x4006b2e	            0x29d9	                            sub ecx, ebx	      1302	dir.c	FUNCTION_41
0x4006b30	          0x4885c0	                           test rax, rax	      1302	dir.c	FUNCTION_41
0x4006b33	          0x4c89e7	                            mov rdi, r12	      1304	dir.c	FUNCTION_41	CALL_3
0x4006b36	           0xf44ca	                          cmove ecx, edx	      1302	dir.c	FUNCTION_41
0x4006b39	          0x4889da	                            mov rdx, rbx	      1304	dir.c	FUNCTION_41	CALL_3
0x4006b3c	        0x480f44eb	                          cmove rbp, rbx	      1302	dir.c	FUNCTION_41
0x4006b40	      0xe8ebcbffff	                   call sym.prep_exclude	      1304	dir.c	FUNCTION_41	CALL_3
0x4006b45	      0x498b442468	            mov rax, qword [r12 + 0x68] 	      1306	dir.c	FUNCTION_41	IF_1
0x4006b4a	          0x4885c0	                           test rax, rax	      1306	dir.c	FUNCTION_41	IF_1
0x4006b4d	     0xf8485010000	                            je 0x4006cd8	      1306	dir.c	FUNCTION_41	IF_1
0x4006b53	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1324	dir.c	FUNCTION_42	IF_1
0x4006b56	            0x31db	                            xor ebx, ebx	      1324	dir.c	FUNCTION_42	IF_1
0x4006b58	          0x83e010	                           and eax, 0x10	      1324	dir.c	FUNCTION_42	IF_1
0x4006b5b	           0xf94c3	                                 sete bl	      1324	dir.c	FUNCTION_42	IF_1
0x4006b5e	            0x7540	                           jne 0x4006ba0	      1705	dir.c	FUNCTION_53	IF_4
0x4006b60	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1705	dir.c	FUNCTION_53	IF_4
0x4006b65	        0xf6401021	           test byte [rax + 0x10], 0x21 	      1705	dir.c	FUNCTION_53	IF_4
0x4006b69	            0x7535	                           jne 0x4006ba0	      1705	dir.c	FUNCTION_53	IF_4
0x4006b6b	      0x443b6c2430	           cmp r13d, dword [rsp + 0x30] 	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4006b70	     0xf8d17030000	                           jge 0x4006e8d	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4006b76	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4006b7e	      0xe9cdfdffff	                           jmp 0x4006950	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4006b83	        0x4983c510	                           add r13, 0x10	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4006b87	      0x4c3b6c2448	            cmp r13, qword [rsp + 0x48] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4006b8c	     0xf8566010000	                           jne 0x4006cf8	      1121	dir.c	FUNCTION_39	FOR_1
0x4006b92	      0x448b6c2454	           mov r13d, dword [rsp + 0x54] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4006b97	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4006b9c	            0x31db	                            xor ebx, ebx	      1325	dir.c	FUNCTION_42
0x4006b9e	            0x6690	                                     nop	      1325	dir.c	FUNCTION_42
0x4006ba0	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006ba4	          0x83f808	                              cmp eax, 8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006ba7	            0x74c2	                            je 0x4006b6b	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006ba9	          0x83f80a	                            cmp eax, 0xa	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006bac	            0x74bd	                            je 0x4006b6b	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006bae	          0x83f804	                              cmp eax, 4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006bb1	     0xf8506ffffff	                           jne 0x4006abd	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006bb7	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4006bbc	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_183
0x4006bbf	     0xf85c3000000	                           jne 0x4006c88	       141	strbuf.h	FUNCTION_183
0x4006bc5	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       228	strbuf.h	FUNCTION_185	CALL_2
0x4006bca	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_185	CALL_2
0x4006bcf	      0xe800000000	                          call 0x4006bd4	       228	strbuf.h	FUNCTION_185	CALL_2
0x4006bd4	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       228	strbuf.h	FUNCTION_185	CALL_2
0x4006bd9	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_185
0x4006bdd	          0x4589e9	                           mov r9d, r13d	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006be0	      0x4889442478	             mov qword [rsp + 0x78], rax	       229	strbuf.h	FUNCTION_185
0x4006be5	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       229	strbuf.h	FUNCTION_185
0x4006bed	        0xc604102f	              mov byte [rax + rdx], 0x2f	       229	strbuf.h	FUNCTION_185
0x4006bf1	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	       230	strbuf.h	FUNCTION_185
0x4006bf9	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       230	strbuf.h	FUNCTION_185
0x4006bfe	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_185
0x4006c02	            0x4157	                                push r15	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c04	            0x31d2	                            xor edx, edx	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c06	              0x53	                                push rbx	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c07	    0x448b84248800	            mov r8d, dword [rsp + 0x88] 	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c0f	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c17	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c1c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c21	      0xe8baf4ffff	                call sym.treat_directory	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4006c26	            0x85db	                           test ebx, ebx	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c28	              0x5d	                                 pop rbp	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c29	            0x415c	                                 pop r12	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c2b	            0x7509	                           jne 0x4006c36	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c2d	          0x83f802	                              cmp eax, 2	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c30	     0xf8435ffffff	                            je 0x4006b6b	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4006c36	            0x85c0	                           test eax, eax	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4006c38	     0xf852dffffff	                           jne 0x4006b6b	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4006c3e	      0xe97afeffff	                           jmp 0x4006abd	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4006c43	       0xf1f440000	                   nop dword [rax + rax]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4006c48	    0x803d00000000	                cmp byte [0x04006c4f], 0	       168	strbuf.h	FUNCTION_184	CALL_2
0x4006c4f	     0xf844cfdffff	                            je 0x40069a1	       168	strbuf.h	FUNCTION_184	CALL_2
0x4006c55	      0xe800000000	                          call 0x4006c5a	       168	strbuf.h	FUNCTION_184	CALL_2
0x4006c5a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_184	CALL_2
0x4006c60	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4006c64	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4006c6c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4006c71	      0xe89a99ffff	      call sym.directory_exists_in_index	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4006c76	            0x85c0	                           test eax, eax	      1695	dir.c	FUNCTION_53	IF_3
0x4006c78	     0xf857bfeffff	                           jne 0x4006af9	      1695	dir.c	FUNCTION_53	IF_3
0x4006c7e	      0xe93afeffff	                           jmp 0x4006abd	      1695	dir.c	FUNCTION_53	IF_3
0x4006c83	       0xf1f440000	                   nop dword [rax + rax]	      1695	dir.c	FUNCTION_53	IF_3
0x4006c88	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       141	strbuf.h	FUNCTION_183
0x4006c8d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006c91	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006c94	     0xf853fffffff	                           jne 0x4006bd9	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006c9a	      0xe926ffffff	                           jmp 0x4006bc5	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006c9f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006ca0	        0x488d7104	                      lea rsi, [rcx + 4]	      2056	dir.c	FUNCTION_63	CALL_1
0x4006ca4	        0x488d7804	                      lea rdi, [rax + 4]	      2056	dir.c	FUNCTION_63	CALL_1
0x4006ca8	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2056	dir.c	FUNCTION_63	CALL_1
0x4006cad	      0xe800000000	                          call 0x4006cb2	      2056	dir.c	FUNCTION_63	CALL_1
0x4006cb2	            0x85c0	                           test eax, eax	      2055	dir.c	FUNCTION_63
0x4006cb4	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2055	dir.c	FUNCTION_63
0x4006cb9	     0xf8521fcffff	                           jne 0x40068e0	      2055	dir.c	FUNCTION_63
0x4006cbf	          0x4889cf	                            mov rdi, rcx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cc2	      0xe800000000	                          call 0x4006cc7	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cc7	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006ccb	    0x4ac704380000	                mov qword [rax + r15], 0	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cd3	      0xe90ffcffff	                           jmp 0x40068e7	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cd8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cdd	      0x4c897c2458	             mov qword [rsp + 0x58], r15	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006ce2	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006ce7	      0x44896c2454	            mov dword [rsp + 0x54], r13d	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cec	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cf1	        0x4883c030	                           add rax, 0x30	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cf5	          0x4989c5	                            mov r13, rax	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4006cf8	        0x418b4500	                    mov eax, dword [r13]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006cfc	          0x83e801	                              sub eax, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006cff	     0xf887efeffff	                            js 0x4006b83	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d05	          0x4c63e0	                         movsxd r12, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d08	            0x89c0	                            mov eax, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d0a	          0x4c89e3	                            mov rbx, r12	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d0d	          0x4929c4	                            sub r12, rax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d10	        0x49c1e405	                              shl r12, 5	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d14	        0x48c1e305	                              shl rbx, 5	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d18	        0x4983ec20	                           sub r12, 0x20	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d1c	            0xeb0f	                           jmp 0x4006d2d	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d1e	            0x6690	                                     nop	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d20	        0x4883eb20	                           sub rbx, 0x20	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d24	          0x4c39e3	                            cmp rbx, r12	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d27	     0xf8456feffff	                            je 0x4006b83	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4006d2d	          0x4889d8	                            mov rax, rbx	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d30	        0x49034508	                add rax, qword [r13 + 8]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d34	        0x4883ec08	                              sub rsp, 8	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d38	            0x4157	                                push r15	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d3a	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d3f	          0x4889ea	                            mov rdx, rbp	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d42	          0x4489f6	                           mov esi, r14d	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d45	      0x488d4c247c	                   lea rcx, [rsp + 0x7c]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d4a	          0x448b00	                    mov r8d, dword [rax]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d4d	        0x4c8d4818	                    lea r9, [rax + 0x18]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d51	      0xe85aa7ffff	call sym.last_exclude_matching_from_list.isra.19	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4006d56	          0x4885c0	                           test rax, rax	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d59	              0x5a	                                 pop rdx	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d5a	              0x59	                                 pop rcx	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d5b	            0x74c3	                            je 0x4006d20	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d5d	      0x448b6c2454	           mov r13d, dword [rsp + 0x54] 	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d62	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d67	      0xe9e7fdffff	                           jmp 0x4006b53	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4006d6c	            0x31f6	                            xor esi, esi	      2181	dir.c	FUNCTION_71	CALL_1
0x4006d6e	      0xbf00000000	                              mov edi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x4006d73	      0xe800000000	                          call 0x4006d78	      2181	dir.c	FUNCTION_71	CALL_1
0x4006d78	    0x890500000000	            mov dword [0x04006d7e], eax 	      2181	dir.c	FUNCTION_71	CALL_1
0x4006d7e	      0xe919f8ffff	                           jmp 0x400659c	      2181	dir.c	FUNCTION_71	CALL_1
0x4006d83	      0xbf00000000	                              mov edi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4006d88	            0x31f6	                            xor esi, esi	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4006d8a	      0xe800000000	                          call 0x4006d8f	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4006d8f	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4006d96	    0x890500000000	            mov dword [0x04006d9c], eax 	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x4006d9c	      0xe943faffff	                           jmp 0x40067e4	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x4006da1	    0x41838424ac00	               add dword [r12 + 0xac], 1	       767	dir.c	FUNCTION_26
0x4006daa	          0x4889df	                            mov rdi, rbx	       768	dir.c	FUNCTION_26	CALL_1
0x4006dad	      0xe89e9dffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4006db2	    0x488b95cc0000	            mov rdx, qword [rbp + 0xcc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006db9	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006dc0	        0x4889503c	             mov qword [rax + 0x3c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006dc4	    0x488b95d40000	            mov rdx, qword [rbp + 0xd4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006dcb	        0x48895044	             mov qword [rax + 0x44], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006dcf	    0x488b95dc0000	            mov rdx, qword [rbp + 0xdc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006dd6	        0x4889504c	             mov qword [rax + 0x4c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006dda	    0x488b95e40000	            mov rdx, qword [rbp + 0xe4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006de1	        0x48895054	             mov qword [rax + 0x54], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006de5	    0x488b95ec0000	            mov rdx, qword [rbp + 0xec] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006dec	        0x4889505c	             mov qword [rax + 0x5c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006df0	    0x488b95f40000	            mov rdx, qword [rbp + 0xf4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006df7	        0x48895064	             mov qword [rax + 0x64], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006dfb	    0x488b95fc0000	            mov rdx, qword [rbp + 0xfc] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006e02	        0x4889506c	             mov qword [rax + 0x6c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4006e06	    0x8b9504010000	           mov edx, dword [rbp + 0x104] 	      2253	dir.c	FUNCTION_71	IF_12
0x4006e0c	          0x895074	             mov dword [rax + 0x74], edx	      2253	dir.c	FUNCTION_71	IF_12
0x4006e0f	      0xe971f8ffff	                           jmp 0x4006685	      2253	dir.c	FUNCTION_71	IF_12
0x4006e14	    0x41838424ac00	               add dword [r12 + 0xac], 1	       767	dir.c	FUNCTION_26
0x4006e1d	          0x4889df	                            mov rdi, rbx	       768	dir.c	FUNCTION_26	CALL_1
0x4006e20	      0xe82b9dffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4006e25	    0x488b95900000	            mov rdx, qword [rbp + 0x90] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e2c	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e33	          0x488910	                    mov qword [rax], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e36	    0x488b95980000	            mov rdx, qword [rbp + 0x98] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e3d	        0x48895008	                mov qword [rax + 8], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e41	    0x488b95a00000	            mov rdx, qword [rbp + 0xa0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e48	        0x48895010	             mov qword [rax + 0x10], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e4c	    0x488b95a80000	            mov rdx, qword [rbp + 0xa8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e53	        0x48895018	             mov qword [rax + 0x18], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e57	    0x488b95b00000	            mov rdx, qword [rbp + 0xb0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e5e	        0x48895020	             mov qword [rax + 0x20], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e62	    0x488b95b80000	            mov rdx, qword [rbp + 0xb8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e69	        0x48895028	             mov qword [rax + 0x28], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e6d	    0x488b95c00000	            mov rdx, qword [rbp + 0xc0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e74	        0x48895030	             mov qword [rax + 0x30], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e78	    0x8b95c8000000	            mov edx, dword [rbp + 0xc8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e7e	          0x895038	             mov dword [rax + 0x38], edx	      2248	dir.c	FUNCTION_71	IF_11
0x4006e81	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4006e88	      0xe9daf7ffff	                           jmp 0x4006667	      2248	dir.c	FUNCTION_71	IF_11
0x4006e8d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2096	dir.c	FUNCTION_64	CALL_7
0x4006e92	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4006e97	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2096	dir.c	FUNCTION_64	CALL_7
0x4006e9c	      0xe800000000	                          call 0x4006ea1	      2096	dir.c	FUNCTION_64	CALL_7
0x4006ea1	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      2097	dir.c	FUNCTION_64
0x4006ea5	          0x894510	            mov dword [rbp + 0x10], eax 	      2097	dir.c	FUNCTION_64
0x4006ea8	      0xe958f8ffff	                           jmp 0x4006705	      2097	dir.c	FUNCTION_64
0x4006ead	    0x8bb7b4000000	            mov esi, dword [rdi + 0xb4] 	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4006eb3	            0x85f6	                           test esi, esi	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4006eb5	            0x7518	                           jne 0x4006ecf	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4006eb7	    0x8b8fac000000	            mov ecx, dword [rdi + 0xac] 	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ebd	            0x85c9	                           test ecx, ecx	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ebf	            0x750e	                           jne 0x4006ecf	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ec1	    0x8b97b0000000	            mov edx, dword [rdi + 0xb0] 	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ec7	            0x85d2	                           test edx, edx	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ec9	     0xf8481f6ffff	                            je 0x4006550	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ecf	    0x814814800000	             or dword [rax + 0x14], 0x80	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x4006ed6	      0xe975f6ffff	                           jmp 0x4006550	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x4006edb	            0x31db	                            xor ebx, ebx	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4006edd	      0xe91afaffff	                           jmp 0x40068fc	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4006ee2	      0xbf60000000	                           mov edi, 0x60	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4006ee7	      0xe800000000	                          call 0x4006eec	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4006eec	    0x49898424a000	             mov qword [r12 + 0xa0], rax	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x4006ef4	    0x488b85880000	            mov rax, qword [rbp + 0x88] 	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x4006efb	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        90	string3.h	FUNCTION_133	CALL_6
0x4006f02	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_133	CALL_6
0x4006f06	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4006f0d	    0x48c740580000	               mov qword [rax + 0x58], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4006f15	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_133	CALL_6
0x4006f19	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_133	CALL_6
0x4006f1c	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_133	CALL_6
0x4006f1f	          0x4889d8	                            mov rax, rbx	        90	string3.h	FUNCTION_133	CALL_6
0x4006f22	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_133	CALL_6
0x4006f25	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_133	CALL_6
0x4006f28	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_133	CALL_6
0x4006f2b	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	        90	string3.h	FUNCTION_133	CALL_6
0x4006f32	    0x498b9c24a000	            mov rbx, qword [r12 + 0xa0] 	        90	string3.h	FUNCTION_133	CALL_6
0x4006f3a	      0xe90af7ffff	                           jmp 0x4006649	        90	string3.h	FUNCTION_133	CALL_6
0x4006f3f	      0xba02060000	                          mov edx, 0x602	      1531	dir.c	FUNCTION_49
0x4006f44	      0xbe00000000	                              mov esi, 0	      1531	dir.c	FUNCTION_49
0x4006f49	      0xbf00000000	                              mov edi, 0	      1531	dir.c	FUNCTION_49
0x4006f4e	            0x31c0	                            xor eax, eax	      1531	dir.c	FUNCTION_49
0x4006f50	      0xe800000000	                          call 0x4006f55	      1531	dir.c	FUNCTION_49
0x4006f55	      0xe800000000	                          call 0x4006f5a	      2332	dir.c	FUNCTION_72
write_untracked_extension	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,33:DO,0	174
0x4007ca0	            0x4156	                                push r14	      2653	dir.c	FUNCTION_85
0x4007ca2	            0x4155	                                push r13	      2653	dir.c	FUNCTION_85
0x4007ca4	            0x4154	                                push r12	      2653	dir.c	FUNCTION_85
0x4007ca6	              0x55	                                push rbp	      2653	dir.c	FUNCTION_85
0x4007ca7	          0x4889f5	                            mov rbp, rsi	      2653	dir.c	FUNCTION_85
0x4007caa	              0x53	                                push rbx	      2653	dir.c	FUNCTION_85
0x4007cab	          0x4889fb	                            mov rbx, rdi	      2653	dir.c	FUNCTION_85
0x4007cae	    0x4881ec900000	                           sub rsp, 0x90	      2653	dir.c	FUNCTION_85
0x4007cb5	        0x488b7e78	            mov rdi, qword [rsi + 0x78] 	      2658	dir.c	FUNCTION_85	CALL_1
0x4007cb9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2653	dir.c	FUNCTION_85
0x4007cc2	    0x488984248800	             mov qword [rsp + 0x88], rax	      2653	dir.c	FUNCTION_85
0x4007cca	            0x31c0	                            xor eax, eax	      2653	dir.c	FUNCTION_85
0x4007ccc	      0xe800000000	                          call 0x4007cd1	      2658	dir.c	FUNCTION_85	CALL_1
0x4007cd1	        0x4883f88b	             cmp rax, 0xffffffffffffff8b	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4007cd5	          0x4989c5	                            mov r13, rax	      2658	dir.c	FUNCTION_85	CALL_1
0x4007cd8	     0xf8785020000	                            ja 0x4007f63	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4007cde	     0xf8493020000	                            je 0x4007f77	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4007ce4	        0x4c8d7075	                   lea r14, [rax + 0x75]	       788	git-compat-util.h	FUNCTION_160
0x4007ce8	      0xbf01000000	                              mov edi, 1	      2660	dir.c	FUNCTION_85
0x4007ced	          0x4c89f6	                            mov rsi, r14	      2660	dir.c	FUNCTION_85
0x4007cf0	      0xe800000000	                          call 0x4007cf5	      2660	dir.c	FUNCTION_85
0x4007cf5	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007cf9	        0x488d7874	                   lea rdi, [rax + 0x74]	        53	string3.h	FUNCTION_130	CALL_3
0x4007cfd	          0x4989c4	                            mov r12, rax	      2660	dir.c	FUNCTION_85
0x4007d00	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_130	CALL_3
0x4007d03	      0xe800000000	                          call 0x4007d08	        53	string3.h	FUNCTION_130	CALL_3
0x4007d08	          0x4889ee	                            mov rsi, rbp	      2661	dir.c	FUNCTION_85	CALL_2
0x4007d0b	          0x4c89e7	                            mov rdi, r12	      2661	dir.c	FUNCTION_85	CALL_2
0x4007d0e	      0xe88d83ffff	              call sym.stat_data_to_disk	      2661	dir.c	FUNCTION_85	CALL_2
0x4007d13	        0x488d753c	                   lea rsi, [rbp + 0x3c]	      2662	dir.c	FUNCTION_85	CALL_3
0x4007d17	      0x498d7c2424	                   lea rdi, [r12 + 0x24]	      2662	dir.c	FUNCTION_85	CALL_3
0x4007d1c	      0xe87f83ffff	              call sym.stat_data_to_disk	      2662	dir.c	FUNCTION_85	CALL_3
0x4007d21	        0x488b4d24	            mov rcx, qword [rbp + 0x24] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d25	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2667	dir.c	FUNCTION_85	CALL_6
0x4007d2a	      0x49894c244c	             mov qword [r12 + 0x4c], rcx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d2f	        0x488b4d2c	            mov rcx, qword [rbp + 0x2c] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d33	      0x49894c2454	             mov qword [r12 + 0x54], rcx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d38	          0x8b5534	            mov edx, dword [rbp + 0x34] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d3b	      0x418954245c	             mov dword [r12 + 0x5c], edx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d40	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d44	      0x49894c2460	             mov qword [r12 + 0x60], rcx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d49	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d4d	      0x49894c2468	             mov qword [r12 + 0x68], rcx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d52	          0x8b5570	            mov edx, dword [rbp + 0x70] 	        53	string3.h	FUNCTION_130	CALL_3
0x4007d55	      0x4189542470	             mov dword [r12 + 0x70], edx	        53	string3.h	FUNCTION_130	CALL_3
0x4007d5a	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2667	dir.c	FUNCTION_85	CALL_6
0x4007d61	    0x8b8598000000	            mov eax, dword [rbp + 0x98] 	        44	bswap.h	FUNCTION_144	CALL_3
0x4007d67	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x4007d69	      0x4189442448	             mov dword [r12 + 0x48], eax	      2665	dir.c	FUNCTION_85
0x4007d6e	      0xe800000000	                          call 0x4007d73	      2667	dir.c	FUNCTION_85	CALL_6
0x4007d73	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2668	dir.c	FUNCTION_85	CALL_7
0x4007d78	          0x4863d0	                         movsxd rdx, eax	      2668	dir.c	FUNCTION_85	CALL_7
0x4007d7b	          0x4889df	                            mov rdi, rbx	      2668	dir.c	FUNCTION_85	CALL_7
0x4007d7e	      0xe800000000	                          call 0x4007d83	      2668	dir.c	FUNCTION_85	CALL_7
0x4007d83	    0x488db5800000	                   lea rsi, [rbp + 0x80]	      2669	dir.c	FUNCTION_85	CALL_8
0x4007d8a	          0x4889df	                            mov rdi, rbx	      2669	dir.c	FUNCTION_85	CALL_8
0x4007d8d	      0xe800000000	                          call 0x4007d92	      2669	dir.c	FUNCTION_85	CALL_8
0x4007d92	          0x4c89f2	                            mov rdx, r14	      2671	dir.c	FUNCTION_85	CALL_9
0x4007d95	          0x4c89e6	                            mov rsi, r12	      2671	dir.c	FUNCTION_85	CALL_9
0x4007d98	          0x4889df	                            mov rdi, rbx	      2671	dir.c	FUNCTION_85	CALL_9
0x4007d9b	      0xe800000000	                          call 0x4007da0	      2671	dir.c	FUNCTION_85	CALL_9
0x4007da0	          0x4c89e7	                            mov rdi, r12	      2672	dir.c	FUNCTION_85
0x4007da3	      0xe800000000	                          call 0x4007da8	      2672	dir.c	FUNCTION_85
0x4007da8	    0x4883bda00000	               cmp qword [rbp + 0xa0], 0	      2674	dir.c	FUNCTION_85	IF_1
0x4007db0	     0xf848a010000	                            je 0x4007f40	      2674	dir.c	FUNCTION_85	IF_1
0x4007db6	      0x4c8d742420	                   lea r14, [rsp + 0x20]	      2684	dir.c	FUNCTION_85	CALL_15
0x4007dbb	      0x4c8d6c2438	                   lea r13, [rsp + 0x38]	      2685	dir.c	FUNCTION_85	CALL_16
0x4007dc0	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      2686	dir.c	FUNCTION_85	CALL_17
0x4007dc5	    0xc70424000000	                      mov dword [rsp], 0	      2680	dir.c	FUNCTION_85
0x4007dcc	      0xe800000000	                          call 0x4007dd1	      2681	dir.c	FUNCTION_85	CALL_12
0x4007dd1	      0x4889442408	                mov qword [rsp + 8], rax	      2681	dir.c	FUNCTION_85	CALL_12
0x4007dd6	      0xe800000000	                          call 0x4007ddb	      2682	dir.c	FUNCTION_85	CALL_13
0x4007ddb	      0x4889442410	             mov qword [rsp + 0x10], rax	      2682	dir.c	FUNCTION_85	CALL_13
0x4007de0	      0xe800000000	                          call 0x4007de5	      2683	dir.c	FUNCTION_85	CALL_14
0x4007de5	      0xbe00040000	                          mov esi, 0x400	      2684	dir.c	FUNCTION_85	CALL_15
0x4007dea	          0x4c89f7	                            mov rdi, r14	      2684	dir.c	FUNCTION_85	CALL_15
0x4007ded	      0x4889442418	             mov qword [rsp + 0x18], rax	      2683	dir.c	FUNCTION_85	CALL_14
0x4007df2	      0xe800000000	                          call 0x4007df7	      2684	dir.c	FUNCTION_85	CALL_15
0x4007df7	      0xbe00040000	                          mov esi, 0x400	      2685	dir.c	FUNCTION_85	CALL_16
0x4007dfc	          0x4c89ef	                            mov rdi, r13	      2685	dir.c	FUNCTION_85	CALL_16
0x4007dff	      0xe800000000	                          call 0x4007e04	      2685	dir.c	FUNCTION_85	CALL_16
0x4007e04	      0xbe00040000	                          mov esi, 0x400	      2686	dir.c	FUNCTION_85	CALL_17
0x4007e09	          0x4c89e7	                            mov rdi, r12	      2686	dir.c	FUNCTION_85	CALL_17
0x4007e0c	      0xe800000000	                          call 0x4007e11	      2686	dir.c	FUNCTION_85	CALL_17
0x4007e11	    0x488bbda00000	            mov rdi, qword [rbp + 0xa0] 	      2687	dir.c	FUNCTION_85	CALL_18
0x4007e18	          0x4889e6	                            mov rsi, rsp	      2687	dir.c	FUNCTION_85	CALL_18
0x4007e1b	      0xe86083ffff	                  call sym.write_one_dir	      2687	dir.c	FUNCTION_85	CALL_18
0x4007e20	        0x48633c24	                 movsxd rdi, dword [rsp]	      2689	dir.c	FUNCTION_85	CALL_19
0x4007e24	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2689	dir.c	FUNCTION_85	CALL_19
0x4007e29	      0xe800000000	                          call 0x4007e2e	      2689	dir.c	FUNCTION_85	CALL_19
0x4007e2e	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2690	dir.c	FUNCTION_85	CALL_20
0x4007e33	          0x4863d0	                         movsxd rdx, eax	      2690	dir.c	FUNCTION_85	CALL_20
0x4007e36	          0x4889df	                            mov rdi, rbx	      2690	dir.c	FUNCTION_85	CALL_20
0x4007e39	      0xe800000000	                          call 0x4007e3e	      2690	dir.c	FUNCTION_85	CALL_20
0x4007e3e	          0x4c89f6	                            mov rsi, r14	      2691	dir.c	FUNCTION_85	CALL_21
0x4007e41	          0x4889df	                            mov rdi, rbx	      2691	dir.c	FUNCTION_85	CALL_21
0x4007e44	      0xe800000000	                          call 0x4007e49	      2691	dir.c	FUNCTION_85	CALL_21
0x4007e49	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2692	dir.c	FUNCTION_85	CALL_22
0x4007e4e	          0x4889de	                            mov rsi, rbx	      2692	dir.c	FUNCTION_85	CALL_22
0x4007e51	      0xe800000000	                          call 0x4007e56	      2692	dir.c	FUNCTION_85	CALL_22
0x4007e56	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2693	dir.c	FUNCTION_85	CALL_23
0x4007e5b	          0x4889de	                            mov rsi, rbx	      2693	dir.c	FUNCTION_85	CALL_23
0x4007e5e	      0xe800000000	                          call 0x4007e63	      2693	dir.c	FUNCTION_85	CALL_23
0x4007e63	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2694	dir.c	FUNCTION_85	CALL_24
0x4007e68	          0x4889de	                            mov rsi, rbx	      2694	dir.c	FUNCTION_85	CALL_24
0x4007e6b	      0xe800000000	                          call 0x4007e70	      2694	dir.c	FUNCTION_85	CALL_24
0x4007e70	          0x4c89ee	                            mov rsi, r13	      2695	dir.c	FUNCTION_85	CALL_25
0x4007e73	          0x4889df	                            mov rdi, rbx	      2695	dir.c	FUNCTION_85	CALL_25
0x4007e76	      0xe800000000	                          call 0x4007e7b	      2695	dir.c	FUNCTION_85	CALL_25
0x4007e7b	          0x4c89e6	                            mov rsi, r12	      2696	dir.c	FUNCTION_85	CALL_26
0x4007e7e	          0x4889df	                            mov rdi, rbx	      2696	dir.c	FUNCTION_85	CALL_26
0x4007e81	      0xe800000000	                          call 0x4007e86	      2696	dir.c	FUNCTION_85	CALL_26
0x4007e86	          0x488b03	                    mov rax, qword [rbx]	      2696	dir.c	FUNCTION_85	CALL_26
0x4007e89	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_183
0x4007e8c	     0xf848e000000	                            je 0x4007f20	       141	strbuf.h	FUNCTION_183
0x4007e92	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_183
0x4007e96	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4007e9a	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4007e9d	     0xf847d000000	                            je 0x4007f20	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4007ea3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_185
0x4007ea7	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_185
0x4007eab	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_185
0x4007eaf	        0xc6041000	                 mov byte [rax + rdx], 0	       229	strbuf.h	FUNCTION_185
0x4007eb3	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_185
0x4007eb7	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_185
0x4007ebb	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_185
0x4007ebf	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2699	dir.c	FUNCTION_85	CALL_28
0x4007ec4	      0xe800000000	                          call 0x4007ec9	      2699	dir.c	FUNCTION_85	CALL_28
0x4007ec9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2700	dir.c	FUNCTION_85	CALL_29
0x4007ece	      0xe800000000	                          call 0x4007ed3	      2700	dir.c	FUNCTION_85	CALL_29
0x4007ed3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2701	dir.c	FUNCTION_85	CALL_30
0x4007ed8	      0xe800000000	                          call 0x4007edd	      2701	dir.c	FUNCTION_85	CALL_30
0x4007edd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2702	dir.c	FUNCTION_85	CALL_31
0x4007ee2	      0xe800000000	                          call 0x4007ee7	      2702	dir.c	FUNCTION_85	CALL_31
0x4007ee7	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      2703	dir.c	FUNCTION_85	CALL_32
0x4007eec	      0xe800000000	                          call 0x4007ef1	      2703	dir.c	FUNCTION_85	CALL_32
0x4007ef1	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2704	dir.c	FUNCTION_85	CALL_33
0x4007ef6	      0xe800000000	                          call 0x4007efb	      2704	dir.c	FUNCTION_85	CALL_33
0x4007efb	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      2705	dir.c	FUNCTION_85
0x4007f03	    0x644833042528	                xor rax, qword fs:[0x28]	      2705	dir.c	FUNCTION_85
0x4007f0c	            0x7550	                           jne 0x4007f5e	      2705	dir.c	FUNCTION_85
0x4007f0e	    0x4881c4900000	                           add rsp, 0x90	      2705	dir.c	FUNCTION_85
0x4007f15	              0x5b	                                 pop rbx	      2705	dir.c	FUNCTION_85
0x4007f16	              0x5d	                                 pop rbp	      2705	dir.c	FUNCTION_85
0x4007f17	            0x415c	                                 pop r12	      2705	dir.c	FUNCTION_85
0x4007f19	            0x415d	                                 pop r13	      2705	dir.c	FUNCTION_85
0x4007f1b	            0x415e	                                 pop r14	      2705	dir.c	FUNCTION_85
0x4007f1d	              0xc3	                                     ret	      2705	dir.c	FUNCTION_85
0x4007f1e	            0x6690	                                     nop	      2705	dir.c	FUNCTION_85
0x4007f20	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f25	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f28	      0xe800000000	                          call 0x4007f2d	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f2d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f31	      0xe96dffffff	                           jmp 0x4007ea3	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_185	CALL_2
0x4007f40	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4007f45	            0x31ff	                            xor edi, edi	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4007f47	      0xe800000000	                          call 0x4007f4c	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4007f4c	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4007f51	          0x4863d0	                         movsxd rdx, eax	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4007f54	          0x4889df	                            mov rdi, rbx	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4007f57	      0xe800000000	                          call 0x4007f5c	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4007f5c	            0xeb9d	                           jmp 0x4007efb	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4007f5e	      0xe800000000	                          call 0x4007f63	      2705	dir.c	FUNCTION_85
0x4007f63	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f66	      0xbe74000000	                           mov esi, 0x74	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f6b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f70	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f72	      0xe800000000	                          call 0x4007f77	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f77	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f7c	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f80	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f85	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4007f87	      0xe800000000	                          call 0x4007f8c	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
count_slashes	FOR,0:WHILE,1:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,0:DO,0	12
0x4002350	            0x31c0	                            xor eax, eax	        60	dir.c	FUNCTION_1
0x4002352	            0xeb13	                           jmp 0x4002367	        61	dir.c	FUNCTION_1	WHILE_1
0x4002354	         0xf1f4000	                         nop dword [rax]	        61	dir.c	FUNCTION_1	WHILE_1
0x4002358	        0x4883c701	                              add rdi, 1	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400235c	          0x80fa2f	                            cmp dl, 0x2f	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400235f	           0xf94c2	                                 sete dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4002362	           0xfb6d2	                           movzx edx, dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4002365	             0x1d0	                            add eax, edx	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4002367	           0xfb617	                   movzx edx, byte [rdi]	        61	dir.c	FUNCTION_1	WHILE_1
0x400236a	            0x84d2	                             test dl, dl	        61	dir.c	FUNCTION_1	WHILE_1
0x400236c	            0x75ea	                           jne 0x4002358	        61	dir.c	FUNCTION_1	WHILE_1
0x400236e	            0xf3c3	                                     ret	        65	dir.c	FUNCTION_1
read_stat	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,1:DO,0	49
0x40022b0	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2820	dir.c	FUNCTION_91	IF_1
0x40022b4	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2820	dir.c	FUNCTION_91	IF_1
0x40022b8	        0x488d4a24	                   lea rcx, [rdx + 0x24]	      2820	dir.c	FUNCTION_91	IF_1
0x40022bc	          0x4839c8	                            cmp rax, rcx	      2820	dir.c	FUNCTION_91	IF_1
0x40022bf	            0x730f	                           jae 0x40022d0	      2820	dir.c	FUNCTION_91	IF_1
0x40022c1	        0x4883c001	                              add rax, 1	      2821	dir.c	FUNCTION_91	IF_1
0x40022c5	        0x48894628	             mov qword [rsi + 0x28], rax	      2821	dir.c	FUNCTION_91	IF_1
0x40022c9	              0xc3	                                     ret	      2822	dir.c	FUNCTION_91	IF_1
0x40022ca	    0x660f1f440000	                    nop word [rax + rax]	      2822	dir.c	FUNCTION_91	IF_1
0x40022d0	        0x488b4608	                mov rax, qword [rsi + 8]	      2819	dir.c	FUNCTION_91
0x40022d4	        0x488b04f8	            mov rax, qword [rax + rdi*8]	      2819	dir.c	FUNCTION_91
0x40022d8	          0x488b3a	                    mov rdi, qword [rdx]	        53	string3.h	FUNCTION_130	CALL_3
0x40022db	        0x48897810	             mov qword [rax + 0x10], rdi	        53	string3.h	FUNCTION_130	CALL_3
0x40022df	        0x488b7a08	                mov rdi, qword [rdx + 8]	        53	string3.h	FUNCTION_130	CALL_3
0x40022e3	          0x8b4810	            mov ecx, dword [rax + 0x10] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40022e6	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x40022e8	        0x48897818	             mov qword [rax + 0x18], rdi	        53	string3.h	FUNCTION_130	CALL_3
0x40022ec	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	        53	string3.h	FUNCTION_130	CALL_3
0x40022f0	        0x48897820	             mov qword [rax + 0x20], rdi	        53	string3.h	FUNCTION_130	CALL_3
0x40022f4	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	        53	string3.h	FUNCTION_130	CALL_3
0x40022f8	        0x48897828	             mov qword [rax + 0x28], rdi	        53	string3.h	FUNCTION_130	CALL_3
0x40022fc	          0x8b5220	            mov edx, dword [rdx + 0x20] 	        53	string3.h	FUNCTION_130	CALL_3
0x40022ff	          0x894810	             mov dword [rax + 0x10], ecx	      2741	dir.c	FUNCTION_88
0x4002302	          0x8b4814	            mov ecx, dword [rax + 0x14] 	        44	bswap.h	FUNCTION_144	CALL_3
0x4002305	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_144	CALL_3
0x4002307	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x4002309	          0x895030	             mov dword [rax + 0x30], edx	      2749	dir.c	FUNCTION_88
0x400230c	          0x894814	             mov dword [rax + 0x14], ecx	      2742	dir.c	FUNCTION_88
0x400230f	          0x8b4818	            mov ecx, dword [rax + 0x18] 	        44	bswap.h	FUNCTION_144	CALL_3
0x4002312	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x4002314	          0x894818	             mov dword [rax + 0x18], ecx	      2743	dir.c	FUNCTION_88
0x4002317	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	        44	bswap.h	FUNCTION_144	CALL_3
0x400231a	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x400231c	          0x89481c	             mov dword [rax + 0x1c], ecx	      2744	dir.c	FUNCTION_88
0x400231f	          0x8b4820	            mov ecx, dword [rax + 0x20] 	        44	bswap.h	FUNCTION_144	CALL_3
0x4002322	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x4002324	          0x894820	             mov dword [rax + 0x20], ecx	      2745	dir.c	FUNCTION_88
0x4002327	          0x8b4824	            mov ecx, dword [rax + 0x24] 	        44	bswap.h	FUNCTION_144	CALL_3
0x400232a	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x400232c	          0x894824	             mov dword [rax + 0x24], ecx	      2746	dir.c	FUNCTION_88
0x400232f	          0x8b4828	            mov ecx, dword [rax + 0x28] 	        44	bswap.h	FUNCTION_144	CALL_3
0x4002332	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x4002334	          0x894828	             mov dword [rax + 0x28], ecx	      2747	dir.c	FUNCTION_88
0x4002337	          0x8b482c	            mov ecx, dword [rax + 0x2c] 	        44	bswap.h	FUNCTION_144	CALL_3
0x400233a	             0xfc9	                               bswap ecx	        44	bswap.h	FUNCTION_144	CALL_3
0x400233c	          0x89482c	             mov dword [rax + 0x2c], ecx	      2748	dir.c	FUNCTION_88
0x400233f	      0x4883462824	           add qword [rsi + 0x28], 0x24 	      2825	dir.c	FUNCTION_91
0x4002344	        0x80484402	                 or byte [rax + 0x44], 2	      2826	dir.c	FUNCTION_91
0x4002348	              0xc3	                                     ret	      2826	dir.c	FUNCTION_91
submodule_path_match	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2:DO,0	336
0x4002be0	            0x4157	                                push r15	       520	dir.c	FUNCTION_15
0x4002be2	            0x4156	                                push r14	       520	dir.c	FUNCTION_15
0x4002be4	          0x4989f6	                            mov r14, rsi	       520	dir.c	FUNCTION_15
0x4002be7	            0x4155	                                push r13	       520	dir.c	FUNCTION_15
0x4002be9	            0x4154	                                push r12	       520	dir.c	FUNCTION_15
0x4002beb	          0x4989fd	                            mov r13, rdi	       520	dir.c	FUNCTION_15
0x4002bee	              0x55	                                push rbp	       520	dir.c	FUNCTION_15
0x4002bef	              0x53	                                push rbx	       520	dir.c	FUNCTION_15
0x4002bf0	          0x4889f7	                            mov rdi, rsi	       522	dir.c	FUNCTION_15	CALL_2
0x4002bf3	        0x4883ec48	                           sub rsp, 0x48	       520	dir.c	FUNCTION_15
0x4002bf7	      0x4889542408	                mov qword [rsp + 8], rdx	       520	dir.c	FUNCTION_15
0x4002bfc	      0xe800000000	                          call 0x4002c01	       522	dir.c	FUNCTION_15	CALL_2
0x4002c01	        0x418b7508	                mov esi, dword [r13 + 8]	       435	dir.c	FUNCTION_13
0x4002c05	        0x89442418	             mov dword [rsp + 0x18], eax	       521	dir.c	FUNCTION_15	CALL_1
0x4002c09	            0x89f1	                            mov ecx, esi	       435	dir.c	FUNCTION_13
0x4002c0b	          0x83e180	                     and ecx, 0xffffff80	       435	dir.c	FUNCTION_13
0x4002c0e	     0xf85eb040000	                           jne 0x40030ff	       435	dir.c	FUNCTION_13
0x4002c14	        0x418b5500	                    mov edx, dword [r13]	       444	dir.c	FUNCTION_13	IF_1
0x4002c18	            0x85d2	                           test edx, edx	       444	dir.c	FUNCTION_13	IF_1
0x4002c1a	            0x7564	                           jne 0x4002c80	       444	dir.c	FUNCTION_13	IF_1
0x4002c1c	      0x41f6450402	                  test byte [r13 + 4], 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c21	     0xf84d9010000	                            je 0x4002e00	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c27	          0x83e602	                              and esi, 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c2a	     0xf84d0010000	                            je 0x4002e00	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c30	        0x418b750c	              mov esi, dword [r13 + 0xc]	       447	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c34	          0x83feff	             cmp esi, 0xffffffffffffffff	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c37	     0xf84c3010000	                            je 0x4002e00	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4002c3d	            0x4898	                                    cdqe	       213	dir.c	FUNCTION_9
0x4002c3f	          0x4c01f0	                            add rax, r14	       213	dir.c	FUNCTION_9
0x4002c42	          0x4939c6	                            cmp r14, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c45	            0x7329	                           jae 0x4002c70	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c47	            0x31c9	                            xor ecx, ecx	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c49	            0xeb0a	                           jmp 0x4002c55	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c4b	       0xf1f440000	                   nop dword [rax + rax]	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c50	          0x4c39f0	                            cmp rax, r14	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c53	            0x741b	                            je 0x4002c70	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c55	        0x4983c601	                              add r14, 1	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002c59	      0x41807eff2f	                cmp byte [r14 - 1], 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002c5e	            0x75f0	                           jne 0x4002c50	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002c60	          0x83c101	                              add ecx, 1	       218	dir.c	FUNCTION_9	WHILE_1
0x4002c63	            0x39ce	                            cmp esi, ecx	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4002c65	     0xf8c9a010000	                            jl 0x4002e05	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4002c6b	          0x4c39f0	                            cmp rax, r14	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c6e	            0x75e5	                           jne 0x4002c55	       215	dir.c	FUNCTION_9	WHILE_1
0x4002c70	      0xba03000000	                              mov edx, 3	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4002c75	      0xe98b010000	                           jmp 0x4002e05	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4002c7a	    0x660f1f440000	                    nop word [rax + rax]	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4002c80	          0x83ea01	                              sub edx, 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c83	     0xf885e040000	                            js 0x40030e7	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c89	          0x4c63e2	                         movsxd r12, edx	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c8c	            0x89d2	                            mov edx, edx	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c8e	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c96	    0x4a8d04e50000	                        lea rax, [r12*8]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002c9e	          0x4d89e2	                            mov r10, r12	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002ca1	      0x4c89742420	             mov qword [rsp + 0x20], r14	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002ca6	        0x49c1e206	                              shl r10, 6	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002caa	          0x4929c2	                            sub r10, rax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cad	      0x488b442408	                mov rax, qword [rsp + 8]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cb2	          0x4d89d7	                            mov r15, r10	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cb5	        0x4a8d2c20	                    lea rbp, [rax + r12]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cb9	        0x4983ec01	                              sub r12, 1	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cbd	          0x4929d4	                            sub r12, rdx	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cc0	          0x4901c4	                            add r12, rax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cc3	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cc8	        0x4c892424	                    mov qword [rsp], r12	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002ccc	      0x4889442428	             mov qword [rsp + 0x28], rax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cd1	     0xf1f80000000	                         nop dword [rax]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002cd8	          0x4d89fc	                            mov r12, r15	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4002cdb	        0x4d036510	             add r12, qword [r13 + 0x10]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4002cdf	      0x418b442410	            mov eax, dword [r12 + 0x10] 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4002ce4	            0xa820	                           test al, 0x20	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4002ce6	     0xf85f4000000	                           jne 0x4002de0	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4002cec	    0x48837c240800	                  cmp qword [rsp + 8], 0	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4002cf2	            0x740a	                            je 0x4002cfe	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4002cf4	        0x807d0003	                       cmp byte [rbp], 3	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4002cf8	     0xf84e2000000	                            je 0x4002de0	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x4002cfe	      0x4963542418	         movsxd rdx, dword [r12 + 0x18] 	       356	dir.c	FUNCTION_12	IF_1
0x4002d03	      0x418b4c2414	            mov ecx, dword [r12 + 0x14] 	       325	dir.c	FUNCTION_12
0x4002d08	        0x4d8b3424	                    mov r14, qword [r12]	       324	dir.c	FUNCTION_12
0x4002d0c	        0x894c2414	             mov dword [rsp + 0x14], ecx	       325	dir.c	FUNCTION_12
0x4002d10	            0x85d2	                           test edx, edx	       356	dir.c	FUNCTION_12	IF_1
0x4002d12	            0x741c	                            je 0x4002d30	       356	dir.c	FUNCTION_12	IF_1
0x4002d14	            0xa810	                           test al, 0x10	       356	dir.c	FUNCTION_12	IF_1
0x4002d16	            0x7418	                            je 0x4002d30	       356	dir.c	FUNCTION_12	IF_1
0x4002d18	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4002d1d	          0x4c89f7	                            mov rdi, r14	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4002d20	      0xe800000000	                          call 0x4002d25	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4002d25	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x4002d27	     0xf85b3000000	                           jne 0x4002de0	       356	dir.c	FUNCTION_12	IF_1
0x4002d2d	           0xf1f00	                         nop dword [rax]	       356	dir.c	FUNCTION_12	IF_1
0x4002d30	      0x418b442424	            mov eax, dword [r12 + 0x24] 	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4002d35	            0x85c0	                           test eax, eax	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4002d37	     0xf85e3000000	                           jne 0x4002e20	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4002d3d	        0x41803e00	                       cmp byte [r14], 0	       364	dir.c	FUNCTION_12	IF_3
0x4002d41	            0x746d	                            je 0x4002db0	       364	dir.c	FUNCTION_12	IF_3
0x4002d43	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d47	        0x39442418	            cmp dword [rsp + 0x18], eax 	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d4b	     0xf8ccf010000	                            jl 0x4002f20	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d51	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x4002d57	          0x4863d8	                         movsxd rbx, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d5a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002d5f	          0x4889da	                            mov rdx, rbx	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002d62	          0x4c89f7	                            mov rdi, r14	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002d65	     0xf8505030000	                           jne 0x4003070	        92	pathspec.h	FUNCTION_193	IF_1
0x4002d6b	      0xe800000000	                          call 0x4002d70	        95	pathspec.h	FUNCTION_193	CALL_2
0x4002d70	            0x85c0	                           test eax, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d72	     0xf85ad010000	                           jne 0x4002f25	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4002d78	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4002d7c	        0x394c2418	            cmp dword [rsp + 0x18], ecx 	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4002d80	     0xf84fa020000	                            je 0x4003080	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4002d86	    0x41807c1eff2f	         cmp byte [r14 + rbx - 1], 0x2f 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4002d8c	            0x7422	                            je 0x4002db0	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4002d8e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4002d93	        0x803c182f	              cmp byte [rax + rbx], 0x2f	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4002d97	            0x7417	                            je 0x4002db0	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4002d99	      0x418b4c241c	            mov ecx, dword [r12 + 0x1c] 	       379	dir.c	FUNCTION_12	IF_8
0x4002d9e	      0x41394c2414	            cmp dword [r12 + 0x14], ecx 	       379	dir.c	FUNCTION_12	IF_8
0x4002da3	     0xf8f67020000	                            jg 0x4003010	       379	dir.c	FUNCTION_12	IF_8
0x4002da9	     0xf1f80000000	                         nop dword [rax]	       379	dir.c	FUNCTION_12	IF_8
0x4002db0	      0xba01000000	                              mov edx, 1	       365	dir.c	FUNCTION_12	IF_3
0x4002db5	      0x41f6450402	                  test byte [r13 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002dba	     0xf85d0010000	                           jne 0x4002f90	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002dc0	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002dc4	            0x39d0	                            cmp eax, edx	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002dc6	           0xf4cc2	                          cmovl eax, edx	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002dc9	    0x48837c240800	                  cmp qword [rsp + 8], 0	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002dcf	        0x8944241c	             mov dword [rsp + 0x1c], eax	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002dd3	            0x740b	                            je 0x4002de0	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002dd5	         0xfbe4500	                   movsx eax, byte [rbp]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002dd9	            0x39c2	                            cmp edx, eax	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002ddb	            0x7e03	                           jle 0x4002de0	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002ddd	          0x885500	                      mov byte [rbp], dl	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002de0	        0x4983ef38	                           sub r15, 0x38	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002de4	        0x4883ed01	                              sub rbp, 1	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4002de8	        0x48392c24	                    cmp qword [rsp], rbp	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002dec	     0xf85e6feffff	                           jne 0x4002cd8	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002df2	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002df6	            0xeb0d	                           jmp 0x4002e05	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002df8	     0xf1f84000000	                   nop dword [rax + rax]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002e00	      0xba01000000	                              mov edx, 1	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4002e05	        0x4883c448	                           add rsp, 0x48	       527	dir.c	FUNCTION_15
0x4002e09	            0x89d0	                            mov eax, edx	       527	dir.c	FUNCTION_15
0x4002e0b	              0x5b	                                 pop rbx	       527	dir.c	FUNCTION_15
0x4002e0c	              0x5d	                                 pop rbp	       527	dir.c	FUNCTION_15
0x4002e0d	            0x415c	                                 pop r12	       527	dir.c	FUNCTION_15
0x4002e0f	            0x415d	                                 pop r13	       527	dir.c	FUNCTION_15
0x4002e11	            0x415e	                                 pop r14	       527	dir.c	FUNCTION_15
0x4002e13	            0x415f	                                 pop r15	       527	dir.c	FUNCTION_15
0x4002e15	              0xc3	                                     ret	       527	dir.c	FUNCTION_15
0x4002e16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       527	dir.c	FUNCTION_15
0x4002e20	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	       283	dir.c	FUNCTION_11	CALL_1
0x4002e25	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       283	dir.c	FUNCTION_11	CALL_1
0x4002e2a	      0xe800000000	                          call 0x4002e2f	       283	dir.c	FUNCTION_11	CALL_1
0x4002e2f	      0x418b442424	            mov eax, dword [r12 + 0x24] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002e34	            0x85c0	                           test eax, eax	       284	dir.c	FUNCTION_11	FOR_1
0x4002e36	     0xf8e01ffffff	                           jle 0x4002d3d	       284	dir.c	FUNCTION_11	FOR_1
0x4002e3c	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002e41	      0x498b4c2428	            mov rcx, qword [r12 + 0x28] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002e46	          0x83e801	                              sub eax, 1	       284	dir.c	FUNCTION_11	FOR_1
0x4002e49	        0x48c1e004	                              shl rax, 4	       284	dir.c	FUNCTION_11	FOR_1
0x4002e4d	      0x4c89742430	             mov qword [rsp + 0x30], r14	       284	dir.c	FUNCTION_11	FOR_1
0x4002e52	      0x4c89642438	             mov qword [rsp + 0x38], r12	       284	dir.c	FUNCTION_11	FOR_1
0x4002e57	        0x488b5208	                mov rdx, qword [rdx + 8]	       284	dir.c	FUNCTION_11	FOR_1
0x4002e5b	        0x488d5908	                      lea rbx, [rcx + 8]	       284	dir.c	FUNCTION_11	FOR_1
0x4002e5f	      0x488d4c0118	            lea rcx, [rcx + rax + 0x18] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002e64	          0x4989ce	                            mov r14, rcx	       284	dir.c	FUNCTION_11	FOR_1
0x4002e67	        0x4883c208	                              add rdx, 8	       284	dir.c	FUNCTION_11	FOR_1
0x4002e6b	          0x4989d4	                            mov r12, rdx	       284	dir.c	FUNCTION_11	FOR_1
0x4002e6e	            0xeb1e	                           jmp 0x4002e8e	       284	dir.c	FUNCTION_11	FOR_1
0x4002e70	        0x488b7bf8	                mov rdi, qword [rbx - 8]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4002e74	      0xe800000000	                          call 0x4002e79	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4002e79	            0x85c0	                           test eax, eax	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002e7b	     0xf855fffffff	                           jne 0x4002de0	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002e81	        0x4883c310	                           add rbx, 0x10	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002e85	        0x4983c410	                           add r12, 0x10	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002e89	          0x4c39f3	                            cmp rbx, r14	       284	dir.c	FUNCTION_11	FOR_1
0x4002e8c	            0x745f	                            je 0x4002eed	       284	dir.c	FUNCTION_11	FOR_1
0x4002e8e	        0x498b3424	                    mov rsi, qword [r12]	       289	dir.c	FUNCTION_11	FOR_1
0x4002e92	            0x8b03	                    mov eax, dword [rbx]	       290	dir.c	FUNCTION_11	FOR_1
0x4002e94	    0x4881fe000000	                              cmp rsi, 0	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4002e9b	            0x7433	                            je 0x4002ed0	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x4002e9d	    0x4881fe000000	                              cmp rsi, 0	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4002ea4	            0x745a	                            je 0x4002f00	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x4002ea6	          0x4885f6	                           test rsi, rsi	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4002ea9	            0x7465	                            je 0x4002f10	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x4002eab	          0x83f802	                              cmp eax, 2	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002eae	            0x74c0	                            je 0x4002e70	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002eb0	        0x4983ef38	                           sub r15, 0x38	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002eb4	        0x4883ed01	                              sub rbp, 1	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4002eb8	        0x48392c24	                    cmp qword [rsp], rbp	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002ebc	     0xf8516feffff	                           jne 0x4002cd8	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002ec2	      0xe92bffffff	                           jmp 0x4002df2	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002ec7	    0x660f1f840000	                    nop word [rax + rax]	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4002ed0	            0x85c0	                           test eax, eax	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4002ed2	           0xf94c0	                                 sete al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4002ed5	           0xfb6c0	                           movzx eax, al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x4002ed8	            0x85c0	                           test eax, eax	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4002eda	     0xf8400ffffff	                            je 0x4002de0	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4002ee0	        0x4883c310	                           add rbx, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4002ee4	        0x4983c410	                           add r12, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4002ee8	          0x4c39f3	                            cmp rbx, r14	       284	dir.c	FUNCTION_11	FOR_1
0x4002eeb	            0x75a1	                           jne 0x4002e8e	       284	dir.c	FUNCTION_11	FOR_1
0x4002eed	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002ef2	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	       284	dir.c	FUNCTION_11	FOR_1
0x4002ef7	      0xe941feffff	                           jmp 0x4002d3d	       284	dir.c	FUNCTION_11	FOR_1
0x4002efc	         0xf1f4000	                         nop dword [rax]	       284	dir.c	FUNCTION_11	FOR_1
0x4002f00	          0x83f801	                              cmp eax, 1	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4002f03	           0xf94c0	                                 sete al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4002f06	           0xfb6c0	                           movzx eax, al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4002f09	            0xebcd	                           jmp 0x4002ed8	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4002f0b	       0xf1f440000	                   nop dword [rax + rax]	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x4002f10	          0x83f803	                              cmp eax, 3	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f13	           0xf94c0	                                 sete al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f16	           0xfb6c0	                           movzx eax, al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f19	            0xebbd	                           jmp 0x4002ed8	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f1b	       0xf1f440000	                   nop dword [rax + rax]	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f20	      0x48635c2414	         movsxd rbx, dword [rsp + 0x14] 	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4002f25	    0x41807c1eff2f	         cmp byte [r14 + rbx - 1], 0x2f 	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4002f2b	     0xf845f010000	                            je 0x4003090	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4002f31	      0x418b4c241c	            mov ecx, dword [r12 + 0x1c] 	       379	dir.c	FUNCTION_12	IF_8
0x4002f36	      0x413b4c2414	            cmp ecx, dword [r12 + 0x14] 	       379	dir.c	FUNCTION_12	IF_8
0x4002f3b	     0xf8ccf000000	                            jl 0x4003010	       379	dir.c	FUNCTION_12	IF_8
0x4002f41	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f45	        0x397c2418	            cmp dword [rsp + 0x18], edi 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f49	     0xf8d61feffff	                           jge 0x4002db0	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f4f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f54	      0x41803c062f	              cmp byte [r14 + rax], 0x2f	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f59	     0xf8551feffff	                           jne 0x4002db0	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f5f	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x4002f65	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002f6a	          0x4c89f7	                            mov rdi, r14	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002f6d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002f72	     0xf8576010000	                           jne 0x40030ee	        92	pathspec.h	FUNCTION_193	IF_1
0x4002f78	      0xe800000000	                          call 0x4002f7d	        95	pathspec.h	FUNCTION_193	CALL_2
0x4002f7d	            0x85c0	                           test eax, eax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f7f	     0xf85b6000000	                           jne 0x400303b	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f85	      0xe926feffff	                           jmp 0x4002db0	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f8a	    0x660f1f440000	                    nop word [rax + rax]	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4002f90	      0x41f6450802	                  test byte [r13 + 8], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002f95	     0xf8425feffff	                            je 0x4002dc0	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002f9b	        0x418b4d0c	              mov ecx, dword [r13 + 0xc]	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002f9f	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fa2	     0xf8418feffff	                            je 0x4002dc0	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fa8	          0xf6c201	                              test dl, 1	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fab	     0xf840ffeffff	                            je 0x4002dc0	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fb1	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fb5	      0x4a63443814	   movsxd rax, dword [rax + r15 + 0x14] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fba	          0x4889c2	                            mov rdx, rax	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4002fbd	      0x4803442420	             add rax, qword [rsp + 0x20]	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4002fc2	          0x80382f	                    cmp byte [rax], 0x2f	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4002fc5	     0xf840c010000	                            je 0x40030d7	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4002fcb	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       213	dir.c	FUNCTION_9
0x4002fcf	            0x29d7	                            sub edi, edx	       213	dir.c	FUNCTION_9
0x4002fd1	          0x4863d7	                         movsxd rdx, edi	       213	dir.c	FUNCTION_9
0x4002fd4	          0x4801c2	                            add rdx, rax	       213	dir.c	FUNCTION_9
0x4002fd7	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fda	            0x7623	                           jbe 0x4002fff	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fdc	            0x31f6	                            xor esi, esi	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fde	            0xeb05	                           jmp 0x4002fe5	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fe0	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fe3	            0x741a	                            je 0x4002fff	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fe5	        0x4883c001	                              add rax, 1	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002fe9	        0x8078ff2f	                cmp byte [rax - 1], 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002fed	            0x75f1	                           jne 0x4002fe0	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4002fef	          0x83c601	                              add esi, 1	       218	dir.c	FUNCTION_9	WHILE_1
0x4002ff2	            0x39f1	                            cmp ecx, esi	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4002ff4	     0xf8ce6fdffff	                            jl 0x4002de0	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4002ffa	          0x4839c2	                            cmp rdx, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4002ffd	            0x75e6	                           jne 0x4002fe5	       215	dir.c	FUNCTION_9	WHILE_1
0x4002fff	      0xba03000000	                              mov edx, 3	       215	dir.c	FUNCTION_9	WHILE_1
0x4003004	      0xe9b7fdffff	                           jmp 0x4002dc0	       215	dir.c	FUNCTION_9	WHILE_1
0x4003009	     0xf1f80000000	                         nop dword [rax]	       215	dir.c	FUNCTION_9	WHILE_1
0x4003010	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4003015	          0x4c89f6	                            mov rsi, r14	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4003018	          0x4c89e7	                            mov rdi, r12	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x400301b	      0xe800000000	                          call 0x4003020	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4003020	            0x85c0	                           test eax, eax	       379	dir.c	FUNCTION_12	IF_8
0x4003022	      0xba02000000	                              mov edx, 2	       382	dir.c	FUNCTION_12	IF_8
0x4003027	     0xf8488fdffff	                            je 0x4002db5	       379	dir.c	FUNCTION_12	IF_8
0x400302d	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4003031	        0x397c2418	            cmp dword [rsp + 0x18], edi 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4003035	     0xf8cda000000	                            jl 0x4003115	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x400303b	      0x496354241c	         movsxd rdx, dword [r12 + 0x1c] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4003040	      0x413b542414	            cmp edx, dword [r12 + 0x14] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4003045	     0xf8d65fdffff	                           jge 0x4002db0	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x400304b	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x4003051	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x4003056	          0x4c89f7	                            mov rdi, r14	        93	pathspec.h	FUNCTION_193	CALL_1
0x4003059	            0x7575	                           jne 0x40030d0	        92	pathspec.h	FUNCTION_193	IF_1
0x400305b	      0xe800000000	                          call 0x4003060	        95	pathspec.h	FUNCTION_193	CALL_2
0x4003060	            0x85c0	                           test eax, eax	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4003062	     0xf8448fdffff	                            je 0x4002db0	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4003068	      0xe973fdffff	                           jmp 0x4002de0	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x400306d	           0xf1f00	                         nop dword [rax]	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4003070	      0xe800000000	                          call 0x4003075	        93	pathspec.h	FUNCTION_193	CALL_1
0x4003075	      0xe9f6fcffff	                           jmp 0x4002d70	        93	pathspec.h	FUNCTION_193	CALL_1
0x400307a	    0x660f1f440000	                    nop word [rax + rax]	        93	pathspec.h	FUNCTION_193	CALL_1
0x4003080	      0xba03000000	                              mov edx, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4003085	      0xe92bfdffff	                           jmp 0x4002db5	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x400308a	    0x660f1f440000	                    nop word [rax + rax]	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4003090	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4003094	          0x83e801	                              sub eax, 1	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4003097	        0x39442418	            cmp dword [rsp + 0x18], eax 	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400309b	     0xf8590feffff	                           jne 0x4002f31	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40030a1	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x40030a7	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030ac	          0x4c89f7	                            mov rdi, r14	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030af	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030b4	            0x7542	                           jne 0x40030f8	        92	pathspec.h	FUNCTION_193	IF_1
0x40030b6	      0xe800000000	                          call 0x40030bb	        95	pathspec.h	FUNCTION_193	CALL_2
0x40030bb	            0x85c0	                           test eax, eax	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40030bd	      0xba03000000	                              mov edx, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x40030c2	     0xf84edfcffff	                            je 0x4002db5	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40030c8	      0xe964feffff	                           jmp 0x4002f31	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40030cd	           0xf1f00	                         nop dword [rax]	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x40030d0	      0xe800000000	                          call 0x40030d5	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030d5	            0xeb89	                           jmp 0x4003060	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030d7	          0x83c201	                              add edx, 1	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40030da	          0x4863c2	                         movsxd rax, edx	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40030dd	      0x4803442420	             add rax, qword [rsp + 0x20]	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40030e2	      0xe9e4feffff	                           jmp 0x4002fcb	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x40030e7	            0x31d2	                            xor edx, edx	       453	dir.c	FUNCTION_13	IF_1	ELSE_1
0x40030e9	      0xe917fdffff	                           jmp 0x4002e05	       526	dir.c	FUNCTION_15
0x40030ee	      0xe800000000	                          call 0x40030f3	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030f3	      0xe985feffff	                           jmp 0x4002f7d	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030f8	      0xe800000000	                          call 0x40030fd	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030fd	            0xebbc	                           jmp 0x40030bb	        93	pathspec.h	FUNCTION_193	CALL_1
0x40030ff	      0xbaba010000	                          mov edx, 0x1ba	       435	dir.c	FUNCTION_13
0x4003104	      0xbe00000000	                              mov esi, 0	       435	dir.c	FUNCTION_13
0x4003109	      0xbf00000000	                              mov edi, 0	       435	dir.c	FUNCTION_13
0x400310e	            0x31c0	                            xor eax, eax	       435	dir.c	FUNCTION_13
0x4003110	      0xe800000000	                          call 0x4003115	       435	dir.c	FUNCTION_13
0x4003115	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x400311a	      0x41803c062f	              cmp byte [r14 + rax], 0x2f	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x400311f	     0xf8516ffffff	                           jne 0x400303b	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4003125	      0xe935feffff	                           jmp 0x4002f5f	       387	dir.c	FUNCTION_12	IF_9	IF_10
relocate_gitdir	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,4:DO,0	106
0x4009120	            0x4154	                                push r12	      3106	dir.c	FUNCTION_102
0x4009122	              0x55	                                push rbp	      3106	dir.c	FUNCTION_102
0x4009123	          0x4989f4	                            mov r12, rsi	      3106	dir.c	FUNCTION_102
0x4009126	              0x53	                                push rbx	      3106	dir.c	FUNCTION_102
0x4009127	          0x4889fd	                            mov rbp, rdi	      3106	dir.c	FUNCTION_102
0x400912a	          0x4889d6	                            mov rsi, rdx	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x400912d	          0x4c89e7	                            mov rdi, r12	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4009130	          0x4889d3	                            mov rbx, rdx	      3106	dir.c	FUNCTION_102
0x4009133	        0x4883ec60	                           sub rsp, 0x60	      3106	dir.c	FUNCTION_102
0x4009137	    0x64488b042528	                mov rax, qword fs:[0x28]	      3106	dir.c	FUNCTION_102
0x4009140	      0x4889442458	             mov qword [rsp + 0x58], rax	      3106	dir.c	FUNCTION_102
0x4009145	            0x31c0	                            xor eax, eax	      3106	dir.c	FUNCTION_102
0x4009147	      0xe800000000	                          call 0x400914c	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x400914c	            0x85c0	                           test eax, eax	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x400914e	     0xf8845010000	                            js 0x4009299	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4009154	            0x31c0	                            xor eax, eax	      3072	dir.c	FUNCTION_101	CALL_1
0x4009156	          0x4889ea	                            mov rdx, rbp	      3072	dir.c	FUNCTION_101	CALL_1
0x4009159	      0xbe00000000	                              mov esi, 0	      3072	dir.c	FUNCTION_101	CALL_1
0x400915e	          0x4889e7	                            mov rdi, rsp	      3072	dir.c	FUNCTION_101	CALL_1
0x4009161	    0x48c704240000	                      mov qword [rsp], 0	      3066	dir.c	FUNCTION_101
0x4009169	    0x48c744240800	                  mov qword [rsp + 8], 0	      3066	dir.c	FUNCTION_101
0x4009172	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3066	dir.c	FUNCTION_101
0x400917b	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3067	dir.c	FUNCTION_101
0x4009184	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3067	dir.c	FUNCTION_101
0x400918d	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3067	dir.c	FUNCTION_101
0x4009196	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3068	dir.c	FUNCTION_101
0x400919f	    0x48c744244800	               mov qword [rsp + 0x48], 0	      3068	dir.c	FUNCTION_101
0x40091a8	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3068	dir.c	FUNCTION_101
0x40091b1	      0xe800000000	                          call 0x40091b6	      3072	dir.c	FUNCTION_101	CALL_1
0x40091b6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40091bb	      0xe800000000	                          call 0x40091c0	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40091c0	            0x85c0	                           test eax, eax	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40091c2	     0xf851a010000	                           jne 0x40092e2	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40091c8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3077	dir.c	FUNCTION_101	CALL_5
0x40091cd	            0x31c0	                            xor eax, eax	      3077	dir.c	FUNCTION_101	CALL_5
0x40091cf	          0x4889da	                            mov rdx, rbx	      3077	dir.c	FUNCTION_101	CALL_5
0x40091d2	      0xbe00000000	                              mov esi, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x40091d7	      0xe800000000	                          call 0x40091dc	      3077	dir.c	FUNCTION_101	CALL_5
0x40091dc	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40091e1	      0xe800000000	                          call 0x40091e6	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40091e6	            0x85c0	                           test eax, eax	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40091e8	     0xf85d1000000	                           jne 0x40092bf	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40091ee	          0x4889df	                            mov rdi, rbx	      3081	dir.c	FUNCTION_101	CALL_9
0x40091f1	      0xbe01000000	                              mov esi, 1	      3081	dir.c	FUNCTION_101	CALL_9
0x40091f6	      0xe800000000	                          call 0x40091fb	      3081	dir.c	FUNCTION_101	CALL_9
0x40091fb	          0x4889ef	                            mov rdi, rbp	      3082	dir.c	FUNCTION_101	CALL_10
0x40091fe	      0xbe01000000	                              mov esi, 1	      3082	dir.c	FUNCTION_101	CALL_10
0x4009203	          0x4889c3	                            mov rbx, rax	      3081	dir.c	FUNCTION_101	CALL_9
0x4009206	      0xe800000000	                          call 0x400920b	      3082	dir.c	FUNCTION_101	CALL_10
0x400920b	      0x488d542440	                   lea rdx, [rsp + 0x40]	      3085	dir.c	FUNCTION_101	CALL_11
0x4009210	          0x4889c6	                            mov rsi, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4009213	          0x4889df	                            mov rdi, rbx	      3085	dir.c	FUNCTION_101	CALL_11
0x4009216	          0x4889c5	                            mov rbp, rax	      3082	dir.c	FUNCTION_101	CALL_10
0x4009219	      0xe800000000	                          call 0x400921e	      3085	dir.c	FUNCTION_101	CALL_11
0x400921e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3085	dir.c	FUNCTION_101	CALL_11
0x4009223	          0x4889c2	                            mov rdx, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4009226	      0xbe00000000	                              mov esi, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x400922b	            0x31c0	                            xor eax, eax	      3085	dir.c	FUNCTION_101	CALL_11
0x400922d	      0xe800000000	                          call 0x4009232	      3085	dir.c	FUNCTION_101	CALL_11
0x4009232	      0x488d542440	                   lea rdx, [rsp + 0x40]	      3088	dir.c	FUNCTION_101	CALL_13
0x4009237	          0x4889de	                            mov rsi, rbx	      3088	dir.c	FUNCTION_101	CALL_13
0x400923a	          0x4889ef	                            mov rdi, rbp	      3088	dir.c	FUNCTION_101	CALL_13
0x400923d	      0xe800000000	                          call 0x4009242	      3088	dir.c	FUNCTION_101	CALL_13
0x4009242	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3088	dir.c	FUNCTION_101	CALL_13
0x4009247	          0x4889c2	                            mov rdx, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x400924a	      0xbe00000000	                              mov esi, 0	      3088	dir.c	FUNCTION_101	CALL_13
0x400924f	      0xe800000000	                          call 0x4009254	      3088	dir.c	FUNCTION_101	CALL_13
0x4009254	          0x4889e7	                            mov rdi, rsp	      3091	dir.c	FUNCTION_101	CALL_15
0x4009257	      0xe800000000	                          call 0x400925c	      3091	dir.c	FUNCTION_101	CALL_15
0x400925c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3092	dir.c	FUNCTION_101	CALL_16
0x4009261	      0xe800000000	                          call 0x4009266	      3092	dir.c	FUNCTION_101	CALL_16
0x4009266	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      3093	dir.c	FUNCTION_101	CALL_17
0x400926b	      0xe800000000	                          call 0x4009270	      3093	dir.c	FUNCTION_101	CALL_17
0x4009270	          0x4889ef	                            mov rdi, rbp	      3098	dir.c	FUNCTION_101	CALL_19
0x4009273	      0xe800000000	                          call 0x4009278	      3098	dir.c	FUNCTION_101	CALL_19
0x4009278	          0x4889df	                            mov rdi, rbx	      3099	dir.c	FUNCTION_101	CALL_20
0x400927b	      0xe800000000	                          call 0x4009280	      3099	dir.c	FUNCTION_101	CALL_20
0x4009280	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      3112	dir.c	FUNCTION_102
0x4009285	    0x644833042528	                xor rax, qword fs:[0x28]	      3112	dir.c	FUNCTION_102
0x400928e	            0x752a	                           jne 0x40092ba	      3112	dir.c	FUNCTION_102
0x4009290	        0x4883c460	                           add rsp, 0x60	      3112	dir.c	FUNCTION_102
0x4009294	              0x5b	                                 pop rbx	      3112	dir.c	FUNCTION_102
0x4009295	              0x5d	                                 pop rbp	      3112	dir.c	FUNCTION_102
0x4009296	            0x415c	                                 pop r12	      3112	dir.c	FUNCTION_102
0x4009298	              0xc3	                                     ret	      3112	dir.c	FUNCTION_102
0x4009299	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_180
0x400929e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_180
0x40092a3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_180
0x40092a5	      0xe800000000	                          call 0x40092aa	        54	gettext.h	FUNCTION_180
0x40092aa	          0x4889da	                            mov rdx, rbx	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x40092ad	          0x4889c7	                            mov rdi, rax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x40092b0	          0x4c89e6	                            mov rsi, r12	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x40092b3	            0x31c0	                            xor eax, eax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x40092b5	      0xe800000000	                          call 0x40092ba	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x40092ba	      0xe800000000	                          call 0x40092bf	      3112	dir.c	FUNCTION_102
0x40092bf	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      3079	dir.c	FUNCTION_101	CALL_8
0x40092c4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_180
0x40092c9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_180
0x40092cb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_180
0x40092d0	      0xe800000000	                          call 0x40092d5	        54	gettext.h	FUNCTION_180
0x40092d5	          0x4889de	                            mov rsi, rbx	      3079	dir.c	FUNCTION_101	CALL_8
0x40092d8	          0x4889c7	                            mov rdi, rax	      3079	dir.c	FUNCTION_101	CALL_8
0x40092db	            0x31c0	                            xor eax, eax	      3079	dir.c	FUNCTION_101	CALL_8
0x40092dd	      0xe800000000	                          call 0x40092e2	      3079	dir.c	FUNCTION_101	CALL_8
0x40092e2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      3074	dir.c	FUNCTION_101	CALL_4
0x40092e7	            0xebdb	                           jmp 0x40092c4	      3074	dir.c	FUNCTION_101	CALL_4
add_excludes_from_blob_to_list	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2:DO,0	62
0x4004460	            0x4154	                                push r12	       909	dir.c	FUNCTION_31
0x4004462	              0x55	                                push rbp	       909	dir.c	FUNCTION_31
0x4004463	            0x89d5	                            mov ebp, edx	       909	dir.c	FUNCTION_31
0x4004465	              0x53	                                push rbx	       909	dir.c	FUNCTION_31
0x4004466	          0x4889f3	                            mov rbx, rsi	       909	dir.c	FUNCTION_31
0x4004469	          0x4989cc	                            mov r12, rcx	       909	dir.c	FUNCTION_31
0x400446c	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_124	CALL_1
0x4004471	        0x4883ec20	                           sub rsp, 0x20	       909	dir.c	FUNCTION_31
0x4004475	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1200	cache.h	FUNCTION_124	CALL_1
0x400447a	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      1200	cache.h	FUNCTION_124	CALL_1
0x400447f	    0x64488b042528	                mov rax, qword fs:[0x28]	       909	dir.c	FUNCTION_31
0x4004488	      0x4889442418	             mov qword [rsp + 0x18], rax	       909	dir.c	FUNCTION_31
0x400448d	            0x31c0	                            xor eax, eax	       909	dir.c	FUNCTION_31
0x400448f	      0xe800000000	                          call 0x4004494	      1200	cache.h	FUNCTION_124	CALL_1
0x4004494	          0x4885c0	                           test rax, rax	       248	dir.c	FUNCTION_10	IF_1
0x4004497	            0x747f	                            je 0x4004518	       248	dir.c	FUNCTION_10	IF_1
0x4004499	      0x837c240c03	                cmp dword [rsp + 0xc], 3	       248	dir.c	FUNCTION_10	IF_1
0x400449e	            0x7578	                           jne 0x4004518	       248	dir.c	FUNCTION_10	IF_1
0x40044a0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       258	dir.c	FUNCTION_10	IF_3
0x40044a5	          0x4885f6	                           test rsi, rsi	       258	dir.c	FUNCTION_10	IF_3
0x40044a8	            0x745e	                            je 0x4004508	       258	dir.c	FUNCTION_10	IF_3
0x40044aa	      0x807c30ff0a	          cmp byte [rax + rsi - 1], 0xa 	       263	dir.c	FUNCTION_10	IF_4
0x40044af	            0x7429	                            je 0x40044da	       263	dir.c	FUNCTION_10	IF_4
0x40044b1	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40044b5	            0x7475	                            je 0x400452c	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40044b7	        0x4883c601	                              add rsi, 1	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40044bb	          0x4889c7	                            mov rdi, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40044be	      0xe800000000	                          call 0x40044c3	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40044c3	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       265	dir.c	FUNCTION_10	IF_4
0x40044c8	        0x488d4a01	                      lea rcx, [rdx + 1]	       265	dir.c	FUNCTION_10	IF_4
0x40044cc	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       265	dir.c	FUNCTION_10	IF_4
0x40044d1	        0xc604100a	               mov byte [rax + rdx], 0xa	       265	dir.c	FUNCTION_10	IF_4
0x40044d5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       265	dir.c	FUNCTION_10	IF_4
0x40044da	          0x4d89e0	                             mov r8, r12	       918	dir.c	FUNCTION_31	CALL_2
0x40044dd	            0x89e9	                            mov ecx, ebp	       918	dir.c	FUNCTION_31	CALL_2
0x40044df	          0x4889da	                            mov rdx, rbx	       918	dir.c	FUNCTION_31	CALL_2
0x40044e2	          0x4889c7	                            mov rdi, rax	       918	dir.c	FUNCTION_31	CALL_2
0x40044e5	      0xe8f6f0ffff	       call sym.add_excludes_from_buffer	       918	dir.c	FUNCTION_31	CALL_2
0x40044ea	            0x31c0	                            xor eax, eax	       919	dir.c	FUNCTION_31
0x40044ec	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       920	dir.c	FUNCTION_31
0x40044f1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	dir.c	FUNCTION_31
0x40044fa	            0x752b	                           jne 0x4004527	       920	dir.c	FUNCTION_31
0x40044fc	        0x4883c420	                           add rsp, 0x20	       920	dir.c	FUNCTION_31
0x4004500	              0x5b	                                 pop rbx	       920	dir.c	FUNCTION_31
0x4004501	              0x5d	                                 pop rbp	       920	dir.c	FUNCTION_31
0x4004502	            0x415c	                                 pop r12	       920	dir.c	FUNCTION_31
0x4004504	              0xc3	                                     ret	       920	dir.c	FUNCTION_31
0x4004505	           0xf1f00	                         nop dword [rax]	       920	dir.c	FUNCTION_31
0x4004508	          0x4889c7	                            mov rdi, rax	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x400450b	      0xe800000000	                          call 0x4004510	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4004510	            0x31c0	                            xor eax, eax	       260	dir.c	FUNCTION_10	IF_3
0x4004512	            0xebd8	                           jmp 0x40044ec	       260	dir.c	FUNCTION_10	IF_3
0x4004514	         0xf1f4000	                         nop dword [rax]	       260	dir.c	FUNCTION_10	IF_3
0x4004518	          0x4889c7	                            mov rdi, rax	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x400451b	      0xe800000000	                          call 0x4004520	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4004520	      0xb8ffffffff	                     mov eax, 0xffffffff	       250	dir.c	FUNCTION_10	IF_1
0x4004525	            0xebc5	                           jmp 0x40044ec	       250	dir.c	FUNCTION_10	IF_1
0x4004527	      0xe800000000	                          call 0x400452c	       920	dir.c	FUNCTION_31
0x400452c	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004531	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004536	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004538	      0xe800000000	                          call 0x400453d	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
read_sha1	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,1:DO,0	20
0x4000050	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2833	dir.c	FUNCTION_92	IF_1
0x4000054	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2833	dir.c	FUNCTION_92	IF_1
0x4000058	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      2833	dir.c	FUNCTION_92	IF_1
0x400005c	          0x4839c8	                            cmp rax, rcx	      2833	dir.c	FUNCTION_92	IF_1
0x400005f	            0x730f	                           jae 0x4000070	      2833	dir.c	FUNCTION_92	IF_1
0x4000061	        0x4883c001	                              add rax, 1	      2834	dir.c	FUNCTION_92	IF_1
0x4000065	        0x48894628	             mov qword [rsi + 0x28], rax	      2834	dir.c	FUNCTION_92	IF_1
0x4000069	              0xc3	                                     ret	      2835	dir.c	FUNCTION_92	IF_1
0x400006a	    0x660f1f440000	                    nop word [rax + rax]	      2835	dir.c	FUNCTION_92	IF_1
0x4000070	        0x488b4608	                mov rax, qword [rsi + 8]	      2832	dir.c	FUNCTION_92
0x4000074	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	        53	string3.h	FUNCTION_130	CALL_3
0x4000078	          0x488b3a	                    mov rdi, qword [rdx]	        53	string3.h	FUNCTION_130	CALL_3
0x400007b	        0x488d4145	                   lea rax, [rcx + 0x45]	        53	string3.h	FUNCTION_130	CALL_3
0x400007f	        0x48897945	             mov qword [rcx + 0x45], rdi	        53	string3.h	FUNCTION_130	CALL_3
0x4000083	        0x488b4a08	                mov rcx, qword [rdx + 8]	        53	string3.h	FUNCTION_130	CALL_3
0x4000087	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_130	CALL_3
0x400008b	          0x8b5210	            mov edx, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_130	CALL_3
0x400008e	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_130	CALL_3
0x4000091	      0x4883462814	            add qword [rsi + 0x28], 0x14	      2838	dir.c	FUNCTION_92
0x4000096	              0xc3	                                     ret	      2838	dir.c	FUNCTION_92
set_check_only	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,0:DO,0	4
0x4000040	        0x488b4608	                mov rax, qword [rsi + 8]	      2812	dir.c	FUNCTION_90
0x4000044	        0x488b04f8	            mov rax, qword [rax + rdi*8]	      2812	dir.c	FUNCTION_90
0x4000048	        0x80484401	                 or byte [rax + 0x44], 1	      2813	dir.c	FUNCTION_90
0x400004c	              0xc3	                                     ret	      2813	dir.c	FUNCTION_90
stat_data_to_disk	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,0:DO,0	28
0x40000a0	            0x8b06	                    mov eax, dword [rsi]	        44	bswap.h	FUNCTION_144	CALL_3
0x40000a2	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000a4	            0x8907	                    mov dword [rdi], eax	      2590	dir.c	FUNCTION_83
0x40000a6	          0x8b4604	                mov eax, dword [rsi + 4]	        44	bswap.h	FUNCTION_144	CALL_3
0x40000a9	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000ab	          0x894704	                mov dword [rdi + 4], eax	      2591	dir.c	FUNCTION_83
0x40000ae	          0x8b4608	                mov eax, dword [rsi + 8]	        44	bswap.h	FUNCTION_144	CALL_3
0x40000b1	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000b3	          0x894708	                mov dword [rdi + 8], eax	      2592	dir.c	FUNCTION_83
0x40000b6	          0x8b460c	              mov eax, dword [rsi + 0xc]	        44	bswap.h	FUNCTION_144	CALL_3
0x40000b9	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000bb	          0x89470c	              mov dword [rdi + 0xc], eax	      2593	dir.c	FUNCTION_83
0x40000be	          0x8b4610	            mov eax, dword [rsi + 0x10] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40000c1	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000c3	          0x894710	             mov dword [rdi + 0x10], eax	      2594	dir.c	FUNCTION_83
0x40000c6	          0x8b4614	            mov eax, dword [rsi + 0x14] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40000c9	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000cb	          0x894714	             mov dword [rdi + 0x14], eax	      2595	dir.c	FUNCTION_83
0x40000ce	          0x8b4618	            mov eax, dword [rsi + 0x18] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40000d1	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000d3	          0x894718	             mov dword [rdi + 0x18], eax	      2596	dir.c	FUNCTION_83
0x40000d6	          0x8b461c	            mov eax, dword [rsi + 0x1c] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40000d9	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000db	          0x89471c	             mov dword [rdi + 0x1c], eax	      2597	dir.c	FUNCTION_83
0x40000de	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        44	bswap.h	FUNCTION_144	CALL_3
0x40000e1	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x40000e3	          0x894720	             mov dword [rdi + 0x20], eax	      2598	dir.c	FUNCTION_83
0x40000e6	              0xc3	                                     ret	      2598	dir.c	FUNCTION_83
git_fnmatch	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,4:CALL,6:DO,0	84
0x40023b0	            0x4155	                                push r13	        80	dir.c	FUNCTION_4
0x40023b2	            0x4154	                                push r12	        80	dir.c	FUNCTION_4
0x40023b4	          0x4989fd	                            mov r13, rdi	        80	dir.c	FUNCTION_4
0x40023b7	              0x55	                                push rbp	        80	dir.c	FUNCTION_4
0x40023b8	              0x53	                                push rbx	        80	dir.c	FUNCTION_4
0x40023b9	          0x4989f4	                            mov r12, rsi	        80	dir.c	FUNCTION_4
0x40023bc	          0x4889d5	                            mov rbp, rdx	        80	dir.c	FUNCTION_4
0x40023bf	        0x4883ec08	                              sub rsp, 8	        80	dir.c	FUNCTION_4
0x40023c3	            0x85c9	                           test ecx, ecx	        81	dir.c	FUNCTION_4	IF_1
0x40023c5	            0x7e2a	                           jle 0x40023f1	        81	dir.c	FUNCTION_4	IF_1
0x40023c7	      0x41f6451010	           test byte [r13 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_193	IF_1
0x40023cc	          0x4863d9	                         movsxd rbx, ecx	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40023cf	          0x4889ee	                            mov rsi, rbp	        93	pathspec.h	FUNCTION_193	CALL_1
0x40023d2	          0x4889da	                            mov rdx, rbx	        93	pathspec.h	FUNCTION_193	CALL_1
0x40023d5	          0x4c89e7	                            mov rdi, r12	        93	pathspec.h	FUNCTION_193	CALL_1
0x40023d8	     0xf85a2000000	                           jne 0x4002480	        92	pathspec.h	FUNCTION_193	IF_1
0x40023de	      0xe800000000	                          call 0x40023e3	        95	pathspec.h	FUNCTION_193	CALL_2
0x40023e3	            0x85c0	                           test eax, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40023e5	     0xf85a2000000	                           jne 0x400248d	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40023eb	          0x4901dc	                            add r12, rbx	        84	dir.c	FUNCTION_4	IF_1
0x40023ee	          0x4801dd	                            add rbp, rbx	        85	dir.c	FUNCTION_4	IF_1
0x40023f1	      0x41f6452001	               test byte [r13 + 0x20], 1	        87	dir.c	FUNCTION_4	IF_3
0x40023f6	            0x7530	                           jne 0x4002428	        87	dir.c	FUNCTION_4	IF_3
0x40023f8	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        94	dir.c	FUNCTION_4	IF_4
0x40023fc	          0xf6c208	                              test dl, 8	        94	dir.c	FUNCTION_4	IF_4
0x40023ff	     0xf84ab000000	                            je 0x40024b0	        94	dir.c	FUNCTION_4	IF_4
0x4002405	          0x83e210	                           and edx, 0x10	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4002408	          0x83fa01	                              cmp edx, 1	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400240b	            0x19d2	                            sbb edx, edx	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400240d	          0x83c203	                              add edx, 3	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4002410	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x4002414	          0x4889ee	                            mov rsi, rbp	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4002417	          0x4c89e7	                            mov rdi, r12	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400241a	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x400241b	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x400241c	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x400241e	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x4002420	      0xe900000000	                           jmp 0x4002425	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4002425	           0xf1f00	                         nop dword [rax]	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4002428	        0x4983c401	                              add r12, 1	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400242c	          0x4c89e7	                            mov rdi, r12	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400242f	      0xe800000000	                          call 0x4002434	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x4002434	          0x4889ef	                            mov rdi, rbp	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x4002437	          0x4889c3	                            mov rbx, rax	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x400243a	      0xe800000000	                          call 0x400243f	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x400243f	          0x4889c2	                            mov rdx, rax	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x4002442	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4002447	            0x39d3	                            cmp ebx, edx	        90	dir.c	FUNCTION_4	IF_3
0x4002449	            0x7f25	                            jg 0x4002470	        90	dir.c	FUNCTION_4	IF_3
0x400244b	          0x4863f2	                         movsxd rsi, edx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x400244e	          0x4863db	                         movsxd rbx, ebx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x4002451	          0x4c89e7	                            mov rdi, r12	       102	pathspec.h	FUNCTION_194	CALL_1
0x4002454	          0x4829de	                            sub rsi, rbx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x4002457	      0x41f6451010	           test byte [r13 + 0x10], 0x10 	       101	pathspec.h	FUNCTION_194	IF_1
0x400245c	      0x488d743500	                    lea rsi, [rbp + rsi]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x4002461	            0x753d	                           jne 0x40024a0	       101	pathspec.h	FUNCTION_194	IF_1
0x4002463	      0xe800000000	                          call 0x4002468	       104	pathspec.h	FUNCTION_194	CALL_2
0x4002468	            0x85c0	                           test eax, eax	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x400246a	           0xf95c0	                                setne al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x400246d	           0xfb6c0	                           movzx eax, al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4002470	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x4002474	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x4002475	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x4002476	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x4002478	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x400247a	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
0x400247b	       0xf1f440000	                   nop dword [rax + rax]	       102	dir.c	FUNCTION_4
0x4002480	      0xe800000000	                          call 0x4002485	        93	pathspec.h	FUNCTION_193	CALL_1
0x4002485	            0x85c0	                           test eax, eax	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4002487	     0xf845effffff	                            je 0x40023eb	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x400248d	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x4002491	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4002496	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x4002497	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x4002498	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x400249a	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x400249c	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
0x400249d	           0xf1f00	                         nop dword [rax]	       102	dir.c	FUNCTION_4
0x40024a0	      0xe800000000	                          call 0x40024a5	       102	pathspec.h	FUNCTION_194	CALL_1
0x40024a5	            0xebc1	                           jmp 0x4002468	       102	pathspec.h	FUNCTION_194	CALL_1
0x40024a7	    0x660f1f840000	                    nop word [rax + rax]	       102	pathspec.h	FUNCTION_194	CALL_1
0x40024b0	          0xc1ea04	                              shr edx, 4	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x40024b3	          0x83e201	                              and edx, 1	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x40024b6	      0xe955ffffff	                           jmp 0x4002410	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
read_untracked_extension	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,10:CALL,24:DO,0	225
0x4008030	            0x4156	                                push r14	      2850	dir.c	FUNCTION_94
0x4008032	            0x4155	                                push r13	      2850	dir.c	FUNCTION_94
0x4008034	            0x4154	                                push r12	      2850	dir.c	FUNCTION_94
0x4008036	              0x55	                                push rbp	      2850	dir.c	FUNCTION_94
0x4008037	              0x53	                                push rbx	      2850	dir.c	FUNCTION_94
0x4008038	        0x4883ec50	                           sub rsp, 0x50	      2850	dir.c	FUNCTION_94
0x400803c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2850	dir.c	FUNCTION_94
0x4008045	      0x4889442448	             mov qword [rsp + 0x48], rax	      2850	dir.c	FUNCTION_94
0x400804a	            0x31c0	                            xor eax, eax	      2850	dir.c	FUNCTION_94
0x400804c	      0x48897c2408	                mov qword [rsp + 8], rdi	      2853	dir.c	FUNCTION_94
0x4008051	          0x4801f7	                            add rdi, rsi	      2853	dir.c	FUNCTION_94
0x4008054	        0x4883fe01	                              cmp rsi, 1	      2858	dir.c	FUNCTION_94	IF_1
0x4008058	     0xf86b2010000	                           jbe 0x4008210	      2858	dir.c	FUNCTION_94	IF_1
0x400805e	        0x807fff00	                   cmp byte [rdi - 1], 0	      2858	dir.c	FUNCTION_94	IF_1
0x4008062	     0xf85a8010000	                           jne 0x4008210	      2858	dir.c	FUNCTION_94	IF_1
0x4008068	        0x488d5fff	                      lea rbx, [rdi - 1]	      2860	dir.c	FUNCTION_94
0x400806c	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2862	dir.c	FUNCTION_94	CALL_1
0x4008071	      0xe800000000	                          call 0x4008076	      2862	dir.c	FUNCTION_94	CALL_1
0x4008076	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2863	dir.c	FUNCTION_94	IF_2
0x400807b	          0x4c63e0	                         movsxd r12, eax	      2863	dir.c	FUNCTION_94	IF_2
0x400807e	      0x4b8d4c2500	                    lea rcx, [r13 + r12]	      2863	dir.c	FUNCTION_94	IF_2
0x4008083	          0x4839cb	                            cmp rbx, rcx	      2863	dir.c	FUNCTION_94	IF_2
0x4008086	     0xf8284010000	                            jb 0x4008210	      2863	dir.c	FUNCTION_94	IF_2
0x400808c	      0x48894c2408	                mov qword [rsp + 8], rcx	      2866	dir.c	FUNCTION_94
0x4008091	        0x4883c175	                           add rcx, 0x75	      2868	dir.c	FUNCTION_94	IF_3
0x4008095	          0x4839cb	                            cmp rbx, rcx	      2868	dir.c	FUNCTION_94	IF_3
0x4008098	     0xf8272010000	                            jb 0x4008210	      2868	dir.c	FUNCTION_94	IF_3
0x400809e	      0xbec0000000	                           mov esi, 0xc0	      2871	dir.c	FUNCTION_94	CALL_2
0x40080a3	      0xbf01000000	                              mov edi, 1	      2871	dir.c	FUNCTION_94	CALL_2
0x40080a8	      0xe800000000	                          call 0x40080ad	      2871	dir.c	FUNCTION_94	CALL_2
0x40080ad	    0x4c8db0800000	                   lea r14, [rax + 0x80]	      2872	dir.c	FUNCTION_94	CALL_3
0x40080b4	          0x4c89e6	                            mov rsi, r12	      2872	dir.c	FUNCTION_94	CALL_3
0x40080b7	          0x4889c5	                            mov rbp, rax	      2871	dir.c	FUNCTION_94	CALL_2
0x40080ba	          0x4c89f7	                            mov rdi, r14	      2872	dir.c	FUNCTION_94	CALL_3
0x40080bd	      0xe800000000	                          call 0x40080c2	      2872	dir.c	FUNCTION_94	CALL_3
0x40080c2	          0x4c89e2	                            mov rdx, r12	      2873	dir.c	FUNCTION_94	CALL_4
0x40080c5	          0x4c89f7	                            mov rdi, r14	      2873	dir.c	FUNCTION_94	CALL_4
0x40080c8	          0x4c89ee	                            mov rsi, r13	      2873	dir.c	FUNCTION_94	CALL_4
0x40080cb	      0xe800000000	                          call 0x40080d0	      2873	dir.c	FUNCTION_94	CALL_4
0x40080d0	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2874	dir.c	FUNCTION_94	CALL_5
0x40080d5	          0x4889ef	                            mov rdi, rbp	      2844	dir.c	FUNCTION_93	CALL_1
0x40080d8	          0x4c89f6	                            mov rsi, r14	      2844	dir.c	FUNCTION_93	CALL_1
0x40080db	      0xe81080ffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x40080e0	        0x498b4e4c	            mov rcx, qword [r14 + 0x4c] 	        53	string3.h	FUNCTION_130	CALL_3
0x40080e4	        0x488d7d3c	                   lea rdi, [rbp + 0x3c]	      2844	dir.c	FUNCTION_93	CALL_1
0x40080e8	        0x48894d24	            mov qword [rbp + 0x24], rcx 	        53	string3.h	FUNCTION_130	CALL_3
0x40080ec	        0x498b4e54	            mov rcx, qword [r14 + 0x54] 	        53	string3.h	FUNCTION_130	CALL_3
0x40080f0	        0x48894d2c	            mov qword [rbp + 0x2c], rcx 	        53	string3.h	FUNCTION_130	CALL_3
0x40080f4	        0x418b565c	            mov edx, dword [r14 + 0x5c] 	        53	string3.h	FUNCTION_130	CALL_3
0x40080f8	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2877	dir.c	FUNCTION_94	CALL_6
0x40080fd	    0xc74538010000	               mov dword [rbp + 0x38], 1	      2846	dir.c	FUNCTION_93
0x4008104	          0x895534	            mov dword [rbp + 0x34], edx 	        53	string3.h	FUNCTION_130	CALL_3
0x4008107	        0x498d7624	                   lea rsi, [r14 + 0x24]	      2844	dir.c	FUNCTION_93	CALL_1
0x400810b	      0xe8e07fffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x4008110	        0x498b4e60	            mov rcx, qword [r14 + 0x60] 	        53	string3.h	FUNCTION_130	CALL_3
0x4008114	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2880	dir.c	FUNCTION_94
0x4008119	        0x48894d60	            mov qword [rbp + 0x60], rcx 	        53	string3.h	FUNCTION_130	CALL_3
0x400811d	        0x498b4e68	            mov rcx, qword [r14 + 0x68] 	        53	string3.h	FUNCTION_130	CALL_3
0x4008121	        0x4983c474	                           add r12, 0x74	      2881	dir.c	FUNCTION_94
0x4008125	        0x48894d68	            mov qword [rbp + 0x68], rcx 	        53	string3.h	FUNCTION_130	CALL_3
0x4008129	        0x418b5670	            mov edx, dword [r14 + 0x70] 	        53	string3.h	FUNCTION_130	CALL_3
0x400812d	    0xc74574010000	               mov dword [rbp + 0x74], 1	      2846	dir.c	FUNCTION_93
0x4008134	          0x895570	            mov dword [rbp + 0x70], edx 	        53	string3.h	FUNCTION_130	CALL_3
0x4008137	      0x418b4424d4	             mov eax, dword [r12 - 0x2c]	        44	bswap.h	FUNCTION_144	CALL_3
0x400813c	          0x4c89e7	                            mov rdi, r12	      2882	dir.c	FUNCTION_94	CALL_7
0x400813f	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_144	CALL_3
0x4008141	    0x898598000000	            mov dword [rbp + 0x98], eax 	      2880	dir.c	FUNCTION_94
0x4008147	      0xe800000000	                          call 0x400814c	      2882	dir.c	FUNCTION_94	CALL_7
0x400814c	          0x4c89e7	                            mov rdi, r12	      2884	dir.c	FUNCTION_94	CALL_8
0x400814f	        0x48894578	            mov qword [rbp + 0x78], rax 	      2882	dir.c	FUNCTION_94	CALL_7
0x4008153	      0xe800000000	                          call 0x4008158	      2884	dir.c	FUNCTION_94	CALL_8
0x4008158	      0x488b542408	                mov rdx, qword [rsp + 8]	      2884	dir.c	FUNCTION_94	CALL_8
0x400815d	      0x488d440275	            lea rax, [rdx + rax + 0x75] 	      2884	dir.c	FUNCTION_94	CALL_8
0x4008162	          0x4839c3	                            cmp rbx, rax	      2885	dir.c	FUNCTION_94	IF_4
0x4008165	      0x4889442408	                mov qword [rsp + 8], rax	      2884	dir.c	FUNCTION_94	CALL_8
0x400816a	     0xf87c8000000	                            ja 0x4008238	      2885	dir.c	FUNCTION_94	IF_4
0x4008170	          0x4839c3	                            cmp rbx, rax	      2930	dir.c	FUNCTION_94	IF_10
0x4008173	            0x750b	                           jne 0x4008180	      2930	dir.c	FUNCTION_94	IF_10
0x4008175	          0x4889e8	                            mov rax, rbp	      2930	dir.c	FUNCTION_94	IF_10
0x4008178	      0xe995000000	                           jmp 0x4008212	      2930	dir.c	FUNCTION_94	IF_10
0x400817d	           0xf1f00	                         nop dword [rax]	      2930	dir.c	FUNCTION_94	IF_10
0x4008180	    0x488b9da00000	            mov rbx, qword [rbp + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x4008187	          0x4885db	                           test rbx, rbx	      2710	dir.c	FUNCTION_86	IF_1
0x400818a	            0x7478	                            je 0x4008204	      2710	dir.c	FUNCTION_86	IF_1
0x400818c	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      2712	dir.c	FUNCTION_86	FOR_1
0x400818f	          0x4531ed	                          xor r13d, r13d	      2712	dir.c	FUNCTION_86	FOR_1
0x4008192	          0x4531e4	                          xor r12d, r12d	      2712	dir.c	FUNCTION_86	FOR_1
0x4008195	            0x85d2	                           test edx, edx	      2712	dir.c	FUNCTION_86	FOR_1
0x4008197	            0x7421	                            je 0x40081ba	      2712	dir.c	FUNCTION_86	FOR_1
0x4008199	     0xf1f80000000	                         nop dword [rax]	      2712	dir.c	FUNCTION_86	FOR_1
0x40081a0	          0x488b03	                    mov rax, qword [rbx]	      2713	dir.c	FUNCTION_86	CALL_1
0x40081a3	        0x4183c401	                             add r12d, 1	      2712	dir.c	FUNCTION_86	FOR_1
0x40081a7	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      2713	dir.c	FUNCTION_86	CALL_1
0x40081ab	        0x4983c508	                              add r13, 8	      2713	dir.c	FUNCTION_86	CALL_1
0x40081af	      0xe8cc8cffff	                 call sym.free_untracked	      2713	dir.c	FUNCTION_86	CALL_1
0x40081b4	        0x44396338	           cmp dword [rbx + 0x38], r12d 	      2712	dir.c	FUNCTION_86	FOR_1
0x40081b8	            0x77e6	                            ja 0x40081a0	      2712	dir.c	FUNCTION_86	FOR_1
0x40081ba	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2714	dir.c	FUNCTION_86	FOR_2
0x40081bd	          0x4531ed	                          xor r13d, r13d	      2714	dir.c	FUNCTION_86	FOR_2
0x40081c0	          0x4531e4	                          xor r12d, r12d	      2714	dir.c	FUNCTION_86	FOR_2
0x40081c3	            0x85c0	                           test eax, eax	      2714	dir.c	FUNCTION_86	FOR_2
0x40081c5	            0x7424	                            je 0x40081eb	      2714	dir.c	FUNCTION_86	FOR_2
0x40081c7	    0x660f1f840000	                    nop word [rax + rax]	      2714	dir.c	FUNCTION_86	FOR_2
0x40081d0	        0x488b4308	                mov rax, qword [rbx + 8]	      2715	dir.c	FUNCTION_86	CALL_2
0x40081d4	        0x4183c401	                             add r12d, 1	      2714	dir.c	FUNCTION_86	FOR_2
0x40081d8	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      2715	dir.c	FUNCTION_86	CALL_2
0x40081dc	        0x4983c508	                              add r13, 8	      2715	dir.c	FUNCTION_86	CALL_2
0x40081e0	      0xe800000000	                          call 0x40081e5	      2715	dir.c	FUNCTION_86	CALL_2
0x40081e5	        0x44396340	           cmp dword [rbx + 0x40], r12d 	      2714	dir.c	FUNCTION_86	FOR_2
0x40081e9	            0x77e5	                            ja 0x40081d0	      2714	dir.c	FUNCTION_86	FOR_2
0x40081eb	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2716	dir.c	FUNCTION_86	CALL_3
0x40081ef	      0xe800000000	                          call 0x40081f4	      2716	dir.c	FUNCTION_86	CALL_3
0x40081f4	          0x488b3b	                    mov rdi, qword [rbx]	      2717	dir.c	FUNCTION_86	CALL_4
0x40081f7	      0xe800000000	                          call 0x40081fc	      2717	dir.c	FUNCTION_86	CALL_4
0x40081fc	          0x4889df	                            mov rdi, rbx	      2718	dir.c	FUNCTION_86	CALL_5
0x40081ff	      0xe800000000	                          call 0x4008204	      2718	dir.c	FUNCTION_86	CALL_5
0x4008204	          0x4889ef	                            mov rdi, rbp	      2725	dir.c	FUNCTION_87	CALL_2
0x4008207	      0xe800000000	                          call 0x400820c	      2725	dir.c	FUNCTION_87	CALL_2
0x400820c	         0xf1f4000	                         nop dword [rax]	      2725	dir.c	FUNCTION_87	CALL_2
0x4008210	            0x31c0	                            xor eax, eax	      2932	dir.c	FUNCTION_94	IF_10
0x4008212	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2935	dir.c	FUNCTION_94
0x4008217	    0x644833142528	                xor rdx, qword fs:[0x28]	      2935	dir.c	FUNCTION_94
0x4008220	     0xf85a4010000	                           jne 0x40083ca	      2935	dir.c	FUNCTION_94
0x4008226	        0x4883c450	                           add rsp, 0x50	      2935	dir.c	FUNCTION_94
0x400822a	              0x5b	                                 pop rbx	      2935	dir.c	FUNCTION_94
0x400822b	              0x5d	                                 pop rbp	      2935	dir.c	FUNCTION_94
0x400822c	            0x415c	                                 pop r12	      2935	dir.c	FUNCTION_94
0x400822e	            0x415d	                                 pop r13	      2935	dir.c	FUNCTION_94
0x4008230	            0x415e	                                 pop r14	      2935	dir.c	FUNCTION_94
0x4008232	              0xc3	                                     ret	      2935	dir.c	FUNCTION_94
0x4008233	       0xf1f440000	                   nop dword [rax + rax]	      2935	dir.c	FUNCTION_94
0x4008238	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2888	dir.c	FUNCTION_94	CALL_9
0x400823d	      0xe800000000	                          call 0x4008242	      2888	dir.c	FUNCTION_94	CALL_9
0x4008242	          0x4989c4	                            mov r12, rax	      2888	dir.c	FUNCTION_94	CALL_9
0x4008245	      0x488b442408	                mov rax, qword [rsp + 8]	      2889	dir.c	FUNCTION_94	IF_5
0x400824a	          0x4585e4	                         test r12d, r12d	      2889	dir.c	FUNCTION_94	IF_5
0x400824d	     0xf841dffffff	                            je 0x4008170	      2889	dir.c	FUNCTION_94	IF_5
0x4008253	          0x4839c3	                            cmp rbx, rax	      2889	dir.c	FUNCTION_94	IF_5
0x4008256	     0xf8214ffffff	                            jb 0x4008170	      2889	dir.c	FUNCTION_94	IF_5
0x400825c	      0xe800000000	                          call 0x4008261	      2892	dir.c	FUNCTION_94	CALL_10
0x4008261	      0x4889442428	             mov qword [rsp + 0x28], rax	      2892	dir.c	FUNCTION_94	CALL_10
0x4008266	      0xe800000000	                          call 0x400826b	      2893	dir.c	FUNCTION_94	CALL_11
0x400826b	      0x4889442420	             mov qword [rsp + 0x20], rax	      2893	dir.c	FUNCTION_94	CALL_11
0x4008270	      0xe800000000	                          call 0x4008275	      2894	dir.c	FUNCTION_94	CALL_12
0x4008275	      0x4889442430	             mov qword [rsp + 0x30], rax	      2894	dir.c	FUNCTION_94	CALL_12
0x400827a	      0x488b442408	                mov rax, qword [rsp + 8]	      2895	dir.c	FUNCTION_94
0x400827f	          0x4963d4	                        movsxd rdx, r12d	      2898	dir.c	FUNCTION_94
0x4008282	      0x48895c2440	             mov qword [rsp + 0x40], rbx	      2896	dir.c	FUNCTION_94
0x4008287	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2897	dir.c	FUNCTION_94
0x400828f	      0x4889442438	             mov qword [rsp + 0x38], rax	      2895	dir.c	FUNCTION_94
0x4008294	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_161	IF_1
0x400829e	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_161	IF_1
0x40082a1	     0xf8728010000	                            ja 0x40083cf	       795	git-compat-util.h	FUNCTION_161	IF_1
0x40082a7	    0x488d3cd50000	                        lea rdi, [rdx*8]	      2898	dir.c	FUNCTION_94
0x40082af	      0xe800000000	                          call 0x40082b4	      2898	dir.c	FUNCTION_94
0x40082b4	    0x488dbda00000	                   lea rdi, [rbp + 0xa0]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082bb	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082c0	      0x4889442418	             mov qword [rsp + 0x18], rax	      2898	dir.c	FUNCTION_94
0x40082c5	      0xe84684ffff	                   call sym.read_one_dir	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082ca	            0x85c0	                           test eax, eax	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082cc	            0x7507	                           jne 0x40082d5	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082ce	      0x443b642410	           cmp r12d, dword [rsp + 0x10] 	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082d3	            0x7432	                            je 0x4008307	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x40082d5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2925	dir.c	FUNCTION_94	CALL_20
0x40082da	      0xe800000000	                          call 0x40082df	      2925	dir.c	FUNCTION_94	CALL_20
0x40082df	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2926	dir.c	FUNCTION_94	CALL_21
0x40082e4	      0xe800000000	                          call 0x40082e9	      2926	dir.c	FUNCTION_94	CALL_21
0x40082e9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2927	dir.c	FUNCTION_94	CALL_22
0x40082ee	      0xe800000000	                          call 0x40082f3	      2927	dir.c	FUNCTION_94	CALL_22
0x40082f3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2928	dir.c	FUNCTION_94	CALL_23
0x40082f8	      0xe800000000	                          call 0x40082fd	      2928	dir.c	FUNCTION_94	CALL_23
0x40082fd	      0x488b442408	                mov rax, qword [rsp + 8]	      2928	dir.c	FUNCTION_94	CALL_23
0x4008302	      0xe969feffff	                           jmp 0x4008170	      2928	dir.c	FUNCTION_94	CALL_23
0x4008307	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2903	dir.c	FUNCTION_94
0x400830c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2904	dir.c	FUNCTION_94	CALL_14
0x4008311	          0x4889da	                            mov rdx, rbx	      2904	dir.c	FUNCTION_94	CALL_14
0x4008314	          0x4829f2	                            sub rdx, rsi	      2904	dir.c	FUNCTION_94	CALL_14
0x4008317	      0x4889742408	                mov qword [rsp + 8], rsi	      2903	dir.c	FUNCTION_94
0x400831c	      0xe800000000	                          call 0x4008321	      2904	dir.c	FUNCTION_94	CALL_14
0x4008321	            0x85c0	                           test eax, eax	      2905	dir.c	FUNCTION_94	IF_7
0x4008323	            0x78b0	                            js 0x40082d5	      2905	dir.c	FUNCTION_94	IF_7
0x4008325	            0x4898	                                    cdqe	      2908	dir.c	FUNCTION_94
0x4008327	      0x4803442408	                add rax, qword [rsp + 8]	      2908	dir.c	FUNCTION_94
0x400832c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2909	dir.c	FUNCTION_94	CALL_15
0x4008331	          0x4889da	                            mov rdx, rbx	      2909	dir.c	FUNCTION_94	CALL_15
0x4008334	          0x4829c2	                            sub rdx, rax	      2909	dir.c	FUNCTION_94	CALL_15
0x4008337	          0x4889c6	                            mov rsi, rax	      2908	dir.c	FUNCTION_94
0x400833a	      0x4889442408	                mov qword [rsp + 8], rax	      2908	dir.c	FUNCTION_94
0x400833f	      0xe800000000	                          call 0x4008344	      2909	dir.c	FUNCTION_94	CALL_15
0x4008344	            0x85c0	                           test eax, eax	      2910	dir.c	FUNCTION_94	IF_8
0x4008346	            0x788d	                            js 0x40082d5	      2910	dir.c	FUNCTION_94	IF_8
0x4008348	            0x4898	                                    cdqe	      2913	dir.c	FUNCTION_94
0x400834a	      0x4803442408	                add rax, qword [rsp + 8]	      2913	dir.c	FUNCTION_94
0x400834f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2914	dir.c	FUNCTION_94	CALL_16
0x4008354	          0x4889da	                            mov rdx, rbx	      2914	dir.c	FUNCTION_94	CALL_16
0x4008357	          0x4829c2	                            sub rdx, rax	      2914	dir.c	FUNCTION_94	CALL_16
0x400835a	          0x4889c6	                            mov rsi, rax	      2913	dir.c	FUNCTION_94
0x400835d	      0x4889442408	                mov qword [rsp + 8], rax	      2913	dir.c	FUNCTION_94
0x4008362	      0xe800000000	                          call 0x4008367	      2914	dir.c	FUNCTION_94	CALL_16
0x4008367	            0x85c0	                           test eax, eax	      2915	dir.c	FUNCTION_94	IF_9
0x4008369	          0x4189c4	                           mov r12d, eax	      2914	dir.c	FUNCTION_94	CALL_16
0x400836c	     0xf8863ffffff	                            js 0x40082d5	      2915	dir.c	FUNCTION_94	IF_9
0x4008372	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2918	dir.c	FUNCTION_94	CALL_17
0x4008377	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2918	dir.c	FUNCTION_94	CALL_17
0x400837c	      0xbe00000000	                              mov esi, 0	      2918	dir.c	FUNCTION_94	CALL_17
0x4008381	      0xe800000000	                          call 0x4008386	      2918	dir.c	FUNCTION_94	CALL_17
0x4008386	          0x4963c4	                        movsxd rax, r12d	      2919	dir.c	FUNCTION_94
0x4008389	      0x4803442408	                add rax, qword [rsp + 8]	      2919	dir.c	FUNCTION_94
0x400838e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2920	dir.c	FUNCTION_94	CALL_18
0x4008393	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2920	dir.c	FUNCTION_94	CALL_18
0x4008398	      0xbe00000000	                              mov esi, 0	      2920	dir.c	FUNCTION_94	CALL_18
0x400839d	      0x4889442438	             mov qword [rsp + 0x38], rax	      2919	dir.c	FUNCTION_94
0x40083a2	      0xe800000000	                          call 0x40083a7	      2920	dir.c	FUNCTION_94	CALL_18
0x40083a7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2921	dir.c	FUNCTION_94	CALL_19
0x40083ac	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2921	dir.c	FUNCTION_94	CALL_19
0x40083b1	      0xbe00000000	                              mov esi, 0	      2921	dir.c	FUNCTION_94	CALL_19
0x40083b6	      0xe800000000	                          call 0x40083bb	      2921	dir.c	FUNCTION_94	CALL_19
0x40083bb	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2922	dir.c	FUNCTION_94
0x40083c0	      0x4889442408	                mov qword [rsp + 8], rax	      2922	dir.c	FUNCTION_94
0x40083c5	      0xe90bffffff	                           jmp 0x40082d5	      2922	dir.c	FUNCTION_94
0x40083ca	      0xe800000000	                          call 0x40083cf	      2935	dir.c	FUNCTION_94
0x40083cf	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40083d4	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40083d9	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40083db	      0xe800000000	call sym.untracked_cache_invalidate_path	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
add_untracked_cache	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,2:CALL,4:DO,0	84
0x40062d0	            0x4155	                                push r13	      2151	dir.c	FUNCTION_69
0x40062d2	            0x4154	                                push r12	      2151	dir.c	FUNCTION_69
0x40062d4	              0x55	                                push rbp	      2151	dir.c	FUNCTION_69
0x40062d5	              0x53	                                push rbx	      2151	dir.c	FUNCTION_69
0x40062d6	          0x4889fd	                            mov rbp, rdi	      2151	dir.c	FUNCTION_69
0x40062d9	        0x4883ec08	                              sub rsp, 8	      2151	dir.c	FUNCTION_69
0x40062dd	    0x488b9fb80000	            mov rbx, qword [rdi + 0xb8] 	      2152	dir.c	FUNCTION_69	IF_1
0x40062e4	          0x4885db	                           test rbx, rbx	      2152	dir.c	FUNCTION_69	IF_1
0x40062e7	            0x7447	                            je 0x4006330	      2152	dir.c	FUNCTION_69	IF_1
0x40062e9	      0xe8a2baffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x40062ee	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x40062f5	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x40062f8	      0xe800000000	                          call 0x40062fd	      2123	dir.c	FUNCTION_66	CALL_2
0x40062fd	            0x85c0	                           test eax, eax	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x40062ff	            0x750f	                           jne 0x4006310	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4006301	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x4006305	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x4006306	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x4006307	            0x415c	                                 pop r12	      2160	dir.c	FUNCTION_69
0x4006309	            0x415d	                                 pop r13	      2160	dir.c	FUNCTION_69
0x400630b	              0xc3	                                     ret	      2160	dir.c	FUNCTION_69
0x400630c	         0xf1f4000	                         nop dword [rax]	      2160	dir.c	FUNCTION_69
0x4006310	    0x488b9db80000	            mov rbx, qword [rbp + 0xb8] 	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x4006317	          0x4885db	                           test rbx, rbx	      2723	dir.c	FUNCTION_87	IF_1
0x400631a	            0x740c	                            je 0x4006328	      2723	dir.c	FUNCTION_87	IF_1
0x400631c	    0x488bbba00000	            mov rdi, qword [rbx + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x4006323	      0xe858abffff	                 call sym.free_untracked	      2724	dir.c	FUNCTION_87	CALL_1
0x4006328	          0x4889df	                            mov rdi, rbx	      2725	dir.c	FUNCTION_87	CALL_2
0x400632b	      0xe800000000	                          call 0x4006330	      2725	dir.c	FUNCTION_87	CALL_2
0x4006330	      0xbec0000000	                           mov esi, 0xc0	      2140	dir.c	FUNCTION_68	CALL_1
0x4006335	      0xbf01000000	                              mov edi, 1	      2140	dir.c	FUNCTION_68	CALL_1
0x400633a	      0xe800000000	                          call 0x400633f	      2140	dir.c	FUNCTION_68	CALL_1
0x400633f	    0x4c8da0800000	                   lea r12, [rax + 0x80]	      2141	dir.c	FUNCTION_68	CALL_2
0x4006346	          0x4889c3	                            mov rbx, rax	      2140	dir.c	FUNCTION_68	CALL_1
0x4006349	      0xbe64000000	                           mov esi, 0x64	      2141	dir.c	FUNCTION_68	CALL_2
0x400634e	          0x4c89e7	                            mov rdi, r12	      2141	dir.c	FUNCTION_68	CALL_2
0x4006351	      0xe800000000	                          call 0x4006356	      2141	dir.c	FUNCTION_68	CALL_2
0x4006356	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       165	strbuf.h	FUNCTION_184	IF_2
0x400635d	    0x48c743780000	               mov qword [rbx + 0x78], 0	      2142	dir.c	FUNCTION_68
0x4006365	    0xc78398000000	               mov dword [rbx + 0x98], 6	      2144	dir.c	FUNCTION_68
0x400636f	    0x48c783880000	               mov qword [rbx + 0x88], 0	       164	strbuf.h	FUNCTION_184
0x400637a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_184	IF_2
0x4006380	     0xf84a2000000	                            je 0x4006428	       165	strbuf.h	FUNCTION_184	IF_2
0x4006386	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_184	IF_2
0x4006389	      0xe802baffff	               call sym.get_ident_string	      2129	dir.c	FUNCTION_67	CALL_2
0x400638e	          0x4989c5	                            mov r13, rax	      2129	dir.c	FUNCTION_67	CALL_2
0x4006391	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_186	CALL_2
0x4006394	      0xe800000000	                          call 0x4006399	       279	strbuf.h	FUNCTION_186	CALL_2
0x4006399	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_186	CALL_2
0x400639c	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_186	CALL_2
0x400639f	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_186	CALL_2
0x40063a2	      0xe800000000	                          call 0x40063a7	       279	strbuf.h	FUNCTION_186	CALL_2
0x40063a7	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       279	strbuf.h	FUNCTION_186	CALL_2
0x40063ae	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_183
0x40063b1	            0x755d	                           jne 0x4006410	       141	strbuf.h	FUNCTION_183
0x40063b3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_185	CALL_2
0x40063b8	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_185	CALL_2
0x40063bb	      0xe800000000	                          call 0x40063c0	       228	strbuf.h	FUNCTION_185	CALL_2
0x40063c0	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	       228	strbuf.h	FUNCTION_185	CALL_2
0x40063c7	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       229	strbuf.h	FUNCTION_185
0x40063ce	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_185
0x40063d2	    0x48898b880000	             mov qword [rbx + 0x88], rcx	       229	strbuf.h	FUNCTION_185
0x40063d9	        0xc6041000	                 mov byte [rax + rdx], 0	       229	strbuf.h	FUNCTION_185
0x40063dd	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	       230	strbuf.h	FUNCTION_185
0x40063e4	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       230	strbuf.h	FUNCTION_185
0x40063eb	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_185
0x40063ef	    0x48899db80000	            mov qword [rbp + 0xb8], rbx 	      2146	dir.c	FUNCTION_68
0x40063f6	    0x814d14800000	             or dword [rbp + 0x14], 0x80	      2147	dir.c	FUNCTION_68
0x40063fd	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x4006401	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x4006402	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x4006403	            0x415c	                                 pop r12	      2160	dir.c	FUNCTION_69
0x4006405	            0x415d	                                 pop r13	      2160	dir.c	FUNCTION_69
0x4006407	              0xc3	                                     ret	      2160	dir.c	FUNCTION_69
0x4006408	     0xf1f84000000	                   nop dword [rax + rax]	      2160	dir.c	FUNCTION_69
0x4006410	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	       141	strbuf.h	FUNCTION_183
0x4006417	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x400641b	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x400641e	            0x75a7	                           jne 0x40063c7	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006420	            0xeb91	                           jmp 0x40063b3	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006422	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_185	IF_1	CALL_1
0x4006428	    0x803d00000000	                cmp byte [0x0400642f], 0	       168	strbuf.h	FUNCTION_184	CALL_2
0x400642f	     0xf8454ffffff	                            je 0x4006389	       168	strbuf.h	FUNCTION_184	CALL_2
0x4006435	      0xe800000000	                          call 0x400643a	       168	strbuf.h	FUNCTION_184	CALL_2
treat_directory	FOR,0:WHILE,0:SWITCH,1:functions,0:ELSE,0:IF,7:CALL,5:DO,0	120
0x40060e0	            0x4157	                                push r15	      1458	dir.c	FUNCTION_48
0x40060e2	            0x4156	                                push r14	      1458	dir.c	FUNCTION_48
0x40060e4	          0x4989d7	                            mov r15, rdx	      1458	dir.c	FUNCTION_48
0x40060e7	            0x4155	                                push r13	      1458	dir.c	FUNCTION_48
0x40060e9	            0x4154	                                push r12	      1458	dir.c	FUNCTION_48
0x40060eb	        0x418d50ff	                       lea edx, [r8 - 1]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40060ef	              0x55	                                push rbp	      1458	dir.c	FUNCTION_48
0x40060f0	              0x53	                                push rbx	      1458	dir.c	FUNCTION_48
0x40060f1	          0x4989f4	                            mov r12, rsi	      1458	dir.c	FUNCTION_48
0x40060f4	          0x4989fd	                            mov r13, rdi	      1458	dir.c	FUNCTION_48
0x40060f7	          0x4889ce	                            mov rsi, rcx	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40060fa	          0x4c89e7	                            mov rdi, r12	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x40060fd	        0x4883ec38	                           sub rsp, 0x38	      1458	dir.c	FUNCTION_48
0x4006101	          0x4889cb	                            mov rbx, rcx	      1458	dir.c	FUNCTION_48
0x4006104	          0x4489c5	                            mov ebp, r8d	      1458	dir.c	FUNCTION_48
0x4006107	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	dir.c	FUNCTION_48
0x4006110	      0x4889442428	             mov qword [rsp + 0x28], rax	      1458	dir.c	FUNCTION_48
0x4006115	            0x31c0	                            xor eax, eax	      1458	dir.c	FUNCTION_48
0x4006117	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      1458	dir.c	FUNCTION_48
0x400611c	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      1458	dir.c	FUNCTION_48
0x4006121	      0xe8eaa4ffff	      call sym.directory_exists_in_index	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006126	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006129	      0xb901000000	                              mov ecx, 1	      1462	dir.c	FUNCTION_48	SWITCH_1
0x400612e	            0x7430	                            je 0x4006160	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006130	      0x4c634c240c	           movsxd r9, dword [rsp + 0xc] 	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006135	            0x7251	                            jb 0x4006188	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006137	            0x31c9	                            xor ecx, ecx	      1465	dir.c	FUNCTION_48	SWITCH_1
0x4006139	          0x83f802	                              cmp eax, 2	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x400613c	            0x7422	                            je 0x4006160	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x400613e	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4006142	            0xa804	                              test al, 4	      1504	dir.c	FUNCTION_48	IF_7
0x4006144	     0xf85b6000000	                           jne 0x4006200	      1504	dir.c	FUNCTION_48	IF_7
0x400614a	        0x8b4c2470	            mov ecx, dword [rsp + 0x70] 	      1505	dir.c	FUNCTION_48	IF_7
0x400614e	            0x85c9	                           test ecx, ecx	      1505	dir.c	FUNCTION_48	IF_7
0x4006150	     0xf849a000000	                            je 0x40061f0	      1505	dir.c	FUNCTION_48	IF_7
0x4006156	      0xb902000000	                              mov ecx, 2	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x400615b	       0xf1f440000	                   nop dword [rax + rax]	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4006160	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1516	dir.c	FUNCTION_48
0x4006165	    0x644833342528	                xor rsi, qword fs:[0x28]	      1516	dir.c	FUNCTION_48
0x400616e	            0x89c8	                            mov eax, ecx	      1516	dir.c	FUNCTION_48
0x4006170	     0xf8511010000	                           jne 0x4006287	      1516	dir.c	FUNCTION_48
0x4006176	        0x4883c438	                           add rsp, 0x38	      1516	dir.c	FUNCTION_48
0x400617a	              0x5b	                                 pop rbx	      1516	dir.c	FUNCTION_48
0x400617b	              0x5d	                                 pop rbp	      1516	dir.c	FUNCTION_48
0x400617c	            0x415c	                                 pop r12	      1516	dir.c	FUNCTION_48
0x400617e	            0x415d	                                 pop r13	      1516	dir.c	FUNCTION_48
0x4006180	            0x415e	                                 pop r14	      1516	dir.c	FUNCTION_48
0x4006182	            0x415f	                                 pop r15	      1516	dir.c	FUNCTION_48
0x4006184	              0xc3	                                     ret	      1516	dir.c	FUNCTION_48
0x4006185	           0xf1f00	                         nop dword [rax]	      1516	dir.c	FUNCTION_48
0x4006188	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x400618c	            0xa802	                              test al, 2	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x400618e	            0x75b2	                           jne 0x4006142	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x4006190	      0x448b442470	            mov r8d, dword [rsp + 0x70] 	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4006195	          0x4585c0	                           test r8d, r8d	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4006198	            0x7414	                            je 0x40061ae	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x400619a	            0x89c2	                            mov edx, eax	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x400619c	    0x81e220010000	                          and edx, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40061a2	    0x81fa20010000	                          cmp edx, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40061a8	     0xf84a2000000	                            je 0x4006250	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x40061ae	            0xa808	                              test al, 8	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x40061b0	      0xb901000000	                              mov ecx, 1	      1499	dir.c	FUNCTION_48	SWITCH_1
0x40061b5	            0x75a9	                           jne 0x4006160	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x40061b7	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061bc	      0xbe00000000	                              mov esi, 0	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061c1	          0x4889df	                            mov rdi, rbx	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061c4	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061c8	      0xe800000000	                          call 0x40061cd	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061cd	            0x85c0	                           test eax, eax	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061cf	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061d3	            0x758b	                           jne 0x4006160	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x40061d5	      0x837c247001	               cmp dword [rsp + 0x70], 1	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061da	            0x19c9	                            sbb ecx, ecx	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061dc	            0xf7d1	                                 not ecx	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061de	          0x83c103	                              add ecx, 3	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061e1	      0xe97affffff	                           jmp 0x4006160	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x40061f0	      0xb903000000	                              mov ecx, 3	      1505	dir.c	FUNCTION_48	IF_7
0x40061f5	      0xe966ffffff	                           jmp 0x4006160	      1505	dir.c	FUNCTION_48	IF_7
0x40061fa	    0x660f1f440000	                    nop word [rax + rax]	      1505	dir.c	FUNCTION_48	IF_7
0x4006200	    0x498b85880000	            mov rax, qword [r13 + 0x88] 	      1505	dir.c	FUNCTION_48	IF_7
0x4006207	        0x4a8d140b	                     lea rdx, [rbx + r9]	      1507	dir.c	FUNCTION_48	CALL_4
0x400620b	            0x89e9	                            mov ecx, ebp	      1507	dir.c	FUNCTION_48	CALL_4
0x400620d	          0x4429c9	                            sub ecx, r9d	      1507	dir.c	FUNCTION_48	CALL_4
0x4006210	          0x4c89fe	                            mov rsi, r15	      1507	dir.c	FUNCTION_48	CALL_4
0x4006213	    0x488db8a80000	                   lea rdi, [rax + 0xa8]	      1507	dir.c	FUNCTION_48	CALL_4
0x400621a	      0xe851a7ffff	        call sym.lookup_untracked.isra.8	      1507	dir.c	FUNCTION_48	CALL_4
0x400621f	            0x4156	                                push r14	      1514	dir.c	FUNCTION_48	CALL_5
0x4006221	          0x4989c0	                             mov r8, rax	      1507	dir.c	FUNCTION_48	CALL_4
0x4006224	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      1514	dir.c	FUNCTION_48	CALL_5
0x4006228	            0x89e9	                            mov ecx, ebp	      1514	dir.c	FUNCTION_48	CALL_5
0x400622a	          0x4889da	                            mov rdx, rbx	      1514	dir.c	FUNCTION_48	CALL_5
0x400622d	    0x41b901000000	                              mov r9d, 1	      1514	dir.c	FUNCTION_48	CALL_5
0x4006233	          0x4c89e6	                            mov rsi, r12	      1514	dir.c	FUNCTION_48	CALL_5
0x4006236	          0x4c89ef	                            mov rdi, r13	      1514	dir.c	FUNCTION_48	CALL_5
0x4006239	              0x50	                                push rax	      1514	dir.c	FUNCTION_48	CALL_5
0x400623a	      0xe811edffff	       call sym.read_directory_recursive	      1514	dir.c	FUNCTION_48	CALL_5
0x400623f	            0x89c1	                            mov ecx, eax	      1514	dir.c	FUNCTION_48	CALL_5
0x4006241	              0x58	                                 pop rax	      1514	dir.c	FUNCTION_48	CALL_5
0x4006242	              0x5a	                                 pop rdx	      1514	dir.c	FUNCTION_48	CALL_5
0x4006243	      0xe918ffffff	                           jmp 0x4006160	      1514	dir.c	FUNCTION_48	CALL_5
0x4006248	     0xf1f84000000	                   nop dword [rax + rax]	      1514	dir.c	FUNCTION_48	CALL_5
0x4006250	            0xa804	                              test al, 4	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4006252	     0xf84fefeffff	                            je 0x4006156	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4006258	            0x4156	                                push r14	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400625a	            0x6a01	                                  push 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400625c	            0x89e9	                            mov ecx, ebp	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400625e	          0x4c89e6	                            mov rsi, r12	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006261	          0x4c89ef	                            mov rdi, r13	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006264	    0x41b901000000	                              mov r9d, 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400626a	          0x4d89f8	                             mov r8, r15	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400626d	          0x4889da	                            mov rdx, rbx	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006270	      0xe8dbecffff	       call sym.read_directory_recursive	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006275	            0x31c9	                            xor ecx, ecx	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4006277	          0x83f802	                              cmp eax, 2	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400627a	              0x5e	                                 pop rsi	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400627b	              0x5f	                                 pop rdi	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x400627c	     0xf85defeffff	                           jne 0x4006160	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006282	      0xe9cffeffff	                           jmp 0x4006156	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4006287	      0xe800000000	                          call 0x400628c	      1516	dir.c	FUNCTION_48
add_exclude	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,1:IF,1:CALL,2:DO,0	107
0x4003440	            0x4157	                                push r15	       630	dir.c	FUNCTION_20
0x4003442	            0x4156	                                push r14	       630	dir.c	FUNCTION_20
0x4003444	          0x4989f7	                            mov r15, rsi	       630	dir.c	FUNCTION_20
0x4003447	            0x4155	                                push r13	       630	dir.c	FUNCTION_20
0x4003449	            0x4154	                                push r12	       630	dir.c	FUNCTION_20
0x400344b	          0x4189d6	                           mov r14d, edx	       630	dir.c	FUNCTION_20
0x400344e	              0x55	                                push rbp	       630	dir.c	FUNCTION_20
0x400344f	              0x53	                                push rbx	       630	dir.c	FUNCTION_20
0x4003450	          0x4889cd	                            mov rbp, rcx	       630	dir.c	FUNCTION_20
0x4003453	          0x4589c5	                           mov r13d, r8d	       630	dir.c	FUNCTION_20
0x4003456	        0x4883ec38	                           sub rsp, 0x38	       630	dir.c	FUNCTION_20
0x400345a	      0x48897c2408	                mov qword [rsp + 8], rdi	       630	dir.c	FUNCTION_20
0x400345f	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	       636	dir.c	FUNCTION_20	CALL_1
0x4003464	      0x488d542420	                   lea rdx, [rsp + 0x20]	       636	dir.c	FUNCTION_20	CALL_1
0x4003469	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       636	dir.c	FUNCTION_20	CALL_1
0x400346e	      0x488d7c2408	                      lea rdi, [rsp + 8]	       636	dir.c	FUNCTION_20	CALL_1
0x4003473	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	dir.c	FUNCTION_20
0x400347c	      0x4889442428	             mov qword [rsp + 0x28], rax	       630	dir.c	FUNCTION_20
0x4003481	            0x31c0	                            xor eax, eax	       630	dir.c	FUNCTION_20
0x4003483	      0xe800000000	                          call 0x4003488	       636	dir.c	FUNCTION_20	CALL_1
0x4003488	      0xf644242008	               test byte [rsp + 0x20], 8	       637	dir.c	FUNCTION_20	IF_1
0x400348d	     0xf84ed000000	                            je 0x4003580	       637	dir.c	FUNCTION_20	IF_1
0x4003493	      0x4c6364241c	         movsxd r12, dword [rsp + 0x1c] 	       638	dir.c	FUNCTION_20	IF_1
0x4003498	        0x4983fccf	             cmp r12, 0xffffffffffffffcf	       785	git-compat-util.h	FUNCTION_160	IF_1
0x400349c	     0xf8713010000	                            ja 0x40035b5	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40034a2	     0xf84f8000000	                            je 0x40035a0	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40034a8	      0x498d742431	                   lea rsi, [r12 + 0x31]	       638	dir.c	FUNCTION_20	IF_1
0x40034ad	      0xbf01000000	                              mov edi, 1	       638	dir.c	FUNCTION_20	IF_1
0x40034b2	      0xe800000000	                          call 0x40034b7	       638	dir.c	FUNCTION_20	IF_1
0x40034b7	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_130	CALL_3
0x40034bc	        0x488d4830	                   lea rcx, [rax + 0x30]	       638	dir.c	FUNCTION_20	IF_1
0x40034c0	          0x4889c3	                            mov rbx, rax	       638	dir.c	FUNCTION_20	IF_1
0x40034c3	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_130	CALL_3
0x40034c6	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_130	CALL_3
0x40034c9	      0xe800000000	                          call 0x40034ce	        53	string3.h	FUNCTION_130	CALL_3
0x40034ce	        0x48894308	                mov qword [rbx + 8], rax	       638	dir.c	FUNCTION_20	IF_1
0x40034d2	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       643	dir.c	FUNCTION_20
0x40034d6	        0x48634d00	                 movsxd rcx, dword [rbp]	       649	dir.c	FUNCTION_20
0x40034da	        0x4c897b18	             mov qword [rbx + 0x18], r15	       645	dir.c	FUNCTION_20
0x40034de	        0x44897320	            mov dword [rbx + 0x20], r14d	       646	dir.c	FUNCTION_20
0x40034e2	        0x44896b28	            mov dword [rbx + 0x28], r13d	       648	dir.c	FUNCTION_20
0x40034e6	          0x894310	             mov dword [rbx + 0x10], eax	       643	dir.c	FUNCTION_20
0x40034e9	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       644	dir.c	FUNCTION_20
0x40034ed	          0x894314	             mov dword [rbx + 0x14], eax	       644	dir.c	FUNCTION_20
0x40034f0	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       647	dir.c	FUNCTION_20
0x40034f4	          0x894324	             mov dword [rbx + 0x24], eax	       647	dir.c	FUNCTION_20
0x40034f7	          0x8b4504	                mov eax, dword [rbp + 4]	       649	dir.c	FUNCTION_20
0x40034fa	            0x39c1	                            cmp ecx, eax	       649	dir.c	FUNCTION_20
0x40034fc	            0x7c7a	                            jl 0x4003578	       649	dir.c	FUNCTION_20
0x40034fe	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       649	dir.c	FUNCTION_20
0x4003502	            0x89c6	                            mov esi, eax	       649	dir.c	FUNCTION_20
0x4003504	          0xc1ee1f	                           shr esi, 0x1f	       649	dir.c	FUNCTION_20
0x4003507	             0x1c6	                            add esi, eax	       649	dir.c	FUNCTION_20
0x4003509	          0x8d4101	                      lea eax, [rcx + 1]	       649	dir.c	FUNCTION_20
0x400350c	            0xd1fe	                              sar esi, 1	       649	dir.c	FUNCTION_20
0x400350e	            0x39f1	                            cmp ecx, esi	       649	dir.c	FUNCTION_20
0x4003510	           0xf4df0	                         cmovge esi, eax	       649	dir.c	FUNCTION_20
0x4003513	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_161	IF_1
0x400351d	          0x4863d6	                         movsxd rdx, esi	       649	dir.c	FUNCTION_20
0x4003520	          0x897504	                mov dword [rbp + 4], esi	       649	dir.c	FUNCTION_20
0x4003523	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_161	IF_1
0x4003526	     0xf879d000000	                            ja 0x40035c9	       795	git-compat-util.h	FUNCTION_161	IF_1
0x400352c	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       649	dir.c	FUNCTION_20
0x4003530	    0x488d34d50000	                        lea rsi, [rdx*8]	       649	dir.c	FUNCTION_20
0x4003538	      0xe800000000	                          call 0x400353d	       649	dir.c	FUNCTION_20
0x400353d	        0x48634d00	                 movsxd rcx, dword [rbp]	       649	dir.c	FUNCTION_20
0x4003541	        0x48894518	            mov qword [rbp + 0x18], rax 	       649	dir.c	FUNCTION_20
0x4003545	          0x8d5101	                      lea edx, [rcx + 1]	       650	dir.c	FUNCTION_20
0x4003548	          0x895500	                    mov dword [rbp], edx	       650	dir.c	FUNCTION_20
0x400354b	        0x48891cc8	            mov qword [rax + rcx*8], rbx	       650	dir.c	FUNCTION_20
0x400354f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       652	dir.c	FUNCTION_20
0x4003554	    0x644833042528	                xor rax, qword fs:[0x28]	       652	dir.c	FUNCTION_20
0x400355d	          0x48892b	                    mov qword [rbx], rbp	       651	dir.c	FUNCTION_20
0x4003560	            0x7539	                           jne 0x400359b	       652	dir.c	FUNCTION_20
0x4003562	        0x4883c438	                           add rsp, 0x38	       652	dir.c	FUNCTION_20
0x4003566	              0x5b	                                 pop rbx	       652	dir.c	FUNCTION_20
0x4003567	              0x5d	                                 pop rbp	       652	dir.c	FUNCTION_20
0x4003568	            0x415c	                                 pop r12	       652	dir.c	FUNCTION_20
0x400356a	            0x415d	                                 pop r13	       652	dir.c	FUNCTION_20
0x400356c	            0x415e	                                 pop r14	       652	dir.c	FUNCTION_20
0x400356e	            0x415f	                                 pop r15	       652	dir.c	FUNCTION_20
0x4003570	              0xc3	                                     ret	       652	dir.c	FUNCTION_20
0x4003571	     0xf1f80000000	                         nop dword [rax]	       652	dir.c	FUNCTION_20
0x4003578	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       652	dir.c	FUNCTION_20
0x400357c	            0xebc7	                           jmp 0x4003545	       652	dir.c	FUNCTION_20
0x400357e	            0x6690	                                     nop	       652	dir.c	FUNCTION_20
0x4003580	      0xbf30000000	                           mov edi, 0x30	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4003585	      0xe800000000	                          call 0x400358a	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400358a	          0x4889c3	                            mov rbx, rax	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400358d	      0x488b442408	                mov rax, qword [rsp + 8]	       641	dir.c	FUNCTION_20	ELSE_1
0x4003592	        0x48894308	                mov qword [rbx + 8], rax	       641	dir.c	FUNCTION_20	ELSE_1
0x4003596	      0xe937ffffff	                           jmp 0x40034d2	       641	dir.c	FUNCTION_20	ELSE_1
0x400359b	      0xe800000000	                          call 0x40035a0	       652	dir.c	FUNCTION_20
0x40035a0	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035a5	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035a9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035ae	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035b0	      0xe800000000	                          call 0x40035b5	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035b5	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035b8	      0xbe30000000	                           mov esi, 0x30	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035bd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035c2	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035c4	      0xe800000000	                          call 0x40035c9	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x40035c9	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40035ce	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40035d3	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x40035d5	      0xe800000000	                          call 0x40035da	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
parse_exclude_pattern	FOR,1:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,6:CALL,3:DO,0	99
0x40032d0	            0x4157	                                push r15	       594	dir.c	FUNCTION_19
0x40032d2	            0x4156	                                push r14	       594	dir.c	FUNCTION_19
0x40032d4	          0x4989cf	                            mov r15, rcx	       594	dir.c	FUNCTION_19
0x40032d7	            0x4155	                                push r13	       594	dir.c	FUNCTION_19
0x40032d9	            0x4154	                                push r12	       594	dir.c	FUNCTION_19
0x40032db	          0x4989d6	                            mov r14, rdx	       594	dir.c	FUNCTION_19
0x40032de	              0x55	                                push rbp	       594	dir.c	FUNCTION_19
0x40032df	              0x53	                                push rbx	       594	dir.c	FUNCTION_19
0x40032e0	          0x4889fd	                            mov rbp, rdi	       594	dir.c	FUNCTION_19
0x40032e3	          0x4989f4	                            mov r12, rsi	       594	dir.c	FUNCTION_19
0x40032e6	        0x4883ec18	                           sub rsp, 0x18	       594	dir.c	FUNCTION_19
0x40032ea	          0x488b1f	                    mov rbx, qword [rdi]	       595	dir.c	FUNCTION_19
0x40032ed	    0xc70200000000	                      mov dword [rdx], 0	       598	dir.c	FUNCTION_19
0x40032f3	          0x803b21	                    cmp byte [rbx], 0x21	       599	dir.c	FUNCTION_19	IF_1
0x40032f6	     0xf84f4000000	                            je 0x40033f0	       599	dir.c	FUNCTION_19	IF_1
0x40032fc	    0xc74424080900	                  mov dword [rsp + 8], 9	       599	dir.c	FUNCTION_19	IF_1
0x4003304	    0x41bd01000000	                             mov r13d, 1	       599	dir.c	FUNCTION_19	IF_1
0x400330a	    0xc744240c0800	                mov dword [rsp + 0xc], 8	       599	dir.c	FUNCTION_19	IF_1
0x4003312	          0x4889df	                            mov rdi, rbx	       603	dir.c	FUNCTION_19	CALL_1
0x4003315	      0xe800000000	                          call 0x400331a	       603	dir.c	FUNCTION_19	CALL_1
0x400331a	          0x4885c0	                           test rax, rax	       604	dir.c	FUNCTION_19	IF_2
0x400331d	     0xf8485000000	                            je 0x40033a8	       604	dir.c	FUNCTION_19	IF_2
0x4003323	      0x807c03ff2f	         cmp byte [rbx + rax - 1], 0x2f 	       604	dir.c	FUNCTION_19	IF_2
0x4003328	        0x488d70ff	                      lea rsi, [rax - 1]	       604	dir.c	FUNCTION_19	IF_2
0x400332c	     0xf84e6000000	                            je 0x4003418	       604	dir.c	FUNCTION_19	IF_2
0x4003332	            0x31ff	                            xor edi, edi	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4003334	          0x803b2f	                    cmp byte [rbx], 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4003337	          0x4189c1	                            mov r9d, eax	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400333a	            0x741b	                            je 0x4003357	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400333c	         0xf1f4000	                         nop dword [rax]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4003340	        0x4883c701	                              add rdi, 1	       608	dir.c	FUNCTION_19	FOR_1
0x4003344	          0x4839c7	                            cmp rdi, rax	       608	dir.c	FUNCTION_19	FOR_1
0x4003347	            0x7306	                           jae 0x400334f	       608	dir.c	FUNCTION_19	FOR_1
0x4003349	        0x803c3b2f	              cmp byte [rbx + rdi], 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400334d	            0x75f1	                           jne 0x4003340	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400334f	          0x4839c7	                            cmp rdi, rax	       612	dir.c	FUNCTION_19	IF_4
0x4003352	          0x4189c1	                            mov r9d, eax	       612	dir.c	FUNCTION_19	IF_4
0x4003355	            0x7456	                            je 0x40033ad	       612	dir.c	FUNCTION_19	IF_4
0x4003357	          0x4531c0	                            xor r8d, r8d	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400335a	            0xeb11	                           jmp 0x400336d	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x400335c	         0xf1f4000	                         nop dword [rax]	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4003360	        0x4983c001	                               add r8, 1	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4003364	    0xf68700000000	                      test byte [rdi], 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400336b	            0x750d	                           jne 0x400337a	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400336d	      0x420fb63c03	              movzx edi, byte [rbx + r8]	       578	dir.c	FUNCTION_17	FOR_1
0x4003372	          0x4489c6	                            mov esi, r8d	       579	dir.c	FUNCTION_17	FOR_1
0x4003375	          0x4084ff	                           test dil, dil	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4003378	            0x75e6	                           jne 0x4003360	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x400337a	          0x4863fe	                         movsxd rdi, esi	       620	dir.c	FUNCTION_19	IF_5
0x400337d	          0x4839c7	                            cmp rdi, rax	       614	dir.c	FUNCTION_19	CALL_2
0x4003380	        0x410f47f1	                          cmova esi, r9d	       614	dir.c	FUNCTION_19	CALL_2
0x4003384	          0x418937	                    mov dword [r15], esi	       614	dir.c	FUNCTION_19	CALL_2
0x4003387	          0x803b2a	                    cmp byte [rbx], 0x2a	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400338a	            0x742c	                            je 0x40033b8	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x400338c	        0x48895d00	                    mov qword [rbp], rbx	       624	dir.c	FUNCTION_19
0x4003390	        0x45890c24	                    mov dword [r12], r9d	       625	dir.c	FUNCTION_19
0x4003394	        0x4883c418	                           add rsp, 0x18	       626	dir.c	FUNCTION_19
0x4003398	              0x5b	                                 pop rbx	       626	dir.c	FUNCTION_19
0x4003399	              0x5d	                                 pop rbp	       626	dir.c	FUNCTION_19
0x400339a	            0x415c	                                 pop r12	       626	dir.c	FUNCTION_19
0x400339c	            0x415d	                                 pop r13	       626	dir.c	FUNCTION_19
0x400339e	            0x415e	                                 pop r14	       626	dir.c	FUNCTION_19
0x40033a0	            0x415f	                                 pop r15	       626	dir.c	FUNCTION_19
0x40033a2	              0xc3	                                     ret	       626	dir.c	FUNCTION_19
0x40033a3	       0xf1f440000	                   nop dword [rax + rax]	       626	dir.c	FUNCTION_19
0x40033a8	          0x4531c9	                            xor r9d, r9d	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x40033ab	            0x31c0	                            xor eax, eax	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x40033ad	          0x45892e	                   mov dword [r14], r13d	       613	dir.c	FUNCTION_19	IF_4
0x40033b0	            0xeba5	                           jmp 0x4003357	       613	dir.c	FUNCTION_19	IF_4
0x40033b2	    0x660f1f440000	                    nop word [rax + rax]	       613	dir.c	FUNCTION_19	IF_4
0x40033b8	            0x31c9	                            xor ecx, ecx	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033ba	            0xeb11	                           jmp 0x40033cd	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033bc	         0xf1f4000	                         nop dword [rax]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033c0	        0x4883c101	                              add rcx, 1	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033c4	    0xf68000000000	                      test byte [rax], 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40033cb	            0x750c	                           jne 0x40033d9	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40033cd	       0xfb6440b01	        movzx eax, byte [rbx + rcx + 1] 	       578	dir.c	FUNCTION_17	FOR_1
0x40033d2	          0x4863f1	                         movsxd rsi, ecx	       579	dir.c	FUNCTION_17	FOR_1
0x40033d5	            0x84c0	                             test al, al	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40033d7	            0x75e7	                           jne 0x40033c0	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x40033d9	      0x807c330100	             cmp byte [rbx + rsi + 1], 0	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033de	            0x75ac	                           jne 0x400338c	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x40033e0	        0x41830e04	                       or dword [r14], 4	       623	dir.c	FUNCTION_19	IF_6
0x40033e4	            0xeba6	                           jmp 0x400338c	       623	dir.c	FUNCTION_19	IF_6
0x40033e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       623	dir.c	FUNCTION_19	IF_6
0x40033f0	    0xc70210000000	                   mov dword [rdx], 0x10	       600	dir.c	FUNCTION_19	IF_1
0x40033f6	        0x4883c301	                              add rbx, 1	       601	dir.c	FUNCTION_19	IF_1
0x40033fa	    0xc74424081900	               mov dword [rsp + 8], 0x19	       601	dir.c	FUNCTION_19	IF_1
0x4003402	    0x41bd11000000	                          mov r13d, 0x11	       601	dir.c	FUNCTION_19	IF_1
0x4003408	    0xc744240c1800	            mov dword [rsp + 0xc], 0x18 	       601	dir.c	FUNCTION_19	IF_1
0x4003410	      0xe9fdfeffff	                           jmp 0x4003312	       601	dir.c	FUNCTION_19	IF_1
0x4003415	           0xf1f00	                         nop dword [rax]	       601	dir.c	FUNCTION_19	IF_1
0x4003418	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       606	dir.c	FUNCTION_19	IF_2
0x400341c	          0x4885f6	                           test rsi, rsi	       608	dir.c	FUNCTION_19	FOR_1
0x400341f	      0x448b6c2408	               mov r13d, dword [rsp + 8]	       608	dir.c	FUNCTION_19	FOR_1
0x4003424	          0x418906	                    mov dword [r14], eax	       606	dir.c	FUNCTION_19	IF_2
0x4003427	     0xf847bffffff	                            je 0x40033a8	       608	dir.c	FUNCTION_19	FOR_1
0x400342d	          0x4889f0	                            mov rax, rsi	       608	dir.c	FUNCTION_19	FOR_1
0x4003430	      0xe9fdfeffff	                           jmp 0x4003332	       608	dir.c	FUNCTION_19	FOR_1
common_prefix	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,0:CALL,2:DO,0	17
0x4002ae0	              0x53	                                push rbx	       184	dir.c	FUNCTION_7
0x4002ae1	        0x488d5710	                   lea rdx, [rdi + 0x10]	       184	dir.c	FUNCTION_7
0x4002ae5	          0x8b7708	                mov esi, dword [rdi + 8]	       185	dir.c	FUNCTION_7	CALL_1
0x4002ae8	          0x4889fb	                            mov rbx, rdi	       184	dir.c	FUNCTION_7
0x4002aeb	            0x8b3f	                    mov edi, dword [rdi]	       185	dir.c	FUNCTION_7	CALL_1
0x4002aed	      0xe8aed8ffff	       call sym.common_prefix_len.isra.6	       185	dir.c	FUNCTION_7	CALL_1
0x4002af2	          0x4885c0	                           test rax, rax	       187	dir.c	FUNCTION_7	CALL_2
0x4002af5	            0x7419	                            je 0x4002b10	       187	dir.c	FUNCTION_7	CALL_2
0x4002af7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       187	dir.c	FUNCTION_7	CALL_2
0x4002afb	          0x4889c6	                            mov rsi, rax	       187	dir.c	FUNCTION_7	CALL_2
0x4002afe	              0x5b	                                 pop rbx	       188	dir.c	FUNCTION_7
0x4002aff	          0x488b3a	                    mov rdi, qword [rdx]	       187	dir.c	FUNCTION_7	CALL_2
0x4002b02	      0xe900000000	                           jmp 0x4002b07	       187	dir.c	FUNCTION_7	CALL_2
0x4002b07	    0x660f1f840000	                    nop word [rax + rax]	       187	dir.c	FUNCTION_7	CALL_2
0x4002b10	            0x31c0	                            xor eax, eax	       188	dir.c	FUNCTION_7
0x4002b12	              0x5b	                                 pop rbx	       188	dir.c	FUNCTION_7
0x4002b13	              0xc3	                                     ret	       188	dir.c	FUNCTION_7
clear_directory	FOR,2:WHILE,1:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,5:DO,0	75
0x4007b80	            0x4157	                                push r15	      2540	dir.c	FUNCTION_82
0x4007b82	            0x4156	                                push r14	      2540	dir.c	FUNCTION_82
0x4007b84	            0x4155	                                push r13	      2540	dir.c	FUNCTION_82
0x4007b86	            0x4154	                                push r12	      2540	dir.c	FUNCTION_82
0x4007b88	        0x4c8d6f30	                   lea r13, [rdi + 0x30]	      2540	dir.c	FUNCTION_82
0x4007b8c	              0x55	                                push rbp	      2540	dir.c	FUNCTION_82
0x4007b8d	              0x53	                                push rbx	      2540	dir.c	FUNCTION_82
0x4007b8e	        0x4883ec18	                           sub rsp, 0x18	      2540	dir.c	FUNCTION_82
0x4007b92	      0x48897c2408	                mov qword [rsp + 8], rdi	      2540	dir.c	FUNCTION_82
0x4007b97	    0xc74424040000	                  mov dword [rsp + 4], 0	      2546	dir.c	FUNCTION_82	FOR_1
0x4007b9f	        0x418b4500	                    mov eax, dword [r13]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007ba3	          0x4531e4	                          xor r12d, r12d	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007ba6	            0x31ed	                            xor ebp, ebp	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007ba8	            0x85c0	                           test eax, eax	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007baa	            0x7e7b	                           jle 0x4007c27	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bac	         0xf1f4000	                         nop dword [rax]	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bb0	          0x4d89e7	                            mov r15, r12	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bb3	        0x4d037d08	                add r15, qword [r13 + 8]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bb7	      0x837c240401	                  cmp dword [rsp + 4], 1	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4007bbc	     0xf84c2000000	                            je 0x4007c84	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4007bc2	          0x418b17	                    mov edx, dword [r15]	       679	dir.c	FUNCTION_22	FOR_1
0x4007bc5	          0x4531f6	                          xor r14d, r14d	       679	dir.c	FUNCTION_22	FOR_1
0x4007bc8	            0x31db	                            xor ebx, ebx	       679	dir.c	FUNCTION_22	FOR_1
0x4007bca	            0x85d2	                           test edx, edx	       679	dir.c	FUNCTION_22	FOR_1
0x4007bcc	            0x7e1b	                           jle 0x4007be9	       679	dir.c	FUNCTION_22	FOR_1
0x4007bce	            0x6690	                                     nop	       679	dir.c	FUNCTION_22	FOR_1
0x4007bd0	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	       680	dir.c	FUNCTION_22	CALL_1
0x4007bd4	          0x83c301	                              add ebx, 1	       679	dir.c	FUNCTION_22	FOR_1
0x4007bd7	        0x4a8b3c31	              mov rdi, qword [rcx + r14]	       680	dir.c	FUNCTION_22	CALL_1
0x4007bdb	        0x4983c608	                              add r14, 8	       680	dir.c	FUNCTION_22	CALL_1
0x4007bdf	      0xe800000000	                          call 0x4007be4	       680	dir.c	FUNCTION_22	CALL_1
0x4007be4	          0x413b1f	                    cmp ebx, dword [r15]	       679	dir.c	FUNCTION_22	FOR_1
0x4007be7	            0x7ce7	                            jl 0x4007bd0	       679	dir.c	FUNCTION_22	FOR_1
0x4007be9	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	       681	dir.c	FUNCTION_22	CALL_2
0x4007bed	          0x83c501	                              add ebp, 1	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bf0	        0x4983c420	                           add r12, 0x20	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007bf4	      0xe800000000	                          call 0x4007bf9	       681	dir.c	FUNCTION_22	CALL_2
0x4007bf9	        0x498b7f08	                mov rdi, qword [r15 + 8]	       682	dir.c	FUNCTION_22	CALL_3
0x4007bfd	      0xe800000000	                          call 0x4007c02	       682	dir.c	FUNCTION_22	CALL_3
0x4007c02	    0x49c707000000	                      mov qword [r15], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4007c09	    0x49c747080000	                  mov qword [r15 + 8], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4007c11	    0x49c747100000	               mov qword [r15 + 0x10], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4007c19	    0x49c747180000	               mov qword [r15 + 0x18], 0	        90	string3.h	FUNCTION_133	CALL_6
0x4007c21	        0x41396d00	                    cmp dword [r13], ebp	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007c25	            0x7f89	                            jg 0x4007bb0	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4007c27	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x4007c2b	        0x4983c510	                           add r13, 0x10	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x4007c2f	      0xe800000000	                          call 0x4007c34	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x4007c34	      0x8344240401	                  add dword [rsp + 4], 1	      2546	dir.c	FUNCTION_82	FOR_1
0x4007c39	        0x8b442404	                mov eax, dword [rsp + 4]	      2546	dir.c	FUNCTION_82	FOR_1
0x4007c3d	          0x83f803	                              cmp eax, 3	      2546	dir.c	FUNCTION_82	FOR_1
0x4007c40	     0xf8559ffffff	                           jne 0x4007b9f	      2546	dir.c	FUNCTION_82	FOR_1
0x4007c46	      0x488b442408	                mov rax, qword [rsp + 8]	      2557	dir.c	FUNCTION_82
0x4007c4b	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      2557	dir.c	FUNCTION_82
0x4007c4f	          0x4885ff	                           test rdi, rdi	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c52	            0x7414	                            je 0x4007c68	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c54	         0xf1f4000	                         nop dword [rax]	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c58	          0x488b1f	                    mov rbx, qword [rdi]	      2559	dir.c	FUNCTION_82	WHILE_1
0x4007c5b	      0xe800000000	                          call 0x4007c60	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x4007c60	          0x4885db	                           test rbx, rbx	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c63	          0x4889df	                            mov rdi, rbx	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c66	            0x75f0	                           jne 0x4007c58	      2558	dir.c	FUNCTION_82	WHILE_1
0x4007c68	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2563	dir.c	FUNCTION_82	CALL_5
0x4007c6d	        0x4883c418	                           add rsp, 0x18	      2564	dir.c	FUNCTION_82
0x4007c71	              0x5b	                                 pop rbx	      2564	dir.c	FUNCTION_82
0x4007c72	              0x5d	                                 pop rbp	      2564	dir.c	FUNCTION_82
0x4007c73	            0x415c	                                 pop r12	      2564	dir.c	FUNCTION_82
0x4007c75	            0x415d	                                 pop r13	      2564	dir.c	FUNCTION_82
0x4007c77	            0x415e	                                 pop r14	      2564	dir.c	FUNCTION_82
0x4007c79	            0x415f	                                 pop r15	      2564	dir.c	FUNCTION_82
0x4007c7b	        0x4883c770	                           add rdi, 0x70	      2563	dir.c	FUNCTION_82	CALL_5
0x4007c7f	      0xe900000000	                           jmp 0x4007c84	      2563	dir.c	FUNCTION_82	CALL_5
0x4007c84	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x4007c88	      0xe800000000	                          call 0x4007c8d	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x4007c8d	      0xe930ffffff	                           jmp 0x4007bc2	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
read_one_dir	FOR,2:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,6:CALL,11:DO,0	156
0x4000710	            0x4157	                                push r15	      2754	dir.c	FUNCTION_89
0x4000712	            0x4156	                                push r14	      2754	dir.c	FUNCTION_89
0x4000714	      0xb90c000000	                            mov ecx, 0xc	        90	string3.h	FUNCTION_133	CALL_6
0x4000719	            0x4155	                                push r13	      2754	dir.c	FUNCTION_89
0x400071b	            0x4154	                                push r12	      2754	dir.c	FUNCTION_89
0x400071d	          0x4989f6	                            mov r14, rsi	      2754	dir.c	FUNCTION_89
0x4000720	              0x55	                                push rbp	      2754	dir.c	FUNCTION_89
0x4000721	              0x53	                                push rbx	      2754	dir.c	FUNCTION_89
0x4000722	          0x4889fd	                            mov rbp, rdi	      2754	dir.c	FUNCTION_89
0x4000725	    0x4881ec880000	                           sub rsp, 0x88	      2754	dir.c	FUNCTION_89
0x400072c	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      2756	dir.c	FUNCTION_89
0x4000730	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	      2756	dir.c	FUNCTION_89
0x4000734	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_133	CALL_6
0x4000739	    0x64488b042528	                mov rax, qword fs:[0x28]	      2754	dir.c	FUNCTION_89
0x4000742	      0x4889442478	             mov qword [rsp + 0x78], rax	      2754	dir.c	FUNCTION_89
0x4000747	            0x31c0	                            xor eax, eax	      2754	dir.c	FUNCTION_89
0x4000749	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_133	CALL_6
0x400074c	      0x4889742408	                mov qword [rsp + 8], rsi	      2762	dir.c	FUNCTION_89
0x4000751	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_133	CALL_6
0x4000754	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2763	dir.c	FUNCTION_89	CALL_2
0x4000759	      0xe800000000	                          call 0x400075e	      2763	dir.c	FUNCTION_89	CALL_2
0x400075e	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2764	dir.c	FUNCTION_89	IF_1
0x4000763	     0xf826e010000	                            jb 0x40008d7	      2764	dir.c	FUNCTION_89	IF_1
0x4000769	      0x804c245404	                 or byte [rsp + 0x54], 4	      2766	dir.c	FUNCTION_89
0x400076e	            0x85c0	                           test eax, eax	      2769	dir.c	FUNCTION_89	IF_2
0x4000770	        0x89442444	             mov dword [rsp + 0x44], eax	      2767	dir.c	FUNCTION_89
0x4000774	        0x89442450	             mov dword [rsp + 0x50], eax	      2768	dir.c	FUNCTION_89
0x4000778	            0x7414	                            je 0x400078e	      2769	dir.c	FUNCTION_89	IF_2
0x400077a	            0x89c0	                            mov eax, eax	      2770	dir.c	FUNCTION_89	IF_2
0x400077c	    0x488d3cc50000	                        lea rdi, [rax*8]	      2770	dir.c	FUNCTION_89	IF_2
0x4000784	      0xe800000000	                          call 0x4000789	      2770	dir.c	FUNCTION_89	IF_2
0x4000789	      0x4889442418	             mov qword [rsp + 0x18], rax	      2770	dir.c	FUNCTION_89	IF_2
0x400078e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2774	dir.c	FUNCTION_89	CALL_3
0x4000793	      0xe800000000	                          call 0x4000798	      2774	dir.c	FUNCTION_89	CALL_3
0x4000798	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2775	dir.c	FUNCTION_89	IF_3
0x400079d	        0x89442448	             mov dword [rsp + 0x48], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x40007a1	        0x8944244c	             mov dword [rsp + 0x4c], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x40007a5	     0xf822c010000	                            jb 0x40008d7	      2775	dir.c	FUNCTION_89	IF_3
0x40007ab	            0x89c0	                            mov eax, eax	      2777	dir.c	FUNCTION_89
0x40007ad	    0x488d3cc50000	                        lea rdi, [rax*8]	      2777	dir.c	FUNCTION_89
0x40007b5	      0xe800000000	                          call 0x40007ba	      2777	dir.c	FUNCTION_89
0x40007ba	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2778	dir.c	FUNCTION_89
0x40007bf	      0x4889442410	             mov qword [rsp + 0x10], rax	      2777	dir.c	FUNCTION_89
0x40007c4	          0x4c89ef	                            mov rdi, r13	      2780	dir.c	FUNCTION_89	CALL_4
0x40007c7	      0xe800000000	                          call 0x40007cc	      2780	dir.c	FUNCTION_89	CALL_4
0x40007cc	          0x4863d0	                         movsxd rdx, eax	      2781	dir.c	FUNCTION_89
0x40007cf	          0x4989c4	                            mov r12, rax	      2780	dir.c	FUNCTION_89	CALL_4
0x40007d2	      0x498d441501	                lea rax, [r13 + rdx + 1]	      2781	dir.c	FUNCTION_89
0x40007d7	        0x493b4630	            cmp rax, qword [r14 + 0x30] 	      2782	dir.c	FUNCTION_89	IF_4
0x40007db	      0x4889442408	                mov qword [rsp + 8], rax	      2781	dir.c	FUNCTION_89
0x40007e0	     0xf87f1000000	                            ja 0x40008d7	      2782	dir.c	FUNCTION_89	IF_4
0x40007e6	        0x4883fa9f	             cmp rdx, 0xffffffffffffff9f	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40007ea	     0xf8764010000	                            ja 0x4000954	       785	git-compat-util.h	FUNCTION_160	IF_1
0x40007f0	        0x488d7a60	                   lea rdi, [rdx + 0x60]	      2784	dir.c	FUNCTION_89	CALL_6
0x40007f4	      0xe800000000	                          call 0x40007f9	      2784	dir.c	FUNCTION_89	CALL_6
0x40007f9	          0x4889c3	                            mov rbx, rax	      2784	dir.c	FUNCTION_89	CALL_6
0x40007fc	        0x48894500	                    mov qword [rbp], rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4000800	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000805	      0x418d542401	                      lea edx, [r12 + 1]	        53	string3.h	FUNCTION_130	CALL_3
0x400080a	        0x488d7b59	                   lea rdi, [rbx + 0x59]	        53	string3.h	FUNCTION_130	CALL_3
0x400080e	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_130	CALL_3
0x4000811	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000814	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000819	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_130	CALL_3
0x400081c	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000820	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000825	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000829	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_130	CALL_3
0x400082e	        0x48894318	             mov qword [rbx + 0x18], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000832	      0x488b442430	            mov rax, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000837	        0x48894320	             mov qword [rbx + 0x20], rax	        53	string3.h	FUNCTION_130	CALL_3
0x400083b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000840	        0x48894328	             mov qword [rbx + 0x28], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000844	      0x488b442440	            mov rax, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000849	        0x48894330	             mov qword [rbx + 0x30], rax	        53	string3.h	FUNCTION_130	CALL_3
0x400084d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000852	        0x48894338	             mov qword [rbx + 0x38], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000856	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_130	CALL_3
0x400085b	        0x48894340	             mov qword [rbx + 0x40], rax	        53	string3.h	FUNCTION_130	CALL_3
0x400085f	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000864	        0x48894348	             mov qword [rbx + 0x48], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000868	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_130	CALL_3
0x400086d	        0x48894350	             mov qword [rbx + 0x50], rax	        53	string3.h	FUNCTION_130	CALL_3
0x4000871	      0x488b442468	            mov rax, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_130	CALL_3
0x4000876	        0x48894358	             mov qword [rbx + 0x58], rax	        53	string3.h	FUNCTION_130	CALL_3
0x400087a	      0xe800000000	                          call 0x400087f	        53	string3.h	FUNCTION_130	CALL_3
0x400087f	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      2789	dir.c	FUNCTION_89	FOR_1
0x4000882	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2787	dir.c	FUNCTION_89
0x4000887	            0x85d2	                           test edx, edx	      2789	dir.c	FUNCTION_89	FOR_1
0x4000889	            0x7475	                            je 0x4000900	      2789	dir.c	FUNCTION_89	FOR_1
0x400088b	          0x4531ed	                          xor r13d, r13d	      2789	dir.c	FUNCTION_89	FOR_1
0x400088e	          0x4531e4	                          xor r12d, r12d	      2789	dir.c	FUNCTION_89	FOR_1
0x4000891	            0xeb2a	                           jmp 0x40008bd	      2789	dir.c	FUNCTION_89	FOR_1
0x4000893	       0xf1f440000	                   nop dword [rax + rax]	      2789	dir.c	FUNCTION_89	FOR_1
0x4000898	          0x4889ef	                            mov rdi, rbp	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x400089b	          0x4d89ef	                            mov r15, r13	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x400089e	        0x4183c401	                             add r12d, 1	      2789	dir.c	FUNCTION_89	FOR_1
0x40008a2	        0x4c037b08	                add r15, qword [rbx + 8]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x40008a6	        0x4983c508	                              add r13, 8	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x40008aa	      0xe800000000	                          call 0x40008af	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x40008af	        0x44396340	           cmp dword [rbx + 0x40], r12d 	      2789	dir.c	FUNCTION_89	FOR_1
0x40008b3	          0x498907	                    mov qword [r15], rax	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x40008b6	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2795	dir.c	FUNCTION_89	FOR_1
0x40008bb	            0x7643	                           jbe 0x4000900	      2789	dir.c	FUNCTION_89	FOR_1
0x40008bd	          0x4889ef	                            mov rdi, rbp	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x40008c0	      0xe800000000	                          call 0x40008c5	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x40008c5	            0x4898	                                    cdqe	      2791	dir.c	FUNCTION_89	FOR_1
0x40008c7	      0x488d440501	                lea rax, [rbp + rax + 1]	      2791	dir.c	FUNCTION_89	FOR_1
0x40008cc	        0x493b4630	            cmp rax, qword [r14 + 0x30] 	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x40008d0	      0x4889442408	                mov qword [rsp + 8], rax	      2791	dir.c	FUNCTION_89	FOR_1
0x40008d5	            0x76c1	                           jbe 0x4000898	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x40008d7	      0xb8ffffffff	                     mov eax, 0xffffffff	      2765	dir.c	FUNCTION_89	IF_1
0x40008dc	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2807	dir.c	FUNCTION_89
0x40008e1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2807	dir.c	FUNCTION_89
0x40008ea	            0x7579	                           jne 0x4000965	      2807	dir.c	FUNCTION_89
0x40008ec	    0x4881c4880000	                           add rsp, 0x88	      2807	dir.c	FUNCTION_89
0x40008f3	              0x5b	                                 pop rbx	      2807	dir.c	FUNCTION_89
0x40008f4	              0x5d	                                 pop rbp	      2807	dir.c	FUNCTION_89
0x40008f5	            0x415c	                                 pop r12	      2807	dir.c	FUNCTION_89
0x40008f7	            0x415d	                                 pop r13	      2807	dir.c	FUNCTION_89
0x40008f9	            0x415e	                                 pop r14	      2807	dir.c	FUNCTION_89
0x40008fb	            0x415f	                                 pop r15	      2807	dir.c	FUNCTION_89
0x40008fd	              0xc3	                                     ret	      2807	dir.c	FUNCTION_89
0x40008fe	            0x6690	                                     nop	      2807	dir.c	FUNCTION_89
0x4000900	          0x496306	                 movsxd rax, dword [r14]	      2798	dir.c	FUNCTION_89
0x4000903	        0x498b5608	                mov rdx, qword [r14 + 8]	      2798	dir.c	FUNCTION_89
0x4000907	          0x4531e4	                          xor r12d, r12d	      2801	dir.c	FUNCTION_89	FOR_2
0x400090a	          0x8d4801	                      lea ecx, [rax + 1]	      2798	dir.c	FUNCTION_89
0x400090d	          0x41890e	                    mov dword [r14], ecx	      2798	dir.c	FUNCTION_89
0x4000910	        0x48891cc2	            mov qword [rdx + rax*8], rbx	      2798	dir.c	FUNCTION_89
0x4000914	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2801	dir.c	FUNCTION_89	FOR_2
0x4000917	        0x49896e28	             mov qword [r14 + 0x28], rbp	      2799	dir.c	FUNCTION_89
0x400091b	            0x31ed	                            xor ebp, ebp	      2801	dir.c	FUNCTION_89	FOR_2
0x400091d	            0x85c0	                           test eax, eax	      2801	dir.c	FUNCTION_89	FOR_2
0x400091f	            0x7515	                           jne 0x4000936	      2801	dir.c	FUNCTION_89	FOR_2
0x4000921	            0xeb2d	                           jmp 0x4000950	      2801	dir.c	FUNCTION_89	FOR_2
0x4000923	       0xf1f440000	                   nop dword [rax + rax]	      2801	dir.c	FUNCTION_89	FOR_2
0x4000928	        0x4183c401	                             add r12d, 1	      2801	dir.c	FUNCTION_89	FOR_2
0x400092c	        0x4883c508	                              add rbp, 8	      2801	dir.c	FUNCTION_89	FOR_2
0x4000930	        0x44396338	           cmp dword [rbx + 0x38], r12d 	      2801	dir.c	FUNCTION_89	FOR_2
0x4000934	            0x761a	                           jbe 0x4000950	      2801	dir.c	FUNCTION_89	FOR_2
0x4000936	          0x4889ef	                            mov rdi, rbp	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000939	          0x48033b	                    add rdi, qword [rbx]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x400093c	          0x4c89f6	                            mov rsi, r14	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x400093f	      0xe8ccfdffff	                   call sym.read_one_dir	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000944	            0x85c0	                           test eax, eax	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000946	            0x79e0	                           jns 0x4000928	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000948	            0xeb8d	                           jmp 0x40008d7	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x400094a	    0x660f1f440000	                    nop word [rax + rax]	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000950	            0x31c0	                            xor eax, eax	      2806	dir.c	FUNCTION_89
0x4000952	            0xeb88	                           jmp 0x40008dc	      2806	dir.c	FUNCTION_89
0x4000954	      0xbe60000000	                           mov esi, 0x60	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4000959	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x400095e	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4000960	      0xe800000000	                          call 0x4000965	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4000965	      0xe800000000	                          call 0x400096a	      2807	dir.c	FUNCTION_89
report_path_error	FOR,2:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,4:CALL,1:DO,0	84
0x4003130	            0x4157	                                push r15	       532	dir.c	FUNCTION_16
0x4003132	            0x4156	                                push r14	       532	dir.c	FUNCTION_16
0x4003134	            0x4155	                                push r13	       532	dir.c	FUNCTION_16
0x4003136	            0x4154	                                push r12	       532	dir.c	FUNCTION_16
0x4003138	              0x55	                                push rbp	       532	dir.c	FUNCTION_16
0x4003139	              0x53	                                push rbx	       532	dir.c	FUNCTION_16
0x400313a	        0x4883ec38	                           sub rsp, 0x38	       532	dir.c	FUNCTION_16
0x400313e	          0x448b36	                   mov r14d, dword [rsi]	       537	dir.c	FUNCTION_16	FOR_1
0x4003141	          0x4585f6	                         test r14d, r14d	       537	dir.c	FUNCTION_16	FOR_1
0x4003144	     0xf8e17010000	                           jle 0x4003261	       537	dir.c	FUNCTION_16	FOR_1
0x400314a	      0x4889742420	             mov qword [rsp + 0x20], rsi	       537	dir.c	FUNCTION_16	FOR_1
0x400314f	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       537	dir.c	FUNCTION_16	FOR_1
0x4003154	          0x4531ff	                          xor r15d, r15d	       537	dir.c	FUNCTION_16	FOR_1
0x4003157	    0x48c744241000	               mov qword [rsp + 0x10], 0	       537	dir.c	FUNCTION_16	FOR_1
0x4003160	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       537	dir.c	FUNCTION_16	FOR_1
0x4003168	     0xf1f84000000	                   nop dword [rax + rax]	       537	dir.c	FUNCTION_16	FOR_1
0x4003170	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4003175	          0x4589fd	                          mov r13d, r15d	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4003178	      0x42803c3800	                 cmp byte [rax + r15], 0	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x400317d	     0xf8597000000	                           jne 0x400321a	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4003183	          0x4585f6	                         test r14d, r14d	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4003186	     0xf8eb8000000	                           jle 0x4003244	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400318c	          0x4889c5	                            mov rbp, rax	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400318f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4003194	      0xbb01000000	                              mov ebx, 1	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4003199	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x400319d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031a2	      0x488b440108	         mov rax, qword [rcx + rax + 8] 	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031a7	        0x4c8d6108	                      lea r12, [rcx + 8]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031ab	      0x4889442408	                mov qword [rsp + 8], rax	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031b0	            0xeb2a	                           jmp 0x40031dc	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031b2	    0x660f1f440000	                    nop word [rax + rax]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031b8	      0x488b742408	                mov rsi, qword [rsp + 8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40031bd	        0x498b3c24	                    mov rdi, qword [r12]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40031c1	      0xe800000000	                          call 0x40031c6	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x40031c6	            0x85c0	                           test eax, eax	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031c8	            0x89de	                            mov esi, ebx	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031ca	            0x744e	                            je 0x400321a	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031cc	          0x83c301	                              add ebx, 1	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031cf	        0x4983c438	                           add r12, 0x38	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031d3	        0x4883c501	                              add rbp, 1	       548	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031d7	          0x4139f6	                           cmp r14d, esi	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031da	            0x7e20	                           jle 0x40031fc	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031dc	          0x8d43ff	                      lea eax, [rbx - 1]	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40031df	          0x4439e8	                           cmp eax, r13d	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40031e2	            0x7406	                            je 0x40031ea	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40031e4	        0x807d0000	                       cmp byte [rbp], 0	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40031e8	            0x75ce	                           jne 0x40031b8	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x40031ea	            0x89de	                            mov esi, ebx	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031ec	        0x4983c438	                           add r12, 0x38	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031f0	          0x83c301	                              add ebx, 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031f3	        0x4883c501	                              add rbp, 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031f7	          0x4139f6	                           cmp r14d, esi	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031fa	            0x7fe0	                            jg 0x40031dc	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x40031fc	      0x488b742408	                mov rsi, qword [rsp + 8]	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4003201	      0xbf00000000	                              mov edi, 0	       563	dir.c	FUNCTION_16	FOR_1
0x4003206	            0x31c0	                            xor eax, eax	       563	dir.c	FUNCTION_16	FOR_1
0x4003208	      0xe800000000	                          call 0x400320d	       563	dir.c	FUNCTION_16	FOR_1
0x400320d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       563	dir.c	FUNCTION_16	FOR_1
0x4003212	      0x8344242c01	               add dword [rsp + 0x2c], 1	       565	dir.c	FUNCTION_16	FOR_1
0x4003217	          0x448b30	                   mov r14d, dword [rax]	       565	dir.c	FUNCTION_16	FOR_1
0x400321a	        0x418d4701	                      lea eax, [r15 + 1]	       565	dir.c	FUNCTION_16	FOR_1
0x400321e	    0x488344241038	           add qword [rsp + 0x10], 0x38 	       565	dir.c	FUNCTION_16	FOR_1
0x4003224	        0x4983c701	                              add r15, 1	       565	dir.c	FUNCTION_16	FOR_1
0x4003228	          0x4139c6	                           cmp r14d, eax	       537	dir.c	FUNCTION_16	FOR_1
0x400322b	     0xf8f3fffffff	                            jg 0x4003170	       537	dir.c	FUNCTION_16	FOR_1
0x4003231	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       568	dir.c	FUNCTION_16
0x4003235	        0x4883c438	                           add rsp, 0x38	       568	dir.c	FUNCTION_16
0x4003239	              0x5b	                                 pop rbx	       568	dir.c	FUNCTION_16
0x400323a	              0x5d	                                 pop rbp	       568	dir.c	FUNCTION_16
0x400323b	            0x415c	                                 pop r12	       568	dir.c	FUNCTION_16
0x400323d	            0x415d	                                 pop r13	       568	dir.c	FUNCTION_16
0x400323f	            0x415e	                                 pop r14	       568	dir.c	FUNCTION_16
0x4003241	            0x415f	                                 pop r15	       568	dir.c	FUNCTION_16
0x4003243	              0xc3	                                     ret	       568	dir.c	FUNCTION_16
0x4003244	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       568	dir.c	FUNCTION_16
0x4003249	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       568	dir.c	FUNCTION_16
0x400324e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       568	dir.c	FUNCTION_16
0x4003252	      0x488b440808	         mov rax, qword [rax + rcx + 8] 	       568	dir.c	FUNCTION_16
0x4003257	      0x4889442408	                mov qword [rsp + 8], rax	       568	dir.c	FUNCTION_16
0x400325c	          0x4889c6	                            mov rsi, rax	       568	dir.c	FUNCTION_16
0x400325f	            0xeba0	                           jmp 0x4003201	       568	dir.c	FUNCTION_16
0x4003261	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       536	dir.c	FUNCTION_16
0x4003269	            0xebc6	                           jmp 0x4003231	       567	dir.c	FUNCTION_16
dir_add_ignored	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2:DO,0	85
0x4004e30	            0x4156	                                push r14	      1351	dir.c	FUNCTION_45
0x4004e32	            0x4155	                                push r13	      1351	dir.c	FUNCTION_45
0x4004e34	            0x4154	                                push r12	      1351	dir.c	FUNCTION_45
0x4004e36	          0x4989d4	                            mov r12, rdx	      1351	dir.c	FUNCTION_45
0x4004e39	              0x55	                                push rbp	      1351	dir.c	FUNCTION_45
0x4004e3a	              0x53	                                push rbx	      1351	dir.c	FUNCTION_45
0x4004e3b	            0x89ca	                            mov edx, ecx	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x4004e3d	          0x4889fb	                            mov rbx, rdi	      1351	dir.c	FUNCTION_45
0x4004e40	          0x4889f7	                            mov rdi, rsi	      1351	dir.c	FUNCTION_45
0x4004e43	          0x4c89e6	                            mov rsi, r12	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x4004e46	            0x89cd	                            mov ebp, ecx	      1351	dir.c	FUNCTION_45
0x4004e48	      0xe800000000	                          call 0x4004e4d	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x4004e4d	            0x85c0	                           test eax, eax	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x4004e4f	     0xf84ab000000	                            je 0x4004f00	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x4004e55	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	      1355	dir.c	FUNCTION_45
0x4004e59	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1355	dir.c	FUNCTION_45
0x4004e5c	            0x39c1	                            cmp ecx, eax	      1355	dir.c	FUNCTION_45
0x4004e5e	     0xf8c94000000	                            jl 0x4004ef8	      1355	dir.c	FUNCTION_45
0x4004e64	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1355	dir.c	FUNCTION_45
0x4004e68	            0x89c6	                            mov esi, eax	      1355	dir.c	FUNCTION_45
0x4004e6a	          0xc1ee1f	                           shr esi, 0x1f	      1355	dir.c	FUNCTION_45
0x4004e6d	             0x1c6	                            add esi, eax	      1355	dir.c	FUNCTION_45
0x4004e6f	          0x8d4101	                      lea eax, [rcx + 1]	      1355	dir.c	FUNCTION_45
0x4004e72	            0xd1fe	                              sar esi, 1	      1355	dir.c	FUNCTION_45
0x4004e74	            0x39f1	                            cmp ecx, esi	      1355	dir.c	FUNCTION_45
0x4004e76	           0xf4df0	                         cmovge esi, eax	      1355	dir.c	FUNCTION_45
0x4004e79	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_161	IF_1
0x4004e83	          0x4863d6	                         movsxd rdx, esi	      1355	dir.c	FUNCTION_45
0x4004e86	          0x89730c	              mov dword [rbx + 0xc], esi	      1355	dir.c	FUNCTION_45
0x4004e89	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_161	IF_1
0x4004e8c	     0xf87a2000000	                            ja 0x4004f34	       795	git-compat-util.h	FUNCTION_161	IF_1
0x4004e92	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1355	dir.c	FUNCTION_45
0x4004e96	    0x488d34d50000	                        lea rsi, [rdx*8]	      1355	dir.c	FUNCTION_45
0x4004e9e	      0xe800000000	                          call 0x4004ea3	      1355	dir.c	FUNCTION_45
0x4004ea3	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	      1355	dir.c	FUNCTION_45
0x4004ea7	        0x48894320	             mov qword [rbx + 0x20], rax	      1355	dir.c	FUNCTION_45
0x4004eab	          0x8d5101	                      lea edx, [rcx + 1]	      1356	dir.c	FUNCTION_45	CALL_2
0x4004eae	          0x4c63ed	                         movsxd r13, ebp	      1332	dir.c	FUNCTION_43
0x4004eb1	        0x4c8d34c8	                  lea r14, [rax + rcx*8]	      1356	dir.c	FUNCTION_45	CALL_2
0x4004eb5	        0x4983fdfb	             cmp r13, 0xfffffffffffffffb	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4004eb9	          0x895308	                mov dword [rbx + 8], edx	      1356	dir.c	FUNCTION_45	CALL_2
0x4004ebc	            0x774d	                            ja 0x4004f0b	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4004ebe	            0x745f	                            je 0x4004f1f	       785	git-compat-util.h	FUNCTION_160	IF_1
0x4004ec0	        0x498d7505	                      lea rsi, [r13 + 5]	      1332	dir.c	FUNCTION_43
0x4004ec4	      0xbf01000000	                              mov edi, 1	      1332	dir.c	FUNCTION_43
0x4004ec9	      0xe800000000	                          call 0x4004ece	      1332	dir.c	FUNCTION_43
0x4004ece	        0x488d7804	                      lea rdi, [rax + 4]	        53	string3.h	FUNCTION_130	CALL_3
0x4004ed2	          0x4889c3	                            mov rbx, rax	      1332	dir.c	FUNCTION_43
0x4004ed5	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_130	CALL_3
0x4004ed8	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_130	CALL_3
0x4004edb	      0xe800000000	                          call 0x4004ee0	        53	string3.h	FUNCTION_130	CALL_3
0x4004ee0	            0x892b	                    mov dword [rbx], ebp	      1333	dir.c	FUNCTION_43
0x4004ee2	          0x4889d8	                            mov rax, rbx	      1356	dir.c	FUNCTION_45	CALL_2
0x4004ee5	          0x49891e	                    mov qword [r14], rbx	      1356	dir.c	FUNCTION_45	CALL_2
0x4004ee8	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x4004ee9	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x4004eea	            0x415c	                                 pop r12	      1357	dir.c	FUNCTION_45
0x4004eec	            0x415d	                                 pop r13	      1357	dir.c	FUNCTION_45
0x4004eee	            0x415e	                                 pop r14	      1357	dir.c	FUNCTION_45
0x4004ef0	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
0x4004ef1	     0xf1f80000000	                         nop dword [rax]	      1357	dir.c	FUNCTION_45
0x4004ef8	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1357	dir.c	FUNCTION_45
0x4004efc	            0xebad	                           jmp 0x4004eab	      1357	dir.c	FUNCTION_45
0x4004efe	            0x6690	                                     nop	      1357	dir.c	FUNCTION_45
0x4004f00	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x4004f01	            0x31c0	                            xor eax, eax	      1353	dir.c	FUNCTION_45	IF_1
0x4004f03	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x4004f04	            0x415c	                                 pop r12	      1357	dir.c	FUNCTION_45
0x4004f06	            0x415d	                                 pop r13	      1357	dir.c	FUNCTION_45
0x4004f08	            0x415e	                                 pop r14	      1357	dir.c	FUNCTION_45
0x4004f0a	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
0x4004f0b	          0x4c89ea	                            mov rdx, r13	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f0e	      0xbe04000000	                              mov esi, 4	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f13	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f18	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f1a	      0xe800000000	                          call 0x4004f1f	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f1f	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f24	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f28	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f2d	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f2f	      0xe800000000	                          call 0x4004f34	       786	git-compat-util.h	FUNCTION_160	IF_1	CALL_1
0x4004f34	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x4004f39	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x4004f3e	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
0x4004f40	      0xe800000000	                          call 0x4004f45	       796	git-compat-util.h	FUNCTION_161	IF_1	CALL_1
match_pathspec	FOR,0:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,1:CALL,2:DO,0	47
0x4002b60	            0x4157	                                push r15	       501	dir.c	FUNCTION_14
0x4002b62	            0x4156	                                push r14	       501	dir.c	FUNCTION_14
0x4002b64	          0x4d89c7	                             mov r15, r8	       501	dir.c	FUNCTION_14
0x4002b67	            0x4155	                                push r13	       501	dir.c	FUNCTION_14
0x4002b69	            0x4154	                                push r12	       501	dir.c	FUNCTION_14
0x4002b6b	          0x4989fc	                            mov r12, rdi	       501	dir.c	FUNCTION_14
0x4002b6e	              0x55	                                push rbp	       501	dir.c	FUNCTION_14
0x4002b6f	              0x53	                                push rbx	       501	dir.c	FUNCTION_14
0x4002b70	          0x4189d5	                           mov r13d, edx	       501	dir.c	FUNCTION_14
0x4002b73	          0x4189ce	                           mov r14d, ecx	       501	dir.c	FUNCTION_14
0x4002b76	        0x4883ec18	                           sub rsp, 0x18	       501	dir.c	FUNCTION_14
0x4002b7a	        0x4183f901	                              cmp r9d, 1	       503	dir.c	FUNCTION_14
0x4002b7e	            0x19db	                            sbb ebx, ebx	       503	dir.c	FUNCTION_14
0x4002b80	      0x4889742408	                mov qword [rsp + 8], rsi	       501	dir.c	FUNCTION_14
0x4002b85	          0x83e3fe	                     and ebx, 0xfffffffe	       503	dir.c	FUNCTION_14
0x4002b88	          0x83c303	                              add ebx, 3	       503	dir.c	FUNCTION_14
0x4002b8b	        0x4183f901	                              cmp r9d, 1	       503	dir.c	FUNCTION_14
0x4002b8f	          0x4519c9	                            sbb r9d, r9d	       503	dir.c	FUNCTION_14
0x4002b92	          0x41f7d1	                                 not r9d	       503	dir.c	FUNCTION_14
0x4002b95	        0x4183e102	                              and r9d, 2	       504	dir.c	FUNCTION_14	CALL_1
0x4002b99	      0xe822f9ffff	              call sym.do_match_pathspec	       504	dir.c	FUNCTION_14	CALL_1
0x4002b9e	    0x41f644240820	               test byte [r12 + 8], 0x20	       506	dir.c	FUNCTION_14	IF_1
0x4002ba4	            0x89c5	                            mov ebp, eax	       504	dir.c	FUNCTION_14	CALL_1
0x4002ba6	            0x7406	                            je 0x4002bae	       506	dir.c	FUNCTION_14	IF_1
0x4002ba8	            0x85c0	                           test eax, eax	       506	dir.c	FUNCTION_14	IF_1
0x4002baa	            0x7514	                           jne 0x4002bc0	       506	dir.c	FUNCTION_14	IF_1
0x4002bac	            0x31ed	                            xor ebp, ebp	       503	dir.c	FUNCTION_14
0x4002bae	        0x4883c418	                           add rsp, 0x18	       512	dir.c	FUNCTION_14
0x4002bb2	            0x89e8	                            mov eax, ebp	       512	dir.c	FUNCTION_14
0x4002bb4	              0x5b	                                 pop rbx	       512	dir.c	FUNCTION_14
0x4002bb5	              0x5d	                                 pop rbp	       512	dir.c	FUNCTION_14
0x4002bb6	            0x415c	                                 pop r12	       512	dir.c	FUNCTION_14
0x4002bb8	            0x415d	                                 pop r13	       512	dir.c	FUNCTION_14
0x4002bba	            0x415e	                                 pop r14	       512	dir.c	FUNCTION_14
0x4002bbc	            0x415f	                                 pop r15	       512	dir.c	FUNCTION_14
0x4002bbe	              0xc3	                                     ret	       512	dir.c	FUNCTION_14
0x4002bbf	              0x90	                                     nop	       512	dir.c	FUNCTION_14
0x4002bc0	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	dir.c	FUNCTION_14	CALL_2
0x4002bc5	          0x4189d9	                            mov r9d, ebx	       508	dir.c	FUNCTION_14	CALL_2
0x4002bc8	          0x4d89f8	                             mov r8, r15	       508	dir.c	FUNCTION_14	CALL_2
0x4002bcb	          0x4489f1	                           mov ecx, r14d	       508	dir.c	FUNCTION_14	CALL_2
0x4002bce	          0x4489ea	                           mov edx, r13d	       508	dir.c	FUNCTION_14	CALL_2
0x4002bd1	          0x4c89e7	                            mov rdi, r12	       508	dir.c	FUNCTION_14	CALL_2
0x4002bd4	      0xe8e7f8ffff	              call sym.do_match_pathspec	       508	dir.c	FUNCTION_14	CALL_2
0x4002bd9	            0x85c0	                           test eax, eax	       511	dir.c	FUNCTION_14
0x4002bdb	            0x74d1	                            je 0x4002bae	       511	dir.c	FUNCTION_14
0x4002bdd	            0xebcd	                           jmp 0x4002bac	       511	dir.c	FUNCTION_14
add_excludes_from_buffer	FOR,1:WHILE,0:SWITCH,0:functions,0:ELSE,0:IF,3:CALL,3:DO,0	104
0x40035e0	            0x4157	                                push r15	       873	dir.c	FUNCTION_29
0x40035e2	            0x4156	                                push r14	       873	dir.c	FUNCTION_29
0x40035e4	          0x4989f6	                            mov r14, rsi	       873	dir.c	FUNCTION_29
0x40035e7	            0x4155	                                push r13	       873	dir.c	FUNCTION_29
0x40035e9	            0x4154	                                push r12	       873	dir.c	FUNCTION_29
0x40035eb	          0x4189cc	                           mov r12d, ecx	       873	dir.c	FUNCTION_29
0x40035ee	              0x55	                                push rbp	       873	dir.c	FUNCTION_29
0x40035ef	              0x53	                                push rbx	       873	dir.c	FUNCTION_29
0x40035f0	          0x4889d5	                            mov rbp, rdx	       873	dir.c	FUNCTION_29
0x40035f3	          0x4c89c3	                             mov rbx, r8	       873	dir.c	FUNCTION_29
0x40035f6	        0x4883ec18	                           sub rsp, 0x18	       873	dir.c	FUNCTION_29
0x40035fa	        0x49897808	                 mov qword [r8 + 8], rdi	       877	dir.c	FUNCTION_29
0x40035fe	      0x48897c2408	                mov qword [rsp + 8], rdi	       873	dir.c	FUNCTION_29
0x4003603	      0x488d7c2408	                      lea rdi, [rsp + 8]	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4003608	      0xe800000000	                          call 0x400360d	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400360d	            0x85c0	                           test eax, eax	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400360f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       880	dir.c	FUNCTION_29	IF_1
0x4003614	            0x740a	                            je 0x4003620	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4003616	          0x4889f8	                            mov rax, rdi	       880	dir.c	FUNCTION_29	IF_1
0x4003619	        0x482b4308	                sub rax, qword [rbx + 8]	       880	dir.c	FUNCTION_29	IF_1
0x400361d	          0x4929c6	                            sub r14, rax	       880	dir.c	FUNCTION_29	IF_1
0x4003620	          0x4d85f6	                           test r14, r14	       884	dir.c	FUNCTION_29	FOR_1
0x4003623	     0xf84bd000000	                            je 0x40036e6	       884	dir.c	FUNCTION_29	FOR_1
0x4003629	          0x4531ed	                          xor r13d, r13d	       884	dir.c	FUNCTION_29	FOR_1
0x400362c	    0x41bf01000000	                             mov r15d, 1	       884	dir.c	FUNCTION_29	FOR_1
0x4003632	          0x4889fe	                            mov rsi, rdi	       884	dir.c	FUNCTION_29	FOR_1
0x4003635	            0xeb15	                           jmp 0x400364c	       884	dir.c	FUNCTION_29	FOR_1
0x4003637	    0x660f1f840000	                    nop word [rax + rax]	       884	dir.c	FUNCTION_29	FOR_1
0x4003640	          0x4939c6	                            cmp r14, rax	       884	dir.c	FUNCTION_29	FOR_1
0x4003643	          0x4989c5	                            mov r13, rax	       884	dir.c	FUNCTION_29	FOR_1
0x4003646	     0xf849a000000	                            je 0x40036e6	       884	dir.c	FUNCTION_29	FOR_1
0x400364c	        0x4a8d142e	                    lea rdx, [rsi + r13]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4003650	          0x4489e9	                           mov ecx, r13d	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4003653	        0x498d4501	                      lea rax, [r13 + 1]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4003657	          0x803a0a	                     cmp byte [rdx], 0xa	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400365a	            0x75e4	                           jne 0x4003640	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400365c	          0x4839fa	                            cmp rdx, rdi	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400365f	            0x746d	                            je 0x40036ce	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003661	          0x803f23	                    cmp byte [rdi], 0x23	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003664	            0x7468	                            je 0x40036ce	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003666	          0x4585ed	                         test r13d, r13d	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003669	     0xf84b1000000	                            je 0x4003720	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400366f	            0x31c0	                            xor eax, eax	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003671	    0x42807c2eff0d	          cmp byte [rsi + r13 - 1], 0xd 	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003677	           0xf94c0	                                 sete al	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400367a	            0x29c1	                            sub ecx, eax	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400367c	          0x4863c9	                         movsxd rcx, ecx	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x400367f	        0xc6040e00	                 mov byte [rsi + rcx], 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003683	           0xfb607	                   movzx eax, byte [rdi]	       691	dir.c	FUNCTION_23	FOR_1
0x4003686	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x4003688	            0x742e	                            je 0x40036b8	       691	dir.c	FUNCTION_23	FOR_1
0x400368a	          0x4889fa	                            mov rdx, rdi	       691	dir.c	FUNCTION_23	FOR_1
0x400368d	            0x31c9	                            xor ecx, ecx	       691	dir.c	FUNCTION_23	FOR_1
0x400368f	              0x90	                                     nop	       691	dir.c	FUNCTION_23	FOR_1
0x4003690	            0x3c20	                            cmp al, 0x20	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003692	            0x7474	                            je 0x4003708	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003694	            0x3c5c	                            cmp al, 0x5c	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003696	            0x7568	                           jne 0x4003700	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003698	        0x807a0100	                   cmp byte [rdx + 1], 0	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x400369c	        0x488d4201	                      lea rax, [rdx + 1]	       698	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40036a0	            0x7416	                            je 0x40036b8	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x40036a2	            0x31c9	                            xor ecx, ecx	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40036a4	        0x488d5001	                      lea rdx, [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x40036a8	         0xfb64001	               movzx eax, byte [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x40036ac	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x40036ae	            0x75e0	                           jne 0x4003690	       691	dir.c	FUNCTION_23	FOR_1
0x40036b0	          0x4885c9	                           test rcx, rcx	       706	dir.c	FUNCTION_23	IF_3
0x40036b3	            0x7403	                            je 0x40036b8	       706	dir.c	FUNCTION_23	IF_3
0x40036b5	          0xc60100	                       mov byte [rcx], 0	       707	dir.c	FUNCTION_23	IF_3
0x40036b8	          0x4889ee	                            mov rsi, rbp	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036bb	          0x4589f8	                           mov r8d, r15d	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036be	          0x4889d9	                            mov rcx, rbx	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036c1	          0x4489e2	                           mov edx, r12d	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036c4	      0xe800000000	                          call 0x40036c9	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036c9	      0x488b742408	                mov rsi, qword [rsp + 8]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x40036ce	        0x498d4501	                      lea rax, [r13 + 1]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x40036d2	        0x4183c701	                             add r15d, 1	       891	dir.c	FUNCTION_29	FOR_1	IF_2
0x40036d6	          0x4939c6	                            cmp r14, rax	       884	dir.c	FUNCTION_29	FOR_1
0x40036d9	        0x488d3c06	                    lea rdi, [rsi + rax]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x40036dd	          0x4989c5	                            mov r13, rax	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x40036e0	     0xf8566ffffff	                           jne 0x400364c	       884	dir.c	FUNCTION_29	FOR_1
0x40036e6	        0x4883c418	                           add rsp, 0x18	       896	dir.c	FUNCTION_29
0x40036ea	            0x31c0	                            xor eax, eax	       896	dir.c	FUNCTION_29
0x40036ec	              0x5b	                                 pop rbx	       896	dir.c	FUNCTION_29
0x40036ed	              0x5d	                                 pop rbp	       896	dir.c	FUNCTION_29
0x40036ee	            0x415c	                                 pop r12	       896	dir.c	FUNCTION_29
0x40036f0	            0x415d	                                 pop r13	       896	dir.c	FUNCTION_29
0x40036f2	            0x415e	                                 pop r14	       896	dir.c	FUNCTION_29
0x40036f4	            0x415f	                                 pop r15	       896	dir.c	FUNCTION_29
0x40036f6	              0xc3	                                     ret	       896	dir.c	FUNCTION_29
0x40036f7	    0x660f1f840000	                    nop word [rax + rax]	       896	dir.c	FUNCTION_29
0x4003700	          0x4889d0	                            mov rax, rdx	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003703	            0xeb9d	                           jmp 0x40036a2	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003705	           0xf1f00	                         nop dword [rax]	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4003708	          0x4885c9	                           test rcx, rcx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x400370b	            0x740b	                            je 0x4003718	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x400370d	          0x4889d0	                            mov rax, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4003710	            0xeb92	                           jmp 0x40036a4	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4003712	    0x660f1f440000	                    nop word [rax + rax]	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4003718	          0x4889d1	                            mov rcx, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x400371b	          0x4889d0	                            mov rax, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x400371e	            0xeb84	                           jmp 0x40036a4	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x4003720	            0x31c0	                            xor eax, eax	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x4003722	      0xe953ffffff	                           jmp 0x400367a	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
is_empty_dir	FOR,0:WHILE,1:SWITCH,0:functions,0:ELSE,0:IF,2:CALL,4:DO,0	43
0x40071b0	              0x55	                                push rbp	      2396	dir.c	FUNCTION_77
0x40071b1	              0x53	                                push rbx	      2396	dir.c	FUNCTION_77
0x40071b2	        0x4883ec08	                              sub rsp, 8	      2396	dir.c	FUNCTION_77
0x40071b6	      0xe800000000	                          call 0x40071bb	      2397	dir.c	FUNCTION_77	CALL_1
0x40071bb	          0x4885c0	                           test rax, rax	      2401	dir.c	FUNCTION_77	IF_1
0x40071be	          0x4889c3	                            mov rbx, rax	      2397	dir.c	FUNCTION_77	CALL_1
0x40071c1	            0x745d	                            je 0x4007220	      2401	dir.c	FUNCTION_77	IF_1
0x40071c3	       0xf1f440000	                   nop dword [rax + rax]	      2401	dir.c	FUNCTION_77	IF_1
0x40071c8	          0x4889df	                            mov rdi, rbx	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x40071cb	      0xe800000000	                          call 0x40071d0	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x40071d0	          0x4885c0	                           test rax, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x40071d3	            0x7443	                            je 0x4007218	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x40071d5	        0x8078132e	            cmp byte [rax + 0x13], 0x2e 	       277	dir.h	FUNCTION_195
0x40071d9	            0x750d	                           jne 0x40071e8	       277	dir.h	FUNCTION_195
0x40071db	         0xfb65014	           movzx edx, byte [rax + 0x14] 	       278	dir.h	FUNCTION_195
0x40071df	            0x84d2	                             test dl, dl	       277	dir.h	FUNCTION_195
0x40071e1	            0x74e5	                            je 0x40071c8	       277	dir.h	FUNCTION_195
0x40071e3	          0x80fa2e	                            cmp dl, 0x2e	       278	dir.h	FUNCTION_195
0x40071e6	            0x7418	                            je 0x4007200	       278	dir.h	FUNCTION_195
0x40071e8	            0x31ed	                            xor ebp, ebp	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x40071ea	          0x4889df	                            mov rdi, rbx	      2410	dir.c	FUNCTION_77	CALL_4
0x40071ed	      0xe800000000	                          call 0x40071f2	      2410	dir.c	FUNCTION_77	CALL_4
0x40071f2	        0x4883c408	                              add rsp, 8	      2412	dir.c	FUNCTION_77
0x40071f6	            0x89e8	                            mov eax, ebp	      2411	dir.c	FUNCTION_77
0x40071f8	              0x5b	                                 pop rbx	      2412	dir.c	FUNCTION_77
0x40071f9	              0x5d	                                 pop rbp	      2412	dir.c	FUNCTION_77
0x40071fa	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
0x40071fb	       0xf1f440000	                   nop dword [rax + rax]	      2412	dir.c	FUNCTION_77
0x4007200	        0x80781500	                cmp byte [rax + 0x15], 0	       279	dir.h	FUNCTION_195
0x4007204	            0x75e2	                           jne 0x40071e8	       279	dir.h	FUNCTION_195
0x4007206	          0x4889df	                            mov rdi, rbx	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4007209	      0xe800000000	                          call 0x400720e	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x400720e	          0x4885c0	                           test rax, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4007211	            0x75c2	                           jne 0x40071d5	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4007213	       0xf1f440000	                   nop dword [rax + rax]	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4007218	      0xbd01000000	                              mov ebp, 1	      2399	dir.c	FUNCTION_77
0x400721d	            0xebcb	                           jmp 0x40071ea	      2399	dir.c	FUNCTION_77
0x400721f	              0x90	                                     nop	      2399	dir.c	FUNCTION_77
0x4007220	        0x4883c408	                              add rsp, 8	      2412	dir.c	FUNCTION_77
0x4007224	            0x31c0	                            xor eax, eax	      2402	dir.c	FUNCTION_77	IF_1
0x4007226	              0x5b	                                 pop rbx	      2412	dir.c	FUNCTION_77
0x4007227	              0x5d	                                 pop rbp	      2412	dir.c	FUNCTION_77
0x4007228	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
