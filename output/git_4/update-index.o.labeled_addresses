add_cacheinfo	DO,0:FOR,0:WHILE,0:IF,3:CALL,8:functions,0:SWITCH,0:ELSE,0	105
0x40008a0	            0x4157	                                push r15	       405	update-index.c	FUNCTION_17
0x40008a2	            0x4156	                                push r14	       405	update-index.c	FUNCTION_17
0x40008a4	          0x4989f7	                            mov r15, rsi	       405	update-index.c	FUNCTION_17
0x40008a7	            0x4155	                                push r13	       405	update-index.c	FUNCTION_17
0x40008a9	            0x4154	                                push r12	       405	update-index.c	FUNCTION_17
0x40008ab	          0x4189fd	                           mov r13d, edi	       405	update-index.c	FUNCTION_17
0x40008ae	              0x55	                                push rbp	       405	update-index.c	FUNCTION_17
0x40008af	              0x53	                                push rbx	       405	update-index.c	FUNCTION_17
0x40008b0	          0x4889d7	                            mov rdi, rdx	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x40008b3	          0x4989d4	                            mov r12, rdx	       405	update-index.c	FUNCTION_17
0x40008b6	            0x89cd	                            mov ebp, ecx	       405	update-index.c	FUNCTION_17
0x40008b8	        0x4883ec08	                              sub rsp, 8	       405	update-index.c	FUNCTION_17
0x40008bc	      0xe800000000	                          call 0x40008c1	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x40008c1	            0x85c0	                           test eax, eax	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x40008c3	     0xf840f010000	                            je 0x40009d8	       409	update-index.c	FUNCTION_17	IF_1	CALL_1
0x40008c9	          0x4c89e7	                            mov rdi, r12	       412	update-index.c	FUNCTION_17	CALL_2
0x40008cc	      0xe800000000	                          call 0x40008d1	       412	update-index.c	FUNCTION_17	CALL_2
0x40008d1	          0x8d7059	                   lea esi, [rax + 0x59]	       414	update-index.c	FUNCTION_17	CALL_3
0x40008d4	      0xbf01000000	                              mov edi, 1	       414	update-index.c	FUNCTION_17	CALL_3
0x40008d9	          0x4989c6	                            mov r14, rax	       412	update-index.c	FUNCTION_17	CALL_2
0x40008dc	          0x4863f6	                         movsxd rsi, esi	       414	update-index.c	FUNCTION_17	CALL_3
0x40008df	      0xe800000000	                          call 0x40008e4	       414	update-index.c	FUNCTION_17	CALL_3
0x40008e4	          0x498b17	                    mov rdx, qword [r15]	        53	string3.h	FUNCTION_55	CALL_3
0x40008e7	        0x488d7858	                   lea rdi, [rax + 0x58]	        53	string3.h	FUNCTION_55	CALL_3
0x40008eb	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_55	CALL_3
0x40008ee	          0x4889c3	                            mov rbx, rax	       414	update-index.c	FUNCTION_17	CALL_3
0x40008f1	        0x48895044	             mov qword [rax + 0x44], rdx	        53	string3.h	FUNCTION_55	CALL_3
0x40008f5	        0x498b5708	                mov rdx, qword [r15 + 8]	        53	string3.h	FUNCTION_55	CALL_3
0x40008f9	        0x4889504c	             mov qword [rax + 0x4c], rdx	        53	string3.h	FUNCTION_55	CALL_3
0x40008fd	        0x418b5710	            mov edx, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_55	CALL_3
0x4000901	          0x895054	             mov dword [rax + 0x54], edx	        53	string3.h	FUNCTION_55	CALL_3
0x4000904	          0x4963d6	                        movsxd rdx, r14d	        53	string3.h	FUNCTION_55	CALL_3
0x4000907	      0xe800000000	                          call 0x400090c	        53	string3.h	FUNCTION_55	CALL_3
0x400090c	          0x4489e8	                           mov eax, r13d	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x400090f	            0x89e9	                            mov ecx, ebp	       242	cache.h	FUNCTION_68
0x4000911	        0x4489733c	            mov dword [rbx + 0x3c], r14d	       419	update-index.c	FUNCTION_17
0x4000915	      0x2500f00000	                         and eax, 0xf000	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x400091a	          0xc1e10c	                            shl ecx, 0xc	       242	cache.h	FUNCTION_68
0x400091d	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x4000922	          0x894b38	             mov dword [rbx + 0x38], ecx	       418	update-index.c	FUNCTION_17	CALL_6
0x4000925	            0x7428	                            je 0x400094f	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x4000927	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x400092c	     0xf848e000000	                            je 0x40009c0	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x4000932	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x4000937	     0xf8483000000	                            je 0x40009c0	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x400093d	        0x4183e540	                          and r13d, 0x40	       260	cache.h	FUNCTION_69
0x4000941	        0x4183fd01	                             cmp r13d, 1	       260	cache.h	FUNCTION_69
0x4000945	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_69
0x4000947	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_69
0x400094a	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_69
0x400094f	    0x8b3500000000	            mov esi, dword [0x04000955] 	       421	update-index.c	FUNCTION_17	IF_2
0x4000955	          0x894334	             mov dword [rbx + 0x34], eax	       420	update-index.c	FUNCTION_17	CALL_7
0x4000958	            0x85f6	                           test esi, esi	       421	update-index.c	FUNCTION_17	IF_2
0x400095a	            0x7554	                           jne 0x40009b0	       421	update-index.c	FUNCTION_17	IF_2
0x400095c	    0x8b1500000000	            mov edx, dword [0x04000962] 	       423	update-index.c	FUNCTION_17
0x4000962	            0x31c0	                            xor eax, eax	       423	update-index.c	FUNCTION_17
0x4000964	      0xb902000000	                              mov ecx, 2	       424	update-index.c	FUNCTION_17
0x4000969	          0x4889de	                            mov rsi, rbx	       425	update-index.c	FUNCTION_17	IF_3
0x400096c	      0xbf00000000	                              mov edi, 0	       425	update-index.c	FUNCTION_17	IF_3
0x4000971	            0x85d2	                           test edx, edx	       423	update-index.c	FUNCTION_17
0x4000973	    0x8b1500000000	            mov edx, dword [0x04000979] 	       424	update-index.c	FUNCTION_17
0x4000979	           0xf95c0	                                setne al	       423	update-index.c	FUNCTION_17
0x400097c	            0x85d2	                           test edx, edx	       424	update-index.c	FUNCTION_17
0x400097e	           0xf45d1	                         cmovne edx, ecx	       424	update-index.c	FUNCTION_17
0x4000981	             0x9c2	                             or edx, eax	       425	update-index.c	FUNCTION_17	IF_3
0x4000983	      0xe800000000	                          call 0x4000988	       425	update-index.c	FUNCTION_17	IF_3
0x4000988	            0x85c0	                           test eax, eax	       425	update-index.c	FUNCTION_17	IF_3
0x400098a	            0x89c3	                            mov ebx, eax	       425	update-index.c	FUNCTION_17	IF_3
0x400098c	          0x4c89e6	                            mov rsi, r12	       426	update-index.c	FUNCTION_17	IF_3
0x400098f	            0x755f	                           jne 0x40009f0	       425	update-index.c	FUNCTION_17	IF_3
0x4000991	      0xbf00000000	                              mov edi, 0	       428	update-index.c	FUNCTION_17	CALL_8
0x4000996	            0x31c0	                            xor eax, eax	       428	update-index.c	FUNCTION_17	CALL_8
0x4000998	      0xe813feffff	                         call sym.report	       428	update-index.c	FUNCTION_17	CALL_8
0x400099d	        0x4883c408	                              add rsp, 8	       430	update-index.c	FUNCTION_17
0x40009a1	            0x89d8	                            mov eax, ebx	       430	update-index.c	FUNCTION_17
0x40009a3	              0x5b	                                 pop rbx	       430	update-index.c	FUNCTION_17
0x40009a4	              0x5d	                                 pop rbp	       430	update-index.c	FUNCTION_17
0x40009a5	            0x415c	                                 pop r12	       430	update-index.c	FUNCTION_17
0x40009a7	            0x415d	                                 pop r13	       430	update-index.c	FUNCTION_17
0x40009a9	            0x415e	                                 pop r14	       430	update-index.c	FUNCTION_17
0x40009ab	            0x415f	                                 pop r15	       430	update-index.c	FUNCTION_17
0x40009ad	              0xc3	                                     ret	       430	update-index.c	FUNCTION_17
0x40009ae	            0x6690	                                     nop	       430	update-index.c	FUNCTION_17
0x40009b0	          0x80cd80	                             or ch, 0x80	       422	update-index.c	FUNCTION_17	IF_2
0x40009b3	          0x894b38	             mov dword [rbx + 0x38], ecx	       422	update-index.c	FUNCTION_17	IF_2
0x40009b6	            0xeba4	                           jmp 0x400095c	       422	update-index.c	FUNCTION_17	IF_2
0x40009b8	     0xf1f84000000	                   nop dword [rax + rax]	       422	update-index.c	FUNCTION_17	IF_2
0x40009c0	    0x8b3500000000	            mov esi, dword [0x040009c6] 	       421	update-index.c	FUNCTION_17	IF_2
0x40009c6	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_69	IF_2
0x40009cb	          0x894334	             mov dword [rbx + 0x34], eax	       420	update-index.c	FUNCTION_17	CALL_7
0x40009ce	            0x85f6	                           test esi, esi	       421	update-index.c	FUNCTION_17	IF_2
0x40009d0	            0x748a	                            je 0x400095c	       421	update-index.c	FUNCTION_17	IF_2
0x40009d2	            0xebdc	                           jmp 0x40009b0	       421	update-index.c	FUNCTION_17	IF_2
0x40009d4	         0xf1f4000	                         nop dword [rax]	       421	update-index.c	FUNCTION_17	IF_2
0x40009d8	          0x4c89e6	                            mov rsi, r12	       410	update-index.c	FUNCTION_17	IF_1
0x40009db	      0xbf00000000	                              mov edi, 0	       410	update-index.c	FUNCTION_17	IF_1
0x40009e0	      0xbbffffffff	                     mov ebx, 0xffffffff	       410	update-index.c	FUNCTION_17	IF_1
0x40009e5	      0xe800000000	                          call 0x40009ea	       410	update-index.c	FUNCTION_17	IF_1
0x40009ea	            0xebb1	                           jmp 0x400099d	       410	update-index.c	FUNCTION_17	IF_1
0x40009ec	         0xf1f4000	                         nop dword [rax]	       410	update-index.c	FUNCTION_17	IF_1
0x40009f0	      0xbf00000000	                              mov edi, 0	       426	update-index.c	FUNCTION_17	IF_3
0x40009f5	            0x31c0	                            xor eax, eax	       426	update-index.c	FUNCTION_17	IF_3
0x40009f7	      0xbbffffffff	                     mov ebx, 0xffffffff	       426	update-index.c	FUNCTION_17	IF_3
0x40009fc	      0xe800000000	                          call 0x4000a01	       426	update-index.c	FUNCTION_17	IF_3
0x4000a01	            0xeb9a	                           jmp 0x400099d	       426	update-index.c	FUNCTION_17	IF_3
mark_ce_flags	DO,0:FOR,0:WHILE,0:IF,2:CALL,3:functions,0:SWITCH,0:ELSE,1	63
0x4000c70	            0x4156	                                push r14	       229	update-index.c	FUNCTION_11
0x4000c72	            0x4155	                                push r13	       229	update-index.c	FUNCTION_11
0x4000c74	          0x4189d5	                           mov r13d, edx	       229	update-index.c	FUNCTION_11
0x4000c77	            0x4154	                                push r12	       229	update-index.c	FUNCTION_11
0x4000c79	              0x55	                                push rbp	       229	update-index.c	FUNCTION_11
0x4000c7a	          0x4989fc	                            mov r12, rdi	       229	update-index.c	FUNCTION_11
0x4000c7d	              0x53	                                push rbx	       229	update-index.c	FUNCTION_11
0x4000c7e	            0x89f5	                            mov ebp, esi	       229	update-index.c	FUNCTION_11
0x4000c80	      0xe800000000	                          call 0x4000c85	       230	update-index.c	FUNCTION_11	CALL_1
0x4000c85	          0x4c89e6	                            mov rsi, r12	       231	update-index.c	FUNCTION_11
0x4000c88	            0x89c2	                            mov edx, eax	       231	update-index.c	FUNCTION_11
0x4000c8a	      0xbf00000000	                              mov edi, 0	       231	update-index.c	FUNCTION_11
0x4000c8f	      0xe800000000	                          call 0x4000c94	       231	update-index.c	FUNCTION_11
0x4000c94	            0x85c0	                           test eax, eax	       232	update-index.c	FUNCTION_11	IF_1
0x4000c96	     0xf88c4000000	                            js 0x4000d60	       232	update-index.c	FUNCTION_11	IF_1
0x4000c9c	    0x48833d000000	               cmp qword [0x04000ca4], 0	        66	fsmonitor.h	FUNCTION_95	IF_1
0x4000ca4	          0x4c63f0	                         movsxd r14, eax	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x4000ca7	    0x488b05000000	            mov rax, qword [0x04000cae] 	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x4000cae	        0x4e8b04f0	             mov r8, qword [rax + r14*8]	       233	update-index.c	FUNCTION_11	IF_1	CALL_2
0x4000cb2	            0x7467	                            je 0x4000d1b	        66	fsmonitor.h	FUNCTION_95	IF_1
0x4000cb4	    0x41816038ffff	       and dword [r8 + 0x38], 0xffdfffff	        67	fsmonitor.h	FUNCTION_95	IF_1
0x4000cbc	        0x498d5858	                    lea rbx, [r8 + 0x58]	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x4000cc0	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x4000cc5	      0xbf00000000	                              mov edi, 0	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x4000cca	          0x4889de	                            mov rsi, rbx	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x4000ccd	      0xe800000000	                          call 0x4000cd2	        68	fsmonitor.h	FUNCTION_95	IF_1	CALL_1
0x4000cd2	    0x48baffffffff	                 movabs rdx, 0x1ffffffff	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cdc	    0x482315000000	             and rdx, qword [0x04000ce3]	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000ce3	    0x48b800000000	                 movabs rax, 0x100000000	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000ced	          0x4839c2	                            cmp rdx, rax	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cf0	            0x741e	                            je 0x4000d10	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cf2	          0x4989d8	                             mov r8, rbx	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cf5	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cfa	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000cff	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d04	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d09	            0x31c0	                            xor eax, eax	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d0b	      0xe800000000	                          call 0x4000d10	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d10	    0x488b05000000	            mov rax, qword [0x04000d17] 	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d17	        0x4e8b04f0	             mov r8, qword [rax + r14*8]	        69	fsmonitor.h	FUNCTION_95	IF_1	CALL_2
0x4000d1b	          0x4585ed	                         test r13d, r13d	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000d1e	            0x7530	                           jne 0x4000d50	       234	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000d20	            0xf7d5	                                 not ebp	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000d22	        0x41236838	              and ebp, dword [r8 + 0x38]	       237	update-index.c	FUNCTION_11	IF_1	ELSE_1
0x4000d26	    0x81cd00000008	                    or ebp, section_end.	       238	update-index.c	FUNCTION_11	IF_1
0x4000d2c	          0x4c89e6	                            mov rsi, r12	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000d2f	      0xbf00000000	                              mov edi, 0	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000d34	        0x41896838	              mov dword [r8 + 0x38], ebp	       238	update-index.c	FUNCTION_11	IF_1
0x4000d38	      0xe800000000	                          call 0x4000d3d	       239	update-index.c	FUNCTION_11	IF_1	CALL_3
0x4000d3d	    0x830d00000000	                or dword [0x04000d44], 2	       240	update-index.c	FUNCTION_11	IF_1
0x4000d44	            0x31c0	                            xor eax, eax	       241	update-index.c	FUNCTION_11	IF_1
0x4000d46	              0x5b	                                 pop rbx	       244	update-index.c	FUNCTION_11
0x4000d47	              0x5d	                                 pop rbp	       244	update-index.c	FUNCTION_11
0x4000d48	            0x415c	                                 pop r12	       244	update-index.c	FUNCTION_11
0x4000d4a	            0x415d	                                 pop r13	       244	update-index.c	FUNCTION_11
0x4000d4c	            0x415e	                                 pop r14	       244	update-index.c	FUNCTION_11
0x4000d4e	              0xc3	                                     ret	       244	update-index.c	FUNCTION_11
0x4000d4f	              0x90	                                     nop	       244	update-index.c	FUNCTION_11
0x4000d50	        0x410b6838	               or ebp, dword [r8 + 0x38]	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000d54	            0xebd0	                           jmp 0x4000d26	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       235	update-index.c	FUNCTION_11	IF_1	IF_2
0x4000d60	      0xb8ffffffff	                     mov eax, 0xffffffff	       243	update-index.c	FUNCTION_11
0x4000d65	            0xebdf	                           jmp 0x4000d46	       243	update-index.c	FUNCTION_11
add_one_path	DO,0:FOR,0:WHILE,0:IF,3:CALL,8:functions,0:SWITCH,0:ELSE,0	134
0x40005a0	          0x4885ff	                           test rdi, rdi	       275	update-index.c	FUNCTION_14	IF_1
0x40005a3	            0x4156	                                push r14	       270	update-index.c	FUNCTION_14
0x40005a5	          0x4189d6	                           mov r14d, edx	       270	update-index.c	FUNCTION_14
0x40005a8	            0x4155	                                push r13	       270	update-index.c	FUNCTION_14
0x40005aa	          0x4989f5	                            mov r13, rsi	       270	update-index.c	FUNCTION_14
0x40005ad	            0x4154	                                push r12	       270	update-index.c	FUNCTION_14
0x40005af	          0x4989cc	                            mov r12, rcx	       270	update-index.c	FUNCTION_14
0x40005b2	              0x55	                                push rbp	       270	update-index.c	FUNCTION_14
0x40005b3	          0x4889fd	                            mov rbp, rdi	       270	update-index.c	FUNCTION_14
0x40005b6	              0x53	                                push rbx	       270	update-index.c	FUNCTION_14
0x40005b7	            0x740d	                            je 0x40005c6	       275	update-index.c	FUNCTION_14	IF_1
0x40005b9	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       275	update-index.c	FUNCTION_14	IF_1
0x40005c0	     0xf846a010000	                            je 0x4000730	       275	update-index.c	FUNCTION_14	IF_1
0x40005c6	        0x418d7659	                   lea esi, [r14 + 0x59]	       279	update-index.c	FUNCTION_14	CALL_1
0x40005ca	      0xbf01000000	                              mov edi, 1	       279	update-index.c	FUNCTION_14	CALL_1
0x40005cf	          0x4863f6	                         movsxd rsi, esi	       279	update-index.c	FUNCTION_14	CALL_1
0x40005d2	      0xe800000000	                          call 0x40005d7	       279	update-index.c	FUNCTION_14	CALL_1
0x40005d7	        0x488d7858	                   lea rdi, [rax + 0x58]	        53	string3.h	FUNCTION_55	CALL_3
0x40005db	          0x4889c3	                            mov rbx, rax	       279	update-index.c	FUNCTION_14	CALL_1
0x40005de	          0x4963d6	                        movsxd rdx, r14d	        53	string3.h	FUNCTION_55	CALL_3
0x40005e1	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_55	CALL_3
0x40005e4	      0xe800000000	                          call 0x40005e9	        53	string3.h	FUNCTION_55	CALL_3
0x40005e9	    0xc74338000000	               mov dword [rbx + 0x38], 0	       281	update-index.c	FUNCTION_14	CALL_3
0x40005f0	        0x4489733c	            mov dword [rbx + 0x3c], r14d	       282	update-index.c	FUNCTION_14
0x40005f4	          0x4c89e6	                            mov rsi, r12	       283	update-index.c	FUNCTION_14	CALL_4
0x40005f7	          0x4889df	                            mov rdi, rbx	       283	update-index.c	FUNCTION_14	CALL_4
0x40005fa	      0xe800000000	                          call 0x40005ff	       283	update-index.c	FUNCTION_14	CALL_4
0x40005ff	    0x448b05000000	            mov r8d, dword [0x04000606] 	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x4000606	      0x418b542418	            mov edx, dword [r12 + 0x18] 	       284	update-index.c	FUNCTION_14	CALL_5
0x400060b	          0x4585c0	                           test r8d, r8d	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x400060e	     0xf84b4000000	                            je 0x40006c8	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x4000614	            0x89d0	                            mov eax, edx	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x4000616	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x400061b	    0x8b3d00000000	            mov edi, dword [0x04000621] 	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000621	            0x85ff	                           test edi, edi	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000623	            0x750b	                           jne 0x4000630	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000625	      0x3d00800000	                         cmp eax, 0x8000	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x400062a	     0xf84d4000000	                            je 0x4000704	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000630	      0x3d00a00000	                         cmp eax, 0xa000	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x4000635	            0x7426	                            je 0x400065d	       256	cache.h	FUNCTION_69	IF_1	CALL_1
0x4000637	      0x3d00400000	                         cmp eax, 0x4000	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x400063c	     0xf840e010000	                            je 0x4000750	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x4000642	      0x3d00e00000	                         cmp eax, 0xe000	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x4000647	     0xf8403010000	                            je 0x4000750	       258	cache.h	FUNCTION_69	IF_2	CALL_2
0x400064d	          0x83e240	                           and edx, 0x40	       260	cache.h	FUNCTION_69
0x4000650	          0x83fa01	                              cmp edx, 1	       260	cache.h	FUNCTION_69
0x4000653	            0x19c0	                            sbb eax, eax	       260	cache.h	FUNCTION_69
0x4000655	          0x83e0b7	                     and eax, 0xffffffb7	       260	cache.h	FUNCTION_69
0x4000658	       0x5ed810000	                         add eax, 0x81ed	       260	cache.h	FUNCTION_69
0x400065d	    0x8b3500000000	            mov esi, dword [0x04000663] 	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000663	            0x31c9	                            xor ecx, ecx	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000665	        0x488d7b44	                   lea rdi, [rbx + 0x44]	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000669	          0x894334	             mov dword [rbx + 0x34], eax	       284	update-index.c	FUNCTION_14	CALL_5
0x400066c	          0x4c89e2	                            mov rdx, r12	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400066f	            0x85f6	                           test esi, esi	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000671	          0x4c89ee	                            mov rsi, r13	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000674	           0xf94c1	                                 sete cl	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000677	      0xe800000000	                          call 0x400067c	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400067c	            0x85c0	                           test eax, eax	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x400067e	     0xf8514010000	                           jne 0x4000798	       286	update-index.c	FUNCTION_14	IF_2	CALL_6
0x4000684	    0x8b1500000000	            mov edx, dword [0x0400068a] 	       291	update-index.c	FUNCTION_14
0x400068a	            0x31c0	                            xor eax, eax	       291	update-index.c	FUNCTION_14
0x400068c	      0xb902000000	                              mov ecx, 2	       292	update-index.c	FUNCTION_14
0x4000691	          0x4889de	                            mov rsi, rbx	       293	update-index.c	FUNCTION_14	IF_3
0x4000694	      0xbf00000000	                              mov edi, 0	       293	update-index.c	FUNCTION_14	IF_3
0x4000699	            0x85d2	                           test edx, edx	       291	update-index.c	FUNCTION_14
0x400069b	    0x8b1500000000	            mov edx, dword [0x040006a1] 	       292	update-index.c	FUNCTION_14
0x40006a1	           0xf95c0	                                setne al	       291	update-index.c	FUNCTION_14
0x40006a4	            0x85d2	                           test edx, edx	       292	update-index.c	FUNCTION_14
0x40006a6	           0xf45d1	                         cmovne edx, ecx	       292	update-index.c	FUNCTION_14
0x40006a9	             0x9c2	                             or edx, eax	       293	update-index.c	FUNCTION_14	IF_3
0x40006ab	      0xe800000000	                          call 0x40006b0	       293	update-index.c	FUNCTION_14	IF_3
0x40006b0	            0x85c0	                           test eax, eax	       293	update-index.c	FUNCTION_14	IF_3
0x40006b2	     0xf85b8000000	                           jne 0x4000770	       293	update-index.c	FUNCTION_14	IF_3
0x40006b8	            0x31c0	                            xor eax, eax	       276	update-index.c	FUNCTION_14	IF_1
0x40006ba	              0x5b	                                 pop rbx	       298	update-index.c	FUNCTION_14
0x40006bb	              0x5d	                                 pop rbp	       298	update-index.c	FUNCTION_14
0x40006bc	            0x415c	                                 pop r12	       298	update-index.c	FUNCTION_14
0x40006be	            0x415d	                                 pop r13	       298	update-index.c	FUNCTION_14
0x40006c0	            0x415e	                                 pop r14	       298	update-index.c	FUNCTION_14
0x40006c2	              0xc3	                                     ret	       298	update-index.c	FUNCTION_14
0x40006c3	       0xf1f440000	                   nop dword [rax + rax]	       298	update-index.c	FUNCTION_14
0x40006c8	            0x89d0	                            mov eax, edx	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006ca	      0x2500f00000	                         and eax, 0xf000	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006cf	          0x4885ed	                           test rbp, rbp	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006d2	     0xf8443ffffff	                            je 0x400061b	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006d8	      0x3d00800000	                         cmp eax, 0x8000	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006dd	     0xf8538ffffff	                           jne 0x400061b	       266	cache.h	FUNCTION_70	IF_1	CALL_1
0x40006e3	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       267	cache.h	FUNCTION_70	IF_1	CALL_2
0x40006e6	            0x89c1	                            mov ecx, eax	       267	cache.h	FUNCTION_70	IF_1	CALL_2
0x40006e8	    0x81e100f00000	                         and ecx, 0xf000	       267	cache.h	FUNCTION_70	IF_1	CALL_2
0x40006ee	    0x81f900a00000	                         cmp ecx, 0xa000	       267	cache.h	FUNCTION_70	IF_1	CALL_2
0x40006f4	     0xf8463ffffff	                            je 0x400065d	       267	cache.h	FUNCTION_70	IF_1	CALL_2
0x40006fa	    0x8b0500000000	            mov eax, dword [0x04000700] 	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000700	            0x85c0	                           test eax, eax	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000702	            0x755c	                           jne 0x4000760	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000704	          0x4885ed	                           test rbp, rbp	       270	cache.h	FUNCTION_70	IF_2	IF_3	CALL_4
0x4000707	      0xb8a4810000	                         mov eax, 0x81a4	       260	cache.h	FUNCTION_69
0x400070c	     0xf844bffffff	                            je 0x400065d	       270	cache.h	FUNCTION_70	IF_2	IF_3	CALL_4
0x4000712	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       270	cache.h	FUNCTION_70	IF_2	IF_3	CALL_4
0x4000715	            0x89c2	                            mov edx, eax	       270	cache.h	FUNCTION_70	IF_2	IF_3	CALL_4
0x4000717	    0x81e200f00000	                         and edx, 0xf000	       270	cache.h	FUNCTION_70	IF_2	IF_3	CALL_4
0x400071d	    0x81fa00800000	                         cmp edx, 0x8000	       260	cache.h	FUNCTION_69
0x4000723	      0xbaa4810000	                         mov edx, 0x81a4	       260	cache.h	FUNCTION_69
0x4000728	           0xf45c2	                         cmovne eax, edx	       260	cache.h	FUNCTION_69
0x400072b	      0xe92dffffff	                           jmp 0x400065d	       260	cache.h	FUNCTION_69
0x4000730	            0x31c9	                            xor ecx, ecx	       275	update-index.c	FUNCTION_14	IF_1
0x4000732	          0x4889fe	                            mov rsi, rdi	       275	update-index.c	FUNCTION_14	IF_1
0x4000735	          0x4c89e2	                            mov rdx, r12	       275	update-index.c	FUNCTION_14	IF_1
0x4000738	      0xbf00000000	                              mov edi, 0	       275	update-index.c	FUNCTION_14	IF_1
0x400073d	      0xe800000000	                          call 0x4000742	       275	update-index.c	FUNCTION_14	IF_1
0x4000742	            0x85c0	                           test eax, eax	       275	update-index.c	FUNCTION_14	IF_1
0x4000744	     0xf857cfeffff	                           jne 0x40005c6	       275	update-index.c	FUNCTION_14	IF_1
0x400074a	      0xe969ffffff	                           jmp 0x40006b8	       275	update-index.c	FUNCTION_14	IF_1
0x400074f	              0x90	                                     nop	       275	update-index.c	FUNCTION_14	IF_1
0x4000750	      0xb800e00000	                         mov eax, 0xe000	       259	cache.h	FUNCTION_69	IF_2
0x4000755	      0xe903ffffff	                           jmp 0x400065d	       259	cache.h	FUNCTION_69	IF_2
0x400075a	    0x660f1f440000	                    nop word [rax + rax]	       259	cache.h	FUNCTION_69	IF_2
0x4000760	      0xb800800000	                         mov eax, 0x8000	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000765	      0xe9cdfeffff	                           jmp 0x4000637	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x400076a	    0x660f1f440000	                    nop word [rax + rax]	       269	cache.h	FUNCTION_70	IF_2	CALL_3
0x4000770	          0x4889df	                            mov rdi, rbx	       294	update-index.c	FUNCTION_14	IF_3	CALL_8
0x4000773	      0xe800000000	                          call 0x4000778	       294	update-index.c	FUNCTION_14	IF_3	CALL_8
0x4000778	          0x4c89ee	                            mov rsi, r13	       295	update-index.c	FUNCTION_14	IF_3
0x400077b	      0xbf00000000	                              mov edi, 0	       295	update-index.c	FUNCTION_14	IF_3
0x4000780	            0x31c0	                            xor eax, eax	       295	update-index.c	FUNCTION_14	IF_3
0x4000782	      0xe800000000	                          call 0x4000787	       295	update-index.c	FUNCTION_14	IF_3
0x4000787	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	update-index.c	FUNCTION_14	IF_3
0x400078c	      0xe929ffffff	                           jmp 0x40006ba	       295	update-index.c	FUNCTION_14	IF_3
0x4000791	     0xf1f80000000	                         nop dword [rax]	       295	update-index.c	FUNCTION_14	IF_3
0x4000798	          0x4889df	                            mov rdi, rbx	       288	update-index.c	FUNCTION_14	IF_2	CALL_7
0x400079b	      0xe800000000	                          call 0x40007a0	       288	update-index.c	FUNCTION_14	IF_2	CALL_7
0x40007a0	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	update-index.c	FUNCTION_14	IF_2
0x40007a5	      0xe910ffffff	                           jmp 0x40006ba	       289	update-index.c	FUNCTION_14	IF_2
unresolve_callback	DO,0:FOR,0:WHILE,0:IF,1:CALL,2:functions,0:SWITCH,0:ELSE,0	206
0x4000200	            0x4157	                                push r15	       884	update-index.c	FUNCTION_35
0x4000202	            0x4156	                                push r14	       884	update-index.c	FUNCTION_35
0x4000204	            0x4155	                                push r13	       884	update-index.c	FUNCTION_35
0x4000206	            0x4154	                                push r12	       884	update-index.c	FUNCTION_35
0x4000208	              0x55	                                push rbp	       884	update-index.c	FUNCTION_35
0x4000209	              0x53	                                push rbx	       884	update-index.c	FUNCTION_35
0x400020a	        0x4883ec28	                           sub rsp, 0x28	       884	update-index.c	FUNCTION_35
0x400020e	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       885	update-index.c	FUNCTION_35
0x4000212	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       884	update-index.c	FUNCTION_35
0x4000217	      0x4889442418	             mov qword [rsp + 0x18], rax	       885	update-index.c	FUNCTION_35
0x400021c	    0x488b05000000	            mov rax, qword [0x04000223] 	       886	update-index.c	FUNCTION_35
0x4000223	        0x4c8b7808	                mov r15, qword [rax + 8]	       886	update-index.c	FUNCTION_35
0x4000227	          0x4d85ff	                           test r15, r15	       889	update-index.c	FUNCTION_35	CALL_1
0x400022a	     0xf84e0020000	                            je 0x4000510	       889	update-index.c	FUNCTION_35	CALL_1
0x4000230	          0x4c89ff	                            mov rdi, r15	       890	update-index.c	FUNCTION_35	CALL_2
0x4000233	      0xe800000000	                          call 0x4000238	       890	update-index.c	FUNCTION_35	CALL_2
0x4000238	        0x89442404	                mov dword [rsp + 4], eax	       889	update-index.c	FUNCTION_35	CALL_1
0x400023c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       889	update-index.c	FUNCTION_35	CALL_1
0x4000241	      0xbe00000000	                              mov esi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x4000246	      0xbf00000000	                              mov edi, 0	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x400024b	          0x488b28	                    mov rbp, qword [rax]	       889	update-index.c	FUNCTION_35	CALL_1
0x400024e	          0x8b5810	            mov ebx, dword [rax + 0x10] 	       889	update-index.c	FUNCTION_35	CALL_1
0x4000251	      0xe800000000	                          call 0x4000256	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x4000256	            0x85c0	                           test eax, eax	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x4000258	     0xf85f4020000	                           jne 0x4000552	       690	update-index.c	FUNCTION_23	IF_1	CALL_1
0x400025e	      0xbe00000000	                              mov esi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x4000263	      0xbf00000000	                              mov edi, 0	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x4000268	      0xe800000000	                          call 0x400026d	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x400026d	            0x85c0	                           test eax, eax	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x400026f	     0xf85bb020000	                           jne 0x4000530	       692	update-index.c	FUNCTION_23	IF_2	CALL_3
0x4000275	          0x83fb01	                              cmp ebx, 1	       709	update-index.c	FUNCTION_24	FOR_1
0x4000278	     0xf8ea2020000	                           jle 0x4000520	       709	update-index.c	FUNCTION_24	FOR_1
0x400027e	          0x8d43fe	                      lea eax, [rbx - 2]	       709	update-index.c	FUNCTION_24	FOR_1
0x4000281	        0x4c8d6508	                      lea r12, [rbp + 8]	       709	update-index.c	FUNCTION_24	FOR_1
0x4000285	          0x4531f6	                          xor r14d, r14d	       709	update-index.c	FUNCTION_24	FOR_1
0x4000288	      0x488d44c510	          lea rax, [rbp + rax*8 + 0x10] 	       709	update-index.c	FUNCTION_24	FOR_1
0x400028d	      0x4889442408	                mov qword [rsp + 8], rax	       709	update-index.c	FUNCTION_24	FOR_1
0x4000292	      0xe913010000	                           jmp 0x40003aa	       709	update-index.c	FUNCTION_24	FOR_1
0x4000297	    0x660f1f840000	                    nop word [rax + rax]	       709	update-index.c	FUNCTION_24	FOR_1
0x40002a0	            0x89c6	                            mov esi, eax	       627	update-index.c	FUNCTION_22	IF_1
0x40002a2	      0xbf00000000	                              mov edi, 0	       627	update-index.c	FUNCTION_22	IF_1
0x40002a7	      0xe800000000	                          call 0x40002ac	       627	update-index.c	FUNCTION_22	IF_1
0x40002ac	    0x390500000000	            cmp dword [0x040002b2], eax 	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x40002b2	            0x7624	                           jbe 0x40002d8	       628	update-index.c	FUNCTION_22	IF_1	IF_2
0x40002b4	    0x488b15000000	            mov rdx, qword [0x040002bb] 	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x40002bb	            0x4898	                                    cdqe	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x40002bd	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       629	update-index.c	FUNCTION_22	IF_1	IF_2
0x40002c1	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40002c8	            0x740e	                            je 0x40002d8	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40002ca	          0x396f3c	            cmp dword [rdi + 0x3c], ebp 	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40002cd	     0xf841d020000	                            je 0x40004f0	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40002d3	       0xf1f440000	                   nop dword [rax + rax]	       630	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x40002d8	            0x89e9	                            mov ecx, ebp	       658	update-index.c	FUNCTION_22	CALL_4
0x40002da	    0x41b802000000	                              mov r8d, 2	       658	update-index.c	FUNCTION_22	CALL_4
0x40002e0	          0x4889da	                            mov rdx, rbx	       658	update-index.c	FUNCTION_22	CALL_4
0x40002e3	      0xbe00000000	                              mov esi, 0	       658	update-index.c	FUNCTION_22	CALL_4
0x40002e8	      0xbf00000000	                              mov edi, 0	       658	update-index.c	FUNCTION_22	CALL_4
0x40002ed	      0xe8befdffff	                   call sym.read_one_ent	       658	update-index.c	FUNCTION_22	CALL_4
0x40002f2	            0x89e9	                            mov ecx, ebp	       659	update-index.c	FUNCTION_22	CALL_5
0x40002f4	          0x4989c5	                            mov r13, rax	       658	update-index.c	FUNCTION_22	CALL_4
0x40002f7	    0x41b803000000	                              mov r8d, 3	       659	update-index.c	FUNCTION_22	CALL_5
0x40002fd	          0x4889da	                            mov rdx, rbx	       659	update-index.c	FUNCTION_22	CALL_5
0x4000300	      0xbe00000000	                              mov esi, 0	       659	update-index.c	FUNCTION_22	CALL_5
0x4000305	      0xbf00000000	                              mov edi, 0	       659	update-index.c	FUNCTION_22	CALL_5
0x400030a	      0xe8a1fdffff	                   call sym.read_one_ent	       659	update-index.c	FUNCTION_22	CALL_5
0x400030f	          0x4d85ed	                           test r13, r13	       661	update-index.c	FUNCTION_22	IF_6
0x4000312	          0x4889c5	                            mov rbp, rax	       659	update-index.c	FUNCTION_22	CALL_5
0x4000315	     0xf8425010000	                            je 0x4000440	       661	update-index.c	FUNCTION_22	IF_6
0x400031b	          0x4885c0	                           test rax, rax	       661	update-index.c	FUNCTION_22	IF_6
0x400031e	     0xf841c010000	                            je 0x4000440	       661	update-index.c	FUNCTION_22	IF_6
0x4000324	        0x488d7044	                   lea rsi, [rax + 0x44]	       975	cache.h	FUNCTION_74	CALL_1
0x4000328	        0x498d7d44	                   lea rdi, [r13 + 0x44]	       975	cache.h	FUNCTION_74	CALL_1
0x400032c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_74	CALL_1
0x4000331	      0xe800000000	                          call 0x4000336	       975	cache.h	FUNCTION_74	CALL_1
0x4000336	            0x85c0	                           test eax, eax	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000338	            0x750d	                           jne 0x4000347	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x400033a	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x400033d	        0x41394534	            cmp dword [r13 + 0x34], eax 	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000341	     0xf8489010000	                            je 0x40004d0	       665	update-index.c	FUNCTION_22	IF_7	CALL_6
0x4000347	          0x4889de	                            mov rsi, rbx	       672	update-index.c	FUNCTION_22
0x400034a	      0xbf00000000	                              mov edi, 0	       672	update-index.c	FUNCTION_22
0x400034f	      0xe800000000	                          call 0x4000354	       672	update-index.c	FUNCTION_22
0x4000354	      0xba01000000	                              mov edx, 1	       673	update-index.c	FUNCTION_22	IF_8
0x4000359	          0x4c89ee	                            mov rsi, r13	       673	update-index.c	FUNCTION_22	IF_8
0x400035c	      0xbf00000000	                              mov edi, 0	       673	update-index.c	FUNCTION_22	IF_8
0x4000361	      0xe800000000	                          call 0x4000366	       673	update-index.c	FUNCTION_22	IF_8
0x4000366	            0x85c0	                           test eax, eax	       673	update-index.c	FUNCTION_22	IF_8
0x4000368	     0xf84e2000000	                            je 0x4000450	       673	update-index.c	FUNCTION_22	IF_8
0x400036e	          0x4889de	                            mov rsi, rbx	       674	update-index.c	FUNCTION_22	IF_8
0x4000371	      0xbf00000000	                              mov edi, 0	       674	update-index.c	FUNCTION_22	IF_8
0x4000376	            0x31c0	                            xor eax, eax	       674	update-index.c	FUNCTION_22	IF_8
0x4000378	    0x41beffffffff	                    mov r14d, 0xffffffff	       674	update-index.c	FUNCTION_22	IF_8
0x400037e	      0xe800000000	                          call 0x4000383	       674	update-index.c	FUNCTION_22	IF_8
0x4000383	          0x4c89ef	                            mov rdi, r13	       683	update-index.c	FUNCTION_22	CALL_7
0x4000386	      0xe800000000	                          call 0x400038b	       683	update-index.c	FUNCTION_22	CALL_7
0x400038b	          0x4889ef	                            mov rdi, rbp	       684	update-index.c	FUNCTION_22	CALL_8
0x400038e	      0xe800000000	                          call 0x4000393	       684	update-index.c	FUNCTION_22	CALL_8
0x4000393	          0x4889df	                            mov rdi, rbx	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x4000396	        0x4983c408	                              add r12, 8	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x400039a	      0xe800000000	                          call 0x400039f	       713	update-index.c	FUNCTION_24	FOR_1	CALL_4
0x400039f	      0x4c3b642408	                cmp r12, qword [rsp + 8]	       709	update-index.c	FUNCTION_24	FOR_1
0x40003a4	     0xf84de000000	                            je 0x4000488	       709	update-index.c	FUNCTION_24	FOR_1
0x40003aa	        0x498b1424	                    mov rdx, qword [r12]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x40003ae	        0x8b742404	                mov esi, dword [rsp + 4]	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x40003b2	          0x4c89ff	                            mov rdi, r15	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x40003b5	      0xe800000000	                          call 0x40003ba	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x40003ba	          0x4889c3	                            mov rbx, rax	       711	update-index.c	FUNCTION_24	FOR_1	CALL_2
0x40003bd	          0x4889c7	                            mov rdi, rax	       618	update-index.c	FUNCTION_22	CALL_1
0x40003c0	      0xe800000000	                          call 0x40003c5	       618	update-index.c	FUNCTION_22	CALL_1
0x40003c5	          0x4889de	                            mov rsi, rbx	       624	update-index.c	FUNCTION_22
0x40003c8	            0x89c2	                            mov edx, eax	       624	update-index.c	FUNCTION_22
0x40003ca	      0xbf00000000	                              mov edi, 0	       624	update-index.c	FUNCTION_22
0x40003cf	          0x4889c5	                            mov rbp, rax	       618	update-index.c	FUNCTION_22	CALL_1
0x40003d2	      0xe800000000	                          call 0x40003d7	       624	update-index.c	FUNCTION_22
0x40003d7	            0x85c0	                           test eax, eax	       625	update-index.c	FUNCTION_22	IF_1
0x40003d9	     0xf89c1feffff	                           jns 0x40002a0	       625	update-index.c	FUNCTION_22	IF_1
0x40003df	            0xf7d0	                                 not eax	       641	update-index.c	FUNCTION_22	ELSE_1
0x40003e1	    0x390500000000	            cmp dword [0x040003e7], eax 	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003e7	     0xf86ebfeffff	                           jbe 0x40002d8	       642	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003ed	    0x488b15000000	            mov rdx, qword [0x040003f4] 	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003f4	            0x4898	                                    cdqe	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003f6	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	       643	update-index.c	FUNCTION_22	ELSE_1	IF_4
0x40003fa	          0x396f3c	            cmp dword [rdi + 0x3c], ebp 	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x40003fd	     0xf85d5feffff	                           jne 0x40002d8	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x4000403	        0x4883c758	                           add rdi, 0x58	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x4000407	          0x4863d5	                         movsxd rdx, ebp	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x400040a	          0x4889de	                            mov rsi, rbx	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x400040d	      0xe800000000	                          call 0x4000412	       645	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5	CALL_3
0x4000412	            0x85c0	                           test eax, eax	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x4000414	     0xf85befeffff	                           jne 0x40002d8	       644	update-index.c	FUNCTION_22	ELSE_1	IF_4	IF_5
0x400041a	    0x488b3d000000	            mov rdi, qword [0x04000421] 	        97	stdio2.h	CALL_10
0x4000421	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x4000424	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x4000429	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x400042e	            0x31ed	                            xor ebp, ebp	       621	update-index.c	FUNCTION_22
0x4000430	          0x4531ed	                          xor r13d, r13d	       621	update-index.c	FUNCTION_22
0x4000433	      0xe800000000	                          call 0x4000438	        97	stdio2.h	CALL_10
0x4000438	      0xe946ffffff	                           jmp 0x4000383	        97	stdio2.h	CALL_10
0x400043d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_10
0x4000440	    0x41beffffffff	                    mov r14d, 0xffffffff	       661	update-index.c	FUNCTION_22	IF_6
0x4000446	      0xe938ffffff	                           jmp 0x4000383	       661	update-index.c	FUNCTION_22	IF_6
0x400044b	       0xf1f440000	                   nop dword [rax + rax]	       661	update-index.c	FUNCTION_22	IF_6
0x4000450	      0xba01000000	                              mov edx, 1	       678	update-index.c	FUNCTION_22	IF_9
0x4000455	          0x4889ee	                            mov rsi, rbp	       678	update-index.c	FUNCTION_22	IF_9
0x4000458	      0xbf00000000	                              mov edi, 0	       678	update-index.c	FUNCTION_22	IF_9
0x400045d	      0xe800000000	                          call 0x4000462	       678	update-index.c	FUNCTION_22	IF_9
0x4000462	            0x85c0	                           test eax, eax	       678	update-index.c	FUNCTION_22	IF_9
0x4000464	     0xf8429ffffff	                            je 0x4000393	       678	update-index.c	FUNCTION_22	IF_9
0x400046a	          0x4889de	                            mov rsi, rbx	       680	update-index.c	FUNCTION_22
0x400046d	      0xbf00000000	                              mov edi, 0	       680	update-index.c	FUNCTION_22
0x4000472	            0x31c0	                            xor eax, eax	       680	update-index.c	FUNCTION_22
0x4000474	      0xe800000000	                          call 0x4000479	       680	update-index.c	FUNCTION_22
0x4000479	    0x41beffffffff	                    mov r14d, 0xffffffff	       680	update-index.c	FUNCTION_22
0x400047f	      0xe9fffeffff	                           jmp 0x4000383	       680	update-index.c	FUNCTION_22
0x4000484	         0xf1f4000	                         nop dword [rax]	       680	update-index.c	FUNCTION_22
0x4000488	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       889	update-index.c	FUNCTION_35	CALL_1
0x400048d	          0x4585f6	                         test r14d, r14d	       891	update-index.c	FUNCTION_35	IF_1
0x4000490	          0x448930	                   mov dword [rax], r14d	       889	update-index.c	FUNCTION_35	CALL_1
0x4000493	            0x740a	                            je 0x400049f	       891	update-index.c	FUNCTION_35	IF_1
0x4000495	    0xc70500000000	               mov dword [0x0400049f], 0	       892	update-index.c	FUNCTION_35	IF_1
0x400049f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       894	update-index.c	FUNCTION_35
0x40004a4	        0x48634110	         movsxd rax, dword [rcx + 0x10] 	       894	update-index.c	FUNCTION_35
0x40004a8	    0xc74110010000	               mov dword [rcx + 0x10], 1	       895	update-index.c	FUNCTION_35
0x40004af	    0x488d04c5f8ff	                    lea rax, [rax*8 - 8]	       894	update-index.c	FUNCTION_35
0x40004b7	          0x480101	                    add qword [rcx], rax	       894	update-index.c	FUNCTION_35
0x40004ba	        0x4883c428	                           add rsp, 0x28	       897	update-index.c	FUNCTION_35
0x40004be	              0x5b	                                 pop rbx	       897	update-index.c	FUNCTION_35
0x40004bf	            0x31c0	                            xor eax, eax	       897	update-index.c	FUNCTION_35
0x40004c1	              0x5d	                                 pop rbp	       897	update-index.c	FUNCTION_35
0x40004c2	            0x415c	                                 pop r12	       897	update-index.c	FUNCTION_35
0x40004c4	            0x415d	                                 pop r13	       897	update-index.c	FUNCTION_35
0x40004c6	            0x415e	                                 pop r14	       897	update-index.c	FUNCTION_35
0x40004c8	            0x415f	                                 pop r15	       897	update-index.c	FUNCTION_35
0x40004ca	              0xc3	                                     ret	       897	update-index.c	FUNCTION_35
0x40004cb	       0xf1f440000	                   nop dword [rax + rax]	       897	update-index.c	FUNCTION_35
0x40004d0	    0x488b3d000000	            mov rdi, qword [0x040004d7] 	        97	stdio2.h	CALL_10
0x40004d7	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_10
0x40004da	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_10
0x40004df	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x40004e4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_10
0x40004e6	      0xe800000000	                          call 0x40004eb	        97	stdio2.h	CALL_10
0x40004eb	      0xe993feffff	                           jmp 0x4000383	        97	stdio2.h	CALL_10
0x40004f0	        0x4883c758	                           add rdi, 0x58	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40004f4	          0x4863d5	                         movsxd rdx, ebp	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40004f7	          0x4889de	                            mov rsi, rbx	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40004fa	      0xe800000000	                          call 0x40004ff	       632	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3	CALL_2
0x40004ff	            0x85c0	                           test eax, eax	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4000501	     0xf85d1fdffff	                           jne 0x40002d8	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4000507	      0xe987feffff	                           jmp 0x4000393	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400050c	         0xf1f4000	                         nop dword [rax]	       631	update-index.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4000510	    0xc74424040000	                  mov dword [rsp + 4], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x4000518	          0x4889f8	                            mov rax, rdi	       889	update-index.c	FUNCTION_35	CALL_1
0x400051b	      0xe921fdffff	                           jmp 0x4000241	       889	update-index.c	FUNCTION_35	CALL_1
0x4000520	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       889	update-index.c	FUNCTION_35	CALL_1
0x4000525	    0xc70000000000	                      mov dword [rax], 0	       889	update-index.c	FUNCTION_35	CALL_1
0x400052b	      0xe96fffffff	                           jmp 0x400049f	       889	update-index.c	FUNCTION_35	CALL_1
0x4000530	    0x488b0d000000	            mov rcx, qword [0x04000537] 	        97	stdio2.h	CALL_10
0x4000537	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_10
0x400053c	      0xba1e000000	                           mov edx, 0x1e	        97	stdio2.h	CALL_10
0x4000541	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x4000546	      0xe800000000	                          call 0x400054b	        97	stdio2.h	CALL_10
0x400054b	            0x31ff	                            xor edi, edi	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x400054d	      0xe800000000	                          call 0x4000552	       694	update-index.c	FUNCTION_23	IF_2	CALL_4
0x4000552	      0xbf00000000	                              mov edi, 0	       691	update-index.c	FUNCTION_23	CALL_2
0x4000557	            0x31c0	                            xor eax, eax	       691	update-index.c	FUNCTION_23	CALL_2
0x4000559	      0xe800000000	                          call 0x400055e	       691	update-index.c	FUNCTION_23	CALL_2
refresh_callback	DO,0:FOR,0:WHILE,0:IF,0:CALL,1:functions,0:SWITCH,0:ELSE,0	17
0x4000d70	              0x53	                                push rbx	       785	update-index.c	FUNCTION_27
0x4000d71	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       786	update-index.c	FUNCTION_27	CALL_1
0x4000d75	      0xe800000000	                          call 0x4000d7a	       777	update-index.c	FUNCTION_26	CALL_1
0x4000d7a	            0x31f6	                            xor esi, esi	       778	update-index.c	FUNCTION_26
0x4000d7c	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_26
0x4000d81	      0xe800000000	                          call 0x4000d86	       778	update-index.c	FUNCTION_26
0x4000d86	            0x8b33	                    mov esi, dword [rbx]	       779	update-index.c	FUNCTION_26
0x4000d88	            0x31d2	                            xor edx, edx	       779	update-index.c	FUNCTION_26
0x4000d8a	          0x4531c0	                            xor r8d, r8d	       779	update-index.c	FUNCTION_26
0x4000d8d	            0x31c9	                            xor ecx, ecx	       779	update-index.c	FUNCTION_26
0x4000d8f	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_26
0x4000d94	      0xe800000000	                          call 0x4000d99	       779	update-index.c	FUNCTION_26
0x4000d99	        0x488b5308	                mov rdx, qword [rbx + 8]	       779	update-index.c	FUNCTION_26
0x4000d9d	             0x902	                     or dword [rdx], eax	       779	update-index.c	FUNCTION_26
0x4000d9f	            0x31c0	                            xor eax, eax	       787	update-index.c	FUNCTION_27
0x4000da1	              0x5b	                                 pop rbx	       787	update-index.c	FUNCTION_27
0x4000da2	              0xc3	                                     ret	       787	update-index.c	FUNCTION_27
cacheinfo_callback	DO,0:FOR,0:WHILE,0:IF,4:CALL,7:functions,0:SWITCH,0:ELSE,0	128
0x4000a80	            0x4155	                                push r13	       837	update-index.c	FUNCTION_32
0x4000a82	            0x4154	                                push r12	       837	update-index.c	FUNCTION_32
0x4000a84	              0x55	                                push rbp	       837	update-index.c	FUNCTION_32
0x4000a85	              0x53	                                push rbx	       837	update-index.c	FUNCTION_32
0x4000a86	          0x4889fb	                            mov rbx, rdi	       837	update-index.c	FUNCTION_32
0x4000a89	        0x4883ec38	                           sub rsp, 0x38	       837	update-index.c	FUNCTION_32
0x4000a8d	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	update-index.c	FUNCTION_32
0x4000a96	      0x4889442428	             mov qword [rsp + 0x28], rax	       837	update-index.c	FUNCTION_32
0x4000a9b	            0x31c0	                            xor eax, eax	       837	update-index.c	FUNCTION_32
0x4000a9d	          0x488b07	                    mov rax, qword [rdi]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000aa0	        0x488b6808	                mov rbp, qword [rax + 8]	       842	update-index.c	FUNCTION_32	IF_1	CALL_1
0x4000aa4	          0x4885ed	                           test rbp, rbp	       820	update-index.c	FUNCTION_31	IF_1
0x4000aa7	     0xf84b3000000	                            je 0x4000b60	       820	update-index.c	FUNCTION_31	IF_1
0x4000aad	      0xe800000000	                          call 0x4000ab2	       823	update-index.c	FUNCTION_31
0x4000ab2	      0x488d742408	                      lea rsi, [rsp + 8]	       824	update-index.c	FUNCTION_31	CALL_1
0x4000ab7	          0x4989c5	                            mov r13, rax	       823	update-index.c	FUNCTION_31
0x4000aba	      0xba08000000	                              mov edx, 8	       824	update-index.c	FUNCTION_31	CALL_1
0x4000abf	    0xc70000000000	                      mov dword [rax], 0	       823	update-index.c	FUNCTION_31
0x4000ac5	          0x4889ef	                            mov rdi, rbp	       824	update-index.c	FUNCTION_31	CALL_1
0x4000ac8	      0xe800000000	                          call 0x4000acd	       824	update-index.c	FUNCTION_31	CALL_1
0x4000acd	        0x418b5500	                    mov edx, dword [r13]	       825	update-index.c	FUNCTION_31	IF_2
0x4000ad1	          0x4989c4	                            mov r12, rax	       824	update-index.c	FUNCTION_31	CALL_1
0x4000ad4	            0x85d2	                           test edx, edx	       825	update-index.c	FUNCTION_31	IF_2
0x4000ad6	     0xf8584000000	                           jne 0x4000b60	       825	update-index.c	FUNCTION_31	IF_2
0x4000adc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       825	update-index.c	FUNCTION_31	IF_2
0x4000ae1	          0x4839fd	                            cmp rbp, rdi	       825	update-index.c	FUNCTION_31	IF_2
0x4000ae4	            0x747a	                            je 0x4000b60	       825	update-index.c	FUNCTION_31	IF_2
0x4000ae6	          0x803f2c	                    cmp byte [rdi], 0x2c	       825	update-index.c	FUNCTION_31	IF_2
0x4000ae9	            0x7575	                           jne 0x4000b60	       825	update-index.c	FUNCTION_31	IF_2
0x4000aeb	            0x89c0	                            mov eax, eax	       825	update-index.c	FUNCTION_31	IF_2
0x4000aed	          0x4939c4	                            cmp r12, rax	       825	update-index.c	FUNCTION_31	IF_2
0x4000af0	            0x756e	                           jne 0x4000b60	       825	update-index.c	FUNCTION_31	IF_2
0x4000af2	      0x488d742410	                   lea rsi, [rsp + 0x10]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000af7	        0x4883c701	                              add rdi, 1	       828	update-index.c	FUNCTION_31
0x4000afb	      0x48897c2408	                mov qword [rsp + 8], rdi	       828	update-index.c	FUNCTION_31
0x4000b00	      0xe800000000	                          call 0x4000b05	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b05	            0x85c0	                           test eax, eax	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b07	            0x7557	                           jne 0x4000b60	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b09	      0x488b742408	                mov rsi, qword [rsp + 8]	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b0e	        0x807e282c	            cmp byte [rsi + 0x28], 0x2c 	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b12	            0x754c	                           jne 0x4000b60	       829	update-index.c	FUNCTION_31	IF_3	CALL_2
0x4000b14	        0x488d6e29	                   lea rbp, [rsi + 0x29]	       831	update-index.c	FUNCTION_31
0x4000b18	      0x488d742410	                   lea rsi, [rsp + 0x10]	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b1d	            0x31c9	                            xor ecx, ecx	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b1f	          0x4489e7	                           mov edi, r12d	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b22	          0x4889ea	                            mov rdx, rbp	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b25	      0xe876fdffff	                  call sym.add_cacheinfo	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b2a	            0x85c0	                           test eax, eax	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b2c	     0xf8521010000	                           jne 0x4000c53	       843	update-index.c	FUNCTION_32	IF_1	IF_2	CALL_2
0x4000b32	        0x48830308	                      add qword [rbx], 8	       845	update-index.c	FUNCTION_32	IF_1
0x4000b36	        0x836b1001	               sub dword [rbx + 0x10], 1	       846	update-index.c	FUNCTION_32	IF_1
0x4000b3a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       857	update-index.c	FUNCTION_32
0x4000b3f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       857	update-index.c	FUNCTION_32
0x4000b48	     0xf8500010000	                           jne 0x4000c4e	       857	update-index.c	FUNCTION_32
0x4000b4e	        0x4883c438	                           add rsp, 0x38	       857	update-index.c	FUNCTION_32
0x4000b52	              0x5b	                                 pop rbx	       857	update-index.c	FUNCTION_32
0x4000b53	              0x5d	                                 pop rbp	       857	update-index.c	FUNCTION_32
0x4000b54	            0x415c	                                 pop r12	       857	update-index.c	FUNCTION_32
0x4000b56	            0x415d	                                 pop r13	       857	update-index.c	FUNCTION_32
0x4000b58	              0xc3	                                     ret	       857	update-index.c	FUNCTION_32
0x4000b59	     0xf1f80000000	                         nop dword [rax]	       857	update-index.c	FUNCTION_32
0x4000b60	        0x837b1003	               cmp dword [rbx + 0x10], 3	       849	update-index.c	FUNCTION_32	IF_3
0x4000b64	     0xf8ece000000	                           jle 0x4000c38	       849	update-index.c	FUNCTION_32	IF_3
0x4000b6a	          0x488b03	                    mov rax, qword [rbx]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000b6d	        0x4c8d6008	                      lea r12, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000b71	          0x4c8923	                    mov qword [rbx], r12	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000b74	        0x488b6808	                mov rbp, qword [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000b78	      0xe800000000	                          call 0x4000b7d	      1014	git-compat-util.h	FUNCTION_118
0x4000b7d	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_118	IF_1	CALL_1
0x4000b82	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_118
0x4000b88	          0x4989c5	                            mov r13, rax	      1014	git-compat-util.h	FUNCTION_118
0x4000b8b	          0x4889ef	                            mov rdi, rbp	      1016	git-compat-util.h	FUNCTION_118	IF_1	CALL_1
0x4000b8e	      0xe800000000	                          call 0x4000b93	      1016	git-compat-util.h	FUNCTION_118	IF_1	CALL_1
0x4000b93	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_118	IF_1	CALL_1
0x4000b96	     0xf8587000000	                           jne 0x4000c23	      1016	git-compat-util.h	FUNCTION_118	IF_1	CALL_1
0x4000b9c	      0x488d742408	                      lea rsi, [rsp + 8]	      1018	git-compat-util.h	FUNCTION_118	CALL_2
0x4000ba1	      0xba08000000	                              mov edx, 8	      1018	git-compat-util.h	FUNCTION_118	CALL_2
0x4000ba6	          0x4889ef	                            mov rdi, rbp	      1018	git-compat-util.h	FUNCTION_118	CALL_2
0x4000ba9	      0xe800000000	                          call 0x4000bae	      1018	git-compat-util.h	FUNCTION_118	CALL_2
0x4000bae	          0x4989c4	                            mov r12, rax	      1018	git-compat-util.h	FUNCTION_118	CALL_2
0x4000bb1	        0x418b4500	                    mov eax, dword [r13]	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bb5	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bb7	            0x7567	                           jne 0x4000c20	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bb9	      0x488b442408	                mov rax, qword [rsp + 8]	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bbe	          0x803800	                       cmp byte [rax], 0	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bc1	            0x755d	                           jne 0x4000c20	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bc3	          0x4839c5	                            cmp rbp, rax	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bc6	            0x7458	                            je 0x4000c20	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bc8	          0x4489e0	                           mov eax, r12d	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bcb	          0x4939c4	                            cmp r12, rax	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bce	            0x7550	                           jne 0x4000c20	      1019	git-compat-util.h	FUNCTION_118	IF_2
0x4000bd0	          0x488b03	                    mov rax, qword [rbx]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000bd3	      0x488d742410	                   lea rsi, [rsp + 0x10]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000bd8	        0x488d5008	                      lea rdx, [rax + 8]	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000bdc	          0x488913	                    mov qword [rbx], rdx	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000bdf	        0x488b7808	                mov rdi, qword [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000be3	      0xe800000000	                          call 0x4000be8	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000be8	            0x85c0	                           test eax, eax	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000bea	            0x7534	                           jne 0x4000c20	       851	update-index.c	FUNCTION_32	IF_4	CALL_4
0x4000bec	          0x488b03	                    mov rax, qword [rbx]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000bef	      0x488d742410	                   lea rsi, [rsp + 0x10]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000bf4	            0x31c9	                            xor ecx, ecx	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000bf6	          0x4489e7	                           mov edi, r12d	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000bf9	        0x488d5008	                      lea rdx, [rax + 8]	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000bfd	          0x488913	                    mov qword [rbx], rdx	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000c00	        0x488b5008	                mov rdx, qword [rax + 8]	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000c04	      0xe897fcffff	                  call sym.add_cacheinfo	       853	update-index.c	FUNCTION_32	IF_4	CALL_6
0x4000c09	            0x85c0	                           test eax, eax	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000c0b	            0x7513	                           jne 0x4000c20	       852	update-index.c	FUNCTION_32	IF_4	CALL_5
0x4000c0d	        0x836b1003	               sub dword [rbx + 0x10], 3	       855	update-index.c	FUNCTION_32
0x4000c11	      0xe924ffffff	                           jmp 0x4000b3a	       856	update-index.c	FUNCTION_32
0x4000c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       856	update-index.c	FUNCTION_32
0x4000c20	          0x4c8b23	                    mov r12, qword [rbx]	       856	update-index.c	FUNCTION_32
0x4000c23	        0x498b3424	                    mov rsi, qword [r12]	       854	update-index.c	FUNCTION_32	CALL_7
0x4000c27	      0xbf00000000	                              mov edi, 0	       854	update-index.c	FUNCTION_32	CALL_7
0x4000c2c	            0x31c0	                            xor eax, eax	       854	update-index.c	FUNCTION_32	CALL_7
0x4000c2e	      0xe800000000	                          call 0x4000c33	       854	update-index.c	FUNCTION_32	CALL_7
0x4000c33	       0xf1f440000	                   nop dword [rax + rax]	       854	update-index.c	FUNCTION_32	CALL_7
0x4000c38	      0xbf00000000	                              mov edi, 0	       850	update-index.c	FUNCTION_32	IF_3
0x4000c3d	            0x31c0	                            xor eax, eax	       850	update-index.c	FUNCTION_32	IF_3
0x4000c3f	      0xe800000000	                          call 0x4000c44	       850	update-index.c	FUNCTION_32	IF_3
0x4000c44	      0xb8ffffffff	                     mov eax, 0xffffffff	       850	update-index.c	FUNCTION_32	IF_3
0x4000c49	      0xe9ecfeffff	                           jmp 0x4000b3a	       850	update-index.c	FUNCTION_32	IF_3
0x4000c4e	      0xe800000000	                          call 0x4000c53	       857	update-index.c	FUNCTION_32
0x4000c53	          0x4889ee	                            mov rsi, rbp	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c56	      0xbf00000000	                              mov edi, 0	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c5b	            0x31c0	                            xor eax, eax	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
0x4000c5d	      0xe800000000	                          call 0x4000c62	       844	update-index.c	FUNCTION_32	IF_1	CALL_3
resolve_undo_clear_callback	DO,0:FOR,0:WHILE,0:IF,0:CALL,0:functions,0:SWITCH,0:ELSE,0	6
0x4000090	        0x4883ec08	                              sub rsp, 8	       807	update-index.c	FUNCTION_30
0x4000094	      0xbf00000000	                              mov edi, 0	       808	update-index.c	FUNCTION_30
0x4000099	      0xe800000000	                          call 0x400009e	       808	update-index.c	FUNCTION_30
0x400009e	            0x31c0	                            xor eax, eax	       810	update-index.c	FUNCTION_30
0x40000a0	        0x4883c408	                              add rsp, 8	       810	update-index.c	FUNCTION_30
0x40000a4	              0xc3	                                     ret	       810	update-index.c	FUNCTION_30
chmod_callback	DO,0:FOR,0:WHILE,0:IF,1:CALL,0:functions,0:SWITCH,0:ELSE,0	21
0x4000040	        0x4883ec08	                              sub rsp, 8	       797	update-index.c	FUNCTION_29
0x4000044	           0xfb606	                   movzx eax, byte [rsi]	       799	update-index.c	FUNCTION_29	IF_1
0x4000047	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       798	update-index.c	FUNCTION_29
0x400004b	          0x8d50d5	                   lea edx, [rax - 0x2b]	       799	update-index.c	FUNCTION_29	IF_1
0x400004e	    0x81e2fd000000	                           and edx, 0xfd	       799	update-index.c	FUNCTION_29	IF_1
0x4000054	            0x751a	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x4000056	        0x807e0178	                cmp byte [rsi + 1], 0x78	       799	update-index.c	FUNCTION_29	IF_1
0x400005a	            0x7514	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x400005c	        0x807e0200	                   cmp byte [rsi + 2], 0	       799	update-index.c	FUNCTION_29	IF_1
0x4000060	            0x750e	                           jne 0x4000070	       799	update-index.c	FUNCTION_29	IF_1
0x4000062	            0x8801	                      mov byte [rcx], al	       801	update-index.c	FUNCTION_29
0x4000064	            0x31c0	                            xor eax, eax	       802	update-index.c	FUNCTION_29
0x4000066	        0x4883c408	                              add rsp, 8	       803	update-index.c	FUNCTION_29
0x400006a	              0xc3	                                     ret	       803	update-index.c	FUNCTION_29
0x400006b	       0xf1f440000	                   nop dword [rax + rax]	       803	update-index.c	FUNCTION_29
0x4000070	      0xbf00000000	                              mov edi, 0	       800	update-index.c	FUNCTION_29	IF_1
0x4000075	            0x31c0	                            xor eax, eax	       800	update-index.c	FUNCTION_29	IF_1
0x4000077	      0xe800000000	                          call 0x400007c	       800	update-index.c	FUNCTION_29	IF_1
0x400007c	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	update-index.c	FUNCTION_29	IF_1
0x4000081	        0x4883c408	                              add rsp, 8	       803	update-index.c	FUNCTION_29
0x4000085	              0xc3	                                     ret	       803	update-index.c	FUNCTION_29
really_refresh_callback	DO,0:FOR,0:WHILE,0:IF,0:CALL,1:functions,0:SWITCH,0:ELSE,0	18
0x4000560	              0x53	                                push rbx	       791	update-index.c	FUNCTION_28
0x4000561	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       792	update-index.c	FUNCTION_28	CALL_1
0x4000565	      0xe800000000	                          call 0x400056a	       777	update-index.c	FUNCTION_26	CALL_1
0x400056a	            0x31f6	                            xor esi, esi	       778	update-index.c	FUNCTION_26
0x400056c	      0xbf00000000	                              mov edi, 0	       778	update-index.c	FUNCTION_26
0x4000571	      0xe800000000	                          call 0x4000576	       778	update-index.c	FUNCTION_26
0x4000576	            0x8b33	                    mov esi, dword [rbx]	       779	update-index.c	FUNCTION_26
0x4000578	            0x31d2	                            xor edx, edx	       779	update-index.c	FUNCTION_26
0x400057a	          0x4531c0	                            xor r8d, r8d	       779	update-index.c	FUNCTION_26
0x400057d	            0x31c9	                            xor ecx, ecx	       779	update-index.c	FUNCTION_26
0x400057f	      0xbf00000000	                              mov edi, 0	       779	update-index.c	FUNCTION_26
0x4000584	          0x83ce01	                               or esi, 1	       779	update-index.c	FUNCTION_26
0x4000587	      0xe800000000	                          call 0x400058c	       779	update-index.c	FUNCTION_26
0x400058c	        0x488b5308	                mov rdx, qword [rbx + 8]	       779	update-index.c	FUNCTION_26
0x4000590	             0x902	                     or dword [rdx], eax	       779	update-index.c	FUNCTION_26
0x4000592	            0x31c0	                            xor eax, eax	       793	update-index.c	FUNCTION_28
0x4000594	              0x5b	                                 pop rbx	       793	update-index.c	FUNCTION_28
0x4000595	              0xc3	                                     ret	       793	update-index.c	FUNCTION_28
