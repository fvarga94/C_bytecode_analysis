parse_arg	WHILE,1:ELSE,1:IF,3:DO,0:FOR,0:functions,0:SWITCH,0:CALL,6	66
0x4000040	              0x55	                                push rbp	        28	update-ref.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        28	update-ref.c	FUNCTION_1
0x4000042	          0x4889fd	                            mov rbp, rdi	        28	update-ref.c	FUNCTION_1
0x4000045	          0x4889f3	                            mov rbx, rsi	        28	update-ref.c	FUNCTION_1
0x4000048	        0x4883ec18	                           sub rsp, 0x18	        28	update-ref.c	FUNCTION_1
0x400004c	      0x48897c2408	                mov qword [rsp + 8], rdi	        28	update-ref.c	FUNCTION_1
0x4000051	           0xfb607	                   movzx eax, byte [rdi]	        29	update-ref.c	FUNCTION_1	IF_1
0x4000054	            0x3c22	                            cmp al, 0x22	        29	update-ref.c	FUNCTION_1	IF_1
0x4000056	            0x753e	                           jne 0x4000096	        29	update-ref.c	FUNCTION_1	IF_1
0x4000058	            0xeb76	                           jmp 0x40000d0	        29	update-ref.c	FUNCTION_1	IF_1
0x400005a	    0x660f1f440000	                    nop word [rax + rax]	        29	update-ref.c	FUNCTION_1	IF_1
0x4000060	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000065	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000068	      0xe800000000	                          call 0x400006d	       228	strbuf.h	FUNCTION_14	CALL_2
0x400006d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_14	CALL_2
0x4000071	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_14
0x4000075	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_14
0x4000079	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_14
0x400007d	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_14
0x4000081	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_14
0x4000085	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_14
0x4000089	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_14
0x400008d	      0x488b6c2408	                mov rbp, qword [rsp + 8]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000092	         0xfb64500	                   movzx eax, byte [rbp]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000096	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x4000098	            0x7462	                            je 0x40000fc	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x400009a	    0xf68000000000	                      test byte [rax], 1	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x40000a1	            0x7559	                           jne 0x40000fc	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x40000a3	        0x488d4501	                      lea rax, [rbp + 1]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000a7	      0x4889442408	                mov qword [rsp + 8], rax	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000ac	          0x488b03	                    mov rax, qword [rbx]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000af	         0xfb66d00	                   movzx ebp, byte [rbp]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x40000b3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_12
0x40000b6	            0x74a8	                            je 0x4000060	       141	strbuf.h	FUNCTION_12
0x40000b8	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_12
0x40000bc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c3	            0x75ac	                           jne 0x4000071	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c5	            0xeb99	                           jmp 0x4000060	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000c7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x40000d0	      0x488d542408	                      lea rdx, [rsp + 8]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000d5	          0x4889fe	                            mov rsi, rdi	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000d8	          0x4889df	                            mov rdi, rbx	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000db	      0xe800000000	                          call 0x40000e0	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e0	            0x85c0	                           test eax, eax	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e2	            0x7522	                           jne 0x4000106	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x40000e4	      0x488b542408	                mov rdx, qword [rsp + 8]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000e9	           0xfb602	                   movzx eax, byte [rdx]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000ec	            0x84c0	                             test al, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000ee	            0x7409	                            je 0x40000f9	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f0	    0xf68000000000	                      test byte [rax], 1	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f7	            0x741c	                            je 0x4000115	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000f9	          0x4889d5	                            mov rbp, rdx	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x40000fc	        0x4883c418	                           add rsp, 0x18	        42	update-ref.c	FUNCTION_1
0x4000100	          0x4889e8	                            mov rax, rbp	        42	update-ref.c	FUNCTION_1
0x4000103	              0x5b	                                 pop rbx	        42	update-ref.c	FUNCTION_1
0x4000104	              0x5d	                                 pop rbp	        42	update-ref.c	FUNCTION_1
0x4000105	              0xc3	                                     ret	        42	update-ref.c	FUNCTION_1
0x4000106	          0x4889ee	                            mov rsi, rbp	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000109	      0xbf00000000	                              mov edi, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x400010e	            0x31c0	                            xor eax, eax	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000110	      0xe800000000	                          call 0x4000115	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000115	          0x4889ee	                            mov rsi, rbp	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x4000118	      0xbf00000000	                              mov edi, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x400011d	            0x31c0	                            xor eax, eax	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x400011f	      0xe800000000	                          call 0x4000124	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
cmd_update_ref	WHILE,0:ELSE,3:IF,16:DO,0:FOR,0:functions,0:SWITCH,0:CALL,36	724
0x4000310	            0x4157	                                push r15	       355	update-ref.c	FUNCTION_10
0x4000312	            0x4156	                                push r14	       355	update-ref.c	FUNCTION_10
0x4000314	      0xb938000000	                           mov ecx, 0x38	       361	update-ref.c	FUNCTION_10
0x4000319	            0x4155	                                push r13	       355	update-ref.c	FUNCTION_10
0x400031b	            0x4154	                                push r12	       355	update-ref.c	FUNCTION_10
0x400031d	          0x4989d4	                            mov r12, rdx	       355	update-ref.c	FUNCTION_10
0x4000320	              0x55	                                push rbp	       355	update-ref.c	FUNCTION_10
0x4000321	              0x53	                                push rbx	       355	update-ref.c	FUNCTION_10
0x4000322	            0x89fd	                            mov ebp, edi	       355	update-ref.c	FUNCTION_10
0x4000324	          0x4889f3	                            mov rbx, rsi	       355	update-ref.c	FUNCTION_10
0x4000327	            0x31f6	                            xor esi, esi	       372	update-ref.c	FUNCTION_10	CALL_15
0x4000329	    0x4881ece80200	                          sub rsp, 0x2e8	       355	update-ref.c	FUNCTION_10
0x4000330	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	update-ref.c	FUNCTION_10
0x4000339	    0x48898424d802	            mov qword [rsp + 0x2d8], rax	       355	update-ref.c	FUNCTION_10
0x4000341	            0x31c0	                            xor eax, eax	       355	update-ref.c	FUNCTION_10
0x4000343	    0x488dbc241001	                  lea rdi, [rsp + 0x110]	       361	update-ref.c	FUNCTION_10
0x400034b	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       358	update-ref.c	FUNCTION_10
0x4000353	    0xc74424200000	               mov dword [rsp + 0x20], 0	       358	update-ref.c	FUNCTION_10
0x400035b	    0xc74424240000	               mov dword [rsp + 0x24], 0	       358	update-ref.c	FUNCTION_10
0x4000363	    0xc74424280000	               mov dword [rsp + 0x28], 0	       358	update-ref.c	FUNCTION_10
0x400036b	          0xf348ab	              rep stosq qword [rdi], rax	       361	update-ref.c	FUNCTION_10
0x400036e	      0x488d44241c	                   lea rax, [rsp + 0x1c]	       361	update-ref.c	FUNCTION_10
0x4000373	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       360	update-ref.c	FUNCTION_10
0x400037b	    0xc78424100100	              mov dword [rsp + 0x110], 9	       361	update-ref.c	FUNCTION_10
0x4000386	    0xc78424140100	          mov dword [rsp + 0x114], 0x6d 	       361	update-ref.c	FUNCTION_10
0x4000391	    0x48c784242001	              mov qword [rsp + 0x120], 0	       361	update-ref.c	FUNCTION_10
0x400039d	      0xbf00000000	                              mov edi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x40003a2	    0x488984246001	            mov qword [rsp + 0x160], rax	       361	update-ref.c	FUNCTION_10
0x40003aa	      0x488d442420	                   lea rax, [rsp + 0x20]	       361	update-ref.c	FUNCTION_10
0x40003af	    0x48c784242801	              mov qword [rsp + 0x128], 0	       361	update-ref.c	FUNCTION_10
0x40003bb	    0x48c784243001	              mov qword [rsp + 0x130], 0	       361	update-ref.c	FUNCTION_10
0x40003c7	    0xc78424500100	              mov dword [rsp + 0x150], 7	       361	update-ref.c	FUNCTION_10
0x40003d2	    0x48898424a001	            mov qword [rsp + 0x1a0], rax	       361	update-ref.c	FUNCTION_10
0x40003da	      0x488d442428	                   lea rax, [rsp + 0x28]	       361	update-ref.c	FUNCTION_10
0x40003df	    0xc78424540100	          mov dword [rsp + 0x154], 0x64 	       361	update-ref.c	FUNCTION_10
0x40003ea	    0x48c784247001	              mov qword [rsp + 0x170], 0	       361	update-ref.c	FUNCTION_10
0x40003f6	    0xc78424780100	              mov dword [rsp + 0x178], 2	       361	update-ref.c	FUNCTION_10
0x4000401	    0x48c784248801	              mov qword [rsp + 0x188], 1	       361	update-ref.c	FUNCTION_10
0x400040d	    0xc78424900100	              mov dword [rsp + 0x190], 7	       361	update-ref.c	FUNCTION_10
0x4000418	    0x48c784249801	              mov qword [rsp + 0x198], 0	       361	update-ref.c	FUNCTION_10
0x4000424	    0x48c78424b001	              mov qword [rsp + 0x1b0], 0	       361	update-ref.c	FUNCTION_10
0x4000430	    0xc78424b80100	              mov dword [rsp + 0x1b8], 2	       361	update-ref.c	FUNCTION_10
0x400043b	    0x48c78424c801	              mov qword [rsp + 0x1c8], 1	       361	update-ref.c	FUNCTION_10
0x4000447	    0xc78424d00100	              mov dword [rsp + 0x1d0], 7	       361	update-ref.c	FUNCTION_10
0x4000452	    0xc78424d40100	          mov dword [rsp + 0x1d4], 0x7a 	       361	update-ref.c	FUNCTION_10
0x400045d	    0x48898424e001	            mov qword [rsp + 0x1e0], rax	       361	update-ref.c	FUNCTION_10
0x4000465	      0x488d442424	                   lea rax, [rsp + 0x24]	       361	update-ref.c	FUNCTION_10
0x400046a	    0x48c78424f001	              mov qword [rsp + 0x1f0], 0	       361	update-ref.c	FUNCTION_10
0x4000476	    0xc78424f80100	              mov dword [rsp + 0x1f8], 2	       361	update-ref.c	FUNCTION_10
0x4000481	    0x48c784240802	              mov qword [rsp + 0x208], 1	       361	update-ref.c	FUNCTION_10
0x400048d	    0x488984242002	            mov qword [rsp + 0x220], rax	       361	update-ref.c	FUNCTION_10
0x4000495	      0x488d44242c	                   lea rax, [rsp + 0x2c]	       361	update-ref.c	FUNCTION_10
0x400049a	    0xc78424100200	              mov dword [rsp + 0x210], 7	       361	update-ref.c	FUNCTION_10
0x40004a5	    0x48c784241802	              mov qword [rsp + 0x218], 0	       361	update-ref.c	FUNCTION_10
0x40004b1	    0x48c784243002	              mov qword [rsp + 0x230], 0	       361	update-ref.c	FUNCTION_10
0x40004bd	    0x488984246002	            mov qword [rsp + 0x260], rax	       361	update-ref.c	FUNCTION_10
0x40004c5	    0xc78424380200	              mov dword [rsp + 0x238], 2	       361	update-ref.c	FUNCTION_10
0x40004d0	    0x48c784244802	              mov qword [rsp + 0x248], 1	       361	update-ref.c	FUNCTION_10
0x40004dc	    0xc78424500200	              mov dword [rsp + 0x250], 7	       361	update-ref.c	FUNCTION_10
0x40004e7	    0x48c784245802	              mov qword [rsp + 0x258], 0	       361	update-ref.c	FUNCTION_10
0x40004f3	    0x48c784247002	              mov qword [rsp + 0x270], 0	       361	update-ref.c	FUNCTION_10
0x40004ff	    0xc78424780200	              mov dword [rsp + 0x278], 2	       361	update-ref.c	FUNCTION_10
0x400050a	    0x48c784248802	              mov qword [rsp + 0x288], 1	       361	update-ref.c	FUNCTION_10
0x4000516	      0xe800000000	                          call 0x400051b	       372	update-ref.c	FUNCTION_10	CALL_15
0x400051b	    0x488d8c241001	                  lea rcx, [rsp + 0x110]	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000523	          0x4531c9	                            xor r9d, r9d	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000526	            0x89ef	                            mov edi, ebp	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000528	    0x41b800000000	                              mov r8d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x400052e	          0x4c89e2	                            mov rdx, r12	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000531	          0x4889de	                            mov rsi, rbx	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000534	      0xe800000000	                          call 0x4000539	       373	update-ref.c	FUNCTION_10	CALL_16
0x4000539	            0x89c5	                            mov ebp, eax	       373	update-ref.c	FUNCTION_10	CALL_16
0x400053b	    0x488b05000000	            mov rax, qword [0x04000542] 	       375	update-ref.c	FUNCTION_10	IF_1
0x4000542	          0x4885c0	                           test rax, rax	       375	update-ref.c	FUNCTION_10	IF_1
0x4000545	            0x7409	                            je 0x4000550	       375	update-ref.c	FUNCTION_10	IF_1
0x4000547	          0x803800	                       cmp byte [rax], 0	       375	update-ref.c	FUNCTION_10	IF_1
0x400054a	     0xf844d0c0000	                            je 0x400119d	       375	update-ref.c	FUNCTION_10	IF_1
0x4000550	      0x837c242c01	               cmp dword [rsp + 0x2c], 1	       378	update-ref.c	FUNCTION_10
0x4000555	      0x448b7c2424	           mov r15d, dword [rsp + 0x24] 	       380	update-ref.c	FUNCTION_10	IF_2
0x400055a	            0x19c0	                            sbb eax, eax	       378	update-ref.c	FUNCTION_10
0x400055c	            0xf7d0	                                 not eax	       378	update-ref.c	FUNCTION_10
0x400055e	          0x83e002	                              and eax, 2	       378	update-ref.c	FUNCTION_10
0x4000561	          0x4585ff	                         test r15d, r15d	       380	update-ref.c	FUNCTION_10	IF_2
0x4000564	    0x890500000000	            mov dword [0x0400056a], eax 	       378	update-ref.c	FUNCTION_10
0x400056a	     0xf8560010000	                           jne 0x40006d0	       380	update-ref.c	FUNCTION_10	IF_2
0x4000570	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       399	update-ref.c	FUNCTION_10	IF_7
0x4000575	          0x4585c9	                           test r9d, r9d	       399	update-ref.c	FUNCTION_10	IF_7
0x4000578	     0xf852b0c0000	                           jne 0x40011a9	       399	update-ref.c	FUNCTION_10	IF_7
0x400057e	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       402	update-ref.c	FUNCTION_10	IF_8
0x4000583	          0x4585c0	                           test r8d, r8d	       402	update-ref.c	FUNCTION_10	IF_8
0x4000586	     0xf85e4000000	                           jne 0x4000670	       402	update-ref.c	FUNCTION_10	IF_8
0x400058c	          0x83ed02	                              sub ebp, 2	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x400058f	          0x83fd01	                              cmp ebp, 1	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000592	     0xf87110c0000	                            ja 0x40011a9	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x4000598	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       412	update-ref.c	FUNCTION_10	ELSE_1
0x400059c	    0x4c8db424d000	                   lea r14, [rsp + 0xd0]	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005a4	          0x488b2b	                    mov rbp, qword [rbx]	       411	update-ref.c	FUNCTION_10	ELSE_1
0x40005a7	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	       413	update-ref.c	FUNCTION_10	ELSE_1
0x40005ab	          0x4c89f6	                            mov rsi, r14	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005ae	          0x4c89ef	                            mov rdi, r13	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005b1	      0xe800000000	                          call 0x40005b6	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005b6	            0x85c0	                           test eax, eax	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005b8	     0xf85d00b0000	                           jne 0x400118e	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x40005be	          0x4d85e4	                           test r12, r12	       418	update-ref.c	FUNCTION_10	IF_12
0x40005c1	     0xf84850a0000	                            je 0x400104c	       418	update-ref.c	FUNCTION_10	IF_12
0x40005c7	      0x41803c2400	                       cmp byte [r12], 0	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40005cc	     0xf85ce000000	                           jne 0x40006a0	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40005d2	    0x488d9c24f000	                   lea rbx, [rsp + 0xf0]	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x40005da	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40005e6	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40005f2	    0xc78424000100	              mov dword [rsp + 0x100], 0	        90	string3.h	FUNCTION_25	CALL_6
0x40005fd	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x4000601	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	       431	update-ref.c	FUNCTION_10	IF_16
0x4000605	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x4000608	            0x85f6	                           test esi, esi	       359	update-ref.c	FUNCTION_10
0x400060a	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x400060e	            0x85ff	                           test edi, edi	       431	update-ref.c	FUNCTION_10	IF_16
0x4000610	     0xf848a090000	                            je 0x4000fa0	       431	update-ref.c	FUNCTION_10	IF_16
0x4000616	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x400061b	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000620	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_41	CALL_1
0x4000623	      0xe800000000	                          call 0x4000628	       975	cache.h	FUNCTION_41	CALL_1
0x4000628	      0xba00000000	                              mov edx, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400062d	            0x85c0	                           test eax, eax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400062f	        0x480f45d3	                         cmovne rdx, rbx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000633	    0x488b3d000000	            mov rdi, qword [0x0400063a] 	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400063a	          0x4489e1	                           mov ecx, r12d	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400063d	          0x4889ee	                            mov rsi, rbp	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000640	      0xe800000000	                          call 0x4000645	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4000645	    0x488b8c24d802	           mov rcx, qword [rsp + 0x2d8] 	       443	update-ref.c	FUNCTION_10
0x400064d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       443	update-ref.c	FUNCTION_10
0x4000656	     0xf852d0b0000	                           jne 0x4001189	       443	update-ref.c	FUNCTION_10
0x400065c	    0x4881c4e80200	                          add rsp, 0x2e8	       443	update-ref.c	FUNCTION_10
0x4000663	              0x5b	                                 pop rbx	       443	update-ref.c	FUNCTION_10
0x4000664	              0x5d	                                 pop rbp	       443	update-ref.c	FUNCTION_10
0x4000665	            0x415c	                                 pop r12	       443	update-ref.c	FUNCTION_10
0x4000667	            0x415d	                                 pop r13	       443	update-ref.c	FUNCTION_10
0x4000669	            0x415e	                                 pop r14	       443	update-ref.c	FUNCTION_10
0x400066b	            0x415f	                                 pop r15	       443	update-ref.c	FUNCTION_10
0x400066d	              0xc3	                                     ret	       443	update-ref.c	FUNCTION_10
0x400066e	            0x6690	                                     nop	       443	update-ref.c	FUNCTION_10
0x4000670	          0x83ed01	                              sub ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000673	          0x83fd01	                              cmp ebp, 1	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x4000676	     0xf872d0b0000	                            ja 0x40011a9	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x400067c	        0x4c8b6308	                mov r12, qword [rbx + 8]	       406	update-ref.c	FUNCTION_10	IF_8
0x4000680	          0x488b2b	                    mov rbp, qword [rbx]	       405	update-ref.c	FUNCTION_10	IF_8
0x4000683	          0x4d85e4	                           test r12, r12	       418	update-ref.c	FUNCTION_10	IF_12
0x4000686	     0xf853bffffff	                           jne 0x40005c7	       418	update-ref.c	FUNCTION_10	IF_12
0x400068c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x4000690	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x4000693	            0x85c0	                           test eax, eax	       359	update-ref.c	FUNCTION_10
0x4000695	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x4000699	            0x31d2	                            xor edx, edx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400069b	            0xeb96	                           jmp 0x4000633	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400069d	           0xf1f00	                         nop dword [rax]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x40006a0	    0x488d9c24f000	                   lea rbx, [rsp + 0xf0]	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006a8	          0x4c89e7	                            mov rdi, r12	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006ab	          0x4889de	                            mov rsi, rbx	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006ae	      0xe800000000	                          call 0x40006b3	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006b3	            0x85c0	                           test eax, eax	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006b5	     0xf8442ffffff	                            je 0x40005fd	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x40006bb	          0x4c89e6	                            mov rsi, r12	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40006be	      0xbf00000000	                              mov edi, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40006c3	            0x31c0	                            xor eax, eax	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40006c5	      0xe800000000	                          call 0x40006ca	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40006ca	    0x660f1f440000	                    nop word [rax + rax]	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x40006d0	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006d5	    0x48c744245000	               mov qword [rsp + 0x50], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006de	    0x48c744245800	               mov qword [rsp + 0x58], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006e7	    0x48c744246000	               mov qword [rsp + 0x60], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x40006f0	      0xe800000000	                          call 0x40006f5	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006f5	          0x4885c0	                           test rax, rax	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x40006f8	          0x4989c5	                            mov r13, rax	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x40006fb	     0xf84770a0000	                            je 0x4001178	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x4000701	      0x448b74241c	           mov r14d, dword [rsp + 0x1c] 	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000706	          0x4585f6	                         test r14d, r14d	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000709	     0xf859a0a0000	                           jne 0x40011a9	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x400070f	      0x448b642420	           mov r12d, dword [rsp + 0x20] 	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000714	          0x4585e4	                         test r12d, r12d	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000717	     0xf858c0a0000	                           jne 0x40011a9	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x400071d	            0x85ed	                           test ebp, ebp	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x400071f	     0xf8f840a0000	                            jg 0x40011a9	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x4000725	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000729	            0x85db	                           test ebx, ebx	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x400072b	     0xf850f090000	                           jne 0x4001040	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4000731	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000736	            0x31f6	                            xor esi, esi	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000738	      0xbae8030000	                          mov edx, 0x3e8	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x400073d	    0x48c744247000	               mov qword [rsp + 0x70], 0	       323	update-ref.c	FUNCTION_9
0x4000746	    0x48c744247800	               mov qword [rsp + 0x78], 0	       323	update-ref.c	FUNCTION_9
0x400074f	    0x48c784248000	               mov qword [rsp + 0x80], 0	       323	update-ref.c	FUNCTION_9
0x400075b	      0xe800000000	                          call 0x4000760	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000760	          0x4885c0	                           test rax, rax	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000763	     0xf88e5090000	                            js 0x400114e	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0x4000769	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	       328	update-ref.c	FUNCTION_9
0x4000771	          0x4889d8	                            mov rax, rbx	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000774	      0x4803442478	             add rax, qword [rsp + 0x78]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000779	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x400077c	     0xf8356080000	                           jae 0x4000fd8	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000782	           0xfb603	                   movzx eax, byte [rbx]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000785	    0x3a0500000000	               cmp al, byte [0x0400078b]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400078b	     0xf84ff080000	                            je 0x4001090	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000791	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000798	     0xf85fe080000	                           jne 0x400109c	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x400079e	    0x488dac24f000	                   lea rbp, [rsp + 0xf0]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x40007a6	    0x4c8da4249000	                   lea r12, [rsp + 0x90]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x40007ae	      0xe9d4010000	                           jmp 0x4000987	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x40007b3	       0xf1f440000	                   nop dword [rax + rax]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x40007b8	        0x4883c307	                              add rbx, 7	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0x40007bc	    0x803d00000000	                cmp byte [0x040007c3], 0	        56	update-ref.c	FUNCTION_2	IF_1
0x40007c3	    0x48c784249000	               mov qword [rsp + 0x90], 0	       183	update-ref.c	FUNCTION_4
0x40007cf	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       183	update-ref.c	FUNCTION_4
0x40007d4	    0x48c784249800	               mov qword [rsp + 0x98], 0	       183	update-ref.c	FUNCTION_4
0x40007e0	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       183	update-ref.c	FUNCTION_4
0x40007ec	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        54	update-ref.c	FUNCTION_2
0x40007f8	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        54	update-ref.c	FUNCTION_2
0x4000804	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	        54	update-ref.c	FUNCTION_2
0x4000810	     0xf840a030000	                            je 0x4000b20	        56	update-ref.c	FUNCTION_2	IF_1
0x4000816	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x400081e	          0x4889df	                            mov rdi, rbx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000821	      0xe81af8ffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000826	      0x4889442430	             mov qword [rsp + 0x30], rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x400082b	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000833	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000836	     0xf8415030000	                            je 0x4000b51	        65	update-ref.c	FUNCTION_2	IF_2
0x400083c	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000844	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000849	      0xe800000000	                          call 0x400084e	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x400084e	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000850	     0xf8555080000	                           jne 0x40010ab	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000856	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        73	update-ref.c	FUNCTION_2	CALL_6
0x400085e	            0x31f6	                            xor esi, esi	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000860	      0xe800000000	                          call 0x4000865	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000865	          0x4885c0	                           test rax, rax	       189	update-ref.c	FUNCTION_4	IF_1
0x4000868	          0x4889c3	                            mov rbx, rax	        73	update-ref.c	FUNCTION_2	CALL_6
0x400086b	     0xf84ed020000	                            je 0x4000b5e	       189	update-ref.c	FUNCTION_4	IF_1
0x4000871	    0x4c8db424d000	                   lea r14, [rsp + 0xd0]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000879	    0x4c8dbc248000	                   lea r15, [rsp + 0x80]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000881	        0x4883ec08	                              sub rsp, 8	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000885	            0x6a02	                                  push 2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000887	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400088f	          0x4989c1	                             mov r9, rax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000892	    0x41b800000000	                              mov r8d, 0	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x4000898	          0x4c89f1	                            mov rcx, r14	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400089b	          0x4c89fe	                            mov rsi, r15	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x400089e	      0x488d542440	                   lea rdx, [rsp + 0x40]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008a3	      0xe888f8ffff	          call sym.parse_next_oid.isra.2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008a8	            0x85c0	                           test eax, eax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008aa	            0x415a	                                 pop r10	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008ac	            0x415b	                                 pop r11	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008ae	     0xf852e080000	                           jne 0x40010e2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x40008b4	        0x4883ec08	                              sub rsp, 8	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008b8	          0x4989d9	                             mov r9, rbx	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008bb	    0x41b800000000	                              mov r8d, 0	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008c1	            0x6a01	                                  push 1	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008c3	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008cb	          0x4889e9	                            mov rcx, rbp	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008ce	          0x4c89fe	                            mov rsi, r15	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008d1	      0x488d542440	                   lea rdx, [rsp + 0x40]	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008d6	      0xe855f8ffff	          call sym.parse_next_oid.isra.2	       196	update-ref.c	FUNCTION_4	CALL_5
0x40008db	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       199	update-ref.c	FUNCTION_4	IF_3
0x40008e0	     0xfb60d000000	           movzx ecx, byte [0x040008e7] 	       199	update-ref.c	FUNCTION_4	IF_3
0x40008e7	            0x4158	                                  pop r8	       199	update-ref.c	FUNCTION_4	IF_3
0x40008e9	            0x4159	                                  pop r9	       199	update-ref.c	FUNCTION_4	IF_3
0x40008eb	            0x380a	                      cmp byte [rdx], cl	       199	update-ref.c	FUNCTION_4	IF_3
0x40008ed	     0xf85e0070000	                           jne 0x40010d3	       199	update-ref.c	FUNCTION_4	IF_3
0x40008f3	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008f5	      0xb900000000	                              mov ecx, 0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x40008fa	    0x448b05000000	            mov r8d, dword [0x04000901] 	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000901	        0x480f44cd	                          cmove rcx, rbp	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000905	    0x440b05000000	              or r8d, dword [0x0400090c]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400090c	        0x4883ec08	                              sub rsp, 8	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000910	    0x4c8b0d000000	              mov r9, qword [0x04000917]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000917	            0x4154	                                push r12	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000919	          0x4889de	                            mov rsi, rbx	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400091c	          0x4c89ef	                            mov rdi, r13	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400091f	          0x4c89f2	                            mov rdx, r14	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000922	      0xe800000000	                          call 0x4000927	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000927	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000929	              0x5e	                                 pop rsi	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400092a	              0x5f	                                 pop rdi	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x400092b	     0xf858e070000	                           jne 0x40010bf	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x4000931	          0x4889df	                            mov rdi, rbx	       209	update-ref.c	FUNCTION_4	CALL_9
0x4000934	    0xc70500000000	               mov dword [0x0400093e], 0	       208	update-ref.c	FUNCTION_4
0x400093e	      0xe800000000	                          call 0x4000943	       209	update-ref.c	FUNCTION_4	CALL_9
0x4000943	          0x4c89e7	                            mov rdi, r12	       210	update-ref.c	FUNCTION_4	CALL_10
0x4000946	      0xe800000000	                          call 0x400094b	       210	update-ref.c	FUNCTION_4	CALL_10
0x400094b	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       212	update-ref.c	FUNCTION_4
0x4000950	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000955	    0x480384248000	             add rax, qword [rsp + 0x80]	       330	update-ref.c	FUNCTION_9	WHILE_1
0x400095d	        0x488d5a01	                      lea rbx, [rdx + 1]	       348	update-ref.c	FUNCTION_9	WHILE_1
0x4000961	          0x4839c3	                            cmp rbx, rax	       330	update-ref.c	FUNCTION_9	WHILE_1
0x4000964	     0xf836e060000	                           jae 0x4000fd8	       330	update-ref.c	FUNCTION_9	WHILE_1
0x400096a	         0xfb64201	               movzx eax, byte [rdx + 1]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400096e	    0x3a0500000000	               cmp al, byte [0x04000974]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x4000974	     0xf8416070000	                            je 0x4001090	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0x400097a	    0xf68000000000	                      test byte [rax], 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000981	     0xf8515070000	                           jne 0x400109c	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0x4000987	      0xbe00000000	                              mov esi, 0	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x400098c	          0x4889df	                            mov rdi, rbx	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x400098f	      0xe800000000	                          call 0x4000994	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000994	            0x85c0	                           test eax, eax	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x4000996	     0xf851cfeffff	                           jne 0x40007b8	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0x400099c	      0xbe00000000	                              mov esi, 0	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x40009a1	          0x4889df	                            mov rdi, rbx	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x40009a4	      0xe800000000	                          call 0x40009a9	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x40009a9	            0x85c0	                           test eax, eax	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x40009ab	     0xf84bf010000	                            je 0x4000b70	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0x40009b1	        0x4883c307	                              add rbx, 7	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0x40009b5	    0x803d00000000	                cmp byte [0x040009bc], 0	        56	update-ref.c	FUNCTION_2	IF_1
0x40009bc	    0x48c784249000	               mov qword [rsp + 0x90], 0	       218	update-ref.c	FUNCTION_5
0x40009c8	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       218	update-ref.c	FUNCTION_5
0x40009cd	    0x48c784249800	               mov qword [rsp + 0x98], 0	       218	update-ref.c	FUNCTION_5
0x40009d9	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       218	update-ref.c	FUNCTION_5
0x40009e5	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        54	update-ref.c	FUNCTION_2
0x40009f1	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        54	update-ref.c	FUNCTION_2
0x40009fd	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	        54	update-ref.c	FUNCTION_2
0x4000a09	     0xf84e1020000	                            je 0x4000cf0	        56	update-ref.c	FUNCTION_2	IF_1
0x4000a0f	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000a17	          0x4889df	                            mov rdi, rbx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000a1a	      0xe821f6ffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000a1f	      0x4889442438	             mov qword [rsp + 0x38], rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000a24	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000a2c	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000a2f	     0xf84ec020000	                            je 0x4000d21	        65	update-ref.c	FUNCTION_2	IF_2
0x4000a35	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000a3d	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000a42	      0xe800000000	                          call 0x4000a47	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000a47	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000a49	     0xf855c060000	                           jne 0x40010ab	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000a4f	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000a57	            0x31f6	                            xor esi, esi	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000a59	      0xe800000000	                          call 0x4000a5e	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000a5e	          0x4885c0	                           test rax, rax	       223	update-ref.c	FUNCTION_5	IF_1
0x4000a61	          0x4889c3	                            mov rbx, rax	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000a64	     0xf84c4020000	                            je 0x4000d2e	       223	update-ref.c	FUNCTION_5	IF_1
0x4000a6a	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a72	        0x4883ec08	                              sub rsp, 8	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a76	          0x4889e9	                            mov rcx, rbp	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a79	            0x6a00	                                  push 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a7b	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a83	          0x4989c1	                             mov r9, rax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a86	    0x41b800000000	                              mov r8d, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a8c	      0x488d542448	                   lea rdx, [rsp + 0x48]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a91	      0xe89af6ffff	          call sym.parse_next_oid.isra.2	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a96	            0x85c0	                           test eax, eax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a98	              0x5a	                                 pop rdx	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a99	              0x59	                                 pop rcx	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000a9a	     0xf856d060000	                           jne 0x400110d	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x4000aa0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x4000aa5	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000aaa	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_41	CALL_1
0x4000aad	      0xe800000000	                          call 0x4000ab2	       975	cache.h	FUNCTION_41	CALL_1
0x4000ab2	            0x85c0	                           test eax, eax	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x4000ab4	     0xf8437060000	                            je 0x40010f1	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x4000aba	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       232	update-ref.c	FUNCTION_5	IF_4
0x4000abf	     0xfb605000000	           movzx eax, byte [0x04000ac6] 	       232	update-ref.c	FUNCTION_5	IF_4
0x4000ac6	            0x3802	                      cmp byte [rdx], al	       232	update-ref.c	FUNCTION_5	IF_4
0x4000ac8	     0xf8530060000	                           jne 0x40010fe	       232	update-ref.c	FUNCTION_5	IF_4
0x4000ace	    0x8b0d00000000	            mov ecx, dword [0x04000ad4] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ad4	     0xb0d00000000	              or ecx, dword [0x04000ada]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ada	          0x4d89e1	                             mov r9, r12	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000add	    0x4c8b05000000	              mov r8, qword [0x04000ae4]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ae4	          0x4889ea	                            mov rdx, rbp	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000ae7	          0x4889de	                            mov rsi, rbx	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000aea	          0x4c89ef	                            mov rdi, r13	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000aed	      0xe800000000	                          call 0x4000af2	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000af2	            0x85c0	                           test eax, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000af4	     0xf85c5050000	                           jne 0x40010bf	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x4000afa	          0x4889df	                            mov rdi, rbx	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000afd	    0xc70500000000	               mov dword [0x04000b07], 0	       240	update-ref.c	FUNCTION_5
0x4000b07	      0xe800000000	                          call 0x4000b0c	       241	update-ref.c	FUNCTION_5	CALL_10
0x4000b0c	          0x4c89e7	                            mov rdi, r12	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000b0f	      0xe800000000	                          call 0x4000b14	       242	update-ref.c	FUNCTION_5	CALL_11
0x4000b14	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       244	update-ref.c	FUNCTION_5
0x4000b19	      0xe932feffff	                           jmp 0x4000950	       244	update-ref.c	FUNCTION_5
0x4000b1e	            0x6690	                                     nop	       244	update-ref.c	FUNCTION_5
0x4000b20	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b23	      0xe800000000	                          call 0x4000b28	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b28	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b30	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b33	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b36	      0xe800000000	                          call 0x4000b3b	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000b3b	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000b43	      0x4801442430	            add qword [rsp + 0x30], rax 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000b48	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000b4b	     0xf85ebfcffff	                           jne 0x400083c	        65	update-ref.c	FUNCTION_2	IF_2
0x4000b51	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000b59	      0xe800000000	                          call 0x4000b5e	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000b5e	      0xbf00000000	                              mov edi, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000b63	            0x31c0	                            xor eax, eax	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000b65	      0xe800000000	                          call 0x4000b6a	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000b6a	    0x660f1f440000	                    nop word [rax + rax]	       190	update-ref.c	FUNCTION_4	CALL_2
0x4000b70	      0xbe00000000	                              mov esi, 0	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b75	          0x4889df	                            mov rdi, rbx	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b78	      0xe800000000	                          call 0x4000b7d	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b7d	            0x85c0	                           test eax, eax	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b7f	     0xf84bb010000	                            je 0x4000d40	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0x4000b85	        0x4883c307	                              add rbx, 7	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0x4000b89	    0x803d00000000	                cmp byte [0x04000b90], 0	        56	update-ref.c	FUNCTION_2	IF_1
0x4000b90	    0x48c784249000	               mov qword [rsp + 0x90], 0	       250	update-ref.c	FUNCTION_6
0x4000b9c	      0x48895c2440	             mov qword [rsp + 0x40], rbx	       250	update-ref.c	FUNCTION_6
0x4000ba1	    0x48c784249800	               mov qword [rsp + 0x98], 0	       250	update-ref.c	FUNCTION_6
0x4000bad	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       250	update-ref.c	FUNCTION_6
0x4000bb9	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        54	update-ref.c	FUNCTION_2
0x4000bc5	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        54	update-ref.c	FUNCTION_2
0x4000bd1	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	        54	update-ref.c	FUNCTION_2
0x4000bdd	     0xf84ed020000	                            je 0x4000ed0	        56	update-ref.c	FUNCTION_2	IF_1
0x4000be3	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000beb	          0x4889df	                            mov rdi, rbx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000bee	      0xe84df4ffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000bf3	      0x4889442440	             mov qword [rsp + 0x40], rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000bf8	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000c00	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000c03	     0xf84f8020000	                            je 0x4000f01	        65	update-ref.c	FUNCTION_2	IF_2
0x4000c09	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000c11	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000c16	      0xe800000000	                          call 0x4000c1b	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000c1b	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000c1d	     0xf8588040000	                           jne 0x40010ab	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000c23	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000c2b	            0x31f6	                            xor esi, esi	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000c2d	      0xe800000000	                          call 0x4000c32	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000c32	          0x4885c0	                           test rax, rax	       256	update-ref.c	FUNCTION_6	IF_1
0x4000c35	          0x4889c3	                            mov rbx, rax	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000c38	     0xf84d0020000	                            je 0x4000f0e	       256	update-ref.c	FUNCTION_6	IF_1
0x4000c3e	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c46	        0x4883ec08	                              sub rsp, 8	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c4a	          0x4989c1	                             mov r9, rax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c4d	            0x6a01	                                  push 1	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c4f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c57	    0x41b800000000	                              mov r8d, 0	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c5d	          0x4889e9	                            mov rcx, rbp	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c60	      0x488d542450	                   lea rdx, [rsp + 0x50]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c65	      0xe8c6f4ffff	          call sym.parse_next_oid.isra.2	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c6a	            0x85c0	                           test eax, eax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c6c	            0x415e	                                 pop r14	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c6e	            0x415f	                                 pop r15	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c70	     0xf852a020000	                           jne 0x4000ea0	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x4000c76	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_41	CALL_1
0x4000c7b	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_41	CALL_1
0x4000c80	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_41	CALL_1
0x4000c83	      0xe800000000	                          call 0x4000c88	       975	cache.h	FUNCTION_41	CALL_1
0x4000c88	            0x85c0	                           test eax, eax	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000c8a	     0xf84b1040000	                            je 0x4001141	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x4000c90	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000c95	     0xfb605000000	           movzx eax, byte [0x04000c9c] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000c9c	            0x3802	                      cmp byte [rdx], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000c9e	     0xf858e040000	                           jne 0x4001132	       268	update-ref.c	FUNCTION_6	IF_4
0x4000ca4	    0x4c8b05000000	              mov r8, qword [0x04000cab]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cab	    0x8b0d00000000	            mov ecx, dword [0x04000cb1] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cb1	          0x4889ea	                            mov rdx, rbp	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cb4	          0x4d89e1	                             mov r9, r12	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cb7	          0x4889de	                            mov rsi, rbx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cba	          0x4c89ef	                            mov rdi, r13	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cc2	            0x85c0	                           test eax, eax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cc4	     0xf85f5030000	                           jne 0x40010bf	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000cca	          0x4889df	                            mov rdi, rbx	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000ccd	    0xc70500000000	               mov dword [0x04000cd7], 0	       276	update-ref.c	FUNCTION_6
0x4000cd7	      0xe800000000	                          call 0x4000cdc	       277	update-ref.c	FUNCTION_6	CALL_9
0x4000cdc	          0x4c89e7	                            mov rdi, r12	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000cdf	      0xe800000000	                          call 0x4000ce4	       278	update-ref.c	FUNCTION_6	CALL_10
0x4000ce4	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       280	update-ref.c	FUNCTION_6
0x4000ce9	      0xe962fcffff	                           jmp 0x4000950	       280	update-ref.c	FUNCTION_6
0x4000cee	            0x6690	                                     nop	       280	update-ref.c	FUNCTION_6
0x4000cf0	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000cf3	      0xe800000000	                          call 0x4000cf8	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000cf8	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000d00	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000d03	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000d06	      0xe800000000	                          call 0x4000d0b	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000d0b	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000d13	      0x4801442438	            add qword [rsp + 0x38], rax 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000d18	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000d1b	     0xf8514fdffff	                           jne 0x4000a35	        65	update-ref.c	FUNCTION_2	IF_2
0x4000d21	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000d29	      0xe800000000	                          call 0x4000d2e	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000d2e	      0xbf00000000	                              mov edi, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000d33	            0x31c0	                            xor eax, eax	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000d35	      0xe800000000	                          call 0x4000d3a	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000d3a	    0x660f1f440000	                    nop word [rax + rax]	       224	update-ref.c	FUNCTION_5	CALL_2
0x4000d40	      0xbe00000000	                              mov esi, 0	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000d45	          0x4889df	                            mov rdi, rbx	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000d48	      0xe800000000	                          call 0x4000d4d	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000d4d	            0x85c0	                           test eax, eax	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000d4f	     0xf84cb010000	                            je 0x4000f20	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0x4000d55	        0x4883c307	                              add rbx, 7	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0x4000d59	    0x803d00000000	                cmp byte [0x04000d60], 0	        56	update-ref.c	FUNCTION_2	IF_1
0x4000d60	    0x48c784249000	               mov qword [rsp + 0x90], 0	       286	update-ref.c	FUNCTION_7
0x4000d6c	      0x48895c2448	             mov qword [rsp + 0x48], rbx	       286	update-ref.c	FUNCTION_7
0x4000d71	    0x48c784249800	               mov qword [rsp + 0x98], 0	       286	update-ref.c	FUNCTION_7
0x4000d7d	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       286	update-ref.c	FUNCTION_7
0x4000d89	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        54	update-ref.c	FUNCTION_2
0x4000d95	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        54	update-ref.c	FUNCTION_2
0x4000da1	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	        54	update-ref.c	FUNCTION_2
0x4000dad	     0xf84bd010000	                            je 0x4000f70	        56	update-ref.c	FUNCTION_2	IF_1
0x4000db3	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000dbb	          0x4889df	                            mov rdi, rbx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000dbe	      0xe87df2ffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000dc3	      0x4889442448	             mov qword [rsp + 0x48], rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000dc8	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x4000dd0	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000dd3	     0xf849d020000	                            je 0x4001076	        65	update-ref.c	FUNCTION_2	IF_2
0x4000dd9	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000de1	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000de6	      0xe800000000	                          call 0x4000deb	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000deb	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000ded	     0xf85b8020000	                           jne 0x40010ab	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x4000df3	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000dfb	            0x31f6	                            xor esi, esi	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000dfd	      0xe800000000	                          call 0x4000e02	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000e02	          0x4885c0	                           test rax, rax	       291	update-ref.c	FUNCTION_7	IF_1
0x4000e05	          0x4889c3	                            mov rbx, rax	        73	update-ref.c	FUNCTION_2	CALL_6
0x4000e08	     0xf8475020000	                            je 0x4001083	       291	update-ref.c	FUNCTION_7	IF_1
0x4000e0e	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e16	        0x4883ec08	                              sub rsp, 8	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e1a	          0x4989c1	                             mov r9, rax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e1d	            0x6a01	                                  push 1	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e1f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e27	    0x41b800000000	                              mov r8d, 0	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e2d	          0x4889e9	                            mov rcx, rbp	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e30	      0x488d542458	                   lea rdx, [rsp + 0x58]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e35	      0xe8f6f2ffff	          call sym.parse_next_oid.isra.2	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e3a	            0x85c0	                           test eax, eax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e3c	            0x415a	                                 pop r10	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e3e	            0x415b	                                 pop r11	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e40	     0xf85da010000	                           jne 0x4001020	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0x4000e46	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000e4b	     0xfb605000000	           movzx eax, byte [0x04000e52] 	       298	update-ref.c	FUNCTION_7	IF_3
0x4000e52	            0x3802	                      cmp byte [rdx], al	       298	update-ref.c	FUNCTION_7	IF_3
0x4000e54	     0xf850f030000	                           jne 0x4001169	       298	update-ref.c	FUNCTION_7	IF_3
0x4000e5a	    0x8b0d00000000	            mov ecx, dword [0x04000e60] 	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e60	          0x4d89e0	                             mov r8, r12	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e63	          0x4889ea	                            mov rdx, rbp	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e66	          0x4889de	                            mov rsi, rbx	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e69	          0x4c89ef	                            mov rdi, r13	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e6c	      0xe800000000	                          call 0x4000e71	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e71	            0x85c0	                           test eax, eax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e73	     0xf8546020000	                           jne 0x40010bf	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0x4000e79	          0x4889df	                            mov rdi, rbx	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000e7c	    0xc70500000000	               mov dword [0x04000e86], 0	       305	update-ref.c	FUNCTION_7
0x4000e86	      0xe800000000	                          call 0x4000e8b	       306	update-ref.c	FUNCTION_7	CALL_8
0x4000e8b	          0x4c89e7	                            mov rdi, r12	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000e8e	      0xe800000000	                          call 0x4000e93	       307	update-ref.c	FUNCTION_7	CALL_9
0x4000e93	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       309	update-ref.c	FUNCTION_7
0x4000e98	      0xe9b3faffff	                           jmp 0x4000950	       309	update-ref.c	FUNCTION_7
0x4000e9d	           0xf1f00	                         nop dword [rax]	       309	update-ref.c	FUNCTION_7
0x4000ea0	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000ea5	     0xfb605000000	           movzx eax, byte [0x04000eac] 	       268	update-ref.c	FUNCTION_6	IF_4
0x4000eac	            0x3802	                      cmp byte [rdx], al	       268	update-ref.c	FUNCTION_6	IF_4
0x4000eae	     0xf857e020000	                           jne 0x4001132	       268	update-ref.c	FUNCTION_6	IF_4
0x4000eb4	    0x4c8b05000000	              mov r8, qword [0x04000ebb]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ebb	    0x8b0d00000000	            mov ecx, dword [0x04000ec1] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ec1	            0x31d2	                            xor edx, edx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ec3	      0xe9ecfdffff	                           jmp 0x4000cb4	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ec8	     0xf1f84000000	                   nop dword [rax + rax]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0x4000ed0	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000ed3	      0xe800000000	                          call 0x4000ed8	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000ed8	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000ee0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000ee3	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000ee6	      0xe800000000	                          call 0x4000eeb	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000eeb	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000ef3	      0x4801442440	            add qword [rsp + 0x40], rax 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000ef8	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x4000efb	     0xf8508fdffff	                           jne 0x4000c09	        65	update-ref.c	FUNCTION_2	IF_2
0x4000f01	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000f09	      0xe800000000	                          call 0x4000f0e	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000f0e	      0xbf00000000	                              mov edi, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f13	            0x31c0	                            xor eax, eax	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f15	      0xe800000000	                          call 0x4000f1a	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f1a	    0x660f1f440000	                    nop word [rax + rax]	       257	update-ref.c	FUNCTION_6	CALL_2
0x4000f20	      0xbe00000000	                              mov esi, 0	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000f25	          0x4889df	                            mov rdi, rbx	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000f28	      0xe800000000	                          call 0x4000f2d	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000f2d	            0x85c0	                           test eax, eax	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000f2f	     0xf8425020000	                            je 0x400115a	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0x4000f35	        0x488d4307	                      lea rax, [rbx + 7]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0x4000f39	      0xbf00000000	                              mov edi, 0	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f3e	      0xb908000000	                              mov ecx, 8	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f43	          0x4889c6	                            mov rsi, rax	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f46	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f48	     0xf85d5010000	                           jne 0x4001123	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f4e	     0xfb60d000000	           movzx ecx, byte [0x04000f55] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f55	          0x384b0f	                cmp byte [rbx + 0xf], cl	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f58	     0xf85c5010000	                           jne 0x4001123	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0x4000f5e	    0x830d00000000	                or dword [0x04000f65], 1	       315	update-ref.c	FUNCTION_8	IF_1
0x4000f65	        0x488d530f	                    lea rdx, [rbx + 0xf]	       318	update-ref.c	FUNCTION_8
0x4000f69	      0xe9e2f9ffff	                           jmp 0x4000950	       318	update-ref.c	FUNCTION_8
0x4000f6e	            0x6690	                                     nop	       318	update-ref.c	FUNCTION_8
0x4000f70	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f73	      0xe800000000	                          call 0x4000f78	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f78	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f80	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f83	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f86	      0xe800000000	                          call 0x4000f8b	       279	strbuf.h	FUNCTION_15	CALL_2
0x4000f8b	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000f93	      0x4801442448	            add qword [rsp + 0x48], rax 	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000f98	      0xe933feffff	                           jmp 0x4000dd0	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000f9d	           0xf1f00	                         nop dword [rax]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x4000fa0	    0x448b05000000	            mov r8d, dword [0x04000fa7] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fa7	    0x4c8db424d000	                   lea r14, [rsp + 0xd0]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000faf	          0x4889d9	                            mov rcx, rbx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fb2	          0x4509e0	                            or r8d, r12d	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fb5	    0x488b3d000000	            mov rdi, qword [0x04000fbc] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fbc	    0x41b901000000	                              mov r9d, 1	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fc2	          0x4c89f2	                            mov rdx, r14	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fc5	          0x4889ee	                            mov rsi, rbp	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fc8	      0xe800000000	                          call 0x4000fcd	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fcd	      0xe973f6ffff	                           jmp 0x4000645	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fd2	    0x660f1f440000	                    nop word [rax + rax]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4000fd8	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000fdd	      0xe800000000	                          call 0x4000fe2	       351	update-ref.c	FUNCTION_9	CALL_17
0x4000fe2	      0x488d742450	                   lea rsi, [rsp + 0x50]	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000fe7	          0x4c89ef	                            mov rdi, r13	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000fea	      0xe800000000	                          call 0x4000fef	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000fef	            0x85c0	                           test eax, eax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000ff1	     0xf8581010000	                           jne 0x4001178	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x4000ff7	          0x4c89ef	                            mov rdi, r13	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000ffa	        0x8944240c	              mov dword [rsp + 0xc], eax	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4000ffe	      0xe800000000	                          call 0x4001003	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x4001003	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4001008	      0xe800000000	                          call 0x400100d	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x400100d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4001011	      0xe92ff6ffff	                           jmp 0x4000645	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4001016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x4001020	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4001028	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4001030	    0xc74510000000	               mov dword [rbp + 0x10], 0	        90	string3.h	FUNCTION_25	CALL_6
0x4001037	      0xe90afeffff	                           jmp 0x4000e46	        90	string3.h	FUNCTION_25	CALL_6
0x400103c	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_25	CALL_6
0x4001040	    0xc60500000000	                mov byte [0x04001047], 0	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x4001047	      0xe9e5f6ffff	                           jmp 0x4000731	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x400104c	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       359	update-ref.c	FUNCTION_10
0x4001050	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       431	update-ref.c	FUNCTION_10	IF_16
0x4001054	          0x4531e4	                          xor r12d, r12d	       359	update-ref.c	FUNCTION_10
0x4001057	            0x85d2	                           test edx, edx	       359	update-ref.c	FUNCTION_10
0x4001059	        0x410f95c4	                              setne r12b	       359	update-ref.c	FUNCTION_10
0x400105d	            0x85c9	                           test ecx, ecx	       431	update-ref.c	FUNCTION_10	IF_16
0x400105f	     0xf85b7000000	                           jne 0x400111c	       431	update-ref.c	FUNCTION_10	IF_16
0x4001065	    0x448b05000000	            mov r8d, dword [0x0400106c] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x400106c	            0x31c9	                            xor ecx, ecx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x400106e	          0x4509e0	                            or r8d, r12d	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4001071	      0xe93fffffff	                           jmp 0x4000fb5	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x4001076	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x400107e	      0xe800000000	                          call 0x4001083	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x4001083	      0xbf00000000	                              mov edi, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0x4001088	            0x31c0	                            xor eax, eax	       292	update-ref.c	FUNCTION_7	CALL_2
0x400108a	      0xe800000000	                          call 0x400108f	       292	update-ref.c	FUNCTION_7	CALL_2
0x400108f	              0x90	                                     nop	       292	update-ref.c	FUNCTION_7	CALL_2
0x4001090	      0xbf00000000	                              mov edi, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x4001095	            0x31c0	                            xor eax, eax	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x4001097	      0xe800000000	                          call 0x400109c	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0x400109c	          0x4889de	                            mov rsi, rbx	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x400109f	      0xbf00000000	                              mov edi, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40010a4	            0x31c0	                            xor eax, eax	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40010a6	      0xe800000000	                          call 0x40010ab	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0x40010ab	    0x488bb424c000	            mov rsi, qword [rsp + 0xc0] 	        71	update-ref.c	FUNCTION_2	CALL_5
0x40010b3	      0xbf00000000	                              mov edi, 0	        71	update-ref.c	FUNCTION_2	CALL_5
0x40010b8	            0x31c0	                            xor eax, eax	        71	update-ref.c	FUNCTION_2	CALL_5
0x40010ba	      0xe800000000	                          call 0x40010bf	        71	update-ref.c	FUNCTION_2	CALL_5
0x40010bf	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       303	update-ref.c	FUNCTION_7	CALL_7
0x40010c7	      0xbf00000000	                              mov edi, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0x40010cc	            0x31c0	                            xor eax, eax	       303	update-ref.c	FUNCTION_7	CALL_7
0x40010ce	      0xe800000000	                          call 0x40010d3	       303	update-ref.c	FUNCTION_7	CALL_7
0x40010d3	          0x4889de	                            mov rsi, rbx	       200	update-ref.c	FUNCTION_4	CALL_6
0x40010d6	      0xbf00000000	                              mov edi, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x40010db	            0x31c0	                            xor eax, eax	       200	update-ref.c	FUNCTION_4	CALL_6
0x40010dd	      0xe800000000	                          call 0x40010e2	       200	update-ref.c	FUNCTION_4	CALL_6
0x40010e2	          0x4889de	                            mov rsi, rbx	       194	update-ref.c	FUNCTION_4	CALL_4
0x40010e5	      0xbf00000000	                              mov edi, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x40010ea	            0x31c0	                            xor eax, eax	       194	update-ref.c	FUNCTION_4	CALL_4
0x40010ec	      0xe800000000	                          call 0x40010f1	       194	update-ref.c	FUNCTION_4	CALL_4
0x40010f1	          0x4889de	                            mov rsi, rbx	       230	update-ref.c	FUNCTION_5	CALL_6
0x40010f4	      0xbf00000000	                              mov edi, 0	       230	update-ref.c	FUNCTION_5	CALL_6
0x40010f9	      0xe800000000	                          call 0x40010fe	       230	update-ref.c	FUNCTION_5	CALL_6
0x40010fe	          0x4889de	                            mov rsi, rbx	       233	update-ref.c	FUNCTION_5	CALL_7
0x4001101	      0xbf00000000	                              mov edi, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x4001106	            0x31c0	                            xor eax, eax	       233	update-ref.c	FUNCTION_5	CALL_7
0x4001108	      0xe800000000	                          call 0x400110d	       233	update-ref.c	FUNCTION_5	CALL_7
0x400110d	          0x4889de	                            mov rsi, rbx	       227	update-ref.c	FUNCTION_5	CALL_4
0x4001110	      0xbf00000000	                              mov edi, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x4001115	            0x31c0	                            xor eax, eax	       227	update-ref.c	FUNCTION_5	CALL_4
0x4001117	      0xe800000000	                          call 0x400111c	       227	update-ref.c	FUNCTION_5	CALL_4
0x400111c	            0x31d2	                            xor edx, edx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x400111e	      0xe910f5ffff	                           jmp 0x4000633	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x4001123	          0x4889c6	                            mov rsi, rax	       317	update-ref.c	FUNCTION_8	CALL_2
0x4001126	      0xbf00000000	                              mov edi, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0x400112b	            0x31c0	                            xor eax, eax	       317	update-ref.c	FUNCTION_8	CALL_2
0x400112d	      0xe800000000	                          call 0x4001132	       317	update-ref.c	FUNCTION_8	CALL_2
0x4001132	          0x4889de	                            mov rsi, rbx	       269	update-ref.c	FUNCTION_6	CALL_6
0x4001135	      0xbf00000000	                              mov edi, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0x400113a	            0x31c0	                            xor eax, eax	       269	update-ref.c	FUNCTION_6	CALL_6
0x400113c	      0xe800000000	                          call 0x4001141	       269	update-ref.c	FUNCTION_6	CALL_6
0x4001141	          0x4889de	                            mov rsi, rbx	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4001144	      0xbf00000000	                              mov edi, 0	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x4001149	      0xe800000000	                          call 0x400114e	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x400114e	      0xbf00000000	                              mov edi, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0x4001153	            0x31c0	                            xor eax, eax	       327	update-ref.c	FUNCTION_9	CALL_2
0x4001155	      0xe800000000	                          call 0x400115a	       327	update-ref.c	FUNCTION_9	CALL_2
0x400115a	          0x4889de	                            mov rsi, rbx	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x400115d	      0xbf00000000	                              mov edi, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4001162	            0x31c0	                            xor eax, eax	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4001164	      0xe800000000	                          call 0x4001169	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0x4001169	          0x4889de	                            mov rsi, rbx	       299	update-ref.c	FUNCTION_7	CALL_5
0x400116c	      0xbf00000000	                              mov edi, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0x4001171	            0x31c0	                            xor eax, eax	       299	update-ref.c	FUNCTION_7	CALL_5
0x4001173	      0xe800000000	                          call 0x4001178	       299	update-ref.c	FUNCTION_7	CALL_5
0x4001178	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x400117d	      0xbf00000000	                              mov edi, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4001182	            0x31c0	                            xor eax, eax	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4001184	      0xe800000000	                          call 0x4001189	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x4001189	      0xe800000000	                          call 0x400118e	       443	update-ref.c	FUNCTION_10
0x400118e	          0x4c89ee	                            mov rsi, r13	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4001191	      0xbf00000000	                              mov edi, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4001196	            0x31c0	                            xor eax, eax	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x4001198	      0xe800000000	                          call 0x400119d	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x400119d	      0xbf00000000	                              mov edi, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x40011a2	            0x31c0	                            xor eax, eax	       376	update-ref.c	FUNCTION_10	CALL_17
0x40011a4	      0xe800000000	                          call 0x40011a9	       376	update-ref.c	FUNCTION_10	CALL_17
0x40011a9	    0x488db4241001	                  lea rsi, [rsp + 0x110]	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x40011b1	      0xbf00000000	                              mov edi, 0	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x40011b6	      0xe800000000	               call obj.line_termination	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
