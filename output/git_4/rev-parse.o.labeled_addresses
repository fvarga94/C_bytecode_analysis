die_no_single_rev	CALL,2:FOR,0:DO,0:SWITCH,0:IF,1:WHILE,0:ELSE,1:functions,0	7
0x4000077	               0x0	                      add byte [rax], al	       538	rev-parse.c	FUNCTION_19	IF_1
0x4000079	      0xbf27000000	               add byte [rdi + 0x27], bh	       537	rev-parse.c	FUNCTION_19
0x400007f	      0xe800000000	                          call 0x4000084	       539	rev-parse.c	FUNCTION_19	CALL_1
0x4000084	    0x488b35000000	            mov rsi, qword [0x0400008b] 	       539	rev-parse.c	FUNCTION_19	CALL_1
0x400008b	        0x4883c408	                              add rsp, 8	       541	rev-parse.c	FUNCTION_19	CALL_2
0x400008f	              0xbf	                                 invalid	       541	rev-parse.c	FUNCTION_19	CALL_2
0x4000090	            0x2000	                      and byte [rax], al	       541	rev-parse.c	FUNCTION_19	CALL_2
anti_reference	CALL,1:FOR,0:DO,0:SWITCH,0:IF,0:WHILE,0:ELSE,0:functions,0	12
0x4000680	    0xf60500000000	               test byte [0x04000687], 1	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000687	            0x7507	                           jne 0x4000690	       127	rev-parse.c	FUNCTION_4	IF_1
0x4000689	            0x31c0	                            xor eax, eax	       207	rev-parse.c	FUNCTION_8
0x400068b	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
0x400068c	         0xf1f4000	                         nop dword [rax]	       207	rev-parse.c	FUNCTION_8
0x4000690	        0x4883ec08	                              sub rsp, 8	       204	rev-parse.c	FUNCTION_8
0x4000694	          0x4889fa	                            mov rdx, rdi	       204	rev-parse.c	FUNCTION_8
0x4000697	      0xbf01000000	                              mov edi, 1	       204	rev-parse.c	FUNCTION_8
0x400069c	      0xe8dffbffff	                call sym.show_rev.part.4	       204	rev-parse.c	FUNCTION_8
0x40006a1	            0x31c0	                            xor eax, eax	       207	rev-parse.c	FUNCTION_8
0x40006a3	        0x4883c408	                              add rsp, 8	       207	rev-parse.c	FUNCTION_8
0x40006a7	              0xc3	                                     ret	       207	rev-parse.c	FUNCTION_8
parseopt_dump	CALL,6:FOR,0:DO,0:SWITCH,0:IF,5:WHILE,0:ELSE,3:functions,0	91
0x4000130	            0x85d2	                           test edx, edx	       367	rev-parse.c	FUNCTION_14	IF_1
0x4000132	            0x4154	                                push r12	       365	rev-parse.c	FUNCTION_14
0x4000134	          0x4989f4	                            mov r12, rsi	       365	rev-parse.c	FUNCTION_14
0x4000137	              0x55	                                push rbp	       365	rev-parse.c	FUNCTION_14
0x4000138	          0x4889fd	                            mov rbp, rdi	       365	rev-parse.c	FUNCTION_14
0x400013b	              0x53	                                push rbx	       365	rev-parse.c	FUNCTION_14
0x400013c	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       366	rev-parse.c	FUNCTION_14
0x4000140	     0xf85b2000000	                           jne 0x40001f8	       367	rev-parse.c	FUNCTION_14	IF_1
0x4000146	          0x8b4704	                mov eax, dword [rdi + 4]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000149	        0x488b5708	                mov rdx, qword [rdi + 8]	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400014d	            0x85c0	                           test eax, eax	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400014f	     0xf848b000000	                            je 0x40001e0	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000155	          0x4885d2	                           test rdx, rdx	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000158	            0x740a	                            je 0x4000164	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400015a	    0x8b0d00000000	            mov ecx, dword [0x04000160] 	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000160	            0x85c9	                           test ecx, ecx	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000162	            0x757c	                           jne 0x40001e0	       369	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000164	            0x89c2	                            mov edx, eax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000166	      0xbe00000000	                              mov esi, 0	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400016b	          0x4889df	                            mov rdi, rbx	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x400016e	            0x31c0	                            xor eax, eax	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000170	      0xe800000000	                          call 0x4000175	       370	rev-parse.c	FUNCTION_14	ELSE_1	IF_2
0x4000175	          0x4d85e4	                           test r12, r12	       373	rev-parse.c	FUNCTION_14	IF_3
0x4000178	            0x7459	                            je 0x40001d3	       373	rev-parse.c	FUNCTION_14	IF_3
0x400017a	    0x8b0500000000	            mov eax, dword [0x04000180] 	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000180	            0x85c0	                           test eax, eax	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000182	     0xf8488000000	                            je 0x4000210	       374	rev-parse.c	FUNCTION_14	IF_3	IF_4
0x4000188	      0x48837d0800	                  cmp qword [rbp + 8], 0	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x400018d	            0x7439	                            je 0x40001c8	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x400018f	          0x488b03	                    mov rax, qword [rbx]	       376	rev-parse.c	FUNCTION_14	IF_3	ELSE_3	IF_5
0x4000192	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000195	     0xf85ad000000	                           jne 0x4000248	       141	strbuf.h	FUNCTION_24
0x400019b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001a0	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001a3	      0xe800000000	                          call 0x40001a8	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001a8	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x40001ac	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x40001b0	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x40001b4	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x40001b8	        0xc604103d	              mov byte [rax + rdx], 0x3d	       229	strbuf.h	FUNCTION_26
0x40001bc	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x40001c0	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x40001c4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x40001c8	          0x4c89e6	                            mov rsi, r12	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40001cb	          0x4889df	                            mov rdi, rbx	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40001ce	      0xe800000000	                          call 0x40001d3	       378	rev-parse.c	FUNCTION_14	IF_3	CALL_6
0x40001d3	              0x5b	                                 pop rbx	       381	rev-parse.c	FUNCTION_14
0x40001d4	            0x31c0	                            xor eax, eax	       381	rev-parse.c	FUNCTION_14
0x40001d6	              0x5d	                                 pop rbp	       381	rev-parse.c	FUNCTION_14
0x40001d7	            0x415c	                                 pop r12	       381	rev-parse.c	FUNCTION_14
0x40001d9	              0xc3	                                     ret	       381	rev-parse.c	FUNCTION_14
0x40001da	    0x660f1f440000	                    nop word [rax + rax]	       381	rev-parse.c	FUNCTION_14
0x40001e0	      0xbe00000000	                              mov esi, 0	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001e5	          0x4889df	                            mov rdi, rbx	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001e8	            0x31c0	                            xor eax, eax	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001ea	      0xe800000000	                          call 0x40001ef	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001ef	            0xeb84	                           jmp 0x4000175	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001f1	     0xf1f80000000	                         nop dword [rax]	       372	rev-parse.c	FUNCTION_14	CALL_3
0x40001f8	        0x488b5708	                mov rdx, qword [rdi + 8]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x40001fc	      0xbe00000000	                              mov esi, 0	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000201	          0x4889df	                            mov rdi, rbx	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000204	            0x31c0	                            xor eax, eax	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000206	      0xe800000000	                          call 0x400020b	       368	rev-parse.c	FUNCTION_14	CALL_1
0x400020b	      0xe965ffffff	                           jmp 0x4000175	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000210	          0x488b03	                    mov rax, qword [rbx]	       368	rev-parse.c	FUNCTION_14	CALL_1
0x4000213	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_24
0x4000216	            0x7448	                            je 0x4000260	       141	strbuf.h	FUNCTION_24
0x4000218	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_24
0x400021c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000220	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000223	            0x743b	                            je 0x4000260	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000225	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_26
0x4000229	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_26
0x400022d	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_26
0x4000231	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_26
0x4000235	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_26
0x4000239	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_26
0x400023d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_26
0x4000241	            0xeb85	                           jmp 0x40001c8	       230	strbuf.h	FUNCTION_26
0x4000243	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_26
0x4000248	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_24
0x400024c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000250	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000253	     0xf8553ffffff	                           jne 0x40001ac	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000259	      0xe93dffffff	                           jmp 0x400019b	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x400025e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_26	IF_1	CALL_1
0x4000260	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000265	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000268	      0xe800000000	                          call 0x400026d	       228	strbuf.h	FUNCTION_26	CALL_2
0x400026d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_26	CALL_2
0x4000271	            0xebb2	                           jmp 0x4000225	       228	strbuf.h	FUNCTION_26	CALL_2
handle_ref_opt	CALL,3:FOR,0:DO,0:SWITCH,0:IF,1:WHILE,0:ELSE,1:functions,0	18
0x4000040	    0x8b0500000000	            mov eax, dword [0x04000046] 	       571	rev-parse.c	FUNCTION_21
0x4000046	            0x85c0	                           test eax, eax	       571	rev-parse.c	FUNCTION_21
0x4000048	     0xf849a000000	                            je 0x40000e8	       572	rev-parse.c	FUNCTION_21	IF_1
0x400004e	              0x55	                                push rbp	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400004f	              0x53	                                push rbx	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000050	          0x4889fb	                            mov rbx, rdi	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000053	      0xbf27000000	                           mov edi, 0x27	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000058	        0x488d6b01	                      lea rbp, [rbx + 1]	       573	rev-parse.c	FUNCTION_21	CALL_1
0x400005c	        0x4883ec08	                              sub rsp, 8	       573	rev-parse.c	FUNCTION_21	CALL_1
0x4000060	    0x488b35000000	            mov rsi, qword [0x04000067] 	       575	rev-parse.c	FUNCTION_21	CALL_2
0x4000067	      0xe800000000	                          call 0x400006c	       575	rev-parse.c	FUNCTION_21	CALL_2
0x400006c	           0xfbe1b	                   movsx ebx, byte [rbx]	       577	rev-parse.c	FUNCTION_21
0x400006f	            0x85db	                           test ebx, ebx	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000071	            0x7567	                           jne 0x40000da	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000073	              0x48	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000074	              0x8b	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000075	              0x35	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
0x4000076	               0x0	                                 invalid	       576	rev-parse.c	FUNCTION_21	CALL_3
