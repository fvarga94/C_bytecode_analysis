prepare_to_write_split_index	ELSE,1:WHILE,0:FOR,3:IF,10:functions,0:CALL,10:SWITCH,0:DO,0	250
0x40005e0	            0x4157	                                push r15	       177	split-index.c	FUNCTION_9
0x40005e2	            0x4156	                                push r14	       177	split-index.c	FUNCTION_9
0x40005e4	            0x4155	                                push r13	       177	split-index.c	FUNCTION_9
0x40005e6	            0x4154	                                push r12	       177	split-index.c	FUNCTION_9
0x40005e8	          0x4989fc	                            mov r12, rdi	       177	split-index.c	FUNCTION_9
0x40005eb	              0x55	                                push rbp	       177	split-index.c	FUNCTION_9
0x40005ec	              0x53	                                push rbx	       177	split-index.c	FUNCTION_9
0x40005ed	        0x4883ec28	                           sub rsp, 0x28	       177	split-index.c	FUNCTION_9
0x40005f1	        0x4c8b7728	            mov r14, qword [rdi + 0x28] 	         7	split-index.c	FUNCTION_1	IF_1
0x40005f5	          0x4d85f6	                           test r14, r14	         7	split-index.c	FUNCTION_1	IF_1
0x40005f8	     0xf845d030000	                            je 0x400095b	         7	split-index.c	FUNCTION_1	IF_1
0x40005fe	      0xe800000000	                          call 0x4000603	       182	split-index.c	FUNCTION_9	CALL_2
0x4000603	        0x49894620	             mov qword [r14 + 0x20], rax	       182	split-index.c	FUNCTION_9	CALL_2
0x4000607	      0xe800000000	                          call 0x400060c	       183	split-index.c	FUNCTION_9	CALL_3
0x400060c	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       185	split-index.c	FUNCTION_9	IF_1
0x4000610	        0x49894628	             mov qword [r14 + 0x28], rax	       183	split-index.c	FUNCTION_9	CALL_3
0x4000614	          0x4885d2	                           test rdx, rdx	       185	split-index.c	FUNCTION_9	IF_1
0x4000617	     0xf8424030000	                            je 0x4000941	       185	split-index.c	FUNCTION_9	IF_1
0x400061d	      0x418b7c240c	              mov edi, dword [r12 + 0xc]	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000622	            0x31db	                            xor ebx, ebx	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000624	            0x85ff	                           test edi, edi	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000626	          0x4189f9	                            mov r9d, edi	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000629	     0xf842b020000	                            je 0x400085a	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400062f	              0x90	                                     nop	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000630	        0x498b0424	                    mov rax, qword [r12]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000634	        0x488b2cd8	            mov rbp, qword [rax + rbx*8]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000638	          0x8b4540	            mov eax, dword [rbp + 0x40] 	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x400063b	            0x85c0	                           test eax, eax	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x400063d	            0x7441	                            je 0x4000680	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x400063f	          0x3b420c	              cmp eax, dword [rdx + 0xc]	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000642	            0x7732	                            ja 0x4000676	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000644	          0x8d48ff	                      lea ecx, [rax - 1]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000647	          0x488b02	                    mov rax, qword [rdx]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400064a	        0x448b4538	            mov r8d, dword [rbp + 0x38] 	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400064e	        0x4c8b2cc8	            mov r13, qword [rax + rcx*8]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000652	          0x4589c7	                           mov r15d, r8d	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000655	    0x4181cf000000	          or r15d, loc.imp.discard_index	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400065c	        0x44897d38	           mov dword [rbp + 0x38], r15d 	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000660	          0x4c39ed	                            cmp rbp, r13	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0x4000663	     0xf84d0020000	                            je 0x4000939	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0x4000669	        0x418b453c	            mov eax, dword [r13 + 0x3c] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x400066d	          0x39453c	            cmp dword [rbp + 0x3c], eax 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000670	     0xf842a020000	                            je 0x40008a0	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000676	    0xc74540000000	               mov dword [rbp + 0x40], 0	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x400067d	          0x4489cf	                            mov edi, r9d	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000680	          0x8d4301	                      lea eax, [rbx + 1]	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000683	        0x4883c301	                              add rbx, 1	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000687	          0x4439c8	                            cmp eax, r9d	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400068a	            0x72a4	                            jb 0x4000630	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400068c	          0x8b4a0c	              mov ecx, dword [rdx + 0xc]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x400068f	            0x85c9	                           test ecx, ecx	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000691	     0xf84e7020000	                            je 0x400097e	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000697	          0x4531ed	                          xor r13d, r13d	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400069a	            0x31ed	                            xor ebp, ebp	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400069c	            0x31db	                            xor ebx, ebx	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400069e	    0x48c744240800	                  mov qword [rsp + 8], 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006a7	            0xeb45	                           jmp 0x40006ee	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006a9	     0xf1f80000000	                         nop dword [rax]	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006b0	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x40006b4	          0x4c89ee	                            mov rsi, r13	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x40006b7	      0xe800000000	                          call 0x40006bc	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x40006bc	        0x498d7f44	                   lea rdi, [r15 + 0x44]	       975	cache.h	FUNCTION_23	CALL_1
0x40006c0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_23	CALL_1
0x40006c5	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_23	CALL_1
0x40006ca	      0xe800000000	                          call 0x40006cf	       975	cache.h	FUNCTION_23	CALL_1
0x40006cf	            0x85c0	                           test eax, eax	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_9
0x40006d1	            0x7506	                           jne 0x40006d9	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_9
0x40006d3	    0x41804c243804	                 or byte [r12 + 0x38], 4	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0x40006d9	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006dd	        0x418d4501	                      lea eax, [r13 + 1]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006e1	        0x4983c501	                              add r13, 1	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006e5	          0x39420c	              cmp dword [rdx + 0xc], eax	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006e8	     0xf8692000000	                           jbe 0x4000780	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006ee	          0x488b02	                    mov rax, qword [rdx]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006f1	        0x4e8b3ce8	            mov r15, qword [rax + r13*8]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006f5	        0x418b4738	            mov eax, dword [r15 + 0x38] 	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x40006f9	            0x89c2	                            mov edx, eax	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x40006fb	    0x81e200000204	                      and edx, 0x4020000	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x4000701	    0x81fa00000004	         cmp edx, loc.imp.discard_index 	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x4000707	            0x75a7	                           jne 0x40006b0	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x4000709	      0xa900000008	                  test eax, section_end.	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400070e	            0x74ac	                            je 0x40006bc	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000710	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0x4000714	          0x4c89ee	                            mov rsi, r13	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0x4000717	      0xe800000000	                          call 0x400071c	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0x400071c	    0x41814f380000	       or dword [r15 + 0x38], 0x10000000	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000724	            0x39dd	                            cmp ebp, ebx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000726	            0x7f42	                            jg 0x400076a	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000728	        0x8d446d30	          lea eax, [rbp + rbp*2 + 0x30] 	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400072c	            0x89c5	                            mov ebp, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400072e	          0xc1ed1f	                           shr ebp, 0x1f	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000731	             0x1c5	                            add ebp, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000733	          0x8d4301	                      lea eax, [rbx + 1]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000736	            0xd1fd	                              sar ebp, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000738	            0x39dd	                            cmp ebp, ebx	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400073a	           0xf4ee8	                         cmovle ebp, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400073d	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000747	          0x4863d5	                         movsxd rdx, ebp	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400074a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_57	IF_1
0x400074d	     0xf8756020000	                            ja 0x40009a9	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000753	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000758	    0x488d34d50000	                        lea rsi, [rdx*8]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000760	      0xe800000000	                          call 0x4000765	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000765	      0x4889442408	                mov qword [rsp + 8], rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400076a	      0x488b742408	                mov rsi, qword [rsp + 8]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400076f	          0x4863c3	                         movsxd rax, ebx	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000772	          0x83c301	                              add ebx, 1	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000775	        0x4c893cc6	            mov qword [rsi + rax*8], r15	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000779	      0xe93effffff	                           jmp 0x40006bc	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400077e	            0x6690	                                     nop	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000780	      0x458b4c240c	              mov r9d, dword [r12 + 0xc]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000785	          0x4489cf	                            mov edi, r9d	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000788	            0x31c9	                            xor ecx, ecx	       246	split-index.c	FUNCTION_9	FOR_3
0x400078a	          0x4585c9	                           test r9d, r9d	       246	split-index.c	FUNCTION_9	FOR_3
0x400078d	        0x498b3424	                    mov rsi, qword [r12]	       246	split-index.c	FUNCTION_9	FOR_3
0x4000791	    0x49bdffffffff	         movabs r13, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_57	IF_1
0x400079b	            0x752f	                           jne 0x40007cc	       246	split-index.c	FUNCTION_9	FOR_3
0x400079d	      0xe9d2000000	                           jmp 0x4000874	       246	split-index.c	FUNCTION_9	FOR_3
0x40007a2	    0x660f1f440000	                    nop word [rax + rax]	       246	split-index.c	FUNCTION_9	FOR_3
0x40007a8	        0x418b4738	            mov eax, dword [r15 + 0x38] 	       246	split-index.c	FUNCTION_9	FOR_3
0x40007ac	      0x25fffffffb	                     and eax, 0xfbffffff	       253	split-index.c	FUNCTION_9	FOR_3
0x40007b1	          0x4489cf	                            mov edi, r9d	       246	split-index.c	FUNCTION_9	FOR_3
0x40007b4	        0x41894738	             mov dword [r15 + 0x38], eax	       253	split-index.c	FUNCTION_9	FOR_3
0x40007b8	          0x8d4101	                      lea eax, [rcx + 1]	       253	split-index.c	FUNCTION_9	FOR_3
0x40007bb	        0x4883c101	                              add rcx, 1	       253	split-index.c	FUNCTION_9	FOR_3
0x40007bf	          0x4139c1	                            cmp r9d, eax	       246	split-index.c	FUNCTION_9	FOR_3
0x40007c2	     0xf86ac000000	                           jbe 0x4000874	       246	split-index.c	FUNCTION_9	FOR_3
0x40007c8	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       246	split-index.c	FUNCTION_9	FOR_3
0x40007cc	          0x4885d2	                           test rdx, rdx	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007cf	        0x4c8b3cce	            mov r15, qword [rsi + rcx*8]	       247	split-index.c	FUNCTION_9	FOR_3
0x40007d3	            0x7408	                            je 0x40007dd	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007d5	        0x418b4740	            mov eax, dword [r15 + 0x40] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007d9	            0x85c0	                           test eax, eax	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007db	            0x75cb	                           jne 0x40007a8	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007dd	        0x418b4738	            mov eax, dword [r15 + 0x38] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007e1	      0xa900000200	                       test eax, 0x20000	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007e6	            0x75c4	                           jne 0x40007ac	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007e8	      0xa900000010	                    test eax, 0x10000000	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x40007ed	     0xf859d010000	                           jne 0x4000990	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x40007f3	            0x39dd	                            cmp ebp, ebx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007f5	            0x7f4b	                            jg 0x4000842	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007f7	        0x8d446d30	          lea eax, [rbp + rbp*2 + 0x30] 	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007fb	            0x89c5	                            mov ebp, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007fd	          0xc1ed1f	                           shr ebp, 0x1f	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000800	             0x1c5	                            add ebp, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000802	          0x8d4301	                      lea eax, [rbx + 1]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000805	            0xd1fd	                              sar ebp, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000807	            0x39dd	                            cmp ebp, ebx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000809	           0xf4ee8	                         cmovle ebp, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400080c	          0x4863d5	                         movsxd rdx, ebp	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400080f	          0x4c39ea	                            cmp rdx, r13	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000812	     0xf8791010000	                            ja 0x40009a9	       795	git-compat-util.h	FUNCTION_57	IF_1
0x4000818	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400081d	    0x488d34d50000	                        lea rsi, [rdx*8]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000825	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400082a	      0xe800000000	                          call 0x400082f	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400082f	      0x458b4c240c	              mov r9d, dword [r12 + 0xc]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000834	      0x4889442408	                mov qword [rsp + 8], rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000839	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400083e	        0x418b4738	            mov eax, dword [r15 + 0x38] 	       250	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000842	      0x488b742408	                mov rsi, qword [rsp + 8]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000847	          0x4863d3	                         movsxd rdx, ebx	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400084a	          0x83c301	                              add ebx, 1	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400084d	        0x4c893cd6	            mov qword [rsi + rdx*8], r15	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000851	        0x498b3424	                    mov rsi, qword [r12]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000855	      0xe952ffffff	                           jmp 0x40007ac	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400085a	          0x8b7a0c	              mov edi, dword [rdx + 0xc]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x400085d	            0x85ff	                           test edi, edi	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x400085f	     0xf8532feffff	                           jne 0x4000697	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000865	        0x498b3424	                    mov rsi, qword [r12]	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000869	            0x31db	                            xor ebx, ebx	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x400086b	    0x48c744240800	                  mov qword [rsp + 8], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000874	      0x488b442408	                mov rax, qword [rsp + 8]	       262	split-index.c	FUNCTION_9
0x4000879	        0x49897630	             mov qword [r14 + 0x30], rsi	       260	split-index.c	FUNCTION_9
0x400087d	        0x41897e38	             mov dword [r14 + 0x38], edi	       261	split-index.c	FUNCTION_9
0x4000881	      0x41895c240c	              mov dword [r12 + 0xc], ebx	       263	split-index.c	FUNCTION_9
0x4000886	        0x49890424	                    mov qword [r12], rax	       262	split-index.c	FUNCTION_9
0x400088a	        0x4883c428	                           add rsp, 0x28	       264	split-index.c	FUNCTION_9
0x400088e	              0x5b	                                 pop rbx	       264	split-index.c	FUNCTION_9
0x400088f	              0x5d	                                 pop rbp	       264	split-index.c	FUNCTION_9
0x4000890	            0x415c	                                 pop r12	       264	split-index.c	FUNCTION_9
0x4000892	            0x415d	                                 pop r13	       264	split-index.c	FUNCTION_9
0x4000894	            0x415e	                                 pop r14	       264	split-index.c	FUNCTION_9
0x4000896	            0x415f	                                 pop r15	       264	split-index.c	FUNCTION_9
0x4000898	              0xc3	                                     ret	       264	split-index.c	FUNCTION_9
0x4000899	     0xf1f80000000	                         nop dword [rax]	       264	split-index.c	FUNCTION_9
0x40008a0	        0x488d7d58	                   lea rdi, [rbp + 0x58]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008a4	        0x498d7558	                   lea rsi, [r13 + 0x58]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008a8	      0x44894c241c	             mov dword [rsp + 0x1c], r9d	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008ad	      0x4889542410	             mov qword [rsp + 0x10], rdx	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008b2	      0x4489442408	                mov dword [rsp + 8], r8d	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008b7	      0xe800000000	                          call 0x40008bc	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x40008bc	            0x85c0	                           test eax, eax	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x40008be	      0x448b442408	                mov r8d, dword [rsp + 8]	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x40008c3	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x40008c8	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x40008cd	     0xf85a3fdffff	                           jne 0x4000676	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x40008d3	          0x4489c0	                            mov eax, r8d	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008d6	        0x418b4d38	            mov ecx, dword [r13 + 0x38] 	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008da	        0x498d7510	                   lea rsi, [r13 + 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x40008de	      0x2500b00060	                     and eax, 0x6000b000	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008e3	        0x488d7d10	                   lea rdi, [rbp + 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x40008e7	      0xba48000000	                           mov edx, 0x48	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x40008ec	          0x894538	            mov dword [rbp + 0x38], eax 	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008ef	    0x4181653800b0	      and dword [r13 + 0x38], 0x6000b000	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008f7	        0x894c2408	                mov dword [rsp + 8], ecx	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40008fb	      0xe800000000	                          call 0x4000900	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x4000900	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000904	            0x85c0	                           test eax, eax	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x4000906	        0x44897d38	           mov dword [rbp + 0x38], r15d 	       223	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400090a	        0x41894d38	             mov dword [r13 + 0x38], ecx	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400090e	            0x7407	                            je 0x4000917	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x4000910	    0x814d38000000	     or dword [rbp + 0x38], section_end.	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x4000917	          0x4c89ef	                            mov rdi, r13	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0x400091a	      0xe800000000	                          call 0x400091f	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0x400091f	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000923	          0x8b5540	            mov edx, dword [rbp + 0x40] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000926	      0x458b4c240c	              mov r9d, dword [r12 + 0xc]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400092b	          0x488b00	                    mov rax, qword [rax]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400092e	          0x83ea01	                              sub edx, 1	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000931	        0x48892cd0	            mov qword [rax + rdx*8], rbp	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000935	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000939	          0x4489cf	                            mov edi, r9d	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400093c	      0xe93ffdffff	                           jmp 0x4000680	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000941	      0x458b4c240c	              mov r9d, dword [r12 + 0xc]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000946	            0x31ed	                            xor ebp, ebp	       180	split-index.c	FUNCTION_9
0x4000948	            0x31db	                            xor ebx, ebx	       180	split-index.c	FUNCTION_9
0x400094a	    0x48c744240800	                  mov qword [rsp + 8], 0	       179	split-index.c	FUNCTION_9
0x4000953	          0x4489cf	                            mov edi, r9d	       179	split-index.c	FUNCTION_9
0x4000956	      0xe92dfeffff	                           jmp 0x4000788	       179	split-index.c	FUNCTION_9
0x400095b	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000960	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000965	      0xe800000000	                          call 0x400096a	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400096a	      0x4989442428	             mov qword [r12 + 0x28], rax	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400096f	          0x4989c6	                            mov r14, rax	         9	split-index.c	FUNCTION_1	IF_1
0x4000972	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x4000979	      0xe980fcffff	                           jmp 0x40005fe	         9	split-index.c	FUNCTION_1	IF_1
0x400097e	            0x31ed	                            xor ebp, ebp	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000980	            0x31db	                            xor ebx, ebx	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000982	    0x48c744240800	                  mov qword [rsp + 8], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x400098b	      0xe9f8fdffff	                           jmp 0x4000788	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000990	      0xb900000000	                              mov ecx, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x4000995	      0xbaf9000000	                           mov edx, 0xf9	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x400099a	      0xbe00000000	                              mov esi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x400099f	      0xbf00000000	                              mov edi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x40009a4	      0xe800000000	                          call 0x40009a9	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_10
0x40009a9	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x40009ae	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x40009b3	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
0x40009b5	      0xe800000000	                          call 0x40009ba	       796	git-compat-util.h	FUNCTION_57	IF_1	CALL_1
remove_split_index	ELSE,0:WHILE,0:FOR,0:IF,1:functions,0:CALL,0:SWITCH,0:DO,0	5
0x4000b80	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       332	split-index.c	FUNCTION_15	IF_1
0x4000b85	            0x740c	                            je 0x4000b93	       332	split-index.c	FUNCTION_15	IF_1
0x4000b87	        0x834f1401	                or dword [rdi + 0x14], 1	       340	split-index.c	FUNCTION_15	IF_1
0x4000b8b	    0x48c747280000	               mov qword [rdi + 0x28], 0	       339	split-index.c	FUNCTION_15	IF_1
0x4000b93	            0xf3c3	                                     ret	       339	split-index.c	FUNCTION_15	IF_1
replace_index_entry_in_base	ELSE,0:WHILE,0:FOR,0:IF,2:functions,0:CALL,1:SWITCH,0:DO,0	35
0x4000ad0	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       311	split-index.c	FUNCTION_13	IF_1
0x4000ad3	            0x85c0	                           test eax, eax	       311	split-index.c	FUNCTION_13	IF_1
0x4000ad5	            0x745b	                            je 0x4000b32	       311	split-index.c	FUNCTION_13	IF_1
0x4000ad7	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	       312	split-index.c	FUNCTION_13	IF_1
0x4000adb	          0x4885c9	                           test rcx, rcx	       311	split-index.c	FUNCTION_13	IF_1
0x4000ade	            0x7452	                            je 0x4000b32	       311	split-index.c	FUNCTION_13	IF_1
0x4000ae0	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	       313	split-index.c	FUNCTION_13	IF_1
0x4000ae4	          0x4885c9	                           test rcx, rcx	       312	split-index.c	FUNCTION_13	IF_1
0x4000ae7	            0x7449	                            je 0x4000b32	       312	split-index.c	FUNCTION_13	IF_1
0x4000ae9	          0x3b410c	              cmp eax, dword [rcx + 0xc]	       313	split-index.c	FUNCTION_13	IF_1
0x4000aec	            0x7744	                            ja 0x4000b32	       313	split-index.c	FUNCTION_13	IF_1
0x4000aee	              0x55	                                push rbp	       310	split-index.c	FUNCTION_13
0x4000aef	              0x53	                                push rbx	       310	split-index.c	FUNCTION_13
0x4000af0	          0x4889d5	                            mov rbp, rdx	       310	split-index.c	FUNCTION_13
0x4000af3	          0x4889fb	                            mov rbx, rdi	       310	split-index.c	FUNCTION_13
0x4000af6	        0x4883ec08	                              sub rsp, 8	       310	split-index.c	FUNCTION_13
0x4000afa	          0x894240	             mov dword [rdx + 0x40], eax	       315	split-index.c	FUNCTION_13	IF_1
0x4000afd	          0x8d50ff	                      lea edx, [rax - 1]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b00	          0x488b01	                    mov rax, qword [rcx]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b03	        0x488d04d0	                  lea rax, [rax + rdx*8]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b07	          0x488b38	                    mov rdi, qword [rax]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b0a	          0x4839fe	                            cmp rsi, rdi	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b0d	            0x741a	                            je 0x4000b29	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000b0f	      0xe800000000	                          call 0x4000b14	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b14	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b18	          0x8b5540	            mov edx, dword [rbp + 0x40] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b1b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b1f	          0x83ea01	                              sub edx, 1	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b22	          0x488b00	                    mov rax, qword [rax]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b25	        0x488d04d0	                  lea rax, [rax + rdx*8]	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000b29	          0x488928	                    mov qword [rax], rbp	       318	split-index.c	FUNCTION_13	IF_1
0x4000b2c	        0x4883c408	                              add rsp, 8	       320	split-index.c	FUNCTION_13
0x4000b30	              0x5b	                                 pop rbx	       320	split-index.c	FUNCTION_13
0x4000b31	              0x5d	                                 pop rbp	       320	split-index.c	FUNCTION_13
0x4000b32	            0xf3c3	                                     ret	       320	split-index.c	FUNCTION_13
finish_writing_split_index	ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:CALL,4:SWITCH,0:DO,0	31
0x40009c0	              0x55	                                push rbp	       267	split-index.c	FUNCTION_10
0x40009c1	              0x53	                                push rbx	       267	split-index.c	FUNCTION_10
0x40009c2	          0x4889fd	                            mov rbp, rdi	       267	split-index.c	FUNCTION_10
0x40009c5	        0x4883ec08	                              sub rsp, 8	       267	split-index.c	FUNCTION_10
0x40009c9	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	         7	split-index.c	FUNCTION_1	IF_1
0x40009cd	          0x4885db	                           test rbx, rbx	         7	split-index.c	FUNCTION_1	IF_1
0x40009d0	            0x7446	                            je 0x4000a18	         7	split-index.c	FUNCTION_1	IF_1
0x40009d2	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       270	split-index.c	FUNCTION_10	CALL_2
0x40009d6	      0xe800000000	                          call 0x40009db	       270	split-index.c	FUNCTION_10	CALL_2
0x40009db	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       271	split-index.c	FUNCTION_10	CALL_3
0x40009df	      0xe800000000	                          call 0x40009e4	       271	split-index.c	FUNCTION_10	CALL_3
0x40009e4	        0x488b7d00	                    mov rdi, qword [rbp]	       274	split-index.c	FUNCTION_10	CALL_4
0x40009e8	    0x48c743200000	               mov qword [rbx + 0x20], 0	       272	split-index.c	FUNCTION_10
0x40009f0	    0x48c743280000	               mov qword [rbx + 0x28], 0	       273	split-index.c	FUNCTION_10
0x40009f8	      0xe800000000	                          call 0x40009fd	       274	split-index.c	FUNCTION_10	CALL_4
0x40009fd	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       275	split-index.c	FUNCTION_10
0x4000a01	        0x48894500	                    mov qword [rbp], rax	       275	split-index.c	FUNCTION_10
0x4000a05	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       276	split-index.c	FUNCTION_10
0x4000a08	          0x89450c	              mov dword [rbp + 0xc], eax	       276	split-index.c	FUNCTION_10
0x4000a0b	        0x4883c408	                              add rsp, 8	       277	split-index.c	FUNCTION_10
0x4000a0f	              0x5b	                                 pop rbx	       277	split-index.c	FUNCTION_10
0x4000a10	              0x5d	                                 pop rbp	       277	split-index.c	FUNCTION_10
0x4000a11	              0xc3	                                     ret	       277	split-index.c	FUNCTION_10
0x4000a12	    0x660f1f440000	                    nop word [rax + rax]	       277	split-index.c	FUNCTION_10
0x4000a18	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000a1d	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000a22	      0xe800000000	                          call 0x4000a27	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000a27	        0x48894528	            mov qword [rbp + 0x28], rax 	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000a2b	          0x4889c3	                            mov rbx, rax	         9	split-index.c	FUNCTION_1	IF_1
0x4000a2e	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x4000a35	            0xeb9b	                           jmp 0x40009d2	         9	split-index.c	FUNCTION_1	IF_1
write_link_extension	ELSE,0:WHILE,0:FOR,0:IF,1:functions,0:CALL,3:SWITCH,0:DO,0	24
0x40002f0	              0x55	                                push rbp	        46	split-index.c	FUNCTION_3
0x40002f1	              0x53	                                push rbx	        46	split-index.c	FUNCTION_3
0x40002f2	      0xba14000000	                           mov edx, 0x14	        48	split-index.c	FUNCTION_3	CALL_1
0x40002f7	          0x4889fd	                            mov rbp, rdi	        46	split-index.c	FUNCTION_3
0x40002fa	        0x4883ec08	                              sub rsp, 8	        46	split-index.c	FUNCTION_3
0x40002fe	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	        47	split-index.c	FUNCTION_3
0x4000302	          0x4889de	                            mov rsi, rbx	        48	split-index.c	FUNCTION_3	CALL_1
0x4000305	      0xe800000000	                          call 0x400030a	        48	split-index.c	FUNCTION_3	CALL_1
0x400030a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	        49	split-index.c	FUNCTION_3	IF_1
0x400030e	          0x4885ff	                           test rdi, rdi	        49	split-index.c	FUNCTION_3	IF_1
0x4000311	            0x741d	                            je 0x4000330	        49	split-index.c	FUNCTION_3	IF_1
0x4000313	          0x4889ee	                            mov rsi, rbp	        51	split-index.c	FUNCTION_3	CALL_2
0x4000316	      0xe800000000	                          call 0x400031b	        51	split-index.c	FUNCTION_3	CALL_2
0x400031b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	        52	split-index.c	FUNCTION_3	CALL_3
0x400031f	          0x4889ee	                            mov rsi, rbp	        52	split-index.c	FUNCTION_3	CALL_3
0x4000322	      0xe800000000	                          call 0x4000327	        52	split-index.c	FUNCTION_3	CALL_3
0x4000327	        0x4883c408	                              add rsp, 8	        54	split-index.c	FUNCTION_3
0x400032b	            0x31c0	                            xor eax, eax	        54	split-index.c	FUNCTION_3
0x400032d	              0x5b	                                 pop rbx	        54	split-index.c	FUNCTION_3
0x400032e	              0x5d	                                 pop rbp	        54	split-index.c	FUNCTION_3
0x400032f	              0xc3	                                     ret	        54	split-index.c	FUNCTION_3
0x4000330	      0x48837b2800	               cmp qword [rbx + 0x28], 0	        49	split-index.c	FUNCTION_3	IF_1
0x4000335	            0x75dc	                           jne 0x4000313	        49	split-index.c	FUNCTION_3	IF_1
0x4000337	            0xebee	                           jmp 0x4000327	        49	split-index.c	FUNCTION_3	IF_1
add_split_index	ELSE,0:WHILE,0:FOR,0:IF,1:functions,0:CALL,1:SWITCH,0:DO,0	14
0x4000b40	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       324	split-index.c	FUNCTION_14	IF_1
0x4000b45	            0x7409	                            je 0x4000b50	       324	split-index.c	FUNCTION_14	IF_1
0x4000b47	              0xc3	                                     ret	       328	split-index.c	FUNCTION_14
0x4000b48	     0xf1f84000000	                   nop dword [rax + rax]	       328	split-index.c	FUNCTION_14
0x4000b50	              0x53	                                push rbx	       323	split-index.c	FUNCTION_14
0x4000b51	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000b56	          0x4889fb	                            mov rbx, rdi	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000b59	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000b5e	      0xe800000000	                          call 0x4000b63	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000b63	        0x48894328	             mov qword [rbx + 0x28], rax	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000b67	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x4000b6e	        0x834b1440	            or dword [rbx + 0x14], 0x40 	       326	split-index.c	FUNCTION_14	IF_1
0x4000b72	              0x5b	                                 pop rbx	       328	split-index.c	FUNCTION_14
0x4000b73	              0xc3	                                     ret	       328	split-index.c	FUNCTION_14
merge_base_index	ELSE,0:WHILE,0:FOR,1:IF,2:functions,0:CALL,8:SWITCH,0:DO,0	107
0x4000420	            0x4155	                                push r13	       131	split-index.c	FUNCTION_8
0x4000422	            0x4154	                                push r12	       131	split-index.c	FUNCTION_8
0x4000424	          0x4989fc	                            mov r12, rdi	       131	split-index.c	FUNCTION_8
0x4000427	              0x55	                                push rbp	       131	split-index.c	FUNCTION_8
0x4000428	              0x53	                                push rbx	       131	split-index.c	FUNCTION_8
0x4000429	        0x4883ec08	                              sub rsp, 8	       131	split-index.c	FUNCTION_8
0x400042d	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	       132	split-index.c	FUNCTION_8
0x4000431	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       135	split-index.c	FUNCTION_8	CALL_1
0x4000435	          0x8b700c	              mov esi, dword [rax + 0xc]	       135	split-index.c	FUNCTION_8	CALL_1
0x4000438	          0x488b10	                    mov rdx, qword [rax]	       135	split-index.c	FUNCTION_8	CALL_1
0x400043b	            0x85f6	                           test esi, esi	        66	split-index.c	FUNCTION_4	FOR_1
0x400043d	     0xf845a010000	                            je 0x400059d	        66	split-index.c	FUNCTION_4	FOR_1
0x4000443	            0x31c0	                            xor eax, eax	        66	split-index.c	FUNCTION_4	FOR_1
0x4000445	           0xf1f00	                         nop dword [rax]	        66	split-index.c	FUNCTION_4	FOR_1
0x4000448	          0x488b0a	                    mov rcx, qword [rdx]	        67	split-index.c	FUNCTION_4	FOR_1
0x400044b	          0x83c001	                              add eax, 1	        67	split-index.c	FUNCTION_4	FOR_1
0x400044e	        0x4883c208	                              add rdx, 8	        67	split-index.c	FUNCTION_4	FOR_1
0x4000452	            0x39f0	                            cmp eax, esi	        66	split-index.c	FUNCTION_4	FOR_1
0x4000454	          0x894140	             mov dword [rcx + 0x40], eax	        67	split-index.c	FUNCTION_4	FOR_1
0x4000457	            0x75ef	                           jne 0x4000448	        66	split-index.c	FUNCTION_4	FOR_1
0x4000459	        0x498b1424	                    mov rdx, qword [r12]	       137	split-index.c	FUNCTION_8
0x400045d	          0x83f818	                           cmp eax, 0x18	       137	split-index.c	FUNCTION_8
0x4000460	        0x48895530	            mov qword [rbp + 0x30], rdx 	       137	split-index.c	FUNCTION_8
0x4000464	      0x418b54240c	              mov edx, dword [r12 + 0xc]	       138	split-index.c	FUNCTION_8
0x4000469	          0x895538	            mov dword [rbp + 0x38], edx 	       138	split-index.c	FUNCTION_8
0x400046c	      0xba18000000	                           mov edx, 0x18	       138	split-index.c	FUNCTION_8
0x4000471	      0x418944240c	              mov dword [r12 + 0xc], eax	       139	split-index.c	FUNCTION_8
0x4000476	        0x480f42c2	                          cmovb rax, rdx	       139	split-index.c	FUNCTION_8
0x400047a	    0x49c704240000	                      mov qword [r12], 0	       140	split-index.c	FUNCTION_8
0x4000482	            0x31ff	                            xor edi, edi	       142	split-index.c	FUNCTION_8
0x4000484	    0x488d34c50000	                        lea rsi, [rax*8]	       142	split-index.c	FUNCTION_8
0x400048c	      0x4189442410	             mov dword [r12 + 0x10], eax	       142	split-index.c	FUNCTION_8
0x4000491	      0xe800000000	                          call 0x4000496	       142	split-index.c	FUNCTION_8
0x4000496	      0x418b54240c	              mov edx, dword [r12 + 0xc]	       143	split-index.c	FUNCTION_8
0x400049b	        0x49890424	                    mov qword [r12], rax	       142	split-index.c	FUNCTION_8
0x400049f	          0x4885d2	                           test rdx, rdx	       853	git-compat-util.h	FUNCTION_59	IF_1
0x40004a2	     0xf85d0000000	                           jne 0x4000578	       853	git-compat-util.h	FUNCTION_59	IF_1
0x40004a8	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       147	split-index.c	FUNCTION_8	CALL_2
0x40004ac	          0x4c89e2	                            mov rdx, r12	       147	split-index.c	FUNCTION_8	CALL_2
0x40004af	      0xbe00000000	                              mov esi, 0	       147	split-index.c	FUNCTION_8	CALL_2
0x40004b4	    0xc7453c000000	               mov dword [rbp + 0x3c], 0	       145	split-index.c	FUNCTION_8
0x40004bb	    0xc74540000000	               mov dword [rbp + 0x40], 0	       146	split-index.c	FUNCTION_8
0x40004c2	      0xe800000000	                          call 0x40004c7	       147	split-index.c	FUNCTION_8	CALL_2
0x40004c7	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       148	split-index.c	FUNCTION_8	CALL_3
0x40004cb	          0x4c89e2	                            mov rdx, r12	       148	split-index.c	FUNCTION_8	CALL_3
0x40004ce	      0xbe00000000	                              mov esi, 0	       148	split-index.c	FUNCTION_8	CALL_3
0x40004d3	      0xe800000000	                          call 0x40004d8	       148	split-index.c	FUNCTION_8	CALL_3
0x40004d8	          0x8b553c	            mov edx, dword [rbp + 0x3c] 	       149	split-index.c	FUNCTION_8	IF_1
0x40004db	            0x85d2	                           test edx, edx	       149	split-index.c	FUNCTION_8	IF_1
0x40004dd	     0xf85ad000000	                           jne 0x4000590	       149	split-index.c	FUNCTION_8	IF_1
0x40004e3	          0x8b5d40	            mov ebx, dword [rbp + 0x40] 	       152	split-index.c	FUNCTION_8	FOR_1
0x40004e6	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       152	split-index.c	FUNCTION_8	FOR_1
0x40004e9	            0x7343	                           jae 0x400052e	       152	split-index.c	FUNCTION_8	FOR_1
0x40004eb	       0xf1f440000	                   nop dword [rax + rax]	       152	split-index.c	FUNCTION_8	FOR_1
0x40004f0	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x40004f4	            0x89d8	                            mov eax, ebx	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x40004f6	    0x4c8d2cc50000	                        lea r13, [rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x40004fe	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x4000502	          0x8b463c	            mov eax, dword [rsi + 0x3c] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x4000505	            0x85c0	                           test eax, eax	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x4000507	     0xf84b7000000	                            je 0x40005c4	       153	split-index.c	FUNCTION_8	FOR_1	IF_2
0x400050d	      0xba25000000	                           mov edx, 0x25	       156	split-index.c	FUNCTION_8	FOR_1	CALL_6
0x4000512	          0x4c89e7	                            mov rdi, r12	       156	split-index.c	FUNCTION_8	FOR_1	CALL_6
0x4000515	          0x83c301	                              add ebx, 1	       152	split-index.c	FUNCTION_8	FOR_1
0x4000518	      0xe800000000	                          call 0x400051d	       156	split-index.c	FUNCTION_8	FOR_1	CALL_6
0x400051d	          0x395d38	            cmp dword [rbp + 0x38], ebx 	       152	split-index.c	FUNCTION_8	FOR_1
0x4000520	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       165	split-index.c	FUNCTION_8	FOR_1
0x4000524	    0x4ac704280000	                mov qword [rax + r13], 0	       165	split-index.c	FUNCTION_8	FOR_1
0x400052c	            0x77c2	                            ja 0x40004f0	       152	split-index.c	FUNCTION_8	FOR_1
0x400052e	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       168	split-index.c	FUNCTION_8	CALL_7
0x4000532	      0xe800000000	                          call 0x4000537	       168	split-index.c	FUNCTION_8	CALL_7
0x4000537	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       169	split-index.c	FUNCTION_8	CALL_8
0x400053b	      0xe800000000	                          call 0x4000540	       169	split-index.c	FUNCTION_8	CALL_8
0x4000540	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	       170	split-index.c	FUNCTION_8
0x4000544	      0xe800000000	                          call 0x4000549	       170	split-index.c	FUNCTION_8
0x4000549	    0x48c745300000	               mov qword [rbp + 0x30], 0	       170	split-index.c	FUNCTION_8
0x4000551	    0x48c745200000	               mov qword [rbp + 0x20], 0	       171	split-index.c	FUNCTION_8
0x4000559	    0x48c745280000	               mov qword [rbp + 0x28], 0	       172	split-index.c	FUNCTION_8
0x4000561	    0xc74538000000	               mov dword [rbp + 0x38], 0	       173	split-index.c	FUNCTION_8
0x4000568	        0x4883c408	                              add rsp, 8	       174	split-index.c	FUNCTION_8
0x400056c	              0x5b	                                 pop rbx	       174	split-index.c	FUNCTION_8
0x400056d	              0x5d	                                 pop rbp	       174	split-index.c	FUNCTION_8
0x400056e	            0x415c	                                 pop r12	       174	split-index.c	FUNCTION_8
0x4000570	            0x415d	                                 pop r13	       174	split-index.c	FUNCTION_8
0x4000572	              0xc3	                                     ret	       174	split-index.c	FUNCTION_8
0x4000573	       0xf1f440000	                   nop dword [rax + rax]	       174	split-index.c	FUNCTION_8
0x4000578	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       143	split-index.c	FUNCTION_8
0x400057c	        0x48c1e203	                              shl rdx, 3	        53	string3.h	FUNCTION_70	CALL_3
0x4000580	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_70	CALL_3
0x4000583	          0x488b31	                    mov rsi, qword [rcx]	        53	string3.h	FUNCTION_70	CALL_3
0x4000586	      0xe800000000	                          call 0x400058b	        53	string3.h	FUNCTION_70	CALL_3
0x400058b	      0xe918ffffff	                           jmp 0x40004a8	        53	string3.h	FUNCTION_70	CALL_3
0x4000590	          0x4c89e7	                            mov rdi, r12	       150	split-index.c	FUNCTION_8	CALL_4
0x4000593	      0xe800000000	                          call 0x4000598	       150	split-index.c	FUNCTION_8	CALL_4
0x4000598	      0xe946ffffff	                           jmp 0x40004e3	       150	split-index.c	FUNCTION_8	CALL_4
0x400059d	          0x488b07	                    mov rax, qword [rdi]	       137	split-index.c	FUNCTION_8
0x40005a0	        0x48894530	            mov qword [rbp + 0x30], rax 	       137	split-index.c	FUNCTION_8
0x40005a4	          0x8b470c	              mov eax, dword [rdi + 0xc]	       138	split-index.c	FUNCTION_8
0x40005a7	          0x894538	            mov dword [rbp + 0x38], eax 	       138	split-index.c	FUNCTION_8
0x40005aa	    0xc7470c000000	                mov dword [rdi + 0xc], 0	       139	split-index.c	FUNCTION_8
0x40005b1	    0x48c707000000	                      mov qword [rdi], 0	       140	split-index.c	FUNCTION_8
0x40005b8	    0xc74710000000	               mov dword [rdi + 0x10], 0	       141	split-index.c	FUNCTION_8
0x40005bf	      0xe9e4feffff	                           jmp 0x40004a8	       141	split-index.c	FUNCTION_8
0x40005c4	            0x89de	                            mov esi, ebx	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_5
0x40005c6	      0xbf00000000	                              mov edi, 0	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_5
0x40005cb	            0x31c0	                            xor eax, eax	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_5
0x40005cd	      0xe800000000	                          call 0x40005d2	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_5
move_cache_to_base_index	ELSE,0:WHILE,0:FOR,1:IF,0:functions,0:CALL,2:SWITCH,0:DO,0	65
0x4000340	            0x4154	                                push r12	        71	split-index.c	FUNCTION_5
0x4000342	              0x55	                                push rbp	        71	split-index.c	FUNCTION_5
0x4000343	      0xbed0000000	                           mov esi, 0xd0	        80	split-index.c	FUNCTION_5	CALL_1
0x4000348	              0x53	                                push rbx	        71	split-index.c	FUNCTION_5
0x4000349	          0x4889fd	                            mov rbp, rdi	        71	split-index.c	FUNCTION_5
0x400034c	        0x4c8b6728	            mov r12, qword [rdi + 0x28] 	        72	split-index.c	FUNCTION_5
0x4000350	      0xbf01000000	                              mov edi, 1	        80	split-index.c	FUNCTION_5	CALL_1
0x4000355	      0xe800000000	                          call 0x400035a	        80	split-index.c	FUNCTION_5	CALL_1
0x400035a	          0x8b5508	                mov edx, dword [rbp + 8]	        81	split-index.c	FUNCTION_5
0x400035d	      0x4989442418	             mov qword [r12 + 0x18], rax	        80	split-index.c	FUNCTION_5	CALL_1
0x4000362	          0x4889c3	                            mov rbx, rax	        80	split-index.c	FUNCTION_5	CALL_1
0x4000365	        0x448b450c	              mov r8d, dword [rbp + 0xc]	        84	split-index.c	FUNCTION_5
0x4000369	          0x895008	                mov dword [rax + 8], edx	        81	split-index.c	FUNCTION_5
0x400036c	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	        83	split-index.c	FUNCTION_5
0x4000370	        0x48895030	             mov qword [rax + 0x30], rdx	        83	split-index.c	FUNCTION_5
0x4000374	          0x8b5010	            mov edx, dword [rax + 0x10] 	        84	split-index.c	FUNCTION_5
0x4000377	          0x4139d0	                            cmp r8d, edx	        84	split-index.c	FUNCTION_5
0x400037a	            0x762d	                           jbe 0x40003a9	        84	split-index.c	FUNCTION_5
0x400037c	        0x8d445230	          lea eax, [rdx + rdx*2 + 0x30] 	        84	split-index.c	FUNCTION_5
0x4000380	          0x488b3b	                    mov rdi, qword [rbx]	        84	split-index.c	FUNCTION_5
0x4000383	            0xd1e8	                              shr eax, 1	        84	split-index.c	FUNCTION_5
0x4000385	          0x4439c0	                            cmp eax, r8d	        84	split-index.c	FUNCTION_5
0x4000388	        0x4c0f43c0	                          cmovae r8, rax	        84	split-index.c	FUNCTION_5
0x400038c	    0x4a8d34c50000	                         lea rsi, [r8*8]	        84	split-index.c	FUNCTION_5
0x4000394	        0x44894310	             mov dword [rbx + 0x10], r8d	        84	split-index.c	FUNCTION_5
0x4000398	      0xe800000000	                          call 0x400039d	        84	split-index.c	FUNCTION_5
0x400039d	        0x448b450c	              mov r8d, dword [rbp + 0xc]	        84	split-index.c	FUNCTION_5
0x40003a1	          0x488903	                    mov qword [rbx], rax	        84	split-index.c	FUNCTION_5
0x40003a4	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	        84	split-index.c	FUNCTION_5
0x40003a9	        0x4489430c	              mov dword [rbx + 0xc], r8d	        85	split-index.c	FUNCTION_5
0x40003ad	          0x8b550c	              mov edx, dword [rbp + 0xc]	        86	split-index.c	FUNCTION_5
0x40003b0	          0x488b3b	                    mov rdi, qword [rbx]	        86	split-index.c	FUNCTION_5
0x40003b3	          0x4885d2	                           test rdx, rdx	       853	git-compat-util.h	FUNCTION_59	IF_1
0x40003b6	            0x7548	                           jne 0x4000400	       853	git-compat-util.h	FUNCTION_59	IF_1
0x40003b8	            0x31d2	                            xor edx, edx	        66	split-index.c	FUNCTION_4	FOR_1
0x40003ba	          0x4585c0	                           test r8d, r8d	        66	split-index.c	FUNCTION_4	FOR_1
0x40003bd	          0x4889f8	                            mov rax, rdi	        66	split-index.c	FUNCTION_4	FOR_1
0x40003c0	          0x4889f9	                            mov rcx, rdi	        66	split-index.c	FUNCTION_4	FOR_1
0x40003c3	            0x7436	                            je 0x40003fb	        66	split-index.c	FUNCTION_4	FOR_1
0x40003c5	           0xf1f00	                         nop dword [rax]	        66	split-index.c	FUNCTION_4	FOR_1
0x40003c8	          0x488b31	                    mov rsi, qword [rcx]	        67	split-index.c	FUNCTION_4	FOR_1
0x40003cb	          0x83c201	                              add edx, 1	        67	split-index.c	FUNCTION_4	FOR_1
0x40003ce	        0x4883c108	                              add rcx, 8	        67	split-index.c	FUNCTION_4	FOR_1
0x40003d2	          0x4139d0	                            cmp r8d, edx	        66	split-index.c	FUNCTION_4	FOR_1
0x40003d5	          0x895640	             mov dword [rsi + 0x40], edx	        67	split-index.c	FUNCTION_4	FOR_1
0x40003d8	            0x75ee	                           jne 0x40003c8	        66	split-index.c	FUNCTION_4	FOR_1
0x40003da	        0x418d50ff	                       lea edx, [r8 - 1]	        66	split-index.c	FUNCTION_4	FOR_1
0x40003de	      0x488d4cd708	              lea rcx, [rdi + rdx*8 + 8]	        66	split-index.c	FUNCTION_4	FOR_1
0x40003e3	       0xf1f440000	                   nop dword [rax + rax]	        66	split-index.c	FUNCTION_4	FOR_1
0x40003e8	          0x488b10	                    mov rdx, qword [rax]	        89	split-index.c	FUNCTION_5	FOR_1
0x40003eb	        0x4883c008	                              add rax, 8	        89	split-index.c	FUNCTION_5	FOR_1
0x40003ef	    0x816238ffffff	      and dword [rdx + 0x38], 0xf7ffffff	        89	split-index.c	FUNCTION_5	FOR_1
0x40003f6	          0x4839c1	                            cmp rcx, rax	        88	split-index.c	FUNCTION_5	FOR_1
0x40003f9	            0x75ed	                           jne 0x40003e8	        88	split-index.c	FUNCTION_5	FOR_1
0x40003fb	              0x5b	                                 pop rbx	        90	split-index.c	FUNCTION_5
0x40003fc	              0x5d	                                 pop rbp	        90	split-index.c	FUNCTION_5
0x40003fd	            0x415c	                                 pop r12	        90	split-index.c	FUNCTION_5
0x40003ff	              0xc3	                                     ret	        90	split-index.c	FUNCTION_5
0x4000400	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_70	CALL_3
0x4000404	        0x48c1e203	                              shl rdx, 3	        53	string3.h	FUNCTION_70	CALL_3
0x4000408	      0xe800000000	                          call 0x400040d	        53	string3.h	FUNCTION_70	CALL_3
0x400040d	      0x498b442418	            mov rax, qword [r12 + 0x18] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000412	          0x488b38	                    mov rdi, qword [rax]	        53	string3.h	FUNCTION_70	CALL_3
0x4000415	        0x448b400c	              mov r8d, dword [rax + 0xc]	        53	string3.h	FUNCTION_70	CALL_3
0x4000419	            0xeb9d	                           jmp 0x40003b8	        53	string3.h	FUNCTION_70	CALL_3
read_link_extension	ELSE,0:WHILE,0:FOR,0:IF,5:functions,0:CALL,6:SWITCH,0:DO,0	80
0x40001c0	            0x4154	                                push r12	        16	split-index.c	FUNCTION_2
0x40001c2	              0x55	                                push rbp	        16	split-index.c	FUNCTION_2
0x40001c3	              0x53	                                push rbx	        16	split-index.c	FUNCTION_2
0x40001c4	        0x4883ec10	                           sub rsp, 0x10	        16	split-index.c	FUNCTION_2
0x40001c8	        0x4883fa13	                           cmp rdx, 0x13	        21	split-index.c	FUNCTION_2	IF_1
0x40001cc	     0xf86ce000000	                           jbe 0x40002a0	        21	split-index.c	FUNCTION_2	IF_1
0x40001d2	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	         7	split-index.c	FUNCTION_1	IF_1
0x40001d6	          0x4989fc	                            mov r12, rdi	         7	split-index.c	FUNCTION_1	IF_1
0x40001d9	          0x4889f3	                            mov rbx, rsi	         7	split-index.c	FUNCTION_1	IF_1
0x40001dc	          0x4885ed	                           test rbp, rbp	         7	split-index.c	FUNCTION_1	IF_1
0x40001df	     0xf848b000000	                            je 0x4000270	         7	split-index.c	FUNCTION_1	IF_1
0x40001e5	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_70	CALL_3
0x40001e8	        0x4883ea14	                           sub rdx, 0x14	        27	split-index.c	FUNCTION_2	IF_2
0x40001ec	          0x4989d4	                            mov r12, rdx	        27	split-index.c	FUNCTION_2	IF_2
0x40001ef	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_70	CALL_3
0x40001f3	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_70	CALL_3
0x40001f7	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_70	CALL_3
0x40001fb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	        53	string3.h	FUNCTION_70	CALL_3
0x40001fe	          0x894510	            mov dword [rbp + 0x10], eax 	        53	string3.h	FUNCTION_70	CALL_3
0x4000201	            0x750d	                           jne 0x4000210	        27	split-index.c	FUNCTION_2	IF_2
0x4000203	            0x31c0	                            xor eax, eax	        28	split-index.c	FUNCTION_2	IF_2
0x4000205	        0x4883c410	                           add rsp, 0x10	        42	split-index.c	FUNCTION_2
0x4000209	              0x5b	                                 pop rbx	        42	split-index.c	FUNCTION_2
0x400020a	              0x5d	                                 pop rbp	        42	split-index.c	FUNCTION_2
0x400020b	            0x415c	                                 pop r12	        42	split-index.c	FUNCTION_2
0x400020d	              0xc3	                                     ret	        42	split-index.c	FUNCTION_2
0x400020e	            0x6690	                                     nop	        42	split-index.c	FUNCTION_2
0x4000210	        0x4883c314	                           add rbx, 0x14	        25	split-index.c	FUNCTION_2
0x4000214	      0xe800000000	                          call 0x4000219	        29	split-index.c	FUNCTION_2	CALL_3
0x4000219	          0x4c89e2	                            mov rdx, r12	        30	split-index.c	FUNCTION_2	CALL_4
0x400021c	        0x48894520	            mov qword [rbp + 0x20], rax 	        29	split-index.c	FUNCTION_2	CALL_3
0x4000220	          0x4889de	                            mov rsi, rbx	        30	split-index.c	FUNCTION_2	CALL_4
0x4000223	          0x4889c7	                            mov rdi, rax	        30	split-index.c	FUNCTION_2	CALL_4
0x4000226	      0xe800000000	                          call 0x400022b	        30	split-index.c	FUNCTION_2	CALL_4
0x400022b	            0x85c0	                           test eax, eax	        31	split-index.c	FUNCTION_2	IF_3
0x400022d	     0xf8883000000	                            js 0x40002b6	        31	split-index.c	FUNCTION_2	IF_3
0x4000233	            0x4898	                                    cdqe	        33	split-index.c	FUNCTION_2
0x4000235	          0x4801c3	                            add rbx, rax	        33	split-index.c	FUNCTION_2
0x4000238	          0x4929c4	                            sub r12, rax	        34	split-index.c	FUNCTION_2
0x400023b	      0xe800000000	                          call 0x4000240	        35	split-index.c	FUNCTION_2	CALL_5
0x4000240	          0x4c89e2	                            mov rdx, r12	        36	split-index.c	FUNCTION_2	CALL_6
0x4000243	        0x48894528	            mov qword [rbp + 0x28], rax 	        35	split-index.c	FUNCTION_2	CALL_5
0x4000247	          0x4889de	                            mov rsi, rbx	        36	split-index.c	FUNCTION_2	CALL_6
0x400024a	          0x4889c7	                            mov rdi, rax	        36	split-index.c	FUNCTION_2	CALL_6
0x400024d	      0xe800000000	                          call 0x4000252	        36	split-index.c	FUNCTION_2	CALL_6
0x4000252	            0x85c0	                           test eax, eax	        37	split-index.c	FUNCTION_2	IF_4
0x4000254	            0x7876	                            js 0x40002cc	        37	split-index.c	FUNCTION_2	IF_4
0x4000256	            0x4898	                                    cdqe	        39	split-index.c	FUNCTION_2	IF_5
0x4000258	          0x4939c4	                            cmp r12, rax	        39	split-index.c	FUNCTION_2	IF_5
0x400025b	            0x74a6	                            je 0x4000203	        39	split-index.c	FUNCTION_2	IF_5
0x400025d	      0xbf00000000	                              mov edi, 0	        40	split-index.c	FUNCTION_2	IF_5
0x4000262	            0x31c0	                            xor eax, eax	        40	split-index.c	FUNCTION_2	IF_5
0x4000264	      0xe800000000	                          call 0x4000269	        40	split-index.c	FUNCTION_2	IF_5
0x4000269	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	split-index.c	FUNCTION_2	IF_5
0x400026e	            0xeb95	                           jmp 0x4000205	        40	split-index.c	FUNCTION_2	IF_5
0x4000270	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000275	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400027a	      0x4889542408	                mov qword [rsp + 8], rdx	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400027f	      0xe800000000	                          call 0x4000284	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000284	      0x488b542408	                mov rdx, qword [rsp + 8]	         9	split-index.c	FUNCTION_1	IF_1
0x4000289	      0x4989442428	             mov qword [r12 + 0x28], rax	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400028e	          0x4889c5	                            mov rbp, rax	         9	split-index.c	FUNCTION_1	IF_1
0x4000291	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x4000298	      0xe948ffffff	                           jmp 0x40001e5	         9	split-index.c	FUNCTION_1	IF_1
0x400029d	           0xf1f00	                         nop dword [rax]	         9	split-index.c	FUNCTION_1	IF_1
0x40002a0	      0xbf00000000	                              mov edi, 0	        22	split-index.c	FUNCTION_2	IF_1
0x40002a5	            0x31c0	                            xor eax, eax	        22	split-index.c	FUNCTION_2	IF_1
0x40002a7	      0xe800000000	                          call 0x40002ac	        22	split-index.c	FUNCTION_2	IF_1
0x40002ac	      0xb8ffffffff	                     mov eax, 0xffffffff	        22	split-index.c	FUNCTION_2	IF_1
0x40002b1	      0xe94fffffff	                           jmp 0x4000205	        22	split-index.c	FUNCTION_2	IF_1
0x40002b6	      0xbf00000000	                              mov edi, 0	        32	split-index.c	FUNCTION_2	IF_3
0x40002bb	            0x31c0	                            xor eax, eax	        32	split-index.c	FUNCTION_2	IF_3
0x40002bd	      0xe800000000	                          call 0x40002c2	        32	split-index.c	FUNCTION_2	IF_3
0x40002c2	      0xb8ffffffff	                     mov eax, 0xffffffff	        32	split-index.c	FUNCTION_2	IF_3
0x40002c7	      0xe939ffffff	                           jmp 0x4000205	        32	split-index.c	FUNCTION_2	IF_3
0x40002cc	      0xbf00000000	                              mov edi, 0	        38	split-index.c	FUNCTION_2	IF_4
0x40002d1	            0x31c0	                            xor eax, eax	        38	split-index.c	FUNCTION_2	IF_4
0x40002d3	      0xe800000000	                          call 0x40002d8	        38	split-index.c	FUNCTION_2	IF_4
0x40002d8	      0xb8ffffffff	                     mov eax, 0xffffffff	        38	split-index.c	FUNCTION_2	IF_4
0x40002dd	      0xe923ffffff	                           jmp 0x4000205	        38	split-index.c	FUNCTION_2	IF_4
save_or_free_index_entry	ELSE,1:WHILE,0:FOR,0:IF,1:functions,0:CALL,1:SWITCH,0:DO,0	20
0x4000a90	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       297	split-index.c	FUNCTION_12	IF_1
0x4000a93	            0x85c0	                           test eax, eax	       297	split-index.c	FUNCTION_12	IF_1
0x4000a95	            0x7423	                            je 0x4000aba	       297	split-index.c	FUNCTION_12	IF_1
0x4000a97	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       298	split-index.c	FUNCTION_12	IF_1
0x4000a9b	          0x4885d2	                           test rdx, rdx	       297	split-index.c	FUNCTION_12	IF_1
0x4000a9e	            0x741a	                            je 0x4000aba	       297	split-index.c	FUNCTION_12	IF_1
0x4000aa0	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       299	split-index.c	FUNCTION_12	IF_1
0x4000aa4	          0x4885d2	                           test rdx, rdx	       298	split-index.c	FUNCTION_12	IF_1
0x4000aa7	            0x7411	                            je 0x4000aba	       298	split-index.c	FUNCTION_12	IF_1
0x4000aa9	          0x3b420c	              cmp eax, dword [rdx + 0xc]	       299	split-index.c	FUNCTION_12	IF_1
0x4000aac	            0x770c	                            ja 0x4000aba	       299	split-index.c	FUNCTION_12	IF_1
0x4000aae	          0x8d48ff	                      lea ecx, [rax - 1]	       301	split-index.c	FUNCTION_12	IF_1
0x4000ab1	          0x488b02	                    mov rax, qword [rdx]	       301	split-index.c	FUNCTION_12	IF_1
0x4000ab4	        0x483b34c8	            cmp rsi, qword [rax + rcx*8]	       300	split-index.c	FUNCTION_12	IF_1
0x4000ab8	            0x740e	                            je 0x4000ac8	       300	split-index.c	FUNCTION_12	IF_1
0x4000aba	          0x4889f7	                            mov rdi, rsi	       304	split-index.c	FUNCTION_12	CALL_1
0x4000abd	      0xe900000000	                           jmp 0x4000ac2	       304	split-index.c	FUNCTION_12	CALL_1
0x4000ac2	    0x660f1f440000	                    nop word [rax + rax]	       304	split-index.c	FUNCTION_12	CALL_1
0x4000ac8	    0x814e38000002	          or dword [rsi + 0x38], 0x20000	       302	split-index.c	FUNCTION_12	IF_1
0x4000acf	              0xc3	                                     ret	       302	split-index.c	FUNCTION_12	IF_1
discard_split_index	ELSE,0:WHILE,0:FOR,0:IF,3:functions,0:CALL,3:SWITCH,0:DO,0	19
0x4000a40	              0x53	                                push rbx	       280	split-index.c	FUNCTION_11
0x4000a41	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       281	split-index.c	FUNCTION_11
0x4000a45	          0x4885db	                           test rbx, rbx	       282	split-index.c	FUNCTION_11	IF_1
0x4000a48	            0x7436	                            je 0x4000a80	       282	split-index.c	FUNCTION_11	IF_1
0x4000a4a	    0x48c747280000	               mov qword [rdi + 0x28], 0	       284	split-index.c	FUNCTION_11
0x4000a52	        0x836b4401	               sub dword [rbx + 0x44], 1	       286	split-index.c	FUNCTION_11	IF_2
0x4000a56	            0x7528	                           jne 0x4000a80	       286	split-index.c	FUNCTION_11	IF_2
0x4000a58	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       288	split-index.c	FUNCTION_11	IF_3
0x4000a5c	          0x4885ff	                           test rdi, rdi	       288	split-index.c	FUNCTION_11	IF_3
0x4000a5f	            0x740e	                            je 0x4000a6f	       288	split-index.c	FUNCTION_11	IF_3
0x4000a61	      0xe800000000	                          call 0x4000a66	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x4000a66	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x4000a6f	          0x4889df	                            mov rdi, rbx	       292	split-index.c	FUNCTION_11	CALL_3
0x4000a72	              0x5b	                                 pop rbx	       293	split-index.c	FUNCTION_11
0x4000a73	      0xe900000000	                           jmp 0x4000a78	       292	split-index.c	FUNCTION_11	CALL_3
0x4000a78	     0xf1f84000000	                   nop dword [rax + rax]	       292	split-index.c	FUNCTION_11	CALL_3
0x4000a80	              0x5b	                                 pop rbx	       293	split-index.c	FUNCTION_11
0x4000a81	              0xc3	                                     ret	       293	split-index.c	FUNCTION_11
replace_entry	ELSE,0:WHILE,0:FOR,0:IF,4:functions,0:CALL,6:SWITCH,0:DO,0	69
0x4000080	              0x53	                                push rbx	       103	split-index.c	FUNCTION_7
0x4000081	          0x8b460c	              mov eax, dword [rsi + 0xc]	       108	split-index.c	FUNCTION_7	IF_1
0x4000084	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       105	split-index.c	FUNCTION_7
0x4000088	          0x4839f8	                            cmp rax, rdi	       108	split-index.c	FUNCTION_7	IF_1
0x400008b	     0xf86b7000000	                           jbe 0x4000148	       108	split-index.c	FUNCTION_7	IF_1
0x4000091	          0x8b4340	            mov eax, dword [rbx + 0x40] 	       111	split-index.c	FUNCTION_7	IF_2
0x4000094	          0x8b5338	            mov edx, dword [rbx + 0x38] 	       111	split-index.c	FUNCTION_7	IF_2
0x4000097	            0x39d0	                            cmp eax, edx	       111	split-index.c	FUNCTION_7	IF_2
0x4000099	     0xf83d6000000	                           jae 0x4000175	       111	split-index.c	FUNCTION_7	IF_2
0x400009f	          0x488b16	                    mov rdx, qword [rsi]	       114	split-index.c	FUNCTION_7
0x40000a2	        0x4c8b04fa	             mov r8, qword [rdx + rdi*8]	       114	split-index.c	FUNCTION_7
0x40000a6	      0x41f6403a02	                test byte [r8 + 0x3a], 2	       115	split-index.c	FUNCTION_7	IF_3
0x40000ab	     0xf85b6000000	                           jne 0x4000167	       115	split-index.c	FUNCTION_7	IF_3
0x40000b1	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       118	split-index.c	FUNCTION_7
0x40000b5	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       118	split-index.c	FUNCTION_7
0x40000b9	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       119	split-index.c	FUNCTION_7	IF_4
0x40000bc	            0x85d2	                           test edx, edx	       119	split-index.c	FUNCTION_7	IF_4
0x40000be	     0xf8595000000	                           jne 0x4000159	       119	split-index.c	FUNCTION_7	IF_4
0x40000c4	          0x83c701	                              add edi, 1	       122	split-index.c	FUNCTION_7
0x40000c7	        0x418b503c	              mov edx, dword [r8 + 0x3c]	       124	split-index.c	FUNCTION_7
0x40000cb	    0x814838000000	     or dword [rax + 0x38], section_end.	       123	split-index.c	FUNCTION_7
0x40000d2	          0x897840	             mov dword [rax + 0x40], edi	       122	split-index.c	FUNCTION_7
0x40000d5	        0x488b7810	            mov rdi, qword [rax + 0x10] 	        53	string3.h	FUNCTION_70	CALL_3
0x40000d9	        0x418b7038	              mov esi, dword [r8 + 0x38]	       229	cache.h	FUNCTION_16
0x40000dd	          0x89503c	             mov dword [rax + 0x3c], edx	       124	split-index.c	FUNCTION_7
0x40000e0	        0x49897810	              mov qword [r8 + 0x10], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x40000e4	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_70	CALL_3
0x40000e8	    0x81e600001000	                       and esi, 0x100000	       229	cache.h	FUNCTION_16
0x40000ee	        0x49897818	              mov qword [r8 + 0x18], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x40000f2	        0x488b7820	            mov rdi, qword [rax + 0x20] 	        53	string3.h	FUNCTION_70	CALL_3
0x40000f6	        0x49897820	              mov qword [r8 + 0x20], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x40000fa	        0x488b7828	            mov rdi, qword [rax + 0x28] 	        53	string3.h	FUNCTION_70	CALL_3
0x40000fe	        0x49897828	              mov qword [r8 + 0x28], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x4000102	        0x488b7830	            mov rdi, qword [rax + 0x30] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000106	        0x49897830	              mov qword [r8 + 0x30], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x400010a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	        53	string3.h	FUNCTION_70	CALL_3
0x400010e	        0x49897838	              mov qword [r8 + 0x38], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x4000112	        0x488b7840	            mov rdi, qword [rax + 0x40] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000116	        0x418b5038	              mov edx, dword [r8 + 0x38]	       237	cache.h	FUNCTION_16
0x400011a	        0x49897840	              mov qword [r8 + 0x40], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x400011e	        0x488b7848	            mov rdi, qword [rax + 0x48] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000122	    0x81e2ffffefff	                     and edx, 0xffefffff	       237	cache.h	FUNCTION_16
0x4000128	             0x9f2	                             or edx, esi	       237	cache.h	FUNCTION_16
0x400012a	        0x49897848	              mov qword [r8 + 0x48], rdi	        53	string3.h	FUNCTION_70	CALL_3
0x400012e	        0x488b4850	            mov rcx, qword [rax + 0x50] 	        53	string3.h	FUNCTION_70	CALL_3
0x4000132	          0x4889c7	                            mov rdi, rax	       126	split-index.c	FUNCTION_7	CALL_6
0x4000135	        0x41895038	              mov dword [r8 + 0x38], edx	       237	cache.h	FUNCTION_16
0x4000139	        0x49894850	              mov qword [r8 + 0x50], rcx	        53	string3.h	FUNCTION_70	CALL_3
0x400013d	      0xe800000000	                          call 0x4000142	       126	split-index.c	FUNCTION_7	CALL_6
0x4000142	        0x83434001	               add dword [rbx + 0x40], 1	       127	split-index.c	FUNCTION_7
0x4000146	              0x5b	                                 pop rbx	       128	split-index.c	FUNCTION_7
0x4000147	              0xc3	                                     ret	       128	split-index.c	FUNCTION_7
0x4000148	          0x4889c2	                            mov rdx, rax	       128	split-index.c	FUNCTION_7
0x400014b	            0x89fe	                            mov esi, edi	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x400014d	            0x31c0	                            xor eax, eax	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x400014f	      0xbf00000000	                              mov edi, 0	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x4000154	      0xe800000000	                          call 0x4000159	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x4000159	            0x89fe	                            mov esi, edi	       120	split-index.c	FUNCTION_7	IF_4	CALL_4
0x400015b	            0x31c0	                            xor eax, eax	       120	split-index.c	FUNCTION_7	IF_4	CALL_4
0x400015d	      0xbf00000000	                              mov edi, 0	       120	split-index.c	FUNCTION_7	IF_4	CALL_4
0x4000162	      0xe800000000	                          call 0x4000167	       120	split-index.c	FUNCTION_7	IF_4	CALL_4
0x4000167	            0x89fe	                            mov esi, edi	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x4000169	            0x31c0	                            xor eax, eax	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x400016b	      0xbf00000000	                              mov edi, 0	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x4000170	      0xe800000000	                          call 0x4000175	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x4000175	            0x89c6	                            mov esi, eax	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x4000177	      0xbf00000000	                              mov edi, 0	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x400017c	            0x31c0	                            xor eax, eax	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x400017e	      0xe800000000	                          call 0x4000183	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
mark_entry_for_delete	ELSE,0:WHILE,0:FOR,0:IF,1:functions,0:CALL,1:SWITCH,0:DO,0	15
0x4000040	          0x8b460c	              mov eax, dword [rsi + 0xc]	        95	split-index.c	FUNCTION_6	IF_1
0x4000043	          0x4839f8	                            cmp rax, rdi	        95	split-index.c	FUNCTION_6	IF_1
0x4000046	            0x761a	                           jbe 0x4000062	        95	split-index.c	FUNCTION_6	IF_1
0x4000048	          0x488b06	                    mov rax, qword [rsi]	        98	split-index.c	FUNCTION_6
0x400004b	        0x488b04f8	            mov rax, qword [rax + rdi*8]	        98	split-index.c	FUNCTION_6
0x400004f	    0x814838000002	          or dword [rax + 0x38], 0x20000	        98	split-index.c	FUNCTION_6
0x4000056	        0x488b4628	            mov rax, qword [rsi + 0x28] 	        99	split-index.c	FUNCTION_6
0x400005a	    0xc7403c010000	               mov dword [rax + 0x3c], 1	        99	split-index.c	FUNCTION_6
0x4000061	              0xc3	                                     ret	        99	split-index.c	FUNCTION_6
0x4000062	              0x52	                                push rdx	        93	split-index.c	FUNCTION_6
0x4000063	          0x4889fe	                            mov rsi, rdi	        93	split-index.c	FUNCTION_6
0x4000066	          0x4889c2	                            mov rdx, rax	        93	split-index.c	FUNCTION_6
0x4000069	      0xbf00000000	                              mov edi, 0	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x400006e	            0x31c0	                            xor eax, eax	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x4000070	      0xe800000000	                          call 0x4000075	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
