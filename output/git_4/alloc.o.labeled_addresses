alloc_object_node	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,1:DO,0	29
0x40001c0	        0x4883ec08	                              sub rsp, 8	        77	alloc.c	FUNCTION_5
0x40001c4	    0x8b0500000000	            mov eax, dword [0x040001ca] 	        39	alloc.c	FUNCTION_1	IF_1
0x40001ca	    0x488b15000000	            mov rdx, qword [0x040001d1] 	        39	alloc.c	FUNCTION_1	IF_1
0x40001d1	            0x85c0	                           test eax, eax	        39	alloc.c	FUNCTION_1	IF_1
0x40001d3	            0x751d	                           jne 0x40001f2	        39	alloc.c	FUNCTION_1	IF_1
0x40001d5	      0xbf00200100	                        mov edi, 0x12000	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40001da	    0xc70500000000	          mov dword [0x040001e4], 0x400 	        40	alloc.c	FUNCTION_1	IF_1
0x40001e4	      0xe800000000	                          call 0x40001e9	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40001e9	          0x4889c2	                            mov rdx, rax	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40001ec	    0x8b0500000000	            mov eax, dword [0x040001f2] 	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40001f2	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_13	CALL_6
0x40001f6	          0x83e801	                              sub eax, 1	        43	alloc.c	FUNCTION_1
0x40001f9	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_13	CALL_6
0x40001fc	    0x890500000000	            mov dword [0x04000202], eax 	        43	alloc.c	FUNCTION_1
0x4000202	        0x488d4248	                   lea rax, [rdx + 0x48]	        46	alloc.c	FUNCTION_1
0x4000206	    0x830500000000	               add dword [0x0400020d], 1	        44	alloc.c	FUNCTION_1
0x400020d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_13	CALL_6
0x4000211	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_13	CALL_6
0x4000214	    0x488905000000	            mov qword [0x0400021b], rax 	        46	alloc.c	FUNCTION_1
0x400021b	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x400021d	          0x83c148	                           add ecx, 0x48	        90	string3.h	FUNCTION_13	CALL_6
0x4000220	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000227	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_13	CALL_6
0x400022a	    0x48c742400000	               mov qword [rdx + 0x40], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000232	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x4000235	          0x4889d0	                            mov rax, rdx	        81	alloc.c	FUNCTION_5
0x4000238	          0x8022f1	                    and byte [rdx], 0xf1	        79	alloc.c	FUNCTION_5
0x400023b	        0x4883c408	                              add rsp, 8	        81	alloc.c	FUNCTION_5
0x400023f	              0xc3	                                     ret	        81	alloc.c	FUNCTION_5
alloc_commit_node	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,2:DO,0	37
0x4000250	        0x4883ec08	                              sub rsp, 8	        92	alloc.c	FUNCTION_7
0x4000254	    0x8b0500000000	            mov eax, dword [0x0400025a] 	        39	alloc.c	FUNCTION_1	IF_1
0x400025a	    0x488b15000000	            mov rdx, qword [0x04000261] 	        39	alloc.c	FUNCTION_1	IF_1
0x4000261	            0x85c0	                           test eax, eax	        39	alloc.c	FUNCTION_1	IF_1
0x4000263	            0x751d	                           jne 0x4000282	        39	alloc.c	FUNCTION_1	IF_1
0x4000265	      0xbf00200100	                        mov edi, 0x12000	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400026a	    0xc70500000000	          mov dword [0x04000274], 0x400 	        40	alloc.c	FUNCTION_1	IF_1
0x4000274	      0xe800000000	                          call 0x4000279	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000279	          0x4889c2	                            mov rdx, rax	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400027c	    0x8b0500000000	            mov eax, dword [0x04000282] 	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000282	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_13	CALL_6
0x4000286	          0x83e801	                              sub eax, 1	        43	alloc.c	FUNCTION_1
0x4000289	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_13	CALL_6
0x400028c	    0x890500000000	            mov dword [0x04000292], eax 	        43	alloc.c	FUNCTION_1
0x4000292	        0x488d4248	                   lea rax, [rdx + 0x48]	        46	alloc.c	FUNCTION_1
0x4000296	    0x830500000000	               add dword [0x0400029d], 1	        44	alloc.c	FUNCTION_1
0x400029d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_13	CALL_6
0x40002a1	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_13	CALL_6
0x40002a4	    0x488905000000	            mov qword [0x040002ab], rax 	        46	alloc.c	FUNCTION_1
0x40002ab	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x40002ad	          0x83c148	                           add ecx, 0x48	        90	string3.h	FUNCTION_13	CALL_6
0x40002b0	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_13	CALL_6
0x40002b7	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_13	CALL_6
0x40002ba	    0x48c742400000	               mov qword [rdx + 0x40], 0	        90	string3.h	FUNCTION_13	CALL_6
0x40002c2	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x40002c5	    0xc74240ffffff	     mov dword [rdx + 0x40], 0xffffffff 	        96	alloc.c	FUNCTION_7
0x40002cc	           0xfb602	                   movzx eax, byte [rdx]	        94	alloc.c	FUNCTION_7
0x40002cf	          0x83e0f1	                     and eax, 0xfffffff1	        94	alloc.c	FUNCTION_7
0x40002d2	          0x83c802	                               or eax, 2	        94	alloc.c	FUNCTION_7
0x40002d5	            0x8802	                      mov byte [rdx], al	        94	alloc.c	FUNCTION_7
0x40002d7	    0x8b0500000000	            mov eax, dword [0x040002dd] 	        88	alloc.c	FUNCTION_6
0x40002dd	          0x8d4801	                      lea ecx, [rax + 1]	        88	alloc.c	FUNCTION_6
0x40002e0	          0x894220	             mov dword [rdx + 0x20], eax	        95	alloc.c	FUNCTION_7	CALL_2
0x40002e3	          0x4889d0	                            mov rax, rdx	        98	alloc.c	FUNCTION_7
0x40002e6	    0x890d00000000	            mov dword [0x040002ec], ecx 	        88	alloc.c	FUNCTION_6
0x40002ec	        0x4883c408	                              add rsp, 8	        98	alloc.c	FUNCTION_7
0x40002f0	              0xc3	                                     ret	        98	alloc.c	FUNCTION_7
alloc_tree_node	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,1:DO,0	22
0x40000b0	        0x4883ec08	                              sub rsp, 8	        61	alloc.c	FUNCTION_3
0x40000b4	    0x8b1500000000	            mov edx, dword [0x040000ba] 	        39	alloc.c	FUNCTION_1	IF_1
0x40000ba	    0x488b05000000	            mov rax, qword [0x040000c1] 	        39	alloc.c	FUNCTION_1	IF_1
0x40000c1	            0x85d2	                           test edx, edx	        39	alloc.c	FUNCTION_1	IF_1
0x40000c3	            0x751a	                           jne 0x40000df	        39	alloc.c	FUNCTION_1	IF_1
0x40000c5	      0xbf00a00000	                         mov edi, 0xa000	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40000ca	    0xc70500000000	          mov dword [0x040000d4], 0x400 	        40	alloc.c	FUNCTION_1	IF_1
0x40000d4	      0xe800000000	                          call 0x40000d9	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40000d9	    0x8b1500000000	            mov edx, dword [0x040000df] 	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x40000df	          0x83ea01	                              sub edx, 1	        43	alloc.c	FUNCTION_1
0x40000e2	    0x830500000000	               add dword [0x040000e9], 1	        44	alloc.c	FUNCTION_1
0x40000e9	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_13	CALL_6
0x40000f1	    0x891500000000	            mov dword [0x040000f7], edx 	        43	alloc.c	FUNCTION_1
0x40000f7	        0x488d5028	                   lea rdx, [rax + 0x28]	        46	alloc.c	FUNCTION_1
0x40000fb	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000103	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_13	CALL_6
0x400010b	    0x488915000000	            mov qword [0x04000112], rdx 	        46	alloc.c	FUNCTION_1
0x4000112	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000119	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000121	          0xc60004	                       mov byte [rax], 4	        63	alloc.c	FUNCTION_3
0x4000124	        0x4883c408	                              add rsp, 8	        65	alloc.c	FUNCTION_3
0x4000128	              0xc3	                                     ret	        65	alloc.c	FUNCTION_3
alloc_report	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,0:DO,0	57
0x4000300	        0x4883ec08	                              sub rsp, 8	       110	alloc.c	FUNCTION_9
0x4000304	    0x486305000000	         movsxd rax, dword [0x0400030b] 	       111	alloc.c	FUNCTION_9
0x400030b	    0x488b3d000000	            mov rdi, qword [0x04000312] 	        97	stdio2.h	CALL_12
0x4000312	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_12
0x4000317	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x400031c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000321	        0x4c8d0c40	                   lea r9, [rax + rax*2]	        97	stdio2.h	CALL_12
0x4000325	          0x4989c0	                             mov r8, rax	       111	alloc.c	FUNCTION_9
0x4000328	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x400032a	        0x49c1e103	                               shl r9, 3	        97	stdio2.h	CALL_12
0x400032e	        0x49c1e90a	                             shr r9, 0xa	        97	stdio2.h	CALL_12
0x4000332	      0xe800000000	                          call 0x4000337	        97	stdio2.h	CALL_12
0x4000337	    0x486305000000	         movsxd rax, dword [0x0400033e] 	       112	alloc.c	FUNCTION_9
0x400033e	    0x488b3d000000	            mov rdi, qword [0x04000345] 	        97	stdio2.h	CALL_12
0x4000345	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_12
0x400034a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x400034f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000354	        0x4c8d0c80	                   lea r9, [rax + rax*4]	        97	stdio2.h	CALL_12
0x4000358	          0x4989c0	                             mov r8, rax	       112	alloc.c	FUNCTION_9
0x400035b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x400035d	        0x49c1e103	                               shl r9, 3	        97	stdio2.h	CALL_12
0x4000361	        0x49c1e90a	                             shr r9, 0xa	        97	stdio2.h	CALL_12
0x4000365	      0xe800000000	                          call 0x400036a	        97	stdio2.h	CALL_12
0x400036a	    0x486305000000	         movsxd rax, dword [0x04000371] 	       113	alloc.c	FUNCTION_9
0x4000371	    0x488b3d000000	            mov rdi, qword [0x04000378] 	        97	stdio2.h	CALL_12
0x4000378	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_12
0x400037d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x4000382	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4000387	        0x4c8d0cc0	                   lea r9, [rax + rax*8]	        97	stdio2.h	CALL_12
0x400038b	          0x4989c0	                             mov r8, rax	       113	alloc.c	FUNCTION_9
0x400038e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x4000390	        0x49c1e103	                               shl r9, 3	        97	stdio2.h	CALL_12
0x4000394	        0x49c1e90a	                             shr r9, 0xa	        97	stdio2.h	CALL_12
0x4000398	      0xe800000000	                          call 0x400039d	        97	stdio2.h	CALL_12
0x400039d	    0x486305000000	         movsxd rax, dword [0x040003a4] 	       114	alloc.c	FUNCTION_9
0x40003a4	    0x488b3d000000	            mov rdi, qword [0x040003ab] 	        97	stdio2.h	CALL_12
0x40003ab	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_12
0x40003b0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40003b5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40003ba	        0x4c8d0c40	                   lea r9, [rax + rax*2]	        97	stdio2.h	CALL_12
0x40003be	          0x4989c0	                             mov r8, rax	       114	alloc.c	FUNCTION_9
0x40003c1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40003c3	        0x49c1e104	                               shl r9, 4	        97	stdio2.h	CALL_12
0x40003c7	        0x49c1e90a	                             shr r9, 0xa	        97	stdio2.h	CALL_12
0x40003cb	      0xe800000000	                          call 0x40003d0	        97	stdio2.h	CALL_12
0x40003d0	    0x486305000000	         movsxd rax, dword [0x040003d7] 	       115	alloc.c	FUNCTION_9
0x40003d7	    0x488b3d000000	            mov rdi, qword [0x040003de] 	        97	stdio2.h	CALL_12
0x40003de	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_12
0x40003e3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40003e8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40003ed	        0x4883c408	                              add rsp, 8	       116	alloc.c	FUNCTION_9
0x40003f1	        0x4c8d0cc0	                   lea r9, [rax + rax*8]	        97	stdio2.h	CALL_12
0x40003f5	          0x4989c0	                             mov r8, rax	       115	alloc.c	FUNCTION_9
0x40003f8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_12
0x40003fa	        0x49c1e103	                               shl r9, 3	        97	stdio2.h	CALL_12
0x40003fe	        0x49c1e90a	                             shr r9, 0xa	        97	stdio2.h	CALL_12
0x4000402	      0xe900000000	                   jmp section_end..data	        97	stdio2.h	CALL_12
alloc_tag_node	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,1:DO,0	32
0x4000130	        0x4883ec08	                              sub rsp, 8	        69	alloc.c	FUNCTION_4
0x4000134	    0x8b0500000000	            mov eax, dword [0x0400013a] 	        39	alloc.c	FUNCTION_1	IF_1
0x400013a	    0x488b15000000	            mov rdx, qword [0x04000141] 	        39	alloc.c	FUNCTION_1	IF_1
0x4000141	            0x85c0	                           test eax, eax	        39	alloc.c	FUNCTION_1	IF_1
0x4000143	            0x751d	                           jne 0x4000162	        39	alloc.c	FUNCTION_1	IF_1
0x4000145	      0xbf00c00000	                         mov edi, 0xc000	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400014a	    0xc70500000000	          mov dword [0x04000154], 0x400 	        40	alloc.c	FUNCTION_1	IF_1
0x4000154	      0xe800000000	                          call 0x4000159	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000159	          0x4889c2	                            mov rdx, rax	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400015c	    0x8b0500000000	            mov eax, dword [0x04000162] 	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000162	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_13	CALL_6
0x4000166	          0x83e801	                              sub eax, 1	        43	alloc.c	FUNCTION_1
0x4000169	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_13	CALL_6
0x400016c	    0x890500000000	            mov dword [0x04000172], eax 	        43	alloc.c	FUNCTION_1
0x4000172	        0x488d4230	                   lea rax, [rdx + 0x30]	        46	alloc.c	FUNCTION_1
0x4000176	    0x830500000000	               add dword [0x0400017d], 1	        44	alloc.c	FUNCTION_1
0x400017d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_13	CALL_6
0x4000181	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_13	CALL_6
0x4000184	    0x488905000000	            mov qword [0x0400018b], rax 	        46	alloc.c	FUNCTION_1
0x400018b	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_13	CALL_6
0x400018d	          0x83c130	                           add ecx, 0x30	        90	string3.h	FUNCTION_13	CALL_6
0x4000190	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000197	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_13	CALL_6
0x400019a	    0x48c742280000	               mov qword [rdx + 0x28], 0	        90	string3.h	FUNCTION_13	CALL_6
0x40001a2	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x40001a5	           0xfb602	                   movzx eax, byte [rdx]	        71	alloc.c	FUNCTION_4
0x40001a8	          0x83e0f1	                     and eax, 0xfffffff1	        71	alloc.c	FUNCTION_4
0x40001ab	          0x83c808	                               or eax, 8	        71	alloc.c	FUNCTION_4
0x40001ae	            0x8802	                      mov byte [rdx], al	        71	alloc.c	FUNCTION_4
0x40001b0	          0x4889d0	                            mov rax, rdx	        73	alloc.c	FUNCTION_4
0x40001b3	        0x4883c408	                              add rsp, 8	        73	alloc.c	FUNCTION_4
0x40001b7	              0xc3	                                     ret	        73	alloc.c	FUNCTION_4
alloc_blob_node	ELSE,0:functions,0:FOR,0:SWITCH,0:IF,0:WHILE,0:CALL,1:DO,0	20
0x4000040	        0x4883ec08	                              sub rsp, 8	        53	alloc.c	FUNCTION_2
0x4000044	    0x8b1500000000	            mov edx, dword [0x0400004a] 	        39	alloc.c	FUNCTION_1	IF_1
0x400004a	    0x488b05000000	            mov rax, qword [0x04000051] 	        39	alloc.c	FUNCTION_1	IF_1
0x4000051	            0x85d2	                           test edx, edx	        39	alloc.c	FUNCTION_1	IF_1
0x4000053	            0x751a	                           jne 0x400006f	        39	alloc.c	FUNCTION_1	IF_1
0x4000055	      0xbf00600000	                         mov edi, 0x6000	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400005a	    0xc70500000000	          mov dword [0x04000064], 0x400 	        40	alloc.c	FUNCTION_1	IF_1
0x4000064	      0xe800000000	                          call 0x4000069	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x4000069	    0x8b1500000000	            mov edx, dword [0x0400006f] 	        41	alloc.c	FUNCTION_1	IF_1	CALL_1
0x400006f	          0x83ea01	                              sub edx, 1	        43	alloc.c	FUNCTION_1
0x4000072	    0x830500000000	               add dword [0x04000079], 1	        44	alloc.c	FUNCTION_1
0x4000079	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000081	    0x891500000000	            mov dword [0x04000087], edx 	        43	alloc.c	FUNCTION_1
0x4000087	        0x488d5018	                   lea rdx, [rax + 0x18]	        46	alloc.c	FUNCTION_1
0x400008b	    0x488915000000	            mov qword [0x04000092], rdx 	        46	alloc.c	FUNCTION_1
0x4000092	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000099	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_13	CALL_6
0x40000a1	          0xc60006	                       mov byte [rax], 6	        55	alloc.c	FUNCTION_2
0x40000a4	        0x4883c408	                              add rsp, 8	        57	alloc.c	FUNCTION_2
0x40000a8	              0xc3	                                     ret	        57	alloc.c	FUNCTION_2
