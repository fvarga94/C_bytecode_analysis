pretty_print_commit	IF,11:ELSE,1:SWITCH,0:FOR,1:DO,0:WHILE,0:functions,0:CALL,17	408
0x4003cc0	            0x4157	                                push r15	      1791	pretty.c	FUNCTION_52
0x4003cc2	            0x4156	                                push r14	      1791	pretty.c	FUNCTION_52
0x4003cc4	          0x4989d7	                            mov r15, rdx	      1791	pretty.c	FUNCTION_52
0x4003cc7	            0x4155	                                push r13	      1791	pretty.c	FUNCTION_52
0x4003cc9	            0x4154	                                push r12	      1791	pretty.c	FUNCTION_52
0x4003ccb	              0x55	                                push rbp	      1791	pretty.c	FUNCTION_52
0x4003ccc	              0x53	                                push rbx	      1791	pretty.c	FUNCTION_52
0x4003ccd	          0x4889fb	                            mov rbx, rdi	      1791	pretty.c	FUNCTION_52
0x4003cd0	        0x4883ec48	                           sub rsp, 0x48	      1791	pretty.c	FUNCTION_52
0x4003cd4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1791	pretty.c	FUNCTION_52
0x4003cdd	      0x4889442438	             mov qword [rsp + 0x38], rax	      1791	pretty.c	FUNCTION_52
0x4003ce2	            0x31c0	                            xor eax, eax	      1791	pretty.c	FUNCTION_52
0x4003ce4	          0x833f08	                      cmp dword [rdi], 8	      1799	pretty.c	FUNCTION_52	IF_1
0x4003ce7	      0x4889742408	                mov qword [rsp + 8], rsi	      1791	pretty.c	FUNCTION_52
0x4003cec	     0xf848e040000	                            je 0x4004180	      1799	pretty.c	FUNCTION_52	IF_1
0x4003cf2	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	      1797	pretty.c	FUNCTION_52
0x4003cf5	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1797	pretty.c	FUNCTION_52
0x4003cf9	      0xe800000000	                          call 0x4003cfe	      1804	pretty.c	FUNCTION_52	CALL_2
0x4003cfe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d03	            0x31f6	                            xor esi, esi	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d05	          0x4889c2	                            mov rdx, rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d08	      0x4889442418	             mov qword [rsp + 0x18], rax	      1804	pretty.c	FUNCTION_52	CALL_2
0x4003d0d	      0xe800000000	                          call 0x4003d12	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d12	            0x8b0b	                    mov ecx, dword [rbx]	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d14	      0x4889442420	             mov qword [rsp + 0x20], rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d19	      0x4889442430	             mov qword [rsp + 0x30], rax	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d1e	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x4003d26	          0x83f905	                              cmp ecx, 5	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d29	            0x7414	                            je 0x4003d3f	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d2b	          0x8d41fa	                      lea eax, [rcx - 6]	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d2e	    0xc74424280400	               mov dword [rsp + 0x28], 4	      1793	pretty.c	FUNCTION_52
0x4003d36	          0x83f801	                              cmp eax, 1	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d39	     0xf869d040000	                           jbe 0x40041dc	      1807	pretty.c	FUNCTION_52	IF_2	CALL_4
0x4003d3f	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1805	pretty.c	FUNCTION_52	CALL_3
0x4003d44	            0x31ed	                            xor ebp, ebp	      1558	pretty.c	FUNCTION_45
0x4003d46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1558	pretty.c	FUNCTION_45
0x4003d50	          0x4c89f0	                            mov rax, r14	      1558	pretty.c	FUNCTION_45
0x4003d53	          0x4531ed	                          xor r13d, r13d	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003d56	            0xeb11	                           jmp 0x4003d69	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003d58	     0xf1f84000000	                   nop dword [rax + rax]	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003d60	        0x4183c501	                             add r13d, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003d64	          0x80fa0a	                             cmp dl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003d67	            0x7415	                            je 0x4003d7e	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003d69	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003d6d	         0xfb650ff	               movzx edx, byte [rax - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003d71	            0x84d2	                             test dl, dl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003d73	            0x75eb	                           jne 0x4003d60	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003d75	          0x4585ed	                         test r13d, r13d	      1564	pretty.c	FUNCTION_45	FOR_1	IF_1
0x4003d78	     0xf84e2010000	                            je 0x4003f60	      1564	pretty.c	FUNCTION_45	FOR_1	IF_1
0x4003d7e	          0x4963d5	                        movsxd rdx, r13d	      1566	pretty.c	FUNCTION_45	FOR_1
0x4003d81	        0x4183fd01	                             cmp r13d, 1	      1568	pretty.c	FUNCTION_45	FOR_1	IF_2
0x4003d85	        0x498d0416	                    lea rax, [r14 + rdx]	      1566	pretty.c	FUNCTION_45	FOR_1
0x4003d89	      0x4889442430	             mov qword [rsp + 0x30], rax	      1566	pretty.c	FUNCTION_45	FOR_1
0x4003d8e	     0xf84cf010000	                            je 0x4003f63	      1568	pretty.c	FUNCTION_45	FOR_1	IF_2
0x4003d94	            0x85c9	                           test ecx, ecx	      1572	pretty.c	FUNCTION_45	FOR_1	IF_3
0x4003d96	            0x7518	                           jne 0x4003db0	      1572	pretty.c	FUNCTION_45	FOR_1	IF_3
0x4003d98	          0x4c89f6	                            mov rsi, r14	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003d9b	          0x4c89ff	                            mov rdi, r15	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003d9e	      0xe800000000	                          call 0x4003da3	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003da3	            0x8b0b	                    mov ecx, dword [rbx]	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003da5	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003daa	            0xeba4	                           jmp 0x4003d50	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003dac	         0xf1f4000	                         nop dword [rax]	      1573	pretty.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x4003db0	      0xbe00000000	                              mov esi, 0	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003db5	          0x4c89f7	                            mov rdi, r14	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003db8	      0xe800000000	                          call 0x4003dbd	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003dbd	            0x85c0	                           test eax, eax	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003dbf	            0x740f	                            je 0x4003dd0	      1577	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_3
0x4003dc1	        0x4183fd30	                          cmp r13d, 0x30	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003dc5	     0xf850b050000	                           jne 0x40042d6	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003dcb	            0x8b0b	                    mov ecx, dword [rbx]	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003dcd	            0xebd6	                           jmp 0x4003da5	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003dcf	              0x90	                                     nop	      1578	pretty.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x4003dd0	            0x85ed	                           test ebp, ebp	      1583	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003dd2	     0xf84b1000000	                            je 0x4003e89	      1583	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003dd8	          0x4c89f1	                            mov rcx, r14	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003ddb	      0xb800000000	                              mov eax, 0	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003de0	            0xeb13	                           jmp 0x4003df5	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003de2	    0x660f1f440000	                    nop word [rax + rax]	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003de8	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003dec	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003df0	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003df3	            0x7535	                           jne 0x4003e2a	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003df5	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003df8	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003dfa	            0x75ec	                           jne 0x4003de8	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003dfc	        0x418d7550	                   lea esi, [r13 + 0x50]	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x4003e00	          0x4c89ff	                            mov rdi, r15	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x4003e03	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x4003e08	          0x4863f6	                         movsxd rsi, esi	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x4003e0b	      0xe800000000	                          call 0x4003e10	      1597	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_9
0x4003e10	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e15	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e1a	          0x4c89fa	                            mov rdx, r15	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e1d	      0xbe00000000	                              mov esi, 0	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e22	          0x4889df	                            mov rdi, rbx	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e25	      0xe800000000	                          call 0x4003e2a	      1598	pretty.c	FUNCTION_45	FOR_1	IF_7	CALL_10
0x4003e2a	      0xb800000000	                              mov eax, 0	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003e2f	            0xeb15	                           jmp 0x4003e46	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003e31	     0xf1f80000000	                         nop dword [rax]	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003e38	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003e3c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003e40	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003e44	            0x7585	                           jne 0x4003dcb	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4003e46	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003e49	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003e4b	            0x75eb	                           jne 0x4003e38	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4003e4d	            0x8b0b	                    mov ecx, dword [rbx]	      1601	pretty.c	FUNCTION_45	FOR_1	IF_8
0x4003e4f	          0x8d41fd	                      lea eax, [rcx - 3]	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x4003e52	          0x83f801	                              cmp eax, 1	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x4003e55	     0xf874affffff	                            ja 0x4003da5	      1600	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_11
0x4003e5b	        0x418d7550	                   lea esi, [r13 + 0x50]	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003e5f	          0x4c89ff	                            mov rdi, r15	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003e62	          0x4863f6	                         movsxd rsi, esi	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003e65	      0xe800000000	                          call 0x4003e6a	      1602	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x4003e6a	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e6f	          0x4c89f1	                            mov rcx, r14	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e72	          0x4c89fa	                            mov rdx, r15	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e75	      0xbe00000000	                              mov esi, 0	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e7a	          0x4889df	                            mov rdi, rbx	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e7d	      0xe800000000	                          call 0x4003e82	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e82	            0x8b0b	                    mov ecx, dword [rbx]	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e84	      0xe91cffffff	                           jmp 0x4003da5	      1603	pretty.c	FUNCTION_45	FOR_1	IF_8	CALL_13
0x4003e89	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x4003e8e	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x4003e92	      0xe800000000	                          call 0x4003e97	      1584	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_5
0x4003e97	          0x6bf032	                     imul esi, eax, 0x32	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003e9a	          0x4c89ff	                            mov rdi, r15	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003e9d	          0x83c614	                           add esi, 0x14	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003ea0	      0xe800000000	                          call 0x4003ea5	      1586	pretty.c	FUNCTION_45	FOR_1	IF_6	CALL_6
0x4003ea5	            0x8b03	                    mov eax, dword [rbx]	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003ea7	          0x83e805	                              sub eax, 5	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003eaa	          0x83f802	                              cmp eax, 2	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003ead	     0xf86c3030000	                           jbe 0x4004276	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003eb3	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003eb7	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4003ebc	          0x4d85e4	                           test r12, r12	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003ebf	     0xf8413ffffff	                            je 0x4003dd8	       542	pretty.c	WHILE_3	FUNCTION_22	IF_1	CALL_1
0x4003ec5	    0x49837c240800	                  cmp qword [r12 + 8], 0	       543	pretty.c	WHILE_3	FUNCTION_22	IF_1
0x4003ecb	     0xf8407ffffff	                            je 0x4003dd8	       543	pretty.c	WHILE_3	FUNCTION_22	IF_1
0x4003ed1	      0xba06000000	                              mov edx, 6	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003ed6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003edb	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003ede	      0xe800000000	                          call 0x4003ee3	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003ee3	            0xeb54	                           jmp 0x4003f39	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003ee5	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003ee8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003eed	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003ef0	      0xe800000000	                          call 0x4003ef5	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003ef5	        0x498b5708	                mov rdx, qword [r15 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003ef9	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4003efd	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4003f01	        0x49897708	                mov qword [r15 + 8], rsi	       229	strbuf.h	FUNCTION_59
0x4003f05	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_59
0x4003f09	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4003f0d	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_59
0x4003f11	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4003f15	          0x8b5304	                mov edx, dword [rbx + 4]	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x4003f18	            0x85d2	                           test edx, edx	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x4003f1a	     0xf8480010000	                            je 0x40040a0	       551	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	IF_2
0x4003f20	          0x4889ee	                            mov rsi, rbp	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x4003f23	          0x4c89ff	                            mov rdi, r15	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x4003f26	      0xe800000000	                          call 0x4003f2b	       552	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_4
0x4003f2b	      0x4d8b642408	                mov r12, qword [r12 + 8]	       555	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f30	          0x4d85e4	                           test r12, r12	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f33	     0xf8496010000	                            je 0x40040cf	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f39	        0x498b0424	                    mov rax, qword [r12]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f3d	        0x488d6804	                      lea rbp, [rax + 4]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f41	          0x498b07	                    mov rax, qword [r15]	       549	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x4003f44	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4003f47	            0x749f	                            je 0x4003ee8	       141	strbuf.h	FUNCTION_57
0x4003f49	        0x498b5708	                mov rdx, qword [r15 + 8]	       141	strbuf.h	FUNCTION_57
0x4003f4d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003f51	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003f54	            0x75a3	                           jne 0x4003ef9	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003f56	            0xeb90	                           jmp 0x4003ee8	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003f58	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003f60	          0x4c89f0	                            mov rax, r14	      1564	pretty.c	FUNCTION_45	FOR_1	IF_1
0x4003f63	          0x83f905	                              cmp ecx, 5	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f66	          0x4889c7	                            mov rdi, rax	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f69	            0x7415	                            je 0x4003f80	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f6b	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f6e	            0x85c0	                           test eax, eax	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f70	     0xf8421020000	                            je 0x4004197	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1834	pretty.c	FUNCTION_52	IF_7
0x4003f80	          0x4889f8	                            mov rax, rdi	       230	strbuf.h	FUNCTION_59
0x4003f83	            0x31f6	                            xor esi, esi	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003f85	            0xeb11	                           jmp 0x4003f98	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003f87	    0x660f1f840000	                    nop word [rax + rax]	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003f90	          0x83c601	                              add esi, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003f93	          0x80fa0a	                             cmp dl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003f96	            0x7410	                            je 0x4003fa8	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003f98	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003f9c	         0xfb650ff	               movzx edx, byte [rax - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003fa0	            0x84d2	                             test dl, dl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003fa2	            0x75ec	                           jne 0x4003f90	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003fa4	            0x85f6	                           test esi, esi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fa6	            0x7438	                            je 0x4003fe0	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fa8	          0x4c63c6	                          movsxd r8, esi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fab	          0x83ee01	                              sub esi, 1	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fae	        0x498d50fe	                       lea rdx, [r8 - 2]	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fb2	      0x4a8d4407ff	                 lea rax, [rdi + r8 - 1]	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fb7	          0x4829f2	                            sub rdx, rsi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fba	          0x4889d6	                            mov rsi, rdx	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fbd	          0x4801fe	                            add rsi, rdi	       528	pretty.c	WHILE_3	FUNCTION_21	FOR_1	IF_1
0x4003fc0	           0xfb610	                   movzx edx, byte [rax]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fc3	    0xf68200000000	                      test byte [rdx], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fca	            0x7414	                            je 0x4003fe0	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fcc	        0x4883e801	                              sub rax, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fd0	          0x4839f0	                            cmp rax, rsi	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fd3	            0x75eb	                           jne 0x4003fc0	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003fd5	          0x4c01c7	                             add rdi, r8	       532	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4003fd8	            0xeba6	                           jmp 0x4003f80	       532	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4003fda	    0x660f1f440000	                    nop word [rax + rax]	       532	pretty.c	WHILE_3	FUNCTION_21	FOR_1
0x4003fe0	          0x83e905	                              sub ecx, 5	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003fe3	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      1839	pretty.c	FUNCTION_52	CALL_9
0x4003fe8	          0x83f902	                              cmp ecx, 2	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003feb	     0xf861d010000	                           jbe 0x400410e	      1842	pretty.c	FUNCTION_52	IF_8	CALL_10
0x4003ff1	        0x498b6f08	                mov rbp, qword [r15 + 8]	      1845	pretty.c	FUNCTION_52
0x4003ff5	      0x488d442430	                   lea rax, [rsp + 0x30]	      1845	pretty.c	FUNCTION_52
0x4003ffa	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      1847	pretty.c	FUNCTION_52	CALL_12
0x4003ffe	          0x4c89fa	                            mov rdx, r15	      1847	pretty.c	FUNCTION_52	CALL_12
0x4004001	          0x4889c6	                            mov rsi, rax	      1847	pretty.c	FUNCTION_52	CALL_12
0x4004004	          0x4889df	                            mov rdi, rbx	      1847	pretty.c	FUNCTION_52	CALL_12
0x4004007	      0xe800000000	                          call 0x400400c	      1847	pretty.c	FUNCTION_52	CALL_12
0x400400c	          0x4c89ff	                            mov rdi, r15	      1848	pretty.c	FUNCTION_52	CALL_13
0x400400f	      0xe800000000	                          call 0x4004014	      1848	pretty.c	FUNCTION_52	CALL_13
0x4004014	          0x833b05	                      cmp dword [rbx], 5	      1851	pretty.c	FUNCTION_52	IF_10
0x4004017	            0x7450	                            je 0x4004069	      1851	pretty.c	FUNCTION_52	IF_10
0x4004019	          0x498b17	                    mov rdx, qword [r15]	      1851	pretty.c	FUNCTION_52	IF_10
0x400401c	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x400401f	     0xf8543010000	                           jne 0x4004168	       141	strbuf.h	FUNCTION_57
0x4004025	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x400402a	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_59	CALL_2
0x400402d	      0xe800000000	                          call 0x4004032	       228	strbuf.h	FUNCTION_59	CALL_2
0x4004032	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4004036	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x400403a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x400403e	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4004042	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x4004046	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_59
0x400404a	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x400404e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4004052	            0x8b03	                    mov eax, dword [rbx]	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4004054	          0x83e806	                              sub eax, 6	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4004057	          0x83f801	                              cmp eax, 1	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x400405a	            0x770d	                            ja 0x4004069	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x400405c	        0x498b4708	                mov rax, qword [r15 + 8]	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4004060	          0x4839e8	                            cmp rax, rbp	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4004063	     0xf86c4010000	                           jbe 0x400422d	      1859	pretty.c	FUNCTION_52	IF_11	CALL_15
0x4004069	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1862	pretty.c	FUNCTION_52	CALL_17
0x400406e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1862	pretty.c	FUNCTION_52	CALL_17
0x4004073	      0xe800000000	                          call 0x4004078	      1862	pretty.c	FUNCTION_52	CALL_17
0x4004078	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1863	pretty.c	FUNCTION_52
0x400407d	    0x644833042528	                xor rax, qword fs:[0x28]	      1863	pretty.c	FUNCTION_52
0x4004086	     0xf8556020000	                           jne 0x40042e2	      1863	pretty.c	FUNCTION_52
0x400408c	        0x4883c448	                           add rsp, 0x48	      1863	pretty.c	FUNCTION_52
0x4004090	              0x5b	                                 pop rbx	      1863	pretty.c	FUNCTION_52
0x4004091	              0x5d	                                 pop rbp	      1863	pretty.c	FUNCTION_52
0x4004092	            0x415c	                                 pop r12	      1863	pretty.c	FUNCTION_52
0x4004094	            0x415d	                                 pop r13	      1863	pretty.c	FUNCTION_52
0x4004096	            0x415e	                                 pop r14	      1863	pretty.c	FUNCTION_52
0x4004098	            0x415f	                                 pop r15	      1863	pretty.c	FUNCTION_52
0x400409a	              0xc3	                                     ret	      1863	pretty.c	FUNCTION_52
0x400409b	       0xf1f440000	                   nop dword [rax + rax]	      1863	pretty.c	FUNCTION_52
0x40040a0	          0x4889ef	                            mov rdi, rbp	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x40040a3	      0xe800000000	                          call 0x40040a8	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x40040a8	          0x4889c5	                            mov rbp, rax	       554	pretty.c	WHILE_3	FUNCTION_22	WHILE_1	CALL_6
0x40040ab	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040ae	      0xe800000000	                          call 0x40040b3	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040b3	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040b6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040b9	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040bc	      0xe800000000	                          call 0x40040c1	       279	strbuf.h	FUNCTION_60	CALL_2
0x40040c1	      0x4d8b642408	                mov r12, qword [r12 + 8]	       555	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x40040c6	          0x4d85e4	                           test r12, r12	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x40040c9	     0xf856afeffff	                           jne 0x4003f39	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x40040cf	          0x498b17	                    mov rdx, qword [r15]	       548	pretty.c	WHILE_3	FUNCTION_22	WHILE_1
0x40040d2	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x40040d5	            0x7579	                           jne 0x4004150	       141	strbuf.h	FUNCTION_57
0x40040d7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x40040dc	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_59	CALL_2
0x40040df	      0xe800000000	                          call 0x40040e4	       228	strbuf.h	FUNCTION_59	CALL_2
0x40040e4	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x40040e8	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x40040ec	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x40040f0	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x40040f5	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x40040f9	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x40040fd	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4004101	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_59
0x4004105	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4004109	      0xe9cafcffff	                           jmp 0x4003dd8	       230	strbuf.h	FUNCTION_59
0x400410e	      0x488d442430	                   lea rax, [rsp + 0x30]	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004113	      0x448b44242c	            mov r8d, dword [rsp + 0x2c] 	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004118	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1843	pretty.c	FUNCTION_52	CALL_11
0x400411d	          0x4c89fa	                            mov rdx, r15	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004120	          0x4889df	                            mov rdi, rbx	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004123	          0x4889c6	                            mov rsi, rax	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004126	      0x4889442410	             mov qword [rsp + 0x10], rax	      1843	pretty.c	FUNCTION_52	CALL_11
0x400412b	      0xe800000000	                          call 0x4004130	      1843	pretty.c	FUNCTION_52	CALL_11
0x4004130	          0x833b05	                      cmp dword [rbx], 5	      1846	pretty.c	FUNCTION_52	IF_9
0x4004133	        0x498b6f08	                mov rbp, qword [r15 + 8]	      1845	pretty.c	FUNCTION_52
0x4004137	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1846	pretty.c	FUNCTION_52	IF_9
0x400413c	     0xf84cafeffff	                            je 0x400400c	      1846	pretty.c	FUNCTION_52	IF_9
0x4004142	      0xe9b3feffff	                           jmp 0x4003ffa	      1846	pretty.c	FUNCTION_52	IF_9
0x4004147	    0x660f1f840000	                    nop word [rax + rax]	      1846	pretty.c	FUNCTION_52	IF_9
0x4004150	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_57
0x4004154	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004158	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400415b	            0x758b	                           jne 0x40040e8	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400415d	      0xe975ffffff	                           jmp 0x40040d7	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004162	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004168	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_57
0x400416c	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004170	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004173	     0xf85bdfeffff	                           jne 0x4004036	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004179	      0xe9a7feffff	                           jmp 0x4004025	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400417e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004180	          0x4889f7	                            mov rdi, rsi	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004183	    0x488b35000000	            mov rsi, qword [0x0400418a] 	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x400418a	          0x4889d9	                            mov rcx, rbx	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x400418d	      0xe800000000	                          call 0x4004192	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4004192	      0xe9e1feffff	                           jmp 0x4004078	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x4004197	          0x498b17	                    mov rdx, qword [r15]	      1800	pretty.c	FUNCTION_52	IF_1	CALL_1
0x400419a	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x400419d	     0xf85dd000000	                           jne 0x4004280	       141	strbuf.h	FUNCTION_57
0x40041a3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x40041a8	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_59	CALL_2
0x40041ab	      0xe800000000	                          call 0x40041b0	       228	strbuf.h	FUNCTION_59	CALL_2
0x40041b0	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x40041b4	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x40041b8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x40041bc	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x40041c0	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x40041c4	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x40041c8	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_59
0x40041cc	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x40041d0	            0x8b0b	                    mov ecx, dword [rbx]	       230	strbuf.h	FUNCTION_59
0x40041d2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       230	strbuf.h	FUNCTION_59
0x40041d7	      0xe9a4fdffff	                           jmp 0x4003f80	       230	strbuf.h	FUNCTION_59
0x40041dc	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x40041e0	            0x85d2	                           test edx, edx	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x40041e2	     0xf85cd000000	                           jne 0x40042b5	      1814	pretty.c	FUNCTION_52	IF_3	CALL_5
0x40041e8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041ed	           0xfbe10	                   movsx edx, byte [rax]	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041f0	            0x85d2	                           test edx, edx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041f2	            0x89d6	                            mov esi, edx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041f4	     0xf84bb000000	                            je 0x40042b5	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041fa	        0x4883c001	                              add rax, 1	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x40041fe	            0x31ff	                            xor edi, edi	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4004200	            0xeb16	                           jmp 0x4004218	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4004202	          0x83fa0a	                            cmp edx, 0xa	      1823	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4	IF_5
0x4004205	            0x7464	                            je 0x400426b	      1823	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4	IF_5
0x4004207	           0xfbe10	                   movsx edx, byte [rax]	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x400420a	        0x4883c001	                              add rax, 1	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x400420e	            0x85d2	                           test edx, edx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4004210	            0x89d6	                            mov esi, edx	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4004212	     0xf849d000000	                            je 0x40042b5	      1817	pretty.c	FUNCTION_52	IF_3	FOR_1
0x4004218	            0x85ff	                           test edi, edi	      1818	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4
0x400421a	            0x74e6	                            je 0x4004202	      1818	pretty.c	FUNCTION_52	IF_3	FOR_1	IF_4
0x400421c	          0x83fa1b	                           cmp edx, 0x1b	       207	pretty.c	WHILE_3	FUNCTION_9
0x400421f	            0x747f	                            je 0x40042a0	       207	pretty.c	WHILE_3	FUNCTION_9
0x4004221	          0x4084f6	                           test sil, sil	       207	pretty.c	WHILE_3	FUNCTION_9
0x4004224	            0x787a	                            js 0x40042a0	       207	pretty.c	WHILE_3	FUNCTION_9
0x4004226	      0xbf01000000	                              mov edi, 1	       207	pretty.c	WHILE_3	FUNCTION_9
0x400422b	            0xebda	                           jmp 0x4004207	       207	pretty.c	WHILE_3	FUNCTION_9
0x400422d	          0x498b17	                    mov rdx, qword [r15]	       207	pretty.c	WHILE_3	FUNCTION_9
0x4004230	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x4004233	     0xf8589000000	                           jne 0x40042c2	       141	strbuf.h	FUNCTION_57
0x4004239	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x400423e	          0x4c89ff	                            mov rdi, r15	       228	strbuf.h	FUNCTION_59	CALL_2
0x4004241	      0xe800000000	                          call 0x4004246	       228	strbuf.h	FUNCTION_59	CALL_2
0x4004246	        0x498b4708	                mov rax, qword [r15 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x400424a	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x400424e	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x4004252	        0x49894f08	                mov qword [r15 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4004256	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x400425a	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x400425e	        0x498b4708	                mov rax, qword [r15 + 8]	       230	strbuf.h	FUNCTION_59
0x4004262	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4004266	      0xe9fefdffff	                           jmp 0x4004069	       230	strbuf.h	FUNCTION_59
0x400426b	            0x31ff	                            xor edi, edi	       230	strbuf.h	FUNCTION_59
0x400426d	          0x80380a	                     cmp byte [rax], 0xa	       230	strbuf.h	FUNCTION_59
0x4004270	        0x400f94c7	                                sete dil	       230	strbuf.h	FUNCTION_59
0x4004274	            0xeb91	                           jmp 0x4004207	       230	strbuf.h	FUNCTION_59
0x4004276	      0xbd01000000	                              mov ebp, 1	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x400427b	      0xe958fbffff	                           jmp 0x4003dd8	      1588	pretty.c	FUNCTION_45	FOR_1	IF_6
0x4004280	        0x498b4708	                mov rax, qword [r15 + 8]	       141	strbuf.h	FUNCTION_57
0x4004284	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004288	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400428b	     0xf8523ffffff	                           jne 0x40041b4	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004291	      0xe90dffffff	                           jmp 0x40041a3	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4004296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042a0	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x40042a8	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      1827	pretty.c	FUNCTION_52	IF_3	FOR_1	ELSE_1	IF_6
0x40042b0	      0xe98afaffff	                           jmp 0x4003d3f	      1827	pretty.c	FUNCTION_52	IF_3	FOR_1	ELSE_1	IF_6
0x40042b5	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1808	pretty.c	FUNCTION_52	IF_2
0x40042bd	      0xe97dfaffff	                           jmp 0x4003d3f	      1808	pretty.c	FUNCTION_52	IF_2
0x40042c2	          0x4889c1	                            mov rcx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042c5	          0x48f7d1	                                 not rcx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042c8	          0x4801d1	                            add rcx, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042cb	     0xf8579ffffff	                           jne 0x400424a	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042d1	      0xe963ffffff	                           jmp 0x4004239	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40042d6	      0xbf00000000	                              mov edi, 0	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x40042db	            0x31c0	                            xor eax, eax	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x40042dd	      0xe800000000	                          call 0x40042e2	      1579	pretty.c	FUNCTION_45	FOR_1	IF_4	CALL_4
0x40042e2	      0xe800000000	                          call 0x40042e7	      1863	pretty.c	FUNCTION_52
pp_title_line	IF,9:ELSE,2:SWITCH,0:FOR,2:DO,0:WHILE,0:functions,0:CALL,20	302
0x4003440	            0x4157	                                push r15	      1613	pretty.c	FUNCTION_46
0x4003442	            0x4156	                                push r14	      1613	pretty.c	FUNCTION_46
0x4003444	          0x4989f7	                            mov r15, rsi	      1613	pretty.c	FUNCTION_46
0x4003447	            0x4155	                                push r13	      1613	pretty.c	FUNCTION_46
0x4003449	            0x4154	                                push r12	      1613	pretty.c	FUNCTION_46
0x400344b	          0x4989d4	                            mov r12, rdx	      1613	pretty.c	FUNCTION_46
0x400344e	              0x55	                                push rbp	      1613	pretty.c	FUNCTION_46
0x400344f	              0x53	                                push rbx	      1613	pretty.c	FUNCTION_46
0x4003450	          0x4889fb	                            mov rbx, rdi	      1613	pretty.c	FUNCTION_46
0x4003453	    0x41bd00000000	                             mov r13d, 0	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003459	        0x4883ec48	                           sub rsp, 0x48	      1613	pretty.c	FUNCTION_46
0x400345d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1617	pretty.c	FUNCTION_46	CALL_1
0x4003462	      0x4889742408	                mov qword [rsp + 8], rsi	      1613	pretty.c	FUNCTION_46
0x4003467	      0xbe50000000	                           mov esi, 0x50	      1617	pretty.c	FUNCTION_46	CALL_1
0x400346c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1613	pretty.c	FUNCTION_46
0x4003475	      0x4889442438	             mov qword [rsp + 0x38], rax	      1613	pretty.c	FUNCTION_46
0x400347a	            0x31c0	                            xor eax, eax	      1613	pretty.c	FUNCTION_46
0x400347c	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1613	pretty.c	FUNCTION_46
0x4003481	      0x4489442414	             mov dword [rsp + 0x14], r8d	      1613	pretty.c	FUNCTION_46
0x4003486	      0xe800000000	                          call 0x400348b	      1617	pretty.c	FUNCTION_46	CALL_1
0x400348b	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      1618	pretty.c	FUNCTION_46	CALL_2
0x400348e	      0xb800000000	                              mov eax, 0	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003493	          0x4d8b37	                    mov r14, qword [r15]	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003496	    0x41bf01000000	                             mov r15d, 1	       853	pretty.c	WHILE_3	FUNCTION_31
0x400349c	            0x85c9	                           test ecx, ecx	      1618	pretty.c	FUNCTION_46	CALL_2
0x400349e	        0x490f44c5	                          cmove rax, r13	      1618	pretty.c	FUNCTION_46	CALL_2
0x40034a2	        0x48890424	                    mov qword [rsp], rax	      1618	pretty.c	FUNCTION_46	CALL_2
0x40034a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1618	pretty.c	FUNCTION_46	CALL_2
0x40034b0	          0x4c89f0	                            mov rax, r14	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x40034b3	            0x31f6	                            xor esi, esi	       191	pretty.c	WHILE_3	FUNCTION_8
0x40034b5	            0xeb16	                           jmp 0x40034cd	       191	pretty.c	WHILE_3	FUNCTION_8
0x40034b7	    0x660f1f840000	                    nop word [rax + rax]	       191	pretty.c	WHILE_3	FUNCTION_8
0x40034c0	          0x83c601	                              add esi, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40034c3	        0x4080ff0a	                            cmp dil, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40034c7	     0xf84d3020000	                            je 0x40037a0	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x40034cd	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40034d1	         0xfb678ff	               movzx edi, byte [rax - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x40034d5	          0x4084ff	                           test dil, dil	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40034d8	            0x75e6	                           jne 0x40034c0	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x40034da	          0x4863c6	                         movsxd rax, esi	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40034dd	            0x85f6	                           test esi, esi	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40034df	        0x498d2c06	                    lea rbp, [r14 + rax]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40034e3	            0x7427	                            je 0x400350c	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40034e5	          0x4989c5	                            mov r13, rax	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40034e8	     0xf1f84000000	                   nop dword [rax + rax]	       860	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40034f0	    0x430fb67c2eff	         movzx edi, byte [r14 + r13 - 1]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40034f6	    0xf68700000000	                      test byte [rdi], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x40034fd	     0xf8465020000	                            je 0x4003768	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003503	        0x4983ed01	                              sub r13, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003507	          0x83ee01	                              sub esi, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400350a	            0x75e4	                           jne 0x40034f0	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400350c	      0x488b442408	                mov rax, qword [rsp + 8]	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003511	          0x4c89e7	                            mov rdi, r12	      1621	pretty.c	FUNCTION_46	CALL_3
0x4003514	          0x488928	                    mov qword [rax], rbp	      1618	pretty.c	FUNCTION_46	CALL_2
0x4003517	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1621	pretty.c	FUNCTION_46	CALL_3
0x400351c	    0x488db0000400	                  lea rsi, [rax + 0x400]	      1621	pretty.c	FUNCTION_46	CALL_3
0x4003523	      0xe800000000	                          call 0x4003528	      1621	pretty.c	FUNCTION_46	CALL_3
0x4003528	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      1622	pretty.c	FUNCTION_46	IF_1
0x400352b	            0x85d2	                           test edx, edx	      1622	pretty.c	FUNCTION_46	IF_1
0x400352d	     0xf8437030000	                            je 0x400386a	      1622	pretty.c	FUNCTION_46	IF_1
0x4003533	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x4003537	          0x4885f6	                           test rsi, rsi	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x400353a	            0x7408	                            je 0x4003544	      1623	pretty.c	FUNCTION_46	IF_1	IF_2
0x400353c	          0x4c89e7	                            mov rdi, r12	      1624	pretty.c	FUNCTION_46	IF_1	CALL_4
0x400353f	      0xe800000000	                          call 0x4003544	      1624	pretty.c	FUNCTION_46	IF_1	CALL_4
0x4003544	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4003549	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x400354e	            0x85d2	                           test edx, edx	       347	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x4003550	          0x4189d2	                           mov r10d, edx	      1625	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_5
0x4003553	     0xf8e6c020000	                           jle 0x40037c5	       347	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x4003559	           0xfbe0e	                   movsx ecx, byte [rsi]	       348	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x400355c	          0x83f90a	                            cmp ecx, 0xa	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400355f	        0x410f94c0	                                sete r8b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003563	          0x83f91b	                           cmp ecx, 0x1b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003566	        0x400f94c7	                                sete dil	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400356a	          0x4108f8	                             or r8b, dil	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400356d	            0x754b	                           jne 0x40035ba	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400356f	            0x84c9	                             test cl, cl	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003571	            0x7847	                            js 0x40035ba	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003573	      0xb801000000	                              mov eax, 1	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003578	            0xeb2e	                           jmp 0x40035a8	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400357a	    0x660f1f440000	                    nop word [rax + rax]	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003580	          0x4139fa	                           cmp r10d, edi	       347	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x4003583	     0xf8e3c020000	                           jle 0x40037c5	       347	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x4003589	         0xfbe0c06	             movsx ecx, byte [rsi + rax]	       348	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x400358d	        0x4883c001	                              add rax, 1	       348	pretty.c	WHILE_3	FUNCTION_16	FOR_1
0x4003591	          0x83f90a	                            cmp ecx, 0xa	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003594	        0x410f94c1	                                sete r9b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x4003598	          0x83f91b	                           cmp ecx, 0x1b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400359b	        0x410f94c0	                                sete r8b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x400359f	          0x4508c1	                             or r9b, r8b	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40035a2	            0x7516	                           jne 0x40035ba	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40035a4	            0x84c9	                             test cl, cl	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40035a6	            0x7812	                            js 0x40035ba	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40035a8	          0x4139c2	                           cmp r10d, eax	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035ab	            0x89c7	                            mov edi, eax	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035ad	            0x7ed1	                           jle 0x4003580	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035af	          0x83f93d	                           cmp ecx, 0x3d	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035b2	            0x75cc	                           jne 0x4003580	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035b4	        0x803c063f	              cmp byte [rsi + rax], 0x3f	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035b8	            0x75cf	                           jne 0x4003589	       351	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_2
0x40035ba	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x40035bf	          0x4531c0	                            xor r8d, r8d	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x40035c2	          0x4c89e7	                            mov rdi, r12	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x40035c5	      0xe896cdffff	                    call sym.add_rfc2047	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x40035ca	        0x498b1424	                    mov rdx, qword [r12]	      1626	pretty.c	FUNCTION_46	IF_1	IF_3	CALL_6
0x40035ce	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x40035d1	     0xf8445020000	                            je 0x400381c	       141	strbuf.h	FUNCTION_57
0x40035d7	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x40035dc	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40035e0	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40035e3	     0xf8433020000	                            je 0x400381c	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40035e9	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x40035ee	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x40035f2	      0x837c241400	               cmp dword [rsp + 0x14], 0	      1636	pretty.c	FUNCTION_46	IF_4
0x40035f7	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x40035fc	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x4003600	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4003605	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x400360a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x400360e	     0xf851f020000	                           jne 0x4003833	      1636	pretty.c	FUNCTION_46	IF_4
0x4003614	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400361a	            0x85c0	                           test eax, eax	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400361c	            0x7451	                            je 0x400366f	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400361e	          0x8d78ff	                      lea edi, [rax - 1]	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003621	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003625	        0x4883c701	                              add rdi, 1	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003629	        0x48c1e704	                              shl rdi, 4	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400362d	          0x4801f7	                            add rdi, rsi	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003630	          0x488b06	                    mov rax, qword [rsi]	      1639	pretty.c	FUNCTION_46	IF_4	FOR_1	IF_5	CALL_11
0x4003633	          0x4885c0	                           test rax, rax	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x4003636	     0xf841c020000	                            je 0x4003858	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x400363c	         0xf1f4000	                         nop dword [rax]	       213	pretty.c	WHILE_3	FUNCTION_10	IF_1
0x4003640	        0x4883c001	                              add rax, 1	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x4003644	         0xfbe50ff	               movsx edx, byte [rax - 1]	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x4003648	            0x85d2	                           test edx, edx	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x400364a	            0x89d1	                            mov ecx, edx	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x400364c	     0xf8406020000	                            je 0x4003858	       215	pretty.c	WHILE_3	FUNCTION_10	WHILE_1
0x4003652	          0x83fa1b	                           cmp edx, 0x1b	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003655	            0x7404	                            je 0x400365b	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003657	            0x84c9	                             test cl, cl	       207	pretty.c	WHILE_3	FUNCTION_9
0x4003659	            0x79e5	                           jns 0x4003640	       207	pretty.c	WHILE_3	FUNCTION_9
0x400365b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x4003660	      0xbe00000000	                              mov esi, 0	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x4003665	          0x4c89e7	                            mov rdi, r12	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x4003668	            0x31c0	                            xor eax, eax	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x400366a	      0xe800000000	                          call 0x400366f	      1651	pretty.c	FUNCTION_46	IF_6	CALL_12
0x400366f	        0x488b6b08	                mov rbp, qword [rbx + 8]	      1653	pretty.c	FUNCTION_46	IF_7
0x4003673	          0x4885ed	                           test rbp, rbp	      1653	pretty.c	FUNCTION_46	IF_7
0x4003676	            0x7416	                            je 0x400368e	      1653	pretty.c	FUNCTION_46	IF_7
0x4003678	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x400367b	      0xe800000000	                          call 0x4003680	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003680	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003683	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003686	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4003689	      0xe800000000	                          call 0x400368e	       279	strbuf.h	FUNCTION_60	CALL_2
0x400368e	            0x8b03	                    mov eax, dword [rbx]	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x4003690	          0x83e806	                              sub eax, 6	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x4003693	          0x83f801	                              cmp eax, 1	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x4003696	     0xf86dd010000	                           jbe 0x4003879	      1656	pretty.c	FUNCTION_46	IF_8	CALL_14
0x400369c	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1660	pretty.c	FUNCTION_46	IF_9
0x40036a2	            0x85c0	                           test eax, eax	      1660	pretty.c	FUNCTION_46	IF_9
0x40036a4	     0xf848c000000	                            je 0x4003736	      1660	pretty.c	FUNCTION_46	IF_9
0x40036aa	            0x31ed	                            xor ebp, ebp	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40036ac	          0x4531ed	                          xor r13d, r13d	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40036af	              0x90	                                     nop	       349	pretty.c	WHILE_3	FUNCTION_16	FOR_1	IF_1	CALL_1
0x40036b0	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1663	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_16
0x40036b4	        0x4183c501	                             add r13d, 1	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x40036b8	        0x4c8b3428	              mov r14, qword [rax + rbp]	      1663	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_16
0x40036bc	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036bf	      0xe800000000	                          call 0x40036c4	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036c4	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036c7	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036ca	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036cd	      0xe800000000	                          call 0x40036d2	       279	strbuf.h	FUNCTION_60	CALL_2
0x40036d2	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x40036d6	        0x488b3c28	              mov rdi, qword [rax + rbp]	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x40036da	        0x4883c510	                           add rbp, 0x10	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x40036de	      0xe800000000	                          call 0x40036e3	      1664	pretty.c	FUNCTION_46	IF_9	FOR_2	CALL_17
0x40036e3	    0x4439ab800000	           cmp dword [rbx + 0x80], r13d 	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x40036ea	            0x77c4	                            ja 0x40036b0	      1662	pretty.c	FUNCTION_46	IF_9	FOR_2
0x40036ec	        0x488d7b78	                   lea rdi, [rbx + 0x78]	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x40036f0	            0x31f6	                            xor esi, esi	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x40036f2	      0xe800000000	                          call 0x40036f7	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x40036f7	        0x498b0424	                    mov rax, qword [r12]	      1666	pretty.c	FUNCTION_46	IF_9	CALL_18
0x40036fb	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x40036fe	     0xf843a010000	                            je 0x400383e	       141	strbuf.h	FUNCTION_57
0x4003704	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x4003709	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400370d	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003710	     0xf8428010000	                            je 0x400383e	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003716	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x400371b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x400371f	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4003724	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_59
0x4003728	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x400372d	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x4003732	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4003736	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1670	pretty.c	FUNCTION_46	CALL_20
0x400373b	      0xe800000000	                          call 0x4003740	      1670	pretty.c	FUNCTION_46	CALL_20
0x4003740	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1671	pretty.c	FUNCTION_46
0x4003745	    0x644833042528	                xor rax, qword fs:[0x28]	      1671	pretty.c	FUNCTION_46
0x400374e	     0xf8575010000	                           jne 0x40038c9	      1671	pretty.c	FUNCTION_46
0x4003754	        0x4883c448	                           add rsp, 0x48	      1671	pretty.c	FUNCTION_46
0x4003758	              0x5b	                                 pop rbx	      1671	pretty.c	FUNCTION_46
0x4003759	              0x5d	                                 pop rbp	      1671	pretty.c	FUNCTION_46
0x400375a	            0x415c	                                 pop r12	      1671	pretty.c	FUNCTION_46
0x400375c	            0x415d	                                 pop r13	      1671	pretty.c	FUNCTION_46
0x400375e	            0x415e	                                 pop r14	      1671	pretty.c	FUNCTION_46
0x4003760	            0x415f	                                 pop r15	      1671	pretty.c	FUNCTION_46
0x4003762	              0xc3	                                     ret	      1671	pretty.c	FUNCTION_46
0x4003763	       0xf1f440000	                   nop dword [rax + rax]	      1671	pretty.c	FUNCTION_46
0x4003768	          0x83c602	                              add esi, 2	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x400376b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4003770	          0x4863f6	                         movsxd rsi, esi	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4003773	      0xe800000000	                          call 0x4003778	       865	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_3
0x4003778	          0x4585ff	                         test r15d, r15d	       866	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_3
0x400377b	            0x7433	                            je 0x40037b0	       866	pretty.c	WHILE_3	FUNCTION_31	FOR_1	IF_3
0x400377d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4003782	          0x4c89f6	                            mov rsi, r14	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4003785	          0x4c89ea	                            mov rdx, r13	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4003788	          0x4531ff	                          xor r15d, r15d	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x400378b	          0x4989ee	                            mov r14, rbp	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x400378e	      0xe800000000	                          call 0x4003793	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4003793	      0xe918fdffff	                           jmp 0x40034b0	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x4003798	     0xf1f84000000	                   nop dword [rax + rax]	       868	pretty.c	WHILE_3	FUNCTION_31	FOR_1	CALL_5
0x40037a0	          0x4863c6	                         movsxd rax, esi	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40037a3	        0x498d2c06	                    lea rbp, [r14 + rax]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40037a7	      0xe939fdffff	                           jmp 0x40034e5	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40037ac	         0xf1f4000	                         nop dword [rax]	       859	pretty.c	WHILE_3	FUNCTION_31	FOR_1
0x40037b0	        0x488b3424	                    mov rsi, qword [rsp]	       279	strbuf.h	FUNCTION_60	CALL_2
0x40037b4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_60	CALL_2
0x40037b9	      0xba01000000	                              mov edx, 1	       279	strbuf.h	FUNCTION_60	CALL_2
0x40037be	      0xe800000000	                          call 0x40037c3	       279	strbuf.h	FUNCTION_60	CALL_2
0x40037c3	            0xebb8	                           jmp 0x400377d	       279	strbuf.h	FUNCTION_60	CALL_2
0x40037c5	      0x418b442408	                mov eax, dword [r12 + 8]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037ca	          0x8d78ff	                      lea edi, [rax - 1]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037cd	            0x85ff	                           test edi, edi	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037cf	            0x89f9	                            mov ecx, edi	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037d1	            0x7826	                            js 0x40037f9	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037d3	          0x4863c7	                         movsxd rax, edi	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037d6	      0x4903442410	             add rax, qword [r12 + 0x10]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037db	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037de	            0x7511	                           jne 0x40037f1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037e0	            0xeb17	                           jmp 0x40037f9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037e2	    0x660f1f440000	                    nop word [rax + rax]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037e8	        0x4883e801	                              sub rax, 1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037ec	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037ef	            0x7408	                            je 0x40037f9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40037f1	          0x83e901	                              sub ecx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037f4	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037f7	            0x75ef	                           jne 0x40037e8	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40037f9	            0x29f9	                            sub ecx, edi	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x40037fb	    0x41b94e000000	                           mov r9d, 0x4e	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003801	    0x41b801000000	                              mov r8d, 1	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003807	          0x4c89e7	                            mov rdi, r12	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x400380a	      0xe800000000	                          call 0x400380f	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x400380f	        0x498b1424	                    mov rdx, qword [r12]	      1629	pretty.c	FUNCTION_46	IF_1	ELSE_1	CALL_7
0x4003813	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x4003816	     0xf85bbfdffff	                           jne 0x40035d7	       141	strbuf.h	FUNCTION_57
0x400381c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003821	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003824	      0xe800000000	                          call 0x4003829	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003829	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x400382e	      0xe9b6fdffff	                           jmp 0x40035e9	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003833	     0xf8f22feffff	                            jg 0x400365b	      1646	pretty.c	FUNCTION_46	IF_6
0x4003839	      0xe931feffff	                           jmp 0x400366f	      1646	pretty.c	FUNCTION_46	IF_6
0x400383e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003843	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003846	      0xe800000000	                          call 0x400384b	       228	strbuf.h	FUNCTION_59	CALL_2
0x400384b	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003850	      0xe9c1feffff	                           jmp 0x4003716	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003855	           0xf1f00	                         nop dword [rax]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003858	        0x4883c610	                           add rsi, 0x10	       228	strbuf.h	FUNCTION_59	CALL_2
0x400385c	          0x4839f7	                            cmp rdi, rsi	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400385f	     0xf85cbfdffff	                           jne 0x4003630	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x4003865	      0xe905feffff	                           jmp 0x400366f	      1638	pretty.c	FUNCTION_46	IF_4	FOR_1
0x400386a	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x400386f	          0x4c89e7	                            mov rdi, r12	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003872	      0xe800000000	                          call 0x4003877	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003877	            0xeb96	                           jmp 0x400380f	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x4003879	        0x498b1424	                    mov rdx, qword [r12]	      1632	pretty.c	FUNCTION_46	ELSE_2	CALL_9
0x400387d	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_57
0x4003880	            0x7537	                           jne 0x40038b9	       141	strbuf.h	FUNCTION_57
0x4003882	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003887	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x400388a	      0xe800000000	                          call 0x400388f	       228	strbuf.h	FUNCTION_59	CALL_2
0x400388f	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003894	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4003899	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_59
0x400389d	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x40038a2	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_59
0x40038a6	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x40038ab	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x40038b0	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x40038b4	      0xe9e3fdffff	                           jmp 0x400369c	       230	strbuf.h	FUNCTION_59
0x40038b9	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x40038be	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40038c2	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40038c5	            0x75cd	                           jne 0x4003894	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40038c7	            0xebb9	                           jmp 0x4003882	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40038c9	      0xe800000000	                          call 0x40038ce	      1671	pretty.c	FUNCTION_46
userformat_find_requirements	IF,2:ELSE,0:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,2	27
0x4003100	        0x4883ec28	                           sub rsp, 0x28	      1495	pretty.c	FUNCTION_43
0x4003104	    0x64488b042528	                mov rax, qword fs:[0x28]	      1495	pretty.c	FUNCTION_43
0x400310d	      0x4889442418	             mov qword [rsp + 0x18], rax	      1495	pretty.c	FUNCTION_43
0x4003112	            0x31c0	                            xor eax, eax	      1495	pretty.c	FUNCTION_43
0x4003114	          0x4885ff	                           test rdi, rdi	      1498	pretty.c	FUNCTION_43	IF_1
0x4003117	    0x48c704240000	                      mov qword [rsp], 0	      1496	pretty.c	FUNCTION_43
0x400311f	    0x48c744240800	                  mov qword [rsp + 8], 0	      1496	pretty.c	FUNCTION_43
0x4003128	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1496	pretty.c	FUNCTION_43
0x4003131	            0x7435	                            je 0x4003168	      1498	pretty.c	FUNCTION_43	IF_1
0x4003133	          0x4889f1	                            mov rcx, rsi	      1503	pretty.c	FUNCTION_43	CALL_1
0x4003136	      0xba00000000	                              mov edx, 0	      1503	pretty.c	FUNCTION_43	CALL_1
0x400313b	          0x4889fe	                            mov rsi, rdi	      1503	pretty.c	FUNCTION_43	CALL_1
0x400313e	          0x4889e7	                            mov rdi, rsp	      1503	pretty.c	FUNCTION_43	CALL_1
0x4003141	      0xe800000000	                          call 0x4003146	      1503	pretty.c	FUNCTION_43	CALL_1
0x4003146	          0x4889e7	                            mov rdi, rsp	      1504	pretty.c	FUNCTION_43	CALL_2
0x4003149	      0xe800000000	                          call 0x400314e	      1504	pretty.c	FUNCTION_43	CALL_2
0x400314e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1505	pretty.c	FUNCTION_43
0x4003153	    0x644833042528	                xor rax, qword fs:[0x28]	      1505	pretty.c	FUNCTION_43
0x400315c	            0x7518	                           jne 0x4003176	      1505	pretty.c	FUNCTION_43
0x400315e	        0x4883c428	                           add rsp, 0x28	      1505	pretty.c	FUNCTION_43
0x4003162	              0xc3	                                     ret	      1505	pretty.c	FUNCTION_43
0x4003163	       0xf1f440000	                   nop dword [rax + rax]	      1505	pretty.c	FUNCTION_43
0x4003168	    0x488b3d000000	            mov rdi, qword [0x0400316f] 	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x400316f	          0x4885ff	                           test rdi, rdi	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003172	            0x75bf	                           jne 0x4003133	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003174	            0xebd8	                           jmp 0x400314e	      1499	pretty.c	FUNCTION_43	IF_1	IF_2
0x4003176	      0xe800000000	                          call 0x400317b	      1505	pretty.c	FUNCTION_43
format_commit_item	IF,7:ELSE,3:SWITCH,1:FOR,0:DO,0:WHILE,1:functions,0:CALL,5	296
0x4002c40	            0x4157	                                push r15	      1432	pretty.c	FUNCTION_41
0x4002c42	            0x4156	                                push r14	      1432	pretty.c	FUNCTION_41
0x4002c44	          0x4989f7	                            mov r15, rsi	      1432	pretty.c	FUNCTION_41
0x4002c47	            0x4155	                                push r13	      1432	pretty.c	FUNCTION_41
0x4002c49	            0x4154	                                push r12	      1432	pretty.c	FUNCTION_41
0x4002c4b	          0x4989fd	                            mov r13, rdi	      1432	pretty.c	FUNCTION_41
0x4002c4e	              0x55	                                push rbp	      1432	pretty.c	FUNCTION_41
0x4002c4f	              0x53	                                push rbx	      1432	pretty.c	FUNCTION_41
0x4002c50	          0x4989d4	                            mov r12, rdx	      1432	pretty.c	FUNCTION_41
0x4002c53	        0x4883ec48	                           sub rsp, 0x48	      1432	pretty.c	FUNCTION_41
0x4002c57	    0x64488b042528	                mov rax, qword fs:[0x28]	      1432	pretty.c	FUNCTION_41
0x4002c60	      0x4889442438	             mov qword [rsp + 0x38], rax	      1432	pretty.c	FUNCTION_41
0x4002c65	            0x31c0	                            xor eax, eax	      1432	pretty.c	FUNCTION_41
0x4002c67	           0xfb606	                   movzx eax, byte [rsi]	      1432	pretty.c	FUNCTION_41
0x4002c6a	    0xc70424000000	                      mov dword [rsp], 0	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c71	          0x83e820	                           sub eax, 0x20	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c74	            0x3c0d	                             cmp al, 0xd	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c76	            0x7714	                            ja 0x4002c8c	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c78	           0xfb6c0	                           movzx eax, al	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c7b	    0x8b0485000000	                  mov eax, dword [rax*4]	      1442	pretty.c	FUNCTION_41	SWITCH_1
0x4002c82	          0x83f801	                              cmp eax, 1	      1456	pretty.c	FUNCTION_41	IF_1
0x4002c85	          0x890424	                    mov dword [rsp], eax	      1456	pretty.c	FUNCTION_41	IF_1
0x4002c88	        0x4983dfff	             sbb r15, 0xffffffffffffffff	      1456	pretty.c	FUNCTION_41	IF_1
0x4002c8c	      0x418b542448	            mov edx, dword [r12 + 0x48] 	      1459	pretty.c	FUNCTION_41	IF_2
0x4002c91	        0x498b4508	                mov rax, qword [r13 + 8]	      1458	pretty.c	FUNCTION_41
0x4002c95	            0x85d2	                           test edx, edx	      1459	pretty.c	FUNCTION_41	IF_2
0x4002c97	      0x4889442410	             mov qword [rsp + 0x10], rax	      1458	pretty.c	FUNCTION_41
0x4002c9c	     0xf84de000000	                            je 0x4002d80	      1459	pretty.c	FUNCTION_41	IF_2
0x4002ca2	      0x458b74247c	           mov r14d, dword [r12 + 0x7c] 	      1332	pretty.c	WHILE_3	FUNCTION_40
0x4002ca7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002cb0	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002cb9	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1331	pretty.c	WHILE_3	FUNCTION_40
0x4002cc2	          0x4585f6	                         test r14d, r14d	      1333	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002cc5	     0xf880d030000	                            js 0x4002fd8	      1333	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002ccb	            0x31db	                            xor ebx, ebx	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002ccd	            0xeb13	                           jmp 0x4002ce2	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002ccf	              0x90	                                     nop	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002cd0	            0x4898	                                    cdqe	      1350	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002cd2	        0x498d3407	                    lea rsi, [r15 + rax]	      1350	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002cd6	          0x803e25	                    cmp byte [rsi], 0x25	      1351	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_4
0x4002cd9	            0x7523	                           jne 0x4002cfe	      1351	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_4
0x4002cdb	        0x4c8d7e01	                      lea r15, [rsi + 1]	      1353	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002cdf	          0x83c301	                              add ebx, 1	      1354	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002ce2	        0x410fb62f	                   movzx ebp, byte [r15]	      1343	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002ce6	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002ceb	          0x4c89e2	                            mov rdx, r12	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002cee	          0x4c89fe	                            mov rsi, r15	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002cf1	      0xe81aedffff	              call sym.format_commit_one	      1344	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	CALL_3
0x4002cf6	             0x1c3	                            add ebx, eax	      1345	pretty.c	WHILE_3	FUNCTION_40	WHILE_1
0x4002cf8	        0x4080fd43	                           cmp bpl, 0x43	      1347	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_3
0x4002cfc	            0x74d2	                            je 0x4002cd0	      1347	pretty.c	WHILE_3	FUNCTION_40	WHILE_1	IF_3
0x4002cfe	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002d03	      0xba01000000	                              mov edx, 1	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002d08	      0xbeffffffff	                     mov esi, 0xffffffff	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002d0d	      0xe800000000	                          call 0x4002d12	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002d12	        0x89442404	                mov dword [rsp + 4], eax	      1356	pretty.c	WHILE_3	FUNCTION_40	CALL_4
0x4002d16	      0x418b442448	            mov eax, dword [r12 + 0x48] 	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d1b	          0x83f803	                              cmp eax, 3	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d1e	     0xf849c010000	                            je 0x4002ec0	      1358	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002d24	      0x4439742404	               cmp dword [rsp + 4], r14d	      1387	pretty.c	FUNCTION_40	IF_9
0x4002d29	     0xf8fc1000000	                            jg 0x4002df0	      1387	pretty.c	FUNCTION_40	IF_9
0x4002d2f	          0x83f802	                              cmp eax, 2	      1411	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002d32	        0x458b7d08	               mov r15d, dword [r13 + 8]	      1410	pretty.c	FUNCTION_40	ELSE_1
0x4002d36	     0xf848b020000	                            je 0x4002fc7	      1411	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002d3c	      0x442b742404	               sub r14d, dword [rsp + 4]	      1414	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002d41	            0x31ed	                            xor ebp, ebp	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002d43	          0x83f804	                              cmp eax, 4	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002d46	     0xf8454030000	                            je 0x40030a0	      1413	pretty.c	FUNCTION_40	ELSE_1	ELSE_2	IF_11
0x4002d4c	      0x4403742428	            add r14d, dword [rsp + 0x28]	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002d51	          0x4c89ef	                            mov rdi, r13	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002d54	      0xbe20000000	                           mov esi, 0x20	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002d59	          0x4963d6	                        movsxd rdx, r14d	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002d5c	      0xe800000000	                          call 0x4002d61	      1420	pretty.c	FUNCTION_40	ELSE_1	CALL_12
0x4002d61	          0x4963ff	                        movsxd rdi, r15d	        53	string3.h	FUNCTION_94	CALL_3
0x4002d64	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_94	CALL_3
0x4002d69	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_94	CALL_3
0x4002d6e	          0x4801ef	                            add rdi, rbp	        53	string3.h	FUNCTION_94	CALL_3
0x4002d71	        0x49037d10	             add rdi, qword [r13 + 0x10]	        53	string3.h	FUNCTION_94	CALL_3
0x4002d75	      0xe800000000	                          call 0x4002d7a	        53	string3.h	FUNCTION_94	CALL_3
0x4002d7a	      0xe9b6000000	                           jmp 0x4002e35	        53	string3.h	FUNCTION_94	CALL_3
0x4002d7f	              0x90	                                     nop	        53	string3.h	FUNCTION_94	CALL_3
0x4002d80	          0x4c89e2	                            mov rdx, r12	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002d83	          0x4c89fe	                            mov rsi, r15	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002d86	          0x4c89ef	                            mov rdi, r13	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002d89	      0xe882ecffff	              call sym.format_commit_one	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002d8e	            0x89c3	                            mov ebx, eax	      1462	pretty.c	FUNCTION_41	CALL_2
0x4002d90	          0x8b0424	                    mov eax, dword [rsp]	      1463	pretty.c	FUNCTION_41	IF_3
0x4002d93	            0x85c0	                           test eax, eax	      1463	pretty.c	FUNCTION_41	IF_3
0x4002d95	     0xf84b8000000	                            je 0x4002e53	      1463	pretty.c	FUNCTION_41	IF_3
0x4002d9b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1466	pretty.c	FUNCTION_41	IF_4
0x4002da0	        0x493b4508	                cmp rax, qword [r13 + 8]	      1466	pretty.c	FUNCTION_41	IF_4
0x4002da4	     0xf84b6000000	                            je 0x4002e60	      1466	pretty.c	FUNCTION_41	IF_4
0x4002daa	        0x833c2401	                      cmp dword [rsp], 1	      1470	pretty.c	FUNCTION_41	ELSE_2	IF_5	IF_6
0x4002dae	     0xf84d2020000	                            je 0x4003086	      1470	pretty.c	FUNCTION_41	ELSE_2	IF_5	IF_6
0x4002db4	        0x833c2403	                      cmp dword [rsp], 3	      1472	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002db8	     0xf84ef020000	                            je 0x40030ad	      1472	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x4002dbe	        0x448d4b01	                      lea r9d, [rbx + 1]	      1475	pretty.c	FUNCTION_41
0x4002dc2	          0x4963c1	                         movsxd rax, r9d	      1475	pretty.c	FUNCTION_41
0x4002dc5	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1476	pretty.c	FUNCTION_41
0x4002dca	    0x644833142528	                xor rdx, qword fs:[0x28]	      1476	pretty.c	FUNCTION_41
0x4002dd3	     0xf8521030000	                           jne 0x40030fa	      1476	pretty.c	FUNCTION_41
0x4002dd9	        0x4883c448	                           add rsp, 0x48	      1476	pretty.c	FUNCTION_41
0x4002ddd	              0x5b	                                 pop rbx	      1476	pretty.c	FUNCTION_41
0x4002dde	              0x5d	                                 pop rbp	      1476	pretty.c	FUNCTION_41
0x4002ddf	            0x415c	                                 pop r12	      1476	pretty.c	FUNCTION_41
0x4002de1	            0x415d	                                 pop r13	      1476	pretty.c	FUNCTION_41
0x4002de3	            0x415e	                                 pop r14	      1476	pretty.c	FUNCTION_41
0x4002de5	            0x415f	                                 pop r15	      1476	pretty.c	FUNCTION_41
0x4002de7	              0xc3	                                     ret	      1476	pretty.c	FUNCTION_41
0x4002de8	     0xf1f84000000	                   nop dword [rax + rax]	      1476	pretty.c	FUNCTION_41
0x4002df0	      0x418b44244c	            mov eax, dword [r12 + 0x4c] 	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002df5	          0x83f802	                              cmp eax, 2	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002df8	     0xf841a020000	                            je 0x4003018	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002dfe	          0x83f803	                              cmp eax, 3	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002e01	     0xf8461020000	                            je 0x4003068	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002e07	          0x83f801	                              cmp eax, 1	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002e0a	            0x751c	                           jne 0x4002e28	      1388	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4002e0c	        0x8b542404	                mov edx, dword [rsp + 4]	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e10	        0x4183ee02	                             sub r14d, 2	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e14	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e19	      0xb900000000	                              mov ecx, 0	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e1e	            0x31f6	                            xor esi, esi	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e20	          0x4429f2	                           sub edx, r14d	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e23	      0xe800000000	                          call 0x4002e28	      1390	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_8
0x4002e28	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002e2d	          0x4c89ef	                            mov rdi, r13	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002e30	      0xe800000000	                          call 0x4002e35	      1408	pretty.c	FUNCTION_40	IF_9	CALL_11
0x4002e35	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1424	pretty.c	FUNCTION_40	CALL_14
0x4002e3a	      0xe800000000	                          call 0x4002e3f	      1424	pretty.c	FUNCTION_40	CALL_14
0x4002e3f	          0x8b0424	                    mov eax, dword [rsp]	      1463	pretty.c	FUNCTION_41	IF_3
0x4002e42	    0x41c744244800	               mov dword [r12 + 0x48], 0	      1425	pretty.c	FUNCTION_40
0x4002e4b	            0x85c0	                           test eax, eax	      1463	pretty.c	FUNCTION_41	IF_3
0x4002e4d	     0xf8548ffffff	                           jne 0x4002d9b	      1463	pretty.c	FUNCTION_41	IF_3
0x4002e53	          0x4863c3	                         movsxd rax, ebx	      1464	pretty.c	FUNCTION_41	IF_3
0x4002e56	      0xe96affffff	                           jmp 0x4002dc5	      1464	pretty.c	FUNCTION_41	IF_3
0x4002e5b	       0xf1f440000	                   nop dword [rax + rax]	      1464	pretty.c	FUNCTION_41	IF_3
0x4002e60	        0x833c2402	                      cmp dword [rsp], 2	      1466	pretty.c	FUNCTION_41	IF_4
0x4002e64	     0xf8554ffffff	                           jne 0x4002dbe	      1466	pretty.c	FUNCTION_41	IF_4
0x4002e6a	          0x4885c0	                           test rax, rax	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e6d	     0xf844bffffff	                            je 0x4002dbe	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e73	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e77	        0x4883e801	                              sub rax, 1	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e7b	        0x488d3401	                    lea rsi, [rcx + rax]	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e7f	          0x803e0a	                     cmp byte [rsi], 0xa	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e82	     0xf8536ffffff	                           jne 0x4002dbe	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002e88	        0x498b5500	                    mov rdx, qword [r13]	       162	strbuf.h	FUNCTION_58	IF_1
0x4002e8c	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_58	IF_1
0x4002e90	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_58	IF_1
0x4002e94	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_58	IF_1
0x4002e97	     0xf8751020000	                            ja 0x40030ee	       162	strbuf.h	FUNCTION_58	IF_1
0x4002e9d	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_58	IF_2
0x4002ea4	        0x49894508	                mov qword [r13 + 8], rax	       164	strbuf.h	FUNCTION_58
0x4002ea8	     0xf84a7010000	                            je 0x4003055	       165	strbuf.h	FUNCTION_58	IF_2
0x4002eae	          0xc60600	                       mov byte [rsi], 0	       166	strbuf.h	FUNCTION_58	IF_2
0x4002eb1	        0x498b4508	                mov rax, qword [r13 + 8]	       166	strbuf.h	FUNCTION_58	IF_2
0x4002eb5	          0x4885c0	                           test rax, rax	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002eb8	            0x75b9	                           jne 0x4002e73	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002eba	      0xe9fffeffff	                           jmp 0x4002dbe	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002ebf	              0x90	                                     nop	      1467	pretty.c	FUNCTION_41	IF_4	WHILE_1
0x4002ec0	      0x4439742404	               cmp dword [rsp + 4], r14d	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002ec5	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002ec9	        0x498b4508	                mov rax, qword [r13 + 8]	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002ecd	      0x4c8d7c01ff	                lea r15, [rcx + rax - 1]	      1359	pretty.c	WHILE_3	FUNCTION_40	IF_5
0x4002ed2	     0xf8e9d000000	                           jle 0x4002f75	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002ed8	          0x4c39f9	                            cmp rcx, r15	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002edb	     0xf8394000000	                           jae 0x4002f75	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002ee1	     0xf1f80000000	                         nop dword [rax]	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002ee8	        0x410fb607	                   movzx eax, byte [r15]	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002eec	            0x3c20	                            cmp al, 0x20	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002eee	     0xf8454010000	                            je 0x4003048	      1362	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4002ef4	            0x3c6d	                            cmp al, 0x6d	      1368	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_7
0x4002ef6	            0x757d	                           jne 0x4002f75	      1368	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_7
0x4002ef8	      0x41807fff1b	                cmp byte [r15 - 1], 0x1b	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002efd	        0x498d6fff	                      lea rbp, [r15 - 1]	      1370	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f01	            0x750b	                           jne 0x4002f0e	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f03	            0xeb1f	                           jmp 0x4002f24	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f05	           0xf1f00	                         nop dword [rax]	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f08	        0x807d001b	                    cmp byte [rbp], 0x1b	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f0c	            0x7416	                            je 0x4002f24	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f0e	        0x4883ed01	                              sub rbp, 1	      1372	pretty.c	FUNCTION_40	IF_5	WHILE_2
0x4002f12	          0x4c89f8	                            mov rax, r15	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f15	          0x4829e8	                            sub rax, rbp	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f18	        0x4883f809	                              cmp rax, 9	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f1c	            0x7eea	                           jle 0x4002f08	      1371	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f1e	        0x807d001b	                    cmp byte [rbp], 0x1b	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002f22	            0x7551	                           jne 0x4002f75	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002f24	        0x498d4701	                      lea rax, [r15 + 1]	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f28	          0x4889ef	                            mov rdi, rbp	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f2b	          0x4889c1	                            mov rcx, rax	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f2e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f33	          0x4829e9	                            sub rcx, rbp	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f36	      0x48894c2408	                mov qword [rsp + 8], rcx	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f3b	      0xe800000000	                          call 0x4002f40	      1374	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8	CALL_5
0x4002f40	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002f45	          0x4839c1	                            cmp rcx, rax	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002f48	     0xf8592010000	                           jne 0x40030e0	      1373	pretty.c	FUNCTION_40	IF_5	WHILE_2	IF_8
0x4002f4e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002f53	          0x4889ea	                            mov rdx, rbp	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002f56	            0x31f6	                            xor esi, esi	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002f58	        0x4c8d7dff	                      lea r15, [rbp - 1]	      1381	pretty.c	FUNCTION_40	IF_5	WHILE_2
0x4002f5c	      0xe800000000	                          call 0x4002f61	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002f61	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1380	pretty.c	FUNCTION_40	IF_5	WHILE_2	CALL_6
0x4002f65	      0x4439742404	               cmp dword [rsp + 4], r14d	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f6a	            0x7e09	                           jle 0x4002f75	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f6c	          0x4939cf	                            cmp r15, rcx	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f6f	     0xf8773ffffff	                            ja 0x4002ee8	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f75	        0x498d4701	                      lea rax, [r15 + 1]	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f79	      0x4889442418	             mov qword [rsp + 0x18], rax	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f7e	          0x4889c2	                            mov rdx, rax	      1360	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2
0x4002f81	        0x498b4500	                    mov rax, qword [r13]	       162	strbuf.h	FUNCTION_58	IF_1
0x4002f85	          0x4829ca	                            sub rdx, rcx	      1383	pretty.c	FUNCTION_40	IF_5	CALL_7
0x4002f88	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_58	IF_1
0x4002f8c	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_58	IF_1
0x4002f90	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_58	IF_1
0x4002f93	     0xf8755010000	                            ja 0x40030ee	       162	strbuf.h	FUNCTION_58	IF_1
0x4002f99	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_58	IF_2
0x4002fa0	        0x49895508	                mov qword [r13 + 8], rdx	       164	strbuf.h	FUNCTION_58
0x4002fa4	     0xf841d010000	                            je 0x40030c7	       165	strbuf.h	FUNCTION_58	IF_2
0x4002faa	      0x41c6470100	                   mov byte [r15 + 1], 0	       166	strbuf.h	FUNCTION_58	IF_2
0x4002faf	      0x4439742404	               cmp dword [rsp + 4], r14d	      1387	pretty.c	FUNCTION_40	IF_9
0x4002fb4	    0x41c744244802	               mov dword [r12 + 0x48], 2	      1384	pretty.c	FUNCTION_40	IF_5
0x4002fbd	     0xf8f2dfeffff	                            jg 0x4002df0	      1387	pretty.c	FUNCTION_40	IF_9
0x4002fc3	        0x458b7d08	               mov r15d, dword [r13 + 8]	      1410	pretty.c	FUNCTION_40	ELSE_1
0x4002fc7	      0x442b742404	               sub r14d, dword [rsp + 4]	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002fcc	          0x4963ee	                        movsxd rbp, r14d	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002fcf	      0xe978fdffff	                           jmp 0x4002d4c	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002fd4	         0xf1f4000	                         nop dword [rax]	      1412	pretty.c	FUNCTION_40	ELSE_1	IF_10
0x4002fd8	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002fdc	      0xbe0a000000	                            mov esi, 0xa	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002fe1	          0x4889df	                            mov rdi, rbx	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002fe4	      0xe800000000	                          call 0x4002fe9	      1334	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_1
0x4002fe9	          0x4885c0	                           test rax, rax	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002fec	      0xba01000000	                              mov edx, 1	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002ff1	      0xbeffffffff	                     mov esi, 0xffffffff	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4002ff6	        0x480f44c3	                          cmove rax, rbx	      1336	pretty.c	WHILE_3	FUNCTION_40	IF_1	IF_2
0x4002ffa	          0x41f7de	                                neg r14d	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4002ffd	          0x4889c7	                            mov rdi, rax	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4003000	      0xe800000000	                          call 0x4003005	      1338	pretty.c	WHILE_3	FUNCTION_40	IF_1	CALL_2
0x4003005	      0x498b542408	                mov rdx, qword [r12 + 8]	      1339	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x400300a	     0x38298000000	             add eax, dword [rdx + 0x98]	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4003010	          0x4129c6	                           sub r14d, eax	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4003013	      0xe9b3fcffff	                           jmp 0x4002ccb	      1340	pretty.c	WHILE_3	FUNCTION_40	IF_1
0x4003018	          0x4489f6	                           mov esi, r14d	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x400301b	        0x8b542404	                mov edx, dword [rsp + 4]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x400301f	        0x418d46fe	                      lea eax, [r14 - 2]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003023	          0xc1ee1f	                           shr esi, 0x1f	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003026	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x400302b	      0xb900000000	                              mov ecx, 0	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003030	          0x4401f6	                           add esi, r14d	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003033	            0xd1fe	                              sar esi, 1	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003035	            0x29c2	                            sub edx, eax	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003037	          0x83ee01	                              sub esi, 1	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x400303a	      0xe800000000	                          call 0x400303f	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x400303f	      0xe9e4fdffff	                           jmp 0x4002e28	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003044	         0xf1f4000	                         nop dword [rax]	      1395	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_9
0x4003048	        0x4983ef01	                              sub r15, 1	      1363	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x400304c	        0x4183c601	                             add r14d, 1	      1364	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4003050	      0xe910ffffff	                           jmp 0x4002f65	      1364	pretty.c	WHILE_3	FUNCTION_40	IF_5	WHILE_2	IF_6
0x4003055	    0x803d00000000	                cmp byte [0x0400305c], 0	       168	strbuf.h	FUNCTION_58	CALL_2
0x400305c	     0xf8408feffff	                            je 0x4002e6a	       168	strbuf.h	FUNCTION_58	CALL_2
0x4003062	            0xeb70	                           jmp 0x40030d4	       168	strbuf.h	FUNCTION_58	CALL_2
0x4003064	         0xf1f4000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_58	CALL_2
0x4003068	        0x8b542404	                mov edx, dword [rsp + 4]	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x400306c	        0x418d76fe	                      lea esi, [r14 - 2]	      1402	pretty.c	FUNCTION_40	IF_9	SWITCH_1
0x4003070	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4003075	      0xb900000000	                              mov ecx, 0	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x400307a	            0x29f2	                            sub edx, esi	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x400307c	      0xe800000000	                          call 0x4003081	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4003081	      0xe9a2fdffff	                           jmp 0x4002e28	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4003086	          0x4889c6	                            mov rsi, rax	      1401	pretty.c	FUNCTION_40	IF_9	SWITCH_1	CALL_10
0x4003089	      0xb901000000	                              mov ecx, 1	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x400308e	      0xba00000000	                              mov edx, 0	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4003093	          0x4c89ef	                            mov rdi, r13	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x4003096	      0xe800000000	                          call 0x400309b	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x400309b	      0xe91efdffff	                           jmp 0x4002dbe	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030a0	          0x4489f5	                           mov ebp, r14d	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030a3	            0xd1fd	                              sar ebp, 1	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030a5	          0x4863ed	                         movsxd rbp, ebp	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030a8	      0xe99ffcffff	                           jmp 0x4002d4c	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030ad	          0x4889c6	                            mov rsi, rax	      1471	pretty.c	FUNCTION_41	ELSE_2	IF_5	CALL_4
0x40030b0	      0xb901000000	                              mov ecx, 1	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x40030b5	      0xba00000000	                              mov edx, 0	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x40030ba	          0x4c89ef	                            mov rdi, r13	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x40030bd	      0xe800000000	                          call 0x40030c2	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x40030c2	      0xe9f7fcffff	                           jmp 0x4002dbe	      1473	pretty.c	FUNCTION_41	ELSE_2	IF_5	ELSE_3	IF_7
0x40030c7	    0x803d00000000	                cmp byte [0x040030ce], 0	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030ce	     0xf84dbfeffff	                            je 0x4002faf	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030d4	      0xe800000000	                          call 0x40030d9	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030d9	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030e0	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030e4	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030e9	      0xe993feffff	                           jmp 0x4002f81	       168	strbuf.h	FUNCTION_58	CALL_2
0x40030ee	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_58	CALL_1
0x40030f3	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_58	CALL_1
0x40030f5	      0xe800000000	                          call 0x40030fa	       163	strbuf.h	FUNCTION_58	CALL_1
0x40030fa	      0xe800000000	                          call 0x40030ff	      1476	pretty.c	FUNCTION_41
commit_format_is_empty	IF,0:ELSE,0:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,0	10
0x4000880	            0x31c0	                            xor eax, eax	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000882	          0x83ff08	                              cmp edi, 8	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000885	            0x7409	                            je 0x4000890	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000887	            0xf3c3	                                     ret	        33	pretty.c	WHILE_3	FUNCTION_1
0x4000889	     0xf1f80000000	                         nop dword [rax]	        33	pretty.c	WHILE_3	FUNCTION_1
0x4000890	    0x488b05000000	            mov rax, qword [0x04000897] 	        32	pretty.c	WHILE_3	FUNCTION_1
0x4000897	          0x803800	                       cmp byte [rax], 0	        32	pretty.c	WHILE_3	FUNCTION_1
0x400089a	           0xf94c0	                                 sete al	        32	pretty.c	WHILE_3	FUNCTION_1
0x400089d	           0xfb6c0	                           movzx eax, al	        32	pretty.c	WHILE_3	FUNCTION_1
0x40008a0	              0xc3	                                     ret	        33	pretty.c	WHILE_3	FUNCTION_1
userformat_want_item	IF,1:ELSE,0:SWITCH,1:FOR,0:DO,0:WHILE,0:functions,0:CALL,0	14
0x4000040	           0xfb606	                   movzx eax, byte [rsi]	      1483	pretty.c	FUNCTION_42	IF_1
0x4000043	          0x8d48d5	                   lea ecx, [rax - 0x2b]	      1483	pretty.c	FUNCTION_42	IF_1
0x4000046	    0x81e1fd000000	                           and ecx, 0xfd	      1483	pretty.c	FUNCTION_42	IF_1
0x400004c	            0x7412	                            je 0x4000060	      1483	pretty.c	FUNCTION_42	IF_1
0x400004e	            0x3c20	                            cmp al, 0x20	      1483	pretty.c	FUNCTION_42	IF_1
0x4000050	            0x740e	                            je 0x4000060	      1483	pretty.c	FUNCTION_42	IF_1
0x4000052	            0x3c4e	                            cmp al, 0x4e	      1486	pretty.c	FUNCTION_42	SWITCH_1
0x4000054	            0x7503	                           jne 0x4000059	      1486	pretty.c	FUNCTION_42	SWITCH_1
0x4000056	          0x800a01	                        or byte [rdx], 1	      1488	pretty.c	FUNCTION_42	SWITCH_1
0x4000059	            0x31c0	                            xor eax, eax	      1492	pretty.c	FUNCTION_42
0x400005b	              0xc3	                                     ret	      1492	pretty.c	FUNCTION_42
0x400005c	         0xf1f4000	                         nop dword [rax]	      1492	pretty.c	FUNCTION_42
0x4000060	         0xfb64601	               movzx eax, byte [rsi + 1]	      1492	pretty.c	FUNCTION_42
0x4000064	            0xebec	                           jmp 0x4000052	      1492	pretty.c	FUNCTION_42
logmsg_reencode	IF,9:ELSE,2:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,10	190
0x4001630	            0x4157	                                push r15	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001632	            0x4156	                                push r14	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001634	          0x4989ff	                            mov r15, rdi	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001637	            0x4155	                                push r13	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001639	            0x4154	                                push r12	       601	pretty.c	WHILE_3	FUNCTION_25
0x400163b	          0x4989f4	                            mov r12, rsi	       601	pretty.c	WHILE_3	FUNCTION_25
0x400163e	              0x55	                                push rbp	       601	pretty.c	WHILE_3	FUNCTION_25
0x400163f	              0x53	                                push rbx	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001640	          0x4889d5	                            mov rbp, rdx	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001643	            0x31f6	                            xor esi, esi	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x4001645	        0x4883ec38	                           sub rsp, 0x38	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001649	    0x64488b042528	                mov rax, qword fs:[0x28]	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001652	      0x4889442428	             mov qword [rsp + 0x28], rax	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001657	            0x31c0	                            xor eax, eax	       601	pretty.c	WHILE_3	FUNCTION_25
0x4001659	      0xe800000000	                          call 0x400165e	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x400165e	          0x4885ed	                           test rbp, rbp	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x4001661	          0x4889c3	                            mov rbx, rax	       605	pretty.c	WHILE_3	FUNCTION_25	CALL_1
0x4001664	            0x7406	                            je 0x400166c	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x4001666	        0x807d0000	                       cmp byte [rbp], 0	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x400166a	            0x755c	                           jne 0x40016c8	       608	pretty.c	WHILE_3	FUNCTION_25	IF_1
0x400166c	          0x4d85e4	                           test r12, r12	       609	pretty.c	WHILE_3	FUNCTION_25	IF_1	IF_2
0x400166f	            0x742c	                            je 0x400169d	       609	pretty.c	WHILE_3	FUNCTION_25	IF_1	IF_2
0x4001671	      0x488d542410	                   lea rdx, [rsp + 0x10]	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x4001676	      0xbe00000000	                              mov esi, 0	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x400167b	          0x4889df	                            mov rdi, rbx	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x400167e	      0xe800000000	                          call 0x4001683	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x4001683	          0x4885c0	                           test rax, rax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x4001686	     0xf843c020000	                            je 0x40018c8	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x400168c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x4001691	          0x4889c7	                            mov rdi, rax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x4001694	      0xe800000000	                          call 0x4001699	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x4001699	        0x49890424	                    mov qword [r12], rax	       610	pretty.c	WHILE_3	FUNCTION_25	IF_1	CALL_2
0x400169d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016ab	          0x4889d8	                            mov rax, rbx	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016ae	     0xf855a020000	                           jne 0x400190e	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016b4	        0x4883c438	                           add rsp, 0x38	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016b8	              0x5b	                                 pop rbx	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016b9	              0x5d	                                 pop rbp	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016ba	            0x415c	                                 pop r12	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016bc	            0x415d	                                 pop r13	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016be	            0x415e	                                 pop r14	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016c0	            0x415f	                                 pop r15	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016c2	              0xc3	                                     ret	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016c3	       0xf1f440000	                   nop dword [rax + rax]	       664	pretty.c	WHILE_3	FUNCTION_25
0x40016c8	      0x488d542410	                   lea rdx, [rsp + 0x10]	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x40016cd	      0xbe00000000	                              mov esi, 0	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x40016d2	          0x4889c7	                            mov rdi, rax	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x40016d5	      0xe800000000	                          call 0x40016da	       563	pretty.c	WHILE_3	FUNCTION_23	CALL_1
0x40016da	          0x4885c0	                           test rax, rax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016dd	     0xf844d010000	                            je 0x4001830	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016e3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016e8	          0x4889c7	                            mov rdi, rax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016eb	      0xe800000000	                          call 0x40016f0	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016f0	          0x4d85e4	                           test r12, r12	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016f3	          0x4989c6	                            mov r14, rax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40016f6	            0x7404	                            je 0x40016fc	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016f8	        0x4d893424	                    mov qword [r12], r14	       615	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x40016fc	          0x4d85f6	                           test r14, r14	       616	pretty.c	WHILE_3	FUNCTION_25
0x40016ff	     0xf843b010000	                            je 0x4001840	       616	pretty.c	WHILE_3	FUNCTION_25
0x4001705	          0x4889ee	                            mov rsi, rbp	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001708	          0x4c89f7	                            mov rdi, r14	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x400170b	          0x4d89f5	                            mov r13, r14	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x400170e	      0xe800000000	                          call 0x4001713	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001713	            0x85c0	                           test eax, eax	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001715	     0xf8445010000	                            je 0x4001860	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x400171b	            0x31f6	                            xor esi, esi	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x400171d	          0x4c89ff	                            mov rdi, r15	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x4001720	          0x4989dd	                            mov r13, rbx	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x4001723	      0xe800000000	                          call 0x4001728	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x4001728	          0x4839c3	                            cmp rbx, rax	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x400172b	     0xf84cd010000	                            je 0x40018fe	       633	pretty.c	WHILE_3	FUNCTION_25	IF_4	IF_6	CALL_5
0x4001731	          0x4d85ed	                           test r13, r13	       654	pretty.c	WHILE_3	FUNCTION_25	IF_8
0x4001734	     0xf846e010000	                            je 0x40018a8	       654	pretty.c	WHILE_3	FUNCTION_25	IF_8
0x400173a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x4001743	    0x48c744241800	               mov qword [rsp + 0x18], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x400174c	          0x4d89ef	                            mov r15, r13	       569	pretty.c	WHILE_3	FUNCTION_24
0x400174f	    0x48c744242000	               mov qword [rsp + 0x20], 0	       569	pretty.c	WHILE_3	FUNCTION_24
0x4001758	            0xeb2a	                           jmp 0x4001784	       569	pretty.c	WHILE_3	FUNCTION_24
0x400175a	    0x660f1f440000	                    nop word [rax + rax]	       569	pretty.c	WHILE_3	FUNCTION_24
0x4001760	      0xbe0a000000	                            mov esi, 0xa	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x4001765	          0x4c89ff	                            mov rdi, r15	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x4001768	      0xe800000000	                          call 0x400176d	       575	pretty.c	WHILE_3	FUNCTION_24	WHILE_1
0x400176d	          0x4885c0	                           test rax, rax	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001770	     0xf8422010000	                            je 0x4001898	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001776	        0x8078010a	                 cmp byte [rax + 1], 0xa	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x400177a	        0x4c8d7801	                      lea r15, [rax + 1]	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x400177e	     0xf8414010000	                            je 0x4001898	       576	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	IF_1
0x4001784	      0xbe00000000	                              mov esi, 0	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001789	          0x4c89ff	                            mov rdi, r15	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x400178c	      0xe800000000	                          call 0x4001791	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001791	            0x85c0	                           test eax, eax	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001793	            0x74cb	                            je 0x4001760	       574	pretty.c	WHILE_3	FUNCTION_24	WHILE_1	CALL_1
0x4001795	          0x4c89f8	                            mov rax, r15	       579	pretty.c	WHILE_3	FUNCTION_24
0x4001798	      0xbe0a000000	                            mov esi, 0xa	       580	pretty.c	WHILE_3	FUNCTION_24
0x400179d	          0x4c89ff	                            mov rdi, r15	       580	pretty.c	WHILE_3	FUNCTION_24
0x40017a0	          0x4c29e8	                            sub rax, r13	       579	pretty.c	WHILE_3	FUNCTION_24
0x40017a3	        0x48890424	                    mov qword [rsp], rax	       579	pretty.c	WHILE_3	FUNCTION_24
0x40017a7	      0xe800000000	                          call 0x40017ac	       580	pretty.c	WHILE_3	FUNCTION_24
0x40017ac	          0x4885c0	                           test rax, rax	       581	pretty.c	WHILE_3	FUNCTION_24	IF_2
0x40017af	     0xf84e3000000	                            je 0x4001898	       581	pretty.c	WHILE_3	FUNCTION_24	IF_2
0x40017b5	        0x4c8b3c24	                    mov r15, qword [rsp]	       583	pretty.c	WHILE_3	FUNCTION_24
0x40017b9	          0x4c29e8	                            sub rax, r13	       583	pretty.c	WHILE_3	FUNCTION_24
0x40017bc	          0x4c89ef	                            mov rdi, r13	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017bf	          0x4c29f8	                            sub rax, r15	       583	pretty.c	WHILE_3	FUNCTION_24
0x40017c2	        0x4883c001	                              add rax, 1	       583	pretty.c	WHILE_3	FUNCTION_24
0x40017c6	      0x4889442408	                mov qword [rsp + 8], rax	       583	pretty.c	WHILE_3	FUNCTION_24
0x40017cb	      0xe800000000	                          call 0x40017d0	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017d0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017d5	        0x488d4801	                      lea rcx, [rax + 1]	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017d9	          0x4889c2	                            mov rdx, rax	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017dc	          0x4c89ee	                            mov rsi, r13	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017df	      0xe800000000	                          call 0x40017e4	       585	pretty.c	WHILE_3	FUNCTION_24	CALL_4
0x40017e4	          0x4889ef	                            mov rdi, rbp	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x40017e7	      0xe800000000	                          call 0x40017ec	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x40017ec	            0x85c0	                           test eax, eax	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x40017ee	     0xf84dc000000	                            je 0x40018d0	       586	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_5
0x40017f4	      0x488b542408	                mov rdx, qword [rsp + 8]	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017f9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x40017fe	          0x4c89fe	                            mov rsi, r15	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x4001801	      0xe800000000	                          call 0x4001806	       588	pretty.c	WHILE_3	FUNCTION_24	IF_3	CALL_6
0x4001806	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x400180b	            0x31f6	                            xor esi, esi	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x400180d	      0xe800000000	                          call 0x4001812	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x4001812	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x4001815	          0x4989c5	                            mov r13, rax	       595	pretty.c	WHILE_3	FUNCTION_24	CALL_11
0x4001818	     0xf8496000000	                            je 0x40018b4	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400181e	          0x4d85ed	                           test r13, r13	       663	pretty.c	WHILE_3	FUNCTION_25
0x4001821	            0x757a	                           jne 0x400189d	       663	pretty.c	WHILE_3	FUNCTION_25
0x4001823	      0xe975feffff	                           jmp 0x400169d	       663	pretty.c	WHILE_3	FUNCTION_25
0x4001828	     0xf1f84000000	                   nop dword [rax + rax]	       663	pretty.c	WHILE_3	FUNCTION_25
0x4001830	          0x4531f6	                          xor r14d, r14d	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x4001833	          0x4d85e4	                           test r12, r12	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x4001836	     0xf85bcfeffff	                           jne 0x40016f8	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x400183c	         0xf1f4000	                         nop dword [rax]	       614	pretty.c	WHILE_3	FUNCTION_25	IF_3
0x4001840	          0x4889ee	                            mov rsi, rbp	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001843	      0xbf00000000	                              mov edi, 0	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001848	      0xe800000000	                          call 0x400184d	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x400184d	            0x85c0	                           test eax, eax	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x400184f	     0xf8548feffff	                           jne 0x400169d	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001855	          0x4531f6	                          xor r14d, r14d	       617	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_4
0x4001858	    0x41bd00000000	                             mov r13d, 0	       616	pretty.c	WHILE_3	FUNCTION_25
0x400185e	            0x6690	                                     nop	       616	pretty.c	WHILE_3	FUNCTION_25
0x4001860	          0x4889df	                            mov rdi, rbx	        43	utf8.h	FUNCTION_55	CALL_2
0x4001863	      0xe800000000	                          call 0x4001868	        43	utf8.h	FUNCTION_55	CALL_2
0x4001868	          0x4531c0	                            xor r8d, r8d	        43	utf8.h	FUNCTION_55	CALL_2
0x400186b	          0x4c89e9	                            mov rcx, r13	        43	utf8.h	FUNCTION_55	CALL_2
0x400186e	          0x4889ea	                            mov rdx, rbp	        43	utf8.h	FUNCTION_55	CALL_2
0x4001871	            0x89c6	                            mov esi, eax	        43	utf8.h	FUNCTION_55	CALL_2
0x4001873	          0x4889df	                            mov rdi, rbx	        43	utf8.h	FUNCTION_55	CALL_2
0x4001876	      0xe800000000	                          call 0x400187b	        43	utf8.h	FUNCTION_55	CALL_2
0x400187b	          0x4885c0	                           test rax, rax	       646	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	IF_7
0x400187e	          0x4989c5	                            mov r13, rax	        43	utf8.h	FUNCTION_55	CALL_2
0x4001881	            0x7425	                            je 0x40018a8	       646	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	IF_7
0x4001883	          0x4889de	                            mov rsi, rbx	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001886	          0x4c89ff	                            mov rdi, r15	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001889	      0xe800000000	                          call 0x400188e	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x400188e	      0xe9a7feffff	                           jmp 0x400173a	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001893	       0xf1f440000	                   nop dword [rax + rax]	       647	pretty.c	WHILE_3	FUNCTION_25	ELSE_2	CALL_8
0x4001898	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400189b	            0x7417	                            je 0x40018b4	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x400189d	          0x4c89eb	                            mov rbx, r13	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018a0	      0xe9f8fdffff	                           jmp 0x400169d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018a5	           0xf1f00	                         nop dword [rax]	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018a8	          0x4d85e4	                           test r12, r12	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018ab	     0xf85ecfdffff	                           jne 0x400169d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018b1	          0x4531ed	                          xor r13d, r13d	       657	pretty.c	WHILE_3	FUNCTION_25	IF_9
0x40018b4	          0x4c89f7	                            mov rdi, r14	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x40018b7	      0xe800000000	                          call 0x40018bc	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x40018bc	      0xe95dffffff	                           jmp 0x400181e	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x40018c1	     0xf1f80000000	                         nop dword [rax]	       658	pretty.c	WHILE_3	FUNCTION_25	CALL_10
0x40018c8	            0x31c0	                            xor eax, eax	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40018ca	      0xe9cafdffff	                           jmp 0x4001699	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40018cf	              0x90	                                     nop	       564	pretty.c	WHILE_3	FUNCTION_23	CALL_2
0x40018d0	          0x4889ef	                            mov rdi, rbp	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018d3	      0xe800000000	                          call 0x40018d8	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018d8	      0x488b542408	                mov rdx, qword [rsp + 8]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018dd	        0x488b3424	                    mov rsi, qword [rsp]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018e1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018e6	          0x4989c0	                             mov r8, rax	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018e9	          0x4889e9	                            mov rcx, rbp	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018ec	        0x4883ea0a	                            sub rdx, 0xa	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018f0	        0x4883c609	                              add rsi, 9	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018f4	      0xe800000000	                          call 0x40018f9	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018f9	      0xe908ffffff	                           jmp 0x4001806	       591	pretty.c	WHILE_3	FUNCTION_24	ELSE_1	CALL_8
0x40018fe	          0x4889df	                            mov rdi, rbx	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x4001901	      0xe800000000	                          call 0x4001906	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x4001906	          0x4989c5	                            mov r13, rax	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x4001909	      0xe923feffff	                           jmp 0x4001731	       634	pretty.c	WHILE_3	FUNCTION_25	IF_4	CALL_6
0x400190e	      0xe800000000	                          call 0x4001913	       664	pretty.c	WHILE_3	FUNCTION_25
git_pretty_formats_config	IF,7:ELSE,2:SWITCH,0:FOR,2:DO,0:WHILE,0:functions,0:CALL,5	159
0x4000070	            0x4157	                                push r15	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000072	            0x4156	                                push r14	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000074	          0x4989ff	                            mov r15, rdi	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000077	            0x4155	                                push r13	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000079	            0x4154	                                push r12	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007b	          0x4989fe	                            mov r14, rdi	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007e	              0x55	                                push rbp	        45	pretty.c	WHILE_3	FUNCTION_3
0x400007f	              0x53	                                push rbx	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000080	        0x4883ec28	                           sub rsp, 0x28	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000084	    0x64488b042528	                mov rax, qword fs:[0x28]	        45	pretty.c	WHILE_3	FUNCTION_3
0x400008d	      0x4889442418	             mov qword [rsp + 0x18], rax	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000092	            0x31c0	                            xor eax, eax	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000094	      0x4889742408	                mov qword [rsp + 8], rsi	        45	pretty.c	WHILE_3	FUNCTION_3
0x4000099	      0xb800000000	                              mov eax, 0	        45	pretty.c	WHILE_3	FUNCTION_3
0x400009e	            0xeb0e	                           jmp 0x40000ae	        45	pretty.c	WHILE_3	FUNCTION_3
0x40000a0	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40000a4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40000a8	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40000ac	            0x7572	                           jne 0x4000120	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40000ae	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40000b1	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40000b3	            0x75eb	                           jne 0x40000a0	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40000b5	    0x488b1d000000	            mov rbx, qword [0x040000bc] 	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000bc	          0x4531e4	                          xor r12d, r12d	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000bf	    0x488b2d000000	            mov rbp, qword [0x040000c6] 	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000c6	          0x4885db	                           test rbx, rbx	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000c9	            0x7512	                           jne 0x40000dd	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cb	            0x31ed	                            xor ebp, ebp	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cd	            0xeb5f	                           jmp 0x400012e	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000cf	              0x90	                                     nop	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d0	        0x4983c401	                              add r12, 1	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d4	        0x4883c520	                           add rbp, 0x20	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000d8	          0x4c39e3	                            cmp rbx, r12	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000db	            0x744b	                            je 0x4000128	        54	pretty.c	WHILE_3	FUNCTION_3	FOR_1
0x40000dd	        0x488b7d00	                    mov rdi, qword [rbp]	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e1	          0x4c89fe	                            mov rsi, r15	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e4	      0xe800000000	                          call 0x40000e9	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000e9	            0x85c0	                           test eax, eax	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000eb	          0x4189c5	                           mov r13d, eax	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000ee	            0x75e0	                           jne 0x40000d0	        55	pretty.c	WHILE_3	FUNCTION_3	FOR_1	IF_2
0x40000f0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40000f5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40000fe	          0x4489e8	                           mov eax, r13d	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000101	     0xf85f2010000	                           jne 0x40002f9	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000107	        0x4883c428	                           add rsp, 0x28	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010b	              0x5b	                                 pop rbx	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010c	              0x5d	                                 pop rbp	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010d	            0x415c	                                 pop r12	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x400010f	            0x415d	                                 pop r13	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000111	            0x415e	                                 pop r14	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000113	            0x415f	                                 pop r15	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000115	              0xc3	                                     ret	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x4000120	          0x4531ed	                          xor r13d, r13d	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000123	            0xebcb	                           jmp 0x40000f0	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000125	           0xf1f00	                         nop dword [rax]	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x4000128	          0x4863eb	                         movsxd rbp, ebx	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x400012b	          0x4863db	                         movsxd rbx, ebx	        52	pretty.c	WHILE_3	FUNCTION_3	IF_1
0x400012e	    0x4c8b25000000	            mov r12, qword [0x04000135] 	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000135	          0x4c39e3	                            cmp rbx, r12	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000138	     0xf83a2000000	                           jae 0x40001e0	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x400013e	    0x4c8b2d000000	            mov r13, qword [0x04000145] 	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000145	            0xeb19	                           jmp 0x4000160	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000147	    0x660f1f840000	                    nop word [rax + rax]	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000150	        0x488d5d01	                      lea rbx, [rbp + 1]	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000154	          0x4c39e3	                            cmp rbx, r12	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000157	          0x4889dd	                            mov rbp, rbx	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x400015a	     0xf8380000000	                           jae 0x40001e0	        59	pretty.c	WHILE_3	FUNCTION_3	FOR_2
0x4000160	        0x48c1e305	                              shl rbx, 5	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000164	          0x4c89fe	                            mov rsi, r15	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000167	          0x4c01eb	                            add rbx, r13	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x400016a	          0x488b3b	                    mov rdi, qword [rbx]	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x400016d	      0xe800000000	                          call 0x4000172	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000172	            0x85c0	                           test eax, eax	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000174	            0x75da	                           jne 0x4000150	        60	pretty.c	WHILE_3	FUNCTION_3	FOR_2	IF_3
0x4000176	          0x4c89ff	                            mov rdi, r15	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x4000179	      0xe800000000	                          call 0x400017e	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x400017e	      0x488b542408	                mov rdx, qword [rsp + 8]	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000183	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000188	          0x488903	                    mov qword [rbx], rax	        74	pretty.c	WHILE_3	FUNCTION_3	CALL_2
0x400018b	    0xc74308080000	                  mov dword [rbx + 8], 8	        75	pretty.c	WHILE_3	FUNCTION_3
0x4000192	          0x4c89f6	                            mov rsi, r14	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x4000195	      0xe800000000	                          call 0x400019a	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019a	            0x85c0	                           test eax, eax	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019c	          0x4189c5	                           mov r13d, eax	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x400019f	     0xf8538010000	                           jne 0x40002dd	        76	pretty.c	WHILE_3	FUNCTION_3	IF_5	CALL_3
0x40001a5	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001aa	      0xb800000000	                              mov eax, 0	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001af	          0x4889ea	                            mov rdx, rbp	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b2	            0xeb15	                           jmp 0x40001c9	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b4	         0xf1f4000	                         nop dword [rax]	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x40001b8	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40001bc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40001c0	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40001c3	     0xf85b7000000	                           jne 0x4000280	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40001c9	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40001cc	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40001ce	            0x75e8	                           jne 0x40001b8	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40001d0	    0xc7430c000000	                mov dword [rbx + 0xc], 0	        80	pretty.c	WHILE_3	FUNCTION_3	IF_6
0x40001d7	        0x48895318	             mov qword [rbx + 0x18], rdx	        85	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40001db	      0xe910ffffff	                           jmp 0x40000f0	        87	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40001e0	    0x488b05000000	            mov rax, qword [0x040001e7] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001e7	      0x498d742401	                      lea rsi, [r12 + 1]	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001ec	          0x4839c6	                            cmp rsi, rax	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001ef	     0xf86dc000000	                           jbe 0x40002d1	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001f5	      0x488d444030	          lea rax, [rax + rax*2 + 0x30] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001fa	          0x48d1e8	                              shr rax, 1	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x40001fd	          0x4839f0	                            cmp rax, rsi	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000200	        0x480f43f0	                         cmovae rsi, rax	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000204	    0x48b8ffffffff	          movabs rax, 0x7ffffffffffffff 	       795	git-compat-util.h	FUNCTION_81	IF_1
0x400020e	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_81	IF_1
0x4000211	          0x4889f2	                            mov rdx, rsi	       795	git-compat-util.h	FUNCTION_81	IF_1
0x4000214	    0x488935000000	            mov qword [0x0400021b], rsi 	       795	git-compat-util.h	FUNCTION_81	IF_1
0x400021b	     0xf87c7000000	                            ja 0x40002e8	       795	git-compat-util.h	FUNCTION_81	IF_1
0x4000221	    0x488b3d000000	            mov rdi, qword [0x04000228] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000228	        0x48c1e605	                              shl rsi, 5	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400022c	      0xe800000000	                          call 0x4000231	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000231	    0x4c8b25000000	            mov r12, qword [0x04000238] 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000238	    0x488905000000	            mov qword [0x0400023f], rax 	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400023f	      0x498d742401	                      lea rsi, [r12 + 1]	        67	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000244	        0x49c1e405	                              shl r12, 5	        69	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000248	    0x488935000000	            mov qword [0x0400024f], rsi 	        71	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x400024f	        0x4a8d1c20	                    lea rbx, [rax + r12]	        69	pretty.c	WHILE_3	FUNCTION_3	IF_4
0x4000253	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_97	CALL_5
0x400025a	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_97	CALL_5
0x4000262	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_97	CALL_5
0x400026a	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_97	CALL_5
0x4000272	      0xe9fffeffff	                           jmp 0x4000176	        90	string3.h	FUNCTION_97	CALL_5
0x4000277	    0x660f1f840000	                    nop word [rax + rax]	        90	string3.h	FUNCTION_97	CALL_5
0x4000280	          0x4889ea	                            mov rdx, rbp	        79	pretty.c	WHILE_3	FUNCTION_3	IF_6	CALL_4
0x4000283	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000288	            0xeb13	                           jmp 0x400029d	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400028a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000290	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000294	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000298	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400029b	            0x7513	                           jne 0x40002b0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400029d	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40002a0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40002a2	            0x75ec	                           jne 0x4000290	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40002a4	    0xc7430c010000	                mov dword [rbx + 0xc], 1	        82	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7
0x40002ab	      0xe927ffffff	                           jmp 0x40001d7	        82	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7
0x40002b0	      0xbe25000000	                           mov esi, 0x25	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002b5	          0x4889ef	                            mov rdi, rbp	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002b8	      0xe800000000	                          call 0x40002bd	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002bd	          0x4885c0	                           test rax, rax	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c0	          0x4889ea	                            mov rdx, rbp	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c3	            0x75df	                           jne 0x40002a4	        81	pretty.c	WHILE_3	FUNCTION_3	ELSE_1	IF_7	CALL_5
0x40002c5	    0xc74314010000	               mov dword [rbx + 0x14], 1	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002cc	      0xe906ffffff	                           jmp 0x40001d7	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002d1	    0x488b05000000	            mov rax, qword [0x040002d8] 	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002d8	      0xe967ffffff	                           jmp 0x4000244	        84	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
0x40002dd	    0x41bdffffffff	                    mov r13d, 0xffffffff	        77	pretty.c	WHILE_3	FUNCTION_3	IF_5
0x40002e3	      0xe908feffff	                           jmp 0x40000f0	        77	pretty.c	WHILE_3	FUNCTION_3	IF_5
0x40002e8	      0xbe20000000	                           mov esi, 0x20	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x40002ed	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x40002f2	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x40002f4	      0xe800000000	                          call 0x40002f9	       796	git-compat-util.h	FUNCTION_81	IF_1	CALL_1
0x40002f9	      0xe800000000	                          call 0x40002fe	        88	pretty.c	WHILE_3	FUNCTION_3	ELSE_2
add_rfc2047	IF,1:ELSE,0:SWITCH,0:FOR,1:DO,0:WHILE,1:functions,0:CALL,11	129
0x4000360	            0x4157	                                push r15	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000362	            0x4156	                                push r14	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000364	          0x4989ce	                            mov r14, rcx	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000367	            0x4155	                                push r13	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000369	            0x4154	                                push r12	       360	pretty.c	WHILE_3	FUNCTION_17
0x400036b	              0x55	                                push rbp	       360	pretty.c	WHILE_3	FUNCTION_17
0x400036c	              0x53	                                push rbx	       360	pretty.c	WHILE_3	FUNCTION_17
0x400036d	          0x4889fd	                            mov rbp, rdi	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000370	        0x4883ec28	                           sub rsp, 0x28	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000374	        0x4c8b6708	                mov r12, qword [rdi + 8]	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x4000378	      0x4889742418	             mov qword [rsp + 0x18], rsi	       360	pretty.c	WHILE_3	FUNCTION_17
0x400037d	      0x4889542410	             mov qword [rsp + 0x10], rdx	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000382	      0x448944240c	              mov dword [rsp + 0xc], r8d	       360	pretty.c	WHILE_3	FUNCTION_17
0x4000387	          0x4489e3	                           mov ebx, r12d	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400038a	          0x83eb01	                              sub ebx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400038d	            0x7822	                            js 0x40003b1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x400038f	          0x4863c3	                         movsxd rax, ebx	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x4000392	        0x48034710	             add rax, qword [rdi + 0x10]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x4000396	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x4000399	            0x750e	                           jne 0x40003a9	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x400039b	            0xeb14	                           jmp 0x40003b1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x400039d	           0xf1f00	                         nop dword [rax]	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a0	        0x4883e801	                              sub rax, 1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a4	          0x80380a	                     cmp byte [rax], 0xa	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a7	            0x7408	                            je 0x40003b1	       259	pretty.c	WHILE_3	FUNCTION_13	FOR_1	IF_1
0x40003a9	          0x83eb01	                              sub ebx, 1	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003ac	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003af	            0x75ef	                           jne 0x40003a0	       258	pretty.c	WHILE_3	FUNCTION_13	FOR_1
0x40003b1	          0x4c89f7	                            mov rdi, r14	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003b4	      0xe800000000	                          call 0x40003b9	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003b9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003be	          0x4889ef	                            mov rdi, rbp	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003c1	      0x488d745264	          lea rsi, [rdx + rdx*2 + 0x64] 	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003c6	          0x4801c6	                            add rsi, rax	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003c9	      0xe800000000	                          call 0x40003ce	       365	pretty.c	WHILE_3	FUNCTION_17	CALL_3
0x40003ce	          0x4c89f2	                            mov rdx, r14	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003d1	      0xbe00000000	                              mov esi, 0	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003d6	          0x4889ef	                            mov rdi, rbp	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003d9	            0x31c0	                            xor eax, eax	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003db	      0xe800000000	                          call 0x40003e0	       366	pretty.c	WHILE_3	FUNCTION_17	CALL_4
0x40003e0	          0x4c89f7	                            mov rdi, r14	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003e3	      0xe800000000	                          call 0x40003e8	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003e8	      0x458d6c0404	               lea r13d, [r12 + rax + 4]	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003ed	          0x4129dd	                           sub r13d, ebx	       367	pretty.c	WHILE_3	FUNCTION_17	CALL_5
0x40003f0	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x40003f6	            0x747a	                            je 0x4000472	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x40003f8	     0xf1f84000000	                   nop dword [rax + rax]	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000400	      0x488d742410	                   lea rsi, [rsp + 0x10]	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x4000405	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400040a	          0x4c89f2	                            mov rdx, r14	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400040d	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       377	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000412	      0xe800000000	                          call 0x4000417	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x4000417	          0x83f801	                              cmp eax, 1	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x400041a	          0x4189c0	                            mov r8d, eax	       378	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_6
0x400041d	     0xf8ead000000	                           jle 0x40004d0	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x4000423	        0x478d3c40	                   lea r15d, [r8 + r8*2]	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000427	    0x41bc00000000	                             mov r12d, 0	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x400042d	          0x4501fd	                          add r13d, r15d	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000430	        0x4183fd4a	                          cmp r13d, 0x4a	       393	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1
0x4000434	            0x7f62	                            jg 0x4000498	       393	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1
0x4000436	          0x4585c0	                           test r8d, r8d	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000439	            0x7eb5	                           jle 0x40003f0	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400043b	        0x418d40ff	                       lea eax, [r8 - 1]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400043f	          0x4989df	                            mov r15, rbx	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000442	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000447	    0x660f1f840000	                    nop word [rax + rax]	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000450	        0x410fb617	                   movzx edx, byte [r15]	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000454	            0x31c0	                            xor eax, eax	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000456	          0x4c89e6	                            mov rsi, r12	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000459	          0x4889ef	                            mov rdi, rbp	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x400045c	        0x4983c701	                              add r15, 1	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000460	      0xe800000000	                          call 0x4000465	       400	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_10
0x4000465	          0x4939df	                            cmp r15, rbx	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x4000468	            0x75e6	                           jne 0x4000450	       399	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	FOR_1
0x400046a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000470	            0x758e	                           jne 0x4000400	       369	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000472	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x4000475	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_60	CALL_2
0x400047a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_60	CALL_2
0x400047f	      0xe800000000	                          call 0x4000484	       279	strbuf.h	FUNCTION_60	CALL_2
0x4000484	        0x4883c428	                           add rsp, 0x28	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000488	              0x5b	                                 pop rbx	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000489	              0x5d	                                 pop rbp	       404	pretty.c	WHILE_3	FUNCTION_17
0x400048a	            0x415c	                                 pop r12	       404	pretty.c	WHILE_3	FUNCTION_17
0x400048c	            0x415d	                                 pop r13	       404	pretty.c	WHILE_3	FUNCTION_17
0x400048e	            0x415e	                                 pop r14	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000490	            0x415f	                                 pop r15	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000492	              0xc3	                                     ret	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000493	       0xf1f440000	                   nop dword [rax + rax]	       404	pretty.c	WHILE_3	FUNCTION_17
0x4000498	          0x4c89f2	                            mov rdx, r14	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x400049b	      0xbe00000000	                              mov esi, 0	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004a0	          0x4889ef	                            mov rdi, rbp	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004a3	            0x31c0	                            xor eax, eax	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004a5	      0x4489442408	                mov dword [rsp + 8], r8d	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004aa	      0xe800000000	                          call 0x40004af	       395	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_8
0x40004af	          0x4c89f7	                            mov rdi, r14	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004b2	      0xe800000000	                          call 0x40004b7	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004b7	      0x448b442408	                mov r8d, dword [rsp + 8]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004bc	      0x458d6c0706	               lea r13d, [r15 + rax + 6]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004c1	      0xe970ffffff	                           jmp 0x4000436	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       396	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	IF_1	CALL_9
0x40004d0	           0xfb603	                   movzx eax, byte [rbx]	       379	pretty.c	WHILE_3	FUNCTION_17	WHILE_1	CALL_7
0x40004d3	          0x8d50e0	                   lea edx, [rax - 0x20]	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004d6	          0x80fa5e	                            cmp dl, 0x5e	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004d9	     0xf8744ffffff	                            ja 0x4000423	       207	pretty.c	WHILE_3	FUNCTION_9
0x40004df	           0xfb6d0	                           movzx edx, al	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004e2	     0xfb692000000	                   movzx edx, byte [rdx]	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004e9	          0xf6c201	                              test dl, 1	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004ec	     0xf8531ffffff	                           jne 0x4000423	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004f2	            0x89c1	                            mov ecx, eax	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004f4	          0x83e1fd	                     and ecx, 0xfffffffd	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004f7	          0x80f93d	                            cmp cl, 0x3d	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x40004fa	     0xf8423ffffff	                            je 0x4000423	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000500	            0x3c5f	                            cmp al, 0x5f	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000502	     0xf841bffffff	                            je 0x4000423	       315	pretty.c	WHILE_3	FUNCTION_15	IF_2
0x4000508	      0x837c240c01	                cmp dword [rsp + 0xc], 1	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x400050d	    0x41bc00000000	                             mov r12d, 0	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x4000513	    0x41bf01000000	                             mov r15d, 1	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000519	     0xf850effffff	                           jne 0x400042d	       335	pretty.c	WHILE_3	FUNCTION_15	IF_3
0x400051f	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000523	          0x83e206	                              and edx, 6	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000526	          0x4189cf	                           mov r15d, ecx	       383	pretty.c	WHILE_3	FUNCTION_17	WHILE_1
0x4000529	     0xf85fefeffff	                           jne 0x400042d	       339	pretty.c	WHILE_3	FUNCTION_15
0x400052f	            0x3c2f	                            cmp al, 0x2f	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000531	     0xf87ecfeffff	                            ja 0x4000423	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000537	    0x48be00000000	              movabs rsi, 0xac0200000000	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000541	        0x480fa3c6	                             bt rsi, rax	       339	pretty.c	WHILE_3	FUNCTION_15
0x4000545	     0xf82e2feffff	                            jb 0x400042d	       339	pretty.c	WHILE_3	FUNCTION_15
0x400054b	      0xe9d3feffff	                           jmp 0x4000423	       339	pretty.c	WHILE_3	FUNCTION_15
format_commit_message	IF,5:ELSE,1:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,9	143
0x4003180	            0x4157	                                push r15	      1510	pretty.c	FUNCTION_44
0x4003182	            0x4156	                                push r14	      1510	pretty.c	FUNCTION_44
0x4003184	          0x4989f6	                            mov r14, rsi	      1510	pretty.c	FUNCTION_44
0x4003187	            0x4155	                                push r13	      1510	pretty.c	FUNCTION_44
0x4003189	            0x4154	                                push r12	      1510	pretty.c	FUNCTION_44
0x400318b	          0x4989fc	                            mov r12, rdi	      1510	pretty.c	FUNCTION_44
0x400318e	              0x55	                                push rbp	      1510	pretty.c	FUNCTION_44
0x400318f	              0x53	                                push rbx	      1510	pretty.c	FUNCTION_44
0x4003190	          0x4889d3	                            mov rbx, rdx	      1510	pretty.c	FUNCTION_44
0x4003193	          0x4889ca	                            mov rdx, rcx	      1510	pretty.c	FUNCTION_44
0x4003196	    0x4881ec180100	                          sub rsp, 0x118	      1510	pretty.c	FUNCTION_44
0x400319d	        0x4c8b6958	            mov r13, qword [rcx + 0x58] 	      1512	pretty.c	FUNCTION_44
0x40031a1	      0xb918000000	                           mov ecx, 0x18	        90	string3.h	FUNCTION_97	CALL_5
0x40031a6	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	        90	string3.h	FUNCTION_97	CALL_5
0x40031ab	    0x488db4248800	                   lea rsi, [rsp + 0x88]	      1523	pretty.c	FUNCTION_44	CALL_1
0x40031b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1510	pretty.c	FUNCTION_44
0x40031bc	    0x488984240801	            mov qword [rsp + 0x108], rax	      1510	pretty.c	FUNCTION_44
0x40031c4	            0x31c0	                            xor eax, eax	      1510	pretty.c	FUNCTION_44
0x40031c6	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_97	CALL_5
0x40031c9	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_97	CALL_5
0x40031cc	        0x488b4308	                mov rax, qword [rbx + 8]	      1518	pretty.c	FUNCTION_44
0x40031d0	      0x4889542438	             mov qword [rsp + 0x38], rdx	      1517	pretty.c	FUNCTION_44
0x40031d5	          0x4c89e7	                            mov rdi, r12	      1523	pretty.c	FUNCTION_44	CALL_1
0x40031d8	      0xba00000000	                              mov edx, 0	      1523	pretty.c	FUNCTION_44	CALL_1
0x40031dd	      0x4c89642430	             mov qword [rsp + 0x30], r12	      1516	pretty.c	FUNCTION_44
0x40031e2	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      1518	pretty.c	FUNCTION_44
0x40031ea	      0xe800000000	                          call 0x40031ef	      1523	pretty.c	FUNCTION_44	CALL_1
0x40031ef	          0x4c89f6	                            mov rsi, r14	      1527	pretty.c	FUNCTION_44	CALL_2
0x40031f2	          0x4889e9	                            mov rcx, rbp	      1527	pretty.c	FUNCTION_44	CALL_2
0x40031f5	      0xba00000000	                              mov edx, 0	      1527	pretty.c	FUNCTION_44	CALL_2
0x40031fa	          0x4889df	                            mov rdi, rbx	      1527	pretty.c	FUNCTION_44	CALL_2
0x40031fd	    0x488984248000	             mov qword [rsp + 0x80], rax	      1523	pretty.c	FUNCTION_44	CALL_1
0x4003205	      0xe800000000	                          call 0x400320a	      1527	pretty.c	FUNCTION_44	CALL_2
0x400320a	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003212	          0x4d85f6	                           test r14, r14	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003215	     0xf84c5010000	                            je 0x40033e0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x400321b	    0x488bac24e800	            mov rbp, qword [rsp + 0xe8] 	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4003223	        0x488b4308	                mov rax, qword [rbx + 8]	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4003227	          0x4839c5	                            cmp rbp, rax	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x400322a	     0xf8200010000	                            jb 0x4003330	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4003230	    0x48898424e800	             mov qword [rsp + 0xe8], rax	       912	pretty.c	WHILE_3	FUNCTION_34
0x4003238	    0x48c784249000	               mov qword [rsp + 0x90], 0	       913	pretty.c	WHILE_3	FUNCTION_34
0x4003244	    0x48c784249800	               mov qword [rsp + 0x98], 0	       914	pretty.c	WHILE_3	FUNCTION_34
0x4003250	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       915	pretty.c	WHILE_3	FUNCTION_34
0x400325c	          0x4d85ed	                           test r13, r13	      1531	pretty.c	FUNCTION_44	IF_1
0x400325f	            0x745f	                            je 0x40032c0	      1531	pretty.c	FUNCTION_44	IF_1
0x4003261	          0x4c89ee	                            mov rsi, r13	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003264	      0xbf00000000	                              mov edi, 0	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003269	      0xe800000000	                          call 0x400326e	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x400326e	            0x85c0	                           test eax, eax	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003270	            0x747a	                            je 0x40032ec	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x4003272	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      1532	pretty.c	FUNCTION_44	IF_1	IF_2	CALL_4
0x400327a	      0xe800000000	                          call 0x400327f	      1548	pretty.c	FUNCTION_44	CALL_8
0x400327f	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      1549	pretty.c	FUNCTION_44	CALL_9
0x4003287	          0x4c89e7	                            mov rdi, r12	      1549	pretty.c	FUNCTION_44	CALL_9
0x400328a	      0xe800000000	                          call 0x400328f	      1549	pretty.c	FUNCTION_44	CALL_9
0x400328f	    0x488b84240801	           mov rax, qword [rsp + 0x108] 	      1550	pretty.c	FUNCTION_44
0x4003297	    0x644833042528	                xor rax, qword fs:[0x28]	      1550	pretty.c	FUNCTION_44
0x40032a0	     0xf8582010000	                           jne 0x4003428	      1550	pretty.c	FUNCTION_44
0x40032a6	    0x4881c4180100	                          add rsp, 0x118	      1550	pretty.c	FUNCTION_44
0x40032ad	              0x5b	                                 pop rbx	      1550	pretty.c	FUNCTION_44
0x40032ae	              0x5d	                                 pop rbp	      1550	pretty.c	FUNCTION_44
0x40032af	            0x415c	                                 pop r12	      1550	pretty.c	FUNCTION_44
0x40032b1	            0x415d	                                 pop r13	      1550	pretty.c	FUNCTION_44
0x40032b3	            0x415e	                                 pop r14	      1550	pretty.c	FUNCTION_44
0x40032b5	            0x415f	                                 pop r15	      1550	pretty.c	FUNCTION_44
0x40032b7	              0xc3	                                     ret	      1550	pretty.c	FUNCTION_44
0x40032b8	     0xf1f84000000	                   nop dword [rax + rax]	      1550	pretty.c	FUNCTION_44
0x40032c0	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032c8	          0x4885ff	                           test rdi, rdi	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032cb	            0x74ad	                            je 0x400327a	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032cd	      0xbe00000000	                              mov esi, 0	      1536	pretty.c	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40032d2	      0xe800000000	                          call 0x40032d7	      1536	pretty.c	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x40032d7	            0x85c0	                           test eax, eax	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032d9	            0x7597	                           jne 0x4003272	      1535	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032db	    0x4c8bac248800	            mov r13, qword [rsp + 0x88] 	      1537	pretty.c	FUNCTION_44	ELSE_1	IF_3
0x40032e3	          0x4d85ed	                           test r13, r13	      1540	pretty.c	FUNCTION_44	IF_4
0x40032e6	     0xf8441010000	                            je 0x400342d	      1540	pretty.c	FUNCTION_44	IF_4
0x40032ec	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x40032f0	          0x8b7308	                mov esi, dword [rbx + 8]	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x40032f3	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x40032f8	      0xb900000000	                              mov ecx, 0	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x40032fd	          0x4c89ea	                            mov rdx, r13	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x4003300	      0xe800000000	                          call 0x4003305	      1542	pretty.c	FUNCTION_44	IF_4	CALL_6
0x4003305	          0x4885c0	                           test rax, rax	      1544	pretty.c	FUNCTION_44	IF_4	IF_5
0x4003308	     0xf8464ffffff	                            je 0x4003272	      1544	pretty.c	FUNCTION_44	IF_4	IF_5
0x400330e	      0x4863542410	         movsxd rdx, dword [rsp + 0x10] 	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003313	          0x4889c6	                            mov rsi, rax	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003316	          0x4889df	                            mov rdi, rbx	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003319	          0x8d4a01	                      lea ecx, [rdx + 1]	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x400331c	          0x4863c9	                         movsxd rcx, ecx	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x400331f	      0xe800000000	                          call 0x4003324	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003324	      0xe949ffffff	                           jmp 0x4003272	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003329	     0xf1f80000000	                         nop dword [rax]	      1545	pretty.c	FUNCTION_44	IF_4	CALL_7
0x4003330	          0x4885ed	                           test rbp, rbp	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x4003333	    0x488b8c24a000	            mov rcx, qword [rsp + 0xa0] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x400333b	    0x4c8bbc249800	            mov r15, qword [rsp + 0x98] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x4003343	    0x48c744241000	               mov qword [rsp + 0x10], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x400334c	    0x48c744241800	               mov qword [rsp + 0x18], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x4003355	    0x48c744242000	               mov qword [rsp + 0x20], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x400335e	     0xf85a4000000	                           jne 0x4003408	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x4003364	          0x4889ee	                            mov rsi, rbp	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4003367	        0x48037310	             add rsi, qword [rbx + 0x10]	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x400336b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4003370	          0x4589f0	                           mov r8d, r14d	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4003373	          0x4489fa	                           mov edx, r15d	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4003376	      0xe800000000	                          call 0x400337b	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x400337b	          0x488b33	                    mov rsi, qword [rbx]	        53	string3.h	FUNCTION_94	CALL_3
0x400337e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_94	CALL_3
0x4003383	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x4003388	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_94	CALL_3
0x400338d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_94	CALL_3
0x4003392	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x4003397	        0x488b7308	                mov rsi, qword [rbx + 8]	        53	string3.h	FUNCTION_94	CALL_3
0x400339b	          0x48890b	                    mov qword [rbx], rcx	        53	string3.h	FUNCTION_94	CALL_3
0x400339e	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x40033a2	    0x488984240001	            mov qword [rsp + 0x100], rax	        53	string3.h	FUNCTION_94	CALL_3
0x40033aa	    0x48898c24f000	             mov qword [rsp + 0xf0], rcx	        53	string3.h	FUNCTION_94	CALL_3
0x40033b2	      0x4889742418	             mov qword [rsp + 0x18], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x40033b7	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_94	CALL_3
0x40033bb	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_94	CALL_3
0x40033bf	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x40033c7	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x40033cc	      0xe800000000	                          call 0x40033d1	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40033d1	        0x488b4308	                mov rax, qword [rbx + 8]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40033d5	      0xe956feffff	                           jmp 0x4003230	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40033da	    0x660f1f440000	                    nop word [rax + rax]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40033e0	    0x4883bc249800	               cmp qword [rsp + 0x98], 0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40033e9	     0xf852cfeffff	                           jne 0x400321b	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40033ef	    0x4883bc24a000	               cmp qword [rsp + 0xa0], 0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40033f8	     0xf851dfeffff	                           jne 0x400321b	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40033fe	      0xe959feffff	                           jmp 0x400325c	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003403	       0xf1f440000	                   nop dword [rax + rax]	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4003408	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400340c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4003411	          0x4889ea	                            mov rdx, rbp	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4003414	      0x48894c2408	                mov qword [rsp + 8], rcx	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4003419	      0xe800000000	                          call 0x400341e	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400341e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4003423	      0xe93cffffff	                           jmp 0x4003364	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4003428	      0xe800000000	                          call 0x400342d	      1550	pretty.c	FUNCTION_44
0x400342d	            0x31ff	                            xor edi, edi	      1550	pretty.c	FUNCTION_44
0x400342f	      0xe946feffff	                           jmp 0x400327a	      1550	pretty.c	FUNCTION_44
pp_commit_easy	IF,0:ELSE,0:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,1	17
0x40042f0	    0x4881ecb80000	                           sub rsp, 0xb8	      1867	pretty.c	FUNCTION_53
0x40042f7	          0x4189f8	                            mov r8d, edi	      1867	pretty.c	FUNCTION_53
0x40042fa	      0xb914000000	                           mov ecx, 0x14	      1868	pretty.c	FUNCTION_53
0x40042ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      1867	pretty.c	FUNCTION_53
0x4004308	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1867	pretty.c	FUNCTION_53
0x4004310	            0x31c0	                            xor eax, eax	      1867	pretty.c	FUNCTION_53
0x4004312	          0x4889e7	                            mov rdi, rsp	      1868	pretty.c	FUNCTION_53
0x4004315	          0xf348ab	              rep stosq qword [rdi], rax	      1868	pretty.c	FUNCTION_53
0x4004318	          0x4889e7	                            mov rdi, rsp	      1870	pretty.c	FUNCTION_53	CALL_1
0x400431b	        0x44890424	                    mov dword [rsp], r8d	      1869	pretty.c	FUNCTION_53
0x400431f	      0xe800000000	                          call 0x4004324	      1870	pretty.c	FUNCTION_53	CALL_1
0x4004324	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      1871	pretty.c	FUNCTION_53
0x400432c	    0x644833042528	                xor rax, qword fs:[0x28]	      1871	pretty.c	FUNCTION_53
0x4004335	            0x7508	                           jne 0x400433f	      1871	pretty.c	FUNCTION_53
0x4004337	    0x4881c4b80000	                           add rsp, 0xb8	      1871	pretty.c	FUNCTION_53
0x400433e	              0xc3	                                     ret	      1871	pretty.c	FUNCTION_53
0x400433f	      0xe800000000	                  call section_end..data	      1871	pretty.c	FUNCTION_53
get_commit_format	IF,5:ELSE,0:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0:CALL,7	204
0x40008b0	            0x4157	                                push r15	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008b2	            0x4156	                                push r14	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008b4	            0x4155	                                push r13	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008b6	            0x4154	                                push r12	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008b8	          0x4989fc	                            mov r12, rdi	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008bb	              0x55	                                push rbp	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008bc	              0x53	                                push rbx	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008bd	          0x4889f5	                            mov rbp, rsi	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008c0	          0x4889fb	                            mov rbx, rdi	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008c3	    0x4881ec280100	                          sub rsp, 0x128	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008d3	    0x488984241801	            mov qword [rsp + 0x118], rax	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008db	            0x31c0	                            xor eax, eax	       155	pretty.c	WHILE_3	FUNCTION_7
0x40008dd	        0x80667bf7	             and byte [rsi + 0x7b], 0xf7	       158	pretty.c	WHILE_3	FUNCTION_7
0x40008e1	          0x4885ff	                           test rdi, rdi	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x40008e4	      0xb800000000	                              mov eax, 0	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x40008e9	            0x7512	                           jne 0x40008fd	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x40008eb	      0xe971010000	                           jmp 0x4000a61	       159	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x40008f0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40008f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40008f8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40008fb	            0x7533	                           jne 0x4000930	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40008fd	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4000900	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4000902	            0x75ec	                           jne 0x40008f0	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4000904	    0x488b3d000000	            mov rdi, qword [0x0400090b] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x400090b	      0xe800000000	                          call 0x4000910	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000910	          0x4889df	                            mov rdi, rbx	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000913	      0xe800000000	                          call 0x4000918	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000918	    0x488905000000	            mov qword [0x0400091f], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x400091f	    0xc785a4000000	               mov dword [rbp + 0xa4], 8	        41	pretty.c	WHILE_3	FUNCTION_2
0x4000929	            0xeb5d	                           jmp 0x4000988	        41	pretty.c	WHILE_3	FUNCTION_2
0x400092b	       0xf1f440000	                   nop dword [rax + rax]	        41	pretty.c	WHILE_3	FUNCTION_2
0x4000930	      0x41803c2400	                       cmp byte [r12], 0	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000935	            0x7428	                            je 0x400095f	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000937	          0x4c89e2	                            mov rdx, r12	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x400093a	      0xb800000000	                              mov eax, 0	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x400093f	            0xeb14	                           jmp 0x4000955	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000941	     0xf1f80000000	                         nop dword [rax]	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x4000948	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400094c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000950	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000953	            0x7563	                           jne 0x40009b8	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4000955	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4000958	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400095a	            0x75ec	                           jne 0x4000948	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400095c	          0x4989d4	                            mov r12, rdx	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400095f	    0x488b3d000000	            mov rdi, qword [0x04000966] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000966	      0xe800000000	                          call 0x400096b	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x400096b	          0x4c89e7	                            mov rdi, r12	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x400096e	      0xe800000000	                          call 0x4000973	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000973	    0x488905000000	            mov qword [0x0400097a], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x400097a	        0x804d7b08	                 or byte [rbp + 0x7b], 8	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x400097e	    0xc785a4000000	               mov dword [rbp + 0xa4], 8	        41	pretty.c	WHILE_3	FUNCTION_2
0x4000988	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000990	    0x644833042528	                xor rax, qword fs:[0x28]	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000999	     0xf85ce020000	                           jne 0x4000c6d	       184	pretty.c	WHILE_3	FUNCTION_7
0x400099f	    0x4881c4280100	                          add rsp, 0x128	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009a6	              0x5b	                                 pop rbx	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009a7	              0x5d	                                 pop rbp	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009a8	            0x415c	                                 pop r12	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009aa	            0x415d	                                 pop r13	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009ac	            0x415e	                                 pop r14	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009ae	            0x415f	                                 pop r15	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009b0	              0xc3	                                     ret	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009b1	     0xf1f80000000	                         nop dword [rax]	       184	pretty.c	WHILE_3	FUNCTION_7
0x40009b8	      0xbe25000000	                           mov esi, 0x25	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40009bd	          0x4c89e7	                            mov rdi, r12	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40009c0	      0xe800000000	                          call 0x40009c5	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40009c5	          0x4885c0	                           test rax, rax	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40009c8	            0x7595	                           jne 0x400095f	       168	pretty.c	WHILE_3	FUNCTION_7	IF_3	CALL_3
0x40009ca	    0x488b05000000	            mov rax, qword [0x040009d1] 	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x40009d1	          0x4885c0	                           test rax, rax	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x40009d4	     0xf8436010000	                            je 0x4000b10	       148	pretty.c	WHILE_3	FUNCTION_6	IF_1
0x40009da	    0x48833d000000	               cmp qword [0x040009e2], 0	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009e2	     0xf848a020000	                            je 0x4000c72	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009e8	          0x4d89e5	                            mov r13, r12	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009eb	    0x48c744240801	                  mov qword [rsp + 8], 1	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009f4	         0xf1f4000	                         nop dword [rax]	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x40009f8	    0x48c704240000	                      mov qword [rsp], 0	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a00	            0x31db	                            xor ebx, ebx	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a02	          0x4531ff	                          xor r15d, r15d	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a05	            0xeb1f	                           jmp 0x4000a26	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a07	    0x660f1f840000	                    nop word [rax + rax]	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a10	        0x48390424	                    cmp qword [rsp], rax	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a14	            0x7742	                            ja 0x4000a58	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a16	    0x488b05000000	            mov rax, qword [0x04000a1d] 	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x4000a1d	        0x4983c701	                              add r15, 1	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x4000a21	          0x4939c7	                            cmp r15, rax	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x4000a24	            0x734a	                           jae 0x4000a70	       124	pretty.c	WHILE_3	FUNCTION_5	FOR_1
0x4000a26	    0x488b05000000	            mov rax, qword [0x04000a2d] 	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a2d	          0x4d89fe	                            mov r14, r15	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a30	          0x4c89ee	                            mov rsi, r13	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a33	        0x49c1e605	                              shl r14, 5	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a37	        0x4a8b3c30	              mov rdi, qword [rax + r14]	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a3b	      0xe800000000	                          call 0x4000a40	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a40	            0x85c0	                           test eax, eax	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a42	            0x74d2	                            je 0x4000a16	       127	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000a44	    0x4c0335000000	             add r14, qword [0x04000a4b]	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a4b	          0x498b3e	                    mov rdi, qword [r14]	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a4e	      0xe800000000	                          call 0x4000a53	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a53	          0x4885db	                           test rbx, rbx	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a56	            0x75b8	                           jne 0x4000a10	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a58	        0x48890424	                    mov qword [rsp], rax	       130	pretty.c	WHILE_3	FUNCTION_5	FOR_1	CALL_3
0x4000a5c	          0x4c89f3	                            mov rbx, r14	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a5f	            0xebb5	                           jmp 0x4000a16	       131	pretty.c	WHILE_3	FUNCTION_5	FOR_1	IF_3
0x4000a61	    0xc786a4000000	               mov dword [rsi + 0xa4], 1	       160	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000a6b	      0xe918ffffff	                           jmp 0x4000988	       161	pretty.c	WHILE_3	FUNCTION_7	IF_1
0x4000a70	          0x4885db	                           test rbx, rbx	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a73	     0xf8488000000	                            je 0x4000b01	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a79	          0x8b5314	            mov edx, dword [rbx + 0x14] 	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a7c	            0x85d2	                           test edx, edx	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a7e	            0x741a	                            je 0x4000a9a	       137	pretty.c	WHILE_3	FUNCTION_5	IF_4
0x4000a80	      0x4839442408	                cmp qword [rsp + 8], rax	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a85	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	       138	pretty.c	WHILE_3	FUNCTION_5	IF_4	CALL_4
0x4000a89	     0xf83e3010000	                           jae 0x4000c72	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a8f	    0x488344240801	                  add qword [rsp + 8], 1	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a95	      0xe95effffff	                           jmp 0x40009f8	       119	pretty.c	WHILE_3	FUNCTION_5	IF_1
0x4000a9a	          0x8b4308	                mov eax, dword [rbx + 8]	       177	pretty.c	WHILE_3	FUNCTION_7
0x4000a9d	         0xfb6557b	           movzx edx, byte [rbp + 0x7b] 	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000aa1	    0x8985a4000000	            mov dword [rbp + 0xa4], eax 	       177	pretty.c	WHILE_3	FUNCTION_7
0x4000aa7	         0xfb6430c	            movzx eax, byte [rbx + 0xc] 	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000aab	          0x83e2f7	                     and edx, 0xfffffff7	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000aae	          0x83e001	                              and eax, 1	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000ab1	          0xc1e003	                              shl eax, 3	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000ab4	             0x9d0	                             or eax, edx	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000ab6	          0x88457b	               mov byte [rbp + 0x7b], al	       178	pretty.c	WHILE_3	FUNCTION_7
0x4000ab9	        0x837b0808	                  cmp dword [rbx + 8], 8	       180	pretty.c	WHILE_3	FUNCTION_7	IF_5
0x4000abd	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       179	pretty.c	WHILE_3	FUNCTION_7
0x4000ac0	    0x89859c000000	            mov dword [rbp + 0x9c], eax 	       179	pretty.c	WHILE_3	FUNCTION_7
0x4000ac6	     0xf85bcfeffff	                           jne 0x4000988	       180	pretty.c	WHILE_3	FUNCTION_7	IF_5
0x4000acc	        0x448b630c	            mov r12d, dword [rbx + 0xc] 	       181	pretty.c	WHILE_3	FUNCTION_7	IF_5	CALL_7
0x4000ad0	    0x488b3d000000	            mov rdi, qword [0x04000ad7] 	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000ad7	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       181	pretty.c	WHILE_3	FUNCTION_7	IF_5	CALL_7
0x4000adb	      0xe800000000	                          call 0x4000ae0	        37	pretty.c	WHILE_3	FUNCTION_2	CALL_1
0x4000ae0	          0x4889df	                            mov rdi, rbx	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000ae3	      0xe800000000	                          call 0x4000ae8	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000ae8	          0x4585e4	                         test r12d, r12d	        39	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000aeb	    0x488905000000	            mov qword [0x04000af2], rax 	        38	pretty.c	WHILE_3	FUNCTION_2	CALL_2
0x4000af2	     0xf8427feffff	                            je 0x400091f	        39	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000af8	        0x804d7b08	                 or byte [rbp + 0x7b], 8	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000afc	      0xe91efeffff	                           jmp 0x400091f	        40	pretty.c	WHILE_3	FUNCTION_2	IF_1
0x4000b01	          0x4c89e6	                            mov rsi, r12	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000b04	      0xbf00000000	                              mov edi, 0	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000b09	            0x31c0	                            xor eax, eax	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000b0b	      0xe800000000	                          call 0x4000b10	       175	pretty.c	WHILE_3	FUNCTION_7	CALL_6
0x4000b10	    0x488b15000000	            mov rdx, qword [0x04000b17] 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b17	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b1c	      0xb920000000	                           mov ecx, 0x20	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b21	    0x48c705000000	               mov qword [0x04000b2c], 8	       102	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b2c	    0x48c705000000	               mov qword [0x04000b37], 8	       103	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b37	          0x4889df	                            mov rdi, rbx	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b3a	        0x4883fa07	                              cmp rdx, 7	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b3e	          0xf348ab	              rep stosq qword [rdi], rax	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b41	    0x48c744241000	               mov qword [rsp + 0x10], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b4a	    0x48c744243000	               mov qword [rsp + 0x30], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b53	    0xc74424380100	               mov dword [rsp + 0x38], 1	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b5b	    0xc74424400800	               mov dword [rsp + 0x40], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b63	    0x48c744245000	               mov qword [rsp + 0x50], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b6c	    0xc74424580200	               mov dword [rsp + 0x58], 2	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b74	    0x48c744247000	               mov qword [rsp + 0x70], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b7d	    0xc74424780600	               mov dword [rsp + 0x78], 6	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b85	    0x48c784249000	               mov qword [rsp + 0x90], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b91	    0xc78424980000	               mov dword [rsp + 0x98], 7	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000b9c	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000ba8	    0xc78424b80000	               mov dword [rsp + 0xb8], 4	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bb3	    0xc78424c00000	               mov dword [rsp + 0xc0], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bbe	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bca	    0xc78424d80000	               mov dword [rsp + 0xd8], 3	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bd5	    0xc78424e00000	               mov dword [rsp + 0xe0], 8	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000be0	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bec	    0xc78424f80000	               mov dword [rsp + 0xf8], 5	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000bf7	    0xc78424fc0000	               mov dword [rsp + 0xfc], 1	        92	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c02	            0x7724	                            ja 0x4000c28	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c04	      0x488d445230	          lea rax, [rdx + rdx*2 + 0x30] 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c09	            0x31ff	                            xor edi, edi	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c0b	          0x48d1e8	                              shr rax, 1	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c0e	    0x488905000000	            mov qword [0x04000c15], rax 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c15	        0x48c1e005	                              shl rax, 5	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c19	          0x4889c6	                            mov rsi, rax	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c1c	      0xe800000000	                          call 0x4000c21	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c21	    0x488905000000	            mov qword [0x04000c28], rax 	       104	pretty.c	WHILE_3	ELSE_2	FUNCTION_4
0x4000c28	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_94	CALL_3
0x4000c2d	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_94	CALL_3
0x4000c31	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_94	CALL_3
0x4000c34	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_94	CALL_3
0x4000c38	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x4000c3b	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	        53	string3.h	FUNCTION_94	CALL_3
0x4000c42	    0x488990f80000	             mov qword [rax + 0xf8], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x4000c49	          0x4829f8	                            sub rax, rdi	        53	string3.h	FUNCTION_94	CALL_3
0x4000c4c	          0x4829c6	                            sub rsi, rax	        53	string3.h	FUNCTION_94	CALL_3
0x4000c4f	       0x500010000	                          add eax, 0x100	        53	string3.h	FUNCTION_94	CALL_3
0x4000c54	          0xc1e803	                              shr eax, 3	        53	string3.h	FUNCTION_94	CALL_3
0x4000c57	            0x89c1	                            mov ecx, eax	        53	string3.h	FUNCTION_94	CALL_3
0x4000c59	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_94	CALL_3
0x4000c5c	            0x31f6	                            xor esi, esi	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c5e	      0xbf00000000	                              mov edi, 0	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c63	      0xe800000000	                          call 0x4000c68	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c68	      0xe96dfdffff	                           jmp 0x40009da	       108	pretty.c	WHILE_3	ELSE_2	FUNCTION_4	CALL_2
0x4000c6d	      0xe800000000	                          call 0x4000c72	       184	pretty.c	WHILE_3	FUNCTION_7
0x4000c72	          0x4c89e6	                            mov rsi, r12	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c75	      0xbf00000000	                              mov edi, 0	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c7a	            0x31c0	                            xor eax, eax	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
0x4000c7c	      0xe800000000	                          call 0x4000c81	       120	pretty.c	WHILE_3	FUNCTION_5	IF_1	CALL_1
format_commit_one	IF,29:ELSE,4:SWITCH,7:FOR,3:DO,0:WHILE,0:functions,0:CALL,62	1141
0x4001a10	            0x4157	                                push r15	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a12	            0x4156	                                push r14	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a14	            0x4155	                                push r13	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a16	            0x4154	                                push r12	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a18	          0x4989f5	                            mov r13, rsi	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a1b	              0x55	                                push rbp	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a1c	              0x53	                                push rbx	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a1d	          0x4889d5	                            mov rbp, rdx	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a20	          0x4989fc	                            mov r12, rdi	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a23	    0x4881ecc80000	                           sub rsp, 0xc8	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a2a	           0xfb616	                   movzx edx, byte [rsi]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a2d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a36	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a3e	            0x31c0	                            xor eax, eax	      1080	pretty.c	WHILE_3	FUNCTION_39
0x4001a40	          0x8d42c4	                   lea eax, [rdx - 0x3c]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a43	            0x3c3c	                            cmp al, 0x3c	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a45	     0xf87ad010000	                            ja 0x4001bf8	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a4b	           0xfb6c0	                           movzx eax, al	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a4e	    0xff24c5000000	                       jmp qword [rax*8]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a55	           0xf1f00	                         nop dword [rax]	      1089	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001a58	         0xfb64601	               movzx eax, byte [rsi + 1]	      1273	cache.h	FUNCTION_129
0x4001a5c	     0xfbe98000000	                   movsx ebx, byte [rax]	      1273	cache.h	FUNCTION_129
0x4001a63	    0xf7c3f0ffffff	                    test ebx, 0xfffffff0	      1283	cache.h	FUNCTION_130	CALL_2
0x4001a69	            0x7510	                           jne 0x4001a7b	      1283	cache.h	FUNCTION_130	CALL_2
0x4001a6b	         0xfb64602	               movzx eax, byte [rsi + 2]	      1273	cache.h	FUNCTION_129
0x4001a6f	          0xc1e304	                              shl ebx, 4	      1283	cache.h	FUNCTION_130	CALL_2
0x4001a72	     0xfbe80000000	                   movsx eax, byte [rax]	      1283	cache.h	FUNCTION_130	CALL_2
0x4001a79	             0x9c3	                             or ebx, eax	      1283	cache.h	FUNCTION_130	CALL_2
0x4001a7b	            0x85db	                           test ebx, ebx	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a7d	     0xf8817010000	                            js 0x4001b9a	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a83	        0x498b0424	                    mov rax, qword [r12]	      1113	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_4
0x4001a87	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4001a8a	     0xf8590020000	                           jne 0x4001d20	       141	strbuf.h	FUNCTION_57
0x4001a90	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001a95	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001a98	      0xe800000000	                          call 0x4001a9d	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001a9d	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001aa2	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4001aa7	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4001aab	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4001ab0	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_59
0x4001ab3	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4001ab8	      0xbb03000000	                              mov ebx, 3	      1116	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001abd	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x4001ac2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4001ac6	      0xe995000000	                           jmp 0x4001b60	       230	strbuf.h	FUNCTION_59
0x4001acb	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_59
0x4001ad0	          0x80fa3c	                            cmp dl, 0x3c	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001ad3	        0x488d4601	                      lea rax, [rsi + 1]	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001ad7	     0xf8463020000	                            je 0x4001d40	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001add	          0x80fa3e	                            cmp dl, 0x3e	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001ae0	     0xf85b4000000	                           jne 0x4001b9a	       995	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001ae6	         0xfb65601	               movzx edx, byte [rsi + 1]	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001aea	          0x80fa3c	                            cmp dl, 0x3c	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001aed	     0xf846d030000	                            je 0x4001e60	      1000	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001af3	          0x80fa3e	                            cmp dl, 0x3e	      1003	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001af6	    0x41be02000000	                             mov r14d, 2	      1007	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_2
0x4001afc	     0xf8548020000	                           jne 0x4001d4a	      1003	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b02	        0x488d4602	                      lea rax, [rsi + 2]	      1005	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b06	         0xfb65602	               movzx edx, byte [rsi + 2]	      1005	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b0a	    0x41be03000000	                             mov r14d, 3	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b10	      0xe935020000	                           jmp 0x4001d4a	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b15	           0xf1f00	                         nop dword [rax]	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b18	          0x488b07	                    mov rax, qword [rdi]	      1004	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	ELSE_1	IF_2
0x4001b1b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4001b1e	     0xf856c010000	                           jne 0x4001c90	       141	strbuf.h	FUNCTION_57
0x4001b24	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001b29	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001b2c	      0xe800000000	                          call 0x4001b31	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001b31	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001b36	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4001b3b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4001b3f	      0xbb01000000	                              mov ebx, 1	      1109	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1
0x4001b44	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4001b49	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_59
0x4001b4d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4001b52	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x4001b57	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4001b5b	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_59
0x4001b60	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b68	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b71	          0x4889d8	                            mov rax, rbx	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b74	     0xf85750f0000	                           jne 0x4002aef	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b7a	    0x4881c4c80000	                           add rsp, 0xc8	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b81	              0x5b	                                 pop rbx	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b82	              0x5d	                                 pop rbp	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b83	            0x415c	                                 pop r12	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b85	            0x415d	                                 pop r13	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b87	            0x415e	                                 pop r14	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b89	            0x415f	                                 pop r15	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b8b	              0xc3	                                     ret	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b8c	         0xf1f4000	                         nop dword [rax]	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4001b90	        0x807e0128	                cmp byte [rsi + 1], 0x28	      1118	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001b94	     0xf8486000000	                            je 0x4001c20	      1118	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001b9a	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001b9c	            0xebc2	                           jmp 0x4001b60	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001b9e	            0x6690	                                     nop	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001ba0	        0x4c8d7601	                      lea r14, [rsi + 1]	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001ba4	      0xbe00000000	                              mov esi, 0	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001ba9	          0x4c89f7	                            mov rdi, r14	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001bac	      0xe800000000	                          call 0x4001bb1	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001bb1	            0x85c0	                           test eax, eax	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001bb3	     0xf84f7000000	                            je 0x4001cb0	      1091	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_1
0x4001bb9	        0x488b4508	                mov rax, qword [rbp + 8]	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001bbd	      0xbf01000000	                              mov edi, 1	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001bc2	      0xbb07000000	                              mov ebx, 7	      1095	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1
0x4001bc7	          0x8b7068	            mov esi, dword [rax + 0x68] 	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001bca	      0xe800000000	                          call 0x4001bcf	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001bcf	            0x85c0	                           test eax, eax	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001bd1	          0x894578	            mov dword [rbp + 0x78], eax 	      1092	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	CALL_2
0x4001bd4	            0x748a	                            je 0x4001b60	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001bd6	    0x49837c240800	                  cmp qword [r12 + 8], 0	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001bdc	            0x7482	                            je 0x4001b60	      1093	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_1	IF_2
0x4001bde	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001be3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001be8	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001beb	      0xe800000000	                          call 0x4001bf0	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001bf0	      0xe96bffffff	                           jmp 0x4001b60	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001bf5	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001bf8	        0x488b5d00	                    mov rbx, qword [rbp]	      1082	pretty.c	WHILE_3	FUNCTION_39
0x4001bfc	        0x4c8b7550	            mov r14, qword [rbp + 0x50] 	      1083	pretty.c	WHILE_3	FUNCTION_39
0x4001c00	          0xf60301	                      test byte [rbx], 1	      1148	pretty.c	WHILE_3	FUNCTION_39	IF_11
0x4001c03	     0xf8427060000	                            je 0x4002230	      1148	pretty.c	WHILE_3	FUNCTION_39	IF_11
0x4001c09	          0x8d42bc	                   lea eax, [rdx - 0x44]	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c0c	            0x3c30	                            cmp al, 0x30	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c0e	     0xf8774050000	                            ja 0x4002188	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c14	           0xfb6c0	                           movzx eax, al	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c17	    0xff24c5000000	                       jmp qword [rax*8]	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c1e	            0x6690	                                     nop	      1151	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001c20	        0x4c8d7602	                      lea r14, [rsi + 2]	      1121	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c24	      0xbe29000000	                           mov esi, 0x29	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c29	          0x4c89f7	                            mov rdi, r14	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c2c	      0xe800000000	                          call 0x4001c31	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c31	          0x4885c0	                           test rax, rax	      1123	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_6
0x4001c34	          0x4889c3	                            mov rbx, rax	      1122	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c37	     0xf845dffffff	                            je 0x4001b9a	      1123	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_6
0x4001c3d	          0x4939c6	                            cmp r14, rax	      1125	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7
0x4001c40	     0xf82da010000	                            jb 0x4001e20	      1125	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7
0x4001c46	          0x4531db	                          xor r11d, r11d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c49	          0x4531d2	                          xor r10d, r10d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c4c	          0x4531f6	                          xor r14d, r14d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001c4f	        0x4c8b4560	              mov r8, qword [rbp + 0x60]	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001c53	          0x4d39c6	                             cmp r14, r8	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001c56	     0xf8484080000	                            je 0x40024e0	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4001c5c	    0x4c8bbdb80000	            mov r15, qword [rbp + 0xb8] 	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001c63	      0x498b442408	                mov rax, qword [r12 + 8]	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001c68	          0x4939c7	                            cmp r15, rax	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001c6b	     0xf8267070000	                            jb 0x40023d8	       910	pretty.c	WHILE_3	FUNCTION_34	IF_2
0x4001c71	    0x488985b80000	            mov qword [rbp + 0xb8], rax 	       912	pretty.c	WHILE_3	FUNCTION_34
0x4001c78	        0x4c897560	            mov qword [rbp + 0x60], r14 	       913	pretty.c	WHILE_3	FUNCTION_34
0x4001c7c	        0x4c895568	            mov qword [rbp + 0x68], r10 	       914	pretty.c	WHILE_3	FUNCTION_34
0x4001c80	        0x4c895d70	            mov qword [rbp + 0x70], r11 	       915	pretty.c	WHILE_3	FUNCTION_34
0x4001c84	          0x4c29eb	                            sub rbx, r13	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001c87	        0x4883c301	                              add rbx, 1	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001c8b	      0xe9d0feffff	                           jmp 0x4001b60	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4001c90	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_57
0x4001c94	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001c98	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001c9b	     0xf8595feffff	                           jne 0x4001b36	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001ca1	      0xe97efeffff	                           jmp 0x4001b24	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001ca6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001cb0	      0x41807d0128	                cmp byte [r13 + 1], 0x28	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cb5	          0x4c89f3	                            mov rbx, r14	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cb8	      0xb800000000	                              mov eax, 0	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cbd	            0x751a	                           jne 0x4001cd9	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cbf	      0xe9d4050000	                           jmp 0x4002298	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cc4	         0xf1f4000	                         nop dword [rax]	       942	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x4001cc8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4001ccc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4001cd0	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4001cd3	     0xf8587050000	                           jne 0x4002260	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4001cd9	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4001cdc	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4001cde	            0x75e8	                           jne 0x4001cc8	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4001ce0	    0x41be00000000	                             mov r14d, 0	       973	pretty.c	WHILE_3	FUNCTION_36	IF_8
0x4001ce6	        0x488b4508	                mov rax, qword [rbp + 8]	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cea	      0xbf01000000	                              mov edi, 1	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cef	          0x8b7068	            mov esi, dword [rax + 0x68] 	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cf2	      0xe800000000	                          call 0x4001cf7	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cf7	            0x85c0	                           test eax, eax	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cf9	     0xf85b9060000	                           jne 0x40023b8	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001cff	          0x4c29eb	                            sub rbx, r13	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001d02	            0x89d8	                            mov eax, ebx	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001d04	          0x4863db	                         movsxd rbx, ebx	       981	pretty.c	WHILE_3	FUNCTION_36	IF_12	CALL_13
0x4001d07	            0x85c0	                           test eax, eax	      1098	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001d09	     0xf8451feffff	                            je 0x4001b60	      1098	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001d0f	    0xc74578000000	               mov dword [rbp + 0x78], 0	      1099	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1	IF_3
0x4001d16	      0xe945feffff	                           jmp 0x4001b60	      1105	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1
0x4001d1b	       0xf1f440000	                   nop dword [rax + rax]	      1105	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	ELSE_1
0x4001d20	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x4001d25	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d29	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d2c	     0xf8570fdffff	                           jne 0x4001aa2	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d32	      0xe959fdffff	                           jmp 0x4001a90	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d37	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d40	         0xfb65601	               movzx edx, byte [rsi + 1]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4001d44	    0x41be01000000	                             mov r14d, 1	       997	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1
0x4001d4a	          0x4531e4	                          xor r12d, r12d	       993	pretty.c	WHILE_3	FUNCTION_37
0x4001d4d	          0x80fa7c	                            cmp dl, 0x7c	      1014	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4001d50	     0xf84f2040000	                            je 0x4002248	      1014	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4001d56	          0x80fa28	                            cmp dl, 0x28	      1019	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d59	     0xf853bfeffff	                           jne 0x4001b9a	      1019	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d5f	         0xfb65001	               movzx edx, byte [rax + 1]	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d63	        0x4c8d7801	                      lea r15, [rax + 1]	      1020	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001d67	          0x80fa2c	                            cmp dl, 0x2c	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d6a	            0x7714	                            ja 0x4001d80	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d6c	    0x48b901000000	              movabs rcx, 0x120000000001	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d76	        0x480fa3d1	                             bt rcx, rdx	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d7a	     0xf821afeffff	                            jb 0x4001b9a	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d80	        0x488d5002	                      lea rdx, [rax + 2]	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d84	    0x48bf01000000	              movabs rdi, 0x120000000001	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d8e	      0xbe01000000	                              mov esi, 1	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d93	       0xf1f440000	                   nop dword [rax + rax]	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d98	           0xfb60a	                   movzx ecx, byte [rdx]	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d9b	          0x4889f8	                            mov rax, rdi	       961	string2.h	FUNCTION_140	WHILE_1
0x4001d9e	          0x4889d3	                            mov rbx, rdx	       961	string2.h	FUNCTION_140	WHILE_1
0x4001da1	        0x488d5201	                      lea rdx, [rdx + 1]	       961	string2.h	FUNCTION_140	WHILE_1
0x4001da5	          0x48d3e8	                             shr rax, cl	       961	string2.h	FUNCTION_140	WHILE_1
0x4001da8	          0x83e001	                              and eax, 1	       961	string2.h	FUNCTION_140	WHILE_1
0x4001dab	        0x4883f001	                              xor rax, 1	       961	string2.h	FUNCTION_140	WHILE_1
0x4001daf	          0x80f92c	                            cmp cl, 0x2c	       961	string2.h	FUNCTION_140	WHILE_1
0x4001db2	           0xf47c6	                          cmova eax, esi	       961	string2.h	FUNCTION_140	WHILE_1
0x4001db5	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_140	WHILE_1
0x4001db7	            0x75df	                           jne 0x4001d98	       961	string2.h	FUNCTION_140	WHILE_1
0x4001db9	          0x4939df	                            cmp r15, rbx	      1024	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_5
0x4001dbc	     0xf84d8fdffff	                            je 0x4001b9a	      1024	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_5
0x4001dc2	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001dc7	      0xba0a000000	                            mov edx, 0xa	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001dcc	          0x4c89ff	                            mov rdi, r15	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001dcf	      0xe800000000	                          call 0x4001dd4	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001dd4	      0x4c397c2440	            cmp qword [rsp + 0x40], r15 	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001dd9	          0x4889c2	                            mov rdx, rax	      1026	pretty.c	WHILE_3	FUNCTION_37	IF_4	CALL_1
0x4001ddc	     0xf84b8fdffff	                            je 0x4001b9a	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001de2	            0x85c0	                           test eax, eax	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001de4	     0xf84b0fdffff	                            je 0x4001b9a	      1027	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_6
0x4001dea	            0x85c0	                           test eax, eax	      1029	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7
0x4001dec	     0xf88bc090000	                            js 0x40027ae	      1029	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7
0x4001df2	          0x4585e4	                         test r12d, r12d	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001df5	     0xf85d1090000	                           jne 0x40027cc	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001dfb	          0x89557c	            mov dword [rbp + 0x7c], edx 	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001dfe	        0x44897548	           mov dword [rbp + 0x48], r14d 	      1036	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x4001e02	          0x803b2c	                    cmp byte [rbx], 0x2c	      1038	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4001e05	     0xf84f00a0000	                            je 0x40028fb	      1038	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4001e0b	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      1052	pretty.c	WHILE_3	FUNCTION_37	IF_4	ELSE_5	ELSE_6
0x4001e12	      0xe96dfeffff	                           jmp 0x4001c84	      1052	pretty.c	WHILE_3	FUNCTION_37	IF_4	ELSE_5	ELSE_6
0x4001e17	    0x660f1f840000	                    nop word [rax + rax]	      1052	pretty.c	WHILE_3	FUNCTION_37	IF_4	ELSE_5	ELSE_6
0x4001e20	      0x488d742438	                   lea rsi, [rsp + 0x38]	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001e25	      0xba0a000000	                            mov edx, 0xa	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001e2a	          0x4c89f7	                            mov rdi, r14	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001e2d	      0xe800000000	                          call 0x4001e32	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001e32	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001e37	          0x4989c6	                            mov r14, rax	      1126	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	CALL_8
0x4001e3a	          0x4531db	                          xor r11d, r11d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001e3d	          0x4531d2	                          xor r10d, r10d	      1119	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5
0x4001e40	           0xfb602	                   movzx eax, byte [rdx]	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001e43	            0x3c2c	                            cmp al, 0x2c	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001e45	     0xf8451070000	                            je 0x400259c	      1127	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8
0x4001e4b	            0x3c29	                            cmp al, 0x29	      1134	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_10
0x4001e4d	     0xf84fcfdffff	                            je 0x4001c4f	      1134	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_10
0x4001e53	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001e55	      0xe906fdffff	                           jmp 0x4001b60	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001e5a	    0x660f1f440000	                    nop word [rax + rax]	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4001e60	        0x488d4602	                      lea rax, [rsi + 2]	      1002	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e64	         0xfb65602	               movzx edx, byte [rsi + 2]	      1002	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e68	    0x41be04000000	                             mov r14d, 4	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e6e	      0xe9d7feffff	                           jmp 0x4001d4a	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e73	       0xf1f440000	                   nop dword [rax + rax]	      1001	pretty.c	WHILE_3	FUNCTION_37	SWITCH_1	IF_1
0x4001e78	        0x488b4508	                mov rax, qword [rbp + 8]	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e7c	          0x4889df	                            mov rdi, rbx	      1168	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_29
0x4001e7f	      0xbb01000000	                              mov ebx, 1	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001e84	          0x8b6804	                mov ebp, dword [rax + 4]	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e87	      0xe800000000	                          call 0x4001e8c	      1168	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_29
0x4001e8c	          0x4c89e7	                            mov rdi, r12	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e8f	          0x4889c6	                            mov rsi, rax	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e92	            0x89ea	                            mov edx, ebp	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e94	      0xe800000000	                          call 0x4001e99	      1167	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_28
0x4001e99	      0xe9c2fcffff	                           jmp 0x4001b60	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001e9e	            0x6690	                                     nop	      1170	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ea0	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001ea3	      0xbe06000000	                              mov esi, 6	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001ea8	      0xe800000000	                          call 0x4001ead	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001ead	          0x4989c5	                            mov r13, rax	      1153	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_15
0x4001eb0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001eb3	      0xe800000000	                          call 0x4001eb8	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001eb8	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ebb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ebe	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ec1	      0xe800000000	                          call 0x4001ec6	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ec6	        0x488d7b04	                      lea rdi, [rbx + 4]	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001eca	      0xe800000000	                          call 0x4001ecf	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001ecf	          0x4889c3	                            mov rbx, rax	      1154	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_17
0x4001ed2	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ed5	      0xe800000000	                          call 0x4001eda	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001eda	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001edd	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ee0	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ee3	      0xe800000000	                          call 0x4001ee8	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ee8	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001eeb	            0x31f6	                            xor esi, esi	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001eed	      0xe800000000	                          call 0x4001ef2	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001ef2	          0x4889c3	                            mov rbx, rax	      1161	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_24
0x4001ef5	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001ef8	      0xe800000000	                          call 0x4001efd	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001efd	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001f00	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001f03	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001f06	      0xe800000000	                          call 0x4001f0b	       279	strbuf.h	FUNCTION_60	CALL_2
0x4001f0b	      0xbb01000000	                              mov ebx, 1	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f10	      0xe94bfcffff	                           jmp 0x4001b60	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f15	           0xf1f00	                         nop dword [rax]	      1162	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001f18	            0x31ff	                            xor edi, edi	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001f1a	      0xbe01000000	                              mov esi, 1	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001f1f	      0xe800000000	                          call 0x4001f24	      1194	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_39
0x4001f24	          0x8b5578	            mov edx, dword [rbp + 0x78] 	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f27	    0x41b900000000	                              mov r9d, 0	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f2d	    0x41b800000000	                              mov r8d, 0	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f33	          0x4c89c9	                             mov rcx, r9	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f36	          0x4889de	                            mov rsi, rbx	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f39	          0x4c89e7	                            mov rdi, r12	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f3c	      0xe800000000	                          call 0x4001f41	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f41	            0xebc8	                           jmp 0x4001f0b	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f43	       0xf1f440000	                   nop dword [rax + rax]	      1195	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_40
0x4001f48	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f4c	          0x4d85ed	                           test r13, r13	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f4f	            0x74ba	                            je 0x4001f0b	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f51	     0xf1f80000000	                         nop dword [rax]	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f58	        0x488b4508	                mov rax, qword [rbp + 8]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f5c	          0x4c89e7	                            mov rdi, r12	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f5f	          0x8b5004	                mov edx, dword [rax + 4]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f62	        0x498b4500	                    mov rax, qword [r13]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f66	        0x488d7004	                      lea rsi, [rax + 4]	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f6a	      0xe800000000	                          call 0x4001f6f	      1182	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	CALL_34
0x4001f6f	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f73	          0x4d85ed	                           test r13, r13	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f76	            0x7493	                            je 0x4001f0b	      1179	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2
0x4001f78	        0x4c396b30	            cmp qword [rbx + 0x30], r13 	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f7c	            0x74da	                            je 0x4001f58	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f7e	        0x498b0424	                    mov rax, qword [r12]	      1180	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_2	IF_13
0x4001f82	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4001f85	     0xf8585020000	                           jne 0x4002210	       141	strbuf.h	FUNCTION_57
0x4001f8b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001f90	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001f93	      0xe800000000	                          call 0x4001f98	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001f98	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4001f9d	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4001fa2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4001fa6	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4001fab	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_59
0x4001faf	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4001fb4	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x4001fb9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4001fbd	            0xeb99	                           jmp 0x4001f58	       230	strbuf.h	FUNCTION_59
0x4001fbf	              0x90	                                     nop	       230	strbuf.h	FUNCTION_59
0x4001fc0	          0x4889de	                            mov rsi, rbx	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001fc3	            0x31ff	                            xor edi, edi	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001fc5	      0xe800000000	                          call 0x4001fca	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001fca	      0xe923ffffff	                           jmp 0x4001ef2	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001fcf	              0x90	                                     nop	      1187	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_36
0x4001fd0	      0xbe01000000	                              mov esi, 1	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001fd5	            0x31ff	                            xor edi, edi	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      1190	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_37
0x4001fdc	          0x8b5578	            mov edx, dword [rbp + 0x78] 	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001fdf	          0x4889de	                            mov rsi, rbx	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001fe2	    0x41b900000000	                              mov r9d, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001fe8	    0x41b800000000	                              mov r8d, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001fee	      0xb900000000	                              mov ecx, 0	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001ff3	          0x4c89e7	                            mov rdi, r12	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4001ff6	      0xbb01000000	                              mov ebx, 1	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4001ffb	      0xe800000000	                          call 0x4002000	      1191	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_38
0x4002000	      0xe95bfbffff	                           jmp 0x4001b60	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4002005	           0xf1f00	                         nop dword [rax]	      1192	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2
0x4002008	          0x4889df	                            mov rdi, rbx	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x400200b	      0xe800000000	                          call 0x4002010	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4002010	          0x4889c7	                            mov rdi, rax	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4002013	      0xe800000000	                          call 0x4002018	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4002018	      0xe9d5feffff	                           jmp 0x4001ef2	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x400201d	           0xf1f00	                         nop dword [rax]	      1164	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_27
0x4002020	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4002024	          0x4885ed	                           test rbp, rbp	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4002027	     0xf84defeffff	                            je 0x4001f0b	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x400202d	           0xf1f00	                         nop dword [rax]	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4002030	        0x488b4500	                    mov rax, qword [rbp]	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4002034	        0x488d7804	                      lea rdi, [rax + 4]	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4002038	      0xe800000000	                          call 0x400203d	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x400203d	          0x4989c5	                            mov r13, rax	      1175	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	CALL_32
0x4002040	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002043	      0xe800000000	                          call 0x4002048	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002048	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_60	CALL_2
0x400204b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x400204e	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002051	      0xe800000000	                          call 0x4002056	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002056	        0x488b6d08	                mov rbp, qword [rbp + 8]	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x400205a	          0x4885ed	                           test rbp, rbp	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x400205d	     0xf84a8feffff	                            je 0x4001f0b	      1172	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1
0x4002063	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x4002067	            0x74c7	                            je 0x4002030	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x4002069	        0x498b0424	                    mov rax, qword [r12]	      1173	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	FOR_1	IF_12
0x400206d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4002070	     0xf857a010000	                           jne 0x40021f0	       141	strbuf.h	FUNCTION_57
0x4002076	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x400207b	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_59	CALL_2
0x400207e	      0xe800000000	                          call 0x4002083	       228	strbuf.h	FUNCTION_59	CALL_2
0x4002083	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4002088	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x400208d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4002091	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4002096	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_59
0x400209a	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x400209f	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_59
0x40020a4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x40020a8	            0xeb86	                           jmp 0x4002030	       230	strbuf.h	FUNCTION_59
0x40020aa	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_59
0x40020b0	        0x488b4508	                mov rax, qword [rbp + 8]	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x40020b4	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x40020b8	          0x4885db	                           test rbx, rbx	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x40020bb	     0xf8534feffff	                           jne 0x4001ef5	      1223	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	IF_16
0x40020c1	            0x31db	                            xor ebx, ebx	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40020c3	      0xe998faffff	                           jmp 0x4001b60	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40020c8	     0xf1f84000000	                   nop dword [rax + rax]	      1260	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x40020d0	          0x8b7d78	            mov edi, dword [rbp + 0x78] 	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x40020d3	      0xbe06000000	                              mov esi, 6	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x40020d8	      0xe800000000	                          call 0x40020dd	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x40020dd	          0x4989c5	                            mov r13, rax	      1158	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_21
0x40020e0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020e3	      0xe800000000	                          call 0x40020e8	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020e8	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020eb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020ee	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020f1	      0xe800000000	                          call 0x40020f6	       279	strbuf.h	FUNCTION_60	CALL_2
0x40020f6	        0x488b4508	                mov rax, qword [rbp + 8]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x40020fa	        0x488d7304	                      lea rsi, [rbx + 4]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x40020fe	          0x4c89e7	                            mov rdi, r12	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002101	          0x8b5004	                mov edx, dword [rax + 4]	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002104	      0xe800000000	                          call 0x4002109	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002109	      0xe9dafdffff	                           jmp 0x4001ee8	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x400210e	            0x6690	                                     nop	      1159	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	CALL_22
0x4002110	      0x410fb65d01	               movzx ebx, byte [r13 + 1]	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002115	          0x8d4bbc	                   lea ecx, [rbx - 0x44]	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002118	          0x80f92f	                            cmp cl, 0x2f	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400211b	     0xf8779faffff	                            ja 0x4001b9a	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002121	      0xb801000000	                              mov eax, 1	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002126	    0x48ba02040000	               movabs rdx, 0x40200000402	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002130	          0x48d3e0	                             shl rax, cl	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002133	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002136	     0xf8571070000	                           jne 0x40028ad	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400213c	    0x48ba01000000	                 movabs rdx, 0x100000001	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002146	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002149	     0xf850a050000	                           jne 0x4002659	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400214f	    0x48ba00000000	              movabs rdx, 0x800000000000	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002159	          0x4885d0	                           test rax, rdx	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400215c	     0xf8438faffff	                            je 0x4001b9a	      1198	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002162	        0x488b4508	                mov rax, qword [rbp + 8]	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x4002166	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x400216a	          0x4885f6	                           test rsi, rsi	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x400216d	     0xf841f040000	                            je 0x4002592	      1209	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_15
0x4002173	          0x4c89e7	                            mov rdi, r12	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002176	      0xbb02000000	                              mov ebx, 2	      1211	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x400217b	      0xe800000000	                          call 0x4002180	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002180	      0xe9dbf9ffff	                           jmp 0x4001b60	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002185	           0xf1f00	                         nop dword [rax]	      1210	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_42
0x4002188	          0x80fa47	                            cmp dl, 0x47	      1230	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x400218b	     0xf8464040000	                            je 0x40025f5	      1230	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x4002191	        0xf6451001	               test byte [rbp + 0x10], 1	      1267	pretty.c	WHILE_3	FUNCTION_39	IF_22
0x4002195	     0xf8410050000	                            je 0x40026ab	      1267	pretty.c	WHILE_3	FUNCTION_39	IF_22
0x400219b	          0x80fa61	                            cmp dl, 0x61	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400219e	     0xf84f2060000	                            je 0x4002896	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021a4	     0xf8ee7040000	                           jle 0x4002691	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021aa	          0x80fa63	                            cmp dl, 0x63	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021ad	     0xf84b5060000	                            je 0x4002868	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021b3	          0x80fa65	                            cmp dl, 0x65	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021b6	     0xf8519060000	                           jne 0x40027d5	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021bc	        0x488b6d58	            mov rbp, qword [rbp + 0x58] 	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x40021c0	      0xbb01000000	                              mov ebx, 1	      1282	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x40021c5	          0x4885ed	                           test rbp, rbp	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x40021c8	     0xf8492f9ffff	                            je 0x4001b60	      1280	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	IF_23
0x40021ce	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021d1	      0xe800000000	                          call 0x40021d6	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021d6	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021d9	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021dc	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021df	      0xe800000000	                          call 0x40021e4	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021e4	      0xe977f9ffff	                           jmp 0x4001b60	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021e9	     0xf1f80000000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_60	CALL_2
0x40021f0	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x40021f5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40021f9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x40021fc	     0xf8586feffff	                           jne 0x4002088	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002202	      0xe96ffeffff	                           jmp 0x4002076	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002207	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002210	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_57
0x4002215	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002219	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x400221c	     0xf857bfdffff	                           jne 0x4001f9d	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002222	      0xe964fdffff	                           jmp 0x4001f8b	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002227	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4002230	        0x488d7b04	                      lea rdi, [rbx + 4]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x4002234	      0xe800000000	                          call 0x4002239	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x4002239	      0x410fb65500	                   movzx edx, byte [r13]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x400223e	      0xe9c6f9ffff	                           jmp 0x4001c09	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x4002243	       0xf1f440000	                   nop dword [rax + rax]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x4002248	         0xfb65001	               movzx edx, byte [rax + 1]	      1149	pretty.c	WHILE_3	FUNCTION_39	CALL_13
0x400224c	    0x41bc01000000	                             mov r12d, 1	      1015	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4002252	        0x4883c001	                              add rax, 1	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4002256	      0xe9fbfaffff	                           jmp 0x4001d56	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x400225b	       0xf1f440000	                   nop dword [rax + rax]	      1016	pretty.c	WHILE_3	FUNCTION_37	ELSE_2	IF_3
0x4002260	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002263	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002268	            0xeb17	                           jmp 0x4002281	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400226a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002270	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002274	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002278	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400227b	     0xf85ff000000	                           jne 0x4002380	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002281	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002284	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002286	            0x75e8	                           jne 0x4002270	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002288	    0x41be00000000	                             mov r14d, 0	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x400228e	      0xe953faffff	                           jmp 0x4001ce6	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x4002293	       0xf1f440000	                   nop dword [rax + rax]	       975	pretty.c	WHILE_3	FUNCTION_36	ELSE_3	IF_9
0x4002298	        0x4d8d7d02	                      lea r15, [r13 + 2]	       943	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x400229c	      0xbe29000000	                           mov esi, 0x29	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022a1	          0x4c89ff	                            mov rdi, r15	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022a4	      0xe800000000	                          call 0x40022a9	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022a9	          0x4885c0	                           test rax, rax	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022ac	          0x4889c3	                            mov rbx, rax	       944	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022af	     0xf84e5f8ffff	                            je 0x4001b9a	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022b5	          0x4d89fe	                            mov r14, r15	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022b8	      0xb800000000	                              mov eax, 0	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022bd	            0xeb13	                           jmp 0x40022d2	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022bf	              0x90	                                     nop	       947	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_2
0x40022c0	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40022c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40022c8	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40022cc	     0xf852e020000	                           jne 0x4002500	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40022d2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40022d5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40022d7	            0x75e7	                           jne 0x40022c0	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40022d9	        0x488b4508	                mov rax, qword [rbp + 8]	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022dd	      0xbf01000000	                              mov edi, 1	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022e2	          0x8b7068	            mov esi, dword [rax + 0x68] 	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022e5	      0xe800000000	                          call 0x40022ea	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022ea	            0x85c0	                           test eax, eax	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022ec	            0x7529	                           jne 0x4002317	       951	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_3	IF_4	CALL_2
0x40022ee	          0x4c29eb	                            sub rbx, r13	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022f1	        0x4883c301	                              add rbx, 1	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022f5	            0x89d8	                            mov eax, ebx	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022f7	          0x4863db	                         movsxd rbx, ebx	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022fa	      0xe908faffff	                           jmp 0x4001d07	       964	pretty.c	WHILE_3	FUNCTION_36	IF_1
0x40022ff	        0x488b4508	                mov rax, qword [rbp + 8]	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002303	      0xbf01000000	                              mov edi, 1	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002308	          0x4d89fe	                            mov r14, r15	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x400230b	          0x8b7068	            mov esi, dword [rax + 0x68] 	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x400230e	      0xe800000000	                          call 0x4002313	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002313	            0x85c0	                           test eax, eax	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002315	            0x74d7	                            je 0x40022ee	       957	pretty.c	WHILE_3	FUNCTION_36	IF_1	ELSE_2	IF_6	CALL_4
0x4002317	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x400231c	          0x4889de	                            mov rsi, rbx	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x400231f	          0x4c89f7	                            mov rdi, r14	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x4002322	          0x4c29f6	                            sub rsi, r14	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x4002325	          0x4c89fa	                            mov rdx, r15	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x4002328	      0xe800000000	                          call 0x400232d	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x400232d	            0x85c0	                           test eax, eax	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x400232f	     0xf88b3080000	                            js 0x4002be8	       961	pretty.c	WHILE_3	FUNCTION_36	IF_1	IF_7	CALL_5
0x4002335	          0x4c89fa	                            mov rdx, r15	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002338	            0x8b0a	                    mov ecx, dword [rdx]	       279	strbuf.h	FUNCTION_60	CALL_2
0x400233a	        0x4883c204	                              add rdx, 4	       279	strbuf.h	FUNCTION_60	CALL_2
0x400233e	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002344	            0xf7d1	                                 not ecx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002346	            0x21c8	                            and eax, ecx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002348	      0x2580808080	                     and eax, 0x80808080	       279	strbuf.h	FUNCTION_60	CALL_2
0x400234d	            0x74e9	                            je 0x4002338	       279	strbuf.h	FUNCTION_60	CALL_2
0x400234f	            0x89c1	                            mov ecx, eax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002351	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002354	          0xc1e910	                           shr ecx, 0x10	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002357	      0xa980800000	                        test eax, 0x8080	       279	strbuf.h	FUNCTION_60	CALL_2
0x400235c	           0xf44c1	                          cmove eax, ecx	       279	strbuf.h	FUNCTION_60	CALL_2
0x400235f	        0x488d4a02	                      lea rcx, [rdx + 2]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002363	            0x89c7	                            mov edi, eax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002365	        0x480f44d1	                          cmove rdx, rcx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002369	          0x4000c7	                             add dil, al	       279	strbuf.h	FUNCTION_60	CALL_2
0x400236c	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x400236f	        0x4883da03	                              sbb rdx, 3	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002373	          0x4c29fa	                            sub rdx, r15	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002376	      0xe800000000	                          call 0x400237b	       279	strbuf.h	FUNCTION_60	CALL_2
0x400237b	      0xe96effffff	                           jmp 0x40022ee	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002380	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002383	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002388	            0xeb17	                           jmp 0x40023a1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400238a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002390	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002394	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002398	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400239b	     0xf858d010000	                           jne 0x400252e	       488	git-compat-util.h	FUNCTION_73	DO_1
0x40023a1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40023a4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40023a6	            0x75e8	                           jne 0x4002390	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x40023a8	    0x41be00000000	                             mov r14d, 0	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x40023ae	      0xe933f9ffff	                           jmp 0x4001ce6	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x40023b3	       0xf1f440000	                   nop dword [rax + rax]	       977	pretty.c	WHILE_3	FUNCTION_36	ELSE_4	IF_10
0x40023b8	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023bb	      0xe800000000	                          call 0x40023c0	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023c0	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023c3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023c6	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023c9	      0xe800000000	                          call 0x40023ce	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023ce	      0xe92cf9ffff	                           jmp 0x4001cff	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023d3	       0xf1f440000	                   nop dword [rax + rax]	       279	strbuf.h	FUNCTION_60	CALL_2
0x40023d8	          0x4d85ff	                           test r15, r15	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x40023db	        0x488b4d70	            mov rcx, qword [rbp + 0x70] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40023df	        0x488b4568	            mov rax, qword [rbp + 0x68] 	       911	pretty.c	WHILE_3	FUNCTION_34	CALL_1
0x40023e3	    0x48c744244000	               mov qword [rsp + 0x40], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x40023ec	    0x48c744244800	               mov qword [rsp + 0x48], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x40023f5	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	       892	pretty.c	WHILE_3	FUNCTION_33
0x40023fa	    0x48c744245000	               mov qword [rsp + 0x50], 0	       892	pretty.c	WHILE_3	FUNCTION_33
0x4002403	            0x744a	                            je 0x400244f	       894	pretty.c	WHILE_3	FUNCTION_33	IF_1
0x4002405	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400240a	          0x4c89cf	                             mov rdi, r9	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400240d	          0x4c89fa	                            mov rdx, r15	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002410	      0x4889442428	             mov qword [rsp + 0x28], rax	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002415	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400241a	      0x4c89442418	              mov qword [rsp + 0x18], r8	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400241f	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002424	      0x4c89542408	                mov qword [rsp + 8], r10	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002429	        0x4c890c24	                     mov qword [rsp], r9	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400242d	      0xe800000000	                          call 0x4002432	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002432	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002437	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400243c	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002441	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x4002446	      0x4c8b542408	                mov r10, qword [rsp + 8]	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400244b	        0x4c8b0c24	                     mov r9, qword [rsp]	       895	pretty.c	WHILE_3	FUNCTION_33	CALL_1
0x400244f	          0x4c89fe	                            mov rsi, r15	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4002452	      0x4903742410	             add rsi, qword [r12 + 0x10]	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4002457	            0x89c2	                            mov edx, eax	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4002459	          0x4c89cf	                             mov rdi, r9	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x400245c	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4002461	      0x4c89542408	                mov qword [rsp + 8], r10	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x4002466	        0x4c890c24	                     mov qword [rsp], r9	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x400246a	      0xe800000000	                          call 0x400246f	       896	pretty.c	WHILE_3	FUNCTION_33	CALL_2
0x400246f	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_94	CALL_3
0x4002473	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_94	CALL_3
0x4002478	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_94	CALL_3
0x400247d	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_94	CALL_3
0x4002482	        0x4c8b0c24	                     mov r9, qword [rsp]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x4002486	      0x4889742440	             mov qword [rsp + 0x40], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x400248b	      0x498b742408	                mov rsi, qword [r12 + 8]	        53	string3.h	FUNCTION_94	CALL_3
0x4002490	        0x49890c24	                    mov qword [r12], rcx	        53	string3.h	FUNCTION_94	CALL_3
0x4002494	      0x4989542408	                mov qword [r12 + 8], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x4002499	          0x4c89cf	                             mov rdi, r9	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x400249c	      0x4889442470	             mov qword [rsp + 0x70], rax	        53	string3.h	FUNCTION_94	CALL_3
0x40024a1	      0x48894c2460	             mov qword [rsp + 0x60], rcx	        53	string3.h	FUNCTION_94	CALL_3
0x40024a6	      0x4889742448	             mov qword [rsp + 0x48], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x40024ab	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_94	CALL_3
0x40024b0	      0x4989442410	             mov qword [r12 + 0x10], rax	        53	string3.h	FUNCTION_94	CALL_3
0x40024b5	      0x4889542468	             mov qword [rsp + 0x68], rdx	        53	string3.h	FUNCTION_94	CALL_3
0x40024ba	      0x4889742450	             mov qword [rsp + 0x50], rsi	        53	string3.h	FUNCTION_94	CALL_3
0x40024bf	      0xe800000000	                          call 0x40024c4	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024c4	      0x498b442408	                mov rax, qword [r12 + 8]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024c9	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024ce	      0x4c8b542408	                mov r10, qword [rsp + 8]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024d3	      0xe999f7ffff	                           jmp 0x4001c71	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024d8	     0xf1f84000000	                   nop dword [rax + rax]	       899	pretty.c	WHILE_3	FUNCTION_33	CALL_4
0x40024e0	        0x4c3b5568	            cmp r10, qword [rbp + 0x68] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40024e4	     0xf8572f7ffff	                           jne 0x4001c5c	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40024ea	        0x4c3b5d70	            cmp r11, qword [rbp + 0x70] 	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40024ee	     0xf8568f7ffff	                           jne 0x4001c5c	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40024f4	      0xe98bf7ffff	                           jmp 0x4001c84	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x40024f9	     0xf1f80000000	                         nop dword [rax]	       907	pretty.c	WHILE_3	FUNCTION_34	IF_1
0x4002500	          0x4d89fe	                            mov r14, r15	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002503	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002508	            0xeb18	                           jmp 0x4002522	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400250a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002510	        0x4983c601	                              add r14, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002514	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002518	        0x413a56ff	                  cmp dl, byte [r14 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400251c	     0xf85ddfdffff	                           jne 0x40022ff	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002522	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002525	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002527	            0x75e7	                           jne 0x4002510	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002529	      0xe9e9fdffff	                           jmp 0x4002317	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400252e	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002533	          0x4c89f3	                            mov rbx, r14	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002536	            0xeb19	                           jmp 0x4002551	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002538	     0xf1f84000000	                   nop dword [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002540	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002544	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002548	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400254b	     0xf8549f6ffff	                           jne 0x4001b9a	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002551	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002554	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002556	            0x75e8	                           jne 0x4002540	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002558	    0x41be00000000	                             mov r14d, 0	       979	pretty.c	WHILE_3	FUNCTION_36	ELSE_5	IF_11
0x400255e	      0xe983f7ffff	                           jmp 0x4001ce6	       979	pretty.c	WHILE_3	FUNCTION_36	ELSE_5	IF_11
0x4002563	            0x3c3f	                            cmp al, 0x3f	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002565	     0xf852ff6ffff	                           jne 0x4001b9a	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x400256b	         0xfb64530	           movzx eax, byte [rbp + 0x30] 	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400256f	          0x8d48be	                   lea ecx, [rax - 0x42]	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002572	          0x80f917	                            cmp cl, 0x17	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002575	            0x771b	                            ja 0x4002592	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002577	      0xba01000000	                              mov edx, 1	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400257c	          0x48d3e2	                             shl rdx, cl	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x400257f	    0xf7c22910c900	                      test edx, 0xc91029	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002585	            0x740b	                            je 0x4002592	      1239	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5
0x4002587	           0xfbef0	                           movsx esi, al	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x400258a	          0x4c89e7	                            mov rdi, r12	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x400258d	      0xe86eddffff	                   call sym.strbuf_addch	      1248	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	SWITCH_5	CALL_47
0x4002592	      0xbb02000000	                              mov ebx, 2	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x4002597	      0xe9c4f5ffff	                           jmp 0x4001b60	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x400259c	        0x488d7a01	                      lea rdi, [rdx + 1]	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025a0	      0x488d742438	                   lea rsi, [rsp + 0x38]	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025a5	      0xba0a000000	                            mov edx, 0xa	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025aa	        0x4c891c24	                    mov qword [rsp], r11	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025ae	      0xe800000000	                          call 0x40025b3	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025b3	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x40025b8	          0x4989c2	                            mov r10, rax	      1128	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	CALL_9
0x40025bb	        0x4c8b1c24	                    mov r11, qword [rsp]	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x40025bf	           0xfb602	                   movzx eax, byte [rdx]	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x40025c2	            0x3c2c	                            cmp al, 0x2c	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x40025c4	     0xf8581f8ffff	                           jne 0x4001e4b	      1129	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9
0x40025ca	        0x488d7a01	                      lea rdi, [rdx + 1]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025ce	      0x488d742438	                   lea rsi, [rsp + 0x38]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025d3	      0xba0a000000	                            mov edx, 0xa	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025d8	        0x4c891424	                    mov qword [rsp], r10	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025dc	      0xe800000000	                          call 0x40025e1	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025e1	          0x4989c3	                            mov r11, rax	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025e4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025e9	        0x4c8b1424	                    mov r10, qword [rsp]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025ed	           0xfb600	                   movzx eax, byte [rax]	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025f0	      0xe956f8ffff	                           jmp 0x4001e4b	      1130	pretty.c	WHILE_3	FUNCTION_39	SWITCH_1	IF_5	IF_7	IF_8	IF_9	CALL_10
0x40025f5	        0x807d3000	                cmp byte [rbp + 0x30], 0	      1231	pretty.c	WHILE_3	FUNCTION_39	IF_17	IF_18
0x40025f9	     0xf8443030000	                            je 0x4002942	      1231	pretty.c	WHILE_3	FUNCTION_39	IF_17	IF_18
0x40025ff	      0x410fb64501	               movzx eax, byte [r13 + 1]	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002604	            0x3c47	                            cmp al, 0x47	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002606	     0xf8448030000	                            je 0x4002954	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x400260c	     0xf8e51ffffff	                           jle 0x4002563	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002612	            0x3c4b	                            cmp al, 0x4b	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002614	     0xf844c030000	                            je 0x4002966	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x400261a	            0x3c53	                            cmp al, 0x53	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x400261c	     0xf8578f5ffff	                           jne 0x4001b9a	      1233	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4
0x4002622	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x4002626	          0x4885f6	                           test rsi, rsi	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x4002629	     0xf8463ffffff	                            je 0x4002592	      1252	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_20
0x400262f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002632	            0x31c0	                            xor eax, eax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002634	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_60	CALL_2
0x400263b	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_60	CALL_2
0x400263d	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002640	      0xbb02000000	                              mov ebx, 2	      1262	pretty.c	WHILE_3	FUNCTION_39	IF_17
0x4002645	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002648	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x400264b	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_60	CALL_2
0x400264f	      0xe800000000	                          call 0x4002654	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002654	      0xe907f5ffff	                           jmp 0x4001b60	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002659	        0x488b4508	                mov rax, qword [rbp + 8]	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x400265d	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x4002661	          0x4885f6	                           test rsi, rsi	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x4002664	     0xf8428ffffff	                            je 0x4002592	      1201	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x400266a	         0xfb64830	           movzx ecx, byte [rax + 0x30] 	      1205	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14
0x400266e	          0x4531c0	                            xor r8d, r8d	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002671	        0x488d5018	                   lea rdx, [rax + 0x18]	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002675	          0x80fb64	                            cmp bl, 0x64	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002678	          0x4c89e7	                            mov rdi, r12	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400267b	      0xbb02000000	                              mov ebx, 2	      1207	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x4002680	        0x410f94c0	                                sete r8b	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002684	          0x83e101	                              and ecx, 1	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002687	      0xe800000000	                          call 0x400268c	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x400268c	      0xe9cff4ffff	                           jmp 0x4001b60	      1202	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	IF_14	CALL_41
0x4002691	          0x80fa42	                            cmp dl, 0x42	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x4002694	     0xf853b010000	                           jne 0x40027d5	      1270	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6
0x400269a	    0x488b85a00000	            mov rax, qword [rbp + 0xa0] 	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x40026a1	      0x498d5c0601	                lea rbx, [r14 + rax + 1]	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x40026a6	      0xe94af8ffff	                           jmp 0x4001ef5	      1285	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_54
0x40026ab	        0x4c8b4d50	              mov r9, qword [rbp + 0x50]	       792	pretty.c	WHILE_3	FUNCTION_28
0x40026af	          0x4531db	                          xor r11d, r11d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026b2	          0x4531d2	                          xor r10d, r10d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026b5	        0x410fb601	                    movzx eax, byte [r9]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026b9	          0x4d89c8	                              mov r8, r9	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026bc	            0x84c0	                             test al, al	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026be	     0xf8490000000	                            je 0x4002754	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026c4	         0xf1f4000	                         nop dword [rax]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x40026c8	            0x3c0a	                             cmp al, 0xa	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026ca	     0xf8484000000	                            je 0x4002754	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026d0	          0x4963c2	                        movsxd rax, r10d	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026d3	          0x4489d7	                           mov edi, r10d	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026d6	      0x498d4c0101	                 lea rcx, [r9 + rax + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026db	            0xeb0c	                           jmp 0x40026e9	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026dd	           0xf1f00	                         nop dword [rax]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026e0	            0x3c0a	                             cmp al, 0xa	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026e2	            0x7413	                            je 0x40026f7	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026e4	          0x4889f1	                            mov rcx, rsi	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026e7	            0x89d7	                            mov edi, edx	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026e9	           0xfb601	                   movzx eax, byte [rcx]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026ec	          0x8d5701	                      lea edx, [rdi + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026ef	        0x488d7101	                      lea rsi, [rcx + 1]	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026f3	            0x84c0	                             test al, al	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026f5	            0x75e9	                           jne 0x40026e0	       798	pretty.c	WHILE_3	FUNCTION_28	FOR_1	FOR_2
0x40026f7	          0x4139d2	                           cmp r10d, edx	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40026fa	            0x7458	                            je 0x4002754	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40026fc	          0x4c89c0	                             mov rax, r8	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x40026ff	      0xba00000000	                              mov edx, 0	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x4002704	            0xeb18	                           jmp 0x400271e	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x4002706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       801	pretty.c	WHILE_3	FUNCTION_28	FOR_1	IF_1
0x4002710	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002714	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002718	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400271c	            0x7552	                           jne 0x4002770	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400271e	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002721	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002724	            0x75ea	                           jne 0x4002710	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002726	          0x4889c2	                            mov rdx, rax	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x4002729	          0x4829c1	                            sub rcx, rax	       805	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x400272c	          0x4c29ca	                             sub rdx, r9	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x400272f	    0x48898d880000	            mov qword [rbp + 0x88], rcx 	       805	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x4002736	    0x488995800000	            mov qword [rbp + 0x80], rdx 	       804	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_1	IF_2
0x400273d	        0x448d5702	                     lea r10d, [rdi + 2]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002741	          0x4d63da	                        movsxd r11, r10d	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002744	        0x4f8d0419	                      lea r8, [r9 + r11]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002748	        0x410fb600	                    movzx eax, byte [r8]	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x400274c	            0x84c0	                             test al, al	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x400274e	     0xf8574ffffff	                           jne 0x40026c8	       795	pretty.c	WHILE_3	FUNCTION_28	FOR_1
0x4002754	        0x804d1001	                 or byte [rbp + 0x10], 1	       813	pretty.c	WHILE_3	FUNCTION_28
0x4002758	    0x4c899da00000	            mov qword [rbp + 0xa0], r11 	       812	pretty.c	WHILE_3	FUNCTION_28
0x400275f	      0x410fb65500	                   movzx edx, byte [r13]	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002764	      0xe932faffff	                           jmp 0x400219b	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002769	     0xf1f80000000	                         nop dword [rax]	       812	pretty.c	WHILE_3	FUNCTION_28
0x4002770	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002775	            0xeb17	                           jmp 0x400278e	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002777	    0x660f1f840000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002780	        0x4983c001	                               add r8, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002784	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002788	        0x413a50ff	                   cmp dl, byte [r8 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400278c	            0x75af	                           jne 0x400273d	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400278e	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002791	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002793	            0x75eb	                           jne 0x4002780	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002795	          0x4c89c0	                             mov rax, r8	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x4002798	          0x4c29c1	                             sub rcx, r8	       808	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400279b	          0x4c29c8	                             sub rax, r9	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x400279e	    0x48898d980000	            mov qword [rbp + 0x98], rcx 	       808	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x40027a5	    0x488985900000	            mov qword [rbp + 0x90], rax 	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x40027ac	            0xeb8f	                           jmp 0x400273d	       807	pretty.c	WHILE_3	FUNCTION_28	FOR_1	ELSE_2	IF_3
0x40027ae	          0x4585e4	                         test r12d, r12d	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x40027b1	     0xf84e3f3ffff	                            je 0x4001b9a	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x40027b7	        0x48890424	                    mov qword [rsp], rax	      1030	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_8
0x40027bb	      0xe800000000	                          call 0x40027c0	      1031	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	CALL_2
0x40027c0	        0x488b1424	                    mov rdx, qword [rsp]	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x40027c4	             0x1d0	                            add eax, edx	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x40027c6	     0xf88cef3ffff	                            js 0x4001b9a	      1032	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_7	IF_9
0x40027cc	            0xf7d8	                                 neg eax	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x40027ce	            0x89c2	                            mov edx, eax	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x40027d0	      0xe926f6ffff	                           jmp 0x4001dfb	      1035	pretty.c	WHILE_3	FUNCTION_37	IF_4
0x40027d5	        0xf6451002	               test byte [rbp + 0x10], 2	      1290	pretty.c	WHILE_3	FUNCTION_39	IF_24
0x40027d9	     0xf8499010000	                            je 0x4002978	      1290	pretty.c	WHILE_3	FUNCTION_39	IF_24
0x40027df	          0x80fa66	                            cmp dl, 0x66	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027e2	     0xf84fd010000	                            je 0x40029e5	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027e8	          0x80fa73	                            cmp dl, 0x73	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027eb	     0xf84d3010000	                            je 0x40029c4	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027f1	          0x80fa62	                            cmp dl, 0x62	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027f4	          0x4d89ef	                            mov r15, r13	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027f7	      0xb800000000	                              mov eax, 0	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027fc	            0x751c	                           jne 0x400281a	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40027fe	      0xe9bb020000	                           jmp 0x4002abe	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002803	       0xf1f440000	                   nop dword [rax + rax]	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002808	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400280c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002810	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002814	     0xf8580f3ffff	                           jne 0x4001b9a	       488	git-compat-util.h	FUNCTION_73	DO_1
0x400281a	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400281d	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x400281f	            0x75e7	                           jne 0x4002808	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002821	            0x31c0	                            xor eax, eax	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x4002823	        0x41803f3a	                    cmp byte [r15], 0x3a	      1307	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002827	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x400282c	      0xb905000000	                              mov ecx, 5	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x4002831	          0x4c89cf	                             mov rdi, r9	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x4002834	            0xf3ab	              rep stosd dword [rdi], eax	      1306	pretty.c	WHILE_3	FUNCTION_39	IF_25
0x4002836	     0xf84ce020000	                            je 0x4002b0a	      1307	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x400283c	            0x31db	                            xor ebx, ebx	      1324	pretty.c	WHILE_3	FUNCTION_39
0x400283e	        0x41803f29	                    cmp byte [r15], 0x29	      1318	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4002842	     0xf8518f3ffff	                           jne 0x4001b60	      1318	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x4002848	          0x4c89f6	                            mov rsi, r14	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x400284b	    0x4803b5a80000	             add rsi, qword [rbp + 0xa8]	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002852	          0x4c89ca	                             mov rdx, r9	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002855	          0x4c89e7	                            mov rdi, r12	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002858	          0x4c89fb	                            mov rbx, r15	      1320	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29
0x400285b	      0xe800000000	                          call 0x4002860	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002860	      0xe91ff4ffff	                           jmp 0x4001c84	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002865	           0xf1f00	                         nop dword [rax]	      1319	pretty.c	WHILE_3	FUNCTION_39	IF_25	ELSE_4	IF_29	CALL_62
0x4002868	          0x4c89f2	                            mov rdx, r14	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400286b	    0x480395900000	             add rdx, qword [rbp + 0x90]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002872	        0x488b4508	                mov rax, qword [rbp + 8]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002876	    0x488b8d980000	            mov rcx, qword [rbp + 0x98] 	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400287d	      0x410fbe7501	               movsx esi, byte [r13 + 1]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002882	        0x4c8d4018	                    lea r8, [rax + 0x18]	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002886	          0x4c89e7	                            mov rdi, r12	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002889	      0xe8c2dcffff	             call sym.format_person_part	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x400288e	          0x4889c3	                            mov rbx, rax	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002891	      0xe9caf2ffff	                           jmp 0x4001b60	      1276	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_52
0x4002896	          0x4c89f2	                            mov rdx, r14	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x4002899	        0x488b4508	                mov rax, qword [rbp + 8]	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x400289d	    0x488b8d880000	            mov rcx, qword [rbp + 0x88] 	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x40028a4	    0x480395800000	             add rdx, qword [rbp + 0x80]	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x40028ab	            0xebd0	                           jmp 0x400287d	      1272	pretty.c	WHILE_3	FUNCTION_39	SWITCH_6	CALL_51
0x40028ad	        0x488b6d08	                mov rbp, qword [rbp + 8]	      1219	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3
0x40028b1	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      1216	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_43
0x40028b5	          0x4885ff	                           test rdi, rdi	       925	pretty.c	WHILE_3	FUNCTION_35	IF_1
0x40028b8	     0xf84d4fcffff	                            je 0x4002592	       925	pretty.c	WHILE_3	FUNCTION_35	IF_1
0x40028be	      0xe800000000	                          call 0x40028c3	       928	pretty.c	WHILE_3	FUNCTION_35	CALL_1
0x40028c3	          0x4885c0	                           test rax, rax	       929	pretty.c	WHILE_3	FUNCTION_35	IF_2
0x40028c6	          0x4889c2	                            mov rdx, rax	       928	pretty.c	WHILE_3	FUNCTION_35	CALL_1
0x40028c9	     0xf84c3fcffff	                            je 0x4002592	       929	pretty.c	WHILE_3	FUNCTION_35	IF_2
0x40028cf	          0x4889d7	                            mov rdi, rdx	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028d2	            0x31c0	                            xor eax, eax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028d4	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028d8	            0xf2ae	              repne scasb al, byte [rdi]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028da	        0x4c8d4518	                    lea r8, [rbp + 0x18]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028de	           0xfbef3	                           movsx esi, bl	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028e1	          0x4c89e7	                            mov rdi, r12	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028e4	          0x4889c8	                            mov rax, rcx	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028e7	          0x48f7d0	                                 not rax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028ea	        0x488d48ff	                      lea rcx, [rax - 1]	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028ee	      0xe85ddcffff	             call sym.format_person_part	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028f3	          0x4863d8	                         movsxd rbx, eax	       932	pretty.c	WHILE_3	FUNCTION_35	CALL_3
0x40028f6	      0xe965f2ffff	                           jmp 0x4001b60	      1216	pretty.c	WHILE_3	FUNCTION_39	SWITCH_2	SWITCH_3	CALL_43
0x40028fb	        0x4c8d6301	                      lea r12, [rbx + 1]	      1039	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x40028ff	      0xbe29000000	                           mov esi, 0x29	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4002904	          0x4c89e7	                            mov rdi, r12	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4002907	      0xe800000000	                          call 0x400290c	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x400290c	          0x4885c0	                           test rax, rax	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x400290f	          0x4889c3	                            mov rbx, rax	      1040	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10
0x4002912	     0xf8482f2ffff	                            je 0x4001b9a	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x4002918	          0x4939c4	                            cmp r12, rax	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x400291b	     0xf8479f2ffff	                            je 0x4001b9a	      1041	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_11
0x4002921	      0xbe00000000	                              mov esi, 0	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x4002926	          0x4c89e7	                            mov rdi, r12	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x4002929	      0xe800000000	                          call 0x400292e	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x400292e	            0x85c0	                           test eax, eax	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x4002930	     0xf8495020000	                            je 0x4002bcb	      1043	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12	CALL_3
0x4002936	    0xc7454c030000	               mov dword [rbp + 0x4c], 3	      1044	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12
0x400293d	      0xe942f3ffff	                           jmp 0x4001c84	      1044	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	IF_12
0x4002942	        0x488b7d00	                    mov rdi, qword [rbp]	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x4002946	        0x488d7518	                   lea rsi, [rbp + 0x18]	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x400294a	      0xe800000000	                          call 0x400294f	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x400294f	      0xe9abfcffff	                           jmp 0x40025ff	      1232	pretty.c	WHILE_3	FUNCTION_39	IF_17	CALL_45
0x4002954	        0x488b7520	            mov rsi, qword [rbp + 0x20] 	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x4002958	          0x4885f6	                           test rsi, rsi	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x400295b	     0xf85cefcffff	                           jne 0x400262f	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x4002961	      0xe92cfcffff	                           jmp 0x4002592	      1235	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_19
0x4002966	        0x488b7540	            mov rsi, qword [rbp + 0x40] 	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x400296a	          0x4885f6	                           test rsi, rsi	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x400296d	     0xf85bcfcffff	                           jne 0x400262f	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x4002973	      0xe91afcffff	                           jmp 0x4002592	      1256	pretty.c	WHILE_3	FUNCTION_39	IF_17	SWITCH_4	IF_21
0x4002978	        0x488b5d50	            mov rbx, qword [rbp + 0x50] 	       876	pretty.c	WHILE_3	FUNCTION_32
0x400297c	          0x4889df	                            mov rdi, rbx	       876	pretty.c	WHILE_3	FUNCTION_32
0x400297f	    0x4803bda00000	             add rdi, qword [rbp + 0xa0]	       876	pretty.c	WHILE_3	FUNCTION_32
0x4002986	      0xe800000000	                          call 0x400298b	       879	pretty.c	WHILE_3	FUNCTION_32	CALL_1
0x400298b	          0x4889c2	                            mov rdx, rax	       880	pretty.c	WHILE_3	FUNCTION_32
0x400298e	          0x4889c6	                            mov rsi, rax	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002991	            0x31ff	                            xor edi, edi	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x4002993	          0x4829da	                            sub rdx, rbx	       880	pretty.c	WHILE_3	FUNCTION_32
0x4002996	    0x488995a80000	            mov qword [rbp + 0xa8], rdx 	       880	pretty.c	WHILE_3	FUNCTION_32
0x400299d	            0x31d2	                            xor edx, edx	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x400299f	      0xe800000000	                          call 0x40029a4	       882	pretty.c	WHILE_3	FUNCTION_32	CALL_2
0x40029a4	          0x4889c7	                            mov rdi, rax	       883	pretty.c	WHILE_3	FUNCTION_32	CALL_3
0x40029a7	      0xe800000000	                          call 0x40029ac	       883	pretty.c	WHILE_3	FUNCTION_32	CALL_3
0x40029ac	        0x804d1002	                 or byte [rbp + 0x10], 2	       886	pretty.c	WHILE_3	FUNCTION_32
0x40029b0	          0x4829d8	                            sub rax, rbx	       884	pretty.c	WHILE_3	FUNCTION_32
0x40029b3	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	       884	pretty.c	WHILE_3	FUNCTION_32
0x40029ba	      0x410fb65500	                   movzx edx, byte [r13]	       884	pretty.c	WHILE_3	FUNCTION_32
0x40029bf	      0xe91bfeffff	                           jmp 0x40027df	       884	pretty.c	WHILE_3	FUNCTION_32
0x40029c4	          0x4c89f6	                            mov rsi, r14	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x40029c7	    0x4803b5a80000	             add rsi, qword [rbp + 0xa8]	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x40029ce	      0xba00000000	                              mov edx, 0	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x40029d3	          0x4c89e7	                            mov rdi, r12	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x40029d6	      0xbb01000000	                              mov ebx, 1	      1296	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40029db	      0xe800000000	                          call 0x40029e0	      1295	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_56
0x40029e0	      0xe97bf1ffff	                           jmp 0x4001b60	      1296	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x40029e5	    0x4c03b5a80000	             add r14, qword [rbp + 0xa8]	      1298	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_57
0x40029ec	      0x498b6c2408	                mov rbp, qword [r12 + 8]	       825	pretty.c	WHILE_3	FUNCTION_30
0x40029f1	        0x410fb606	                   movzx eax, byte [r14]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40029f5	            0x84c0	                             test al, al	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40029f7	     0xf8427020000	                            je 0x4002c24	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40029fd	            0x3c0a	                             cmp al, 0xa	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x40029ff	     0xf841f020000	                            je 0x4002c24	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a05	      0xb902000000	                              mov ecx, 2	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a0a	    0x48bbfd0f0000	            movabs rbx, 0x2000000000ffd 	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a14	            0xeb35	                           jmp 0x4002a4b	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a16	        0x480fa3d3	                             bt rbx, rdx	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a1a	            0x7344	                           jae 0x4002a60	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a1c	          0x83f901	                              cmp ecx, 1	       830	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_2
0x4002a1f	     0xf84cf000000	                            je 0x4002af4	       830	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_2
0x4002a25	           0xfbef0	                           movsx esi, al	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x4002a28	          0x4c89e7	                            mov rdi, r12	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x4002a2b	      0xe8d0d8ffff	                   call sym.strbuf_addch	       833	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_3
0x4002a30	            0x31c9	                            xor ecx, ecx	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x4002a32	        0x41803e2e	                    cmp byte [r14], 0x2e	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x4002a36	          0x4c89f0	                            mov rax, r14	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x4002a39	            0x742d	                            je 0x4002a68	       834	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3
0x4002a3b	        0x4c8d7001	                      lea r14, [rax + 1]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a3f	         0xfb64001	               movzx eax, byte [rax + 1]	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a43	            0x84c0	                             test al, al	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a45	            0x7436	                            je 0x4002a7d	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a47	            0x3c0a	                             cmp al, 0xa	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a49	            0x7432	                            je 0x4002a7d	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002a4b	            0x89c2	                            mov edx, eax	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a4d	          0x83e2df	                     and edx, 0xffffffdf	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a50	          0x83ea41	                           sub edx, 0x41	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a53	          0x80fa19	                            cmp dl, 0x19	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a56	            0x76c4	                           jbe 0x4002a1c	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a58	          0x8d50d2	                   lea edx, [rax - 0x2e]	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a5b	          0x80fa31	                            cmp dl, 0x31	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a5e	            0x76b6	                           jbe 0x4002a16	       819	pretty.c	WHILE_3	FUNCTION_29
0x4002a60	          0x83c901	                               or ecx, 1	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x4002a63	          0x4c89f0	                            mov rax, r14	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x4002a66	            0xebd3	                           jmp 0x4002a3b	       838	pretty.c	WHILE_3	FUNCTION_30	FOR_1	ELSE_1
0x4002a68	      0x41807e012e	                cmp byte [r14 + 1], 0x2e	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x4002a6d	            0x75cc	                           jne 0x4002a3b	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x4002a6f	        0x4883c001	                              add rax, 1	       836	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x4002a73	        0x8078012e	                cmp byte [rax + 1], 0x2e	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x4002a77	            0x74f6	                            je 0x4002a6f	       835	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	IF_3	WHILE_1
0x4002a79	            0x31c9	                            xor ecx, ecx	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x4002a7b	            0xebbe	                           jmp 0x4002a3b	       832	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1
0x4002a7d	      0x498b742408	                mov rsi, qword [r12 + 8]	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a82	            0x31d2	                            xor edx, edx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a84	          0x4839f5	                            cmp rbp, rsi	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a87	            0x7323	                           jae 0x4002aac	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a89	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a8e	            0xeb0c	                           jmp 0x4002a9c	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a90	        0x4883c201	                              add rdx, 1	       846	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a94	          0x4839cd	                            cmp rbp, rcx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a97	          0x4889ce	                            mov rsi, rcx	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a9a	            0x7410	                            je 0x4002aac	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002a9c	       0xfb64437ff	         movzx eax, byte [rdi + rsi - 1]	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002aa1	        0x488d4eff	                      lea rcx, [rsi - 1]	       844	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002aa5	          0x83e82d	                           sub eax, 0x2d	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002aa8	            0x3c01	                               cmp al, 1	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002aaa	            0x76e4	                           jbe 0x4002a90	       843	pretty.c	WHILE_3	FUNCTION_30	WHILE_2
0x4002aac	          0x4c89e7	                            mov rdi, r12	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002aaf	      0xbb01000000	                              mov ebx, 1	      1299	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002ab4	      0xe800000000	                          call 0x4002ab9	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002ab9	      0xe9a2f0ffff	                           jmp 0x4001b60	       847	pretty.c	WHILE_3	FUNCTION_30	CALL_4
0x4002abe	          0x4c89f6	                            mov rsi, r14	      1301	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_58
0x4002ac1	    0x4803b5b00000	             add rsi, qword [rbp + 0xb0]	      1301	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7	CALL_58
0x4002ac8	            0x31c0	                            xor eax, eax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002aca	        0x4883c9ff	              or rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ace	      0xbb01000000	                              mov ebx, 1	      1302	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002ad3	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ad6	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ad8	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002adb	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ade	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ae1	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002ae5	      0xe800000000	                          call 0x4002aea	       279	strbuf.h	FUNCTION_60	CALL_2
0x4002aea	      0xe971f0ffff	                           jmp 0x4001b60	      1302	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002aef	      0xe800000000	                          call 0x4002af4	      1325	pretty.c	WHILE_3	FUNCTION_39
0x4002af4	      0xbe2d000000	                           mov esi, 0x2d	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002af9	          0x4c89e7	                            mov rdi, r12	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002afc	      0xe8ffd7ffff	                   call sym.strbuf_addch	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002b01	        0x410fb606	                   movzx eax, byte [r14]	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002b05	      0xe91bffffff	                           jmp 0x4002a25	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002b0a	      0x448b442448	            mov r8d, dword [rsp + 0x48] 	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002b0f	        0x8b742450	            mov esi, dword [rsp + 0x50] 	       831	pretty.c	WHILE_3	FUNCTION_30	FOR_1	IF_1	CALL_2
0x4002b13	        0x4983c701	                              add r15, 1	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b17	            0x31ff	                            xor edi, edi	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b19	          0x4531d2	                          xor r10d, r10d	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b1c	          0x4c89f8	                            mov rax, r15	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b1f	      0xba00000000	                              mov edx, 0	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b24	            0xeb17	                           jmp 0x4002b3d	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1308	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26
0x4002b30	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b34	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b38	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b3b	            0x7514	                           jne 0x4002b51	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b3d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b40	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b42	            0x75ec	                           jne 0x4002b30	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b44	           0xfb610	                   movzx edx, byte [rax]	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b47	          0x80fa2c	                            cmp dl, 0x2c	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b4a	            0x745f	                            je 0x4002bab	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b4c	          0x80fa29	                            cmp dl, 0x29	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b4f	            0x7475	                            je 0x4002bc6	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b51	          0x4c89f8	                            mov rax, r15	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b54	      0xba00000000	                              mov edx, 0	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b59	            0xeb12	                           jmp 0x4002b6d	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b5b	       0xf1f440000	                   nop dword [rax + rax]	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b60	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b64	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b68	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b6b	            0x7523	                           jne 0x4002b90	       488	git-compat-util.h	FUNCTION_73	DO_1
0x4002b6d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b70	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b72	            0x75ec	                           jne 0x4002b60	       484	git-compat-util.h	FUNCTION_73	DO_1	IF_1
0x4002b74	           0xfb610	                   movzx edx, byte [rax]	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b77	          0x80fa2c	                            cmp dl, 0x2c	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b7a	            0x7444	                            je 0x4002bc0	      1066	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002b7c	          0x80fa29	                            cmp dl, 0x29	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b7f	            0x750f	                           jne 0x4002b90	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b81	          0x4989c7	                            mov r15, rax	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002b84	      0xbf01000000	                              mov edi, 1	      1293	pretty.c	WHILE_3	FUNCTION_39	SWITCH_7
0x4002b89	      0xbe01000000	                              mov esi, 1	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002b8e	            0xeb8c	                           jmp 0x4002b1c	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002b90	          0x4584d2	                         test r10b, r10b	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002b93	     0xf8595000000	                           jne 0x4002c2e	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002b99	          0x4084ff	                           test dil, dil	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002b9c	     0xf849afcffff	                            je 0x400283c	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002ba2	        0x89742450	             mov dword [rsp + 0x50], esi	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002ba6	      0xe991fcffff	                           jmp 0x400283c	      1313	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	ELSE_3	IF_28
0x4002bab	        0x4c8d7801	                      lea r15, [rax + 1]	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002baf	    0x41ba01000000	                             mov r10d, 1	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002bb5	    0x41b801000000	                              mov r8d, 1	      1311	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	IF_27
0x4002bbb	      0xe95cffffff	                           jmp 0x4002b1c	      1311	pretty.c	WHILE_3	FUNCTION_39	IF_25	IF_26	FOR_3	IF_27
0x4002bc0	        0x4c8d7801	                      lea r15, [rax + 1]	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002bc4	            0xebbe	                           jmp 0x4002b84	      1067	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_2
0x4002bc6	          0x4989c7	                            mov r15, rax	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002bc9	            0xebe4	                           jmp 0x4002baf	      1070	pretty.c	WHILE_3	ELSE_5	ELSE_6	FUNCTION_38	IF_3
0x4002bcb	      0xbe00000000	                              mov esi, 0	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002bd0	          0x4c89e7	                            mov rdi, r12	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002bd3	      0xe800000000	                          call 0x4002bd8	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002bd8	            0x85c0	                           test eax, eax	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002bda	            0x7427	                            je 0x4002c03	      1045	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13	CALL_4
0x4002bdc	    0xc7454c010000	               mov dword [rbp + 0x4c], 1	      1046	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13
0x4002be3	      0xe99cf0ffff	                           jmp 0x4001c84	      1046	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_3	IF_13
0x4002be8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_153
0x4002bea	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_153
0x4002bef	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_153
0x4002bf4	      0xe800000000	                          call 0x4002bf9	        54	gettext.h	FUNCTION_153
0x4002bf9	          0x4889c7	                            mov rdi, rax	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002bfc	            0x31c0	                            xor eax, eax	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002bfe	      0xe800000000	                          call 0x4002c03	       962	pretty.c	WHILE_3	FUNCTION_36	IF_1	CALL_7
0x4002c03	      0xbe00000000	                              mov esi, 0	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002c08	          0x4c89e7	                            mov rdi, r12	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002c0b	      0xe800000000	                          call 0x4002c10	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002c10	            0x85c0	                           test eax, eax	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002c12	     0xf8482efffff	                            je 0x4001b9a	      1047	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14	CALL_5
0x4002c18	    0xc7454c020000	               mov dword [rbp + 0x4c], 2	      1048	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14
0x4002c1f	      0xe960f0ffff	                           jmp 0x4001c84	      1048	pretty.c	WHILE_3	FUNCTION_37	IF_4	IF_10	ELSE_4	IF_14
0x4002c24	          0x4889ee	                            mov rsi, rbp	       825	pretty.c	WHILE_3	FUNCTION_30
0x4002c27	            0x31d2	                            xor edx, edx	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002c29	      0xe97efeffff	                           jmp 0x4002aac	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002c2e	      0x4489442448	             mov dword [rsp + 0x48], r8d	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
0x4002c33	      0xe961ffffff	                           jmp 0x4002b99	       828	pretty.c	WHILE_3	FUNCTION_30	FOR_1
pp_remainder	IF,7:ELSE,2:SWITCH,0:FOR,1:DO,0:WHILE,0:functions,0:CALL,9	266
0x40038d0	            0x4157	                                push r15	      1753	pretty.c	FUNCTION_51
0x40038d2	            0x4156	                                push r14	      1753	pretty.c	FUNCTION_51
0x40038d4	            0x4155	                                push r13	      1753	pretty.c	FUNCTION_51
0x40038d6	            0x4154	                                push r12	      1753	pretty.c	FUNCTION_51
0x40038d8	          0x4989d5	                            mov r13, rdx	      1753	pretty.c	FUNCTION_51
0x40038db	              0x55	                                push rbp	      1753	pretty.c	FUNCTION_51
0x40038dc	              0x53	                                push rbx	      1753	pretty.c	FUNCTION_51
0x40038dd	            0x89cb	                            mov ebx, ecx	      1753	pretty.c	FUNCTION_51
0x40038df	          0x4863c3	                         movsxd rax, ebx	      1732	pretty.c	FUNCTION_49	CALL_1
0x40038e2	        0x4883ec58	                           sub rsp, 0x58	      1753	pretty.c	FUNCTION_51
0x40038e6	          0x4c8b26	                    mov r12, qword [rsi]	      1753	pretty.c	FUNCTION_51
0x40038e9	        0x894c2424	             mov dword [rsp + 0x24], ecx	      1753	pretty.c	FUNCTION_51
0x40038ed	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1753	pretty.c	FUNCTION_51
0x40038f2	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1753	pretty.c	FUNCTION_51
0x40038fb	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      1753	pretty.c	FUNCTION_51
0x4003900	            0x31c9	                            xor ecx, ecx	      1753	pretty.c	FUNCTION_51
0x4003902	      0x4889742408	                mov qword [rsp + 8], rsi	      1753	pretty.c	FUNCTION_51
0x4003907	      0xb901000000	                              mov ecx, 1	      1754	pretty.c	FUNCTION_51
0x400390c	      0x4889442428	             mov qword [rsp + 0x28], rax	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003911	     0xf1f80000000	                         nop dword [rax]	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003918	          0x4c89e0	                            mov rax, r12	      1754	pretty.c	FUNCTION_51
0x400391b	            0x31db	                            xor ebx, ebx	       191	pretty.c	WHILE_3	FUNCTION_8
0x400391d	            0xeb0d	                           jmp 0x400392c	       191	pretty.c	WHILE_3	FUNCTION_8
0x400391f	              0x90	                                     nop	       191	pretty.c	WHILE_3	FUNCTION_8
0x4003920	          0x83c301	                              add ebx, 1	       197	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003923	          0x80fa0a	                             cmp dl, 0xa	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x4003926	     0xf84d4010000	                            je 0x4003b00	       198	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_2
0x400392c	        0x4883c001	                              add rax, 1	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003930	         0xfb650ff	               movzx edx, byte [rax - 1]	       194	pretty.c	WHILE_3	FUNCTION_8	FOR_1
0x4003934	            0x84d2	                             test dl, dl	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003936	            0x75e8	                           jne 0x4003920	       195	pretty.c	WHILE_3	FUNCTION_8	FOR_1	IF_1
0x4003938	          0x4863eb	                         movsxd rbp, ebx	      1758	pretty.c	FUNCTION_51	FOR_1
0x400393b	      0x488b442408	                mov rax, qword [rsp + 8]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003940	            0x85db	                           test ebx, ebx	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x4003942	        0x498d142c	                    lea rdx, [r12 + rbp]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003946	          0x488910	                    mov qword [rax], rdx	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003949	     0xf84bc020000	                            je 0x4003c0b	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x400394f	              0x90	                                     nop	      1760	pretty.c	FUNCTION_51	FOR_1	IF_1
0x4003950	    0x410fb6442cff	         movzx eax, byte [r12 + rbp - 1]	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003956	    0xf68000000000	                      test byte [rax], 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400395d	            0x7421	                            je 0x4003980	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x400395f	        0x4883ed01	                              sub rbp, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003963	          0x83eb01	                              sub ebx, 1	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003966	            0x75e8	                           jne 0x4003950	       517	pretty.c	WHILE_3	FUNCTION_20	WHILE_1
0x4003968	            0x85c9	                           test ecx, ecx	      1764	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x400396a	     0xf85a2000000	                           jne 0x4003a12	      1764	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4003970	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x4003975	          0x833802	                      cmp dword [rax], 2	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x4003978	     0xf848d020000	                            je 0x4003c0b	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x400397e	            0x31ed	                            xor ebp, ebp	      1766	pretty.c	FUNCTION_51	FOR_1	IF_2	IF_4
0x4003980	      0x448b742424	           mov r14d, dword [rsp + 0x24] 	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003985	          0x4c89ef	                            mov rdi, r13	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003988	      0x428d743314	            lea esi, [rbx + r14 + 0x14] 	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x400398d	          0x4863f6	                         movsxd rsi, esi	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003990	      0xe800000000	                          call 0x4003995	      1771	pretty.c	FUNCTION_51	FOR_1	CALL_3
0x4003995	          0x4585f6	                         test r14d, r14d	      1772	pretty.c	FUNCTION_51	FOR_1	IF_5
0x4003998	     0xf857a010000	                           jne 0x4003b18	      1772	pretty.c	FUNCTION_51	FOR_1	IF_5
0x400399e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x40039a3	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x40039a6	            0x85c0	                           test eax, eax	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x40039a8	        0x89442420	             mov dword [rsp + 0x20], eax	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x40039ac	     0xf85a4000000	                           jne 0x4003a56	      1774	pretty.c	FUNCTION_51	FOR_1	ELSE_1	IF_6
0x40039b2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1778	pretty.c	FUNCTION_51	FOR_1	ELSE_2	IF_7
0x40039b7	          0x833807	                      cmp dword [rax], 7	      1778	pretty.c	FUNCTION_51	FOR_1	ELSE_2	IF_7
0x40039ba	     0xf846e020000	                            je 0x4003c2e	      1778	pretty.c	FUNCTION_51	FOR_1	ELSE_2	IF_7
0x40039c0	          0x4889ea	                            mov rdx, rbp	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x40039c3	          0x4c89e6	                            mov rsi, r12	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x40039c6	          0x4c89ef	                            mov rdi, r13	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x40039c9	      0xe800000000	                          call 0x40039ce	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x40039ce	        0x498b4500	                    mov rax, qword [r13]	      1782	pretty.c	FUNCTION_51	FOR_1	ELSE_2	CALL_8
0x40039d2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x40039d5	     0xf850a010000	                           jne 0x4003ae5	       141	strbuf.h	FUNCTION_57
0x40039db	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x40039e0	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_59	CALL_2
0x40039e3	      0xe800000000	                          call 0x40039e8	       228	strbuf.h	FUNCTION_59	CALL_2
0x40039e8	        0x498b5508	                mov rdx, qword [r13 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x40039ec	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x40039f0	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x40039f4	        0x49894d08	                mov qword [r13 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x40039f8	            0x31c9	                            xor ecx, ecx	      1769	pretty.c	FUNCTION_51	FOR_1
0x40039fa	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_59
0x40039fe	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4003a02	        0x498b4508	                mov rax, qword [r13 + 8]	       230	strbuf.h	FUNCTION_59
0x4003a06	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4003a0a	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_59
0x4003a0f	          0x488b10	                    mov rdx, qword [rax]	       230	strbuf.h	FUNCTION_59
0x4003a12	          0x4989d4	                            mov r12, rdx	       230	strbuf.h	FUNCTION_59
0x4003a15	      0xe9fefeffff	                           jmp 0x4003918	       230	strbuf.h	FUNCTION_59
0x4003a1a	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_59
0x4003a20	          0x4c89e6	                            mov rsi, r12	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003a23	          0x4c89fa	                            mov rdx, r15	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003a26	          0x4c89ef	                            mov rdi, r13	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003a29	      0xe800000000	                          call 0x4003a2e	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003a2e	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a32	            0x89e8	                            mov eax, ebp	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a34	        0x4d8d6601	                      lea r12, [r14 + 1]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003a38	              0x99	                                     cdq	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a39	      0xbe20000000	                           mov esi, 0x20	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a3e	          0x4c89ef	                            mov rdi, r13	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a41	            0xf7f9	                                idiv ecx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a43	            0x29d1	                            sub ecx, edx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a45	          0x4863d1	                         movsxd rdx, ecx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a48	      0xe800000000	                          call 0x4003a4d	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003a4d	          0x4c89e0	                            mov rax, r12	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003a50	        0x482b0424	                    sub rax, qword [rsp]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003a54	            0x29c3	                            sub ebx, eax	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003a56	          0x4863c3	                         movsxd rax, ebx	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a59	      0xbe09000000	                              mov esi, 9	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a5e	          0x4c89e7	                            mov rdi, r12	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a61	          0x4889c2	                            mov rdx, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a64	      0x4889442410	             mov qword [rsp + 0x10], rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a69	      0xe800000000	                          call 0x4003a6e	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a6e	          0x4885c0	                           test rax, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a71	          0x4989c6	                            mov r14, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a74	            0x744b	                            je 0x4003ac1	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003a76	          0x4d89f7	                            mov r15, r14	      1676	pretty.c	FUNCTION_47
0x4003a79	            0x31ed	                            xor ebp, ebp	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a7b	      0x4c89642438	             mov qword [rsp + 0x38], r12	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a80	          0x4d29e7	                            sub r15, r12	      1676	pretty.c	FUNCTION_47
0x4003a83	        0x4c892424	                    mov qword [rsp], r12	      1676	pretty.c	FUNCTION_47
0x4003a87	          0x4d85ff	                           test r15, r15	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a8a	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      1676	pretty.c	FUNCTION_47
0x4003a8f	            0x751d	                           jne 0x4003aae	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a91	            0xeb8d	                           jmp 0x4003a20	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a93	       0xf1f440000	                   nop dword [rax + rax]	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003a98	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003a9e	            0x7421	                            je 0x4003ac1	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003aa0	             0x1c5	                            add ebp, eax	      1682	pretty.c	FUNCTION_47	WHILE_1
0x4003aa2	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003aa8	     0xf8472ffffff	                            je 0x4003a20	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003aae	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003ab3	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003ab8	      0xe800000000	                          call 0x4003abd	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003abd	            0x85c0	                           test eax, eax	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003abf	            0x79d7	                           jns 0x4003a98	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003ac1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003ac6	          0x4c89e6	                            mov rsi, r12	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003ac9	          0x4c89ef	                            mov rdi, r13	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003acc	      0xe800000000	                          call 0x4003ad1	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003ad1	     0xf1f80000000	                         nop dword [rax]	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003ad8	        0x498b4500	                    mov rax, qword [r13]	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003adc	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4003adf	     0xf84f6feffff	                            je 0x40039db	       141	strbuf.h	FUNCTION_57
0x4003ae5	        0x498b5508	                mov rdx, qword [r13 + 8]	       141	strbuf.h	FUNCTION_57
0x4003ae9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003aed	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003af0	     0xf85f6feffff	                           jne 0x40039ec	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003af6	      0xe9e0feffff	                           jmp 0x40039db	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003afb	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003b00	          0x4863eb	                         movsxd rbp, ebx	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b03	      0x488b442408	                mov rax, qword [rsp + 8]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b08	        0x498d142c	                    lea rdx, [r12 + rbp]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b0c	          0x488910	                    mov qword [rax], rdx	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b0f	      0xe93cfeffff	                           jmp 0x4003950	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b14	         0xf1f4000	                         nop dword [rax]	      1758	pretty.c	FUNCTION_51	FOR_1
0x4003b18	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003b1d	      0xbe20000000	                           mov esi, 0x20	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003b22	          0x4c89ef	                            mov rdi, r13	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003b25	      0xe800000000	                          call 0x4003b2a	      1732	pretty.c	FUNCTION_49	CALL_1
0x4003b2a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b2f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b32	            0x85c0	                           test eax, eax	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b34	        0x89442420	             mov dword [rsp + 0x20], eax	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b38	     0xf8482feffff	                            je 0x40039c0	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b3e	            0x6690	                                     nop	      1733	pretty.c	FUNCTION_49	IF_1
0x4003b40	          0x4863c3	                         movsxd rax, ebx	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b43	      0xbe09000000	                              mov esi, 9	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b48	          0x4c89e7	                            mov rdi, r12	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b4b	          0x4889c2	                            mov rdx, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b4e	      0x4889442410	             mov qword [rsp + 0x10], rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b53	      0xe800000000	                          call 0x4003b58	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b58	          0x4885c0	                           test rax, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b5b	          0x4989c6	                            mov r14, rax	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b5e	     0xf845dffffff	                            je 0x4003ac1	      1692	pretty.c	FUNCTION_48	WHILE_1	CALL_1
0x4003b64	          0x4d89f7	                            mov r15, r14	      1676	pretty.c	FUNCTION_47
0x4003b67	            0x31ed	                            xor ebp, ebp	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b69	      0x4c89642430	             mov qword [rsp + 0x30], r12	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b6e	          0x4d29e7	                            sub r15, r12	      1676	pretty.c	FUNCTION_47
0x4003b71	        0x4c892424	                    mov qword [rsp], r12	      1676	pretty.c	FUNCTION_47
0x4003b75	          0x4d85ff	                           test r15, r15	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b78	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      1676	pretty.c	FUNCTION_47
0x4003b7d	            0x751f	                           jne 0x4003b9e	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b7f	            0xeb4f	                           jmp 0x4003bd0	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b81	     0xf1f80000000	                         nop dword [rax]	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b88	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003b8e	     0xf842dffffff	                            je 0x4003ac1	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003b94	             0x1c5	                            add ebp, eax	      1682	pretty.c	FUNCTION_47	WHILE_1
0x4003b96	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b9c	            0x7432	                            je 0x4003bd0	      1678	pretty.c	FUNCTION_47	WHILE_1
0x4003b9e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003ba3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003ba8	      0xe800000000	                          call 0x4003bad	      1679	pretty.c	FUNCTION_47	WHILE_1	CALL_1
0x4003bad	            0x85c0	                           test eax, eax	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003baf	            0x79d7	                           jns 0x4003b88	      1680	pretty.c	FUNCTION_47	WHILE_1	IF_1
0x4003bb1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bb6	          0x4c89e6	                            mov rsi, r12	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bb9	          0x4c89ef	                            mov rdi, r13	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bbc	      0xe800000000	                          call 0x4003bc1	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bc1	      0xe912ffffff	                           jmp 0x4003ad8	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1720	pretty.c	FUNCTION_48	CALL_5
0x4003bd0	          0x4c89e6	                            mov rsi, r12	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003bd3	          0x4c89fa	                            mov rdx, r15	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003bd6	          0x4c89ef	                            mov rdi, r13	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003bd9	      0xe800000000	                          call 0x4003bde	      1705	pretty.c	FUNCTION_48	WHILE_1	CALL_3
0x4003bde	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003be2	            0x89e8	                            mov eax, ebp	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003be4	        0x4d8d6601	                      lea r12, [r14 + 1]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003be8	              0x99	                                     cdq	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003be9	      0xbe20000000	                           mov esi, 0x20	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bee	          0x4c89ef	                            mov rdi, r13	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bf1	            0xf7f9	                                idiv ecx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bf3	            0x29d1	                            sub ecx, edx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bf5	          0x4863d1	                         movsxd rdx, ecx	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bf8	      0xe800000000	                          call 0x4003bfd	      1708	pretty.c	FUNCTION_48	WHILE_1	CALL_4
0x4003bfd	          0x4c89e0	                            mov rax, r12	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003c00	        0x482b0424	                    sub rax, qword [rsp]	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003c04	            0x29c3	                            sub ebx, eax	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003c06	      0xe935ffffff	                           jmp 0x4003b40	      1711	pretty.c	FUNCTION_48	WHILE_1
0x4003c0b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1786	pretty.c	FUNCTION_51
0x4003c10	    0x644833042528	                xor rax, qword fs:[0x28]	      1786	pretty.c	FUNCTION_51
0x4003c19	     0xf8597000000	                           jne 0x4003cb6	      1786	pretty.c	FUNCTION_51
0x4003c1f	        0x4883c458	                           add rsp, 0x58	      1786	pretty.c	FUNCTION_51
0x4003c23	              0x5b	                                 pop rbx	      1786	pretty.c	FUNCTION_51
0x4003c24	              0x5d	                                 pop rbp	      1786	pretty.c	FUNCTION_51
0x4003c25	            0x415c	                                 pop r12	      1786	pretty.c	FUNCTION_51
0x4003c27	            0x415d	                                 pop r13	      1786	pretty.c	FUNCTION_51
0x4003c29	            0x415e	                                 pop r14	      1786	pretty.c	FUNCTION_51
0x4003c2b	            0x415f	                                 pop r15	      1786	pretty.c	FUNCTION_51
0x4003c2d	              0xc3	                                     ret	      1786	pretty.c	FUNCTION_51
0x4003c2e	          0x83fb04	                              cmp ebx, 4	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c31	     0xf8e89fdffff	                           jle 0x40039c0	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c37	      0x41803c243e	                    cmp byte [r12], 0x3e	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c3c	            0x7573	                           jne 0x4003cb1	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c3e	      0x498d442401	                      lea rax, [r12 + 1]	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c43	       0xf1f440000	                   nop dword [rax + rax]	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c48	          0x4889c7	                            mov rdi, rax	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c4b	        0x4883c001	                              add rax, 1	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c4f	        0x8078ff3e	                cmp byte [rax - 1], 0x3e	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c53	            0x74f3	                            je 0x4003c48	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003c55	      0xbe00000000	                              mov esi, 0	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c5a	      0xe800000000	                          call 0x4003c5f	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c5f	            0x85c0	                           test eax, eax	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c61	     0xf8459fdffff	                            je 0x40039c0	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c67	        0x498b4500	                    mov rax, qword [r13]	      1746	pretty.c	FUNCTION_50	CALL_1
0x4003c6b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_57
0x4003c6e	            0x742e	                            je 0x4003c9e	       141	strbuf.h	FUNCTION_57
0x4003c70	        0x498b5508	                mov rdx, qword [r13 + 8]	       141	strbuf.h	FUNCTION_57
0x4003c74	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003c78	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003c7b	            0x7421	                            je 0x4003c9e	       227	strbuf.h	FUNCTION_59	IF_1	CALL_1
0x4003c7d	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       229	strbuf.h	FUNCTION_59
0x4003c81	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_59
0x4003c85	        0x49894d08	                mov qword [r13 + 8], rcx	       229	strbuf.h	FUNCTION_59
0x4003c89	        0xc604103e	              mov byte [rax + rdx], 0x3e	       229	strbuf.h	FUNCTION_59
0x4003c8d	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	       230	strbuf.h	FUNCTION_59
0x4003c91	        0x498b4508	                mov rax, qword [r13 + 8]	       230	strbuf.h	FUNCTION_59
0x4003c95	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_59
0x4003c99	      0xe922fdffff	                           jmp 0x40039c0	       230	strbuf.h	FUNCTION_59
0x4003c9e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003ca3	          0x4c89ef	                            mov rdi, r13	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003ca6	      0xe800000000	                          call 0x4003cab	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003cab	        0x498b5508	                mov rdx, qword [r13 + 8]	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003caf	            0xebcc	                           jmp 0x4003c7d	       228	strbuf.h	FUNCTION_59	CALL_2
0x4003cb1	          0x4c89e7	                            mov rdi, r12	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003cb4	            0xeb9f	                           jmp 0x4003c55	      1027	string2.h	FUNCTION_142	WHILE_1
0x4003cb6	      0xe800000000	                          call 0x4003cbb	      1786	pretty.c	FUNCTION_51
