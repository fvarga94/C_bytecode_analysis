diffcore_order	SWITCH,0:WHILE,0:CALL,2:FOR,2:ELSE,0:DO,0:IF,1:functions,0	237
0x4000370	            0x4157	                                push r15	       115	diffcore-order.c	FUNCTION_6
0x4000372	            0x4156	                                push r14	       115	diffcore-order.c	FUNCTION_6
0x4000374	            0x4155	                                push r13	       115	diffcore-order.c	FUNCTION_6
0x4000376	            0x4154	                                push r12	       115	diffcore-order.c	FUNCTION_6
0x4000378	              0x55	                                push rbp	       115	diffcore-order.c	FUNCTION_6
0x4000379	              0x53	                                push rbx	       115	diffcore-order.c	FUNCTION_6
0x400037a	        0x4883ec38	                           sub rsp, 0x38	       115	diffcore-order.c	FUNCTION_6
0x400037e	    0x64488b042528	                mov rax, qword fs:[0x28]	       115	diffcore-order.c	FUNCTION_6
0x4000387	      0x4889442428	             mov qword [rsp + 0x28], rax	       115	diffcore-order.c	FUNCTION_6
0x400038c	            0x31c0	                            xor eax, eax	       115	diffcore-order.c	FUNCTION_6
0x400038e	    0x8b0500000000	            mov eax, dword [0x04000394] 	       120	diffcore-order.c	FUNCTION_6	IF_1
0x4000394	            0x85c0	                           test eax, eax	       120	diffcore-order.c	FUNCTION_6	IF_1
0x4000396	     0xf84e5010000	                            je 0x4000581	       120	diffcore-order.c	FUNCTION_6	IF_1
0x400039c	          0x4863d0	                         movsxd rdx, eax	       123	diffcore-order.c	FUNCTION_6
0x400039f	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_21	IF_1
0x40003a9	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_21	IF_1
0x40003ac	     0xf8766030000	                            ja 0x4000718	       795	git-compat-util.h	FUNCTION_21	IF_1
0x40003b2	        0x48c1e204	                              shl rdx, 4	       123	diffcore-order.c	FUNCTION_6
0x40003b6	          0x4889fb	                            mov rbx, rdi	       123	diffcore-order.c	FUNCTION_6
0x40003b9	          0x4889d7	                            mov rdi, rdx	       123	diffcore-order.c	FUNCTION_6
0x40003bc	      0xe800000000	                          call 0x40003c1	       123	diffcore-order.c	FUNCTION_6
0x40003c1	          0x4889c5	                            mov rbp, rax	       123	diffcore-order.c	FUNCTION_6
0x40003c4	    0x8b0500000000	            mov eax, dword [0x040003ca] 	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003ca	          0x83f800	                              cmp eax, 0	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003cd	        0x8944240c	              mov dword [rsp + 0xc], eax	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003d1	     0xf8e19020000	                           jle 0x40005f0	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003d7	    0x488b35000000	            mov rsi, qword [0x040003de] 	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003de	          0x83e801	                              sub eax, 1	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003e1	    0x488d0cc50800	                    lea rcx, [rax*8 + 8]	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003e9	            0x31c0	                            xor eax, eax	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003eb	       0xf1f440000	                   nop dword [rax + rax]	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x40003f0	        0x488b1406	              mov rdx, qword [rsi + rax]	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x40003f4	      0x4889544500	            mov qword [rbp + rax*2], rdx	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x40003f9	        0x4883c008	                              add rax, 8	       125	diffcore-order.c	FUNCTION_6	FOR_1
0x40003fd	          0x4839c1	                            cmp rcx, rax	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000400	            0x75ee	                           jne 0x40003f0	       124	diffcore-order.c	FUNCTION_6	FOR_1
0x4000402	    0x48833d000000	               cmp qword [0x0400040a], 0	        19	diffcore-order.c	FUNCTION_1	IF_1
0x400040a	    0x48c744241000	               mov qword [rsp + 0x10], 0	        14	diffcore-order.c	FUNCTION_1
0x4000413	    0x48c744241800	               mov qword [rsp + 0x18], 0	        14	diffcore-order.c	FUNCTION_1
0x400041c	    0x48c744242000	               mov qword [rsp + 0x20], 0	        14	diffcore-order.c	FUNCTION_1
0x4000425	     0xf84d5010000	                            je 0x4000600	        19	diffcore-order.c	FUNCTION_1	IF_1
0x400042b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400042f	        0x4c8d7508	                      lea r14, [rbp + 8]	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000433	    0xc70424000000	                      mov dword [rsp], 0	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400043a	            0x85c0	                           test eax, eax	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400043c	     0xf8ee4000000	                           jle 0x4000526	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000448	          0x8b0424	                    mov eax, dword [rsp]	       101	diffcore-order.c	FUNCTION_4	FOR_1
0x400044b	          0x418906	                    mov dword [r14], eax	       101	diffcore-order.c	FUNCTION_4	FOR_1
0x400044e	        0x498b46f8	                mov rax, qword [r14 - 8]	       111	diffcore-order.c	FUNCTION_5
0x4000452	        0x488b4008	                mov rax, qword [rax + 8]	       111	diffcore-order.c	FUNCTION_5
0x4000456	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       111	diffcore-order.c	FUNCTION_5
0x400045a	    0x8b0500000000	            mov eax, dword [0x04000460] 	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000460	            0x85c0	                           test eax, eax	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000462	     0xf8ea5000000	                           jle 0x400050d	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000468	    0x4c8b3d000000	            mov r15, qword [0x0400046f] 	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x400046f	            0x31db	                            xor ebx, ebx	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000471	          0x4531e4	                          xor r12d, r12d	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x4000474	    0x4981ff000000	                              cmp r15, 0	       165	strbuf.h	FUNCTION_36	IF_2
0x400047b	    0x48c705000000	               mov qword [0x04000486], 0	       164	strbuf.h	FUNCTION_36
0x4000486	     0xf843c010000	                            je 0x40005c8	       165	strbuf.h	FUNCTION_36	IF_2
0x400048c	        0x41c60700	                       mov byte [r15], 0	       166	strbuf.h	FUNCTION_36	IF_2
0x4000490	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_38	CALL_2
0x4000493	      0xe800000000	                          call 0x4000498	       279	strbuf.h	FUNCTION_38	CALL_2
0x4000498	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_38	CALL_2
0x400049b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_38	CALL_2
0x400049e	      0xbf00000000	                              mov edi, 0	       279	strbuf.h	FUNCTION_38	CALL_2
0x40004a3	      0xe800000000	                          call 0x40004a8	       279	strbuf.h	FUNCTION_38	CALL_2
0x40004a8	    0x4c8b3d000000	            mov r15, qword [0x040004af] 	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004af	        0x41803f00	                       cmp byte [r15], 0	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004b3	            0x753c	                           jne 0x40004f1	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004b5	      0xe9ee000000	                           jmp 0x40005a8	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004ba	    0x660f1f440000	                    nop word [rax + rax]	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004c0	    0x4c8b3d000000	            mov r15, qword [0x040004c7] 	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40004c7	      0xbe2f000000	                           mov esi, 0x2f	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40004cc	          0x4c89ff	                            mov rdi, r15	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40004cf	      0xe800000000	                          call 0x40004d4	        72	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	CALL_3
0x40004d4	          0x4885c0	                           test rax, rax	        73	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_2
0x40004d7	     0xf84cb000000	                            je 0x40005a8	        73	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_2
0x40004dd	          0xc60000	                       mov byte [rax], 0	        75	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004e0	    0x4c8b3d000000	            mov r15, qword [0x040004e7] 	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004e7	        0x41803f00	                       cmp byte [r15], 0	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004eb	     0xf84b7000000	                            je 0x40005a8	        68	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1
0x40004f1	    0x488b05000000	            mov rax, qword [0x040004f8] 	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40004f8	            0x31d2	                            xor edx, edx	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40004fa	          0x4c89fe	                            mov rsi, r15	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x40004fd	        0x488b3c18	              mov rdi, qword [rax + rbx]	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x4000501	      0xe800000000	                          call 0x4000506	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x4000506	            0x85c0	                           test eax, eax	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x4000508	            0x75b6	                           jne 0x40004c0	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x400050a	          0x4489e0	                           mov eax, r12d	        70	diffcore-order.c	FUNCTION_2	FOR_1	WHILE_1	IF_1	CALL_2
0x400050d	        0x83042401	                      add dword [rsp], 1	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000511	        0x41894604	                mov dword [r14 + 4], eax	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x4000515	        0x4983c610	                           add r14, 0x10	       102	diffcore-order.c	FUNCTION_4	FOR_1	CALL_3
0x4000519	          0x8b0424	                    mov eax, dword [rsp]	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x400051c	        0x3b44240c	              cmp eax, dword [rsp + 0xc]	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000520	     0xf8522ffffff	                           jne 0x4000448	       100	diffcore-order.c	FUNCTION_4	FOR_1
0x4000526	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	       104	diffcore-order.c	FUNCTION_4
0x400052b	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_31	IF_1
0x400052f	            0x7412	                            je 0x4000543	      1048	git-compat-util.h	FUNCTION_31	IF_1
0x4000531	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_31	IF_1
0x4000536	      0xba10000000	                           mov edx, 0x10	      1049	git-compat-util.h	FUNCTION_31	IF_1
0x400053b	          0x4889ef	                            mov rdi, rbp	      1049	git-compat-util.h	FUNCTION_31	IF_1
0x400053e	      0xe800000000	                          call 0x4000543	      1049	git-compat-util.h	FUNCTION_31	IF_1
0x4000543	    0x8b0500000000	            mov eax, dword [0x04000549] 	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000549	            0x85c0	                           test eax, eax	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x400054b	            0x7e2c	                           jle 0x4000579	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x400054d	          0x83e801	                              sub eax, 1	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000550	    0x488d34c50800	                    lea rsi, [rax*8 + 8]	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000558	            0x31c0	                            xor eax, eax	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x400055a	    0x660f1f440000	                    nop word [rax + rax]	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000560	      0x488b4c4500	            mov rcx, qword [rbp + rax*2]	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000565	    0x488b15000000	            mov rdx, qword [0x0400056c] 	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x400056c	        0x48890c02	              mov qword [rdx + rax], rcx	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000570	        0x4883c008	                              add rax, 8	       128	diffcore-order.c	FUNCTION_6	FOR_2
0x4000574	          0x4839c6	                            cmp rsi, rax	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000577	            0x75e7	                           jne 0x4000560	       127	diffcore-order.c	FUNCTION_6	FOR_2
0x4000579	          0x4889ef	                            mov rdi, rbp	       129	diffcore-order.c	FUNCTION_6	CALL_2
0x400057c	      0xe800000000	                          call 0x4000581	       129	diffcore-order.c	FUNCTION_6	CALL_2
0x4000581	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       131	diffcore-order.c	FUNCTION_6
0x4000586	    0x644833042528	                xor rax, qword fs:[0x28]	       131	diffcore-order.c	FUNCTION_6
0x400058f	     0xf8594010000	                           jne 0x4000729	       131	diffcore-order.c	FUNCTION_6
0x4000595	        0x4883c438	                           add rsp, 0x38	       131	diffcore-order.c	FUNCTION_6
0x4000599	              0x5b	                                 pop rbx	       131	diffcore-order.c	FUNCTION_6
0x400059a	              0x5d	                                 pop rbp	       131	diffcore-order.c	FUNCTION_6
0x400059b	            0x415c	                                 pop r12	       131	diffcore-order.c	FUNCTION_6
0x400059d	            0x415d	                                 pop r13	       131	diffcore-order.c	FUNCTION_6
0x400059f	            0x415e	                                 pop r14	       131	diffcore-order.c	FUNCTION_6
0x40005a1	            0x415f	                                 pop r15	       131	diffcore-order.c	FUNCTION_6
0x40005a3	              0xc3	                                     ret	       131	diffcore-order.c	FUNCTION_6
0x40005a4	         0xf1f4000	                         nop dword [rax]	       131	diffcore-order.c	FUNCTION_6
0x40005a8	    0x8b0500000000	            mov eax, dword [0x040005ae] 	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005ae	        0x4183c401	                             add r12d, 1	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005b2	        0x4883c308	                              add rbx, 8	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005b6	          0x4139c4	                           cmp r12d, eax	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005b9	     0xf8cb5feffff	                            jl 0x4000474	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005bf	      0xe949ffffff	                           jmp 0x400050d	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005c4	         0xf1f4000	                         nop dword [rax]	        65	diffcore-order.c	FUNCTION_2	FOR_1
0x40005c8	    0x803d00000000	                cmp byte [0x040005cf], 0	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005cf	     0xf84bbfeffff	                            je 0x4000490	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005d5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005da	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005df	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005e4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005e9	      0xe800000000	                          call 0x40005ee	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005ee	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_36	CALL_2
0x40005f0	     0xf8483ffffff	                            je 0x4000579	        96	diffcore-order.c	FUNCTION_4	IF_1
0x40005f6	      0xe907feffff	                           jmp 0x4000402	        96	diffcore-order.c	FUNCTION_4	IF_1
0x40005fb	       0xf1f440000	                   nop dword [rax + rax]	        96	diffcore-order.c	FUNCTION_4	IF_1
0x4000600	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x4000605	            0x31d2	                            xor edx, edx	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x4000607	          0x4889de	                            mov rsi, rbx	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x400060a	      0xe800000000	                          call 0x400060f	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x400060f	          0x4885c0	                           test rax, rax	        23	diffcore-order.c	FUNCTION_1	IF_2
0x4000612	          0x4989c4	                            mov r12, rax	        22	diffcore-order.c	FUNCTION_1	CALL_1
0x4000615	     0xf88c3000000	                            js 0x40006de	        23	diffcore-order.c	FUNCTION_1	IF_2
0x400061b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x4000620	            0x31f6	                            xor esi, esi	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x4000622	    0x41bf01000000	                             mov r15d, 1	        26	diffcore-order.c	FUNCTION_1
0x4000628	      0xe800000000	                          call 0x400062d	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x400062d	          0x4989c5	                            mov r13, rax	        25	diffcore-order.c	FUNCTION_1	CALL_4
0x4000630	          0x4901c4	                            add r12, rax	        26	diffcore-order.c	FUNCTION_1
0x4000633	          0x4531f6	                          xor r14d, r14d	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000636	          0x4d39e5	                            cmp r13, r12	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x4000639	          0x4c89ef	                            mov rdi, r13	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400063c	            0x7350	                           jae 0x400068e	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x400063e	          0x4c39e7	                            cmp rdi, r12	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000641	           0xfb607	                   movzx eax, byte [rdi]	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000644	          0x4889fb	                            mov rbx, rdi	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000647	            0x7318	                           jae 0x4000661	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000649	            0x3c0a	                             cmp al, 0xa	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400064b	            0x7508	                           jne 0x4000655	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400064d	            0xeb59	                           jmp 0x40006a8	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400064f	              0x90	                                     nop	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000650	          0x803b0a	                     cmp byte [rbx], 0xa	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000653	            0x744f	                            je 0x40006a4	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000655	        0x4883c301	                              add rbx, 1	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000659	          0x4939dc	                            cmp r12, rbx	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400065c	            0x75f2	                           jne 0x4000650	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x400065e	          0x4c89e3	                            mov rbx, r12	        33	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	FOR_2
0x4000661	            0x3c0a	                             cmp al, 0xa	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000663	            0x7429	                            je 0x400068e	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000665	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000667	            0x7425	                            je 0x400068e	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x4000669	        0x4183ff01	                             cmp r15d, 1	        38	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x400066d	            0x7416	                            je 0x4000685	        38	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_1	IF_4
0x400066f	          0x803b0a	                     cmp byte [rbx], 0xa	        41	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000672	            0x7544	                           jne 0x40006b8	        41	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000674	    0x488b15000000	            mov rdx, qword [0x0400067b] 	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400067b	          0x4963c6	                        movsxd rax, r14d	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x400067e	          0xc60300	                       mov byte [rbx], 0	        42	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000681	        0x48893cc2	            mov qword [rdx + rax*8], rdi	        43	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	IF_5
0x4000685	        0x4183c601	                             add r14d, 1	        47	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2
0x4000689	          0x4939dc	                            cmp r12, rbx	        49	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x400068c	            0x771a	                            ja 0x40006a8	        49	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x400068e	        0x4183ff01	                             cmp r15d, 1	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000692	            0x7468	                            je 0x40006fc	        53	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000694	        0x4183ff02	                             cmp r15d, 2	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x4000698	     0xf848dfdffff	                            je 0x400042b	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x400069e	        0x4183c701	                             add r15d, 1	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x40006a2	            0xeb8f	                           jmp 0x4000633	        28	diffcore-order.c	FUNCTION_1	FOR_1
0x40006a4	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40006a6	            0x75c1	                           jne 0x4000669	        36	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_3
0x40006a8	        0x488d7b01	                      lea rdi, [rbx + 1]	        50	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	IF_6
0x40006ac	          0x4939fc	                            cmp r12, rdi	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x40006af	            0x778d	                            ja 0x400063e	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x40006b1	            0xebdb	                           jmp 0x400068e	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x40006b3	       0xf1f440000	                   nop dword [rax + rax]	        31	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1
0x40006b8	    0x488b15000000	            mov rdx, qword [0x040006bf] 	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006bf	          0x4963c6	                        movsxd rax, r14d	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006c2	          0x4889de	                            mov rsi, rbx	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006c5	          0x4829fe	                            sub rsi, rdi	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006c8	        0x488d14c2	                  lea rdx, [rdx + rax*8]	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006cc	        0x48891424	                    mov qword [rsp], rdx	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006d0	      0xe800000000	                          call 0x40006d5	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006d5	        0x488b1424	                    mov rdx, qword [rsp]	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006d9	          0x488902	                    mov qword [rdx], rax	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006dc	            0xeba7	                           jmp 0x4000685	        45	diffcore-order.c	FUNCTION_1	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x40006de	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_47
0x40006e3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_47
0x40006e5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_47
0x40006ea	      0xe800000000	                          call 0x40006ef	        54	gettext.h	FUNCTION_47
0x40006ef	          0x4889de	                            mov rsi, rbx	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40006f2	          0x4889c7	                            mov rdi, rax	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40006f5	            0x31c0	                            xor eax, eax	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40006f7	      0xe800000000	                          call 0x40006fc	        24	diffcore-order.c	FUNCTION_1	CALL_3
0x40006fc	          0x4963fe	                        movsxd rdi, r14d	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x40006ff	    0x448935000000	           mov dword [0x04000706], r14d 	        54	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000706	        0x48c1e703	                              shl rdi, 3	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x400070a	      0xe800000000	                          call 0x400070f	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x400070f	    0x488905000000	            mov qword [0x04000716], rax 	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000716	            0xeb86	                           jmp 0x400069e	        55	diffcore-order.c	FUNCTION_1	FOR_1	IF_7
0x4000718	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x400071d	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x4000722	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x4000724	      0xe800000000	                          call 0x4000729	       796	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x4000729	      0xe800000000	                  call section_end..text	       131	diffcore-order.c	FUNCTION_6
compare_objs_order	SWITCH,0:WHILE,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,1:functions,0	10
0x4000040	          0x8b470c	              mov eax, dword [rdi + 0xc]	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000043	          0x8b560c	              mov edx, dword [rsi + 0xc]	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000046	            0x39d0	                            cmp eax, edx	        86	diffcore-order.c	FUNCTION_3	IF_1
0x4000048	            0x7406	                            je 0x4000050	        86	diffcore-order.c	FUNCTION_3	IF_1
0x400004a	            0x29d0	                            sub eax, edx	        87	diffcore-order.c	FUNCTION_3	IF_1
0x400004c	              0xc3	                                     ret	        87	diffcore-order.c	FUNCTION_3	IF_1
0x400004d	           0xf1f00	                         nop dword [rax]	        87	diffcore-order.c	FUNCTION_3	IF_1
0x4000050	          0x8b4708	                mov eax, dword [rdi + 8]	        88	diffcore-order.c	FUNCTION_3
0x4000053	          0x2b4608	                sub eax, dword [rsi + 8]	        88	diffcore-order.c	FUNCTION_3
0x4000056	              0xc3	                                     ret	        89	diffcore-order.c	FUNCTION_3
